["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/fp/convert.js"],"~:js","shadow$provide.module$node_modules$lodash$fp$convert=function(global,process,require,module,exports,shadow$shims){var baseConvert=require(\"module$node_modules$lodash$fp$_baseConvert\"),util=require(\"module$node_modules$lodash$fp$_util\");module.exports=function(name,func,options){return baseConvert(util,name,func,options)}}","~:source","shadow$provide[\"module$node_modules$lodash$fp$convert\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseConvert = require('./_baseConvert'),\n    util = require('./_util');\n\n/**\n * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last\n * version with conversion `options` applied. If `name` is an object its methods\n * will be converted.\n *\n * @param {string} name The name of the function to wrap.\n * @param {Function} [func] The function to wrap.\n * @param {Object} [options] The options object. See `baseConvert` for more details.\n * @returns {Function|Object} Returns the converted function or object.\n */\nfunction convert(name, func, options) {\n  return baseConvert(util, name, func, options);\n}\n\nmodule.exports = convert;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$fp$_util","~$shadow.js","~$module$node_modules$lodash$fp$_baseConvert"]],"~:properties",["^5",[]],"~:compiled-at",1537360506129,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$fp$convert.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IACnHC,YAAcJ,OAAA,CAAQ,4CAAR,CADqG,CAEnHK,KAAOL,OAAA,CAAQ,qCAAR,CAgBXC,OAAAC,QAAA,CAJAI,QAAgB,CAACC,IAAD,CAAOC,IAAP,CAAaC,OAAb,CAAsB,CACpC,MAAOL,YAAA,CAAYC,IAAZ,CAAkBE,IAAlB,CAAwBC,IAAxB,CAA8BC,OAA9B,CAD6B,CAdiF;\",\n\"sources\":[\"node_modules/lodash/fp/convert.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$fp$convert\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar baseConvert = require('./_baseConvert'),\\n    util = require('./_util');\\n\\n/**\\n * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last\\n * version with conversion `options` applied. If `name` is an object its methods\\n * will be converted.\\n *\\n * @param {string} name The name of the function to wrap.\\n * @param {Function} [func] The function to wrap.\\n * @param {Object} [options] The options object. See `baseConvert` for more details.\\n * @returns {Function|Object} Returns the converted function or object.\\n */\\nfunction convert(name, func, options) {\\n  return baseConvert(util, name, func, options);\\n}\\n\\nmodule.exports = convert;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"baseConvert\",\"util\",\"convert\",\"name\",\"func\",\"options\"]\n}\n"]