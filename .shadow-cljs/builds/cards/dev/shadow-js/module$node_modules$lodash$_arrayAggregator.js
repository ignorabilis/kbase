["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_arrayAggregator.js"],"~:js","shadow$provide.module$node_modules$lodash$_arrayAggregator=function(global,process,require,module,exports,shadow$shims){module.exports=function(array,setter,iteratee,accumulator){for(var index=-1,length=null==array?0:array.length;++index<length;){var value=array[index];setter(accumulator,value,iteratee(value),array)}return accumulator}}","~:source","shadow$provide[\"module$node_modules$lodash$_arrayAggregator\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1537360506090,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_arrayAggregator.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAsB7HF,MAAAC,QAAA,CAXAE,QAAwB,CAACC,KAAD,CAAQC,MAAR,CAAgBC,QAAhB,CAA0BC,WAA1B,CAAuC,CAI7D,IAJ6D,IACzDC,MAAS,EADgD,CAEzDC,OAAkB,IAAT,EAAAL,KAAA,CAAgB,CAAhB,CAAoBA,KAAAK,OAEjC,CAAO,EAAED,KAAT,CAAiBC,MAAjB,CAAA,CAAyB,CACvB,IAAIC,MAAQN,KAAA,CAAMI,KAAN,CACZH,OAAA,CAAOE,WAAP,CAAoBG,KAApB,CAA2BJ,QAAA,CAASI,KAAT,CAA3B,CAA4CN,KAA5C,CAFuB,CAIzB,MAAOG,YARsD,CAX8D;\",\n\"sources\":[\"node_modules/lodash/_arrayAggregator.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_arrayAggregator\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * A specialized version of `baseAggregator` for arrays.\\n *\\n * @private\\n * @param {Array} [array] The array to iterate over.\\n * @param {Function} setter The function to set `accumulator` values.\\n * @param {Function} iteratee The iteratee to transform keys.\\n * @param {Object} accumulator The initial aggregated object.\\n * @returns {Function} Returns `accumulator`.\\n */\\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\\n  var index = -1,\\n      length = array == null ? 0 : array.length;\\n\\n  while (++index < length) {\\n    var value = array[index];\\n    setter(accumulator, value, iteratee(value), array);\\n  }\\n  return accumulator;\\n}\\n\\nmodule.exports = arrayAggregator;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"arrayAggregator\",\"array\",\"setter\",\"iteratee\",\"accumulator\",\"index\",\"length\",\"value\"]\n}\n"]