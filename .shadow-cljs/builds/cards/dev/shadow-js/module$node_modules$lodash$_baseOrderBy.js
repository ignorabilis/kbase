["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseOrderBy.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseOrderBy=function(global,process,require,module,exports,shadow$shims){var arrayMap=require(\"module$node_modules$lodash$_arrayMap\"),baseIteratee=require(\"module$node_modules$lodash$_baseIteratee\"),baseMap=require(\"module$node_modules$lodash$_baseMap\"),baseSortBy=require(\"module$node_modules$lodash$_baseSortBy\"),baseUnary=require(\"module$node_modules$lodash$_baseUnary\"),compareMultiple=require(\"module$node_modules$lodash$_compareMultiple\"),identity=require(\"module$node_modules$lodash$identity\");\nmodule.exports=function(collection$jscomp$0,iteratees,orders){var index=-1;iteratees=arrayMap(iteratees.length?iteratees:[identity],baseUnary(baseIteratee));collection$jscomp$0=baseMap(collection$jscomp$0,function(value,key,collection){return{criteria:arrayMap(iteratees,function(iteratee){return iteratee(value)}),index:++index,value:value}});return baseSortBy(collection$jscomp$0,function(object,other){return compareMultiple(object,other,orders)})}}","~:source","shadow$provide[\"module$node_modules$lodash$_baseOrderBy\"] = function(global,process,require,module,exports,shadow$shims) {\nvar arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseMap","~$module$node_modules$lodash$_baseUnary","~$shadow.js","~$module$node_modules$lodash$identity","~$module$node_modules$lodash$_baseIteratee","~$module$node_modules$lodash$_compareMultiple","~$module$node_modules$lodash$_baseSortBy","~$module$node_modules$lodash$_arrayMap"]],"~:properties",["^5",["index","value","criteria"]],"~:compiled-at",1537360506138,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseOrderBy.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IACrHC,SAAWJ,OAAA,CAAQ,sCAAR,CAD0G,CAErHK,aAAeL,OAAA,CAAQ,0CAAR,CAFsG,CAGrHM,QAAUN,OAAA,CAAQ,qCAAR,CAH2G,CAIrHO,WAAaP,OAAA,CAAQ,wCAAR,CAJwG,CAKrHQ,UAAYR,OAAA,CAAQ,uCAAR,CALyG,CAMrHS,gBAAkBT,OAAA,CAAQ,6CAAR,CANmG,CAOrHU,SAAWV,OAAA,CAAQ,qCAAR,CA2BfC;MAAAC,QAAA,CAhBAS,QAAoB,CAACC,mBAAD,CAAaC,SAAb,CAAwBC,MAAxB,CAAgC,CAClD,IAAIC,MAAS,EACbF,UAAA,CAAYT,QAAA,CAASS,SAAAG,OAAA,CAAmBH,SAAnB,CAA+B,CAACH,QAAD,CAAxC,CAAoDF,SAAA,CAAUH,YAAV,CAApD,CAERY,oBAAAA,CAASX,OAAA,CAAQM,mBAAR,CAAoB,QAAQ,CAACM,KAAD,CAAQC,GAAR,CAAaP,UAAb,CAAyB,CAIhE,MAAO,CAAE,SAHMR,QAAAgB,CAASP,SAATO,CAAoB,QAAQ,CAACC,QAAD,CAAW,CACpD,MAAOA,SAAA,CAASH,KAAT,CAD6C,CAAvCE,CAGR,CAAwB,MAAS,EAAEL,KAAnC,CAA0C,MAASG,KAAnD,CAJyD,CAArD,CAOb,OAAOX,WAAA,CAAWU,mBAAX,CAAmB,QAAQ,CAACK,MAAD,CAASC,KAAT,CAAgB,CAChD,MAAOd,gBAAA,CAAgBa,MAAhB,CAAwBC,KAAxB,CAA+BT,MAA/B,CADyC,CAA3C,CAX2C,CAlBqE;\",\n\"sources\":[\"node_modules/lodash/_baseOrderBy.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseOrderBy\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar arrayMap = require('./_arrayMap'),\\n    baseIteratee = require('./_baseIteratee'),\\n    baseMap = require('./_baseMap'),\\n    baseSortBy = require('./_baseSortBy'),\\n    baseUnary = require('./_baseUnary'),\\n    compareMultiple = require('./_compareMultiple'),\\n    identity = require('./identity');\\n\\n/**\\n * The base implementation of `_.orderBy` without param guards.\\n *\\n * @private\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\\n * @param {string[]} orders The sort orders of `iteratees`.\\n * @returns {Array} Returns the new sorted array.\\n */\\nfunction baseOrderBy(collection, iteratees, orders) {\\n  var index = -1;\\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\\n\\n  var result = baseMap(collection, function(value, key, collection) {\\n    var criteria = arrayMap(iteratees, function(iteratee) {\\n      return iteratee(value);\\n    });\\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\\n  });\\n\\n  return baseSortBy(result, function(object, other) {\\n    return compareMultiple(object, other, orders);\\n  });\\n}\\n\\nmodule.exports = baseOrderBy;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"arrayMap\",\"baseIteratee\",\"baseMap\",\"baseSortBy\",\"baseUnary\",\"compareMultiple\",\"identity\",\"baseOrderBy\",\"collection\",\"iteratees\",\"orders\",\"index\",\"length\",\"result\",\"value\",\"key\",\"criteria\",\"iteratee\",\"object\",\"other\"]\n}\n"]