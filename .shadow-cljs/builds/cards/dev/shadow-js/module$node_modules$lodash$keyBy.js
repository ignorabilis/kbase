["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/keyBy.js"],"~:js","shadow$provide.module$node_modules$lodash$keyBy=function(global,process,require,module,exports,shadow$shims){var baseAssignValue=require(\"module$node_modules$lodash$_baseAssignValue\");global=require(\"module$node_modules$lodash$_createAggregator\")(function(result,value,key){baseAssignValue(result,key,value)});module.exports=global}","~:source","shadow$provide[\"module$node_modules$lodash$keyBy\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_baseAssignValue","~$module$node_modules$lodash$_createAggregator"]],"~:properties",["^5",[]],"~:compiled-at",1537360506090,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$keyBy.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,iCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAC9GC,gBAAkBJ,OAAA,CAAQ,6CAAR,CA+BlBK,OAAAA,CA9BmBL,OAAAM,CAAQ,8CAARA,CA8BX,CAAiB,QAAQ,CAACC,MAAD,CAASC,KAAT,CAAgBC,GAAhB,CAAqB,CACxDL,eAAA,CAAgBG,MAAhB,CAAwBE,GAAxB,CAA6BD,KAA7B,CADwD,CAA9C,CAIZP,OAAAC,QAAA,CAAiBG,MApCiG;\",\n\"sources\":[\"node_modules/lodash/keyBy.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$keyBy\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar baseAssignValue = require('./_baseAssignValue'),\\n    createAggregator = require('./_createAggregator');\\n\\n/**\\n * Creates an object composed of keys generated from the results of running\\n * each element of `collection` thru `iteratee`. The corresponding value of\\n * each key is the last element responsible for generating the key. The\\n * iteratee is invoked with one argument: (value).\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Collection\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\\n * @returns {Object} Returns the composed aggregate object.\\n * @example\\n *\\n * var array = [\\n *   { 'dir': 'left', 'code': 97 },\\n *   { 'dir': 'right', 'code': 100 }\\n * ];\\n *\\n * _.keyBy(array, function(o) {\\n *   return String.fromCharCode(o.code);\\n * });\\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\\n *\\n * _.keyBy(array, 'dir');\\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\\n */\\nvar keyBy = createAggregator(function(result, value, key) {\\n  baseAssignValue(result, key, value);\\n});\\n\\nmodule.exports = keyBy;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"baseAssignValue\",\"keyBy\",\"createAggregator\",\"result\",\"value\",\"key\"]\n}\n"]