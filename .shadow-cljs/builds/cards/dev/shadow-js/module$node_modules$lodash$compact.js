["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/compact.js"],"~:js","shadow$provide.module$node_modules$lodash$compact=function(global,process,require,module,exports,shadow$shims){module.exports=function(array){for(var index=-1,length=null==array?0:array.length,resIndex=0,result=[];++index<length;){var value=array[index];value&&(result[resIndex++]=value)}return result}}","~:source","shadow$provide[\"module$node_modules$lodash$compact\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1537360506135,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$compact.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA+BpHF,MAAAC,QAAA,CAfAE,QAAgB,CAACC,KAAD,CAAQ,CAMtB,IANsB,IAClBC,MAAS,EADS,CAElBC,OAAkB,IAAT,EAAAF,KAAA,CAAgB,CAAhB,CAAoBA,KAAAE,OAFX,CAGlBC,SAAW,CAHO,CAIlBC,OAAS,EAEb,CAAO,EAAEH,KAAT,CAAiBC,MAAjB,CAAA,CAAyB,CACvB,IAAIG,MAAQL,KAAA,CAAMC,KAAN,CACRI,MAAJ,GACED,MAAA,CAAOD,QAAA,EAAP,CADF,CACuBE,KADvB,CAFuB,CAMzB,MAAOD,OAZe,CAhB4F;\",\n\"sources\":[\"node_modules/lodash/compact.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$compact\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Creates an array with all falsey values removed. The values `false`, `null`,\\n * `0`, `\\\"\\\"`, `undefined`, and `NaN` are falsey.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Array\\n * @param {Array} array The array to compact.\\n * @returns {Array} Returns the new array of filtered values.\\n * @example\\n *\\n * _.compact([0, 1, false, 2, '', 3]);\\n * // => [1, 2, 3]\\n */\\nfunction compact(array) {\\n  var index = -1,\\n      length = array == null ? 0 : array.length,\\n      resIndex = 0,\\n      result = [];\\n\\n  while (++index < length) {\\n    var value = array[index];\\n    if (value) {\\n      result[resIndex++] = value;\\n    }\\n  }\\n  return result;\\n}\\n\\nmodule.exports = compact;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"compact\",\"array\",\"index\",\"length\",\"resIndex\",\"result\",\"value\"]\n}\n"]