["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/isSet.js"],"~:js","shadow$provide.module$node_modules$lodash$isSet=function(global,process,require,module,exports,shadow$shims){global=require(\"module$node_modules$lodash$_baseIsSet\");process=require(\"module$node_modules$lodash$_baseUnary\");require=(require=(require=require(\"module$node_modules$lodash$_nodeUtil\"))&&require.isSet)?process(require):global;module.exports=require}","~:source","shadow$provide[\"module$node_modules$lodash$isSet\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseUnary","~$shadow.js","~$module$node_modules$lodash$_baseIsSet","~$module$node_modules$lodash$_nodeUtil"]],"~:properties",["^5",[]],"~:compiled-at",1537360506114,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$isSet.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,iCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAC9GC,MAAAA,CAAYJ,OAAA,CAAQ,uCAAR,CACZK,QAAAA,CAAYL,OAAA,CAAQ,uCAAR,CAuBZM,QAAAA,CAAQ,CAnBRC,OAmBQ,EAtBRC,OAsBQ,CAtBGR,OAAA,CAAQ,sCAAR,CAsBH,GAnBgBQ,OAAAF,MAmBhB,EAAYD,OAAA,CAAUE,OAAV,CAAZ,CAAmCH,MAE/CH,OAAAC,QAAA,CAAiBI,OA3BiG;\",\n\"sources\":[\"node_modules/lodash/isSet.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$isSet\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar baseIsSet = require('./_baseIsSet'),\\n    baseUnary = require('./_baseUnary'),\\n    nodeUtil = require('./_nodeUtil');\\n\\n/* Node.js helper references. */\\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\\n\\n/**\\n * Checks if `value` is classified as a `Set` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.3.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\\n * @example\\n *\\n * _.isSet(new Set);\\n * // => true\\n *\\n * _.isSet(new WeakSet);\\n * // => false\\n */\\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\\n\\nmodule.exports = isSet;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"baseIsSet\",\"baseUnary\",\"isSet\",\"nodeIsSet\",\"nodeUtil\"]\n}\n"]