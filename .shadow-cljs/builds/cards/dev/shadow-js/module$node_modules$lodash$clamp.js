["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/clamp.js"],"~:js","shadow$provide.module$node_modules$lodash$clamp=function(global,process,require,module,exports,shadow$shims){var baseClamp=require(\"module$node_modules$lodash$_baseClamp\"),toNumber=require(\"module$node_modules$lodash$toNumber\");module.exports=function(number,lower,upper){void 0===upper&&(upper=lower,lower=void 0);void 0!==upper&&(upper=toNumber(upper),upper=upper===upper?upper:0);void 0!==lower&&(lower=toNumber(lower),lower=lower===lower?lower:0);return baseClamp(toNumber(number),lower,upper)}}","~:source","shadow$provide[\"module$node_modules$lodash$clamp\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseClamp = require('./_baseClamp'),\n    toNumber = require('./toNumber');\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber(number), lower, upper);\n}\n\nmodule.exports = clamp;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_baseClamp","~$module$node_modules$lodash$toNumber"]],"~:properties",["^5",[]],"~:compiled-at",1537360506325,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$clamp.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,iCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAC9GC,UAAYJ,OAAA,CAAQ,uCAAR,CADkG,CAE9GK,SAAWL,OAAA,CAAQ,qCAAR,CAqCfC,OAAAC,QAAA,CAhBAI,QAAc,CAACC,MAAD,CAASC,KAAT,CAAgBC,KAAhB,CAAuB,CACrBC,IAAAA,EAAd,GAAID,KAAJ,GACEA,KACA,CADQD,KACR,CAAAA,KAAA,CAAQE,IAAAA,EAFV,CAIcA,KAAAA,EAAd,GAAID,KAAJ,GACEA,KACA,CADQJ,QAAA,CAASI,KAAT,CACR,CAAAA,KAAA,CAAQA,KAAA,GAAUA,KAAV,CAAkBA,KAAlB,CAA0B,CAFpC,CAIcC,KAAAA,EAAd,GAAIF,KAAJ,GACEA,KACA,CADQH,QAAA,CAASG,KAAT,CACR,CAAAA,KAAA,CAAQA,KAAA,GAAUA,KAAV,CAAkBA,KAAlB,CAA0B,CAFpC,CAIA,OAAOJ,UAAA,CAAUC,QAAA,CAASE,MAAT,CAAV,CAA4BC,KAA5B,CAAmCC,KAAnC,CAb4B,CAvB6E;\",\n\"sources\":[\"node_modules/lodash/clamp.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$clamp\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar baseClamp = require('./_baseClamp'),\\n    toNumber = require('./toNumber');\\n\\n/**\\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Number\\n * @param {number} number The number to clamp.\\n * @param {number} [lower] The lower bound.\\n * @param {number} upper The upper bound.\\n * @returns {number} Returns the clamped number.\\n * @example\\n *\\n * _.clamp(-10, -5, 5);\\n * // => -5\\n *\\n * _.clamp(10, -5, 5);\\n * // => 5\\n */\\nfunction clamp(number, lower, upper) {\\n  if (upper === undefined) {\\n    upper = lower;\\n    lower = undefined;\\n  }\\n  if (upper !== undefined) {\\n    upper = toNumber(upper);\\n    upper = upper === upper ? upper : 0;\\n  }\\n  if (lower !== undefined) {\\n    lower = toNumber(lower);\\n    lower = lower === lower ? lower : 0;\\n  }\\n  return baseClamp(toNumber(number), lower, upper);\\n}\\n\\nmodule.exports = clamp;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"baseClamp\",\"toNumber\",\"clamp\",\"number\",\"lower\",\"upper\",\"undefined\"]\n}\n"]