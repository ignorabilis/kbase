["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseSum.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseSum=function(global,process,require,module,exports,shadow$shims){module.exports=function(array,iteratee){for(var result,index=-1,length=array.length;++index<length;){var current=iteratee(array[index]);void 0!==current&&(result=void 0===result?current:result+current)}return result}}","~:source","shadow$provide[\"module$node_modules$lodash$_baseSum\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1537360506139,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseSum.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,oCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAwBrHF,MAAAC,QAAA,CAdAE,QAAgB,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAKhC,IALgC,IAC5BC,MAD4B,CAE5BC,MAAS,EAFmB,CAG5BC,OAASJ,KAAAI,OAEb,CAAO,EAAED,KAAT,CAAiBC,MAAjB,CAAA,CAAyB,CACvB,IAAIC,QAAUJ,QAAA,CAASD,KAAA,CAAMG,KAAN,CAAT,CACEG,KAAAA,EAAhB,GAAID,OAAJ,GACEH,MADF,CACsBI,IAAAA,EAAX,GAAAJ,MAAA,CAAuBG,OAAvB,CAAkCH,MAAlC,CAA2CG,OADtD,CAFuB,CAMzB,MAAOH,OAXyB,CAVmF;\",\n\"sources\":[\"node_modules/lodash/_baseSum.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseSum\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * The base implementation of `_.sum` and `_.sumBy` without support for\\n * iteratee shorthands.\\n *\\n * @private\\n * @param {Array} array The array to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {number} Returns the sum.\\n */\\nfunction baseSum(array, iteratee) {\\n  var result,\\n      index = -1,\\n      length = array.length;\\n\\n  while (++index < length) {\\n    var current = iteratee(array[index]);\\n    if (current !== undefined) {\\n      result = result === undefined ? current : (result + current);\\n    }\\n  }\\n  return result;\\n}\\n\\nmodule.exports = baseSum;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"baseSum\",\"array\",\"iteratee\",\"result\",\"index\",\"length\",\"current\",\"undefined\"]\n}\n"]