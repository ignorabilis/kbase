["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/every.js"],"~:js","shadow$provide.module$node_modules$lodash$every=function(global,process,require,module,exports,shadow$shims){var arrayEvery=require(\"module$node_modules$lodash$_arrayEvery\"),baseEvery=require(\"module$node_modules$lodash$_baseEvery\"),baseIteratee=require(\"module$node_modules$lodash$_baseIteratee\"),isArray=require(\"module$node_modules$lodash$isArray\"),isIterateeCall=require(\"module$node_modules$lodash$_isIterateeCall\");module.exports=function(collection,predicate,guard){var func=isArray(collection)?\narrayEvery:baseEvery;guard&&isIterateeCall(collection,predicate,guard)&&(predicate=void 0);return func(collection,baseIteratee(predicate,3))}}","~:source","shadow$provide[\"module$node_modules$lodash$every\"] = function(global,process,require,module,exports,shadow$shims) {\nvar arrayEvery = require('./_arrayEvery'),\n    baseEvery = require('./_baseEvery'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = every;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_isIterateeCall","~$shadow.js","~$module$node_modules$lodash$_baseEvery","~$module$node_modules$lodash$_arrayEvery","~$module$node_modules$lodash$_baseIteratee","~$module$node_modules$lodash$isArray"]],"~:properties",["^5",[]],"~:compiled-at",1537360506231,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$every.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,iCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAC9GC,WAAaJ,OAAA,CAAQ,wCAAR,CADiG,CAE9GK,UAAYL,OAAA,CAAQ,uCAAR,CAFkG,CAG9GM,aAAeN,OAAA,CAAQ,0CAAR,CAH+F,CAI9GO,QAAUP,OAAA,CAAQ,oCAAR,CAJoG,CAK9GQ,eAAiBR,OAAA,CAAQ,4CAAR,CAmDrBC,OAAAC,QAAA,CARAO,QAAc,CAACC,UAAD,CAAaC,SAAb,CAAwBC,KAAxB,CAA+B,CAC3C,IAAIC,KAAON,OAAA,CAAQG,UAAR,CAAA;AAAsBN,UAAtB,CAAmCC,SAC1CO,MAAJ,EAAaJ,cAAA,CAAeE,UAAf,CAA2BC,SAA3B,CAAsCC,KAAtC,CAAb,GACED,SADF,CACcG,IAAAA,EADd,CAGA,OAAOD,KAAA,CAAKH,UAAL,CAAiBJ,YAAA,CAAaK,SAAb,CAAwB,CAAxB,CAAjB,CALoC,CAhDqE;\",\n\"sources\":[\"node_modules/lodash/every.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$every\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar arrayEvery = require('./_arrayEvery'),\\n    baseEvery = require('./_baseEvery'),\\n    baseIteratee = require('./_baseIteratee'),\\n    isArray = require('./isArray'),\\n    isIterateeCall = require('./_isIterateeCall');\\n\\n/**\\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\\n * Iteration is stopped once `predicate` returns falsey. The predicate is\\n * invoked with three arguments: (value, index|key, collection).\\n *\\n * **Note:** This method returns `true` for\\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\\n * elements of empty collections.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Collection\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\\n *  else `false`.\\n * @example\\n *\\n * _.every([true, 1, null, 'yes'], Boolean);\\n * // => false\\n *\\n * var users = [\\n *   { 'user': 'barney', 'age': 36, 'active': false },\\n *   { 'user': 'fred',   'age': 40, 'active': false }\\n * ];\\n *\\n * // The `_.matches` iteratee shorthand.\\n * _.every(users, { 'user': 'barney', 'active': false });\\n * // => false\\n *\\n * // The `_.matchesProperty` iteratee shorthand.\\n * _.every(users, ['active', false]);\\n * // => true\\n *\\n * // The `_.property` iteratee shorthand.\\n * _.every(users, 'active');\\n * // => false\\n */\\nfunction every(collection, predicate, guard) {\\n  var func = isArray(collection) ? arrayEvery : baseEvery;\\n  if (guard && isIterateeCall(collection, predicate, guard)) {\\n    predicate = undefined;\\n  }\\n  return func(collection, baseIteratee(predicate, 3));\\n}\\n\\nmodule.exports = every;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"arrayEvery\",\"baseEvery\",\"baseIteratee\",\"isArray\",\"isIterateeCall\",\"every\",\"collection\",\"predicate\",\"guard\",\"func\",\"undefined\"]\n}\n"]