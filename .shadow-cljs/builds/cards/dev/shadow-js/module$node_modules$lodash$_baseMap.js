["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseMap.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseMap=function(global,process,require,module,exports,shadow$shims){var baseEach=require(\"module$node_modules$lodash$_baseEach\"),isArrayLike=require(\"module$node_modules$lodash$isArrayLike\");module.exports=function(collection$jscomp$0,iteratee){var index=-1,result=isArrayLike(collection$jscomp$0)?Array(collection$jscomp$0.length):[];baseEach(collection$jscomp$0,function(value,key,collection){result[++index]=iteratee(value,key,collection)});return result}}","~:source","shadow$provide[\"module$node_modules$lodash$_baseMap\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$isArrayLike","~$shadow.js","~$module$node_modules$lodash$_baseEach"]],"~:properties",["^5",[]],"~:compiled-at",1537360506137,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseMap.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,oCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IACjHC,SAAWJ,OAAA,CAAQ,sCAAR,CADsG,CAEjHK,YAAcL,OAAA,CAAQ,wCAAR,CAoBlBC,OAAAC,QAAA,CAVAI,QAAgB,CAACC,mBAAD,CAAaC,QAAb,CAAuB,CAAA,IACjCC,MAAS,EADwB,CAEjCC,OAASL,WAAA,CAAYE,mBAAZ,CAAA,CAA0BI,KAAA,CAAMJ,mBAAAK,OAAN,CAA1B,CAAqD,EAElER,SAAA,CAASG,mBAAT,CAAqB,QAAQ,CAACM,KAAD,CAAQC,GAAR,CAAaP,UAAb,CAAyB,CACpDG,MAAA,CAAO,EAAED,KAAT,CAAA,CAAkBD,QAAA,CAASK,KAAT,CAAgBC,GAAhB,CAAqBP,UAArB,CADkC,CAAtD,CAGA,OAAOG,OAP8B,CAZ8E;\",\n\"sources\":[\"node_modules/lodash/_baseMap.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseMap\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar baseEach = require('./_baseEach'),\\n    isArrayLike = require('./isArrayLike');\\n\\n/**\\n * The base implementation of `_.map` without support for iteratee shorthands.\\n *\\n * @private\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Array} Returns the new mapped array.\\n */\\nfunction baseMap(collection, iteratee) {\\n  var index = -1,\\n      result = isArrayLike(collection) ? Array(collection.length) : [];\\n\\n  baseEach(collection, function(value, key, collection) {\\n    result[++index] = iteratee(value, key, collection);\\n  });\\n  return result;\\n}\\n\\nmodule.exports = baseMap;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"baseEach\",\"isArrayLike\",\"baseMap\",\"collection\",\"iteratee\",\"index\",\"result\",\"Array\",\"length\",\"value\",\"key\"]\n}\n"]