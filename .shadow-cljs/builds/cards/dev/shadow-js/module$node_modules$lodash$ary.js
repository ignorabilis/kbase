["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/ary.js"],"~:js","shadow$provide.module$node_modules$lodash$ary=function(global,process,require,module,exports,shadow$shims){var createWrap=require(\"module$node_modules$lodash$_createWrap\");module.exports=function(func,n,guard){n=guard?void 0:n;n=func&&null==n?func.length:n;return createWrap(func,128,void 0,void 0,void 0,void 0,n)}}","~:source","shadow$provide[\"module$node_modules$lodash$ary\"] = function(global,process,require,module,exports,shadow$shims) {\nvar createWrap = require('./_createWrap');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_ARY_FLAG = 128;\n\n/**\n * Creates a function that invokes `func`, with up to `n` arguments,\n * ignoring any additional arguments.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} func The function to cap arguments for.\n * @param {number} [n=func.length] The arity cap.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new capped function.\n * @example\n *\n * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n * // => [6, 8, 10]\n */\nfunction ary(func, n, guard) {\n  n = guard ? undefined : n;\n  n = (func && n == null) ? func.length : n;\n  return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n}\n\nmodule.exports = ary;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_createWrap"]],"~:properties",["^5",[]],"~:compiled-at",1537360506109,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$ary.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,+BAAA,CAAmD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAChH,IAAIC,WAAaJ,OAAA,CAAQ,wCAAR,CA4BjBC,OAAAC,QAAA,CANAG,QAAY,CAACC,IAAD,CAAOC,CAAP,CAAUC,KAAV,CAAiB,CAC3BD,CAAA,CAAIC,KAAA,CAAQC,IAAAA,EAAR,CAAoBF,CACxBA,EAAA,CAAKD,IAAD,EAAc,IAAd,EAASC,CAAT,CAAsBD,IAAAI,OAAtB,CAAoCH,CACxC,OAAOH,WAAA,CAAWE,IAAX,CAtBWK,GAsBX,CAAgCF,IAAAA,EAAhC,CAA2CA,IAAAA,EAA3C,CAAsDA,IAAAA,EAAtD,CAAiEA,IAAAA,EAAjE,CAA4EF,CAA5E,CAHoB,CAvBmF;\",\n\"sources\":[\"node_modules/lodash/ary.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$ary\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar createWrap = require('./_createWrap');\\n\\n/** Used to compose bitmasks for function metadata. */\\nvar WRAP_ARY_FLAG = 128;\\n\\n/**\\n * Creates a function that invokes `func`, with up to `n` arguments,\\n * ignoring any additional arguments.\\n *\\n * @static\\n * @memberOf _\\n * @since 3.0.0\\n * @category Function\\n * @param {Function} func The function to cap arguments for.\\n * @param {number} [n=func.length] The arity cap.\\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\n * @returns {Function} Returns the new capped function.\\n * @example\\n *\\n * _.map(['6', '8', '10'], _.ary(parseInt, 1));\\n * // => [6, 8, 10]\\n */\\nfunction ary(func, n, guard) {\\n  n = guard ? undefined : n;\\n  n = (func && n == null) ? func.length : n;\\n  return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\\n}\\n\\nmodule.exports = ary;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"createWrap\",\"ary\",\"func\",\"n\",\"guard\",\"undefined\",\"length\",\"WRAP_ARY_FLAG\"]\n}\n"]