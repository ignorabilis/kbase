["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_createCtor.js"],"~:js","shadow$provide.module$node_modules$lodash$_createCtor=function(global,process,require,module,exports,shadow$shims){var baseCreate=require(\"module$node_modules$lodash$_baseCreate\"),isObject=require(\"module$node_modules$lodash$isObject\");module.exports=function(Ctor){return function(){var args=arguments;switch(args.length){case 0:return new Ctor;case 1:return new Ctor(args[0]);case 2:return new Ctor(args[0],args[1]);case 3:return new Ctor(args[0],args[1],args[2]);case 4:return new Ctor(args[0],args[1],\nargs[2],args[3]);case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6])}var thisBinding=baseCreate(Ctor.prototype);args=Ctor.apply(thisBinding,args);return isObject(args)?args:thisBinding}}}","~:source","shadow$provide[\"module$node_modules$lodash$_createCtor\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseCreate = require('./_baseCreate'),\n    isObject = require('./isObject');\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtor;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$isObject","~$module$node_modules$lodash$_baseCreate"]],"~:properties",["^5",[]],"~:compiled-at",1537360506099,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_createCtor.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IACpHC,WAAaJ,OAAA,CAAQ,wCAAR,CADuG,CAEpHK,SAAWL,OAAA,CAAQ,qCAAR,CAmCfC,OAAAC,QAAA,CAzBAI,QAAmB,CAACC,IAAD,CAAO,CACxB,MAAO,SAAQ,EAAG,CAIhB,IAAIC,KAAOC,SACX,QAAQD,IAAAE,OAAR,EACE,KAAK,CAAL,CAAQ,MAAO,KAAIH,IACnB,MAAK,CAAL,CAAQ,MAAO,KAAIA,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CACf,MAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CACf,MAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CAA2BA,IAAA,CAAK,CAAL,CAA3B,CACf,MAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB;AAA2BA,IAAA,CAAK,CAAL,CAA3B,CAAoCA,IAAA,CAAK,CAAL,CAApC,CACf,MAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CAA2BA,IAAA,CAAK,CAAL,CAA3B,CAAoCA,IAAA,CAAK,CAAL,CAApC,CAA6CA,IAAA,CAAK,CAAL,CAA7C,CACf,MAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CAA2BA,IAAA,CAAK,CAAL,CAA3B,CAAoCA,IAAA,CAAK,CAAL,CAApC,CAA6CA,IAAA,CAAK,CAAL,CAA7C,CAAsDA,IAAA,CAAK,CAAL,CAAtD,CACf,MAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CAA2BA,IAAA,CAAK,CAAL,CAA3B,CAAoCA,IAAA,CAAK,CAAL,CAApC,CAA6CA,IAAA,CAAK,CAAL,CAA7C,CAAsDA,IAAA,CAAK,CAAL,CAAtD,CAA+DA,IAAA,CAAK,CAAL,CAA/D,CARjB,CALgB,IAeZG,YAAcP,UAAA,CAAWG,IAAAK,UAAX,CACdC,KAAAA,CAASN,IAAAO,MAAA,CAAWH,WAAX,CAAwBH,IAAxB,CAIb,OAAOH,SAAA,CAASQ,IAAT,CAAA,CAAmBA,IAAnB,CAA4BF,WApBnB,CADM,CAZ8F;\",\n\"sources\":[\"node_modules/lodash/_createCtor.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_createCtor\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar baseCreate = require('./_baseCreate'),\\n    isObject = require('./isObject');\\n\\n/**\\n * Creates a function that produces an instance of `Ctor` regardless of\\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\\n *\\n * @private\\n * @param {Function} Ctor The constructor to wrap.\\n * @returns {Function} Returns the new wrapped function.\\n */\\nfunction createCtor(Ctor) {\\n  return function() {\\n    // Use a `switch` statement to work with class constructors. See\\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\\n    // for more details.\\n    var args = arguments;\\n    switch (args.length) {\\n      case 0: return new Ctor;\\n      case 1: return new Ctor(args[0]);\\n      case 2: return new Ctor(args[0], args[1]);\\n      case 3: return new Ctor(args[0], args[1], args[2]);\\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\\n    }\\n    var thisBinding = baseCreate(Ctor.prototype),\\n        result = Ctor.apply(thisBinding, args);\\n\\n    // Mimic the constructor's `return` behavior.\\n    // See https://es5.github.io/#x13.2.2 for more details.\\n    return isObject(result) ? result : thisBinding;\\n  };\\n}\\n\\nmodule.exports = createCtor;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"baseCreate\",\"isObject\",\"createCtor\",\"Ctor\",\"args\",\"arguments\",\"length\",\"thisBinding\",\"prototype\",\"result\",\"apply\"]\n}\n"]