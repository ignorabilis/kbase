["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/without.js"],"~:js","shadow$provide.module$node_modules$lodash$without=function(global,process,require,module,exports,shadow$shims){var baseDifference=require(\"module$node_modules$lodash$_baseDifference\");global=require(\"module$node_modules$lodash$_baseRest\");var isArrayLikeObject=require(\"module$node_modules$lodash$isArrayLikeObject\");require=global(function(array,values){return isArrayLikeObject(array)?baseDifference(array,values):[]});module.exports=require}","~:source","shadow$provide[\"module$node_modules$lodash$without\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseDifference = require('./_baseDifference'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */\nvar without = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nmodule.exports = without;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseRest","~$shadow.js","~$module$node_modules$lodash$_baseDifference","~$module$node_modules$lodash$isArrayLikeObject"]],"~:properties",["^5",[]],"~:compiled-at",1537360506170,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$without.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAChHC,eAAiBJ,OAAA,CAAQ,4CAAR,CACjBK,OAAAA,CAAWL,OAAA,CAAQ,sCAAR,CADf,KAEIM,kBAAoBN,OAAA,CAAQ,8CAAR,CAsBpBO,QAAAA,CAAUF,MAAA,CAAS,QAAQ,CAACG,KAAD,CAAQC,MAAR,CAAgB,CAC7C,MAAOH,kBAAA,CAAkBE,KAAlB,CAAA,CACHJ,cAAA,CAAeI,KAAf,CAAsBC,MAAtB,CADG,CAEH,EAHyC,CAAjC,CAMdR,OAAAC,QAAA,CAAiBK,OA/BmG;\",\n\"sources\":[\"node_modules/lodash/without.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$without\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar baseDifference = require('./_baseDifference'),\\n    baseRest = require('./_baseRest'),\\n    isArrayLikeObject = require('./isArrayLikeObject');\\n\\n/**\\n * Creates an array excluding all given values using\\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n * for equality comparisons.\\n *\\n * **Note:** Unlike `_.pull`, this method returns a new array.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Array\\n * @param {Array} array The array to inspect.\\n * @param {...*} [values] The values to exclude.\\n * @returns {Array} Returns the new array of filtered values.\\n * @see _.difference, _.xor\\n * @example\\n *\\n * _.without([2, 1, 2, 3], 1, 2);\\n * // => [3]\\n */\\nvar without = baseRest(function(array, values) {\\n  return isArrayLikeObject(array)\\n    ? baseDifference(array, values)\\n    : [];\\n});\\n\\nmodule.exports = without;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"baseDifference\",\"baseRest\",\"isArrayLikeObject\",\"without\",\"array\",\"values\"]\n}\n"]