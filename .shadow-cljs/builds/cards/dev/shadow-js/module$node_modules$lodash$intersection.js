["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/intersection.js"],"~:js","shadow$provide.module$node_modules$lodash$intersection=function(global,process,require,module,exports,shadow$shims){var arrayMap=require(\"module$node_modules$lodash$_arrayMap\"),baseIntersection=require(\"module$node_modules$lodash$_baseIntersection\");global=require(\"module$node_modules$lodash$_baseRest\");var castArrayLikeObject=require(\"module$node_modules$lodash$_castArrayLikeObject\");require=global(function(arrays){var mapped=arrayMap(arrays,castArrayLikeObject);return mapped.length&&mapped[0]===\narrays[0]?baseIntersection(mapped):[]});module.exports=require}","~:source","shadow$provide[\"module$node_modules$lodash$intersection\"] = function(global,process,require,module,exports,shadow$shims) {\nvar arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseRest","~$module$node_modules$lodash$_castArrayLikeObject","~$shadow.js","~$module$node_modules$lodash$_baseIntersection","~$module$node_modules$lodash$_arrayMap"]],"~:properties",["^5",[]],"~:compiled-at",1537360506085,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$intersection.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IACrHC,SAAWJ,OAAA,CAAQ,sCAAR,CAD0G,CAErHK,iBAAmBL,OAAA,CAAQ,8CAAR,CACnBM,OAAAA,CAAWN,OAAA,CAAQ,sCAAR,CAFf,KAGIO,oBAAsBP,OAAA,CAAQ,iDAAR,CAmBtBQ,QAAAA,CAAeF,MAAA,CAAS,QAAQ,CAACG,MAAD,CAAS,CAC3C,IAAIC,OAASN,QAAA,CAASK,MAAT,CAAiBF,mBAAjB,CACb,OAAQG,OAAAC,OAAD,EAAkBD,MAAA,CAAO,CAAP,CAAlB;AAAgCD,MAAA,CAAO,CAAP,CAAhC,CACHJ,gBAAA,CAAiBK,MAAjB,CADG,CAEH,EAJuC,CAA1B,CAOnBT,OAAAC,QAAA,CAAiBM,OA9BwG;\",\n\"sources\":[\"node_modules/lodash/intersection.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$intersection\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar arrayMap = require('./_arrayMap'),\\n    baseIntersection = require('./_baseIntersection'),\\n    baseRest = require('./_baseRest'),\\n    castArrayLikeObject = require('./_castArrayLikeObject');\\n\\n/**\\n * Creates an array of unique values that are included in all given arrays\\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n * for equality comparisons. The order and references of result values are\\n * determined by the first array.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Array\\n * @param {...Array} [arrays] The arrays to inspect.\\n * @returns {Array} Returns the new array of intersecting values.\\n * @example\\n *\\n * _.intersection([2, 1], [2, 3]);\\n * // => [2]\\n */\\nvar intersection = baseRest(function(arrays) {\\n  var mapped = arrayMap(arrays, castArrayLikeObject);\\n  return (mapped.length && mapped[0] === arrays[0])\\n    ? baseIntersection(mapped)\\n    : [];\\n});\\n\\nmodule.exports = intersection;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"arrayMap\",\"baseIntersection\",\"baseRest\",\"castArrayLikeObject\",\"intersection\",\"arrays\",\"mapped\",\"length\"]\n}\n"]