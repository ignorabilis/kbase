["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseFilter.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseFilter=function(global,process,require,module,exports,shadow$shims){var baseEach=require(\"module$node_modules$lodash$_baseEach\");module.exports=function(collection$jscomp$0,predicate){var result=[];baseEach(collection$jscomp$0,function(value,index,collection){predicate(value,index,collection)&&result.push(value)});return result}}","~:source","shadow$provide[\"module$node_modules$lodash$_baseFilter\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_baseEach"]],"~:properties",["^5",[]],"~:compiled-at",1537360506073,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseFilter.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACxH,IAAIC,SAAWJ,OAAA,CAAQ,sCAAR,CAoBfC,OAAAC,QAAA,CAVAG,QAAmB,CAACC,mBAAD,CAAaC,SAAb,CAAwB,CACzC,IAAIC,OAAS,EACbJ,SAAA,CAASE,mBAAT,CAAqB,QAAQ,CAACG,KAAD,CAAQC,KAAR,CAAeJ,UAAf,CAA2B,CAClDC,SAAA,CAAUE,KAAV,CAAiBC,KAAjB,CAAwBJ,UAAxB,CAAJ,EACEE,MAAAG,KAAA,CAAYF,KAAZ,CAFoD,CAAxD,CAKA,OAAOD,OAPkC,CAX6E;\",\n\"sources\":[\"node_modules/lodash/_baseFilter.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseFilter\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar baseEach = require('./_baseEach');\\n\\n/**\\n * The base implementation of `_.filter` without support for iteratee shorthands.\\n *\\n * @private\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} predicate The function invoked per iteration.\\n * @returns {Array} Returns the new filtered array.\\n */\\nfunction baseFilter(collection, predicate) {\\n  var result = [];\\n  baseEach(collection, function(value, index, collection) {\\n    if (predicate(value, index, collection)) {\\n      result.push(value);\\n    }\\n  });\\n  return result;\\n}\\n\\nmodule.exports = baseFilter;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"baseEach\",\"baseFilter\",\"collection\",\"predicate\",\"result\",\"value\",\"index\",\"push\"]\n}\n"]