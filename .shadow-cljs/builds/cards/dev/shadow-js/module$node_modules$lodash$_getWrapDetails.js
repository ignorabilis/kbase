["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_getWrapDetails.js"],"~:js","shadow$provide.module$node_modules$lodash$_getWrapDetails=function(global,process,require,module,exports,shadow$shims){var reWrapDetails=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,reSplitDetails=/,? & /;module.exports=function(source){return(source=source.match(reWrapDetails))?source[1].split(reSplitDetails):[]}}","~:source","shadow$provide[\"module$node_modules$lodash$_getWrapDetails\"] = function(global,process,require,module,exports,shadow$shims) {\n/** Used to match wrap detail comments. */\nvar reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n    reSplitDetails = /,? & /;\n\n/**\n * Extracts wrapper details from the `source` body comment.\n *\n * @private\n * @param {string} source The source to inspect.\n * @returns {Array} Returns the wrapper details.\n */\nfunction getWrapDetails(source) {\n  var match = source.match(reWrapDetails);\n  return match ? match[1].split(reSplitDetails) : [];\n}\n\nmodule.exports = getWrapDetails;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1537360506105,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_getWrapDetails.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAExHC,cAAgB,mCAFwG,CAGxHC,eAAiB,OAcrBJ,OAAAC,QAAA,CALAI,QAAuB,CAACC,MAAD,CAAS,CAE9B,MAAO,CADHC,MACG,CADKD,MAAAC,MAAA,CAAaJ,aAAb,CACL,EAAQI,MAAA,CAAM,CAAN,CAAAC,MAAA,CAAeJ,cAAf,CAAR,CAAyC,EAFlB,CAZ4F;\",\n\"sources\":[\"node_modules/lodash/_getWrapDetails.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_getWrapDetails\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/** Used to match wrap detail comments. */\\nvar reWrapDetails = /\\\\{\\\\n\\\\/\\\\* \\\\[wrapped with (.+)\\\\] \\\\*/,\\n    reSplitDetails = /,? & /;\\n\\n/**\\n * Extracts wrapper details from the `source` body comment.\\n *\\n * @private\\n * @param {string} source The source to inspect.\\n * @returns {Array} Returns the wrapper details.\\n */\\nfunction getWrapDetails(source) {\\n  var match = source.match(reWrapDetails);\\n  return match ? match[1].split(reSplitDetails) : [];\\n}\\n\\nmodule.exports = getWrapDetails;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"reWrapDetails\",\"reSplitDetails\",\"getWrapDetails\",\"source\",\"match\",\"split\"]\n}\n"]