["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/isError.js"],"~:js","shadow$provide.module$node_modules$lodash$isError=function(global,process,require,module,exports,shadow$shims){var baseGetTag=require(\"module$node_modules$lodash$_baseGetTag\"),isObjectLike=require(\"module$node_modules$lodash$isObjectLike\"),isPlainObject=require(\"module$node_modules$lodash$isPlainObject\");module.exports=function(value){if(!isObjectLike(value))return!1;var tag=baseGetTag(value);return\"[object Error]\"==tag||\"[object DOMException]\"==tag||\"string\"==typeof value.message&&\"string\"==typeof value.name&&\n!isPlainObject(value)}}","~:source","shadow$provide[\"module$node_modules$lodash$isError\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike'),\n    isPlainObject = require('./isPlainObject');\n\n/** `Object#toString` result references. */\nvar domExcTag = '[object DOMException]',\n    errorTag = '[object Error]';\n\n/**\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n * `SyntaxError`, `TypeError`, or `URIError` object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n * @example\n *\n * _.isError(new Error);\n * // => true\n *\n * _.isError(Error);\n * // => false\n */\nfunction isError(value) {\n  if (!isObjectLike(value)) {\n    return false;\n  }\n  var tag = baseGetTag(value);\n  return tag == errorTag || tag == domExcTag ||\n    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n}\n\nmodule.exports = isError;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseGetTag","~$module$node_modules$lodash$isPlainObject","~$module$node_modules$lodash$isObjectLike","~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1537360506116,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$isError.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAChHC,WAAaJ,OAAA,CAAQ,wCAAR,CADmG,CAEhHK,aAAeL,OAAA,CAAQ,yCAAR,CAFiG,CAGhHM,cAAgBN,OAAA,CAAQ,0CAAR,CAiCpBC,OAAAC,QAAA,CATAK,QAAgB,CAACC,KAAD,CAAQ,CACtB,GAAI,CAACH,YAAA,CAAaG,KAAb,CAAL,CACE,MAAO,CAAA,CAET,KAAIC,IAAML,UAAA,CAAWI,KAAX,CACV,OAzBaE,gBAyBb,EAAOD,GAAP,EA1BcE,uBA0Bd,EAA0BF,GAA1B,EAC2B,QAD3B,EACG,MAAOD,MAAAI,QADV,EAC4D,QAD5D,EACuC,MAAOJ,MAAAK,KAD9C;AACwE,CAACP,aAAA,CAAcE,KAAd,CANnD,CA3B4F;\",\n\"sources\":[\"node_modules/lodash/isError.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$isError\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar baseGetTag = require('./_baseGetTag'),\\n    isObjectLike = require('./isObjectLike'),\\n    isPlainObject = require('./isPlainObject');\\n\\n/** `Object#toString` result references. */\\nvar domExcTag = '[object DOMException]',\\n    errorTag = '[object Error]';\\n\\n/**\\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\\n * `SyntaxError`, `TypeError`, or `URIError` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 3.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\\n * @example\\n *\\n * _.isError(new Error);\\n * // => true\\n *\\n * _.isError(Error);\\n * // => false\\n */\\nfunction isError(value) {\\n  if (!isObjectLike(value)) {\\n    return false;\\n  }\\n  var tag = baseGetTag(value);\\n  return tag == errorTag || tag == domExcTag ||\\n    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\\n}\\n\\nmodule.exports = isError;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"baseGetTag\",\"isObjectLike\",\"isPlainObject\",\"isError\",\"value\",\"tag\",\"errorTag\",\"domExcTag\",\"message\",\"name\"]\n}\n"]