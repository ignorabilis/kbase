["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/flatMap.js"],"~:js","shadow$provide.module$node_modules$lodash$flatMap=function(global,process,require,module,exports,shadow$shims){var baseFlatten=require(\"module$node_modules$lodash$_baseFlatten\"),map=require(\"module$node_modules$lodash$map\");module.exports=function(collection,iteratee){return baseFlatten(map(collection,iteratee),1)}}","~:source","shadow$provide[\"module$node_modules$lodash$flatMap\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseFlatten","~$module$node_modules$lodash$map","~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1537360506195,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$flatMap.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAChHC,YAAcJ,OAAA,CAAQ,yCAAR,CADkG,CAEhHK,IAAML,OAAA,CAAQ,gCAAR,CA2BVC,OAAAC,QAAA,CAJAI,QAAgB,CAACC,UAAD,CAAaC,QAAb,CAAuB,CACrC,MAAOJ,YAAA,CAAYC,GAAA,CAAIE,UAAJ,CAAgBC,QAAhB,CAAZ,CAAuC,CAAvC,CAD8B,CAzB6E;\",\n\"sources\":[\"node_modules/lodash/flatMap.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$flatMap\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar baseFlatten = require('./_baseFlatten'),\\n    map = require('./map');\\n\\n/**\\n * Creates a flattened array of values by running each element in `collection`\\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\\n * with three arguments: (value, index|key, collection).\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Collection\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\\n * @returns {Array} Returns the new flattened array.\\n * @example\\n *\\n * function duplicate(n) {\\n *   return [n, n];\\n * }\\n *\\n * _.flatMap([1, 2], duplicate);\\n * // => [1, 1, 2, 2]\\n */\\nfunction flatMap(collection, iteratee) {\\n  return baseFlatten(map(collection, iteratee), 1);\\n}\\n\\nmodule.exports = flatMap;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"baseFlatten\",\"map\",\"flatMap\",\"collection\",\"iteratee\"]\n}\n"]