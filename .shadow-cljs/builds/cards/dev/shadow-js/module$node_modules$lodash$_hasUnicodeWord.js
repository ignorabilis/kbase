["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_hasUnicodeWord.js"],"~:js","shadow$provide.module$node_modules$lodash$_hasUnicodeWord=function(global,process,require,module,exports,shadow$shims){var reHasUnicodeWord=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;module.exports=function(string){return reHasUnicodeWord.test(string)}}","~:source","shadow$provide[\"module$node_modules$lodash$_hasUnicodeWord\"] = function(global,process,require,module,exports,shadow$shims) {\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1537360506205,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_hasUnicodeWord.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAE5H,IAAIC,iBAAmB,oEAavBH,OAAAC,QAAA,CAJAG,QAAuB,CAACC,MAAD,CAAS,CAC9B,MAAOF,iBAAAG,KAAA,CAAsBD,MAAtB,CADuB,CAX4F;\",\n\"sources\":[\"node_modules/lodash/_hasUnicodeWord.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_hasUnicodeWord\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/** Used to detect strings that need a more robust regexp to match words. */\\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\\n\\n/**\\n * Checks if `string` contains a word composed of Unicode symbols.\\n *\\n * @private\\n * @param {string} string The string to inspect.\\n * @returns {boolean} Returns `true` if a word is found, else `false`.\\n */\\nfunction hasUnicodeWord(string) {\\n  return reHasUnicodeWord.test(string);\\n}\\n\\nmodule.exports = hasUnicodeWord;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"reHasUnicodeWord\",\"hasUnicodeWord\",\"string\",\"test\"]\n}\n"]