["^ ","~:output",["^ ","~:js","goog.provide('devcards.util.markdown');\r\ngoog.require('cljs.core');\r\ngoog.require('clojure.string');\r\ngoog.require('cljsjs.showdown');\r\ndevcards.util.markdown.leading_space_count = (function devcards$util$markdown$leading_space_count(s){\r\nvar temp__5457__auto__ = cljs.core.second(cljs.core.re_matches(/^([\\s]*).*/,s));\r\nif(cljs.core.truth_(temp__5457__auto__)){\r\nvar ws = temp__5457__auto__;\r\nreturn ws.length;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ndevcards.util.markdown.is_bullet_item_QMARK_ = (function devcards$util$markdown$is_bullet_item_QMARK_(s){\r\nreturn cljs.core.boolean$(cljs.core.re_matches(/^\\s*([-*+]|[0-9]+\\.)\\s.*/,s));\r\n});\r\n/**\r\n * Find the common left edge of bullet lists in a collection of lines.\r\n */\r\ndevcards.util.markdown.bullets_left_edge = (function devcards$util$markdown$bullets_left_edge(lines){\r\nvar or__3949__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.min,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devcards.util.markdown.leading_space_count,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(devcards.util.markdown.is_bullet_item_QMARK_,lines)));\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn (0);\r\n}\r\n});\r\n/**\r\n * Strip the left margin's extra whitespace, but leave bullet list indents in tact.\r\n */\r\ndevcards.util.markdown.strip_left_margin = (function devcards$util$markdown$strip_left_margin(s,margin){\r\nif(cljs.core.truth_(devcards.util.markdown.is_bullet_item_QMARK_(s))){\r\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,margin);\r\n} else {\r\nreturn clojure.string.trim(s);\r\n}\r\n});\r\nvar conv_class_48650 = showdown.Converter;\r\nvar converter_48651 = (new conv_class_48650());\r\n/**\r\n * render markdown\r\n */\r\ndevcards.util.markdown.markdown_to_html = ((function (conv_class_48650,converter_48651){\r\nreturn (function devcards$util$markdown$markdown_to_html(markdown_txt){\r\nreturn converter_48651.makeHtml(markdown_txt);\r\n});})(conv_class_48650,converter_48651))\r\n;\r\ndevcards.util.markdown.matches_delim_QMARK_ = (function devcards$util$markdown$matches_delim_QMARK_(line){\r\nreturn cljs.core.re_matches(/^[\\s]*```(\\w*).*/,line);\r\n});\r\nif((typeof devcards !== 'undefined') && (typeof devcards.util !== 'undefined') && (typeof devcards.util.markdown !== 'undefined') && (typeof devcards.util.markdown.block_parser !== 'undefined')){\r\n} else {\r\ndevcards.util.markdown.block_parser = (function (){var method_table__4414__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar prefer_table__4415__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar method_cache__4416__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar cached_hierarchy__4417__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar hierarchy__4418__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),cljs.core.get_global_hierarchy());\r\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"devcards.util.markdown\",\"block-parser\"),((function (method_table__4414__auto__,prefer_table__4415__auto__,method_cache__4416__auto__,cached_hierarchy__4417__auto__,hierarchy__4418__auto__){\r\nreturn (function (p__48652,line){\r\nvar map__48653 = p__48652;\r\nvar map__48653__$1 = ((((!((map__48653 == null)))?(((((map__48653.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__48653.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__48653):map__48653);\r\nvar stage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48653__$1,new cljs.core.Keyword(null,\"stage\",\"stage\",1843544772));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(devcards.util.markdown.matches_delim_QMARK_(line))?new cljs.core.Keyword(null,\"delim\",\"delim\",1621565472):new cljs.core.Keyword(null,\"line\",\"line\",212345235)),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(stage)], null);\r\n});})(method_table__4414__auto__,prefer_table__4415__auto__,method_cache__4416__auto__,cached_hierarchy__4417__auto__,hierarchy__4418__auto__))\r\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4418__auto__,method_table__4414__auto__,prefer_table__4415__auto__,method_cache__4416__auto__,cached_hierarchy__4417__auto__));\r\n})();\r\n}\r\ncljs.core._add_method(devcards.util.markdown.block_parser,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"markdown\",\"markdown\",1227225089)], null),(function (p__48669,line){\r\nvar map__48670 = p__48669;\r\nvar map__48670__$1 = ((((!((map__48670 == null)))?(((((map__48670.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__48670.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__48670):map__48670);\r\nvar st = map__48670__$1;\r\nvar stage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48670__$1,new cljs.core.Keyword(null,\"stage\",\"stage\",1843544772));\r\nvar left_margin = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48670__$1,new cljs.core.Keyword(null,\"left-margin\",\"left-margin\",1869643147));\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(st,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"stage\",\"stage\",1843544772),new cljs.core.Keyword(null,\"content\",\"content\",15833224)], null),cljs.core.conj,devcards.util.markdown.strip_left_margin(line,left_margin));\r\n}));\r\ncljs.core._add_method(devcards.util.markdown.block_parser,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"code-block\",\"code-block\",-2113425141)], null),(function (p__48672,line){\r\nvar map__48673 = p__48672;\r\nvar map__48673__$1 = ((((!((map__48673 == null)))?(((((map__48673.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__48673.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__48673):map__48673);\r\nvar st = map__48673__$1;\r\nvar stage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48673__$1,new cljs.core.Keyword(null,\"stage\",\"stage\",1843544772));\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(st,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"stage\",\"stage\",1843544772),new cljs.core.Keyword(null,\"content\",\"content\",15833224)], null),cljs.core.conj,cljs.core.subs.cljs$core$IFn$_invoke$arity$2(line,new cljs.core.Keyword(null,\"leading-spaces\",\"leading-spaces\",1148061085).cljs$core$IFn$_invoke$arity$1(stage)));\r\n}));\r\ncljs.core._add_method(devcards.util.markdown.block_parser,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"delim\",\"delim\",1621565472),new cljs.core.Keyword(null,\"markdown\",\"markdown\",1227225089)], null),(function (p__48679,line){\r\nvar map__48680 = p__48679;\r\nvar map__48680__$1 = ((((!((map__48680 == null)))?(((((map__48680.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__48680.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__48680):map__48680);\r\nvar st = map__48680__$1;\r\nvar stage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48680__$1,new cljs.core.Keyword(null,\"stage\",\"stage\",1843544772));\r\nvar accum = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48680__$1,new cljs.core.Keyword(null,\"accum\",\"accum\",-1892427250));\r\nvar lang = cljs.core.second(devcards.util.markdown.matches_delim_QMARK_(line));\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(st,new cljs.core.Keyword(null,\"accum\",\"accum\",-1892427250),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(accum,stage)),new cljs.core.Keyword(null,\"stage\",\"stage\",1843544772),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"code-block\",\"code-block\",-2113425141),new cljs.core.Keyword(null,\"lang\",\"lang\",-1819677104),((clojure.string.blank_QMARK_(lang))?null:lang),new cljs.core.Keyword(null,\"leading-spaces\",\"leading-spaces\",1148061085),devcards.util.markdown.leading_space_count(line),new cljs.core.Keyword(null,\"content\",\"content\",15833224),cljs.core.PersistentVector.EMPTY], null));\r\n}));\r\ncljs.core._add_method(devcards.util.markdown.block_parser,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"delim\",\"delim\",1621565472),new cljs.core.Keyword(null,\"code-block\",\"code-block\",-2113425141)], null),(function (p__48682,line){\r\nvar map__48683 = p__48682;\r\nvar map__48683__$1 = ((((!((map__48683 == null)))?(((((map__48683.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__48683.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__48683):map__48683);\r\nvar st = map__48683__$1;\r\nvar stage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48683__$1,new cljs.core.Keyword(null,\"stage\",\"stage\",1843544772));\r\nvar accum = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48683__$1,new cljs.core.Keyword(null,\"accum\",\"accum\",-1892427250));\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(st,new cljs.core.Keyword(null,\"accum\",\"accum\",-1892427250),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(accum,stage)),new cljs.core.Keyword(null,\"stage\",\"stage\",1843544772),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"markdown\",\"markdown\",1227225089),new cljs.core.Keyword(null,\"content\",\"content\",15833224),cljs.core.PersistentVector.EMPTY], null));\r\n}));\r\ndevcards.util.markdown.parse_out_blocks_STAR_ = (function devcards$util$markdown$parse_out_blocks_STAR_(m){\r\nvar lines = clojure.string.split.cljs$core$IFn$_invoke$arity$2(m,\"\\n\");\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(devcards.util.markdown.block_parser,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"stage\",\"stage\",1843544772),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"markdown\",\"markdown\",1227225089),new cljs.core.Keyword(null,\"content\",\"content\",15833224),cljs.core.PersistentVector.EMPTY], null),new cljs.core.Keyword(null,\"accum\",\"accum\",-1892427250),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"left-margin\",\"left-margin\",1869643147),devcards.util.markdown.bullets_left_edge(lines)], null),lines);\r\n});\r\ndevcards.util.markdown.parse_out_blocks = (function devcards$util$markdown$parse_out_blocks(m){\r\nvar map__48686 = devcards.util.markdown.parse_out_blocks_STAR_(m);\r\nvar map__48686__$1 = ((((!((map__48686 == null)))?(((((map__48686.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__48686.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__48686):map__48686);\r\nvar stage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48686__$1,new cljs.core.Keyword(null,\"stage\",\"stage\",1843544772));\r\nvar accum = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48686__$1,new cljs.core.Keyword(null,\"accum\",\"accum\",-1892427250));\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__48686,map__48686__$1,stage,accum){\r\nreturn (function (x){\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(x,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"content\",\"content\",15833224)], null),((function (map__48686,map__48686__$1,stage,accum){\r\nreturn (function (p1__48685_SHARP_){\r\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",p1__48685_SHARP_);\r\n});})(map__48686,map__48686__$1,stage,accum))\r\n);\r\n});})(map__48686,map__48686__$1,stage,accum))\r\n,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (map__48686,map__48686__$1,stage,accum){\r\nreturn (function (p__48692){\r\nvar map__48693 = p__48692;\r\nvar map__48693__$1 = ((((!((map__48693 == null)))?(((((map__48693.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__48693.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__48693):map__48693);\r\nvar content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__48693__$1,new cljs.core.Keyword(null,\"content\",\"content\",15833224));\r\nreturn cljs.core.not_empty(content);\r\n});})(map__48686,map__48686__$1,stage,accum))\r\n,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(accum,stage)));\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devcards/util/markdown.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",27],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$clojure.stacktrace","~$cljs.stacktrace","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$devcards.util.markdown","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^K","~$string","^K","~$cljsjs.showdown","^M","~$cljs.core","^N","~$goog","^O"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^N","^N"],"~:form",["~#list",["~$ns","^F",["^U",["^Q",["^K","~:as","^L"],["^M"]]]]],"~:flags",["^ ","^Q",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^O","^N","^K","^M"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","devcards/util/markdown.cljs"],"~:compiled-at",1537360798439,"~:resource-name","devcards/util/markdown.cljs","~:warnings",[],"~:source","(ns devcards.util.markdown\n  (:require\n   [clojure.string :as string]\n   [cljsjs.showdown]))\n\n(defn leading-space-count [s]\n  (when-let [ws (second (re-matches #\"^([\\s]*).*\"  s))]\n    (.-length ws)))\n\n(defn is-bullet-item? [s] (boolean (re-matches #\"^\\s*([-*+]|[0-9]+\\.)\\s.*\" s)))\n\n(defn bullets-left-edge \"Find the common left edge of bullet lists in a collection of lines.\"\n  [lines]\n  (or\n    (->> lines\n      (filter is-bullet-item?)\n      (map leading-space-count)\n      (apply min))\n    0))\n\n(defn strip-left-margin \"Strip the left margin's extra whitespace, but leave bullet list indents in tact.\"\n  [s margin]\n  (if (is-bullet-item? s)\n    (subs s margin)\n    (string/trim s)))\n\n(let [conv-class (.-Converter js/showdown)\n      converter (conv-class.)]\n  (defn markdown-to-html\n    \"render markdown\"\n    [markdown-txt]\n    (.makeHtml converter markdown-txt)))\n\n(defn matches-delim? [line]\n  (re-matches #\"^[\\s]*```(\\w*).*\" line))\n\n(defmulti block-parser\n  (fn [{:keys [stage]} line]\n    [(if (matches-delim? line) :delim :line) (:type stage)]))\n\n(defmethod block-parser [:line :markdown] [{:keys [stage left-margin] :as st} line]\n  (update-in st [:stage :content] conj (strip-left-margin line left-margin)))\n\n(defmethod block-parser [:line :code-block] [{:keys [stage] :as st} line]\n  (update-in st [:stage :content] conj (subs line (:leading-spaces stage))))\n\n(defmethod block-parser [:delim :markdown] [{:keys [stage accum] :as st} line];; enter block\n  (let [lang (second (matches-delim? line))]\n    (-> st ;; the beginning\n      (assoc :accum (conj accum stage))\n      (assoc :stage\n             {:type :code-block\n              :lang (when-not (string/blank? lang) lang)\n              :leading-spaces (leading-space-count line)\n              :content []}))))\n\n(defmethod block-parser [:delim :code-block] [{:keys [stage accum] :as st} line];; enter block\n  (-> st ;; the end\n    (assoc :accum (conj accum stage))\n    (assoc :stage {:type :markdown :content []})))\n\n(defn parse-out-blocks* [m]\n  (let [lines (string/split m \"\\n\")]\n    (reduce block-parser\n     {:stage {:type :markdown :content []} :accum [] :left-margin (bullets-left-edge lines)}\n     lines)))\n\n(defn parse-out-blocks [m]\n  (let [{:keys [stage accum]} (parse-out-blocks* m)]\n    (->> (conj accum stage)\n      (filter (fn [{:keys [content]}] (not-empty content)))\n      (map (fn [x] (update-in x [:content] #(string/join \"\\n\" %)))))))\n\n#_(devcards.core/defcard parse-out-code-blocks3\n  (parse-out-blocks\n   \"   ```langer\n   (defcard bmi-calculator                        ;; optional symbol name\n     \\\"*Code taken from Reagent readme.*\\\"          ;; optional markdown doc\n     (fn [data-atom _] (bmi-component data-atom)) ;; object of focus\n     {:height 180 :weight 80}                     ;; optional initial data\n     {:inspect-data true :history true})          ;; optional devcard config options\n      \n   ```\n# [Devcards](https://github.com/bhauman/devcards): the hard sell\n    \n   The Devcards library is intended to make ClojureScript development\n   a pure joy.\n \n   Devcards are intended to facilitate **interactive live\n   development**. Devcards can be used in conjunction with figwheel but\n   will also work with any form of live code reloading (repl, boot-reload, ...)\n\n   Devcards revolves around a multi-purpose macro called `defcard`.\n   You can think of `defcard` as a powerful form of **pprint** that helps you\n   interactively lift code examples out of your source files into the\n   Devcards interface (you are currently looking at the Devcards\n   interface).\n\n   The Devcards that you create are intended to have no impact on the\n   size of your production code. You can use Devcards just as you\n   would use exectuable comments inline with your source code. You\n   can also keep them separate like a test suite.\n\n   With [figwheel](https://github.com/bhauman/lein-figwheel), Devcards\n   configuration couldn't be simpler. Just add `[devcards\n   \\\"0.2.0-SNAPSHOT\\\"]` and create a new build config with `:figwheel\n   {:devcards true}`. See the Quick Start instructions at the end of\n   this document.\n\n   Let's look at an advanced Devcard:\n   \n   ```\n   (defcard bmi-calculator                        ;; optional symbol name\n     \\\"*Code taken from Reagent readme.*\\\"          ;; optional markdown doc\n     (fn [data-atom _] (bmi-component data-atom)) ;; object of focus\n     {:height 180 :weight 80}                     ;; optional initial data\n     {:inspect-data true :history true})          ;; optional devcard config options\n      \n   ```\n\n   The [defcard api](#!/devdemos.defcard_api)\n   is intended to be small and intuitive.\n\n   And you can see this devcard rendered below:\"))\n\n\n#_(devcards.core/defcard parse-out-code-blocks3\n  (parse-out-blocks\n   \"# [Devcards](https://github.com/bhauman/devcards): the hard sell\n    \n   The Devcards library is intended to make ClojureScript development\n   a pure joy.\n \n   Devcards are intended to facilitate **interactive live\n   development**. Devcards can be used in conjunction with figwheel but\n   will also work with any form of live code reloading (repl, boot-reload, ...)\n\n   Devcards revolves around a multi-purpose macro called `defcard`.\n   You can think of `defcard` as a powerful form of **pprint** that helps you\n   interactively lift code examples out of your source files into the\n   Devcards interface (you are currently looking at the Devcards\n   interface).\n\n   The Devcards that you create are intended to have no impact on the\n   size of your production code. You can use Devcards just as you\n   would use exectuable comments inline with your source code. You\n   can also keep them separate like a test suite.\n\n   With [figwheel](https://github.com/bhauman/lein-figwheel), Devcards\n   configuration couldn't be simpler. Just add `[devcards\n   \\\"0.2.0-SNAPSHOT\\\"]` and create a new build config with `:figwheel\n   {:devcards true}`. See the Quick Start instructions at the end of\n   this document.\n\n   Let's look at an advanced Devcard:\n   \n   ```\n   (defcard bmi-calculator                        ;; optional symbol name\n     \\\"*Code taken from Reagent readme.*\\\"          ;; optional markdown doc\n     (fn [data-atom _] (bmi-component data-atom)) ;; object of focus\n     {:height 180 :weight 80}                     ;; optional initial data\n     {:inspect-data true :history true})          ;; optional devcard config options\n      \n   ```\n\n   The [defcard api](#!/devdemos.defcard_api)\n   is intended to be small and intuitive.\n\n   And you can see this devcard rendered below:\"))\n","~:reader-features",["^D",["~:cljs"]],"~:source-map",["^ ","~i5",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",4],["^ ","^18",45,"^19",4],["^ ","^18",0,"^19",5]],"~i6",[["^ ","^18",0,"^19",4,"^E","devcards.util.markdown/leading-space-count"]],"~i27",[["^ ","^18",98,"^19",4,"^E","s"]]],"~i6",["^ ","~i2",[["^ ","^18",0,"^19",5],["^ ","^18",4,"^19",5,"^E","temp__5457__auto__"],["^ ","^18",0,"^19",6],["^ ","^18",0,"^19",6],["^ ","^18",20,"^19",6,"^E","temp__5457__auto__"],["^ ","^18",0,"^19",7],["^ ","^18",0,"^19",7],["^ ","^18",9,"^19",7,"^E","temp__5457__auto__"],["^ ","^18",0,"^19",8],["^ ","^18",0,"^19",10]],"~i13",[["^ ","^18",4,"^19",7,"^E","ws"]],"~i16",[["^ ","^18",25,"^19",5]],"~i17",[["^ ","^18",25,"^19",5,"^E","cljs.core/second"]],"~i24",[["^ ","^18",42,"^19",5],["^ ","^18",63,"^19",5]],"~i25",[["^ ","^18",42,"^19",5,"^E","cljs.core/re-matches"]],"~i51",[["^ ","^18",76,"^19",5,"^E","s"]]],"~i7",["^ ","~i4",[["^ ","^18",0,"^19",8]],"~i14",[["^ ","^18",7,"^19",8,"^E","ws"]]],"~i9",["^ ","~i0",[["^ ","^18",0,"^19",13],["^ ","^18",47,"^19",13],["^ ","^18",0,"^19",14]],"~i6",[["^ ","^18",0,"^19",13,"^E","devcards.util.markdown/is-bullet-item?"]],"~i23",[["^ ","^18",102,"^19",13,"^E","s"]],"~i26",[["^ ","^18",0,"^19",14]],"^1:",[["^ ","^18",7,"^19",14,"^E","cljs.core/boolean"]],"~i35",[["^ ","^18",26,"^19",14],["^ ","^18",47,"^19",14]],"~i36",[["^ ","^18",26,"^19",14,"^E","cljs.core/re-matches"]],"~i75",[["^ ","^18",74,"^19",14,"^E","s"]]],"~i11",["^ ","~i0",[["^ ","^18",0,"^19",16],["^ ","^18",43,"^19",19],["^ ","^18",0,"^19",20]],"~i6",[["^ ","^18",0,"^19",19,"^E","devcards.util.markdown/bullets-left-edge"]]],"~i12",["^ ","~i3",[["^ ","^18",94,"^19",19,"^E","lines"]]],"^1;",["^ ","~i2",[["^ ","^18",0,"^19",20],["^ ","^18",4,"^19",20,"^E","or__3949__auto__"],["^ ","^18",0,"^19",21],["^ ","^18",0,"^19",21],["^ ","^18",20,"^19",21,"^E","or__3949__auto__"],["^ ","^18",0,"^19",22,"^E","or__3949__auto__"],["^ ","^18",0,"^19",24]]],"^1A",["^ ","~i9",[["^ ","^18",262,"^19",20,"^E","lines"]]],"~i15",["^ ","~i6",[["^ ","^18",170,"^19",20]],"~i7",[["^ ","^18",170,"^19",20,"^E","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^1A",[["^ ","^18",217,"^19",20,"^E","devcards.util.markdown/is-bullet-item?"]]],"^1<",["^ ","~i6",[["^ ","^18",83,"^19",20]],"~i7",[["^ ","^18",83,"^19",20,"^E","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^1G",[["^ ","^18",127,"^19",20,"^E","devcards.util.markdown/leading-space-count"]]],"^1=",["^ ","~i6",[["^ ","^18",23,"^19",20]],"~i7",[["^ ","^18",23,"^19",20,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^1;",[["^ ","^18",69,"^19",20,"^E","cljs.core/min"]]],"~i20",["^ ","~i0",[["^ ","^18",0,"^19",27],["^ ","^18",43,"^19",30],["^ ","^18",0,"^19",31]],"~i6",[["^ ","^18",0,"^19",30,"^E","devcards.util.markdown/strip-left-margin"]]],"~i21",["^ ","~i3",[["^ ","^18",94,"^19",30,"^E","s"]],"~i5",[["^ ","^18",96,"^19",30,"^E","margin"]]],"~i22",["^ ","~i2",[["^ ","^18",0,"^19",31]],"~i6",[["^ ","^18",20,"^19",31]],"~i7",[["^ ","^18",20,"^19",31,"^E","devcards.util.markdown/is-bullet-item?"]],"^1B",[["^ ","^18",65,"^19",31,"^E","s"]]],"^1B",["^ ","~i4",[["^ ","^18",0,"^19",32]],"~i5",[["^ ","^18",7,"^19",32,"^E","cljs.core.subs.cljs$core$IFn$_invoke$arity$2"]],"~i10",[["^ ","^18",52,"^19",32,"^E","s"]],"^1H",[["^ ","^18",54,"^19",32,"^E","margin"]]],"^1>",["^ ","~i4",[["^ ","^18",0,"^19",34]],"~i5",[["^ ","^18",7,"^19",34,"^E","clojure.string/trim"]],"^1=",[["^ ","^18",27,"^19",34,"^E","s"]]],"^1C",["^ ","~i0",[["^ ","^18",0,"^19",37],["^ ","^18",0,"^19",39]],"~i6",[["^ ","^18",4,"^19",37,"^E","conv-class"]],"^1=",[["^ ","^18",23,"^19",37]],"~i30",[["^ ","^18",23,"^19",37,"^E","js/showdown"]]],"^1:",["^ ","~i6",[["^ ","^18",4,"^19",38,"^E","converter"]],"^1<",[["^ ","^18",22,"^19",38],["^ ","^18",27,"^19",38,"^E","conv-class"]]],"~i28",["^ ","~i2",[["^ ","^18",0,"^19",39],["^ ","^18",42,"^19",42],["^ ","^18",0,"^19",44]],"~i8",[["^ ","^18",0,"^19",42,"^E","devcards.util.markdown/markdown-to-html"]]],"^1N",["^ ","~i5",[["^ ","^18",57,"^19",43,"^E","markdown-txt"]]],"~i31",["^ ","~i4",[["^ ","^18",0,"^19",44]],"^1I",[["^ ","^18",7,"^19",44,"^E","converter"]],"^1?",[["^ ","^18",32,"^19",44,"^E","markdown-txt"]]],"~i33",["^ ","~i0",[["^ ","^18",0,"^19",47],["^ ","^18",46,"^19",47],["^ ","^18",0,"^19",48]],"~i6",[["^ ","^18",0,"^19",47,"^E","devcards.util.markdown/matches-delim?"]],"^1L",[["^ ","^18",100,"^19",47,"^E","line"]]],"~i34",["^ ","~i2",[["^ ","^18",0,"^19",48],["^ ","^18",28,"^19",48]],"~i3",[["^ ","^18",7,"^19",48,"^E","cljs.core/re-matches"]],"^1R",[["^ ","^18",47,"^19",48,"^E","line"]]],"^1E",["^ ","~i0",[["^ ","^18",0,"^19",50],["^ ","^18",3,"^19",50],["^ ","^18",11,"^19",50,"^E","js/devcards"],["^ ","^18",48,"^19",50,"^E","js/devcards.util"],["^ ","^18",90,"^19",50,"^E","js/devcards.util.markdown"],["^ ","^18",141,"^19",50,"^E","js/devcards.util.markdown.block-parser"],["^ ","^18",0,"^19",51],["^ ","^18",0,"^19",52],["^ ","^18",0,"^19",52],["^ ","^18",38,"^19",52],["^ ","^18",55,"^19",52,"^E","method-table__4414__auto__"],["^ ","^18",84,"^19",52],["^ ","^18",84,"^19",52,"^E","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"],["^ ","^18",129,"^19",52],["^ ","^18",4,"^19",53,"^E","prefer-table__4415__auto__"],["^ ","^18",33,"^19",53],["^ ","^18",33,"^19",53,"^E","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"],["^ ","^18",78,"^19",53],["^ ","^18",4,"^19",54,"^E","method-cache__4416__auto__"],["^ ","^18",33,"^19",54],["^ ","^18",33,"^19",54,"^E","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"],["^ ","^18",78,"^19",54],["^ ","^18",4,"^19",55,"^E","cached-hierarchy__4417__auto__"],["^ ","^18",37,"^19",55],["^ ","^18",37,"^19",55,"^E","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"],["^ ","^18",82,"^19",55],["^ ","^18",4,"^19",56,"^E","hierarchy__4418__auto__"],["^ ","^18",30,"^19",56],["^ ","^18",30,"^19",56,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^18",74,"^19",56],["^ ","^18",109,"^19",56],["^ ","^18",173,"^19",56],["^ ","^18",173,"^19",56,"^E","cljs.core/get-global-hierarchy"],["^ ","^18",0,"^19",57],["^ ","^18",0,"^19",57],["^ ","^18",12,"^19",57,"^E","cljs.core/MultiFn"],["^ ","^18",30,"^19",57],["^ ","^18",30,"^19",57,"^E","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",77,"^19",57],["^ ","^18",102,"^19",57],["^ ","^18",1,"^19",64],["^ ","^18",61,"^19",64,"^E","hierarchy__4418__auto__"],["^ ","^18",85,"^19",64,"^E","method-table__4414__auto__"],["^ ","^18",112,"^19",64,"^E","prefer-table__4415__auto__"],["^ ","^18",139,"^19",64,"^E","method-cache__4416__auto__"],["^ ","^18",166,"^19",64,"^E","cached-hierarchy__4417__auto__"]],"^1M",[["^ ","^18",0,"^19",52,"^E","devcards.util.markdown/block-parser"]]],"~i37",["^ ","~i2",[["^ ","^18",118,"^19",57],["^ ","^18",18,"^19",58,"^E","p__48652"],["^ ","^18",0,"^19",59],["^ ","^18",0,"^19",59],["^ ","^18",4,"^19",59,"^E","map__48653"],["^ ","^18",17,"^19",59,"^E","p__48652"],["^ ","^18",4,"^19",60,"^E","map__48653"],["^ ","^18",21,"^19",60],["^ ","^18",23,"^19",60],["^ ","^18",25,"^19",60],["^ ","^18",27,"^19",60],["^ ","^18",28,"^19",60,"^E","map__48653"],["^ ","^18",42,"^19",60],["^ ","^18",50,"^19",60],["^ ","^18",52,"^19",60],["^ ","^18",54,"^19",60],["^ ","^18",55,"^19",60],["^ ","^18",55,"^19",60,"^E","map__48653"],["^ ","^18",104,"^19",60],["^ ","^18",115,"^19",60],["^ ","^18",116,"^19",60,"^E","cljs.core/PROTOCOL_SENTINEL"],["^ ","^18",148,"^19",60],["^ ","^18",148,"^19",60,"^E","map__48653"],["^ ","^18",179,"^19",60],["^ ","^18",184,"^19",60],["^ ","^18",191,"^19",60],["^ ","^18",199,"^19",60],["^ ","^18",199,"^19",60,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",245,"^19",60,"^E","cljs.core/hash-map"],["^ ","^18",264,"^19",60,"^E","map__48653"],["^ ","^18",276,"^19",60,"^E","map__48653"],["^ ","^18",12,"^19",61],["^ ","^18",12,"^19",61,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",56,"^19",61,"^E","map__48653"],["^ ","^18",71,"^19",61],["^ ","^18",0,"^19",62],["^ ","^18",0,"^19",62]],"^1I",[["^ ","^18",4,"^19",61,"^E","stage"]],"^1B",[["^ ","^18",27,"^19",58,"^E","line"]]],"~i38",["^ ","~i5",[["^ ","^18",90,"^19",62],["^ ","^18",159,"^19",62],["^ ","^18",214,"^19",62]],"~i9",[["^ ","^18",108,"^19",62]],"^1M",[["^ ","^18",108,"^19",62,"^E","devcards.util.markdown/matches-delim?"]],"^1?",[["^ ","^18",152,"^19",62,"^E","line"]],"~i45",[["^ ","^18",267,"^19",62],["^ ","^18",267,"^19",62]],"~i52",[["^ ","^18",350,"^19",62,"^E","stage"]]],"~i40",["^ ","~i0",[["^ ","^18",0,"^19",67],["^ ","^18",0,"^19",67,"^E","cljs.core/-add-method"],["^ ","^18",22,"^19",67,"^E","devcards.util.markdown/block-parser"],["^ ","^18",58,"^19",67],["^ ","^18",141,"^19",67],["^ ","^18",193,"^19",67],["^ ","^18",262,"^19",67],["^ ","^18",273,"^19",67,"^E","p__48669"],["^ ","^18",0,"^19",68],["^ ","^18",0,"^19",68],["^ ","^18",4,"^19",68,"^E","map__48670"],["^ ","^18",17,"^19",68,"^E","p__48669"],["^ ","^18",4,"^19",69,"^E","map__48670"],["^ ","^18",21,"^19",69],["^ ","^18",23,"^19",69],["^ ","^18",25,"^19",69],["^ ","^18",27,"^19",69],["^ ","^18",28,"^19",69,"^E","map__48670"],["^ ","^18",42,"^19",69],["^ ","^18",50,"^19",69],["^ ","^18",52,"^19",69],["^ ","^18",54,"^19",69],["^ ","^18",55,"^19",69],["^ ","^18",55,"^19",69,"^E","map__48670"],["^ ","^18",104,"^19",69],["^ ","^18",115,"^19",69],["^ ","^18",116,"^19",69,"^E","cljs.core/PROTOCOL_SENTINEL"],["^ ","^18",148,"^19",69],["^ ","^18",148,"^19",69,"^E","map__48670"],["^ ","^18",179,"^19",69],["^ ","^18",184,"^19",69],["^ ","^18",191,"^19",69],["^ ","^18",199,"^19",69],["^ ","^18",199,"^19",69,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",245,"^19",69,"^E","cljs.core/hash-map"],["^ ","^18",264,"^19",69,"^E","map__48670"],["^ ","^18",276,"^19",69,"^E","map__48670"],["^ ","^18",9,"^19",70,"^E","map__48670"],["^ ","^18",12,"^19",71],["^ ","^18",12,"^19",71,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",56,"^19",71,"^E","map__48670"],["^ ","^18",71,"^19",71],["^ ","^18",18,"^19",72],["^ ","^18",18,"^19",72,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",62,"^19",72,"^E","map__48670"],["^ ","^18",77,"^19",72],["^ ","^18",0,"^19",73]],"^1@",[["^ ","^18",4,"^19",71,"^E","stage"]],"~i57",[["^ ","^18",4,"^19",72,"^E","left-margin"]],"~i74",[["^ ","^18",4,"^19",70,"^E","st"]],"~i78",[["^ ","^18",282,"^19",67,"^E","line"]]],"~i41",["^ ","~i2",[["^ ","^18",0,"^19",73],["^ ","^18",60,"^19",73],["^ ","^18",143,"^19",73],["^ ","^18",198,"^19",73]],"~i3",[["^ ","^18",7,"^19",73,"^E","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^1;",[["^ ","^18",57,"^19",73,"^E","st"]],"^1R",[["^ ","^18",263,"^19",73,"^E","cljs.core/conj"]],"~i39",[["^ ","^18",278,"^19",73]],"^1W",[["^ ","^18",278,"^19",73,"^E","devcards.util.markdown/strip-left-margin"]],"~i58",[["^ ","^18",319,"^19",73,"^E","line"]],"~i63",[["^ ","^18",324,"^19",73,"^E","left-margin"]]],"~i43",["^ ","~i0",[["^ ","^18",0,"^19",75],["^ ","^18",0,"^19",75,"^E","cljs.core/-add-method"],["^ ","^18",22,"^19",75,"^E","devcards.util.markdown/block-parser"],["^ ","^18",58,"^19",75],["^ ","^18",141,"^19",75],["^ ","^18",193,"^19",75],["^ ","^18",267,"^19",75],["^ ","^18",278,"^19",75,"^E","p__48672"],["^ ","^18",0,"^19",76],["^ ","^18",0,"^19",76],["^ ","^18",4,"^19",76,"^E","map__48673"],["^ ","^18",17,"^19",76,"^E","p__48672"],["^ ","^18",4,"^19",77,"^E","map__48673"],["^ ","^18",21,"^19",77],["^ ","^18",23,"^19",77],["^ ","^18",25,"^19",77],["^ ","^18",27,"^19",77],["^ ","^18",28,"^19",77,"^E","map__48673"],["^ ","^18",42,"^19",77],["^ ","^18",50,"^19",77],["^ ","^18",52,"^19",77],["^ ","^18",54,"^19",77],["^ ","^18",55,"^19",77],["^ ","^18",55,"^19",77,"^E","map__48673"],["^ ","^18",104,"^19",77],["^ ","^18",115,"^19",77],["^ ","^18",116,"^19",77,"^E","cljs.core/PROTOCOL_SENTINEL"],["^ ","^18",148,"^19",77],["^ ","^18",148,"^19",77,"^E","map__48673"],["^ ","^18",179,"^19",77],["^ ","^18",184,"^19",77],["^ ","^18",191,"^19",77],["^ ","^18",199,"^19",77],["^ ","^18",199,"^19",77,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",245,"^19",77,"^E","cljs.core/hash-map"],["^ ","^18",264,"^19",77,"^E","map__48673"],["^ ","^18",276,"^19",77,"^E","map__48673"],["^ ","^18",9,"^19",78,"^E","map__48673"],["^ ","^18",12,"^19",79],["^ ","^18",12,"^19",79,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",56,"^19",79,"^E","map__48673"],["^ ","^18",71,"^19",79],["^ ","^18",0,"^19",80]],"~i53",[["^ ","^18",4,"^19",79,"^E","stage"]],"~i64",[["^ ","^18",4,"^19",78,"^E","st"]],"~i68",[["^ ","^18",287,"^19",75,"^E","line"]]],"~i44",["^ ","~i2",[["^ ","^18",0,"^19",80],["^ ","^18",60,"^19",80],["^ ","^18",143,"^19",80],["^ ","^18",198,"^19",80]],"~i3",[["^ ","^18",7,"^19",80,"^E","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^1;",[["^ ","^18",57,"^19",80,"^E","st"]],"^1R",[["^ ","^18",263,"^19",80,"^E","cljs.core/conj"]],"^20",[["^ ","^18",278,"^19",80]],"^1W",[["^ ","^18",278,"^19",80,"^E","cljs.core.subs.cljs$core$IFn$_invoke$arity$2"]],"^1U",[["^ ","^18",323,"^19",80,"^E","line"]],"~i50",[["^ ","^18",328,"^19",80],["^ ","^18",328,"^19",80]],"~i67",[["^ ","^18",431,"^19",80,"^E","stage"]]],"~i46",["^ ","~i0",[["^ ","^18",0,"^19",82],["^ ","^18",0,"^19",82,"^E","cljs.core/-add-method"],["^ ","^18",22,"^19",82,"^E","devcards.util.markdown/block-parser"],["^ ","^18",58,"^19",82],["^ ","^18",141,"^19",82],["^ ","^18",196,"^19",82],["^ ","^18",265,"^19",82],["^ ","^18",276,"^19",82,"^E","p__48679"],["^ ","^18",0,"^19",83],["^ ","^18",0,"^19",83],["^ ","^18",4,"^19",83,"^E","map__48680"],["^ ","^18",17,"^19",83,"^E","p__48679"],["^ ","^18",4,"^19",84,"^E","map__48680"],["^ ","^18",21,"^19",84],["^ ","^18",23,"^19",84],["^ ","^18",25,"^19",84],["^ ","^18",27,"^19",84],["^ ","^18",28,"^19",84,"^E","map__48680"],["^ ","^18",42,"^19",84],["^ ","^18",50,"^19",84],["^ ","^18",52,"^19",84],["^ ","^18",54,"^19",84],["^ ","^18",55,"^19",84],["^ ","^18",55,"^19",84,"^E","map__48680"],["^ ","^18",104,"^19",84],["^ ","^18",115,"^19",84],["^ ","^18",116,"^19",84,"^E","cljs.core/PROTOCOL_SENTINEL"],["^ ","^18",148,"^19",84],["^ ","^18",148,"^19",84,"^E","map__48680"],["^ ","^18",179,"^19",84],["^ ","^18",184,"^19",84],["^ ","^18",191,"^19",84],["^ ","^18",199,"^19",84],["^ ","^18",199,"^19",84,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",245,"^19",84,"^E","cljs.core/hash-map"],["^ ","^18",264,"^19",84,"^E","map__48680"],["^ ","^18",276,"^19",84,"^E","map__48680"],["^ ","^18",9,"^19",85,"^E","map__48680"],["^ ","^18",12,"^19",86],["^ ","^18",12,"^19",86,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",56,"^19",86,"^E","map__48680"],["^ ","^18",71,"^19",86],["^ ","^18",12,"^19",87],["^ ","^18",12,"^19",87,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",56,"^19",87,"^E","map__48680"],["^ ","^18",71,"^19",87],["^ ","^18",0,"^19",88]],"^1V",[["^ ","^18",4,"^19",86,"^E","stage"]],"^21",[["^ ","^18",4,"^19",87,"^E","accum"]],"~i69",[["^ ","^18",4,"^19",85,"^E","st"]],"~i73",[["^ ","^18",285,"^19",82,"^E","line"]]],"~i47",["^ ","~i2",[["^ ","^18",0,"^19",88],["^ ","^18",0,"^19",89]],"~i8",[["^ ","^18",4,"^19",88,"^E","lang"]],"^1;",[["^ ","^18",11,"^19",88]],"^1A",[["^ ","^18",11,"^19",88,"^E","cljs.core/second"]],"^1K",[["^ ","^18",28,"^19",88]],"^1L",[["^ ","^18",28,"^19",88,"^E","devcards.util.markdown/matches-delim?"]],"^1S",[["^ ","^18",72,"^19",88,"^E","line"]]],"~i48",["^ ","~i8",[["^ ","^18",99,"^19",89,"^E","st"]]],"~i49",["^ ","~i6",[["^ ","^18",53,"^19",89],["^ ","^18",102,"^19",89]],"~i7",[["^ ","^18",53,"^19",89,"^E","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^1J",[["^ ","^18",158,"^19",89]],"^1K",[["^ ","^18",158,"^19",89,"^E","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^1C",[["^ ","^18",203,"^19",89,"^E","accum"]],"~i32",[["^ ","^18",209,"^19",89,"^E","stage"]]],"^28",["^ ","~i6",[["^ ","^18",0,"^19",89],["^ ","^18",217,"^19",89],["^ ","^18",272,"^19",89],["^ ","^18",315,"^19",89],["^ ","^18",368,"^19",89],["^ ","^18",434,"^19",89],["^ ","^18",536,"^19",89],["^ ","^18",658,"^19",89],["^ ","^18",715,"^19",89]],"~i7",[["^ ","^18",7,"^19",89,"^E","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]]],"^1V",["^ ","^1J",[["^ ","^18",488,"^19",89],["^ ","^18",525,"^19",89],["^ ","^18",530,"^19",89]],"^1N",[["^ ","^18",490,"^19",89]],"^1P",[["^ ","^18",490,"^19",89,"^E","clojure.string/blank?"]],"^1U",[["^ ","^18",518,"^19",89,"^E","lang"]],"^1@",[["^ ","^18",530,"^19",89,"^E","lang"]]],"^24",["^ ","^1N",[["^ ","^18",609,"^19",89]],"^1P",[["^ ","^18",609,"^19",89,"^E","devcards.util.markdown/leading-space-count"]],"^1@",[["^ ","^18",652,"^19",89,"^E","line"]]],"~i56",["^ ","~i0",[["^ ","^18",0,"^19",91],["^ ","^18",0,"^19",91,"^E","cljs.core/-add-method"],["^ ","^18",22,"^19",91,"^E","devcards.util.markdown/block-parser"],["^ ","^18",58,"^19",91],["^ ","^18",141,"^19",91],["^ ","^18",196,"^19",91],["^ ","^18",270,"^19",91],["^ ","^18",281,"^19",91,"^E","p__48682"],["^ ","^18",0,"^19",92],["^ ","^18",0,"^19",92],["^ ","^18",4,"^19",92,"^E","map__48683"],["^ ","^18",17,"^19",92,"^E","p__48682"],["^ ","^18",4,"^19",93,"^E","map__48683"],["^ ","^18",21,"^19",93],["^ ","^18",23,"^19",93],["^ ","^18",25,"^19",93],["^ ","^18",27,"^19",93],["^ ","^18",28,"^19",93,"^E","map__48683"],["^ ","^18",42,"^19",93],["^ ","^18",50,"^19",93],["^ ","^18",52,"^19",93],["^ ","^18",54,"^19",93],["^ ","^18",55,"^19",93],["^ ","^18",55,"^19",93,"^E","map__48683"],["^ ","^18",104,"^19",93],["^ ","^18",115,"^19",93],["^ ","^18",116,"^19",93,"^E","cljs.core/PROTOCOL_SENTINEL"],["^ ","^18",148,"^19",93],["^ ","^18",148,"^19",93,"^E","map__48683"],["^ ","^18",179,"^19",93],["^ ","^18",184,"^19",93],["^ ","^18",191,"^19",93],["^ ","^18",199,"^19",93],["^ ","^18",199,"^19",93,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",245,"^19",93,"^E","cljs.core/hash-map"],["^ ","^18",264,"^19",93,"^E","map__48683"],["^ ","^18",276,"^19",93,"^E","map__48683"],["^ ","^18",9,"^19",94,"^E","map__48683"],["^ ","^18",12,"^19",95],["^ ","^18",12,"^19",95,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",56,"^19",95,"^E","map__48683"],["^ ","^18",71,"^19",95],["^ ","^18",12,"^19",96],["^ ","^18",12,"^19",96,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",56,"^19",96,"^E","map__48683"],["^ ","^18",71,"^19",96],["^ ","^18",0,"^19",97]],"~i54",[["^ ","^18",4,"^19",95,"^E","stage"]],"~i60",[["^ ","^18",4,"^19",96,"^E","accum"]],"~i71",[["^ ","^18",4,"^19",94,"^E","st"]],"^1F",[["^ ","^18",290,"^19",91,"^E","line"]]],"^1X",["^ ","~i6",[["^ ","^18",99,"^19",97,"^E","st"]]],"^21",["^ ","~i4",[["^ ","^18",53,"^19",97],["^ ","^18",102,"^19",97]],"~i5",[["^ ","^18",53,"^19",97,"^E","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"~i18",[["^ ","^18",158,"^19",97]],"~i19",[["^ ","^18",158,"^19",97,"^E","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^1>",[["^ ","^18",203,"^19",97,"^E","accum"]],"^1N",[["^ ","^18",209,"^19",97,"^E","stage"]]],"~i59",["^ ","~i4",[["^ ","^18",0,"^19",97],["^ ","^18",217,"^19",97],["^ ","^18",272,"^19",97],["^ ","^18",315,"^19",97],["^ ","^18",368,"^19",97],["^ ","^18",429,"^19",97],["^ ","^18",486,"^19",97]],"~i5",[["^ ","^18",7,"^19",97,"^E","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]]],"~i61",["^ ","~i0",[["^ ","^18",0,"^19",99],["^ ","^18",48,"^19",99],["^ ","^18",0,"^19",100]],"~i6",[["^ ","^18",0,"^19",99,"^E","devcards.util.markdown/parse-out-blocks*"]],"^1?",[["^ ","^18",104,"^19",99,"^E","m"]]],"~i62",["^ ","~i2",[["^ ","^18",0,"^19",100],["^ ","^18",0,"^19",101]],"~i8",[["^ ","^18",4,"^19",100,"^E","lines"]],"^1A",[["^ ","^18",12,"^19",100],["^ ","^18",65,"^19",100]],"^1I",[["^ ","^18",12,"^19",100,"^E","clojure.string.split.cljs$core$IFn$_invoke$arity$2"]],"^1O",[["^ ","^18",63,"^19",100,"^E","m"]]],"^22",["^ ","~i4",[["^ ","^18",0,"^19",101],["^ ","^18",90,"^19",101],["^ ","^18",133,"^19",101],["^ ","^18",188,"^19",101],["^ ","^18",231,"^19",101],["^ ","^18",284,"^19",101],["^ ","^18",345,"^19",101],["^ ","^18",402,"^19",101],["^ ","^18",443,"^19",101],["^ ","^18",499,"^19",101],["^ ","^18",532,"^19",101]],"~i5",[["^ ","^18",7,"^19",101,"^E","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^1H",[["^ ","^18",54,"^19",101,"^E","devcards.util.markdown/block-parser"]]],"^25",["^ ","~i66",[["^ ","^18",599,"^19",101]],"^29",[["^ ","^18",599,"^19",101,"^E","devcards.util.markdown/bullets-left-edge"]],"~i85",[["^ ","^18",640,"^19",101,"^E","lines"]]],"~i65",["^ ","~i5",[["^ ","^18",655,"^19",101,"^E","lines"]]],"^29",["^ ","~i0",[["^ ","^18",0,"^19",103],["^ ","^18",42,"^19",103],["^ ","^18",0,"^19",104]],"~i6",[["^ ","^18",0,"^19",103,"^E","devcards.util.markdown/parse-out-blocks"]],"^1>",[["^ ","^18",92,"^19",103,"^E","m"]]],"^26",["^ ","~i2",[["^ ","^18",0,"^19",104],["^ ","^18",4,"^19",104,"^E","map__48686"],["^ ","^18",4,"^19",105,"^E","map__48686"],["^ ","^18",21,"^19",105],["^ ","^18",23,"^19",105],["^ ","^18",25,"^19",105],["^ ","^18",27,"^19",105],["^ ","^18",28,"^19",105,"^E","map__48686"],["^ ","^18",42,"^19",105],["^ ","^18",50,"^19",105],["^ ","^18",52,"^19",105],["^ ","^18",54,"^19",105],["^ ","^18",55,"^19",105],["^ ","^18",55,"^19",105,"^E","map__48686"],["^ ","^18",104,"^19",105],["^ ","^18",115,"^19",105],["^ ","^18",116,"^19",105,"^E","cljs.core/PROTOCOL_SENTINEL"],["^ ","^18",148,"^19",105],["^ ","^18",148,"^19",105,"^E","map__48686"],["^ ","^18",179,"^19",105],["^ ","^18",184,"^19",105],["^ ","^18",191,"^19",105],["^ ","^18",199,"^19",105],["^ ","^18",199,"^19",105,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",245,"^19",105,"^E","cljs.core/hash-map"],["^ ","^18",264,"^19",105,"^E","map__48686"],["^ ","^18",276,"^19",105,"^E","map__48686"],["^ ","^18",12,"^19",106],["^ ","^18",12,"^19",106,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",56,"^19",106,"^E","map__48686"],["^ ","^18",71,"^19",106],["^ ","^18",12,"^19",107],["^ ","^18",12,"^19",107,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",56,"^19",107,"^E","map__48686"],["^ ","^18",71,"^19",107],["^ ","^18",0,"^19",108]],"^1<",[["^ ","^18",4,"^19",106,"^E","stage"]],"^1L",[["^ ","^18",4,"^19",107,"^E","accum"]],"^1N",[["^ ","^18",17,"^19",104]],"^1P",[["^ ","^18",17,"^19",104,"^E","devcards.util.markdown/parse-out-blocks*"]],"^2?",[["^ ","^18",63,"^19",104,"^E","m"]]],"^2;",["^ ","~i9",[["^ ","^18",1,"^19",123]],"^1M",[["^ ","^18",1,"^19",123,"^E","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^18",46,"^19",123,"^E","accum"]],"^1K",[["^ ","^18",52,"^19",123,"^E","stage"]]],"~i70",["^ ","~i6",[["^ ","^18",1,"^19",116]],"~i7",[["^ ","^18",1,"^19",116,"^E","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^1A",[["^ ","^18",48,"^19",116],["^ ","^18",18,"^19",117,"^E","p__48692"],["^ ","^18",0,"^19",118],["^ ","^18",0,"^19",118],["^ ","^18",4,"^19",118,"^E","map__48693"],["^ ","^18",17,"^19",118,"^E","p__48692"],["^ ","^18",4,"^19",119,"^E","map__48693"],["^ ","^18",21,"^19",119],["^ ","^18",23,"^19",119],["^ ","^18",25,"^19",119],["^ ","^18",27,"^19",119],["^ ","^18",28,"^19",119,"^E","map__48693"],["^ ","^18",42,"^19",119],["^ ","^18",50,"^19",119],["^ ","^18",52,"^19",119],["^ ","^18",54,"^19",119],["^ ","^18",55,"^19",119],["^ ","^18",55,"^19",119,"^E","map__48693"],["^ ","^18",104,"^19",119],["^ ","^18",115,"^19",119],["^ ","^18",116,"^19",119,"^E","cljs.core/PROTOCOL_SENTINEL"],["^ ","^18",148,"^19",119],["^ ","^18",148,"^19",119,"^E","map__48693"],["^ ","^18",179,"^19",119],["^ ","^18",184,"^19",119],["^ ","^18",191,"^19",119],["^ ","^18",199,"^19",119],["^ ","^18",199,"^19",119,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",245,"^19",119,"^E","cljs.core/hash-map"],["^ ","^18",264,"^19",119,"^E","map__48693"],["^ ","^18",276,"^19",119,"^E","map__48693"],["^ ","^18",14,"^19",120],["^ ","^18",14,"^19",120,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^18",58,"^19",120,"^E","map__48693"],["^ ","^18",73,"^19",120],["^ ","^18",0,"^19",121]],"^1:",[["^ ","^18",4,"^19",120,"^E","content"]],"^1T",[["^ ","^18",0,"^19",121]],"^20",[["^ ","^18",7,"^19",121,"^E","cljs.core/not-empty"]],"^2?",[["^ ","^18",27,"^19",121,"^E","content"]]],"^2D",["^ ","~i6",[["^ ","^18",0,"^19",108]],"~i7",[["^ ","^18",7,"^19",108,"^E","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^1G",[["^ ","^18",51,"^19",108],["^ ","^18",0,"^19",110]],"^1<",[["^ ","^18",18,"^19",109,"^E","x"]],"^2F",[["^ ","^18",0,"^19",110],["^ ","^18",59,"^19",110],["^ ","^18",142,"^19",110],["^ ","^18",207,"^19",110],["^ ","^18",18,"^19",111,"^E","p1__48685#"],["^ ","^18",0,"^19",112]],"^1J",[["^ ","^18",7,"^19",110,"^E","cljs.core.update_in.cljs$core$IFn$_invoke$arity$3"]],"^1N",[["^ ","^18",57,"^19",110,"^E","x"]],"^27",[["^ ","^18",0,"^19",112],["^ ","^18",57,"^19",112],["^ ","^18",62,"^19",112,"^E","p1__48685#"]],"^1U",[["^ ","^18",7,"^19",112,"^E","clojure.string.join.cljs$core$IFn$_invoke$arity$2"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["^10","cljsjs/showdown.cljs"],[1537358551030,"^O","^N","~$module$node_modules$showdown$dist$showdown"],["~:macro","^N"],[1537260906000],["^10","goog/math/math.js"],[1508737613441,"^O","~$goog.array","~$goog.asserts"],["^10","goog/array/array.js"],[1508737613441,"^O","^2T"],["^10","goog/debug/error.js"],[1508737613441,"^O"],["^10","goog/dom/nodetype.js"],[1508737613441,"^O"],["^10","shadow/js.js"],[1537358551352,"^O"],["^10","goog/object/object.js"],[1508737613441,"^O"],"~:SHADOW-TIMESTAMP",[1537358551000,1537260906000],["^10","goog/math/long.js"],[1508737613441,"^O","^2T","~$goog.reflect"],["^10","goog/functions/functions.js"],[1508737613441,"^O"],["^10","goog/structs/map.js"],[1508737613441,"^O","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^10","devcards/util/markdown.cljs"],[1508160503995,"^O","^N","^K","^M"],["^10","goog/asserts/asserts.js"],[1508737613441,"^O","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^10","goog/uri/uri.js"],[1508737613441,"^O","^2S","^2T","^30","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^10","goog/base.js"],[1508737613441],["^10","goog/structs/structs.js"],[1508737613441,"^O","^2S","^2Y"],["^10","clojure/string.cljs"],[1537260906289,"^O","^N","^30","~$goog.string.StringBuffer"],["^10","goog/string/string.js"],[1508737613441,"^O"],["~:shadow.build.npm/resource","node_modules/showdown/dist/showdown.js"],[1537358551000,1513938387000,"~$shadow.js"],["^10","goog/reflect/reflect.js"],[1508737613441,"^O"],["^10","goog/string/stringbuffer.js"],[1508737613441,"^O"],["^10","goog/iter/iter.js"],[1508737613441,"^O","^2S","^2T","~$goog.functions","~$goog.math"],["^10","cljs/core.cljs"],[1537260906289,"~$goog.math.Long","~$goog.math.Integer","^30","^2Y","^2S","~$goog.Uri","^36"],["^10","goog/math/integer.js"],[1508737613441,"^O"],["^10","goog/uri/utils.js"],[1508737613441,"^O","^2S","^2T","^30"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devcards/util/markdown.cljs","^7",1,"^8",5,"^9",1,"^:",27],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E","^F","^I",null,"^J",["^ ","^K","^K","^L","^K","^M","^M","^N","^N","^O","^O"],"^P",["^D",["^Q"]],"~:shadow/js-access-global",["^D",["showdown"]],"^R",null,"~:defs",["^ ","~$leading-space-count",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devcards/util/markdown.cljs","^7",6,"^8",7,"^9",6,"^:",26,"~:arglists",["^U",["~$quote",["^U",[["~$s"]]]]]],"^E","~$devcards.util.markdown/leading-space-count","~:variadic",false,"^6","devcards/util/markdown.cljs","^:",26,"~:method-params",["^U",[["~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^8",1,"^7",6,"^9",6,"~:max-fixed-arity",1,"~:fn-var",true,"^3C",["^U",["^3D",["^U",[["~$s"]]]]]],"~$is-bullet-item?",["^ ","^3B",null,"^5",["^ ","^6","devcards/util/markdown.cljs","^7",10,"^8",7,"^9",10,"^:",22,"^3C",["^U",["^3D",["^U",[["~$s"]]]]]],"^E","~$devcards.util.markdown/is-bullet-item?","^3F",false,"^6","devcards/util/markdown.cljs","^:",22,"^3G",["^U",[["~$s"]]],"^3H",null,"^3I",["^U",[null,null]],"^8",1,"^7",10,"^9",10,"^3J",1,"^3K",true,"^3C",["^U",["^3D",["^U",[["~$s"]]]]]],"~$bullets-left-edge",["^ ","^3B",null,"^5",["^ ","^6","devcards/util/markdown.cljs","^7",12,"^8",7,"^9",12,"^:",24,"^3C",["^U",["^3D",["^U",[["~$lines"]]]]],"~:doc","Find the common left edge of bullet lists in a collection of lines."],"^E","~$devcards.util.markdown/bullets-left-edge","^3F",false,"^6","devcards/util/markdown.cljs","^:",24,"^3G",["^U",[["^3O"]]],"^3H",null,"^3I",["^U",[null,null]],"^8",1,"^7",12,"^9",12,"^3J",1,"^3K",true,"^3C",["^U",["^3D",["^U",[["^3O"]]]]],"^3P","Find the common left edge of bullet lists in a collection of lines."],"~$strip-left-margin",["^ ","^3B",null,"^5",["^ ","^6","devcards/util/markdown.cljs","^7",21,"^8",7,"^9",21,"^:",24,"^3C",["^U",["^3D",["^U",[["~$s","~$margin"]]]]],"^3P","Strip the left margin's extra whitespace, but leave bullet list indents in tact."],"^E","~$devcards.util.markdown/strip-left-margin","^3F",false,"^6","devcards/util/markdown.cljs","^:",24,"^3G",["^U",[["~$s","^3S"]]],"^3H",null,"^3I",["^U",[null,null]],"^8",1,"^7",21,"^9",21,"^3J",2,"^3K",true,"^3C",["^U",["^3D",["^U",[["~$s","^3S"]]]]],"^3P","Strip the left margin's extra whitespace, but leave bullet list indents in tact."],"~$markdown-to-html",["^ ","^3B",null,"^5",["^ ","^6","devcards/util/markdown.cljs","^7",29,"^8",9,"^9",29,"^:",25,"^3C",["^U",["^3D",["^U",[["~$markdown-txt"]]]]],"^3P","render markdown"],"^E","~$devcards.util.markdown/markdown-to-html","^3F",false,"^6","devcards/util/markdown.cljs","^:",25,"^3G",["^U",[["^3V"]]],"^3H",null,"^3I",["^U",[null,null]],"^8",3,"^7",29,"^9",29,"^3J",1,"^3K",true,"^3C",["^U",["^3D",["^U",[["^3V"]]]]],"^3P","render markdown"],"~$matches-delim?",["^ ","^3B",null,"^5",["^ ","^6","devcards/util/markdown.cljs","^7",34,"^8",7,"^9",34,"^:",21,"^3C",["^U",["^3D",["^U",[["~$line"]]]]]],"^E","~$devcards.util.markdown/matches-delim?","^3F",false,"^6","devcards/util/markdown.cljs","^:",21,"^3G",["^U",[["^3Y"]]],"^3H",null,"^3I",["^U",[null,null]],"^8",1,"^7",34,"^9",34,"^3J",1,"^3K",true,"^3C",["^U",["^3D",["^U",[["^3Y"]]]]]],"~$block-parser",["^ ","^E","~$devcards.util.markdown/block-parser","^6","devcards/util/markdown.cljs","^7",37,"^8",1,"^9",37,"^:",23,"^5",["^ ","^6","devcards/util/markdown.cljs","^7",37,"^8",11,"^9",37,"^:",23],"~:tag","~$cljs.core/MultiFn"],"~$parse-out-blocks*",["^ ","^3B",null,"^5",["^ ","^6","devcards/util/markdown.cljs","^7",62,"^8",7,"^9",62,"^:",24,"^3C",["^U",["^3D",["^U",[["~$m"]]]]]],"^E","~$devcards.util.markdown/parse-out-blocks*","^3F",false,"^6","devcards/util/markdown.cljs","^:",24,"^3G",["^U",[["~$m"]]],"^3H",null,"^3I",["^U",[null,null]],"^8",1,"^7",62,"^9",62,"^3J",1,"^3K",true,"^3C",["^U",["^3D",["^U",[["~$m"]]]]]],"~$parse-out-blocks",["^ ","^3B",null,"^5",["^ ","^6","devcards/util/markdown.cljs","^7",68,"^8",7,"^9",68,"^:",23,"^3C",["^U",["^3D",["^U",[["~$m"]]]]]],"^E","~$devcards.util.markdown/parse-out-blocks","^3F",false,"^6","devcards/util/markdown.cljs","^:",23,"^3G",["^U",[["~$m"]]],"^3H",null,"^3I",["^U",[null,null]],"^8",1,"^7",68,"^9",68,"^3J",1,"^3K",true,"^3C",["^U",["^3D",["^U",[["~$m"]]]]]]],"^S",["^ ","^N","^N"],"~:cljs.analyzer/constants",["^ ","^P",["^D",["~:delim","~:markdown","~:stage","~:content","~:default","~:code-block","~:left-margin","~:type","~:accum","~:lang","^7","~:hierarchy","~:leading-spaces"]],"~:order",["^4B","^4:","^48","^7","^4?","^4<","^49","^4>","^4;","^4=","^4C","^4@","^4A"]],"^X",["^ ","^Q",["^D",[]]],"^Y",["^ "],"^Z",["^O","^N","^K","^M"]],"^H","^F","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^2P",[["^4G","~:static-fns"],true,["^4G","~:elide-asserts"],false,["^4G","~:optimize-constants"],null,["^4G","~:external-config"],null,["^4G","~:tooling-config"],null,["^4G","~:emit-constants"],null,["^4G","~:infer-externs"],true,["^4G","^15"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4G","~:fn-invoke-direct"],null,["^4G","^17"],"/dev/null"]]]