["^ ","~:output",["^ ","~:js","goog.provide('fulcro.client');\r\ngoog.require('cljs.core');\r\ngoog.require('fulcro.client.primitives');\r\ngoog.require('fulcro.client.impl.application');\r\ngoog.require('fulcro.client.mutations');\r\ngoog.require('fulcro.client.network');\r\ngoog.require('fulcro.logging');\r\ngoog.require('cljs.core.async');\r\ngoog.require('fulcro.client.impl.protocols');\r\ngoog.require('fulcro.util');\r\ngoog.require('fulcro.client.util');\r\ngoog.require('clojure.set');\r\ngoog.require('goog.dom');\r\ngoog.require('cljs.spec.alpha');\r\ngoog.require('fulcro.history');\r\ngoog.require('goog.Uri');\r\n\r\n\r\n\r\n\r\nif((typeof fulcro !== 'undefined') && (typeof fulcro.client !== 'undefined') && (typeof fulcro.client.fulcro_tools !== 'undefined')){\r\n} else {\r\nfulcro.client.fulcro_tools = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\n}\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client\",\"tool-id\",\"fulcro.client/tool-id\",92631184),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"namespace\",\"cljs.core/namespace\",1653264270,null)),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"namespace\",\"cljs.core/namespace\",1653264270,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword_QMARK_,cljs.core.namespace], null),null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client\",\"tx-listen\",\"fulcro.client/tx-listen\",267162069),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Keyword(null,\"tx-info\",\"tx-info\",74571515),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Keyword(null,\"tx-info\",\"tx-info\",74571515),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"tx-info\",\"tx-info\",74571515)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map_QMARK_,cljs.core.map_QMARK_], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Keyword(null,\"tx-info\",\"tx-info\",74571515),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client\",\"network-wrapper\",\"fulcro.client/network-wrapper\",-982819985),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"networks\",\"networks\",1319553937),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"networks\",\"networks\",1319553937),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"networks\",\"networks\",1319553937)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"networks\",\"networks\",1319553937),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),cljs.core.map_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),null,null,null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client\",\"app-started\",\"fulcro.client/app-started\",1807137305),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fulcro-app\",\"fulcro-app\",1931237579),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fulcro-app\",\"fulcro-app\",1931237579),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fulcro-app\",\"fulcro-app\",1931237579)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fulcro-app\",\"fulcro-app\",1931237579),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client\",\"lifecycle-event\",\"fulcro.client/lifecycle-event\",-1809991546),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"mounted\",\"mounted\",-111042616),null,new cljs.core.Keyword(null,\"unmounted\",\"unmounted\",-84871913),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"mounted\",\"mounted\",-111042616),null,new cljs.core.Keyword(null,\"unmounted\",\"unmounted\",-84871913),null], null), null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client\",\"instrument\",\"fulcro.client/instrument\",1644680430),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"props\",\"fulcro.client/props\",-193833067),new cljs.core.Keyword(\"fulcro.client\",\"children\",\"fulcro.client/children\",-825967848),new cljs.core.Keyword(\"fulcro.client\",\"class\",\"fulcro.client/class\",1034283914),new cljs.core.Keyword(\"fulcro.client\",\"factory\",\"fulcro.client/factory\",285523468)], null))),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"props\",\"fulcro.client/props\",-193833067),new cljs.core.Keyword(\"fulcro.client\",\"children\",\"fulcro.client/children\",-825967848),new cljs.core.Keyword(\"fulcro.client\",\"class\",\"fulcro.client/class\",1034283914),new cljs.core.Keyword(\"fulcro.client\",\"factory\",\"fulcro.client/factory\",285523468)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"props\",\"fulcro.client/props\",-193833067),new cljs.core.Keyword(\"fulcro.client\",\"children\",\"fulcro.client/children\",-825967848),new cljs.core.Keyword(\"fulcro.client\",\"class\",\"fulcro.client/class\",1034283914),new cljs.core.Keyword(\"fulcro.client\",\"factory\",\"fulcro.client/factory\",285523468)], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__43040){\r\nreturn cljs.core.map_QMARK_(G__43040);\r\n}),(function (G__43040){\r\nreturn cljs.core.contains_QMARK_(G__43040,new cljs.core.Keyword(null,\"props\",\"props\",453281727));\r\n}),(function (G__43040){\r\nreturn cljs.core.contains_QMARK_(G__43040,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\n}),(function (G__43040){\r\nreturn cljs.core.contains_QMARK_(G__43040,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996));\r\n}),(function (G__43040){\r\nreturn cljs.core.contains_QMARK_(G__43040,new cljs.core.Keyword(null,\"factory\",\"factory\",63933746));\r\n})], null),(function (G__43040){\r\nreturn ((cljs.core.map_QMARK_(G__43040)) && (cljs.core.contains_QMARK_(G__43040,new cljs.core.Keyword(null,\"props\",\"props\",453281727))) && (cljs.core.contains_QMARK_(G__43040,new cljs.core.Keyword(null,\"children\",\"children\",-940561982))) && (cljs.core.contains_QMARK_(G__43040,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996))) && (cljs.core.contains_QMARK_(G__43040,new cljs.core.Keyword(null,\"factory\",\"factory\",63933746))));\r\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"props\",\"fulcro.client/props\",-193833067),new cljs.core.Keyword(\"fulcro.client\",\"children\",\"fulcro.client/children\",-825967848),new cljs.core.Keyword(\"fulcro.client\",\"class\",\"fulcro.client/class\",1034283914),new cljs.core.Keyword(\"fulcro.client\",\"factory\",\"fulcro.client/factory\",285523468)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"props\",\"props\",453281727),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),new cljs.core.Keyword(null,\"factory\",\"factory\",63933746)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"props\",\"props\",453281727))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"class\",\"class\",-2030961996))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"factory\",\"factory\",63933746)))], null),null]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"props\",\"fulcro.client/props\",-193833067),new cljs.core.Keyword(\"fulcro.client\",\"children\",\"fulcro.client/children\",-825967848),new cljs.core.Keyword(\"fulcro.client\",\"class\",\"fulcro.client/class\",1034283914),new cljs.core.Keyword(\"fulcro.client\",\"factory\",\"fulcro.client/factory\",285523468)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"props\",\"fulcro.client/props\",-193833067),new cljs.core.Keyword(\"fulcro.client\",\"children\",\"fulcro.client/children\",-825967848),new cljs.core.Keyword(\"fulcro.client\",\"class\",\"fulcro.client/class\",1034283914),new cljs.core.Keyword(\"fulcro.client\",\"factory\",\"fulcro.client/factory\",285523468)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client\",\"component-lifecycle\",\"fulcro.client/component-lifecycle\",1855890964),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"react-component\",\"react-component\",-1880013598),new cljs.core.Symbol(\"fulcro.client.primitives\",\"component?\",\"fulcro.client.primitives/component?\",-1611256591,null),new cljs.core.Keyword(null,\"event\",\"event\",301435442),new cljs.core.Keyword(\"fulcro.client\",\"lifecycle-event\",\"fulcro.client/lifecycle-event\",-1809991546)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"react-component\",\"react-component\",-1880013598),new cljs.core.Symbol(\"fulcro.client.primitives\",\"component?\",\"fulcro.client.primitives/component?\",-1611256591,null),new cljs.core.Keyword(null,\"event\",\"event\",301435442),new cljs.core.Keyword(\"fulcro.client\",\"lifecycle-event\",\"fulcro.client/lifecycle-event\",-1809991546)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"react-component\",\"react-component\",-1880013598),new cljs.core.Keyword(null,\"event\",\"event\",301435442)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [fulcro.client.primitives.component_QMARK_,new cljs.core.Keyword(\"fulcro.client\",\"lifecycle-event\",\"fulcro.client/lifecycle-event\",-1809991546)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"fulcro.client.primitives\",\"component?\",\"fulcro.client.primitives/component?\",-1611256591,null),new cljs.core.Keyword(\"fulcro.client\",\"lifecycle-event\",\"fulcro.client/lifecycle-event\",-1809991546)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"react-component\",\"react-component\",-1880013598),new cljs.core.Symbol(\"fulcro.client.primitives\",\"component?\",\"fulcro.client.primitives/component?\",-1611256591,null),new cljs.core.Keyword(null,\"event\",\"event\",301435442),new cljs.core.Keyword(\"fulcro.client\",\"lifecycle-event\",\"fulcro.client/lifecycle-event\",-1809991546)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client\",\"instrument-wrapper\",\"fulcro.client/instrument-wrapper\",-649421918),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"existing-instrument\",\"existing-instrument\",-760726145),new cljs.core.Keyword(\"fulcro.client\",\"instrument\",\"fulcro.client/instrument\",1644680430)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"fulcro.client\",\"instrument\",\"fulcro.client/instrument\",1644680430)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"existing-instrument\",\"existing-instrument\",-760726145),new cljs.core.Keyword(\"fulcro.client\",\"instrument\",\"fulcro.client/instrument\",1644680430)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"existing-instrument\",\"existing-instrument\",-760726145)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"instrument\",\"fulcro.client/instrument\",1644680430)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"instrument\",\"fulcro.client/instrument\",1644680430)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"existing-instrument\",\"existing-instrument\",-760726145),new cljs.core.Keyword(\"fulcro.client\",\"instrument\",\"fulcro.client/instrument\",1644680430)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"fulcro.client\",\"instrument\",\"fulcro.client/instrument\",1644680430),new cljs.core.Keyword(\"fulcro.client\",\"instrument\",\"fulcro.client/instrument\",1644680430),null,null),new cljs.core.Keyword(\"fulcro.client\",\"instrument\",\"fulcro.client/instrument\",1644680430),null,null,null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client\",\"tool-registry\",\"fulcro.client/tool-registry\",-1958742535),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"tool-id\",\"fulcro.client/tool-id\",92631184)], null),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"tx-listen\",\"fulcro.client/tx-listen\",267162069),new cljs.core.Keyword(\"fulcro.client\",\"network-wrapper\",\"fulcro.client/network-wrapper\",-982819985),new cljs.core.Keyword(\"fulcro.client\",\"app-started\",\"fulcro.client/app-started\",1807137305),new cljs.core.Keyword(\"fulcro.client\",\"component-lifecycle\",\"fulcro.client/component-lifecycle\",1855890964),new cljs.core.Keyword(\"fulcro.client\",\"instrument-wrapper\",\"fulcro.client/instrument-wrapper\",-649421918)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__43086){\r\nreturn cljs.core.map_QMARK_(G__43086);\r\n}),(function (G__43086){\r\nreturn cljs.core.contains_QMARK_(G__43086,new cljs.core.Keyword(\"fulcro.client\",\"tool-id\",\"fulcro.client/tool-id\",92631184));\r\n})], null),(function (G__43086){\r\nreturn ((cljs.core.map_QMARK_(G__43086)) && (cljs.core.contains_QMARK_(G__43086,new cljs.core.Keyword(\"fulcro.client\",\"tool-id\",\"fulcro.client/tool-id\",92631184))));\r\n}),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"tx-listen\",\"fulcro.client/tx-listen\",267162069),new cljs.core.Keyword(\"fulcro.client\",\"network-wrapper\",\"fulcro.client/network-wrapper\",-982819985),new cljs.core.Keyword(\"fulcro.client\",\"app-started\",\"fulcro.client/app-started\",1807137305),new cljs.core.Keyword(\"fulcro.client\",\"component-lifecycle\",\"fulcro.client/component-lifecycle\",1855890964),new cljs.core.Keyword(\"fulcro.client\",\"instrument-wrapper\",\"fulcro.client/instrument-wrapper\",-649421918)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"tool-id\",\"fulcro.client/tool-id\",92631184)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"tool-id\",\"fulcro.client/tool-id\",92631184)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"tool-id\",\"fulcro.client/tool-id\",92631184)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"tx-listen\",\"fulcro.client/tx-listen\",267162069),new cljs.core.Keyword(\"fulcro.client\",\"network-wrapper\",\"fulcro.client/network-wrapper\",-982819985),new cljs.core.Keyword(\"fulcro.client\",\"app-started\",\"fulcro.client/app-started\",1807137305),new cljs.core.Keyword(\"fulcro.client\",\"component-lifecycle\",\"fulcro.client/component-lifecycle\",1855890964),new cljs.core.Keyword(\"fulcro.client\",\"instrument-wrapper\",\"fulcro.client/instrument-wrapper\",-649421918)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"fulcro.client\",\"tool-id\",\"fulcro.client/tool-id\",92631184)))], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client\",\"tx-listen\",\"fulcro.client/tx-listen\",267162069),new cljs.core.Keyword(\"fulcro.client\",\"network-wrapper\",\"fulcro.client/network-wrapper\",-982819985),new cljs.core.Keyword(\"fulcro.client\",\"app-started\",\"fulcro.client/app-started\",1807137305),new cljs.core.Keyword(\"fulcro.client\",\"component-lifecycle\",\"fulcro.client/component-lifecycle\",1855890964),new cljs.core.Keyword(\"fulcro.client\",\"instrument-wrapper\",\"fulcro.client/instrument-wrapper\",-649421918)], null)])));\r\n/**\r\n * Register a debug tool. When an app starts, the debug tool can have several hooks that are notified:\r\n * \r\n *   ::tool-id some identifier to place the tool into the tool map\r\n *   ::tx-listen is a (fn [tx info] ...) that will be called on every `transact!` of the app. Return value is ignored.\r\n *   ::network-wrapper is (fn [network-map] network-map') that will be given the networking config BEFORE it is initialized. You can wrap\r\n *   them, but you MUST return a compatible map out or you'll disable networking.\r\n *   ::component-lifecycle is (fn [component evt]) that is called with evt of :mounted and :unmounted to tell you when the given component mounts/unmounts.\r\n *   ::instrument-wrapper is a (fn [instrument] instrument') that allows you to wrap your own instrumentation (for rendering) around any existing (which may be nil)\r\n *   ::app-started (fn [app] ...) that will be called once the app is mounted, just like started-callback. Return value ignored.\r\n */\r\nfulcro.client.register_tool = (function fulcro$client$register_tool(p__43120){\r\nvar map__43121 = p__43120;\r\nvar map__43121__$1 = ((((!((map__43121 == null)))?(((((map__43121.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43121.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43121):map__43121);\r\nvar tool_registry = map__43121__$1;\r\nvar tool_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43121__$1,new cljs.core.Keyword(\"fulcro.client\",\"tool-id\",\"fulcro.client/tool-id\",92631184));\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(fulcro.client.fulcro_tools,cljs.core.assoc,tool_id,tool_registry);\r\n});\r\nfulcro.client.normalize_network = (function fulcro$client$normalize_network(networking){\r\nif((function (){var or__3949__auto__ = ((!((networking == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === networking.fulcro$client$network$FulcroRemoteI$))))?true:false):false);\r\nif(or__3949__auto__){\r\nreturn or__3949__auto__;\r\n} else {\r\nif(!((networking == null))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === networking.fulcro$client$network$FulcroNetwork$)))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n})()){\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576),networking], null);\r\n} else {\r\nreturn networking;\r\n}\r\n});\r\nfulcro.client.add_tools = (function fulcro$client$add_tools(original_start,original_net,original_tx_listen,original_instrument){\r\nvar net = fulcro.client.normalize_network(original_net);\r\nvar listen = (function (){var or__3949__auto__ = original_tx_listen;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn cljs.core.constantly(null);\r\n}\r\n})();\r\nvar started = (function (){var or__3949__auto__ = original_start;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn cljs.core.constantly(null);\r\n}\r\n})();\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (net,listen,started){\r\nreturn (function (p__43142,p__43143){\r\nvar vec__43144 = p__43142;\r\nvar start = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43144,(0),null);\r\nvar net__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43144,(1),null);\r\nvar listen__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43144,(2),null);\r\nvar instrument = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43144,(3),null);\r\nvar lifecycle = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43144,(4),null);\r\nvar map__43147 = p__43143;\r\nvar map__43147__$1 = ((((!((map__43147 == null)))?(((((map__43147.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43147.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43147):map__43147);\r\nvar tool_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43147__$1,new cljs.core.Keyword(\"fulcro.client\",\"tool-id\",\"fulcro.client/tool-id\",92631184));\r\nvar tx_listen = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43147__$1,new cljs.core.Keyword(\"fulcro.client\",\"tx-listen\",\"fulcro.client/tx-listen\",267162069));\r\nvar network_wrapper = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43147__$1,new cljs.core.Keyword(\"fulcro.client\",\"network-wrapper\",\"fulcro.client/network-wrapper\",-982819985));\r\nvar app_started = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43147__$1,new cljs.core.Keyword(\"fulcro.client\",\"app-started\",\"fulcro.client/app-started\",1807137305));\r\nvar instrument_wrapper = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43147__$1,new cljs.core.Keyword(\"fulcro.client\",\"instrument-wrapper\",\"fulcro.client/instrument-wrapper\",-649421918));\r\nvar component_lifecycle = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43147__$1,new cljs.core.Keyword(\"fulcro.client\",\"component-lifecycle\",\"fulcro.client/component-lifecycle\",1855890964));\r\nvar start__$1 = (cljs.core.truth_(app_started)?((function (vec__43144,start,net__$1,listen__$1,instrument,lifecycle,map__43147,map__43147__$1,tool_id,tx_listen,network_wrapper,app_started,instrument_wrapper,component_lifecycle,net,listen,started){\r\nreturn (function (app){\r\n(app_started.cljs$core$IFn$_invoke$arity$1 ? app_started.cljs$core$IFn$_invoke$arity$1(app) : app_started.call(null,app));\r\n\r\nreturn (start.cljs$core$IFn$_invoke$arity$1 ? start.cljs$core$IFn$_invoke$arity$1(app) : start.call(null,app));\r\n});})(vec__43144,start,net__$1,listen__$1,instrument,lifecycle,map__43147,map__43147__$1,tool_id,tx_listen,network_wrapper,app_started,instrument_wrapper,component_lifecycle,net,listen,started))\r\n:start);\r\nvar net__$2 = (cljs.core.truth_(network_wrapper)?(network_wrapper.cljs$core$IFn$_invoke$arity$1 ? network_wrapper.cljs$core$IFn$_invoke$arity$1(net__$1) : network_wrapper.call(null,net__$1)):net__$1);\r\nvar listen__$2 = (cljs.core.truth_(tx_listen)?((function (start__$1,net__$2,vec__43144,start,net__$1,listen__$1,instrument,lifecycle,map__43147,map__43147__$1,tool_id,tx_listen,network_wrapper,app_started,instrument_wrapper,component_lifecycle,net,listen,started){\r\nreturn (function (env,info){\r\nreturn (tx_listen.cljs$core$IFn$_invoke$arity$2 ? tx_listen.cljs$core$IFn$_invoke$arity$2(env,info) : tx_listen.call(null,env,info));\r\n});})(start__$1,net__$2,vec__43144,start,net__$1,listen__$1,instrument,lifecycle,map__43147,map__43147__$1,tool_id,tx_listen,network_wrapper,app_started,instrument_wrapper,component_lifecycle,net,listen,started))\r\n:listen__$1);\r\nvar instrument__$1 = (cljs.core.truth_(instrument_wrapper)?(instrument_wrapper.cljs$core$IFn$_invoke$arity$1 ? instrument_wrapper.cljs$core$IFn$_invoke$arity$1(instrument) : instrument_wrapper.call(null,instrument)):instrument);\r\nvar lifecycle__$1 = (cljs.core.truth_(component_lifecycle)?((function (start__$1,net__$2,listen__$2,instrument__$1,vec__43144,start,net__$1,listen__$1,instrument,lifecycle,map__43147,map__43147__$1,tool_id,tx_listen,network_wrapper,app_started,instrument_wrapper,component_lifecycle,net,listen,started){\r\nreturn (function (c,e){\r\n(component_lifecycle.cljs$core$IFn$_invoke$arity$2 ? component_lifecycle.cljs$core$IFn$_invoke$arity$2(c,e) : component_lifecycle.call(null,c,e));\r\n\r\nif(cljs.core.truth_(lifecycle)){\r\nreturn (lifecycle.cljs$core$IFn$_invoke$arity$2 ? lifecycle.cljs$core$IFn$_invoke$arity$2(c,e) : lifecycle.call(null,c,e));\r\n} else {\r\nreturn null;\r\n}\r\n});})(start__$1,net__$2,listen__$2,instrument__$1,vec__43144,start,net__$1,listen__$1,instrument,lifecycle,map__43147,map__43147__$1,tool_id,tx_listen,network_wrapper,app_started,instrument_wrapper,component_lifecycle,net,listen,started))\r\n:lifecycle);\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [start__$1,net__$2,listen__$2,instrument__$1,lifecycle__$1], null);\r\n});})(net,listen,started))\r\n,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [started,net,listen,null,null], null),cljs.core.vals(cljs.core.deref(fulcro.client.fulcro_tools)));\r\n});\r\nfulcro.client.mutate = fulcro.client.impl.application.write_entry_point;\r\n/**\r\n * Entry point for creating a new fulcro client. Instantiates an Application with default values, unless\r\n *   overridden by the parameters. If you do not supply a networking object, one will be provided that connects to the\r\n *   same server the application was served from, at `/api`.\r\n * \r\n *   If you supply a `:request-transform` it must be a function:\r\n * \r\n *   ```\r\n *  (fn [{:keys [body headers]}] {:body body' :headers headers'})\r\n *   ```\r\n * \r\n *   it can replace the outgoing EDN of body or headers (returning both as a vector). NOTE: Both of these are clojurescript types.\r\n *   The edn will be encoded with transit, and the headers will be converted to a js map. IMPORTANT: Only supported\r\n *   when using the default built-in single-remote networking.\r\n * \r\n *   `:initial-state` is your applications initial state. If it is an atom, it *must* be normalized. Fulcro databases\r\n *   always have normalization turned on (for server data merging). If it is not an atom, it will be auto-normalized.\r\n * \r\n *   `:started-callback` is an optional function that will receive the intiailized fulcro application after it is\r\n *   mounted in the DOM, and is useful for triggering initial loads, routing mutations, etc. The reconciler is available\r\n *   under the `:reconciler` key (and you can access the app state, root node, etc from there.)\r\n * \r\n *   `:network-error-callback` is a function of three arguments, the app state atom, status code, and the error, which will be invoked for\r\n *   every network error (status code >= 400, or no network found). Only works if you choose to use the default built-in\r\n *   networking (ignored if you also specify :networking).\r\n * \r\n *   `:migrate` is optional. It is a (fn [state tid->rid] ... state') that should return a new state where all tempids\r\n *   (the keys of `tid->rid`) are rewritten to real ids (the values of tid->rid). This defaults to a full recursive\r\n *   algorithm against all data in the app-state, which is correct but possibly slow).  Note that tempids will have an tempid data type.\r\n *   See reconciler documentation for further information.\r\n * \r\n *   `:transit-handlers` (optional). A map with keys for `:read` and `:write`, which contain maps to be used for the read\r\n *   and write side of transit to extend the supported data types. See `make-fulcro-network` in network.cljs. Only used\r\n *   when you default to the built-in networking.\r\n * \r\n *   `:shared` (optional). A map of arbitrary values to be shared across all components, accessible to them via (prim/shared this)\r\n * \r\n *   `:read-local` (optional). An read function for the Parser. (fn [env k params] ...). If supplied,\r\n *   it will be called once for each root-level query key. If it returns `nil` or `false` for that key then the built-in Fulcro read will handle that\r\n *   branch of the root query. If it returns a map with the shape `{:value ...}`, then that will be used for the response. This is *not*\r\n *   recursive. If you begin handling a *branch* (e.g. a join), you must finish doing so (though if using recursion, you can technically handle just\r\n *   the properties that need your custom handling). At any time you can use `prim/db->tree` to get raw graph data from the database for a branch.\r\n *   NOTE: *it will be allowed* to trigger remote reads. This is not recommended, as you will probably have to augment the networking layer to\r\n *   get it to do what you mean. Use `load` instead. You have been warned. Triggering remote reads is allowed, but discouraged and unsupported.\r\n * \r\n *   `:query-interpreter` (optional). A custom query engine (parser and interpreter) that will be used to satisfy all\r\n *   local client queries from the local state database. Cannot be used with `:read-local`.\r\n *   It must be a `(fn [env query] )` that returns the result for the given query. It will not be given mutations.\r\n *   The `env` will contain the `:state` atom, `:shared`, and `:parser`. It may also contain the `:reconciler`.\r\n * \r\n *   `:networking` (optional). An instance of FulcroNetwork that will act as the default remote (named :remote). If\r\n *   you want to support multiple remotes, then this should be a map whose keys are the keyword names of the remotes\r\n *   and whose values are FulcroNetwork instances.\r\n * \r\n *   `:mutation-merge (optional). A function `(fn [state mutation-symbol return-value])` that receives the app state as a\r\n *   map (NOT an atom) and should return the new state as a map. This function is run when network results are being merged,\r\n *   and is called once for each mutation that had a return value on the server. Returning nil from this function is safe, and will be ignored\r\n *   with a console message for debugging. If you need information about the original mutation arguments then you must reflect\r\n *   them back from the server in your return value. By default such values are discarded.\r\n *   \r\n *   `:reconciler-options (optional). A map that will be merged into the reconciler options. Currently it's mostly\r\n *   useful to override things like :root-render and :root-unmount for React Native Apps.`\r\n * \r\n *   There is currently no way to circumvent the encoding of the body into transit. If you want to talk to other endpoints\r\n *   via alternate protocols you must currently implement that outside of the framework (e.g. global functions/state).\r\n *   \r\n */\r\nfulcro.client.new_fulcro_client = (function fulcro$client$new_fulcro_client(var_args){\r\nvar args__4534__auto__ = [];\r\nvar len__4531__auto___43213 = arguments.length;\r\nvar i__4532__auto___43214 = (0);\r\nwhile(true){\r\nif((i__4532__auto___43214 < len__4531__auto___43213)){\r\nargs__4534__auto__.push((arguments[i__4532__auto___43214]));\r\n\r\nvar G__43215 = (i__4532__auto___43214 + (1));\r\ni__4532__auto___43214 = G__43215;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\r\nreturn fulcro.client.new_fulcro_client.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\r\n});\r\n\r\nfulcro.client.new_fulcro_client.cljs$core$IFn$_invoke$arity$variadic = (function (p__43190){\r\nvar map__43191 = p__43190;\r\nvar map__43191__$1 = ((((!((map__43191 == null)))?(((((map__43191.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43191.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43191):map__43191);\r\nvar started_callback = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43191__$1,new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951),cljs.core.constantly(null));\r\nvar initial_state = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43191__$1,new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806),cljs.core.PersistentArrayMap.EMPTY);\r\nvar reconciler_options = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43191__$1,new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035));\r\nvar read_local = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43191__$1,new cljs.core.Keyword(null,\"read-local\",\"read-local\",811906273),cljs.core.constantly(false));\r\nvar network_error_callback = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43191__$1,new cljs.core.Keyword(null,\"network-error-callback\",\"network-error-callback\",93849635),cljs.core.constantly(null));\r\nvar networking = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43191__$1,new cljs.core.Keyword(null,\"networking\",\"networking\",586110628));\r\nvar mutation_merge = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43191__$1,new cljs.core.Keyword(null,\"mutation-merge\",\"mutation-merge\",-2131743322));\r\nvar transit_handlers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43191__$1,new cljs.core.Keyword(null,\"transit-handlers\",\"transit-handlers\",-1206080791));\r\nvar migrate = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43191__$1,new cljs.core.Keyword(null,\"migrate\",\"migrate\",-207110743),null);\r\nvar query_interpreter = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43191__$1,new cljs.core.Keyword(null,\"query-interpreter\",\"query-interpreter\",-981698805));\r\nvar request_transform = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43191__$1,new cljs.core.Keyword(null,\"request-transform\",\"request-transform\",170337297));\r\nvar shared = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43191__$1,new cljs.core.Keyword(null,\"shared\",\"shared\",-384145993),null);\r\nvar networking__$1 = (function (){var or__3949__auto__ = networking;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn fulcro.client.network.make_fulcro_network.cljs$core$IFn$_invoke$arity$variadic(\"/api\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"request-transform\",\"request-transform\",170337297),request_transform,new cljs.core.Keyword(null,\"transit-handlers\",\"transit-handlers\",-1206080791),transit_handlers,new cljs.core.Keyword(null,\"global-error-callback\",\"global-error-callback\",901427631),network_error_callback], 0));\r\n}\r\n})();\r\nvar vec__43197 = fulcro.client.add_tools(started_callback,networking__$1,new cljs.core.Keyword(null,\"tx-listen\",\"tx-listen\",119130367).cljs$core$IFn$_invoke$arity$1(reconciler_options),new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844).cljs$core$IFn$_invoke$arity$1(reconciler_options));\r\nvar started_callback__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43197,(0),null);\r\nvar networking__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43197,(1),null);\r\nvar tx_listen = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43197,(2),null);\r\nvar instrument = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43197,(3),null);\r\nvar lifecycle = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43197,(4),null);\r\nvar G__43201 = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806),initial_state,new cljs.core.Keyword(null,\"read-local\",\"read-local\",811906273),read_local,new cljs.core.Keyword(null,\"mutation-merge\",\"mutation-merge\",-2131743322),mutation_merge,new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951),started_callback__$1,new cljs.core.Keyword(null,\"lifecycle\",\"lifecycle\",341496205),lifecycle,new cljs.core.Keyword(null,\"query-interpreter\",\"query-interpreter\",-981698805),query_interpreter,new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var G__43204 = cljs.core.PersistentArrayMap.EMPTY;\r\nvar G__43204__$1 = (cljs.core.truth_(tx_listen)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__43204,new cljs.core.Keyword(null,\"tx-listen\",\"tx-listen\",119130367),tx_listen):G__43204);\r\nvar G__43204__$2 = (cljs.core.truth_(instrument)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__43204__$1,new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844),instrument):G__43204__$1);\r\nvar G__43204__$3 = (cljs.core.truth_(lifecycle)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__43204__$2,new cljs.core.Keyword(null,\"lifecycle\",\"lifecycle\",341496205),lifecycle):G__43204__$2);\r\nvar G__43204__$4 = (cljs.core.truth_(migrate)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__43204__$3,new cljs.core.Keyword(null,\"migrate\",\"migrate\",-207110743),migrate):G__43204__$3);\r\nif(cljs.core.truth_(shared)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__43204__$4,new cljs.core.Keyword(null,\"shared\",\"shared\",-384145993),shared);\r\n} else {\r\nreturn G__43204__$4;\r\n}\r\n})(),reconciler_options], 0)),new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),networking__$2], null);\r\nreturn (fulcro.client.map__GT_Application.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.map__GT_Application.cljs$core$IFn$_invoke$arity$1(G__43201) : fulcro.client.map__GT_Application.call(null,G__43201));\r\n});\r\n\r\nfulcro.client.new_fulcro_client.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\nfulcro.client.new_fulcro_client.cljs$lang$applyTo = (function (seq43184){\r\nvar self__4519__auto__ = this;\r\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq43184));\r\n});\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\nfulcro.client.FulcroApplication = function(){};\r\n\r\n/**\r\n * Start/replace the webapp on the given DOM ID or DOM Node.\r\n */\r\nfulcro.client.mount = (function fulcro$client$mount(this$,root_component,target_dom_id){\r\nif(((!((this$ == null))) && (!((this$.fulcro$client$FulcroApplication$mount$arity$3 == null))))){\r\nreturn this$.fulcro$client$FulcroApplication$mount$arity$3(this$,root_component,target_dom_id);\r\n} else {\r\nvar x__4243__auto__ = (((this$ == null))?null:this$);\r\nvar m__4244__auto__ = (fulcro.client.mount[goog.typeOf(x__4243__auto__)]);\r\nif(!((m__4244__auto__ == null))){\r\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$3(this$,root_component,target_dom_id) : m__4244__auto__.call(null,this$,root_component,target_dom_id));\r\n} else {\r\nvar m__4244__auto____$1 = (fulcro.client.mount[\"_\"]);\r\nif(!((m__4244__auto____$1 == null))){\r\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$3(this$,root_component,target_dom_id) : m__4244__auto____$1.call(null,this$,root_component,target_dom_id));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"FulcroApplication.mount\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n * Replace the entire app state with the given (pre-normalized) state.\r\n */\r\nfulcro.client.reset_state_BANG_ = (function fulcro$client$reset_state_BANG_(this$,new_state){\r\nif(((!((this$ == null))) && (!((this$.fulcro$client$FulcroApplication$reset_state_BANG_$arity$2 == null))))){\r\nreturn this$.fulcro$client$FulcroApplication$reset_state_BANG_$arity$2(this$,new_state);\r\n} else {\r\nvar x__4243__auto__ = (((this$ == null))?null:this$);\r\nvar m__4244__auto__ = (fulcro.client.reset_state_BANG_[goog.typeOf(x__4243__auto__)]);\r\nif(!((m__4244__auto__ == null))){\r\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$2(this$,new_state) : m__4244__auto__.call(null,this$,new_state));\r\n} else {\r\nvar m__4244__auto____$1 = (fulcro.client.reset_state_BANG_[\"_\"]);\r\nif(!((m__4244__auto____$1 == null))){\r\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$2(this$,new_state) : m__4244__auto____$1.call(null,this$,new_state));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"FulcroApplication.reset-state!\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n * Replace the entire app state with the initial app state defined on the root component (includes auto-merging of unions). callback can be nil, a function, or :original (to call original started-callback).\r\n */\r\nfulcro.client.reset_app_BANG_ = (function fulcro$client$reset_app_BANG_(this$,root_component,callback){\r\nif(((!((this$ == null))) && (!((this$.fulcro$client$FulcroApplication$reset_app_BANG_$arity$3 == null))))){\r\nreturn this$.fulcro$client$FulcroApplication$reset_app_BANG_$arity$3(this$,root_component,callback);\r\n} else {\r\nvar x__4243__auto__ = (((this$ == null))?null:this$);\r\nvar m__4244__auto__ = (fulcro.client.reset_app_BANG_[goog.typeOf(x__4243__auto__)]);\r\nif(!((m__4244__auto__ == null))){\r\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$3(this$,root_component,callback) : m__4244__auto__.call(null,this$,root_component,callback));\r\n} else {\r\nvar m__4244__auto____$1 = (fulcro.client.reset_app_BANG_[\"_\"]);\r\nif(!((m__4244__auto____$1 == null))){\r\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$3(this$,root_component,callback) : m__4244__auto____$1.call(null,this$,root_component,callback));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"FulcroApplication.reset-app!\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n * Remove all pending network requests on the given remote(s). Useful on failures to eliminate cascading failures. Remote can be a keyword, set, or nil. `nil` means all remotes.\r\n */\r\nfulcro.client.clear_pending_remote_requests_BANG_ = (function fulcro$client$clear_pending_remote_requests_BANG_(this$,remotes){\r\nif(((!((this$ == null))) && (!((this$.fulcro$client$FulcroApplication$clear_pending_remote_requests_BANG_$arity$2 == null))))){\r\nreturn this$.fulcro$client$FulcroApplication$clear_pending_remote_requests_BANG_$arity$2(this$,remotes);\r\n} else {\r\nvar x__4243__auto__ = (((this$ == null))?null:this$);\r\nvar m__4244__auto__ = (fulcro.client.clear_pending_remote_requests_BANG_[goog.typeOf(x__4243__auto__)]);\r\nif(!((m__4244__auto__ == null))){\r\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$2(this$,remotes) : m__4244__auto__.call(null,this$,remotes));\r\n} else {\r\nvar m__4244__auto____$1 = (fulcro.client.clear_pending_remote_requests_BANG_[\"_\"]);\r\nif(!((m__4244__auto____$1 == null))){\r\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$2(this$,remotes) : m__4244__auto____$1.call(null,this$,remotes));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"FulcroApplication.clear-pending-remote-requests!\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n * Refresh the UI (force re-render).\r\n */\r\nfulcro.client.refresh = (function fulcro$client$refresh(this$){\r\nif(((!((this$ == null))) && (!((this$.fulcro$client$FulcroApplication$refresh$arity$1 == null))))){\r\nreturn this$.fulcro$client$FulcroApplication$refresh$arity$1(this$);\r\n} else {\r\nvar x__4243__auto__ = (((this$ == null))?null:this$);\r\nvar m__4244__auto__ = (fulcro.client.refresh[goog.typeOf(x__4243__auto__)]);\r\nif(!((m__4244__auto__ == null))){\r\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4244__auto__.call(null,this$));\r\n} else {\r\nvar m__4244__auto____$1 = (fulcro.client.refresh[\"_\"]);\r\nif(!((m__4244__auto____$1 == null))){\r\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4244__auto____$1.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"FulcroApplication.refresh\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n * Return the current UI history of the application, suitable for network transfer\r\n */\r\nfulcro.client.history = (function fulcro$client$history(this$){\r\nif(((!((this$ == null))) && (!((this$.fulcro$client$FulcroApplication$history$arity$1 == null))))){\r\nreturn this$.fulcro$client$FulcroApplication$history$arity$1(this$);\r\n} else {\r\nvar x__4243__auto__ = (((this$ == null))?null:this$);\r\nvar m__4244__auto__ = (fulcro.client.history[goog.typeOf(x__4243__auto__)]);\r\nif(!((m__4244__auto__ == null))){\r\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4244__auto__.call(null,this$));\r\n} else {\r\nvar m__4244__auto____$1 = (fulcro.client.history[\"_\"]);\r\nif(!((m__4244__auto____$1 == null))){\r\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4244__auto____$1.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"FulcroApplication.history\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n * Abort the given request on all remotes. abort-id is a self-assigned ID for the remote interaction.\r\n */\r\nfulcro.client.abort_request_BANG_ = (function fulcro$client$abort_request_BANG_(this$,abort_id){\r\nif(((!((this$ == null))) && (!((this$.fulcro$client$FulcroApplication$abort_request_BANG_$arity$2 == null))))){\r\nreturn this$.fulcro$client$FulcroApplication$abort_request_BANG_$arity$2(this$,abort_id);\r\n} else {\r\nvar x__4243__auto__ = (((this$ == null))?null:this$);\r\nvar m__4244__auto__ = (fulcro.client.abort_request_BANG_[goog.typeOf(x__4243__auto__)]);\r\nif(!((m__4244__auto__ == null))){\r\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$2(this$,abort_id) : m__4244__auto__.call(null,this$,abort_id));\r\n} else {\r\nvar m__4244__auto____$1 = (fulcro.client.abort_request_BANG_[\"_\"]);\r\nif(!((m__4244__auto____$1 == null))){\r\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$2(this$,abort_id) : m__4244__auto____$1.call(null,this$,abort_id));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"FulcroApplication.abort-request!\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n * Returns the application with history reset to its initial, empty state. Resets application history to its initial, empty state. Suitable for resetting the app for situations such as user log out.\r\n */\r\nfulcro.client.reset_history_BANG_ = (function fulcro$client$reset_history_BANG_(this$){\r\nif(((!((this$ == null))) && (!((this$.fulcro$client$FulcroApplication$reset_history_BANG_$arity$1 == null))))){\r\nreturn this$.fulcro$client$FulcroApplication$reset_history_BANG_$arity$1(this$);\r\n} else {\r\nvar x__4243__auto__ = (((this$ == null))?null:this$);\r\nvar m__4244__auto__ = (fulcro.client.reset_history_BANG_[goog.typeOf(x__4243__auto__)]);\r\nif(!((m__4244__auto__ == null))){\r\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4244__auto__.call(null,this$));\r\n} else {\r\nvar m__4244__auto____$1 = (fulcro.client.reset_history_BANG_[\"_\"]);\r\nif(!((m__4244__auto____$1 == null))){\r\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4244__auto____$1.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"FulcroApplication.reset-history!\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n * Starts all remotes in a map. If a remote's `start` returns something that implements `FulcroNetwork`,\r\n *   update the network map with this value. Returns possibly updated `network-map`.\r\n */\r\nfulcro.client.start_networking = (function fulcro$client$start_networking(network_map){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4324__auto__ = (function fulcro$client$start_networking_$_iter__43276(s__43277){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__43277__$1 = s__43277;\r\nwhile(true){\r\nvar temp__5457__auto__ = cljs.core.seq(s__43277__$1);\r\nif(temp__5457__auto__){\r\nvar s__43277__$2 = temp__5457__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__43277__$2)){\r\nvar c__4322__auto__ = cljs.core.chunk_first(s__43277__$2);\r\nvar size__4323__auto__ = cljs.core.count(c__4322__auto__);\r\nvar b__43279 = cljs.core.chunk_buffer(size__4323__auto__);\r\nif((function (){var i__43278 = (0);\r\nwhile(true){\r\nif((i__43278 < size__4323__auto__)){\r\nvar vec__43280 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4322__auto__,i__43278);\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43280,(0),null);\r\nvar remote = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43280,(1),null);\r\nvar started = ((((!((remote == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === remote.fulcro$client$network$FulcroNetwork$))))?true:false):false))?fulcro.client.network.start(remote):null);\r\nvar valid = ((((!((started == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === started.fulcro$client$network$FulcroNetwork$))))?true:false):false))?started:remote);\r\ncljs.core.chunk_append(b__43279,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,valid], null));\r\n\r\nvar G__43319 = (i__43278 + (1));\r\ni__43278 = G__43319;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__43279),fulcro$client$start_networking_$_iter__43276(cljs.core.chunk_rest(s__43277__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__43279),null);\r\n}\r\n} else {\r\nvar vec__43293 = cljs.core.first(s__43277__$2);\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43293,(0),null);\r\nvar remote = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43293,(1),null);\r\nvar started = ((((!((remote == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === remote.fulcro$client$network$FulcroNetwork$))))?true:false):false))?fulcro.client.network.start(remote):null);\r\nvar valid = ((((!((started == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === started.fulcro$client$network$FulcroNetwork$))))?true:false):false))?started:remote);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,valid], null),fulcro$client$start_networking_$_iter__43276(cljs.core.rest(s__43277__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4324__auto__(network_map);\r\n})());\r\n});\r\nfulcro.client.mutation_query_QMARK_ = (function fulcro$client$mutation_query_QMARK_(tx){\r\nreturn cljs.core.boolean$(cljs.core.some((function (p1__43324_SHARP_){\r\nreturn fulcro.util.mutation_QMARK_(p1__43324_SHARP_);\r\n}),tx));\r\n});\r\n/**\r\n * Generate a parser that splits reads and writes across two parsers: the supplied query parser for queries, and the built-in\r\n *   parser for mutations.\r\n */\r\nfulcro.client.split_parser = (function fulcro$client$split_parser(query_parser){\r\nvar mutation_parser = fulcro.client.primitives.parser(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"read\",\"read\",1140058661),cljs.core.constantly(null),new cljs.core.Keyword(null,\"mutate\",\"mutate\",1422419038),fulcro.client.impl.application.write_entry_point], null));\r\nreturn ((function (mutation_parser){\r\nreturn (function() {\r\nvar fulcro$client$split_parser_$_split_parser_STAR_ = null;\r\nvar fulcro$client$split_parser_$_split_parser_STAR___2 = (function (env,query){\r\nreturn fulcro$client$split_parser_$_split_parser_STAR_.cljs$core$IFn$_invoke$arity$3(env,query,null);\r\n});\r\nvar fulcro$client$split_parser_$_split_parser_STAR___3 = (function (env,query,target){\r\nif(cljs.core.truth_(fulcro.client.mutation_query_QMARK_(query))){\r\nreturn (mutation_parser.cljs$core$IFn$_invoke$arity$3 ? mutation_parser.cljs$core$IFn$_invoke$arity$3(env,query,target) : mutation_parser.call(null,env,query,target));\r\n} else {\r\nreturn (query_parser.cljs$core$IFn$_invoke$arity$2 ? query_parser.cljs$core$IFn$_invoke$arity$2(env,query) : query_parser.call(null,env,query));\r\n}\r\n});\r\nfulcro$client$split_parser_$_split_parser_STAR_ = function(env,query,target){\r\nswitch(arguments.length){\r\ncase 2:\r\nreturn fulcro$client$split_parser_$_split_parser_STAR___2.call(this,env,query);\r\ncase 3:\r\nreturn fulcro$client$split_parser_$_split_parser_STAR___3.call(this,env,query,target);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nfulcro$client$split_parser_$_split_parser_STAR_.cljs$core$IFn$_invoke$arity$2 = fulcro$client$split_parser_$_split_parser_STAR___2;\r\nfulcro$client$split_parser_$_split_parser_STAR_.cljs$core$IFn$_invoke$arity$3 = fulcro$client$split_parser_$_split_parser_STAR___3;\r\nreturn fulcro$client$split_parser_$_split_parser_STAR_;\r\n})()\r\n;})(mutation_parser))\r\n});\r\n/**\r\n * Initialize the fulcro Application. Creates network queue, sets up i18n, creates reconciler, mounts it, and returns\r\n *   the initialized app\r\n */\r\nfulcro.client.initialize = (function fulcro$client$initialize(p__43332,initial_state,root_component,dom_id_or_node,reconciler_options){\r\nvar map__43333 = p__43332;\r\nvar map__43333__$1 = ((((!((map__43333 == null)))?(((((map__43333.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43333.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43333):map__43333);\r\nvar app = map__43333__$1;\r\nvar networking = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43333__$1,new cljs.core.Keyword(null,\"networking\",\"networking\",586110628));\r\nvar read_local = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43333__$1,new cljs.core.Keyword(null,\"read-local\",\"read-local\",811906273));\r\nvar started_callback = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43333__$1,new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951));\r\nvar query_interpreter = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43333__$1,new cljs.core.Keyword(null,\"query-interpreter\",\"query-interpreter\",-981698805));\r\nvar network_map = fulcro.client.normalize_network(networking);\r\nvar reconciler_options__$1 = ((cljs.core.not(new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(reconciler_options)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(reconciler_options,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),((typeof dom_id_or_node === 'string')?dom_id_or_node:fulcro.util.unique_key())):reconciler_options);\r\nvar remotes = cljs.core.keys(network_map);\r\nvar send_queues = cljs.core.zipmap(remotes,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (network_map,reconciler_options__$1,remotes,map__43333,map__43333__$1,app,networking,read_local,started_callback,query_interpreter){\r\nreturn (function (){\r\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1024));\r\n});})(network_map,reconciler_options__$1,remotes,map__43333,map__43333__$1,app,networking,read_local,started_callback,query_interpreter))\r\n,remotes));\r\nvar response_channels = cljs.core.zipmap(remotes,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (network_map,reconciler_options__$1,remotes,send_queues,map__43333,map__43333__$1,app,networking,read_local,started_callback,query_interpreter){\r\nreturn (function (){\r\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\r\n});})(network_map,reconciler_options__$1,remotes,send_queues,map__43333,map__43333__$1,app,networking,read_local,started_callback,query_interpreter))\r\n,remotes));\r\nvar parser = (cljs.core.truth_(query_interpreter)?fulcro.client.split_parser(query_interpreter):fulcro.client.primitives.parser(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"read\",\"read\",1140058661),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(fulcro.client.impl.application.read_local,read_local),new cljs.core.Keyword(null,\"mutate\",\"mutate\",1422419038),fulcro.client.impl.application.write_entry_point], null)));\r\nvar initial_app = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(app,new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330),send_queues,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"response-channels\",\"response-channels\",-1871059128),response_channels,new cljs.core.Keyword(null,\"parser\",\"parser\",-1543495310),parser,new cljs.core.Keyword(null,\"mounted?\",\"mounted?\",712114760),true], 0));\r\nvar app_with_networking = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(initial_app,new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),fulcro.client.start_networking(network_map));\r\nvar rec = fulcro.client.impl.application.generate_reconciler(app_with_networking,initial_state,parser,reconciler_options__$1);\r\nvar completed_app = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(app_with_networking,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),rec);\r\nvar node = ((typeof dom_id_or_node === 'string')?goog.dom.getElement(dom_id_or_node):dom_id_or_node);\r\nfulcro.client.impl.application.initialize_global_error_callbacks(completed_app);\r\n\r\nfulcro.client.impl.application.start_network_sequential_processing(completed_app);\r\n\r\nfulcro.client.primitives.add_root_BANG_.cljs$core$IFn$_invoke$arity$3(rec,root_component,node);\r\n\r\n(fulcro.client.merge_alternate_union_elements_BANG_.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.merge_alternate_union_elements_BANG_.cljs$core$IFn$_invoke$arity$2(completed_app,root_component) : fulcro.client.merge_alternate_union_elements_BANG_.call(null,completed_app,root_component));\r\n\r\nif(cljs.core.truth_(started_callback)){\r\n(started_callback.cljs$core$IFn$_invoke$arity$1 ? started_callback.cljs$core$IFn$_invoke$arity$1(completed_app) : started_callback.call(null,completed_app));\r\n} else {\r\n}\r\n\r\nreturn completed_app;\r\n});\r\n/**\r\n * Needed for mocking in tests. Do not use directly. Use FulcroApplication protocol methods instead.\r\n */\r\nfulcro.client.clear_queue = (function fulcro$client$clear_queue(queue){\r\nvar element = cljs.core.async.poll_BANG_(queue);\r\nwhile(true){\r\nif(cljs.core.truth_(element)){\r\nvar G__43344 = cljs.core.async.poll_BANG_(queue);\r\nelement = G__43344;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n});\r\nfulcro.client.abort_items_on_queue = (function fulcro$client$abort_items_on_queue(queue,abort_id){\r\nvar elements = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\r\nvar element_43350 = cljs.core.async.poll_BANG_(queue);\r\nwhile(true){\r\nif(cljs.core.truth_(element_43350)){\r\nif(cljs.core.truth_((function (){var G__43345 = element_43350;\r\nvar G__43345__$1 = (((G__43345 == null))?null:new cljs.core.Keyword(\"fulcro.client.network\",\"abort-id\",\"fulcro.client.network/abort-id\",-22430267).cljs$core$IFn$_invoke$arity$1(G__43345));\r\nif((G__43345__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__43345__$1,abort_id);\r\n}\r\n})())){\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(elements,cljs.core.conj,element_43350);\r\n}\r\n\r\nvar G__43353 = cljs.core.async.poll_BANG_(queue);\r\nelement_43350 = G__43353;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar seq__43346 = cljs.core.seq(cljs.core.deref(elements));\r\nvar chunk__43347 = null;\r\nvar count__43348 = (0);\r\nvar i__43349 = (0);\r\nwhile(true){\r\nif((i__43349 < count__43348)){\r\nvar e = chunk__43347.cljs$core$IIndexed$_nth$arity$2(null,i__43349);\r\ncljs.core.async.offer_BANG_(queue,e);\r\n\r\n\r\nvar G__43355 = seq__43346;\r\nvar G__43356 = chunk__43347;\r\nvar G__43357 = count__43348;\r\nvar G__43358 = (i__43349 + (1));\r\nseq__43346 = G__43355;\r\nchunk__43347 = G__43356;\r\ncount__43348 = G__43357;\r\ni__43349 = G__43358;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto__ = cljs.core.seq(seq__43346);\r\nif(temp__5457__auto__){\r\nvar seq__43346__$1 = temp__5457__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__43346__$1)){\r\nvar c__4351__auto__ = cljs.core.chunk_first(seq__43346__$1);\r\nvar G__43359 = cljs.core.chunk_rest(seq__43346__$1);\r\nvar G__43360 = c__4351__auto__;\r\nvar G__43361 = cljs.core.count(c__4351__auto__);\r\nvar G__43362 = (0);\r\nseq__43346 = G__43359;\r\nchunk__43347 = G__43360;\r\ncount__43348 = G__43361;\r\ni__43349 = G__43362;\r\ncontinue;\r\n} else {\r\nvar e = cljs.core.first(seq__43346__$1);\r\ncljs.core.async.offer_BANG_(queue,e);\r\n\r\n\r\nvar G__43363 = cljs.core.next(seq__43346__$1);\r\nvar G__43364 = null;\r\nvar G__43365 = (0);\r\nvar G__43366 = (0);\r\nseq__43346 = G__43363;\r\nchunk__43347 = G__43364;\r\ncount__43348 = G__43365;\r\ni__43349 = G__43366;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Needed for mocking in tests. Use FulcroApplication protocol methods instead.\r\n */\r\nfulcro.client.reset_history_impl = (function fulcro$client$reset_history_impl(p__43367){\r\nvar map__43368 = p__43367;\r\nvar map__43368__$1 = ((((!((map__43368 == null)))?(((((map__43368.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43368.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43368):map__43368);\r\nvar reconciler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43368__$1,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966));\r\nvar temp__5457__auto__ = fulcro.client.primitives.get_history(reconciler);\r\nif(cljs.core.truth_(temp__5457__auto__)){\r\nvar hist_atom = temp__5457__auto__;\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(hist_atom,((function (hist_atom,temp__5457__auto__,map__43368,map__43368__$1,reconciler){\r\nreturn (function (p__43373){\r\nvar map__43374 = p__43373;\r\nvar map__43374__$1 = ((((!((map__43374 == null)))?(((((map__43374.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43374.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43374):map__43374);\r\nvar max_size = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43374__$1,new cljs.core.Keyword(\"fulcro.history\",\"max-size\",\"fulcro.history/max-size\",338795187));\r\nreturn fulcro.history.new_history(max_size);\r\n});})(hist_atom,temp__5457__auto__,map__43368,map__43368__$1,reconciler))\r\n);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nfulcro.client.refresh_STAR_ = (function fulcro$client$refresh_STAR_(p__43380,root,target){\r\nvar map__43381 = p__43380;\r\nvar map__43381__$1 = ((((!((map__43381 == null)))?(((((map__43381.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43381.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43381):map__43381);\r\nvar app = map__43381__$1;\r\nvar reconciler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43381__$1,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966));\r\nvar old_target_43392 = new cljs.core.Keyword(null,\"target\",\"target\",253001721).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(reconciler)));\r\nvar target_43393__$1 = ((typeof target === 'string')?goog.dom.getElement(target):target);\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = old_target_43392;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn !((old_target_43392 === target_43393__$1));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),264], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Mounting on newly supplied target.\"], 0));\r\n}catch (e43383){if((e43383 instanceof Error)){\r\nvar e__31527__auto___43395 = e43383;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),264], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto___43395], 0));\r\n} else {\r\nthrow e43383;\r\n\r\n}\r\n}\r\nfulcro.client.primitives.remove_root_BANG_(reconciler,old_target_43392);\r\n\r\nfulcro.client.primitives.add_root_BANG_.cljs$core$IFn$_invoke$arity$3(reconciler,root,target_43393__$1);\r\n} else {\r\n}\r\n\r\nreturn fulcro.client.util.force_render.cljs$core$IFn$_invoke$arity$1(reconciler);\r\n});\r\nfulcro.client.mount_STAR_ = (function fulcro$client$mount_STAR_(p__43396,root_component,dom_id_or_node){\r\nvar map__43397 = p__43396;\r\nvar map__43397__$1 = ((((!((map__43397 == null)))?(((((map__43397.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43397.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43397):map__43397);\r\nvar app = map__43397__$1;\r\nvar mounted_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43397__$1,new cljs.core.Keyword(null,\"mounted?\",\"mounted?\",712114760));\r\nvar initial_state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43397__$1,new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806));\r\nvar reconciler_options = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43397__$1,new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035));\r\nif(cljs.core.truth_(mounted_QMARK_)){\r\nfulcro.client.refresh_STAR_(app,root_component,dom_id_or_node);\r\n\r\nreturn app;\r\n} else {\r\nvar uses_initial_app_state_QMARK_ = fulcro.client.primitives.has_initial_app_state_QMARK_(root_component);\r\nvar ui_declared_state = (function (){var and__3938__auto__ = uses_initial_app_state_QMARK_;\r\nif(and__3938__auto__){\r\nreturn fulcro.client.primitives.initial_state(root_component,null);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})();\r\nvar explicit_state_QMARK_ = (function (){var or__3949__auto__ = fulcro.util.atom_QMARK_(initial_state);\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn ((cljs.core.seq(initial_state)) && (cljs.core.map_QMARK_(initial_state)));\r\n}\r\n})();\r\nvar state = (cljs.core.truth_(explicit_state_QMARK_)?(cljs.core.truth_(initial_state)?initial_state:cljs.core.PersistentArrayMap.EMPTY):(cljs.core.truth_(ui_declared_state)?ui_declared_state:cljs.core.PersistentArrayMap.EMPTY\r\n));\r\nreturn fulcro.client.initialize(app,state,root_component,dom_id_or_node,reconciler_options);\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {fulcro.client.FulcroApplication}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\nfulcro.client.Application = (function (initial_state,mutation_merge,started_callback,remotes,networking,send_queues,response_channels,reconciler,read_local,query_interpreter,mounted_QMARK_,reconciler_options,__meta,__extmap,__hash){\r\nthis.initial_state = initial_state;\r\nthis.mutation_merge = mutation_merge;\r\nthis.started_callback = started_callback;\r\nthis.remotes = remotes;\r\nthis.networking = networking;\r\nthis.send_queues = send_queues;\r\nthis.response_channels = response_channels;\r\nthis.reconciler = reconciler;\r\nthis.read_local = read_local;\r\nthis.query_interpreter = query_interpreter;\r\nthis.mounted_QMARK_ = mounted_QMARK_;\r\nthis.reconciler_options = reconciler_options;\r\nthis.__meta = __meta;\r\nthis.__extmap = __extmap;\r\nthis.__hash = __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2229667594;\r\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\r\n});\r\nfulcro.client.Application.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4203__auto__,k__4204__auto__){\r\nvar self__ = this;\r\nvar this__4203__auto____$1 = this;\r\nreturn cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this__4203__auto____$1,k__4204__auto__,null);\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4205__auto__,k43414,else__4206__auto__){\r\nvar self__ = this;\r\nvar this__4205__auto____$1 = this;\r\nvar G__43424 = k43414;\r\nvar G__43424__$1 = (((G__43424 instanceof cljs.core.Keyword))?G__43424.fqn:null);\r\nswitch (G__43424__$1) {\r\ncase \"initial-state\":\r\nreturn self__.initial_state;\r\n\r\nbreak;\r\ncase \"mutation-merge\":\r\nreturn self__.mutation_merge;\r\n\r\nbreak;\r\ncase \"started-callback\":\r\nreturn self__.started_callback;\r\n\r\nbreak;\r\ncase \"remotes\":\r\nreturn self__.remotes;\r\n\r\nbreak;\r\ncase \"networking\":\r\nreturn self__.networking;\r\n\r\nbreak;\r\ncase \"send-queues\":\r\nreturn self__.send_queues;\r\n\r\nbreak;\r\ncase \"response-channels\":\r\nreturn self__.response_channels;\r\n\r\nbreak;\r\ncase \"reconciler\":\r\nreturn self__.reconciler;\r\n\r\nbreak;\r\ncase \"read-local\":\r\nreturn self__.read_local;\r\n\r\nbreak;\r\ncase \"query-interpreter\":\r\nreturn self__.query_interpreter;\r\n\r\nbreak;\r\ncase \"mounted?\":\r\nreturn self__.mounted_QMARK_;\r\n\r\nbreak;\r\ncase \"reconciler-options\":\r\nreturn self__.reconciler_options;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k43414,else__4206__auto__);\r\n\r\n}\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4217__auto__,writer__4218__auto__,opts__4219__auto__){\r\nvar self__ = this;\r\nvar this__4217__auto____$1 = this;\r\nvar pr_pair__4220__auto__ = ((function (this__4217__auto____$1){\r\nreturn (function (keyval__4221__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4218__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4219__auto__,keyval__4221__auto__);\r\n});})(this__4217__auto____$1))\r\n;\r\nreturn cljs.core.pr_sequential_writer(writer__4218__auto__,pr_pair__4220__auto__,\"#fulcro.client.Application{\",\", \",\"}\",opts__4219__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806),self__.initial_state],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"mutation-merge\",\"mutation-merge\",-2131743322),self__.mutation_merge],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951),self__.started_callback],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312),self__.remotes],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),self__.networking],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330),self__.send_queues],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"response-channels\",\"response-channels\",-1871059128),self__.response_channels],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),self__.reconciler],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"read-local\",\"read-local\",811906273),self__.read_local],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"query-interpreter\",\"query-interpreter\",-981698805),self__.query_interpreter],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"mounted?\",\"mounted?\",712114760),self__.mounted_QMARK_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035),self__.reconciler_options],null))], null),self__.__extmap));\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__43413){\r\nvar self__ = this;\r\nvar G__43413__$1 = this;\r\nreturn (new cljs.core.RecordIter((0),G__43413__$1,12,new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806),new cljs.core.Keyword(null,\"mutation-merge\",\"mutation-merge\",-2131743322),new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951),new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312),new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330),new cljs.core.Keyword(null,\"response-channels\",\"response-channels\",-1871059128),new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),new cljs.core.Keyword(null,\"read-local\",\"read-local\",811906273),new cljs.core.Keyword(null,\"query-interpreter\",\"query-interpreter\",-981698805),new cljs.core.Keyword(null,\"mounted?\",\"mounted?\",712114760),new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4201__auto__){\r\nvar self__ = this;\r\nvar this__4201__auto____$1 = this;\r\nreturn self__.__meta;\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4198__auto__){\r\nvar self__ = this;\r\nvar this__4198__auto____$1 = this;\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,self__.__extmap,self__.__hash));\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4207__auto__){\r\nvar self__ = this;\r\nvar this__4207__auto____$1 = this;\r\nreturn (12 + cljs.core.count(self__.__extmap));\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4199__auto__){\r\nvar self__ = this;\r\nvar this__4199__auto____$1 = this;\r\nvar h__4061__auto__ = self__.__hash;\r\nif(!((h__4061__auto__ == null))){\r\nreturn h__4061__auto__;\r\n} else {\r\nvar h__4061__auto____$1 = (function (){var fexpr__43433 = ((function (h__4061__auto__,this__4199__auto____$1){\r\nreturn (function (coll__4200__auto__){\r\nreturn (-1995471013 ^ cljs.core.hash_unordered_coll(coll__4200__auto__));\r\n});})(h__4061__auto__,this__4199__auto____$1))\r\n;\r\nreturn fexpr__43433(this__4199__auto____$1);\r\n})();\r\nself__.__hash = h__4061__auto____$1;\r\n\r\nreturn h__4061__auto____$1;\r\n}\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this43415,other43416){\r\nvar self__ = this;\r\nvar this43415__$1 = this;\r\nreturn ((!((other43416 == null))) && ((this43415__$1.constructor === other43416.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.initial_state,other43416.initial_state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.mutation_merge,other43416.mutation_merge)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.started_callback,other43416.started_callback)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.remotes,other43416.remotes)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.networking,other43416.networking)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.send_queues,other43416.send_queues)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.response_channels,other43416.response_channels)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.reconciler,other43416.reconciler)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.read_local,other43416.read_local)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.query_interpreter,other43416.query_interpreter)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.mounted_QMARK_,other43416.mounted_QMARK_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.reconciler_options,other43416.reconciler_options)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43415__$1.__extmap,other43416.__extmap)));\r\n});\r\n\r\nfulcro.client.Application.prototype.fulcro$client$FulcroApplication$ = cljs.core.PROTOCOL_SENTINEL;\r\n\r\nfulcro.client.Application.prototype.fulcro$client$FulcroApplication$mount$arity$3 = (function (this$,root_component,dom_id_or_node){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn fulcro.client.mount_STAR_(this$__$1,root_component,dom_id_or_node);\r\n});\r\n\r\nfulcro.client.Application.prototype.fulcro$client$FulcroApplication$reset_state_BANG_$arity$2 = (function (this$,new_state){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn cljs.core.reset_BANG_(fulcro.client.primitives.app_state(self__.reconciler),new_state);\r\n});\r\n\r\nfulcro.client.Application.prototype.fulcro$client$FulcroApplication$reset_app_BANG_$arity$3 = (function (this$,root_component,callback){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nif(!(fulcro.client.primitives.has_initial_app_state_QMARK_(root_component))){\r\ntry{return fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),292], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"The specified root component does not implement InitialAppState!\"], 0));\r\n}catch (e43437){if((e43437 instanceof Error)){\r\nvar e__31527__auto__ = e43437;\r\nreturn fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),292], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto__], 0));\r\n} else {\r\nthrow e43437;\r\n\r\n}\r\n}} else {\r\nvar base_state = fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3(root_component,fulcro.client.primitives.initial_state(root_component,null),true);\r\nfulcro.client.clear_pending_remote_requests_BANG_(this$__$1,null);\r\n\r\ncljs.core.reset_BANG_(fulcro.client.primitives.app_state(self__.reconciler),base_state);\r\n\r\nfulcro.client.reset_history_BANG_(this$__$1);\r\n\r\n(fulcro.client.merge_alternate_union_elements_BANG_.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.merge_alternate_union_elements_BANG_.cljs$core$IFn$_invoke$arity$2(this$__$1,root_component) : fulcro.client.merge_alternate_union_elements_BANG_.call(null,this$__$1,root_component));\r\n\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),298], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"updated app state to original \",fulcro.client.primitives.app_state(self__.reconciler)], 0));\r\n}catch (e43440){if((e43440 instanceof Error)){\r\nvar e__31527__auto___43519 = e43440;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),298], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto___43519], 0));\r\n} else {\r\nthrow e43440;\r\n\r\n}\r\n}\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(callback,new cljs.core.Keyword(null,\"original\",\"original\",-445386197))){\r\n(self__.started_callback.cljs$core$IFn$_invoke$arity$1 ? self__.started_callback.cljs$core$IFn$_invoke$arity$1(this$__$1) : self__.started_callback.call(null,this$__$1));\r\n} else {\r\nif(cljs.core.truth_(callback)){\r\n(callback.cljs$core$IFn$_invoke$arity$1 ? callback.cljs$core$IFn$_invoke$arity$1(this$__$1) : callback.call(null,this$__$1));\r\n} else {\r\n}\r\n}\r\n\r\nreturn fulcro.client.refresh(this$__$1);\r\n}\r\n});\r\n\r\nfulcro.client.Application.prototype.fulcro$client$FulcroApplication$clear_pending_remote_requests_BANG_$arity$2 = (function (this$,remotes__$1){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar remotes__$2 = (((remotes__$1 == null))?cljs.core.keys(self__.send_queues):(((remotes__$1 instanceof cljs.core.Keyword))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [remotes__$1], null):remotes__$1\r\n));\r\nvar seq__43442 = cljs.core.seq(remotes__$2);\r\nvar chunk__43443 = null;\r\nvar count__43444 = (0);\r\nvar i__43445 = (0);\r\nwhile(true){\r\nif((i__43445 < count__43444)){\r\nvar r = chunk__43443.cljs$core$IIndexed$_nth$arity$2(null,i__43445);\r\nfulcro.client.clear_queue(cljs.core.get.cljs$core$IFn$_invoke$arity$2(self__.send_queues,r));\r\n\r\n\r\nvar G__43524 = seq__43442;\r\nvar G__43525 = chunk__43443;\r\nvar G__43526 = count__43444;\r\nvar G__43527 = (i__43445 + (1));\r\nseq__43442 = G__43524;\r\nchunk__43443 = G__43525;\r\ncount__43444 = G__43526;\r\ni__43445 = G__43527;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto__ = cljs.core.seq(seq__43442);\r\nif(temp__5457__auto__){\r\nvar seq__43442__$1 = temp__5457__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__43442__$1)){\r\nvar c__4351__auto__ = cljs.core.chunk_first(seq__43442__$1);\r\nvar G__43528 = cljs.core.chunk_rest(seq__43442__$1);\r\nvar G__43529 = c__4351__auto__;\r\nvar G__43530 = cljs.core.count(c__4351__auto__);\r\nvar G__43531 = (0);\r\nseq__43442 = G__43528;\r\nchunk__43443 = G__43529;\r\ncount__43444 = G__43530;\r\ni__43445 = G__43531;\r\ncontinue;\r\n} else {\r\nvar r = cljs.core.first(seq__43442__$1);\r\nfulcro.client.clear_queue(cljs.core.get.cljs$core$IFn$_invoke$arity$2(self__.send_queues,r));\r\n\r\n\r\nvar G__43533 = cljs.core.next(seq__43442__$1);\r\nvar G__43534 = null;\r\nvar G__43535 = (0);\r\nvar G__43536 = (0);\r\nseq__43442 = G__43533;\r\nchunk__43443 = G__43534;\r\ncount__43444 = G__43535;\r\ni__43445 = G__43536;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n\r\nfulcro.client.Application.prototype.fulcro$client$FulcroApplication$abort_request_BANG_$arity$2 = (function (this$,abort_id){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar seq__43448 = cljs.core.seq(cljs.core.keys(self__.networking));\r\nvar chunk__43449 = null;\r\nvar count__43450 = (0);\r\nvar i__43451 = (0);\r\nwhile(true){\r\nif((i__43451 < count__43450)){\r\nvar r = chunk__43449.cljs$core$IIndexed$_nth$arity$2(null,i__43451);\r\nvar remote_net_43540 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(self__.networking,r);\r\nif(((!((remote_net_43540 == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === remote_net_43540.fulcro$client$network$FulcroRemoteI$))))?true:false):false)){\r\nfulcro.client.network.abort(remote_net_43540,abort_id);\r\n\r\nfulcro.client.abort_items_on_queue(cljs.core.get.cljs$core$IFn$_invoke$arity$2(self__.send_queues,r),abort_id);\r\n} else {\r\n}\r\n\r\n\r\nvar G__43541 = seq__43448;\r\nvar G__43542 = chunk__43449;\r\nvar G__43543 = count__43450;\r\nvar G__43544 = (i__43451 + (1));\r\nseq__43448 = G__43541;\r\nchunk__43449 = G__43542;\r\ncount__43450 = G__43543;\r\ni__43451 = G__43544;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto__ = cljs.core.seq(seq__43448);\r\nif(temp__5457__auto__){\r\nvar seq__43448__$1 = temp__5457__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__43448__$1)){\r\nvar c__4351__auto__ = cljs.core.chunk_first(seq__43448__$1);\r\nvar G__43545 = cljs.core.chunk_rest(seq__43448__$1);\r\nvar G__43546 = c__4351__auto__;\r\nvar G__43547 = cljs.core.count(c__4351__auto__);\r\nvar G__43548 = (0);\r\nseq__43448 = G__43545;\r\nchunk__43449 = G__43546;\r\ncount__43450 = G__43547;\r\ni__43451 = G__43548;\r\ncontinue;\r\n} else {\r\nvar r = cljs.core.first(seq__43448__$1);\r\nvar remote_net_43549 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(self__.networking,r);\r\nif(((!((remote_net_43549 == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === remote_net_43549.fulcro$client$network$FulcroRemoteI$))))?true:false):false)){\r\nfulcro.client.network.abort(remote_net_43549,abort_id);\r\n\r\nfulcro.client.abort_items_on_queue(cljs.core.get.cljs$core$IFn$_invoke$arity$2(self__.send_queues,r),abort_id);\r\n} else {\r\n}\r\n\r\n\r\nvar G__43550 = cljs.core.next(seq__43448__$1);\r\nvar G__43551 = null;\r\nvar G__43552 = (0);\r\nvar G__43553 = (0);\r\nseq__43448 = G__43550;\r\nchunk__43449 = G__43551;\r\ncount__43450 = G__43552;\r\ni__43451 = G__43553;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n\r\nfulcro.client.Application.prototype.fulcro$client$FulcroApplication$history$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn fulcro.client.primitives.get_history(self__.reconciler);\r\n});\r\n\r\nfulcro.client.Application.prototype.fulcro$client$FulcroApplication$reset_history_BANG_$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn fulcro.client.reset_history_impl(this$__$1);\r\n});\r\n\r\nfulcro.client.Application.prototype.fulcro$client$FulcroApplication$refresh$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn fulcro.client.util.force_render.cljs$core$IFn$_invoke$arity$1(self__.reconciler);\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4212__auto__,k__4213__auto__){\r\nvar self__ = this;\r\nvar this__4212__auto____$1 = this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 12, [new cljs.core.Keyword(null,\"read-local\",\"read-local\",811906273),null,new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),null,new cljs.core.Keyword(null,\"mutation-merge\",\"mutation-merge\",-2131743322),null,new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312),null,new cljs.core.Keyword(null,\"mounted?\",\"mounted?\",712114760),null,new cljs.core.Keyword(null,\"response-channels\",\"response-channels\",-1871059128),null,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),null,new cljs.core.Keyword(null,\"query-interpreter\",\"query-interpreter\",-981698805),null,new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330),null,new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951),null,new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806),null,new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035),null], null), null),k__4213__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4212__auto____$1),self__.__meta),k__4213__auto__);\r\n} else {\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4213__auto__)),null));\r\n}\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4210__auto__,k__4211__auto__,G__43413){\r\nvar self__ = this;\r\nvar this__4210__auto____$1 = this;\r\nvar pred__43458 = cljs.core.keyword_identical_QMARK_;\r\nvar expr__43459 = k__4211__auto__;\r\nif(cljs.core.truth_((function (){var G__43461 = new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806);\r\nvar G__43462 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43461,G__43462) : pred__43458.call(null,G__43461,G__43462));\r\n})())){\r\nreturn (new fulcro.client.Application(G__43413,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__43463 = new cljs.core.Keyword(null,\"mutation-merge\",\"mutation-merge\",-2131743322);\r\nvar G__43464 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43463,G__43464) : pred__43458.call(null,G__43463,G__43464));\r\n})())){\r\nreturn (new fulcro.client.Application(self__.initial_state,G__43413,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__43465 = new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951);\r\nvar G__43466 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43465,G__43466) : pred__43458.call(null,G__43465,G__43466));\r\n})())){\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,G__43413,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__43467 = new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312);\r\nvar G__43468 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43467,G__43468) : pred__43458.call(null,G__43467,G__43468));\r\n})())){\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,G__43413,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__43469 = new cljs.core.Keyword(null,\"networking\",\"networking\",586110628);\r\nvar G__43470 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43469,G__43470) : pred__43458.call(null,G__43469,G__43470));\r\n})())){\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,G__43413,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__43471 = new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330);\r\nvar G__43472 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43471,G__43472) : pred__43458.call(null,G__43471,G__43472));\r\n})())){\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,G__43413,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__43473 = new cljs.core.Keyword(null,\"response-channels\",\"response-channels\",-1871059128);\r\nvar G__43474 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43473,G__43474) : pred__43458.call(null,G__43473,G__43474));\r\n})())){\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,G__43413,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__43475 = new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966);\r\nvar G__43476 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43475,G__43476) : pred__43458.call(null,G__43475,G__43476));\r\n})())){\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,G__43413,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__43478 = new cljs.core.Keyword(null,\"read-local\",\"read-local\",811906273);\r\nvar G__43479 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43478,G__43479) : pred__43458.call(null,G__43478,G__43479));\r\n})())){\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,G__43413,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__43481 = new cljs.core.Keyword(null,\"query-interpreter\",\"query-interpreter\",-981698805);\r\nvar G__43482 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43481,G__43482) : pred__43458.call(null,G__43481,G__43482));\r\n})())){\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,G__43413,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__43484 = new cljs.core.Keyword(null,\"mounted?\",\"mounted?\",712114760);\r\nvar G__43485 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43484,G__43485) : pred__43458.call(null,G__43484,G__43485));\r\n})())){\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,G__43413,self__.reconciler_options,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__43486 = new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035);\r\nvar G__43487 = expr__43459;\r\nreturn (pred__43458.cljs$core$IFn$_invoke$arity$2 ? pred__43458.cljs$core$IFn$_invoke$arity$2(G__43486,G__43487) : pred__43458.call(null,G__43486,G__43487));\r\n})())){\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,G__43413,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4211__auto__,G__43413),null));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4215__auto__){\r\nvar self__ = this;\r\nvar this__4215__auto____$1 = this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806),self__.initial_state,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"mutation-merge\",\"mutation-merge\",-2131743322),self__.mutation_merge,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951),self__.started_callback,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312),self__.remotes,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),self__.networking,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330),self__.send_queues,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"response-channels\",\"response-channels\",-1871059128),self__.response_channels,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),self__.reconciler,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"read-local\",\"read-local\",811906273),self__.read_local,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"query-interpreter\",\"query-interpreter\",-981698805),self__.query_interpreter,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"mounted?\",\"mounted?\",712114760),self__.mounted_QMARK_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035),self__.reconciler_options,null))], null),self__.__extmap));\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4202__auto__,G__43413){\r\nvar self__ = this;\r\nvar this__4202__auto____$1 = this;\r\nreturn (new fulcro.client.Application(self__.initial_state,self__.mutation_merge,self__.started_callback,self__.remotes,self__.networking,self__.send_queues,self__.response_channels,self__.reconciler,self__.read_local,self__.query_interpreter,self__.mounted_QMARK_,self__.reconciler_options,G__43413,self__.__extmap,self__.__hash));\r\n});\r\n\r\nfulcro.client.Application.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4208__auto__,entry__4209__auto__){\r\nvar self__ = this;\r\nvar this__4208__auto____$1 = this;\r\nif(cljs.core.vector_QMARK_(entry__4209__auto__)){\r\nreturn cljs.core._assoc(this__4208__auto____$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4209__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4209__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4208__auto____$1,entry__4209__auto__);\r\n}\r\n});\r\n\r\nfulcro.client.Application.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"initial-state\",\"initial-state\",-381085279,null),new cljs.core.Symbol(null,\"mutation-merge\",\"mutation-merge\",-491211795,null),new cljs.core.Symbol(null,\"started-callback\",\"started-callback\",-158055424,null),new cljs.core.Symbol(null,\"remotes\",\"remotes\",-1522069457,null),new cljs.core.Symbol(null,\"networking\",\"networking\",-2068325141,null),new cljs.core.Symbol(null,\"send-queues\",\"send-queues\",1428195197,null),new cljs.core.Symbol(null,\"response-channels\",\"response-channels\",-230527601,null),new cljs.core.Symbol(null,\"reconciler\",\"reconciler\",-192295439,null),new cljs.core.Symbol(null,\"read-local\",\"read-local\",-1842529496,null),new cljs.core.Symbol(null,\"query-interpreter\",\"query-interpreter\",658832722,null),new cljs.core.Symbol(null,\"mounted?\",\"mounted?\",-1942321009,null),new cljs.core.Symbol(null,\"reconciler-options\",\"reconciler-options\",-1005320734,null)], null);\r\n});\r\n\r\nfulcro.client.Application.cljs$lang$type = true;\r\n\r\nfulcro.client.Application.cljs$lang$ctorPrSeq = (function (this__4240__auto__){\r\nreturn (new cljs.core.List(null,\"fulcro.client/Application\",null,(1),null));\r\n});\r\n\r\nfulcro.client.Application.cljs$lang$ctorPrWriter = (function (this__4240__auto__,writer__4241__auto__){\r\nreturn cljs.core._write(writer__4241__auto__,\"fulcro.client/Application\");\r\n});\r\n\r\n/**\r\n * Positional factory function for fulcro.client/Application.\r\n */\r\nfulcro.client.__GT_Application = (function fulcro$client$__GT_Application(initial_state,mutation_merge,started_callback,remotes,networking,send_queues,response_channels,reconciler,read_local,query_interpreter,mounted_QMARK_,reconciler_options){\r\nreturn (new fulcro.client.Application(initial_state,mutation_merge,started_callback,remotes,networking,send_queues,response_channels,reconciler,read_local,query_interpreter,mounted_QMARK_,reconciler_options,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for fulcro.client/Application, taking a map of keywords to field values.\r\n */\r\nfulcro.client.map__GT_Application = (function fulcro$client$map__GT_Application(G__43423){\r\nvar extmap__4236__auto__ = (function (){var G__43496 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__43423,new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"mutation-merge\",\"mutation-merge\",-2131743322),new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951),new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312),new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330),new cljs.core.Keyword(null,\"response-channels\",\"response-channels\",-1871059128),new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),new cljs.core.Keyword(null,\"read-local\",\"read-local\",811906273),new cljs.core.Keyword(null,\"query-interpreter\",\"query-interpreter\",-981698805),new cljs.core.Keyword(null,\"mounted?\",\"mounted?\",712114760),new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035)], 0));\r\nif(cljs.core.record_QMARK_(G__43423)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__43496);\r\n} else {\r\nreturn G__43496;\r\n}\r\n})();\r\nreturn (new fulcro.client.Application(new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806).cljs$core$IFn$_invoke$arity$1(G__43423),new cljs.core.Keyword(null,\"mutation-merge\",\"mutation-merge\",-2131743322).cljs$core$IFn$_invoke$arity$1(G__43423),new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951).cljs$core$IFn$_invoke$arity$1(G__43423),new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312).cljs$core$IFn$_invoke$arity$1(G__43423),new cljs.core.Keyword(null,\"networking\",\"networking\",586110628).cljs$core$IFn$_invoke$arity$1(G__43423),new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330).cljs$core$IFn$_invoke$arity$1(G__43423),new cljs.core.Keyword(null,\"response-channels\",\"response-channels\",-1871059128).cljs$core$IFn$_invoke$arity$1(G__43423),new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966).cljs$core$IFn$_invoke$arity$1(G__43423),new cljs.core.Keyword(null,\"read-local\",\"read-local\",811906273).cljs$core$IFn$_invoke$arity$1(G__43423),new cljs.core.Keyword(null,\"query-interpreter\",\"query-interpreter\",-981698805).cljs$core$IFn$_invoke$arity$1(G__43423),new cljs.core.Keyword(null,\"mounted?\",\"mounted?\",712114760).cljs$core$IFn$_invoke$arity$1(G__43423),new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035).cljs$core$IFn$_invoke$arity$1(G__43423),null,cljs.core.not_empty(extmap__4236__auto__),null));\r\n});\r\n\r\n/**\r\n * Create a test client that has no networking. Useful for UI testing with a real Fulcro app container.\r\n */\r\nfulcro.client.new_fulcro_test_client = (function fulcro$client$new_fulcro_test_client(var_args){\r\nvar args__4534__auto__ = [];\r\nvar len__4531__auto___43594 = arguments.length;\r\nvar i__4532__auto___43595 = (0);\r\nwhile(true){\r\nif((i__4532__auto___43595 < len__4531__auto___43594)){\r\nargs__4534__auto__.push((arguments[i__4532__auto___43595]));\r\n\r\nvar G__43596 = (i__4532__auto___43595 + (1));\r\ni__4532__auto___43595 = G__43596;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\r\nreturn fulcro.client.new_fulcro_test_client.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\r\n});\r\n\r\nfulcro.client.new_fulcro_test_client.cljs$core$IFn$_invoke$arity$variadic = (function (p__43580){\r\nvar map__43581 = p__43580;\r\nvar map__43581__$1 = ((((!((map__43581 == null)))?(((((map__43581.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43581.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43581):map__43581);\r\nvar initial_state = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43581__$1,new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806),cljs.core.PersistentArrayMap.EMPTY);\r\nvar started_callback = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43581__$1,new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951),null);\r\nvar reconciler_options = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43581__$1,new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035));\r\nreturn fulcro.client.map__GT_Application(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"initial-state\",\"initial-state\",-2021616806),initial_state,new cljs.core.Keyword(null,\"started-callback\",\"started-callback\",-1798586951),started_callback,new cljs.core.Keyword(null,\"reconciler-options\",\"reconciler-options\",1649115035),reconciler_options,new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),fulcro.client.network.mock_network()], null));\r\n});\r\n\r\nfulcro.client.new_fulcro_test_client.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\nfulcro.client.new_fulcro_test_client.cljs$lang$applyTo = (function (seq43579){\r\nvar self__4519__auto__ = this;\r\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq43579));\r\n});\r\n\r\n/**\r\n * Get the current window location from the browser\r\n */\r\nfulcro.client.get_url = (function fulcro$client$get_url(){\r\nreturn window.location.href;\r\n});\r\n/**\r\n * Get the current URI parameters from the browser url or one you supply\r\n */\r\nfulcro.client.uri_params = (function fulcro$client$uri_params(var_args){\r\nvar G__43602 = arguments.length;\r\nswitch (G__43602) {\r\ncase 0:\r\nreturn fulcro.client.uri_params.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn fulcro.client.uri_params.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.uri_params.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn fulcro.client.uri_params.cljs$core$IFn$_invoke$arity$1(fulcro.client.get_url());\r\n});\r\n\r\nfulcro.client.uri_params.cljs$core$IFn$_invoke$arity$1 = (function (url){\r\nvar query_data = (new goog.Uri(url)).getQueryData();\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4324__auto__ = ((function (query_data){\r\nreturn (function fulcro$client$iter__43606(s__43607){\r\nreturn (new cljs.core.LazySeq(null,((function (query_data){\r\nreturn (function (){\r\nvar s__43607__$1 = s__43607;\r\nwhile(true){\r\nvar temp__5457__auto__ = cljs.core.seq(s__43607__$1);\r\nif(temp__5457__auto__){\r\nvar s__43607__$2 = temp__5457__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__43607__$2)){\r\nvar c__4322__auto__ = cljs.core.chunk_first(s__43607__$2);\r\nvar size__4323__auto__ = cljs.core.count(c__4322__auto__);\r\nvar b__43609 = cljs.core.chunk_buffer(size__4323__auto__);\r\nif((function (){var i__43608 = (0);\r\nwhile(true){\r\nif((i__43608 < size__4323__auto__)){\r\nvar k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4322__auto__,i__43608);\r\ncljs.core.chunk_append(b__43609,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,query_data.get(k)], null));\r\n\r\nvar G__43612 = (i__43608 + (1));\r\ni__43608 = G__43612;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__43609),fulcro$client$iter__43606(cljs.core.chunk_rest(s__43607__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__43609),null);\r\n}\r\n} else {\r\nvar k = cljs.core.first(s__43607__$2);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,query_data.get(k)], null),fulcro$client$iter__43606(cljs.core.rest(s__43607__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n});})(query_data))\r\n,null,null));\r\n});})(query_data))\r\n;\r\nreturn iter__4324__auto__(query_data.getKeys());\r\n})());\r\n});\r\n\r\nfulcro.client.uri_params.cljs$lang$maxFixedArity = 1;\r\n\r\n/**\r\n * Get the value of the named parameter from the browser URL (or an explicit one)\r\n */\r\nfulcro.client.get_url_param = (function fulcro$client$get_url_param(var_args){\r\nvar G__43617 = arguments.length;\r\nswitch (G__43617) {\r\ncase 1:\r\nreturn fulcro.client.get_url_param.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn fulcro.client.get_url_param.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.get_url_param.cljs$core$IFn$_invoke$arity$1 = (function (param_name){\r\nreturn fulcro.client.get_url_param.cljs$core$IFn$_invoke$arity$2(fulcro.client.get_url(),param_name);\r\n});\r\n\r\nfulcro.client.get_url_param.cljs$core$IFn$_invoke$arity$2 = (function (url,param_name){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(fulcro.client.uri_params.cljs$core$IFn$_invoke$arity$1(url),param_name);\r\n});\r\n\r\nfulcro.client.get_url_param.cljs$lang$maxFixedArity = 2;\r\n\r\n/**\r\n * DEPRECATED: Now defined in fulcro.client.primitives\r\n */\r\nfulcro.client.merge_component = fulcro.client.primitives.merge_component;\r\n/**\r\n * DEPRECATED: Now defined in fulcro.client.primitives\r\n */\r\nfulcro.client.merge_alternate_unions = fulcro.client.primitives.merge_alternate_unions;\r\n/**\r\n * DEPRECATED: Now defined in fulcro.client.primitives\r\n */\r\nfulcro.client.merge_alternate_union_elements_BANG_ = fulcro.client.primitives.merge_alternate_union_elements_BANG_;\r\n/**\r\n * DEPRECATED: Now defined in fulcro.client.primitives\r\n */\r\nfulcro.client.merge_alternate_union_elements = fulcro.client.primitives.merge_alternate_union_elements;\r\n/**\r\n * DEPRECATED: Now defined in fulcro.client.primitives\r\n */\r\nfulcro.client.integrate_ident = fulcro.client.primitives.integrate_ident;\r\n/**\r\n * DEPRECATED: Now defined in fulcro.client.primitives\r\n */\r\nfulcro.client.integrate_ident_BANG_ = fulcro.client.primitives.integrate_ident_BANG_;\r\n/**\r\n * See primitives/merge-component!\r\n */\r\nfulcro.client.merge_state_BANG_ = (function fulcro$client$merge_state_BANG_(var_args){\r\nvar args__4534__auto__ = [];\r\nvar len__4531__auto___43631 = arguments.length;\r\nvar i__4532__auto___43632 = (0);\r\nwhile(true){\r\nif((i__4532__auto___43632 < len__4531__auto___43631)){\r\nargs__4534__auto__.push((arguments[i__4532__auto___43632]));\r\n\r\nvar G__43634 = (i__4532__auto___43632 + (1));\r\ni__4532__auto___43632 = G__43634;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4535__auto__ = ((((3) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((3)),(0),null)):null);\r\nreturn fulcro.client.merge_state_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4535__auto__);\r\n});\r\n\r\nfulcro.client.merge_state_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (app_or_reconciler,component,object_data,named_params){\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),364], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([app_or_reconciler], 0));\r\n}catch (e43629){if((e43629 instanceof Error)){\r\nvar e__31527__auto___43637 = e43629;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),364], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto___43637], 0));\r\n} else {\r\nthrow e43629;\r\n\r\n}\r\n}\r\nvar reconciler = ((((!((app_or_reconciler == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === app_or_reconciler.fulcro$client$FulcroApplication$))))?true:false):false))?new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966).cljs$core$IFn$_invoke$arity$1(app_or_reconciler):app_or_reconciler);\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(fulcro.client.primitives.merge_component_BANG_,reconciler,component,object_data,named_params);\r\n});\r\n\r\nfulcro.client.merge_state_BANG_.cljs$lang$maxFixedArity = (3);\r\n\r\n/** @this {Function} */\r\nfulcro.client.merge_state_BANG_.cljs$lang$applyTo = (function (seq43622){\r\nvar G__43623 = cljs.core.first(seq43622);\r\nvar seq43622__$1 = cljs.core.next(seq43622);\r\nvar G__43624 = cljs.core.first(seq43622__$1);\r\nvar seq43622__$2 = cljs.core.next(seq43622__$1);\r\nvar G__43625 = cljs.core.first(seq43622__$2);\r\nvar seq43622__$3 = cljs.core.next(seq43622__$2);\r\nvar self__4518__auto__ = this;\r\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__43623,G__43624,G__43625,seq43622__$3);\r\n});\r\n\r\n/**\r\n * DEPRECATED: Now defined in fulcro.client.primitives\r\n */\r\nfulcro.client.iinitial_app_state_QMARK_ = fulcro.client.primitives.has_initial_app_state_QMARK_;\r\n/**\r\n * DEPRECATED: Now defined in fulcro.client.primitives\r\n */\r\nfulcro.client.iident_QMARK_ = fulcro.client.primitives.has_ident_QMARK_;\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","fulcro/client.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$clojure.stacktrace","~$cljs.stacktrace","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$go","~$cljs.core.async.macros"],"~:excludes",["~#set",[]],"~:name","~$fulcro.client","~:op","~:ns","~:imports",["^ ","~$Uri","~$goog.Uri"],"~:requires",["^ ","~$set","~$clojure.set","^@","^A","~$goog.dom","^Q","^L","^M","~$log","~$fulcro.logging","~$fulcro.client.util","^T","~$p","~$fulcro.client.impl.protocols","~$prim","~$fulcro.client.primitives","^S","^S","~$cutil","^T","~$async","^=","~$cljs.core","^Z","~$goog","^[","~$fulcro.client.mutations","^10","~$fulcro.client.impl.application","^11","^W","^W","^=","^=","~$fulcro.util","^12","~$hist","~$fulcro.history","^P","^P","~$m","^10","^<","^=","~$util","^12","~$fulcro.client.network","^16","~$gdom","^Q","~$net","^16","~$s","^A","~$proto","^U","^A","^A","~$app","^11","^14","^14","^U","^U"],"~:seen",["^F",["~:require","~:require-macros"]],"~:uses",null,"^1=",["^ ","^@","^A","^D","^D","^R","^S","^V","^W","^S","^S","^Y","^=","^Z","^Z","^10","^10","^W","^W","^=","^=","~$m","^10","^<","^=","~$s","^A","^A","^A"],"~:form",["~#list",["~$ns","^H",["^1@",["^1=",["^D","~:refer",["^C"]]]],["^1@",["^1<",["^W","~:as","^V"],["^11","^1C","^1:"],"^10",["^16","^1C","^18"],["^S","^1C","^R"],["^<","^1C","^Y"],["^U","^1C","^19"],["^12","^1C","^15"],["^T","^1C","^X"],["^P","^1C","^O"],["^Q","^1C","^17"],["^@","^1C","~$s"],["^14","^1C","^13"],["^U","^1C","~$p"],["^10","^1C","~$m"]]],["^1@",["~:import","^M"]]]],"~:flags",["^ ","^1=",["^F",[]],"^1<",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^W","^11","^10","^16","^S","^=","^U","^12","^T","^P","^Q","^A","^14","^M"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","fulcro/client.cljc"],"~:compiled-at",1537360785695,"~:resource-name","fulcro/client.cljc","~:warnings",[],"~:source","(ns fulcro.client\n  #?(:cljs (:require-macros\n             [cljs.core.async.macros :refer [go]]))\n  (:require\n    [fulcro.client.primitives :as prim]\n    [fulcro.client.impl.application :as app]\n    #?(:cljs fulcro.client.mutations)                       ; DO NOT REMOVE. Ensures built-in mutations load on start\n    [fulcro.client.network :as net]\n    [fulcro.logging :as log]\n    [clojure.core.async :as async]\n    [fulcro.client.impl.protocols :as proto]\n    [fulcro.util :as util]\n    [fulcro.client.util :as cutil]\n    #?(:clj\n    [clojure.future :refer :all])\n    [clojure.set :as set]\n    #?(:cljs [goog.dom :as gdom])\n    [clojure.spec.alpha :as s]\n    [fulcro.history :as hist]\n    [fulcro.client.impl.protocols :as p]\n    [fulcro.client.mutations :as m])\n  #?(:cljs (:import goog.Uri)))\n\n(declare map->Application merge-alternate-union-elements! merge-state! new-fulcro-client new-fulcro-test-client)\n\n(defonce fulcro-tools (atom {}))\n\n(s/def ::tool-id (s/and keyword? namespace))\n(s/def ::tx-listen (s/fspec :args (s/cat :env map? :tx-info map?) :ret any?))\n(s/def ::network-wrapper (s/fspec :args (s/cat :networks map?) :ret map?))\n(s/def ::app-started (s/fspec :args (s/cat :fulcro-app map?) :ret any?))\n(s/def ::lifecycle-event #{:mounted :unmounted})\n(s/def ::instrument (s/fspec :args (s/cat :args (s/keys :req-un [::props ::children ::class ::factory])) :ret any?))\n(s/def ::component-lifecycle (s/fspec :args (s/cat :react-component prim/component? :event ::lifecycle-event) :ret any?))\n(s/def ::instrument-wrapper (s/fspec :args (s/cat :existing-instrument ::instrument) :ret ::instrument))\n(s/def ::tool-registry (s/keys :req [::tool-id] :opt [::tx-listen ::network-wrapper ::app-started ::component-lifecycle ::instrument-wrapper]))\n\n(defn register-tool\n  \"Register a debug tool. When an app starts, the debug tool can have several hooks that are notified:\n\n  ::tool-id some identifier to place the tool into the tool map\n  ::tx-listen is a (fn [tx info] ...) that will be called on every `transact!` of the app. Return value is ignored.\n  ::network-wrapper is (fn [network-map] network-map') that will be given the networking config BEFORE it is initialized. You can wrap\n  them, but you MUST return a compatible map out or you'll disable networking.\n  ::component-lifecycle is (fn [component evt]) that is called with evt of :mounted and :unmounted to tell you when the given component mounts/unmounts.\n  ::instrument-wrapper is a (fn [instrument] instrument') that allows you to wrap your own instrumentation (for rendering) around any existing (which may be nil)\n  ::app-started (fn [app] ...) that will be called once the app is mounted, just like started-callback. Return value ignored.\"\n  [{:keys [::tool-id] :as tool-registry}]\n  ;(util/conform! ::tool-registry tool-registry)\n  (swap! fulcro-tools assoc tool-id tool-registry))\n\n(defn- normalize-network [networking]\n  #?(:cljs (if (or\n                 (implements? net/FulcroRemoteI networking)\n                 (implements? net/FulcroNetwork networking)) {:remote networking} networking)\n     :clj  {}))\n\n(defn- add-tools [original-start original-net original-tx-listen original-instrument]\n  (let [net     (normalize-network original-net)\n        listen  (or original-tx-listen (constantly nil))\n        started (or original-start (constantly nil))]\n    (reduce\n      (fn [[start net listen instrument lifecycle] {:keys [::tool-id ::tx-listen ::network-wrapper ::app-started ::instrument-wrapper ::component-lifecycle]}]\n        (let [start      (if app-started (fn [app] (app-started app) (start app)) start)\n              net        (if network-wrapper (network-wrapper net) net)\n              listen     (if tx-listen (fn [env info] (tx-listen env info)) listen)\n              instrument (if instrument-wrapper (instrument-wrapper instrument) instrument)\n              lifecycle  (if component-lifecycle (fn [c e] (component-lifecycle c e) (when lifecycle (lifecycle c e))) lifecycle)]\n          [start net listen instrument lifecycle]))\n      [started net listen nil nil]\n      (vals @fulcro-tools))))\n\n; easier to access, so the user don't have to require a impl namespace to reference\n(def mutate app/write-entry-point)\n\n(defn new-fulcro-client\n  \"Entry point for creating a new fulcro client. Instantiates an Application with default values, unless\n  overridden by the parameters. If you do not supply a networking object, one will be provided that connects to the\n  same server the application was served from, at `/api`.\n\n  If you supply a `:request-transform` it must be a function:\n\n  ```\n (fn [{:keys [body headers]}] {:body body' :headers headers'})\n  ```\n\n  it can replace the outgoing EDN of body or headers (returning both as a vector). NOTE: Both of these are clojurescript types.\n  The edn will be encoded with transit, and the headers will be converted to a js map. IMPORTANT: Only supported\n  when using the default built-in single-remote networking.\n\n  `:initial-state` is your applications initial state. If it is an atom, it *must* be normalized. Fulcro databases\n  always have normalization turned on (for server data merging). If it is not an atom, it will be auto-normalized.\n\n  `:started-callback` is an optional function that will receive the intiailized fulcro application after it is\n  mounted in the DOM, and is useful for triggering initial loads, routing mutations, etc. The reconciler is available\n  under the `:reconciler` key (and you can access the app state, root node, etc from there.)\n\n  `:network-error-callback` is a function of three arguments, the app state atom, status code, and the error, which will be invoked for\n  every network error (status code >= 400, or no network found). Only works if you choose to use the default built-in\n  networking (ignored if you also specify :networking).\n\n  `:migrate` is optional. It is a (fn [state tid->rid] ... state') that should return a new state where all tempids\n  (the keys of `tid->rid`) are rewritten to real ids (the values of tid->rid). This defaults to a full recursive\n  algorithm against all data in the app-state, which is correct but possibly slow).  Note that tempids will have an tempid data type.\n  See reconciler documentation for further information.\n\n  `:transit-handlers` (optional). A map with keys for `:read` and `:write`, which contain maps to be used for the read\n  and write side of transit to extend the supported data types. See `make-fulcro-network` in network.cljs. Only used\n  when you default to the built-in networking.\n\n  `:shared` (optional). A map of arbitrary values to be shared across all components, accessible to them via (prim/shared this)\n\n  `:read-local` (optional). An read function for the Parser. (fn [env k params] ...). If supplied,\n  it will be called once for each root-level query key. If it returns `nil` or `false` for that key then the built-in Fulcro read will handle that\n  branch of the root query. If it returns a map with the shape `{:value ...}`, then that will be used for the response. This is *not*\n  recursive. If you begin handling a *branch* (e.g. a join), you must finish doing so (though if using recursion, you can technically handle just\n  the properties that need your custom handling). At any time you can use `prim/db->tree` to get raw graph data from the database for a branch.\n  NOTE: *it will be allowed* to trigger remote reads. This is not recommended, as you will probably have to augment the networking layer to\n  get it to do what you mean. Use `load` instead. You have been warned. Triggering remote reads is allowed, but discouraged and unsupported.\n\n  `:query-interpreter` (optional). A custom query engine (parser and interpreter) that will be used to satisfy all\n  local client queries from the local state database. Cannot be used with `:read-local`.\n  It must be a `(fn [env query] )` that returns the result for the given query. It will not be given mutations.\n  The `env` will contain the `:state` atom, `:shared`, and `:parser`. It may also contain the `:reconciler`.\n\n  `:networking` (optional). An instance of FulcroNetwork that will act as the default remote (named :remote). If\n  you want to support multiple remotes, then this should be a map whose keys are the keyword names of the remotes\n  and whose values are FulcroNetwork instances.\n\n  `:mutation-merge (optional). A function `(fn [state mutation-symbol return-value])` that receives the app state as a\n  map (NOT an atom) and should return the new state as a map. This function is run when network results are being merged,\n  and is called once for each mutation that had a return value on the server. Returning nil from this function is safe, and will be ignored\n  with a console message for debugging. If you need information about the original mutation arguments then you must reflect\n  them back from the server in your return value. By default such values are discarded.\n  \n  `:reconciler-options (optional). A map that will be merged into the reconciler options. Currently it's mostly\n  useful to override things like :root-render and :root-unmount for React Native Apps.`\n\n  There is currently no way to circumvent the encoding of the body into transit. If you want to talk to other endpoints\n  via alternate protocols you must currently implement that outside of the framework (e.g. global functions/state).\n  \"\n  [& {:keys [initial-state mutation-merge started-callback networking reconciler-options query-interpreter\n             read-local request-transform network-error-callback migrate transit-handlers shared]\n      :or   {initial-state {} read-local (constantly false) started-callback (constantly nil) network-error-callback (constantly nil)\n             migrate       nil shared nil}}]\n  (let [networking (or networking #?(:clj nil :cljs (net/make-fulcro-network \"/api\"\n                                                      :request-transform request-transform\n                                                      :transit-handlers transit-handlers\n                                                      :global-error-callback network-error-callback)))\n        [started-callback networking tx-listen instrument lifecycle] (add-tools started-callback networking (:tx-listen reconciler-options)\n                                                                       (:instrument reconciler-options))]\n    (map->Application {:initial-state      initial-state\n                       :read-local         read-local\n                       :mutation-merge     mutation-merge\n                       :started-callback   started-callback\n                       :lifecycle          lifecycle\n                       :query-interpreter  query-interpreter\n                       :reconciler-options (merge (cond-> {}\n                                                    tx-listen (assoc :tx-listen tx-listen)\n                                                    instrument (assoc :instrument instrument)\n                                                    lifecycle (assoc :lifecycle lifecycle)\n                                                    migrate (assoc :migrate migrate)\n                                                    shared (assoc :shared shared))\n                                             reconciler-options)\n                       :networking         networking})))\n\n(defprotocol FulcroApplication\n  (mount [this root-component target-dom-id] \"Start/replace the webapp on the given DOM ID or DOM Node.\")\n  (reset-state! [this new-state] \"Replace the entire app state with the given (pre-normalized) state.\")\n  (reset-app! [this root-component callback] \"Replace the entire app state with the initial app state defined on the root component (includes auto-merging of unions). callback can be nil, a function, or :original (to call original started-callback).\")\n  (clear-pending-remote-requests! [this remotes] \"Remove all pending network requests on the given remote(s). Useful on failures to eliminate cascading failures. Remote can be a keyword, set, or nil. `nil` means all remotes.\")\n  (refresh [this] \"Refresh the UI (force re-render).\")\n  (history [this] \"Return the current UI history of the application, suitable for network transfer\")\n  (abort-request! [this abort-id] \"Abort the given request on all remotes. abort-id is a self-assigned ID for the remote interaction.\")\n  (reset-history! [this] \"Returns the application with history reset to its initial, empty state. Resets application history to its initial, empty state. Suitable for resetting the app for situations such as user log out.\"))\n\n(defn- start-networking\n  \"Starts all remotes in a map. If a remote's `start` returns something that implements `FulcroNetwork`,\n  update the network map with this value. Returns possibly updated `network-map`.\"\n  [network-map]\n  #?(:cljs (into {} (for [[k remote] network-map\n                          :let [started (when (implements? net/FulcroNetwork remote) (net/start remote))\n                                valid   (if (implements? net/FulcroNetwork started) started remote)]]\n                      [k valid]))\n     :clj  {}))\n\n(defn- mutation-query? [tx]\n  (boolean (some #(util/mutation? %) tx)))\n\n(defn- split-parser\n  \"Generate a parser that splits reads and writes across two parsers: the supplied query parser for queries, and the built-in\n  parser for mutations.\"\n  [query-parser]\n  (let [mutation-parser (prim/parser {:read (constantly nil) :mutate app/write-entry-point})]\n    (fn split-parser*\n      ([env query target]\n       (if (mutation-query? query)\n         (mutation-parser env query target)\n         (query-parser env query)))\n      ([env query] (split-parser* env query nil)))))\n\n(defn- initialize\n  \"Initialize the fulcro Application. Creates network queue, sets up i18n, creates reconciler, mounts it, and returns\n  the initialized app\"\n  [{:keys [networking read-local started-callback query-interpreter] :as app} initial-state root-component dom-id-or-node reconciler-options]\n  (let [network-map         (normalize-network networking)\n        reconciler-options  (if (-> reconciler-options :id not)\n                              (assoc reconciler-options :id (if (string? dom-id-or-node) dom-id-or-node (util/unique-key)))\n                              reconciler-options)\n        remotes             (keys network-map)\n        send-queues         (zipmap remotes (map #(async/chan 1024) remotes))\n        response-channels   (zipmap remotes (map #(async/chan) remotes))\n        parser              (if query-interpreter\n                              (split-parser query-interpreter)\n                              (prim/parser {:read (partial app/read-local read-local) :mutate app/write-entry-point}))\n        initial-app         (assoc app :send-queues send-queues :response-channels response-channels\n                                       :parser parser :mounted? true)\n        app-with-networking (assoc initial-app :networking (start-networking network-map))\n        rec                 (app/generate-reconciler app-with-networking initial-state parser reconciler-options)\n        completed-app       (assoc app-with-networking :reconciler rec)\n        node #?(:cljs (if (string? dom-id-or-node)\n                        (gdom/getElement dom-id-or-node)\n                        dom-id-or-node)\n                :clj        dom-id-or-node)]\n    (app/initialize-global-error-callbacks completed-app)\n    (app/start-network-sequential-processing completed-app)\n    (prim/add-root! rec root-component node)\n    ; this has to come after add root so normalization is complete\n    (merge-alternate-union-elements! completed-app root-component)\n    (when started-callback\n      (started-callback completed-app))\n    completed-app))\n\n(defn clear-queue\n  \"Needed for mocking in tests. Do not use directly. Use FulcroApplication protocol methods instead.\"\n  [queue]\n  (loop [element (async/poll! queue)]\n    (when element\n      (recur (async/poll! queue)))))\n\n(defn- abort-items-on-queue\n  [queue abort-id]\n  (let [elements (atom [])]\n    (loop [element (async/poll! queue)]\n      (when element\n        (when-not (some-> element ::net/abort-id (= abort-id))\n          (swap! elements conj element))\n        (recur (async/poll! queue))))\n    (doseq [e @elements]\n      (async/offer! queue e))))\n\n(defn reset-history-impl\n  \"Needed for mocking in tests. Use FulcroApplication protocol methods instead.\"\n  [{:keys [reconciler]}]\n  #?(:cljs (when-let [hist-atom (prim/get-history reconciler)]\n             (swap! hist-atom (fn [{:keys [::hist/max-size]}] (hist/new-history max-size))))))\n\n(defn refresh* [{:keys [reconciler] :as app} root target]\n  ; NOTE: from devcards, the mount target node could have changed. So, we re-call add-root\n  (let [old-target     (-> reconciler :state deref :target)\n        target #?(:clj target\n                  :cljs (if (string? target) (gdom/getElement target) target))]\n    (when (and old-target (not (identical? old-target target)))\n      (log/info \"Mounting on newly supplied target.\")\n      (prim/remove-root! reconciler old-target)\n      (prim/add-root! reconciler root target)))\n  (cutil/force-render reconciler))\n\n(defn mount* [{:keys [mounted? initial-state reconciler-options] :as app} root-component dom-id-or-node]\n  (if mounted?\n    (do\n      (refresh* app root-component dom-id-or-node)\n      app)\n    (let [uses-initial-app-state? (prim/has-initial-app-state? root-component)\n          ui-declared-state       (and uses-initial-app-state? (fulcro.client.primitives/initial-state root-component nil))\n          explicit-state?         (or (util/atom? initial-state) (and (seq initial-state) (map? initial-state)))\n          state                   (cond\n                                    explicit-state? (if initial-state initial-state {})\n                                    ui-declared-state ui-declared-state\n                                    :otherwise {})]\n      (initialize app state root-component dom-id-or-node reconciler-options))))\n\n(defrecord Application [initial-state mutation-merge started-callback remotes networking send-queues\n                        response-channels reconciler read-local query-interpreter mounted? reconciler-options]\n  FulcroApplication\n  (mount [this root-component dom-id-or-node] (mount* this root-component dom-id-or-node))\n\n  (reset-state! [this new-state] (reset! (prim/app-state reconciler) new-state))\n\n  (reset-app! [this root-component callback]\n    (if (not (prim/has-initial-app-state? root-component))\n      (log/error \"The specified root component does not implement InitialAppState!\")\n      (let [base-state (prim/tree->db root-component (fulcro.client.primitives/initial-state root-component nil) true)]\n        (clear-pending-remote-requests! this nil)\n        (reset! (prim/app-state reconciler) base-state)\n        (reset-history! this)\n        (merge-alternate-union-elements! this root-component)\n        (log/info \"updated app state to original \" (prim/app-state reconciler))\n        (cond\n          (= callback :original) (started-callback this)\n          callback (callback this))\n        (refresh this))))\n\n  (clear-pending-remote-requests! [this remotes]\n    (let [remotes (cond\n                    (nil? remotes) (keys send-queues)\n                    (keyword? remotes) [remotes]\n                    :else remotes)]\n      (doseq [r remotes]\n        (clear-queue (get send-queues r)))))\n\n  (abort-request! [this abort-id]\n    #?(:cljs\n       (doseq [r (keys networking)]\n         (let [remote-net (get networking r)]\n           (when (implements? net/FulcroRemoteI remote-net)\n             (net/abort remote-net abort-id)\n             (abort-items-on-queue (get send-queues r) abort-id))))))\n\n  (history [this] (prim/get-history reconciler))\n  (reset-history! [this]\n    (reset-history-impl this))\n\n  (refresh [this] (cutil/force-render reconciler)))\n\n(defn new-fulcro-test-client\n  \"Create a test client that has no networking. Useful for UI testing with a real Fulcro app container.\"\n  [& {:keys [initial-state started-callback reconciler-options]\n      :or   {initial-state {} started-callback nil}}]\n  (map->Application {:initial-state      initial-state\n                     :started-callback   started-callback\n                     :reconciler-options reconciler-options\n                     :networking         (net/mock-network)}))\n\n#?(:cljs\n   (defn get-url\n     \"Get the current window location from the browser\"\n     [] (-> js/window .-location .-href)))\n\n#?(:cljs\n   (defn uri-params\n     \"Get the current URI parameters from the browser url or one you supply\"\n     ([] (uri-params (get-url)))\n     ([url]\n      (let [query-data (.getQueryData (goog.Uri. url))]\n        (into {}\n          (for [k (.getKeys query-data)]\n            [k (.get query-data k)]))))))\n\n#?(:cljs\n   (defn get-url-param\n     \"Get the value of the named parameter from the browser URL (or an explicit one)\"\n     ([param-name] (get-url-param (get-url) param-name))\n     ([url param-name]\n      (get (uri-params url) param-name))))\n\n(def merge-component \"DEPRECATED: Now defined in fulcro.client.primitives\" prim/merge-component)\n(def merge-alternate-unions \"DEPRECATED: Now defined in fulcro.client.primitives\" prim/merge-alternate-unions)\n(def merge-alternate-union-elements! \"DEPRECATED: Now defined in fulcro.client.primitives\" prim/merge-alternate-union-elements!)\n(def merge-alternate-union-elements \"DEPRECATED: Now defined in fulcro.client.primitives\" prim/merge-alternate-union-elements)\n(def integrate-ident \"DEPRECATED: Now defined in fulcro.client.primitives\" prim/integrate-ident)\n(def integrate-ident! \"DEPRECATED: Now defined in fulcro.client.primitives\" prim/integrate-ident!)\n(defn merge-state! \"See primitives/merge-component!\" [app-or-reconciler component object-data & named-params]\n  (log/info app-or-reconciler)\n  (let [reconciler (if #?(:cljs (implements? FulcroApplication app-or-reconciler)\n                          :clj  (satisfies? FulcroApplication app-or-reconciler))\n                     (:reconciler app-or-reconciler)\n                     app-or-reconciler)]\n    (apply prim/merge-component! reconciler component object-data named-params)))\n(def iinitial-app-state? \"DEPRECATED: Now defined in fulcro.client.primitives\" prim/has-initial-app-state?)\n(def iident? \"DEPRECATED: Now defined in fulcro.client.primitives\" prim/has-ident?)\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i23",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",16],["^ ","^1R",0,"^1S",16],["^ ","^1R",0,"^1S",17],["^ ","^1R",0,"^1S",18],["^ ","^1R",0,"^1S",19],["^ ","^1R",0,"^1S",20]]],"~i25",["^ ","~i0",[["^ ","^1R",0,"^1S",20],["^ ","^1R",3,"^1S",20],["^ ","^1R",11,"^1S",20,"^G","js/fulcro"],["^ ","^1R",46,"^1S",20,"^G","js/fulcro.client"],["^ ","^1R",88,"^1S",20,"^G","js/fulcro.client.fulcro-tools"],["^ ","^1R",0,"^1S",21],["^ ","^1R",0,"^1S",22],["^ ","^1R",0,"^1S",22]],"~i9",[["^ ","^1R",0,"^1S",22,"^G","fulcro.client/fulcro-tools"]],"~i22",[["^ ","^1R",29,"^1S",22],["^ ","^1R",74,"^1S",22]],"^1Q",[["^ ","^1R",29,"^1S",22,"^G","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i27",["^ ","~i0",[["^ ","^1R",0,"^1S",24],["^ ","^1R",0,"^1S",24,"^G","cljs.spec.alpha/def-impl"],["^ ","^1R",25,"^1S",24],["^ ","^1R",107,"^1S",24],["^ ","^1R",122,"^1S",24],["^ ","^1R",207,"^1S",24],["^ ","^1R",288,"^1S",24]],"~i17",[["^ ","^1R",373,"^1S",24],["^ ","^1R",373,"^1S",24,"^G","cljs.spec.alpha/and-spec-impl"],["^ ","^1R",403,"^1S",24],["^ ","^1R",486,"^1S",24],["^ ","^1R",567,"^1S",24],["^ ","^1R",659,"^1S",24],["^ ","^1R",795,"^1S",24]],"~i24",[["^ ","^1R",742,"^1S",24,"^G","cljs.core/keyword?"]],"~i33",[["^ ","^1R",767,"^1S",24,"^G","cljs.core/namespace"]]],"~i28",["^ ","~i0",[["^ ","^1R",0,"^1S",25],["^ ","^1R",0,"^1S",25,"^G","cljs.spec.alpha/def-impl"],["^ ","^1R",25,"^1S",25],["^ ","^1R",112,"^1S",25],["^ ","^1R",127,"^1S",25],["^ ","^1R",216,"^1S",25],["^ ","^1R",269,"^1S",25],["^ ","^1R",284,"^1S",25],["^ ","^1R",369,"^1S",25],["^ ","^1R",421,"^1S",25],["^ ","^1R",496,"^1S",25],["^ ","^1R",553,"^1S",25],["^ ","^1R",629,"^1S",25],["^ ","^1R",680,"^1S",25]],"~i19",[["^ ","^1R",756,"^1S",25],["^ ","^1R",756,"^1S",25,"^G","cljs.spec.alpha/fspec-impl"],["^ ","^1R",783,"^1S",25],["^ ","^1R",783,"^1S",25,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",839,"^1S",25],["^ ","^1R",854,"^1S",25],["^ ","^1R",939,"^1S",25],["^ ","^1R",991,"^1S",25],["^ ","^1R",1066,"^1S",25],["^ ","^1R",1123,"^1S",25],["^ ","^1R",1799,"^1S",25],["^ ","^1R",1804,"^1S",25],["^ ","^1R",1810,"^1S",25],["^ ","^1R",1825,"^1S",25],["^ ","^1R",1910,"^1S",25],["^ ","^1R",1962,"^1S",25],["^ ","^1R",2037,"^1S",25],["^ ","^1R",2094,"^1S",25],["^ ","^1R",2170,"^1S",25],["^ ","^1R",2170,"^1S",25,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",2226,"^1S",25],["^ ","^1R",2322,"^1S",25],["^ ","^1R",2327,"^1S",25],["^ ","^1R",2333,"^1S",25],["^ ","^1R",2408,"^1S",25],["^ ","^1R",2413,"^1S",25],["^ ","^1R",2418,"^1S",25]],"~i34",[["^ ","^1R",1199,"^1S",25],["^ ","^1R",1199,"^1S",25,"^G","cljs.spec.alpha/cat-impl"],["^ ","^1R",1224,"^1S",25],["^ ","^1R",1307,"^1S",25],["^ ","^1R",1359,"^1S",25],["^ ","^1R",1424,"^1S",25],["^ ","^1R",1557,"^1S",25],["^ ","^1R",1640,"^1S",25],["^ ","^1R",1715,"^1S",25]],"~i46",[["^ ","^1R",1507,"^1S",25,"^G","cljs.core/map?"]],"~i60",[["^ ","^1R",1528,"^1S",25,"^G","cljs.core/map?"]],"~i71",[["^ ","^1R",2301,"^1S",25,"^G","cljs.core/any?"]]],"~i29",["^ ","~i0",[["^ ","^1R",0,"^1S",26],["^ ","^1R",0,"^1S",26,"^G","cljs.spec.alpha/def-impl"],["^ ","^1R",25,"^1S",26],["^ ","^1R",125,"^1S",26],["^ ","^1R",140,"^1S",26],["^ ","^1R",229,"^1S",26],["^ ","^1R",282,"^1S",26],["^ ","^1R",297,"^1S",26],["^ ","^1R",382,"^1S",26],["^ ","^1R",443,"^1S",26],["^ ","^1R",519,"^1S",26],["^ ","^1R",570,"^1S",26]],"^1T",[["^ ","^1R",646,"^1S",26],["^ ","^1R",646,"^1S",26,"^G","cljs.spec.alpha/fspec-impl"],["^ ","^1R",673,"^1S",26],["^ ","^1R",673,"^1S",26,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",729,"^1S",26],["^ ","^1R",744,"^1S",26],["^ ","^1R",829,"^1S",26],["^ ","^1R",890,"^1S",26],["^ ","^1R",1422,"^1S",26],["^ ","^1R",1427,"^1S",26],["^ ","^1R",1433,"^1S",26],["^ ","^1R",1448,"^1S",26],["^ ","^1R",1533,"^1S",26],["^ ","^1R",1594,"^1S",26],["^ ","^1R",1670,"^1S",26],["^ ","^1R",1670,"^1S",26,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",1726,"^1S",26],["^ ","^1R",1822,"^1S",26],["^ ","^1R",1827,"^1S",26],["^ ","^1R",1833,"^1S",26],["^ ","^1R",1908,"^1S",26],["^ ","^1R",1913,"^1S",26],["^ ","^1R",1918,"^1S",26]],"~i40",[["^ ","^1R",966,"^1S",26],["^ ","^1R",966,"^1S",26,"^G","cljs.spec.alpha/cat-impl"],["^ ","^1R",991,"^1S",26],["^ ","^1R",1074,"^1S",26],["^ ","^1R",1143,"^1S",26],["^ ","^1R",1255,"^1S",26],["^ ","^1R",1338,"^1S",26]],"~i57",[["^ ","^1R",1226,"^1S",26,"^G","cljs.core/map?"]],"~i68",[["^ ","^1R",1801,"^1S",26,"^G","cljs.core/map?"]]],"~i30",["^ ","~i0",[["^ ","^1R",0,"^1S",27],["^ ","^1R",0,"^1S",27,"^G","cljs.spec.alpha/def-impl"],["^ ","^1R",25,"^1S",27],["^ ","^1R",117,"^1S",27],["^ ","^1R",132,"^1S",27],["^ ","^1R",221,"^1S",27],["^ ","^1R",274,"^1S",27],["^ ","^1R",289,"^1S",27],["^ ","^1R",374,"^1S",27],["^ ","^1R",439,"^1S",27],["^ ","^1R",515,"^1S",27],["^ ","^1R",566,"^1S",27]],"~i21",[["^ ","^1R",642,"^1S",27],["^ ","^1R",642,"^1S",27,"^G","cljs.spec.alpha/fspec-impl"],["^ ","^1R",669,"^1S",27],["^ ","^1R",669,"^1S",27,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",725,"^1S",27],["^ ","^1R",740,"^1S",27],["^ ","^1R",825,"^1S",27],["^ ","^1R",890,"^1S",27],["^ ","^1R",1426,"^1S",27],["^ ","^1R",1431,"^1S",27],["^ ","^1R",1437,"^1S",27],["^ ","^1R",1452,"^1S",27],["^ ","^1R",1537,"^1S",27],["^ ","^1R",1602,"^1S",27],["^ ","^1R",1678,"^1S",27],["^ ","^1R",1678,"^1S",27,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",1734,"^1S",27],["^ ","^1R",1830,"^1S",27],["^ ","^1R",1835,"^1S",27],["^ ","^1R",1841,"^1S",27],["^ ","^1R",1916,"^1S",27],["^ ","^1R",1921,"^1S",27],["^ ","^1R",1926,"^1S",27]],"~i36",[["^ ","^1R",966,"^1S",27],["^ ","^1R",966,"^1S",27,"^G","cljs.spec.alpha/cat-impl"],["^ ","^1R",991,"^1S",27],["^ ","^1R",1074,"^1S",27],["^ ","^1R",1147,"^1S",27],["^ ","^1R",1259,"^1S",27],["^ ","^1R",1342,"^1S",27]],"~i55",[["^ ","^1R",1230,"^1S",27,"^G","cljs.core/map?"]],"~i66",[["^ ","^1R",1809,"^1S",27,"^G","cljs.core/any?"]]],"~i31",["^ ","~i0",[["^ ","^1R",0,"^1S",28],["^ ","^1R",0,"^1S",28,"^G","cljs.spec.alpha/def-impl"],["^ ","^1R",25,"^1S",28],["^ ","^1R",126,"^1S",28],["^ ","^1R",207,"^1S",28],["^ ","^1R",271,"^1S",28],["^ ","^1R",353,"^1S",28],["^ ","^1R",434,"^1S",28],["^ ","^1R",498,"^1S",28]]],"~i32",["^ ","~i0",[["^ ","^1R",0,"^1S",29],["^ ","^1R",0,"^1S",29,"^G","cljs.spec.alpha/def-impl"],["^ ","^1R",25,"^1S",29],["^ ","^1R",115,"^1S",29],["^ ","^1R",130,"^1S",29],["^ ","^1R",219,"^1S",29],["^ ","^1R",272,"^1S",29],["^ ","^1R",287,"^1S",29],["^ ","^1R",372,"^1S",29],["^ ","^1R",425,"^1S",29],["^ ","^1R",440,"^1S",29],["^ ","^1R",526,"^1S",29],["^ ","^1R",583,"^1S",29],["^ ","^1R",666,"^1S",29],["^ ","^1R",746,"^1S",29],["^ ","^1R",832,"^1S",29],["^ ","^1R",912,"^1S",29],["^ ","^1R",1005,"^1S",29],["^ ","^1R",1056,"^1S",29]],"~i20",[["^ ","^1R",1132,"^1S",29],["^ ","^1R",1132,"^1S",29,"^G","cljs.spec.alpha/fspec-impl"],["^ ","^1R",1159,"^1S",29],["^ ","^1R",1159,"^1S",29,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",1215,"^1S",29],["^ ","^1R",1230,"^1S",29],["^ ","^1R",1315,"^1S",29],["^ ","^1R",1368,"^1S",29],["^ ","^1R",1383,"^1S",29],["^ ","^1R",1469,"^1S",29],["^ ","^1R",1526,"^1S",29],["^ ","^1R",1609,"^1S",29],["^ ","^1R",1689,"^1S",29],["^ ","^1R",1775,"^1S",29],["^ ","^1R",1855,"^1S",29],["^ ","^1R",3710,"^1S",41],["^ ","^1R",3715,"^1S",41],["^ ","^1R",3721,"^1S",41],["^ ","^1R",3736,"^1S",41],["^ ","^1R",3821,"^1S",41],["^ ","^1R",3874,"^1S",41],["^ ","^1R",3889,"^1S",41],["^ ","^1R",3975,"^1S",41],["^ ","^1R",4032,"^1S",41],["^ ","^1R",4115,"^1S",41],["^ ","^1R",4195,"^1S",41],["^ ","^1R",4281,"^1S",41],["^ ","^1R",4361,"^1S",41],["^ ","^1R",4454,"^1S",41],["^ ","^1R",4454,"^1S",41,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",4510,"^1S",41],["^ ","^1R",4606,"^1S",41],["^ ","^1R",4611,"^1S",41],["^ ","^1R",4617,"^1S",41],["^ ","^1R",4692,"^1S",41],["^ ","^1R",4697,"^1S",41],["^ ","^1R",4702,"^1S",41]],"~i35",[["^ ","^1R",1948,"^1S",29],["^ ","^1R",1948,"^1S",29,"^G","cljs.spec.alpha/cat-impl"],["^ ","^1R",1973,"^1S",29],["^ ","^1R",2056,"^1S",29],["^ ","^1R",2117,"^1S",29],["^ ","^1R",3039,"^1S",41],["^ ","^1R",3122,"^1S",41],["^ ","^1R",3137,"^1S",41],["^ ","^1R",3223,"^1S",41],["^ ","^1R",3280,"^1S",41],["^ ","^1R",3363,"^1S",41],["^ ","^1R",3443,"^1S",41],["^ ","^1R",3529,"^1S",41],["^ ","^1R",3609,"^1S",41]],"~i48",[["^ ","^1R",2200,"^1S",29],["^ ","^1R",2200,"^1S",29,"^G","cljs.spec.alpha/map-spec-impl"],["^ ","^1R",2230,"^1S",29],["^ ","^1R",2270,"^1S",29],["^ ","^1R",2327,"^1S",29],["^ ","^1R",2383,"^1S",29],["^ ","^1R",2433,"^1S",29],["^ ","^1R",2498,"^1S",29],["^ ","^1R",2560,"^1S",29],["^ ","^1R",2621,"^1S",29],["^ ","^1R",2683,"^1S",29],["^ ","^1R",2734,"^1S",29],["^ ","^1R",2794,"^1S",29],["^ ","^1R",2857,"^1S",29],["^ ","^1R",2921,"^1S",29],["^ ","^1R",2974,"^1S",29],["^ ","^1R",3057,"^1S",29],["^ ","^1R",3137,"^1S",29],["^ ","^1R",3223,"^1S",29],["^ ","^1R",3303,"^1S",29],["^ ","^1R",3394,"^1S",29],["^ ","^1R",3399,"^1S",29],["^ ","^1R",3404,"^1S",29],["^ ","^1R",3487,"^1S",29],["^ ","^1R",3498,"^1S",29,"^G","G__43040"],["^ ","^1R",0,"^1S",30],["^ ","^1R",0,"^1S",30],["^ ","^1R",7,"^1S",30,"^G","cljs.core/map?"],["^ ","^1R",28,"^1S",30,"^G","G__43040"],["^ ","^1R",3,"^1S",31],["^ ","^1R",14,"^1S",31,"^G","G__43040"],["^ ","^1R",0,"^1S",32],["^ ","^1R",0,"^1S",32],["^ ","^1R",7,"^1S",32,"^G","cljs.core/contains?"],["^ ","^1R",33,"^1S",32,"^G","G__43040"],["^ ","^1R",42,"^1S",32],["^ ","^1R",3,"^1S",33],["^ ","^1R",14,"^1S",33,"^G","G__43040"],["^ ","^1R",0,"^1S",34],["^ ","^1R",0,"^1S",34],["^ ","^1R",7,"^1S",34,"^G","cljs.core/contains?"],["^ ","^1R",33,"^1S",34,"^G","G__43040"],["^ ","^1R",42,"^1S",34],["^ ","^1R",3,"^1S",35],["^ ","^1R",14,"^1S",35,"^G","G__43040"],["^ ","^1R",0,"^1S",36],["^ ","^1R",0,"^1S",36],["^ ","^1R",7,"^1S",36,"^G","cljs.core/contains?"],["^ ","^1R",33,"^1S",36,"^G","G__43040"],["^ ","^1R",42,"^1S",36],["^ ","^1R",3,"^1S",37],["^ ","^1R",14,"^1S",37,"^G","G__43040"],["^ ","^1R",0,"^1S",38],["^ ","^1R",0,"^1S",38],["^ ","^1R",7,"^1S",38,"^G","cljs.core/contains?"],["^ ","^1R",33,"^1S",38,"^G","G__43040"],["^ ","^1R",42,"^1S",38],["^ ","^1R",11,"^1S",39],["^ ","^1R",22,"^1S",39,"^G","G__43040"],["^ ","^1R",0,"^1S",40],["^ ","^1R",0,"^1S",40],["^ ","^1R",9,"^1S",40],["^ ","^1R",9,"^1S",40,"^G","cljs.core/map?"],["^ ","^1R",30,"^1S",40,"^G","G__43040"],["^ ","^1R",45,"^1S",40],["^ ","^1R",45,"^1S",40,"^G","cljs.core/contains?"],["^ ","^1R",71,"^1S",40,"^G","G__43040"],["^ ","^1R",80,"^1S",40],["^ ","^1R",140,"^1S",40],["^ ","^1R",140,"^1S",40,"^G","cljs.core/contains?"],["^ ","^1R",166,"^1S",40,"^G","G__43040"],["^ ","^1R",175,"^1S",40],["^ ","^1R",242,"^1S",40],["^ ","^1R",242,"^1S",40,"^G","cljs.core/contains?"],["^ ","^1R",268,"^1S",40,"^G","G__43040"],["^ ","^1R",277,"^1S",40],["^ ","^1R",339,"^1S",40],["^ ","^1R",339,"^1S",40,"^G","cljs.core/contains?"],["^ ","^1R",365,"^1S",40,"^G","G__43040"],["^ ","^1R",374,"^1S",40],["^ ","^1R",3,"^1S",41],["^ ","^1R",36,"^1S",41],["^ ","^1R",119,"^1S",41],["^ ","^1R",199,"^1S",41],["^ ","^1R",285,"^1S",41],["^ ","^1R",365,"^1S",41],["^ ","^1R",456,"^1S",41],["^ ","^1R",461,"^1S",41],["^ ","^1R",544,"^1S",41],["^ ","^1R",598,"^1S",41],["^ ","^1R",659,"^1S",41],["^ ","^1R",715,"^1S",41],["^ ","^1R",780,"^1S",41],["^ ","^1R",813,"^1S",41],["^ ","^1R",896,"^1S",41],["^ ","^1R",911,"^1S",41],["^ ","^1R",982,"^1S",41],["^ ","^1R",1065,"^1S",41],["^ ","^1R",1124,"^1S",41],["^ ","^1R",1139,"^1S",41],["^ ","^1R",1214,"^1S",41],["^ ","^1R",1267,"^1S",41],["^ ","^1R",1282,"^1S",41],["^ ","^1R",1353,"^1S",41],["^ ","^1R",1436,"^1S",41],["^ ","^1R",1495,"^1S",41],["^ ","^1R",1510,"^1S",41],["^ ","^1R",1594,"^1S",41],["^ ","^1R",1645,"^1S",41],["^ ","^1R",1701,"^1S",41],["^ ","^1R",1716,"^1S",41],["^ ","^1R",1787,"^1S",41],["^ ","^1R",1870,"^1S",41],["^ ","^1R",1929,"^1S",41],["^ ","^1R",1944,"^1S",41],["^ ","^1R",2028,"^1S",41],["^ ","^1R",2079,"^1S",41],["^ ","^1R",2142,"^1S",41],["^ ","^1R",2157,"^1S",41],["^ ","^1R",2228,"^1S",41],["^ ","^1R",2311,"^1S",41],["^ ","^1R",2370,"^1S",41],["^ ","^1R",2385,"^1S",41],["^ ","^1R",2469,"^1S",41],["^ ","^1R",2520,"^1S",41],["^ ","^1R",2578,"^1S",41],["^ ","^1R",2593,"^1S",41],["^ ","^1R",2664,"^1S",41],["^ ","^1R",2747,"^1S",41],["^ ","^1R",2806,"^1S",41],["^ ","^1R",2821,"^1S",41],["^ ","^1R",2905,"^1S",41],["^ ","^1R",2956,"^1S",41],["^ ","^1R",3023,"^1S",41]],"~i110",[["^ ","^1R",4585,"^1S",41,"^G","cljs.core/any?"]]],"^1Y",["^ ","~i0",[["^ ","^1R",0,"^1S",42],["^ ","^1R",0,"^1S",42,"^G","cljs.spec.alpha/def-impl"],["^ ","^1R",25,"^1S",42],["^ ","^1R",133,"^1S",42],["^ ","^1R",148,"^1S",42],["^ ","^1R",237,"^1S",42],["^ ","^1R",290,"^1S",42],["^ ","^1R",305,"^1S",42],["^ ","^1R",390,"^1S",42],["^ ","^1R",466,"^1S",42],["^ ","^1R",583,"^1S",42],["^ ","^1R",637,"^1S",42],["^ ","^1R",739,"^1S",42],["^ ","^1R",790,"^1S",42]],"^24",[["^ ","^1R",866,"^1S",42],["^ ","^1R",866,"^1S",42,"^G","cljs.spec.alpha/fspec-impl"],["^ ","^1R",893,"^1S",42],["^ ","^1R",893,"^1S",42,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",949,"^1S",42],["^ ","^1R",964,"^1S",42],["^ ","^1R",1049,"^1S",42],["^ ","^1R",1125,"^1S",42],["^ ","^1R",1242,"^1S",42],["^ ","^1R",1296,"^1S",42],["^ ","^1R",2188,"^1S",42],["^ ","^1R",2193,"^1S",42],["^ ","^1R",2199,"^1S",42],["^ ","^1R",2214,"^1S",42],["^ ","^1R",2299,"^1S",42],["^ ","^1R",2375,"^1S",42],["^ ","^1R",2492,"^1S",42],["^ ","^1R",2546,"^1S",42],["^ ","^1R",2648,"^1S",42],["^ ","^1R",2648,"^1S",42,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",2704,"^1S",42],["^ ","^1R",2800,"^1S",42],["^ ","^1R",2805,"^1S",42],["^ ","^1R",2811,"^1S",42],["^ ","^1R",2886,"^1S",42],["^ ","^1R",2891,"^1S",42],["^ ","^1R",2896,"^1S",42]],"~i44",[["^ ","^1R",1398,"^1S",42],["^ ","^1R",1398,"^1S",42,"^G","cljs.spec.alpha/cat-impl"],["^ ","^1R",1423,"^1S",42],["^ ","^1R",1506,"^1S",42],["^ ","^1R",1582,"^1S",42],["^ ","^1R",1644,"^1S",42],["^ ","^1R",1769,"^1S",42],["^ ","^1R",1878,"^1S",42],["^ ","^1R",1961,"^1S",42],["^ ","^1R",2078,"^1S",42]],"^27",[["^ ","^1R",1727,"^1S",42,"^G","fulcro.client.primitives/component?"]],"~i115",[["^ ","^1R",2779,"^1S",42,"^G","cljs.core/any?"]]],"^20",["^ ","~i0",[["^ ","^1R",0,"^1S",43],["^ ","^1R",0,"^1S",43,"^G","cljs.spec.alpha/def-impl"],["^ ","^1R",25,"^1S",43],["^ ","^1R",131,"^1S",43],["^ ","^1R",146,"^1S",43],["^ ","^1R",235,"^1S",43],["^ ","^1R",288,"^1S",43],["^ ","^1R",303,"^1S",43],["^ ","^1R",388,"^1S",43],["^ ","^1R",471,"^1S",43],["^ ","^1R",562,"^1S",43],["^ ","^1R",613,"^1S",43]],"^1Z",[["^ ","^1R",704,"^1S",43],["^ ","^1R",704,"^1S",43,"^G","cljs.spec.alpha/fspec-impl"],["^ ","^1R",731,"^1S",43],["^ ","^1R",731,"^1S",43,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",787,"^1S",43],["^ ","^1R",802,"^1S",43],["^ ","^1R",887,"^1S",43],["^ ","^1R",970,"^1S",43],["^ ","^1R",1623,"^1S",43],["^ ","^1R",1628,"^1S",43],["^ ","^1R",1634,"^1S",43],["^ ","^1R",1649,"^1S",43],["^ ","^1R",1734,"^1S",43],["^ ","^1R",1817,"^1S",43],["^ ","^1R",1908,"^1S",43],["^ ","^1R",1908,"^1S",43,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1R",1964,"^1S",43],["^ ","^1R",2054,"^1S",43],["^ ","^1R",2144,"^1S",43],["^ ","^1R",2149,"^1S",43],["^ ","^1R",2155,"^1S",43],["^ ","^1R",2245,"^1S",43],["^ ","^1R",2250,"^1S",43],["^ ","^1R",2255,"^1S",43]],"~i43",[["^ ","^1R",1061,"^1S",43],["^ ","^1R",1061,"^1S",43,"^G","cljs.spec.alpha/cat-impl"],["^ ","^1R",1086,"^1S",43],["^ ","^1R",1169,"^1S",43],["^ ","^1R",1260,"^1S",43],["^ ","^1R",1343,"^1S",43],["^ ","^1R",1441,"^1S",43],["^ ","^1R",1524,"^1S",43]]],"^2@",["^ ","~i0",[["^ ","^1R",0,"^1S",44],["^ ","^1R",0,"^1S",44,"^G","cljs.spec.alpha/def-impl"],["^ ","^1R",25,"^1S",44],["^ ","^1R",122,"^1S",44],["^ ","^1R",137,"^1S",44],["^ ","^1R",223,"^1S",44],["^ ","^1R",274,"^1S",44],["^ ","^1R",357,"^1S",44],["^ ","^1R",447,"^1S",44],["^ ","^1R",498,"^1S",44],["^ ","^1R",581,"^1S",44],["^ ","^1R",668,"^1S",44],["^ ","^1R",768,"^1S",44],["^ ","^1R",860,"^1S",44],["^ ","^1R",968,"^1S",44]],"^1Q",[["^ ","^1R",1083,"^1S",44],["^ ","^1R",1083,"^1S",44,"^G","cljs.spec.alpha/map-spec-impl"],["^ ","^1R",1113,"^1S",44],["^ ","^1R",1153,"^1S",44],["^ ","^1R",1210,"^1S",44],["^ ","^1R",1266,"^1S",44],["^ ","^1R",1316,"^1S",44],["^ ","^1R",1381,"^1S",44],["^ ","^1R",1443,"^1S",44],["^ ","^1R",1504,"^1S",44],["^ ","^1R",1566,"^1S",44],["^ ","^1R",1617,"^1S",44],["^ ","^1R",1677,"^1S",44],["^ ","^1R",1740,"^1S",44],["^ ","^1R",1804,"^1S",44],["^ ","^1R",1857,"^1S",44],["^ ","^1R",1862,"^1S",44],["^ ","^1R",1867,"^1S",44],["^ ","^1R",1872,"^1S",44],["^ ","^1R",1955,"^1S",44],["^ ","^1R",1966,"^1S",44,"^G","G__43086"],["^ ","^1R",0,"^1S",45],["^ ","^1R",0,"^1S",45],["^ ","^1R",7,"^1S",45,"^G","cljs.core/map?"],["^ ","^1R",28,"^1S",45,"^G","G__43086"],["^ ","^1R",3,"^1S",46],["^ ","^1R",14,"^1S",46,"^G","G__43086"],["^ ","^1R",0,"^1S",47],["^ ","^1R",0,"^1S",47],["^ ","^1R",7,"^1S",47,"^G","cljs.core/contains?"],["^ ","^1R",33,"^1S",47,"^G","G__43086"],["^ ","^1R",42,"^1S",47],["^ ","^1R",11,"^1S",48],["^ ","^1R",22,"^1S",48,"^G","G__43086"],["^ ","^1R",0,"^1S",49],["^ ","^1R",0,"^1S",49],["^ ","^1R",9,"^1S",49],["^ ","^1R",9,"^1S",49,"^G","cljs.core/map?"],["^ ","^1R",30,"^1S",49,"^G","G__43086"],["^ ","^1R",45,"^1S",49],["^ ","^1R",45,"^1S",49,"^G","cljs.core/contains?"],["^ ","^1R",71,"^1S",49,"^G","G__43086"],["^ ","^1R",80,"^1S",49],["^ ","^1R",3,"^1S",50],["^ ","^1R",86,"^1S",50],["^ ","^1R",173,"^1S",50],["^ ","^1R",273,"^1S",50],["^ ","^1R",365,"^1S",50],["^ ","^1R",473,"^1S",50],["^ ","^1R",587,"^1S",50],["^ ","^1R",670,"^1S",50],["^ ","^1R",760,"^1S",50],["^ ","^1R",843,"^1S",50],["^ ","^1R",933,"^1S",50],["^ ","^1R",1016,"^1S",50],["^ ","^1R",1106,"^1S",50],["^ ","^1R",1189,"^1S",50],["^ ","^1R",1276,"^1S",50],["^ ","^1R",1376,"^1S",50],["^ ","^1R",1468,"^1S",50],["^ ","^1R",1576,"^1S",50],["^ ","^1R",1690,"^1S",50],["^ ","^1R",1773,"^1S",50],["^ ","^1R",1788,"^1S",50],["^ ","^1R",1859,"^1S",50],["^ ","^1R",1942,"^1S",50],["^ ","^1R",2001,"^1S",50],["^ ","^1R",2016,"^1S",50],["^ ","^1R",2091,"^1S",50],["^ ","^1R",2144,"^1S",50],["^ ","^1R",2159,"^1S",50],["^ ","^1R",2230,"^1S",50],["^ ","^1R",2313,"^1S",50],["^ ","^1R",2372,"^1S",50],["^ ","^1R",2387,"^1S",50],["^ ","^1R",2471,"^1S",50],["^ ","^1R",2522,"^1S",50],["^ ","^1R",2614,"^1S",50],["^ ","^1R",2697,"^1S",50],["^ ","^1R",2784,"^1S",50],["^ ","^1R",2884,"^1S",50],["^ ","^1R",2976,"^1S",50],["^ ","^1R",3084,"^1S",50]]],"~i37",["^ ","~i0",[["^ ","^1R",0,"^1S",51],["^ ","^1R",30,"^1S",62],["^ ","^1R",68,"^1S",62,"^G","p__43120"],["^ ","^1R",0,"^1S",63],["^ ","^1R",0,"^1S",63],["^ ","^1R",4,"^1S",63,"^G","map__43121"],["^ ","^1R",17,"^1S",63,"^G","p__43120"],["^ ","^1R",4,"^1S",64,"^G","map__43121"],["^ ","^1R",21,"^1S",64],["^ ","^1R",23,"^1S",64],["^ ","^1R",25,"^1S",64],["^ ","^1R",27,"^1S",64],["^ ","^1R",28,"^1S",64,"^G","map__43121"],["^ ","^1R",42,"^1S",64],["^ ","^1R",50,"^1S",64],["^ ","^1R",52,"^1S",64],["^ ","^1R",54,"^1S",64],["^ ","^1R",55,"^1S",64],["^ ","^1R",55,"^1S",64,"^G","map__43121"],["^ ","^1R",104,"^1S",64],["^ ","^1R",115,"^1S",64],["^ ","^1R",116,"^1S",64,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",148,"^1S",64],["^ ","^1R",148,"^1S",64,"^G","map__43121"],["^ ","^1R",179,"^1S",64],["^ ","^1R",184,"^1S",64],["^ ","^1R",191,"^1S",64],["^ ","^1R",199,"^1S",64],["^ ","^1R",199,"^1S",64,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",245,"^1S",64,"^G","cljs.core/hash-map"],["^ ","^1R",264,"^1S",64,"^G","map__43121"],["^ ","^1R",276,"^1S",64,"^G","map__43121"],["^ ","^1R",20,"^1S",65,"^G","map__43121"],["^ ","^1R",4,"^1S",66,"^G","tool-id"],["^ ","^1R",14,"^1S",66],["^ ","^1R",14,"^1S",66,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",58,"^1S",66,"^G","map__43121"],["^ ","^1R",73,"^1S",66],["^ ","^1R",0,"^1S",67]],"~i6",[["^ ","^1R",0,"^1S",62,"^G","fulcro.client/register-tool"]]],"~i47",["^ ","~i26",[["^ ","^1R",4,"^1S",65,"^G","tool-registry"]]],"~i49",["^ ","~i2",[["^ ","^1R",0,"^1S",67]],"~i3",[["^ ","^1R",7,"^1S",67,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"~i9",[["^ ","^1R",58,"^1S",67,"^G","fulcro.client/fulcro-tools"]],"^1U",[["^ ","^1R",85,"^1S",67,"^G","cljs.core/assoc"]],"^1Z",[["^ ","^1R",101,"^1S",67,"^G","tool-id"]],"^2:",[["^ ","^1R",109,"^1S",67,"^G","tool-registry"]]],"~i51",["^ ","~i0",[["^ ","^1R",0,"^1S",69],["^ ","^1R",34,"^1S",69],["^ ","^1R",0,"^1S",70]],"~i7",[["^ ","^1R",0,"^1S",69,"^G","fulcro.client/normalize-network"]],"^2H",[["^ ","^1R",76,"^1S",69,"^G","networking"]]],"~i52",["^ ","~i11",[["^ ","^1R",0,"^1S",70],["^ ","^1R",0,"^1S",85],["^ ","^1R",50,"^1S",85]],"~i15",[["^ ","^1R",3,"^1S",70],["^ ","^1R",20,"^1S",70,"^G","or__3949__auto__"],["^ ","^1R",0,"^1S",71],["^ ","^1R",0,"^1S",71],["^ ","^1R",3,"^1S",71,"^G","or__3949__auto__"],["^ ","^1R",0,"^1S",72,"^G","or__3949__auto__"]]],"~i53",["^ ","^1W",[["^ ","^1R",39,"^1S",70],["^ ","^1R",41,"^1S",70],["^ ","^1R",43,"^1S",70],["^ ","^1R",58,"^1S",70],["^ ","^1R",66,"^1S",70],["^ ","^1R",68,"^1S",70],["^ ","^1R",70,"^1S",70],["^ ","^1R",81,"^1S",70],["^ ","^1R",82,"^1S",70,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",114,"^1S",70],["^ ","^1R",166,"^1S",70],["^ ","^1R",171,"^1S",70],["^ ","^1R",178,"^1S",70]],"^2A",[["^ ","^1R",44,"^1S",70,"^G","networking"],["^ ","^1R",114,"^1S",70,"^G","networking"]]],"~i54",["^ ","^1W",[["^ ","^1R",0,"^1S",74],["^ ","^1R",3,"^1S",74],["^ ","^1R",5,"^1S",74],["^ ","^1R",20,"^1S",74],["^ ","^1R",0,"^1S",75],["^ ","^1R",3,"^1S",75],["^ ","^1R",5,"^1S",75],["^ ","^1R",16,"^1S",75],["^ ","^1R",17,"^1S",75,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",49,"^1S",75],["^ ","^1R",0,"^1S",76],["^ ","^1R",0,"^1S",78],["^ ","^1R",0,"^1S",81]],"^2A",[["^ ","^1R",6,"^1S",74,"^G","networking"],["^ ","^1R",49,"^1S",75,"^G","networking"]],"~i70",[["^ ","^1R",108,"^1S",85,"^G","networking"]],"~i82",[["^ ","^1R",0,"^1S",87,"^G","networking"]]],"^26",["^ ","~i0",[["^ ","^1R",0,"^1S",90],["^ ","^1R",26,"^1S",90],["^ ","^1R",0,"^1S",91]],"~i7",[["^ ","^1R",0,"^1S",90,"^G","fulcro.client/add-tools"]],"~i18",[["^ ","^1R",60,"^1S",90,"^G","original-start"]],"^1Y",[["^ ","^1R",75,"^1S",90,"^G","original-net"]],"^21",[["^ ","^1R",88,"^1S",90,"^G","original-tx-listen"]],"~i65",[["^ ","^1R",107,"^1S",90,"^G","original-instrument"]]],"~i58",["^ ","~i2",[["^ ","^1R",0,"^1S",91],["^ ","^1R",0,"^1S",106]],"~i8",[["^ ","^1R",4,"^1S",91,"^G","net"]],"~i16",[["^ ","^1R",10,"^1S",91]],"^1W",[["^ ","^1R",10,"^1S",91,"^G","fulcro.client/normalize-network"]],"^2@",[["^ ","^1R",42,"^1S",91,"^G","original-net"]]],"~i59",["^ ","~i8",[["^ ","^1R",4,"^1S",92,"^G","listen"]],"^2U",[["^ ","^1R",13,"^1S",92],["^ ","^1R",30,"^1S",92,"^G","or__3949__auto__"],["^ ","^1R",0,"^1S",93],["^ ","^1R",0,"^1S",93],["^ ","^1R",20,"^1S",93,"^G","or__3949__auto__"],["^ ","^1R",0,"^1S",94,"^G","or__3949__auto__"]],"^2?",[["^ ","^1R",49,"^1S",92,"^G","original-tx-listen"]],"~i39",[["^ ","^1R",0,"^1S",96],["^ ","^1R",28,"^1S",96]],"^25",[["^ ","^1R",7,"^1S",96,"^G","cljs.core/constantly"]]],"^22",["^ ","~i8",[["^ ","^1R",4,"^1S",99,"^G","started"]],"^2U",[["^ ","^1R",14,"^1S",99],["^ ","^1R",31,"^1S",99,"^G","or__3949__auto__"],["^ ","^1R",0,"^1S",100],["^ ","^1R",0,"^1S",100],["^ ","^1R",20,"^1S",100,"^G","or__3949__auto__"],["^ ","^1R",0,"^1S",101,"^G","or__3949__auto__"]],"^2?",[["^ ","^1R",50,"^1S",99,"^G","original-start"]],"^2@",[["^ ","^1R",0,"^1S",103],["^ ","^1R",28,"^1S",103]],"^2:",[["^ ","^1R",7,"^1S",103,"^G","cljs.core/constantly"]]],"~i61",["^ ","~i4",[["^ ","^1R",0,"^1S",106],["^ ","^1R",1,"^1S",149],["^ ","^1R",103,"^1S",149],["^ ","^1R",108,"^1S",149]],"~i5",[["^ ","^1R",7,"^1S",106,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]]],"~i62",["^ ","~i6",[["^ ","^1R",54,"^1S",106],["^ ","^1R",18,"^1S",107,"^G","p__43142"],["^ ","^1R",27,"^1S",107,"^G","p__43143"],["^ ","^1R",0,"^1S",108],["^ ","^1R",0,"^1S",108],["^ ","^1R",4,"^1S",108,"^G","vec__43144"],["^ ","^1R",17,"^1S",108,"^G","p__43142"],["^ ","^1R",12,"^1S",109],["^ ","^1R",12,"^1S",109,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",56,"^1S",109,"^G","vec__43144"],["^ ","^1R",67,"^1S",109],["^ ","^1R",71,"^1S",109],["^ ","^1R",14,"^1S",110],["^ ","^1R",14,"^1S",110,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",58,"^1S",110,"^G","vec__43144"],["^ ","^1R",69,"^1S",110],["^ ","^1R",73,"^1S",110],["^ ","^1R",17,"^1S",111],["^ ","^1R",17,"^1S",111,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",61,"^1S",111,"^G","vec__43144"],["^ ","^1R",72,"^1S",111],["^ ","^1R",76,"^1S",111],["^ ","^1R",17,"^1S",112],["^ ","^1R",17,"^1S",112,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",61,"^1S",112,"^G","vec__43144"],["^ ","^1R",72,"^1S",112],["^ ","^1R",76,"^1S",112],["^ ","^1R",16,"^1S",113],["^ ","^1R",16,"^1S",113,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",60,"^1S",113,"^G","vec__43144"],["^ ","^1R",71,"^1S",113],["^ ","^1R",75,"^1S",113],["^ ","^1R",4,"^1S",114,"^G","map__43147"],["^ ","^1R",17,"^1S",114,"^G","p__43143"],["^ ","^1R",4,"^1S",115,"^G","map__43147"],["^ ","^1R",21,"^1S",115],["^ ","^1R",23,"^1S",115],["^ ","^1R",25,"^1S",115],["^ ","^1R",27,"^1S",115],["^ ","^1R",28,"^1S",115,"^G","map__43147"],["^ ","^1R",42,"^1S",115],["^ ","^1R",50,"^1S",115],["^ ","^1R",52,"^1S",115],["^ ","^1R",54,"^1S",115],["^ ","^1R",55,"^1S",115],["^ ","^1R",55,"^1S",115,"^G","map__43147"],["^ ","^1R",104,"^1S",115],["^ ","^1R",115,"^1S",115],["^ ","^1R",116,"^1S",115,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",148,"^1S",115],["^ ","^1R",148,"^1S",115,"^G","map__43147"],["^ ","^1R",179,"^1S",115],["^ ","^1R",184,"^1S",115],["^ ","^1R",191,"^1S",115],["^ ","^1R",199,"^1S",115],["^ ","^1R",199,"^1S",115,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",245,"^1S",115,"^G","cljs.core/hash-map"],["^ ","^1R",264,"^1S",115,"^G","map__43147"],["^ ","^1R",276,"^1S",115,"^G","map__43147"],["^ ","^1R",4,"^1S",116,"^G","tool-id"],["^ ","^1R",14,"^1S",116],["^ ","^1R",14,"^1S",116,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",58,"^1S",116,"^G","map__43147"],["^ ","^1R",73,"^1S",116],["^ ","^1R",4,"^1S",117,"^G","tx-listen"],["^ ","^1R",16,"^1S",117],["^ ","^1R",16,"^1S",117,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",60,"^1S",117,"^G","map__43147"],["^ ","^1R",75,"^1S",117],["^ ","^1R",4,"^1S",118,"^G","network-wrapper"],["^ ","^1R",22,"^1S",118],["^ ","^1R",22,"^1S",118,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",66,"^1S",118,"^G","map__43147"],["^ ","^1R",81,"^1S",118],["^ ","^1R",4,"^1S",119,"^G","app-started"],["^ ","^1R",18,"^1S",119],["^ ","^1R",18,"^1S",119,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",62,"^1S",119,"^G","map__43147"],["^ ","^1R",77,"^1S",119],["^ ","^1R",4,"^1S",120,"^G","instrument-wrapper"],["^ ","^1R",25,"^1S",120],["^ ","^1R",25,"^1S",120,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",69,"^1S",120,"^G","map__43147"],["^ ","^1R",84,"^1S",120],["^ ","^1R",4,"^1S",121,"^G","component-lifecycle"],["^ ","^1R",26,"^1S",121],["^ ","^1R",26,"^1S",121,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",70,"^1S",121,"^G","map__43147"],["^ ","^1R",85,"^1S",121],["^ ","^1R",0,"^1S",122]],"~i12",[["^ ","^1R",4,"^1S",109,"^G","start"]],"^2R",[["^ ","^1R",4,"^1S",110,"^G","net"]],"^1U",[["^ ","^1R",4,"^1S",111,"^G","listen"]],"^24",[["^ ","^1R",4,"^1S",112,"^G","instrument"]],"^25",[["^ ","^1R",4,"^1S",113,"^G","lifecycle"]]],"~i63",["^ ","~i8",[["^ ","^1R",0,"^1S",122],["^ ","^1R",0,"^1S",147],["^ ","^1R",0,"^1S",147]],"~i14",[["^ ","^1R",4,"^1S",122,"^G","start"]],"^1T",[["^ ","^1R",16,"^1S",122]],"^24",[["^ ","^1R",34,"^1S",122,"^G","app-started"]],"~i41",[["^ ","^1R",47,"^1S",122],["^ ","^1R",0,"^1S",124]],"^21",[["^ ","^1R",18,"^1S",123,"^G","app"]],"^2J",[["^ ","^1R",0,"^1S",124]],"^2K",[["^ ","^1R",1,"^1S",124,"^G","app-started"],["^ ","^1R",45,"^1S",124,"^G","app-started"],["^ ","^1R",94,"^1S",124,"^G","app-started"]],"~i64",[["^ ","^1R",87,"^1S",124,"^G","app"],["^ ","^1R",116,"^1S",124,"^G","app"]],"~i69",[["^ ","^1R",0,"^1S",126]],"^2P",[["^ ","^1R",8,"^1S",126,"^G","start"],["^ ","^1R",46,"^1S",126,"^G","start"],["^ ","^1R",89,"^1S",126,"^G","start"]],"~i76",[["^ ","^1R",82,"^1S",126,"^G","app"],["^ ","^1R",105,"^1S",126,"^G","app"]],"^2Q",[["^ ","^1R",1,"^1S",128,"^G","start"]]],"^32",["^ ","^30",[["^ ","^1R",4,"^1S",129,"^G","net"]],"^1T",[["^ ","^1R",14,"^1S",129]],"^24",[["^ ","^1R",32,"^1S",129,"^G","network-wrapper"]],"~i45",[["^ ","^1R",49,"^1S",129]],"^21",[["^ ","^1R",50,"^1S",129,"^G","network-wrapper"],["^ ","^1R",98,"^1S",129,"^G","network-wrapper"],["^ ","^1R",155,"^1S",129,"^G","network-wrapper"]],"^2Y",[["^ ","^1R",144,"^1S",129,"^G","net"],["^ ","^1R",181,"^1S",129,"^G","net"]],"~i67",[["^ ","^1R",191,"^1S",129,"^G","net"]]],"^2S",["^ ","^30",[["^ ","^1R",4,"^1S",130,"^G","listen"]],"^1T",[["^ ","^1R",17,"^1S",130]],"^24",[["^ ","^1R",35,"^1S",130,"^G","tx-listen"]],"^2W",[["^ ","^1R",46,"^1S",130],["^ ","^1R",0,"^1S",132]],"^2C",[["^ ","^1R",18,"^1S",131,"^G","env"]],"^2A",[["^ ","^1R",22,"^1S",131,"^G","info"]],"^2O",[["^ ","^1R",0,"^1S",132]],"^2;",[["^ ","^1R",8,"^1S",132,"^G","tx-listen"],["^ ","^1R",50,"^1S",132,"^G","tx-listen"],["^ ","^1R",102,"^1S",132,"^G","tx-listen"]],"^2S",[["^ ","^1R",90,"^1S",132,"^G","env"],["^ ","^1R",122,"^1S",132,"^G","env"]],"^33",[["^ ","^1R",94,"^1S",132,"^G","info"],["^ ","^1R",126,"^1S",132,"^G","info"]],"^34",[["^ ","^1R",1,"^1S",134,"^G","listen"]]],"^2<",["^ ","^30",[["^ ","^1R",4,"^1S",135,"^G","instrument"]],"^1T",[["^ ","^1R",21,"^1S",135]],"^24",[["^ ","^1R",39,"^1S",135,"^G","instrument-wrapper"]],"^2A",[["^ ","^1R",59,"^1S",135]],"^2I",[["^ ","^1R",60,"^1S",135,"^G","instrument-wrapper"],["^ ","^1R",111,"^1S",135,"^G","instrument-wrapper"],["^ ","^1R",174,"^1S",135,"^G","instrument-wrapper"]],"^27",[["^ ","^1R",160,"^1S",135,"^G","instrument"],["^ ","^1R",203,"^1S",135,"^G","instrument"]],"~i80",[["^ ","^1R",216,"^1S",135,"^G","instrument"]]],"^36",["^ ","^30",[["^ ","^1R",4,"^1S",136,"^G","lifecycle"]],"^1T",[["^ ","^1R",20,"^1S",136]],"^24",[["^ ","^1R",38,"^1S",136,"^G","component-lifecycle"]],"^2I",[["^ ","^1R",59,"^1S",136],["^ ","^1R",0,"^1S",138]],"^2O",[["^ ","^1R",18,"^1S",137,"^G","c"]],"~i56",[["^ ","^1R",20,"^1S",137,"^G","e"]],"^2V",[["^ ","^1R",0,"^1S",138]],"^22",[["^ ","^1R",1,"^1S",138,"^G","component-lifecycle"],["^ ","^1R",53,"^1S",138,"^G","component-lifecycle"],["^ ","^1R",110,"^1S",138,"^G","component-lifecycle"]],"^37",[["^ ","^1R",103,"^1S",138,"^G","c"],["^ ","^1R",140,"^1S",138,"^G","c"]],"^2Q",[["^ ","^1R",105,"^1S",138,"^G","e"],["^ ","^1R",142,"^1S",138,"^G","e"]],"~i85",[["^ ","^1R",0,"^1S",140],["^ ","^1R",0,"^1S",141],["^ ","^1R",0,"^1S",143]],"~i91",[["^ ","^1R",20,"^1S",140,"^G","lifecycle"]],"~i101",[["^ ","^1R",0,"^1S",141]],"~i102",[["^ ","^1R",8,"^1S",141,"^G","lifecycle"],["^ ","^1R",50,"^1S",141,"^G","lifecycle"],["^ ","^1R",97,"^1S",141,"^G","lifecycle"]],"~i112",[["^ ","^1R",90,"^1S",141,"^G","c"],["^ ","^1R",117,"^1S",141,"^G","c"]],"~i114",[["^ ","^1R",92,"^1S",141,"^G","e"],["^ ","^1R",119,"^1S",141,"^G","e"]],"~i119",[["^ ","^1R",1,"^1S",146,"^G","lifecycle"]]],"^27",["^ ","^2L",[["^ ","^1R",90,"^1S",147,"^G","start"]],"^1W",[["^ ","^1R",100,"^1S",147,"^G","net"]],"^29",[["^ ","^1R",108,"^1S",147,"^G","listen"]],"^1Z",[["^ ","^1R",119,"^1S",147,"^G","instrument"]],"^2W",[["^ ","^1R",134,"^1S",147,"^G","lifecycle"]]],"^33",["^ ","~i7",[["^ ","^1R",84,"^1S",149,"^G","started"]],"^2M",[["^ ","^1R",92,"^1S",149,"^G","net"]],"^1[",[["^ ","^1R",96,"^1S",149,"^G","listen"]]],"^2P",["^ ","~i6",[["^ ","^1R",121,"^1S",149],["^ ","^1R",136,"^1S",149],["^ ","^1R",136,"^1S",149,"^G","cljs.core/deref"]],"~i7",[["^ ","^1R",121,"^1S",149,"^G","cljs.core/vals"]],"~i13",[["^ ","^1R",152,"^1S",149,"^G","fulcro.client/fulcro-tools"]]],"~i73",["^ ","~i0",[["^ ","^1R",0,"^1S",151]],"~i5",[["^ ","^1R",0,"^1S",151,"^G","fulcro.client/mutate"]],"^2Z",[["^ ","^1R",23,"^1S",151,"^G","fulcro.client.impl.application/write-entry-point"]]],"~i75",["^ ","~i0",[["^ ","^1R",0,"^1S",152],["^ ","^1R",0,"^1S",152],["^ ","^1R",34,"^1S",219],["^ ","^1R",76,"^1S",219,"^G","var_args"],["^ ","^1R",0,"^1S",220],["^ ","^1R",0,"^1S",220],["^ ","^1R",4,"^1S",220,"^G","args__4534__auto__"],["^ ","^1R",25,"^1S",220],["^ ","^1R",0,"^1S",221],["^ ","^1R",0,"^1S",221],["^ ","^1R",4,"^1S",221,"^G","len__4531__auto__"],["^ ","^1R",30,"^1S",221],["^ ","^1R",30,"^1S",221],["^ ","^1R",0,"^1S",222],["^ ","^1R",0,"^1S",222],["^ ","^1R",4,"^1S",222,"^G","i__4532__auto__"],["^ ","^1R",28,"^1S",222],["^ ","^1R",0,"^1S",224],["^ ","^1R",0,"^1S",224],["^ ","^1R",3,"^1S",224],["^ ","^1R",4,"^1S",224,"^G","i__4532__auto__"],["^ ","^1R",28,"^1S",224,"^G","len__4531__auto__"],["^ ","^1R",0,"^1S",225],["^ ","^1R",0,"^1S",225],["^ ","^1R",0,"^1S",225,"^G","args__4534__auto__"],["^ ","^1R",24,"^1S",225],["^ ","^1R",25,"^1S",225],["^ ","^1R",35,"^1S",225,"^G","i__4532__auto__"],["^ ","^1R",0,"^1S",227],["^ ","^1R",15,"^1S",227],["^ ","^1R",16,"^1S",227,"^G","i__4532__auto__"],["^ ","^1R",40,"^1S",227],["^ ","^1R",0,"^1S",231],["^ ","^1R",0,"^1S",235],["^ ","^1R",4,"^1S",235,"^G","argseq__4535__auto__"],["^ ","^1R",27,"^1S",235],["^ ","^1R",29,"^1S",235],["^ ","^1R",30,"^1S",235],["^ ","^1R",36,"^1S",235],["^ ","^1R",36,"^1S",235,"^G","args__4534__auto__"],["^ ","^1R",64,"^1S",235],["^ ","^1R",64,"^1S",235],["^ ","^1R",69,"^1S",235,"^G","cljs.core/IndexedSeq"],["^ ","^1R",90,"^1S",235],["^ ","^1R",90,"^1S",235,"^G","args__4534__auto__"],["^ ","^1R",115,"^1S",235],["^ ","^1R",120,"^1S",235],["^ ","^1R",124,"^1S",235],["^ ","^1R",131,"^1S",235],["^ ","^1R",0,"^1S",236],["^ ","^1R",0,"^1S",236],["^ ","^1R",7,"^1S",236,"^G","fulcro.client/new-fulcro-client"],["^ ","^1R",76,"^1S",236,"^G","argseq__4535__auto__"],["^ ","^1R",0,"^1S",239],["^ ","^1R",0,"^1S",239],["^ ","^1R",0,"^1S",239],["^ ","^1R",0,"^1S",239,"^G","fulcro.client/new-fulcro-client"],["^ ","^1R",71,"^1S",239],["^ ","^1R",82,"^1S",239,"^G","p__43190"],["^ ","^1R",0,"^1S",240],["^ ","^1R",0,"^1S",240],["^ ","^1R",4,"^1S",240,"^G","map__43191"],["^ ","^1R",17,"^1S",240,"^G","p__43190"],["^ ","^1R",4,"^1S",241,"^G","map__43191"],["^ ","^1R",21,"^1S",241],["^ ","^1R",23,"^1S",241],["^ ","^1R",25,"^1S",241],["^ ","^1R",27,"^1S",241],["^ ","^1R",28,"^1S",241,"^G","map__43191"],["^ ","^1R",42,"^1S",241],["^ ","^1R",50,"^1S",241],["^ ","^1R",52,"^1S",241],["^ ","^1R",54,"^1S",241],["^ ","^1R",55,"^1S",241],["^ ","^1R",55,"^1S",241,"^G","map__43191"],["^ ","^1R",104,"^1S",241],["^ ","^1R",115,"^1S",241],["^ ","^1R",116,"^1S",241,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",148,"^1S",241],["^ ","^1R",148,"^1S",241,"^G","map__43191"],["^ ","^1R",179,"^1S",241],["^ ","^1R",184,"^1S",241],["^ ","^1R",191,"^1S",241],["^ ","^1R",199,"^1S",241],["^ ","^1R",199,"^1S",241,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",245,"^1S",241,"^G","cljs.core/hash-map"],["^ ","^1R",264,"^1S",241,"^G","map__43191"],["^ ","^1R",276,"^1S",241,"^G","map__43191"],["^ ","^1R",23,"^1S",242],["^ ","^1R",23,"^1S",242,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",67,"^1S",242,"^G","map__43191"],["^ ","^1R",82,"^1S",242],["^ ","^1R",20,"^1S",243],["^ ","^1R",20,"^1S",243,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",64,"^1S",243,"^G","map__43191"],["^ ","^1R",79,"^1S",243],["^ ","^1R",151,"^1S",243],["^ ","^1R",25,"^1S",244],["^ ","^1R",25,"^1S",244,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",69,"^1S",244,"^G","map__43191"],["^ ","^1R",84,"^1S",244],["^ ","^1R",17,"^1S",245],["^ ","^1R",17,"^1S",245,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",61,"^1S",245,"^G","map__43191"],["^ ","^1R",76,"^1S",245],["^ ","^1R",29,"^1S",246],["^ ","^1R",29,"^1S",246,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",73,"^1S",246,"^G","map__43191"],["^ ","^1R",88,"^1S",246],["^ ","^1R",17,"^1S",247],["^ ","^1R",17,"^1S",247,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",61,"^1S",247,"^G","map__43191"],["^ ","^1R",76,"^1S",247],["^ ","^1R",21,"^1S",248],["^ ","^1R",21,"^1S",248,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",65,"^1S",248,"^G","map__43191"],["^ ","^1R",80,"^1S",248],["^ ","^1R",23,"^1S",249],["^ ","^1R",23,"^1S",249,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",67,"^1S",249,"^G","map__43191"],["^ ","^1R",82,"^1S",249],["^ ","^1R",14,"^1S",250],["^ ","^1R",14,"^1S",250,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",58,"^1S",250,"^G","map__43191"],["^ ","^1R",73,"^1S",250],["^ ","^1R",132,"^1S",250],["^ ","^1R",24,"^1S",251],["^ ","^1R",24,"^1S",251,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",68,"^1S",251,"^G","map__43191"],["^ ","^1R",83,"^1S",251],["^ ","^1R",24,"^1S",252],["^ ","^1R",24,"^1S",252,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",68,"^1S",252,"^G","map__43191"],["^ ","^1R",83,"^1S",252],["^ ","^1R",13,"^1S",253],["^ ","^1R",13,"^1S",253,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",57,"^1S",253,"^G","map__43191"],["^ ","^1R",72,"^1S",253],["^ ","^1R",129,"^1S",253],["^ ","^1R",0,"^1S",254],["^ ","^1R",0,"^1S",281],["^ ","^1R",0,"^1S",281],["^ ","^1R",0,"^1S",281,"^G","fulcro.client/new-fulcro-client"],["^ ","^1R",58,"^1S",281],["^ ","^1R",0,"^1S",283],["^ ","^1R",0,"^1S",284],["^ ","^1R",0,"^1S",284],["^ ","^1R",0,"^1S",284,"^G","fulcro.client/new-fulcro-client"],["^ ","^1R",52,"^1S",284],["^ ","^1R",63,"^1S",284,"^G","seq43184"],["^ ","^1R",0,"^1S",285],["^ ","^1R",0,"^1S",285],["^ ","^1R",4,"^1S",285,"^G","self__4519__auto__"],["^ ","^1R",25,"^1S",285],["^ ","^1R",0,"^1S",286],["^ ","^1R",0,"^1S",286],["^ ","^1R",7,"^1S",286,"^G","self__4519__auto__"],["^ ","^1R",63,"^1S",286],["^ ","^1R",63,"^1S",286,"^G","cljs.core/seq"],["^ ","^1R",77,"^1S",286,"^G","seq43184"],["^ ","^1R",0,"^1S",289]],"~i6",[["^ ","^1R",0,"^1S",219,"^G","fulcro.client/new-fulcro-client"]]],"~i141",["^ ","^3@",[["^ ","^1R",4,"^1S",243,"^G","initial-state"]],"^1V",[["^ ","^1R",4,"^1S",248,"^G","mutation-merge"]],"~i42",[["^ ","^1R",4,"^1S",242,"^G","started-callback"]],"^2V",[["^ ","^1R",4,"^1S",247,"^G","networking"]],"^2P",[["^ ","^1R",4,"^1S",244,"^G","reconciler-options"]],"~i89",[["^ ","^1R",4,"^1S",251,"^G","query-interpreter"]]],"~i142",["^ ","^3@",[["^ ","^1R",4,"^1S",245,"^G","read-local"]],"^1X",[["^ ","^1R",4,"^1S",252,"^G","request-transform"]],"^3D",[["^ ","^1R",4,"^1S",246,"^G","network-error-callback"]],"^2S",[["^ ","^1R",4,"^1S",250,"^G","migrate"]],"^3A",[["^ ","^1R",4,"^1S",249,"^G","transit-handlers"]],"~i90",[["^ ","^1R",4,"^1S",253,"^G","shared"]]],"~i143",["^ ","^31",[["^ ","^1R",140,"^1S",245],["^ ","^1R",161,"^1S",245]],"^3D",[["^ ","^1R",140,"^1S",245,"^G","cljs.core/constantly"]],"~i77",[["^ ","^1R",160,"^1S",242],["^ ","^1R",181,"^1S",242]],"~i78",[["^ ","^1R",160,"^1S",242,"^G","cljs.core/constantly"]],"~i117",[["^ ","^1R",175,"^1S",246],["^ ","^1R",196,"^1S",246]],"~i118",[["^ ","^1R",175,"^1S",246,"^G","cljs.core/constantly"]]],"~i145",["^ ","~i2",[["^ ","^1R",0,"^1S",254],["^ ","^1R",4,"^1S",261,"^G","vec__43197"],["^ ","^1R",27,"^1S",262],["^ ","^1R",27,"^1S",262,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",71,"^1S",262,"^G","vec__43197"],["^ ","^1R",82,"^1S",262],["^ ","^1R",86,"^1S",262],["^ ","^1R",21,"^1S",263],["^ ","^1R",21,"^1S",263,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",65,"^1S",263,"^G","vec__43197"],["^ ","^1R",76,"^1S",263],["^ ","^1R",80,"^1S",263],["^ ","^1R",16,"^1S",264],["^ ","^1R",16,"^1S",264,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",60,"^1S",264,"^G","vec__43197"],["^ ","^1R",71,"^1S",264],["^ ","^1R",75,"^1S",264],["^ ","^1R",17,"^1S",265],["^ ","^1R",17,"^1S",265,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",61,"^1S",265,"^G","vec__43197"],["^ ","^1R",72,"^1S",265],["^ ","^1R",76,"^1S",265],["^ ","^1R",16,"^1S",266],["^ ","^1R",16,"^1S",266,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",60,"^1S",266,"^G","vec__43197"],["^ ","^1R",71,"^1S",266],["^ ","^1R",75,"^1S",266],["^ ","^1R",0,"^1S",267]],"~i8",[["^ ","^1R",4,"^1S",254,"^G","networking"]],"^1[",[["^ ","^1R",21,"^1S",254],["^ ","^1R",38,"^1S",254,"^G","or__3949__auto__"],["^ ","^1R",0,"^1S",255],["^ ","^1R",0,"^1S",255],["^ ","^1R",20,"^1S",255,"^G","or__3949__auto__"],["^ ","^1R",0,"^1S",256,"^G","or__3949__auto__"]],"^1Q",[["^ ","^1R",57,"^1S",254,"^G","networking"]],"^2K",[["^ ","^1R",0,"^1S",258],["^ ","^1R",86,"^1S",258],["^ ","^1R",143,"^1S",258],["^ ","^1R",239,"^1S",258],["^ ","^1R",334,"^1S",258]],"^2N",[["^ ","^1R",7,"^1S",258,"^G","fulcro.client.network.make_fulcro_network.cljs$core$IFn$_invoke$arity$variadic"]]],"~i146",["^ ","^3A",[["^ ","^1R",221,"^1S",258,"^G","request-transform"]]],"~i147",["^ ","~i72",[["^ ","^1R",317,"^1S",258,"^G","transit-handlers"]]],"~i148",["^ ","^3I",[["^ ","^1R",420,"^1S",258,"^G","network-error-callback"]]],"~i149",["^ ","~i9",[["^ ","^1R",4,"^1S",262,"^G","started-callback"]],"^2H",[["^ ","^1R",4,"^1S",263,"^G","networking"]],"^2F",[["^ ","^1R",4,"^1S",264,"^G","tx-listen"]],"^2G",[["^ ","^1R",4,"^1S",265,"^G","instrument"]],"^2T",[["^ ","^1R",4,"^1S",266,"^G","lifecycle"]],"^33",[["^ ","^1R",17,"^1S",261]],"^2P",[["^ ","^1R",17,"^1S",261,"^G","fulcro.client/add-tools"]],"^37",[["^ ","^1R",41,"^1S",261,"^G","started-callback"]],"~i97",[["^ ","^1R",58,"^1S",261,"^G","networking"]],"~i108",[["^ ","^1R",73,"^1S",261],["^ ","^1R",73,"^1S",261]],"~i120",[["^ ","^1R",165,"^1S",261,"^G","reconciler-options"]]],"~i150",["^ ","^23",[["^ ","^1R",185,"^1S",261],["^ ","^1R",185,"^1S",261]],"~i84",[["^ ","^1R",280,"^1S",261,"^G","reconciler-options"]]],"~i151",["^ ","~i4",[["^ ","^1R",0,"^1S",267],["^ ","^1R",4,"^1S",267,"^G","G__43201"],["^ ","^1R",15,"^1S",267],["^ ","^1R",58,"^1S",267],["^ ","^1R",144,"^1S",267],["^ ","^1R",219,"^1S",267],["^ ","^1R",308,"^1S",267],["^ ","^1R",407,"^1S",267],["^ ","^1R",479,"^1S",267],["^ ","^1R",576,"^1S",267],["^ ","^1R",30,"^1S",277],["^ ","^1R",0,"^1S",278],["^ ","^1R",0,"^1S",278],["^ ","^1R",138,"^1S",278,"^G","G__43201"],["^ ","^1R",194,"^1S",278,"^G","G__43201"]],"~i5",[["^ ","^1R",8,"^1S",278,"^G","fulcro.client/map->Application"],["^ ","^1R",74,"^1S",278,"^G","fulcro.client/map->Application"],["^ ","^1R",150,"^1S",278,"^G","fulcro.client/map->Application"]],"^2E",[["^ ","^1R",130,"^1S",267,"^G","initial-state"]]],"~i152",["^ ","^2E",[["^ ","^1R",208,"^1S",267,"^G","read-local"]]],"~i153",["^ ","^2E",[["^ ","^1R",293,"^1S",267,"^G","mutation-merge"]]],"~i154",["^ ","^2E",[["^ ","^1R",386,"^1S",267,"^G","started-callback"]]],"~i155",["^ ","^2E",[["^ ","^1R",469,"^1S",267,"^G","lifecycle"]]],"~i156",["^ ","^2E",[["^ ","^1R",558,"^1S",267,"^G","query-interpreter"]]],"~i157",["^ ","^2E",[["^ ","^1R",657,"^1S",267]],"^2C",[["^ ","^1R",657,"^1S",267,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]],"~i50",[["^ ","^1R",760,"^1S",267],["^ ","^1R",777,"^1S",267,"^G","G__43204"],["^ ","^1R",788,"^1S",267],["^ ","^1R",4,"^1S",268,"^G","G__43204"],["^ ","^1R",19,"^1S",268],["^ ","^1R",176,"^1S",268,"^G","G__43204"],["^ ","^1R",4,"^1S",269,"^G","G__43204"],["^ ","^1R",19,"^1S",269],["^ ","^1R",185,"^1S",269,"^G","G__43204"],["^ ","^1R",4,"^1S",270,"^G","G__43204"],["^ ","^1R",19,"^1S",270],["^ ","^1R",180,"^1S",270,"^G","G__43204"],["^ ","^1R",4,"^1S",271,"^G","G__43204"],["^ ","^1R",19,"^1S",271],["^ ","^1R",173,"^1S",271,"^G","G__43204"],["^ ","^1R",0,"^1S",272],["^ ","^1R",0,"^1S",272],["^ ","^1R",0,"^1S",275,"^G","G__43204"]]],"~i158",["^ ","^2K",[["^ ","^1R",37,"^1S",268,"^G","tx-listen"]],"^2Y",[["^ ","^1R",48,"^1S",268],["^ ","^1R",94,"^1S",268,"^G","G__43204"],["^ ","^1R",103,"^1S",268]],"^2[",[["^ ","^1R",48,"^1S",268,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^37",[["^ ","^1R",165,"^1S",268,"^G","tx-listen"]]],"~i159",["^ ","^2K",[["^ ","^1R",37,"^1S",269,"^G","instrument"]],"^2[",[["^ ","^1R",49,"^1S",269],["^ ","^1R",95,"^1S",269,"^G","G__43204"],["^ ","^1R",108,"^1S",269]],"^32",[["^ ","^1R",49,"^1S",269,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2Q",[["^ ","^1R",173,"^1S",269,"^G","instrument"]]],"~i160",["^ ","^2K",[["^ ","^1R",37,"^1S",270,"^G","lifecycle"]],"^2Y",[["^ ","^1R",48,"^1S",270],["^ ","^1R",94,"^1S",270,"^G","G__43204"],["^ ","^1R",107,"^1S",270]],"^2[",[["^ ","^1R",48,"^1S",270,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^37",[["^ ","^1R",169,"^1S",270,"^G","lifecycle"]]],"~i161",["^ ","^2K",[["^ ","^1R",37,"^1S",271,"^G","migrate"]],"^22",[["^ ","^1R",46,"^1S",271],["^ ","^1R",92,"^1S",271,"^G","G__43204"],["^ ","^1R",105,"^1S",271]],"^2X",[["^ ","^1R",46,"^1S",271,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^34",[["^ ","^1R",164,"^1S",271,"^G","migrate"]]],"~i162",["^ ","^2K",[["^ ","^1R",20,"^1S",272,"^G","shared"]],"^2V",[["^ ","^1R",0,"^1S",273],["^ ","^1R",53,"^1S",273,"^G","G__43204"],["^ ","^1R",66,"^1S",273]],"^22",[["^ ","^1R",7,"^1S",273,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"~i74",[["^ ","^1R",123,"^1S",273,"^G","shared"]]],"~i163",["^ ","^35",[["^ ","^1R",5,"^1S",277,"^G","reconciler-options"]]],"~i164",["^ ","^2E",[["^ ","^1R",94,"^1S",277,"^G","networking"]]],"~i166",["^ ","~i0",[["^ ","^1R",0,"^1S",289],["^ ","^1R",0,"^1S",289],["^ ","^1R",0,"^1S",290],["^ ","^1R",34,"^1S",293],["^ ","^1R",0,"^1S",295],["^ ","^1R",22,"^1S",298],["^ ","^1R",0,"^1S",299],["^ ","^1R",0,"^1S",299],["^ ","^1R",3,"^1S",299],["^ ","^1R",5,"^1S",299],["^ ","^1R",7,"^1S",299],["^ ","^1R",17,"^1S",299],["^ ","^1R",29,"^1S",299],["^ ","^1R",31,"^1S",299],["^ ","^1R",32,"^1S",299],["^ ","^1R",87,"^1S",299],["^ ","^1R",0,"^1S",300],["^ ","^1R",0,"^1S",302],["^ ","^1R",4,"^1S",302,"^G","x__4243__auto__"],["^ ","^1R",22,"^1S",302],["^ ","^1R",24,"^1S",302],["^ ","^1R",34,"^1S",302],["^ ","^1R",41,"^1S",302],["^ ","^1R",4,"^1S",303,"^G","m__4244__auto__"],["^ ","^1R",22,"^1S",303],["^ ","^1R",23,"^1S",303,"^G","fulcro/client.mount"],["^ ","^1R",43,"^1S",303],["^ ","^1R",43,"^1S",303,"^G","goog/typeOf"],["^ ","^1R",55,"^1S",303,"^G","x__4243__auto__"],["^ ","^1R",0,"^1S",304],["^ ","^1R",0,"^1S",304],["^ ","^1R",3,"^1S",304],["^ ","^1R",5,"^1S",304],["^ ","^1R",6,"^1S",304,"^G","m__4244__auto__"],["^ ","^1R",25,"^1S",304],["^ ","^1R",0,"^1S",305],["^ ","^1R",8,"^1S",305,"^G","m__4244__auto__"],["^ ","^1R",56,"^1S",305,"^G","m__4244__auto__"],["^ ","^1R",140,"^1S",305,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",307],["^ ","^1R",4,"^1S",307,"^G","m__4244__auto__"],["^ ","^1R",26,"^1S",307],["^ ","^1R",27,"^1S",307,"^G","fulcro/client.mount"],["^ ","^1R",47,"^1S",307],["^ ","^1R",0,"^1S",308],["^ ","^1R",0,"^1S",308],["^ ","^1R",3,"^1S",308],["^ ","^1R",5,"^1S",308],["^ ","^1R",6,"^1S",308,"^G","m__4244__auto__"],["^ ","^1R",29,"^1S",308],["^ ","^1R",0,"^1S",309],["^ ","^1R",8,"^1S",309,"^G","m__4244__auto__"],["^ ","^1R",60,"^1S",309,"^G","m__4244__auto__"],["^ ","^1R",148,"^1S",309,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",311],["^ ","^1R",6,"^1S",311],["^ ","^1R",6,"^1S",311,"^G","cljs.core/missing-protocol"],["^ ","^1R",33,"^1S",311],["^ ","^1R",0,"^1S",317],["^ ","^1R",34,"^1S",320],["^ ","^1R",0,"^1S",321],["^ ","^1R",0,"^1S",321],["^ ","^1R",3,"^1S",321],["^ ","^1R",5,"^1S",321],["^ ","^1R",7,"^1S",321],["^ ","^1R",17,"^1S",321],["^ ","^1R",29,"^1S",321],["^ ","^1R",31,"^1S",321],["^ ","^1R",32,"^1S",321],["^ ","^1R",99,"^1S",321],["^ ","^1R",0,"^1S",322],["^ ","^1R",0,"^1S",324],["^ ","^1R",4,"^1S",324,"^G","x__4243__auto__"],["^ ","^1R",22,"^1S",324],["^ ","^1R",24,"^1S",324],["^ ","^1R",34,"^1S",324],["^ ","^1R",41,"^1S",324],["^ ","^1R",4,"^1S",325,"^G","m__4244__auto__"],["^ ","^1R",22,"^1S",325],["^ ","^1R",23,"^1S",325,"^G","fulcro/client.reset-state!"],["^ ","^1R",55,"^1S",325],["^ ","^1R",55,"^1S",325,"^G","goog/typeOf"],["^ ","^1R",67,"^1S",325,"^G","x__4243__auto__"],["^ ","^1R",0,"^1S",326],["^ ","^1R",0,"^1S",326],["^ ","^1R",3,"^1S",326],["^ ","^1R",5,"^1S",326],["^ ","^1R",6,"^1S",326,"^G","m__4244__auto__"],["^ ","^1R",25,"^1S",326],["^ ","^1R",0,"^1S",327],["^ ","^1R",8,"^1S",327,"^G","m__4244__auto__"],["^ ","^1R",56,"^1S",327,"^G","m__4244__auto__"],["^ ","^1R",121,"^1S",327,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",329],["^ ","^1R",4,"^1S",329,"^G","m__4244__auto__"],["^ ","^1R",26,"^1S",329],["^ ","^1R",27,"^1S",329,"^G","fulcro/client.reset-state!"],["^ ","^1R",59,"^1S",329],["^ ","^1R",0,"^1S",330],["^ ","^1R",0,"^1S",330],["^ ","^1R",3,"^1S",330],["^ ","^1R",5,"^1S",330],["^ ","^1R",6,"^1S",330,"^G","m__4244__auto__"],["^ ","^1R",29,"^1S",330],["^ ","^1R",0,"^1S",331],["^ ","^1R",8,"^1S",331,"^G","m__4244__auto__"],["^ ","^1R",60,"^1S",331,"^G","m__4244__auto__"],["^ ","^1R",129,"^1S",331,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",333],["^ ","^1R",6,"^1S",333],["^ ","^1R",6,"^1S",333,"^G","cljs.core/missing-protocol"],["^ ","^1R",33,"^1S",333],["^ ","^1R",0,"^1S",339],["^ ","^1R",32,"^1S",342],["^ ","^1R",0,"^1S",343],["^ ","^1R",0,"^1S",343],["^ ","^1R",3,"^1S",343],["^ ","^1R",5,"^1S",343],["^ ","^1R",7,"^1S",343],["^ ","^1R",17,"^1S",343],["^ ","^1R",29,"^1S",343],["^ ","^1R",31,"^1S",343],["^ ","^1R",32,"^1S",343],["^ ","^1R",97,"^1S",343],["^ ","^1R",0,"^1S",344],["^ ","^1R",0,"^1S",346],["^ ","^1R",4,"^1S",346,"^G","x__4243__auto__"],["^ ","^1R",22,"^1S",346],["^ ","^1R",24,"^1S",346],["^ ","^1R",34,"^1S",346],["^ ","^1R",41,"^1S",346],["^ ","^1R",4,"^1S",347,"^G","m__4244__auto__"],["^ ","^1R",22,"^1S",347],["^ ","^1R",23,"^1S",347,"^G","fulcro/client.reset-app!"],["^ ","^1R",53,"^1S",347],["^ ","^1R",53,"^1S",347,"^G","goog/typeOf"],["^ ","^1R",65,"^1S",347,"^G","x__4243__auto__"],["^ ","^1R",0,"^1S",348],["^ ","^1R",0,"^1S",348],["^ ","^1R",3,"^1S",348],["^ ","^1R",5,"^1S",348],["^ ","^1R",6,"^1S",348,"^G","m__4244__auto__"],["^ ","^1R",25,"^1S",348],["^ ","^1R",0,"^1S",349],["^ ","^1R",8,"^1S",349,"^G","m__4244__auto__"],["^ ","^1R",56,"^1S",349,"^G","m__4244__auto__"],["^ ","^1R",135,"^1S",349,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",351],["^ ","^1R",4,"^1S",351,"^G","m__4244__auto__"],["^ ","^1R",26,"^1S",351],["^ ","^1R",27,"^1S",351,"^G","fulcro/client.reset-app!"],["^ ","^1R",57,"^1S",351],["^ ","^1R",0,"^1S",352],["^ ","^1R",0,"^1S",352],["^ ","^1R",3,"^1S",352],["^ ","^1R",5,"^1S",352],["^ ","^1R",6,"^1S",352,"^G","m__4244__auto__"],["^ ","^1R",29,"^1S",352],["^ ","^1R",0,"^1S",353],["^ ","^1R",8,"^1S",353,"^G","m__4244__auto__"],["^ ","^1R",60,"^1S",353,"^G","m__4244__auto__"],["^ ","^1R",143,"^1S",353,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",355],["^ ","^1R",6,"^1S",355],["^ ","^1R",6,"^1S",355,"^G","cljs.core/missing-protocol"],["^ ","^1R",33,"^1S",355],["^ ","^1R",0,"^1S",361],["^ ","^1R",52,"^1S",364],["^ ","^1R",0,"^1S",365],["^ ","^1R",0,"^1S",365],["^ ","^1R",3,"^1S",365],["^ ","^1R",5,"^1S",365],["^ ","^1R",7,"^1S",365],["^ ","^1R",17,"^1S",365],["^ ","^1R",29,"^1S",365],["^ ","^1R",31,"^1S",365],["^ ","^1R",32,"^1S",365],["^ ","^1R",117,"^1S",365],["^ ","^1R",0,"^1S",366],["^ ","^1R",0,"^1S",368],["^ ","^1R",4,"^1S",368,"^G","x__4243__auto__"],["^ ","^1R",22,"^1S",368],["^ ","^1R",24,"^1S",368],["^ ","^1R",34,"^1S",368],["^ ","^1R",41,"^1S",368],["^ ","^1R",4,"^1S",369,"^G","m__4244__auto__"],["^ ","^1R",22,"^1S",369],["^ ","^1R",23,"^1S",369,"^G","fulcro/client.clear-pending-remote-requests!"],["^ ","^1R",73,"^1S",369],["^ ","^1R",73,"^1S",369,"^G","goog/typeOf"],["^ ","^1R",85,"^1S",369,"^G","x__4243__auto__"],["^ ","^1R",0,"^1S",370],["^ ","^1R",0,"^1S",370],["^ ","^1R",3,"^1S",370],["^ ","^1R",5,"^1S",370],["^ ","^1R",6,"^1S",370,"^G","m__4244__auto__"],["^ ","^1R",25,"^1S",370],["^ ","^1R",0,"^1S",371],["^ ","^1R",8,"^1S",371,"^G","m__4244__auto__"],["^ ","^1R",56,"^1S",371,"^G","m__4244__auto__"],["^ ","^1R",119,"^1S",371,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",373],["^ ","^1R",4,"^1S",373,"^G","m__4244__auto__"],["^ ","^1R",26,"^1S",373],["^ ","^1R",27,"^1S",373,"^G","fulcro/client.clear-pending-remote-requests!"],["^ ","^1R",77,"^1S",373],["^ ","^1R",0,"^1S",374],["^ ","^1R",0,"^1S",374],["^ ","^1R",3,"^1S",374],["^ ","^1R",5,"^1S",374],["^ ","^1R",6,"^1S",374,"^G","m__4244__auto__"],["^ ","^1R",29,"^1S",374],["^ ","^1R",0,"^1S",375],["^ ","^1R",8,"^1S",375,"^G","m__4244__auto__"],["^ ","^1R",60,"^1S",375,"^G","m__4244__auto__"],["^ ","^1R",127,"^1S",375,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",377],["^ ","^1R",6,"^1S",377],["^ ","^1R",6,"^1S",377,"^G","cljs.core/missing-protocol"],["^ ","^1R",33,"^1S",377],["^ ","^1R",0,"^1S",383],["^ ","^1R",24,"^1S",386],["^ ","^1R",0,"^1S",387],["^ ","^1R",0,"^1S",387],["^ ","^1R",3,"^1S",387],["^ ","^1R",5,"^1S",387],["^ ","^1R",7,"^1S",387],["^ ","^1R",17,"^1S",387],["^ ","^1R",29,"^1S",387],["^ ","^1R",31,"^1S",387],["^ ","^1R",32,"^1S",387],["^ ","^1R",89,"^1S",387],["^ ","^1R",0,"^1S",388],["^ ","^1R",0,"^1S",390],["^ ","^1R",4,"^1S",390,"^G","x__4243__auto__"],["^ ","^1R",22,"^1S",390],["^ ","^1R",24,"^1S",390],["^ ","^1R",34,"^1S",390],["^ ","^1R",41,"^1S",390],["^ ","^1R",4,"^1S",391,"^G","m__4244__auto__"],["^ ","^1R",22,"^1S",391],["^ ","^1R",23,"^1S",391,"^G","fulcro/client.refresh"],["^ ","^1R",45,"^1S",391],["^ ","^1R",45,"^1S",391,"^G","goog/typeOf"],["^ ","^1R",57,"^1S",391,"^G","x__4243__auto__"],["^ ","^1R",0,"^1S",392],["^ ","^1R",0,"^1S",392],["^ ","^1R",3,"^1S",392],["^ ","^1R",5,"^1S",392],["^ ","^1R",6,"^1S",392,"^G","m__4244__auto__"],["^ ","^1R",25,"^1S",392],["^ ","^1R",0,"^1S",393],["^ ","^1R",8,"^1S",393,"^G","m__4244__auto__"],["^ ","^1R",56,"^1S",393,"^G","m__4244__auto__"],["^ ","^1R",111,"^1S",393,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",395],["^ ","^1R",4,"^1S",395,"^G","m__4244__auto__"],["^ ","^1R",26,"^1S",395],["^ ","^1R",27,"^1S",395,"^G","fulcro/client.refresh"],["^ ","^1R",49,"^1S",395],["^ ","^1R",0,"^1S",396],["^ ","^1R",0,"^1S",396],["^ ","^1R",3,"^1S",396],["^ ","^1R",5,"^1S",396],["^ ","^1R",6,"^1S",396,"^G","m__4244__auto__"],["^ ","^1R",29,"^1S",396],["^ ","^1R",0,"^1S",397],["^ ","^1R",8,"^1S",397,"^G","m__4244__auto__"],["^ ","^1R",60,"^1S",397,"^G","m__4244__auto__"],["^ ","^1R",119,"^1S",397,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",399],["^ ","^1R",6,"^1S",399],["^ ","^1R",6,"^1S",399,"^G","cljs.core/missing-protocol"],["^ ","^1R",33,"^1S",399],["^ ","^1R",0,"^1S",405],["^ ","^1R",24,"^1S",408],["^ ","^1R",0,"^1S",409],["^ ","^1R",0,"^1S",409],["^ ","^1R",3,"^1S",409],["^ ","^1R",5,"^1S",409],["^ ","^1R",7,"^1S",409],["^ ","^1R",17,"^1S",409],["^ ","^1R",29,"^1S",409],["^ ","^1R",31,"^1S",409],["^ ","^1R",32,"^1S",409],["^ ","^1R",89,"^1S",409],["^ ","^1R",0,"^1S",410],["^ ","^1R",0,"^1S",412],["^ ","^1R",4,"^1S",412,"^G","x__4243__auto__"],["^ ","^1R",22,"^1S",412],["^ ","^1R",24,"^1S",412],["^ ","^1R",34,"^1S",412],["^ ","^1R",41,"^1S",412],["^ ","^1R",4,"^1S",413,"^G","m__4244__auto__"],["^ ","^1R",22,"^1S",413],["^ ","^1R",23,"^1S",413,"^G","fulcro/client.history"],["^ ","^1R",45,"^1S",413],["^ ","^1R",45,"^1S",413,"^G","goog/typeOf"],["^ ","^1R",57,"^1S",413,"^G","x__4243__auto__"],["^ ","^1R",0,"^1S",414],["^ ","^1R",0,"^1S",414],["^ ","^1R",3,"^1S",414],["^ ","^1R",5,"^1S",414],["^ ","^1R",6,"^1S",414,"^G","m__4244__auto__"],["^ ","^1R",25,"^1S",414],["^ ","^1R",0,"^1S",415],["^ ","^1R",8,"^1S",415,"^G","m__4244__auto__"],["^ ","^1R",56,"^1S",415,"^G","m__4244__auto__"],["^ ","^1R",111,"^1S",415,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",417],["^ ","^1R",4,"^1S",417,"^G","m__4244__auto__"],["^ ","^1R",26,"^1S",417],["^ ","^1R",27,"^1S",417,"^G","fulcro/client.history"],["^ ","^1R",49,"^1S",417],["^ ","^1R",0,"^1S",418],["^ ","^1R",0,"^1S",418],["^ ","^1R",3,"^1S",418],["^ ","^1R",5,"^1S",418],["^ ","^1R",6,"^1S",418,"^G","m__4244__auto__"],["^ ","^1R",29,"^1S",418],["^ ","^1R",0,"^1S",419],["^ ","^1R",8,"^1S",419,"^G","m__4244__auto__"],["^ ","^1R",60,"^1S",419,"^G","m__4244__auto__"],["^ ","^1R",119,"^1S",419,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",421],["^ ","^1R",6,"^1S",421],["^ ","^1R",6,"^1S",421,"^G","cljs.core/missing-protocol"],["^ ","^1R",33,"^1S",421],["^ ","^1R",0,"^1S",427],["^ ","^1R",36,"^1S",430],["^ ","^1R",0,"^1S",431],["^ ","^1R",0,"^1S",431],["^ ","^1R",3,"^1S",431],["^ ","^1R",5,"^1S",431],["^ ","^1R",7,"^1S",431],["^ ","^1R",17,"^1S",431],["^ ","^1R",29,"^1S",431],["^ ","^1R",31,"^1S",431],["^ ","^1R",32,"^1S",431],["^ ","^1R",101,"^1S",431],["^ ","^1R",0,"^1S",432],["^ ","^1R",0,"^1S",434],["^ ","^1R",4,"^1S",434,"^G","x__4243__auto__"],["^ ","^1R",22,"^1S",434],["^ ","^1R",24,"^1S",434],["^ ","^1R",34,"^1S",434],["^ ","^1R",41,"^1S",434],["^ ","^1R",4,"^1S",435,"^G","m__4244__auto__"],["^ ","^1R",22,"^1S",435],["^ ","^1R",23,"^1S",435,"^G","fulcro/client.abort-request!"],["^ ","^1R",57,"^1S",435],["^ ","^1R",57,"^1S",435,"^G","goog/typeOf"],["^ ","^1R",69,"^1S",435,"^G","x__4243__auto__"],["^ ","^1R",0,"^1S",436],["^ ","^1R",0,"^1S",436],["^ ","^1R",3,"^1S",436],["^ ","^1R",5,"^1S",436],["^ ","^1R",6,"^1S",436,"^G","m__4244__auto__"],["^ ","^1R",25,"^1S",436],["^ ","^1R",0,"^1S",437],["^ ","^1R",8,"^1S",437,"^G","m__4244__auto__"],["^ ","^1R",56,"^1S",437,"^G","m__4244__auto__"],["^ ","^1R",120,"^1S",437,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",439],["^ ","^1R",4,"^1S",439,"^G","m__4244__auto__"],["^ ","^1R",26,"^1S",439],["^ ","^1R",27,"^1S",439,"^G","fulcro/client.abort-request!"],["^ ","^1R",61,"^1S",439],["^ ","^1R",0,"^1S",440],["^ ","^1R",0,"^1S",440],["^ ","^1R",3,"^1S",440],["^ ","^1R",5,"^1S",440],["^ ","^1R",6,"^1S",440,"^G","m__4244__auto__"],["^ ","^1R",29,"^1S",440],["^ ","^1R",0,"^1S",441],["^ ","^1R",8,"^1S",441,"^G","m__4244__auto__"],["^ ","^1R",60,"^1S",441,"^G","m__4244__auto__"],["^ ","^1R",128,"^1S",441,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",443],["^ ","^1R",6,"^1S",443],["^ ","^1R",6,"^1S",443,"^G","cljs.core/missing-protocol"],["^ ","^1R",33,"^1S",443],["^ ","^1R",0,"^1S",449],["^ ","^1R",36,"^1S",452],["^ ","^1R",0,"^1S",453],["^ ","^1R",0,"^1S",453],["^ ","^1R",3,"^1S",453],["^ ","^1R",5,"^1S",453],["^ ","^1R",7,"^1S",453],["^ ","^1R",17,"^1S",453],["^ ","^1R",29,"^1S",453],["^ ","^1R",31,"^1S",453],["^ ","^1R",32,"^1S",453],["^ ","^1R",101,"^1S",453],["^ ","^1R",0,"^1S",454],["^ ","^1R",0,"^1S",456],["^ ","^1R",4,"^1S",456,"^G","x__4243__auto__"],["^ ","^1R",22,"^1S",456],["^ ","^1R",24,"^1S",456],["^ ","^1R",34,"^1S",456],["^ ","^1R",41,"^1S",456],["^ ","^1R",4,"^1S",457,"^G","m__4244__auto__"],["^ ","^1R",22,"^1S",457],["^ ","^1R",23,"^1S",457,"^G","fulcro/client.reset-history!"],["^ ","^1R",57,"^1S",457],["^ ","^1R",57,"^1S",457,"^G","goog/typeOf"],["^ ","^1R",69,"^1S",457,"^G","x__4243__auto__"],["^ ","^1R",0,"^1S",458],["^ ","^1R",0,"^1S",458],["^ ","^1R",3,"^1S",458],["^ ","^1R",5,"^1S",458],["^ ","^1R",6,"^1S",458,"^G","m__4244__auto__"],["^ ","^1R",25,"^1S",458],["^ ","^1R",0,"^1S",459],["^ ","^1R",8,"^1S",459,"^G","m__4244__auto__"],["^ ","^1R",56,"^1S",459,"^G","m__4244__auto__"],["^ ","^1R",111,"^1S",459,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",461],["^ ","^1R",4,"^1S",461,"^G","m__4244__auto__"],["^ ","^1R",26,"^1S",461],["^ ","^1R",27,"^1S",461,"^G","fulcro/client.reset-history!"],["^ ","^1R",61,"^1S",461],["^ ","^1R",0,"^1S",462],["^ ","^1R",0,"^1S",462],["^ ","^1R",3,"^1S",462],["^ ","^1R",5,"^1S",462],["^ ","^1R",6,"^1S",462,"^G","m__4244__auto__"],["^ ","^1R",29,"^1S",462],["^ ","^1R",0,"^1S",463],["^ ","^1R",8,"^1S",463,"^G","m__4244__auto__"],["^ ","^1R",60,"^1S",463,"^G","m__4244__auto__"],["^ ","^1R",119,"^1S",463,"^G","m__4244__auto__"],["^ ","^1R",0,"^1S",465],["^ ","^1R",6,"^1S",465],["^ ","^1R",6,"^1S",465,"^G","cljs.core/missing-protocol"],["^ ","^1R",33,"^1S",465],["^ ","^1R",0,"^1S",471]],"^3@",[["^ ","^1R",0,"^1S",293,"^G","fulcro.client/FulcroApplication"]]],"~i167",["^ ","~i3",[["^ ","^1R",0,"^1S",298,"^G","fulcro.client/mount"]],"~i10",[["^ ","^1R",52,"^1S",298,"^G","this"],["^ ","^1R",8,"^1S",299,"^G","this"],["^ ","^1R",32,"^1S",299,"^G","this"],["^ ","^1R",7,"^1S",300,"^G","this"],["^ ","^1R",59,"^1S",300,"^G","this"],["^ ","^1R",25,"^1S",302,"^G","this"],["^ ","^1R",46,"^1S",302,"^G","this"],["^ ","^1R",102,"^1S",305,"^G","this"],["^ ","^1R",166,"^1S",305,"^G","this"],["^ ","^1R",110,"^1S",309,"^G","this"],["^ ","^1R",178,"^1S",309,"^G","this"],["^ ","^1R",59,"^1S",311,"^G","this"]],"^2M",[["^ ","^1R",58,"^1S",298,"^G","root-component"],["^ ","^1R",65,"^1S",300,"^G","root-component"],["^ ","^1R",108,"^1S",305,"^G","root-component"],["^ ","^1R",172,"^1S",305,"^G","root-component"],["^ ","^1R",116,"^1S",309,"^G","root-component"],["^ ","^1R",184,"^1S",309,"^G","root-component"]],"^28",[["^ ","^1R",73,"^1S",298,"^G","target-dom-id"],["^ ","^1R",80,"^1S",300,"^G","target-dom-id"],["^ ","^1R",123,"^1S",305,"^G","target-dom-id"],["^ ","^1R",187,"^1S",305,"^G","target-dom-id"],["^ ","^1R",131,"^1S",309,"^G","target-dom-id"],["^ ","^1R",199,"^1S",309,"^G","target-dom-id"]]],"~i168",["^ ","~i3",[["^ ","^1R",0,"^1S",320,"^G","fulcro.client/reset-state!"]],"^1W",[["^ ","^1R",76,"^1S",320,"^G","this"],["^ ","^1R",8,"^1S",321,"^G","this"],["^ ","^1R",32,"^1S",321,"^G","this"],["^ ","^1R",7,"^1S",322,"^G","this"],["^ ","^1R",71,"^1S",322,"^G","this"],["^ ","^1R",25,"^1S",324,"^G","this"],["^ ","^1R",46,"^1S",324,"^G","this"],["^ ","^1R",102,"^1S",327,"^G","this"],["^ ","^1R",147,"^1S",327,"^G","this"],["^ ","^1R",110,"^1S",331,"^G","this"],["^ ","^1R",159,"^1S",331,"^G","this"],["^ ","^1R",66,"^1S",333,"^G","this"]],"^1U",[["^ ","^1R",82,"^1S",320,"^G","new-state"],["^ ","^1R",77,"^1S",322,"^G","new-state"],["^ ","^1R",108,"^1S",327,"^G","new-state"],["^ ","^1R",153,"^1S",327,"^G","new-state"],["^ ","^1R",116,"^1S",331,"^G","new-state"],["^ ","^1R",165,"^1S",331,"^G","new-state"]]],"~i169",["^ ","~i3",[["^ ","^1R",0,"^1S",342,"^G","fulcro.client/reset-app!"]],"^2M",[["^ ","^1R",72,"^1S",342,"^G","this"],["^ ","^1R",8,"^1S",343,"^G","this"],["^ ","^1R",32,"^1S",343,"^G","this"],["^ ","^1R",7,"^1S",344,"^G","this"],["^ ","^1R",69,"^1S",344,"^G","this"],["^ ","^1R",25,"^1S",346,"^G","this"],["^ ","^1R",46,"^1S",346,"^G","this"],["^ ","^1R",102,"^1S",349,"^G","this"],["^ ","^1R",161,"^1S",349,"^G","this"],["^ ","^1R",110,"^1S",353,"^G","this"],["^ ","^1R",173,"^1S",353,"^G","this"],["^ ","^1R",64,"^1S",355,"^G","this"]],"^2?",[["^ ","^1R",78,"^1S",342,"^G","root-component"],["^ ","^1R",75,"^1S",344,"^G","root-component"],["^ ","^1R",108,"^1S",349,"^G","root-component"],["^ ","^1R",167,"^1S",349,"^G","root-component"],["^ ","^1R",116,"^1S",353,"^G","root-component"],["^ ","^1R",179,"^1S",353,"^G","root-component"]],"^2@",[["^ ","^1R",93,"^1S",342,"^G","callback"],["^ ","^1R",90,"^1S",344,"^G","callback"],["^ ","^1R",123,"^1S",349,"^G","callback"],["^ ","^1R",182,"^1S",349,"^G","callback"],["^ ","^1R",131,"^1S",353,"^G","callback"],["^ ","^1R",194,"^1S",353,"^G","callback"]]],"~i170",["^ ","~i3",[["^ ","^1R",0,"^1S",364,"^G","fulcro.client/clear-pending-remote-requests!"]],"^2@",[["^ ","^1R",112,"^1S",364,"^G","this"],["^ ","^1R",8,"^1S",365,"^G","this"],["^ ","^1R",32,"^1S",365,"^G","this"],["^ ","^1R",7,"^1S",366,"^G","this"],["^ ","^1R",89,"^1S",366,"^G","this"],["^ ","^1R",25,"^1S",368,"^G","this"],["^ ","^1R",46,"^1S",368,"^G","this"],["^ ","^1R",102,"^1S",371,"^G","this"],["^ ","^1R",145,"^1S",371,"^G","this"],["^ ","^1R",110,"^1S",375,"^G","this"],["^ ","^1R",157,"^1S",375,"^G","this"],["^ ","^1R",84,"^1S",377,"^G","this"]],"^25",[["^ ","^1R",118,"^1S",364,"^G","remotes"],["^ ","^1R",95,"^1S",366,"^G","remotes"],["^ ","^1R",108,"^1S",371,"^G","remotes"],["^ ","^1R",151,"^1S",371,"^G","remotes"],["^ ","^1R",116,"^1S",375,"^G","remotes"],["^ ","^1R",163,"^1S",375,"^G","remotes"]]],"~i171",["^ ","~i3",[["^ ","^1R",0,"^1S",386,"^G","fulcro.client/refresh"]],"^2Z",[["^ ","^1R",56,"^1S",386,"^G","this"],["^ ","^1R",8,"^1S",387,"^G","this"],["^ ","^1R",32,"^1S",387,"^G","this"],["^ ","^1R",7,"^1S",388,"^G","this"],["^ ","^1R",61,"^1S",388,"^G","this"],["^ ","^1R",25,"^1S",390,"^G","this"],["^ ","^1R",46,"^1S",390,"^G","this"],["^ ","^1R",102,"^1S",393,"^G","this"],["^ ","^1R",137,"^1S",393,"^G","this"],["^ ","^1R",110,"^1S",397,"^G","this"],["^ ","^1R",149,"^1S",397,"^G","this"],["^ ","^1R",61,"^1S",399,"^G","this"]]],"~i172",["^ ","~i3",[["^ ","^1R",0,"^1S",408,"^G","fulcro.client/history"]],"^2Z",[["^ ","^1R",56,"^1S",408,"^G","this"],["^ ","^1R",8,"^1S",409,"^G","this"],["^ ","^1R",32,"^1S",409,"^G","this"],["^ ","^1R",7,"^1S",410,"^G","this"],["^ ","^1R",61,"^1S",410,"^G","this"],["^ ","^1R",25,"^1S",412,"^G","this"],["^ ","^1R",46,"^1S",412,"^G","this"],["^ ","^1R",102,"^1S",415,"^G","this"],["^ ","^1R",137,"^1S",415,"^G","this"],["^ ","^1R",110,"^1S",419,"^G","this"],["^ ","^1R",149,"^1S",419,"^G","this"],["^ ","^1R",61,"^1S",421,"^G","this"]]],"~i173",["^ ","~i3",[["^ ","^1R",0,"^1S",430,"^G","fulcro.client/abort-request!"]],"^1[",[["^ ","^1R",80,"^1S",430,"^G","this"],["^ ","^1R",8,"^1S",431,"^G","this"],["^ ","^1R",32,"^1S",431,"^G","this"],["^ ","^1R",7,"^1S",432,"^G","this"],["^ ","^1R",73,"^1S",432,"^G","this"],["^ ","^1R",25,"^1S",434,"^G","this"],["^ ","^1R",46,"^1S",434,"^G","this"],["^ ","^1R",102,"^1S",437,"^G","this"],["^ ","^1R",146,"^1S",437,"^G","this"],["^ ","^1R",110,"^1S",441,"^G","this"],["^ ","^1R",158,"^1S",441,"^G","this"],["^ ","^1R",68,"^1S",443,"^G","this"]],"^1X",[["^ ","^1R",86,"^1S",430,"^G","abort-id"],["^ ","^1R",79,"^1S",432,"^G","abort-id"],["^ ","^1R",108,"^1S",437,"^G","abort-id"],["^ ","^1R",152,"^1S",437,"^G","abort-id"],["^ ","^1R",116,"^1S",441,"^G","abort-id"],["^ ","^1R",164,"^1S",441,"^G","abort-id"]]],"~i174",["^ ","~i3",[["^ ","^1R",0,"^1S",452,"^G","fulcro.client/reset-history!"]],"^1[",[["^ ","^1R",80,"^1S",452,"^G","this"],["^ ","^1R",8,"^1S",453,"^G","this"],["^ ","^1R",32,"^1S",453,"^G","this"],["^ ","^1R",7,"^1S",454,"^G","this"],["^ ","^1R",73,"^1S",454,"^G","this"],["^ ","^1R",25,"^1S",456,"^G","this"],["^ ","^1R",46,"^1S",456,"^G","this"],["^ ","^1R",102,"^1S",459,"^G","this"],["^ ","^1R",137,"^1S",459,"^G","this"],["^ ","^1R",110,"^1S",463,"^G","this"],["^ ","^1R",149,"^1S",463,"^G","this"],["^ ","^1R",68,"^1S",465,"^G","this"]]],"~i176",["^ ","~i0",[["^ ","^1R",0,"^1S",471],["^ ","^1R",33,"^1S",475],["^ ","^1R",0,"^1S",476]],"~i7",[["^ ","^1R",0,"^1S",475,"^G","fulcro.client/start-networking"]]],"~i179",["^ ","~i3",[["^ ","^1R",74,"^1S",475,"^G","network-map"]]],"~i180",["^ ","^2L",[["^ ","^1R",0,"^1S",476],["^ ","^1R",52,"^1S",476]],"^2Z",[["^ ","^1R",7,"^1S",476,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^2?",[["^ ","^1R",87,"^1S",476],["^ ","^1R",104,"^1S",476,"^G","iter__4324__auto__"],["^ ","^1R",125,"^1S",476],["^ ","^1R",180,"^1S",476,"^G","s__43277"],["^ ","^1R",0,"^1S",477],["^ ","^1R",0,"^1S",477],["^ ","^1R",12,"^1S",477,"^G","cljs.core/LazySeq"],["^ ","^1R",30,"^1S",477],["^ ","^1R",35,"^1S",477],["^ ","^1R",0,"^1S",478],["^ ","^1R",0,"^1S",478],["^ ","^1R",4,"^1S",478,"^G","s__43277"],["^ ","^1R",19,"^1S",478,"^G","s__43277"],["^ ","^1R",0,"^1S",480],["^ ","^1R",0,"^1S",480],["^ ","^1R",4,"^1S",480,"^G","temp__5457__auto__"],["^ ","^1R",25,"^1S",480],["^ ","^1R",25,"^1S",480,"^G","cljs.core/seq"],["^ ","^1R",39,"^1S",480,"^G","s__43277"],["^ ","^1R",0,"^1S",481],["^ ","^1R",0,"^1S",481],["^ ","^1R",3,"^1S",481,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",482],["^ ","^1R",0,"^1S",482],["^ ","^1R",4,"^1S",482,"^G","s__43277"],["^ ","^1R",19,"^1S",482,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",483],["^ ","^1R",0,"^1S",483],["^ ","^1R",3,"^1S",483],["^ ","^1R",3,"^1S",483,"^G","cljs.core/chunked-seq?"],["^ ","^1R",32,"^1S",483,"^G","s__43277"],["^ ","^1R",0,"^1S",484],["^ ","^1R",4,"^1S",484,"^G","c__4322__auto__"],["^ ","^1R",4,"^1S",485,"^G","size__4323__auto__"],["^ ","^1R",25,"^1S",485],["^ ","^1R",25,"^1S",485,"^G","cljs.core/count"],["^ ","^1R",41,"^1S",485,"^G","c__4322__auto__"],["^ ","^1R",4,"^1S",486,"^G","b__43279"],["^ ","^1R",15,"^1S",486],["^ ","^1R",15,"^1S",486,"^G","cljs.core/chunk-buffer"],["^ ","^1R",38,"^1S",486,"^G","size__4323__auto__"],["^ ","^1R",0,"^1S",487],["^ ","^1R",0,"^1S",487],["^ ","^1R",3,"^1S",487],["^ ","^1R",3,"^1S",487],["^ ","^1R",20,"^1S",487,"^G","i__43278"],["^ ","^1R",31,"^1S",487],["^ ","^1R",0,"^1S",489],["^ ","^1R",0,"^1S",489],["^ ","^1R",3,"^1S",489],["^ ","^1R",4,"^1S",489,"^G","i__43278"],["^ ","^1R",15,"^1S",489,"^G","size__4323__auto__"],["^ ","^1R",0,"^1S",490],["^ ","^1R",4,"^1S",490,"^G","vec__43280"],["^ ","^1R",17,"^1S",490],["^ ","^1R",17,"^1S",490,"^G","cljs.core._nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",62,"^1S",490,"^G","c__4322__auto__"],["^ ","^1R",78,"^1S",490,"^G","i__43278"],["^ ","^1R",8,"^1S",491],["^ ","^1R",8,"^1S",491,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",52,"^1S",491,"^G","vec__43280"],["^ ","^1R",63,"^1S",491],["^ ","^1R",67,"^1S",491],["^ ","^1R",13,"^1S",492],["^ ","^1R",13,"^1S",492,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",57,"^1S",492,"^G","vec__43280"],["^ ","^1R",68,"^1S",492],["^ ","^1R",72,"^1S",492],["^ ","^1R",0,"^1S",493],["^ ","^1R",0,"^1S",493],["^ ","^1R",0,"^1S",495],["^ ","^1R",0,"^1S",495],["^ ","^1R",0,"^1S",495],["^ ","^1R",0,"^1S",495,"^G","cljs.core/chunk-append"],["^ ","^1R",23,"^1S",495,"^G","b__43279"],["^ ","^1R",32,"^1S",495],["^ ","^1R",0,"^1S",497],["^ ","^1R",15,"^1S",497],["^ ","^1R",16,"^1S",497,"^G","i__43278"],["^ ","^1R",27,"^1S",497],["^ ","^1R",0,"^1S",501],["^ ","^1R",0,"^1S",506],["^ ","^1R",7,"^1S",506,"^G","cljs.core/chunk-cons"],["^ ","^1R",28,"^1S",506],["^ ","^1R",28,"^1S",506,"^G","cljs.core/chunk"],["^ ","^1R",44,"^1S",506,"^G","b__43279"],["^ ","^1R",54,"^1S",506],["^ ","^1R",54,"^1S",506,"^G","iter__43276"],["^ ","^1R",99,"^1S",506],["^ ","^1R",99,"^1S",506,"^G","cljs.core/chunk-rest"],["^ ","^1R",120,"^1S",506,"^G","s__43277"],["^ ","^1R",0,"^1S",508],["^ ","^1R",7,"^1S",508,"^G","cljs.core/chunk-cons"],["^ ","^1R",28,"^1S",508],["^ ","^1R",28,"^1S",508,"^G","cljs.core/chunk"],["^ ","^1R",44,"^1S",508,"^G","b__43279"],["^ ","^1R",54,"^1S",508],["^ ","^1R",0,"^1S",511],["^ ","^1R",4,"^1S",511,"^G","vec__43293"],["^ ","^1R",17,"^1S",511],["^ ","^1R",17,"^1S",511,"^G","cljs.core/first"],["^ ","^1R",33,"^1S",511,"^G","s__43277"],["^ ","^1R",8,"^1S",512],["^ ","^1R",8,"^1S",512,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",52,"^1S",512,"^G","vec__43293"],["^ ","^1R",63,"^1S",512],["^ ","^1R",67,"^1S",512],["^ ","^1R",13,"^1S",513],["^ ","^1R",13,"^1S",513,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",57,"^1S",513,"^G","vec__43293"],["^ ","^1R",68,"^1S",513],["^ ","^1R",72,"^1S",513],["^ ","^1R",0,"^1S",514],["^ ","^1R",0,"^1S",514],["^ ","^1R",0,"^1S",516],["^ ","^1R",0,"^1S",516],["^ ","^1R",7,"^1S",516,"^G","cljs.core/cons"],["^ ","^1R",22,"^1S",516],["^ ","^1R",121,"^1S",516],["^ ","^1R",121,"^1S",516,"^G","iter__43276"],["^ ","^1R",166,"^1S",516],["^ ","^1R",166,"^1S",516,"^G","cljs.core/rest"],["^ ","^1R",181,"^1S",516,"^G","s__43277"],["^ ","^1R",0,"^1S",519],["^ ","^1R",3,"^1S",523],["^ ","^1R",8,"^1S",523],["^ ","^1R",0,"^1S",525],["^ ","^1R",0,"^1S",525],["^ ","^1R",7,"^1S",525,"^G","iter__4324__auto__"]],"^1V",[["^ ","^1R",4,"^1S",491,"^G","k"],["^ ","^1R",4,"^1S",512,"^G","k"]],"^24",[["^ ","^1R",4,"^1S",492,"^G","remote"],["^ ","^1R",4,"^1S",513,"^G","remote"]],"^2F",[["^ ","^1R",26,"^1S",525,"^G","network-map"]]],"~i181",["^ ","^2>",[["^ ","^1R",4,"^1S",493,"^G","started"],["^ ","^1R",4,"^1S",514,"^G","started"]],"^25",[["^ ","^1R",14,"^1S",493],["^ ","^1R",155,"^1S",493],["^ ","^1R",191,"^1S",493],["^ ","^1R",14,"^1S",514],["^ ","^1R",155,"^1S",514],["^ ","^1R",191,"^1S",514]],"^21",[["^ ","^1R",16,"^1S",493],["^ ","^1R",18,"^1S",493],["^ ","^1R",20,"^1S",493],["^ ","^1R",31,"^1S",493],["^ ","^1R",39,"^1S",493],["^ ","^1R",41,"^1S",493],["^ ","^1R",43,"^1S",493],["^ ","^1R",54,"^1S",493],["^ ","^1R",55,"^1S",493,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",87,"^1S",493],["^ ","^1R",135,"^1S",493],["^ ","^1R",140,"^1S",493],["^ ","^1R",147,"^1S",493],["^ ","^1R",16,"^1S",514],["^ ","^1R",18,"^1S",514],["^ ","^1R",20,"^1S",514],["^ ","^1R",31,"^1S",514],["^ ","^1R",39,"^1S",514],["^ ","^1R",41,"^1S",514],["^ ","^1R",43,"^1S",514],["^ ","^1R",54,"^1S",514],["^ ","^1R",55,"^1S",514,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",87,"^1S",514],["^ ","^1R",135,"^1S",514],["^ ","^1R",140,"^1S",514],["^ ","^1R",147,"^1S",514]],"^3I",[["^ ","^1R",21,"^1S",493,"^G","remote"],["^ ","^1R",87,"^1S",493,"^G","remote"],["^ ","^1R",21,"^1S",514,"^G","remote"],["^ ","^1R",87,"^1S",514,"^G","remote"]],"^39",[["^ ","^1R",155,"^1S",493],["^ ","^1R",155,"^1S",514]],"~i86",[["^ ","^1R",155,"^1S",493,"^G","fulcro.client.network/start"],["^ ","^1R",155,"^1S",514,"^G","fulcro.client.network/start"]],"~i96",[["^ ","^1R",183,"^1S",493,"^G","remote"],["^ ","^1R",183,"^1S",514,"^G","remote"]]],"~i182",["^ ","^2>",[["^ ","^1R",4,"^1S",494,"^G","valid"],["^ ","^1R",4,"^1S",515,"^G","valid"]],"^25",[["^ ","^1R",12,"^1S",494],["^ ","^1R",12,"^1S",515]],"^2C",[["^ ","^1R",14,"^1S",494],["^ ","^1R",16,"^1S",494],["^ ","^1R",18,"^1S",494],["^ ","^1R",30,"^1S",494],["^ ","^1R",38,"^1S",494],["^ ","^1R",40,"^1S",494],["^ ","^1R",42,"^1S",494],["^ ","^1R",53,"^1S",494],["^ ","^1R",54,"^1S",494,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",86,"^1S",494],["^ ","^1R",135,"^1S",494],["^ ","^1R",140,"^1S",494],["^ ","^1R",147,"^1S",494],["^ ","^1R",14,"^1S",515],["^ ","^1R",16,"^1S",515],["^ ","^1R",18,"^1S",515],["^ ","^1R",30,"^1S",515],["^ ","^1R",38,"^1S",515],["^ ","^1R",40,"^1S",515],["^ ","^1R",42,"^1S",515],["^ ","^1R",53,"^1S",515],["^ ","^1R",54,"^1S",515,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",86,"^1S",515],["^ ","^1R",135,"^1S",515],["^ ","^1R",140,"^1S",515],["^ ","^1R",147,"^1S",515]],"^3B",[["^ ","^1R",19,"^1S",494,"^G","started"],["^ ","^1R",86,"^1S",494,"^G","started"],["^ ","^1R",19,"^1S",515,"^G","started"],["^ ","^1R",86,"^1S",515,"^G","started"]],"^3W",[["^ ","^1R",155,"^1S",494,"^G","started"],["^ ","^1R",155,"^1S",515,"^G","started"]],"~i92",[["^ ","^1R",163,"^1S",494,"^G","remote"],["^ ","^1R",163,"^1S",515,"^G","remote"]]],"~i183",["^ ","^1Q",[["^ ","^1R",115,"^1S",495,"^G","k"],["^ ","^1R",105,"^1S",516,"^G","k"]],"^1T",[["^ ","^1R",117,"^1S",495,"^G","valid"],["^ ","^1R",107,"^1S",516,"^G","valid"]]],"~i186",["^ ","~i0",[["^ ","^1R",0,"^1S",528],["^ ","^1R",38,"^1S",528],["^ ","^1R",0,"^1S",529]],"~i7",[["^ ","^1R",0,"^1S",528,"^G","fulcro.client/mutation-query?"]],"^1X",[["^ ","^1R",84,"^1S",528,"^G","tx"]]],"~i187",["^ ","~i2",[["^ ","^1R",0,"^1S",529]],"~i3",[["^ ","^1R",7,"^1S",529,"^G","cljs.core/boolean"]],"^2L",[["^ ","^1R",26,"^1S",529],["^ ","^1R",41,"^1S",529],["^ ","^1R",52,"^1S",529,"^G","p1__43324#"],["^ ","^1R",0,"^1S",530]],"^2Z",[["^ ","^1R",26,"^1S",529,"^G","cljs.core/some"]],"^2R",[["^ ","^1R",0,"^1S",530],["^ ","^1R",35,"^1S",530,"^G","p1__43324#"]],"^1[",[["^ ","^1R",7,"^1S",530,"^G","fulcro.util/mutation?"]],"^2F",[["^ ","^1R",3,"^1S",531,"^G","tx"]]],"~i189",["^ ","~i0",[["^ ","^1R",0,"^1S",533],["^ ","^1R",29,"^1S",537],["^ ","^1R",0,"^1S",538]],"~i7",[["^ ","^1R",0,"^1S",537,"^G","fulcro.client/split-parser"]]],"~i192",["^ ","~i3",[["^ ","^1R",66,"^1S",537,"^G","query-parser"]]],"~i193",["^ ","~i2",[["^ ","^1R",0,"^1S",538],["^ ","^1R",0,"^1S",539]],"~i8",[["^ ","^1R",4,"^1S",538,"^G","mutation-parser"]],"^1X",[["^ ","^1R",22,"^1S",538],["^ ","^1R",54,"^1S",538],["^ ","^1R",97,"^1S",538],["^ ","^1R",177,"^1S",538]],"^1T",[["^ ","^1R",22,"^1S",538,"^G","fulcro.client.primitives/parser"]],"^2C",[["^ ","^1R",150,"^1S",538],["^ ","^1R",171,"^1S",538]],"^35",[["^ ","^1R",150,"^1S",538,"^G","cljs.core/constantly"]],"^33",[["^ ","^1R",234,"^1S",538,"^G","fulcro.client.impl.application/write-entry-point"]]],"~i194",["^ ","~i4",[["^ ","^1R",0,"^1S",539],["^ ","^1R",0,"^1S",543],["^ ","^1R",0,"^1S",546]]],"~i195",["^ ","~i8",[["^ ","^1R",68,"^1S",545,"^G","env"],["^ ","^1R",59,"^1S",552,"^G","env"],["^ ","^1R",68,"^1S",555,"^G","env"],["^ ","^1R",68,"^1S",557,"^G","env"]],"^2Z",[["^ ","^1R",72,"^1S",545,"^G","query"],["^ ","^1R",63,"^1S",552,"^G","query"],["^ ","^1R",72,"^1S",555,"^G","query"],["^ ","^1R",72,"^1S",557,"^G","query"]],"^2R",[["^ ","^1R",78,"^1S",545,"^G","target"],["^ ","^1R",69,"^1S",552,"^G","target"],["^ ","^1R",78,"^1S",557,"^G","target"]]],"~i196",["^ ","~i7",[["^ ","^1R",0,"^1S",546]],"^2L",[["^ ","^1R",20,"^1S",546]],"^2Z",[["^ ","^1R",20,"^1S",546,"^G","fulcro.client/mutation-query?"]],"^1Z",[["^ ","^1R",56,"^1S",546,"^G","query"]]],"~i197",["^ ","~i9",[["^ ","^1R",0,"^1S",547]],"^4>",[["^ ","^1R",8,"^1S",547,"^G","mutation-parser"],["^ ","^1R",56,"^1S",547,"^G","mutation-parser"],["^ ","^1R",122,"^1S",547,"^G","mutation-parser"]],"^2H",[["^ ","^1R",102,"^1S",547,"^G","env"],["^ ","^1R",148,"^1S",547,"^G","env"]],"^28",[["^ ","^1R",106,"^1S",547,"^G","query"],["^ ","^1R",152,"^1S",547,"^G","query"]],"^2:",[["^ ","^1R",112,"^1S",547,"^G","target"],["^ ","^1R",158,"^1S",547,"^G","target"]]],"~i198",["^ ","~i9",[["^ ","^1R",0,"^1S",549]],"^4>",[["^ ","^1R",8,"^1S",549,"^G","query-parser"],["^ ","^1R",53,"^1S",549,"^G","query-parser"],["^ ","^1R",109,"^1S",549,"^G","query-parser"]],"^1Q",[["^ ","^1R",96,"^1S",549,"^G","env"],["^ ","^1R",132,"^1S",549,"^G","env"]],"^1V",[["^ ","^1R",100,"^1S",549,"^G","query"],["^ ","^1R",136,"^1S",549,"^G","query"]]],"~i199",["^ ","~i8",[["^ ","^1R",68,"^1S",542,"^G","env"]],"^2Z",[["^ ","^1R",72,"^1S",542,"^G","query"]],"^1[",[["^ ","^1R",0,"^1S",543],["^ ","^1R",95,"^1S",543]],"^2?",[["^ ","^1R",7,"^1S",543,"^G","fulcro$client$split_parser_$_split_parser_STAR_.cljs$core$IFn$_invoke$arity$3"]],"^20",[["^ ","^1R",85,"^1S",543,"^G","env"]],"~i38",[["^ ","^1R",89,"^1S",543,"^G","query"]]],"~i201",["^ ","~i0",[["^ ","^1R",0,"^1S",567],["^ ","^1R",27,"^1S",571],["^ ","^1R",62,"^1S",571,"^G","p__43332"],["^ ","^1R",0,"^1S",572],["^ ","^1R",0,"^1S",572],["^ ","^1R",4,"^1S",572,"^G","map__43333"],["^ ","^1R",17,"^1S",572,"^G","p__43332"],["^ ","^1R",4,"^1S",573,"^G","map__43333"],["^ ","^1R",21,"^1S",573],["^ ","^1R",23,"^1S",573],["^ ","^1R",25,"^1S",573],["^ ","^1R",27,"^1S",573],["^ ","^1R",28,"^1S",573,"^G","map__43333"],["^ ","^1R",42,"^1S",573],["^ ","^1R",50,"^1S",573],["^ ","^1R",52,"^1S",573],["^ ","^1R",54,"^1S",573],["^ ","^1R",55,"^1S",573],["^ ","^1R",55,"^1S",573,"^G","map__43333"],["^ ","^1R",104,"^1S",573],["^ ","^1R",115,"^1S",573],["^ ","^1R",116,"^1S",573,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",148,"^1S",573],["^ ","^1R",148,"^1S",573,"^G","map__43333"],["^ ","^1R",179,"^1S",573],["^ ","^1R",184,"^1S",573],["^ ","^1R",191,"^1S",573],["^ ","^1R",199,"^1S",573],["^ ","^1R",199,"^1S",573,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",245,"^1S",573,"^G","cljs.core/hash-map"],["^ ","^1R",264,"^1S",573,"^G","map__43333"],["^ ","^1R",276,"^1S",573,"^G","map__43333"],["^ ","^1R",10,"^1S",574,"^G","map__43333"],["^ ","^1R",17,"^1S",575],["^ ","^1R",17,"^1S",575,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",61,"^1S",575,"^G","map__43333"],["^ ","^1R",76,"^1S",575],["^ ","^1R",17,"^1S",576],["^ ","^1R",17,"^1S",576,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",61,"^1S",576,"^G","map__43333"],["^ ","^1R",76,"^1S",576],["^ ","^1R",23,"^1S",577],["^ ","^1R",23,"^1S",577,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",67,"^1S",577,"^G","map__43333"],["^ ","^1R",82,"^1S",577],["^ ","^1R",24,"^1S",578],["^ ","^1R",24,"^1S",578,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",68,"^1S",578,"^G","map__43333"],["^ ","^1R",83,"^1S",578],["^ ","^1R",0,"^1S",579]],"~i7",[["^ ","^1R",0,"^1S",571,"^G","fulcro.client/initialize"]]],"~i204",["^ ","^2L",[["^ ","^1R",4,"^1S",575,"^G","networking"]],"^1U",[["^ ","^1R",4,"^1S",576,"^G","read-local"]],"^1Y",[["^ ","^1R",4,"^1S",577,"^G","started-callback"]],"^43",[["^ ","^1R",4,"^1S",578,"^G","query-interpreter"]],"^3A",[["^ ","^1R",4,"^1S",574,"^G","app"]],"^3J",[["^ ","^1R",71,"^1S",571,"^G","initial-state"]],"^4M",[["^ ","^1R",85,"^1S",571,"^G","root-component"]],"~i107",[["^ ","^1R",100,"^1S",571,"^G","dom-id-or-node"]],"~i122",[["^ ","^1R",115,"^1S",571,"^G","reconciler-options"]]],"~i205",["^ ","~i2",[["^ ","^1R",0,"^1S",579],["^ ","^1R",0,"^1S",598]],"~i8",[["^ ","^1R",4,"^1S",579,"^G","network-map"]],"^1Z",[["^ ","^1R",18,"^1S",579]],"^24",[["^ ","^1R",18,"^1S",579,"^G","fulcro.client/normalize-network"]],"^2G",[["^ ","^1R",50,"^1S",579,"^G","networking"]]],"~i206",["^ ","~i8",[["^ ","^1R",4,"^1S",580,"^G","reconciler-options"]],"^1Z",[["^ ","^1R",29,"^1S",580]],"^2>",[["^ ","^1R",31,"^1S",580],["^ ","^1R",45,"^1S",580],["^ ","^1R",45,"^1S",580]],"^2:",[["^ ","^1R",125,"^1S",580,"^G","reconciler-options"]],"^2V",[["^ ","^1R",31,"^1S",580,"^G","cljs.core/not"]]],"~i207",["^ ","^28",[["^ ","^1R",147,"^1S",580],["^ ","^1R",212,"^1S",580]],"^2=",[["^ ","^1R",147,"^1S",580,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2F",[["^ ","^1R",193,"^1S",580,"^G","reconciler-options"]],"^22",[["^ ","^1R",262,"^1S",580]],"^32",[["^ ","^1R",264,"^1S",580]],"^3A",[["^ ","^1R",271,"^1S",580,"^G","dom-id-or-node"]],"^3E",[["^ ","^1R",300,"^1S",580,"^G","dom-id-or-node"]],"~i104",[["^ ","^1R",315,"^1S",580]],"~i105",[["^ ","^1R",315,"^1S",580,"^G","fulcro.util/unique-key"]]],"~i208",["^ ","^28",[["^ ","^1R",342,"^1S",580,"^G","reconciler-options"]]],"~i209",["^ ","~i8",[["^ ","^1R",4,"^1S",581,"^G","remotes"]],"^1Z",[["^ ","^1R",14,"^1S",581]],"^24",[["^ ","^1R",14,"^1S",581,"^G","cljs.core/keys"]],"^20",[["^ ","^1R",29,"^1S",581,"^G","network-map"]]],"~i210",["^ ","~i8",[["^ ","^1R",4,"^1S",582,"^G","send-queues"]],"^1Z",[["^ ","^1R",18,"^1S",582]],"^24",[["^ ","^1R",18,"^1S",582,"^G","cljs.core/zipmap"]],"^2:",[["^ ","^1R",35,"^1S",582,"^G","remotes"]],"^2C",[["^ ","^1R",43,"^1S",582],["^ ","^1R",87,"^1S",582],["^ ","^1R",0,"^1S",584]],"^35",[["^ ","^1R",43,"^1S",582,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^43",[["^ ","^1R",0,"^1S",584],["^ ","^1R",58,"^1S",584]],"^2J",[["^ ","^1R",7,"^1S",584,"^G","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1"]],"^27",[["^ ","^1R",1,"^1S",586,"^G","remotes"]]],"~i211",["^ ","~i8",[["^ ","^1R",4,"^1S",587,"^G","response-channels"]],"^1Z",[["^ ","^1R",24,"^1S",587]],"^24",[["^ ","^1R",24,"^1S",587,"^G","cljs.core/zipmap"]],"^2:",[["^ ","^1R",41,"^1S",587,"^G","remotes"]],"^2C",[["^ ","^1R",49,"^1S",587],["^ ","^1R",93,"^1S",587],["^ ","^1R",0,"^1S",589]],"^35",[["^ ","^1R",49,"^1S",587,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^43",[["^ ","^1R",0,"^1S",589]],"^2J",[["^ ","^1R",7,"^1S",589,"^G","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0"]],"^2[",[["^ ","^1R",1,"^1S",591,"^G","remotes"]]],"~i212",["^ ","~i8",[["^ ","^1R",4,"^1S",592,"^G","parser"]],"^1Z",[["^ ","^1R",13,"^1S",592]],"^2>",[["^ ","^1R",31,"^1S",592,"^G","query-interpreter"]]],"~i213",["^ ","^28",[["^ ","^1R",50,"^1S",592]],"^2=",[["^ ","^1R",50,"^1S",592,"^G","fulcro.client/split-parser"]],"^2C",[["^ ","^1R",77,"^1S",592,"^G","query-interpreter"]]],"~i214",["^ ","^28",[["^ ","^1R",96,"^1S",592],["^ ","^1R",128,"^1S",592],["^ ","^1R",171,"^1S",592],["^ ","^1R",326,"^1S",592]],"^2=",[["^ ","^1R",96,"^1S",592,"^G","fulcro.client.primitives/parser"]],"^43",[["^ ","^1R",224,"^1S",592]],"^2J",[["^ ","^1R",224,"^1S",592,"^G","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"^2V",[["^ ","^1R",272,"^1S",592,"^G","fulcro.client.impl.application/read-local"]],"^49",[["^ ","^1R",314,"^1S",592,"^G","read-local"]],"~i94",[["^ ","^1R",383,"^1S",592,"^G","fulcro.client.impl.application/write-entry-point"]]],"~i215",["^ ","~i8",[["^ ","^1R",4,"^1S",593,"^G","initial-app"]],"^1Z",[["^ ","^1R",18,"^1S",593],["^ ","^1R",75,"^1S",593],["^ ","^1R",204,"^1S",593],["^ ","^1R",302,"^1S",593],["^ ","^1R",367,"^1S",593],["^ ","^1R",427,"^1S",593]],"^24",[["^ ","^1R",18,"^1S",593,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"]],"^2@",[["^ ","^1R",71,"^1S",593,"^G","app"]],"^2K",[["^ ","^1R",142,"^1S",593,"^G","send-queues"]],"~i83",[["^ ","^1R",284,"^1S",593,"^G","response-channels"]]],"~i216",["^ ","^2G",[["^ ","^1R",360,"^1S",593,"^G","parser"]]],"~i217",["^ ","~i8",[["^ ","^1R",4,"^1S",594,"^G","app-with-networking"]],"^1Z",[["^ ","^1R",26,"^1S",594],["^ ","^1R",84,"^1S",594]],"^24",[["^ ","^1R",26,"^1S",594,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2@",[["^ ","^1R",72,"^1S",594,"^G","initial-app"]],"^2V",[["^ ","^1R",148,"^1S",594]],"^22",[["^ ","^1R",148,"^1S",594,"^G","fulcro.client/start-networking"]],"^3I",[["^ ","^1R",179,"^1S",594,"^G","network-map"]]],"~i218",["^ ","~i8",[["^ ","^1R",4,"^1S",595,"^G","rec"]],"^1Z",[["^ ","^1R",10,"^1S",595]],"^24",[["^ ","^1R",10,"^1S",595,"^G","fulcro.client.impl.application/generate-reconciler"]],"^2N",[["^ ","^1R",61,"^1S",595,"^G","app-with-networking"]],"^3A",[["^ ","^1R",81,"^1S",595,"^G","initial-state"]],"~i87",[["^ ","^1R",95,"^1S",595,"^G","parser"]],"^5?",[["^ ","^1R",102,"^1S",595,"^G","reconciler-options"]]],"~i219",["^ ","~i8",[["^ ","^1R",4,"^1S",596,"^G","completed-app"]],"^1Z",[["^ ","^1R",20,"^1S",596],["^ ","^1R",86,"^1S",596]],"^24",[["^ ","^1R",20,"^1S",596,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2@",[["^ ","^1R",66,"^1S",596,"^G","app-with-networking"]],"^36",[["^ ","^1R",152,"^1S",596,"^G","rec"]]],"~i220",["^ ","~i8",[["^ ","^1R",4,"^1S",597,"^G","node"]],"^1U",[["^ ","^1R",11,"^1S",597]],"^2H",[["^ ","^1R",13,"^1S",597]],"^2@",[["^ ","^1R",20,"^1S",597,"^G","dom-id-or-node"]]],"~i221",["^ ","^1X",[["^ ","^1R",49,"^1S",597]],"^1T",[["^ ","^1R",49,"^1S",597,"^G","goog.dom/getElement"]],"^31",[["^ ","^1R",69,"^1S",597,"^G","dom-id-or-node"]]],"~i222",["^ ","^1X",[["^ ","^1R",85,"^1S",597,"^G","dom-id-or-node"]]],"~i224",["^ ","~i4",[["^ ","^1R",0,"^1S",598]],"~i5",[["^ ","^1R",0,"^1S",598,"^G","fulcro.client.impl.application/initialize-global-error-callbacks"]],"^2E",[["^ ","^1R",65,"^1S",598,"^G","completed-app"]]],"~i225",["^ ","~i4",[["^ ","^1R",0,"^1S",600]],"~i5",[["^ ","^1R",0,"^1S",600,"^G","fulcro.client.impl.application/start-network-sequential-processing"]],"^35",[["^ ","^1R",67,"^1S",600,"^G","completed-app"]]],"~i226",["^ ","~i4",[["^ ","^1R",0,"^1S",602]],"~i5",[["^ ","^1R",0,"^1S",602,"^G","fulcro.client.primitives.add_root_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^2?",[["^ ","^1R",70,"^1S",602,"^G","rec"]],"^1X",[["^ ","^1R",74,"^1S",602,"^G","root-component"]],"^2W",[["^ ","^1R",89,"^1S",602,"^G","node"]]],"~i228",["^ ","~i4",[["^ ","^1R",0,"^1S",604]],"~i5",[["^ ","^1R",1,"^1S",604,"^G","fulcro.client/merge-alternate-union-elements!"],["^ ","^1R",84,"^1S",604,"^G","fulcro.client/merge-alternate-union-elements!"],["^ ","^1R",197,"^1S",604,"^G","fulcro.client/merge-alternate-union-elements!"]],"^2F",[["^ ","^1R",165,"^1S",604,"^G","completed-app"],["^ ","^1R",258,"^1S",604,"^G","completed-app"]],"^2J",[["^ ","^1R",179,"^1S",604,"^G","root-component"],["^ ","^1R",272,"^1S",604,"^G","root-component"]]],"~i229",["^ ","~i4",[["^ ","^1R",0,"^1S",606],["^ ","^1R",0,"^1S",607],["^ ","^1R",0,"^1S",609]],"^4>",[["^ ","^1R",20,"^1S",606,"^G","started-callback"]]],"~i230",["^ ","~i6",[["^ ","^1R",0,"^1S",607]],"~i7",[["^ ","^1R",1,"^1S",607,"^G","started-callback"],["^ ","^1R",50,"^1S",607,"^G","started-callback"],["^ ","^1R",114,"^1S",607,"^G","started-callback"]],"^1X",[["^ ","^1R",97,"^1S",607,"^G","completed-app"],["^ ","^1R",141,"^1S",607,"^G","completed-app"]]],"~i231",["^ ","~i4",[["^ ","^1R",0,"^1S",611,"^G","completed-app"]]],"~i233",["^ ","~i0",[["^ ","^1R",0,"^1S",613],["^ ","^1R",28,"^1S",616],["^ ","^1R",0,"^1S",617]],"~i6",[["^ ","^1R",0,"^1S",616,"^G","fulcro.client/clear-queue"]]],"~i235",["^ ","~i3",[["^ ","^1R",64,"^1S",616,"^G","queue"]]],"~i236",["^ ","~i2",[["^ ","^1R",0,"^1S",617],["^ ","^1R",0,"^1S",619]],"~i9",[["^ ","^1R",4,"^1S",617,"^G","element"]],"^1W",[["^ ","^1R",14,"^1S",617]],"^2R",[["^ ","^1R",14,"^1S",617,"^G","cljs.core.async/poll!"]],"^28",[["^ ","^1R",41,"^1S",617,"^G","queue"]]],"~i237",["^ ","~i4",[["^ ","^1R",0,"^1S",619],["^ ","^1R",0,"^1S",620],["^ ","^1R",0,"^1S",624]],"^4>",[["^ ","^1R",20,"^1S",619,"^G","element"]]],"~i238",["^ ","~i6",[["^ ","^1R",0,"^1S",620]],"^3@",[["^ ","^1R",15,"^1S",620]],"^30",[["^ ","^1R",15,"^1S",620,"^G","cljs.core.async/poll!"]],"^2H",[["^ ","^1R",42,"^1S",620,"^G","queue"]]],"~i240",["^ ","~i0",[["^ ","^1R",0,"^1S",629],["^ ","^1R",37,"^1S",629],["^ ","^1R",0,"^1S",630]],"~i7",[["^ ","^1R",0,"^1S",629,"^G","fulcro.client/abort-items-on-queue"]]],"~i241",["^ ","~i3",[["^ ","^1R",82,"^1S",629,"^G","queue"]],"~i9",[["^ ","^1R",88,"^1S",629,"^G","abort-id"]]],"~i242",["^ ","~i2",[["^ ","^1R",0,"^1S",630],["^ ","^1R",0,"^1S",631]],"~i8",[["^ ","^1R",4,"^1S",630,"^G","elements"]],"^1W",[["^ ","^1R",15,"^1S",630],["^ ","^1R",60,"^1S",630]],"^2R",[["^ ","^1R",15,"^1S",630,"^G","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i243",["^ ","~i4",[["^ ","^1R",0,"^1S",631],["^ ","^1R",0,"^1S",633]],"^2L",[["^ ","^1R",4,"^1S",631,"^G","element"]],"^1[",[["^ ","^1R",20,"^1S",631]],"^2?",[["^ ","^1R",20,"^1S",631,"^G","cljs.core.async/poll!"]],"^2>",[["^ ","^1R",47,"^1S",631,"^G","queue"]]],"~i244",["^ ","~i6",[["^ ","^1R",0,"^1S",633],["^ ","^1R",0,"^1S",634],["^ ","^1R",0,"^1S",650]],"^2Z",[["^ ","^1R",20,"^1S",633,"^G","element"]]],"~i245",["^ ","~i8",[["^ ","^1R",0,"^1S",634],["^ ","^1R",0,"^1S",642],["^ ","^1R",0,"^1S",643]],"^2R",[["^ ","^1R",20,"^1S",634],["^ ","^1R",37,"^1S",634,"^G","G__43345"],["^ ","^1R",4,"^1S",635,"^G","G__43345"],["^ ","^1R",19,"^1S",635],["^ ","^1R",21,"^1S",635],["^ ","^1R",22,"^1S",635,"^G","G__43345"],["^ ","^1R",34,"^1S",635],["^ ","^1R",41,"^1S",635],["^ ","^1R",46,"^1S",635],["^ ","^1R",46,"^1S",635],["^ ","^1R",177,"^1S",635,"^G","G__43345"],["^ ","^1R",0,"^1S",636],["^ ","^1R",0,"^1S",636],["^ ","^1R",3,"^1S",636],["^ ","^1R",4,"^1S",636,"^G","G__43345"],["^ ","^1R",20,"^1S",636],["^ ","^1R",0,"^1S",637]],"^2H",[["^ ","^1R",48,"^1S",634,"^G","element"]],"^2I",[["^ ","^1R",0,"^1S",639],["^ ","^1R",52,"^1S",639,"^G","G__43345"]],"^43",[["^ ","^1R",7,"^1S",639,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2K",[["^ ","^1R",65,"^1S",639,"^G","abort-id"]]],"~i246",["^ ","^4>",[["^ ","^1R",0,"^1S",643]],"^2L",[["^ ","^1R",0,"^1S",643,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^1W",[["^ ","^1R",51,"^1S",643,"^G","elements"]],"^2H",[["^ ","^1R",60,"^1S",643,"^G","cljs.core/conj"]],"^2=",[["^ ","^1R",75,"^1S",643,"^G","element"]]],"~i247",["^ ","~i8",[["^ ","^1R",0,"^1S",646]],"^2M",[["^ ","^1R",15,"^1S",646]],"^2U",[["^ ","^1R",15,"^1S",646,"^G","cljs.core.async/poll!"]],"^1Z",[["^ ","^1R",42,"^1S",646,"^G","queue"]]],"~i248",["^ ","~i4",[["^ ","^1R",0,"^1S",654],["^ ","^1R",4,"^1S",654,"^G","seq__43346"],["^ ","^1R",17,"^1S",654],["^ ","^1R",17,"^1S",654,"^G","cljs.core/seq"],["^ ","^1R",31,"^1S",654],["^ ","^1R",31,"^1S",654,"^G","cljs.core/deref"],["^ ","^1R",4,"^1S",655,"^G","chunk__43347"],["^ ","^1R",19,"^1S",655],["^ ","^1R",4,"^1S",656,"^G","count__43348"],["^ ","^1R",19,"^1S",656],["^ ","^1R",4,"^1S",657,"^G","i__43349"],["^ ","^1R",15,"^1S",657],["^ ","^1R",0,"^1S",659],["^ ","^1R",0,"^1S",659],["^ ","^1R",3,"^1S",659],["^ ","^1R",3,"^1S",659],["^ ","^1R",4,"^1S",659,"^G","i__43349"],["^ ","^1R",15,"^1S",659,"^G","count__43348"],["^ ","^1R",0,"^1S",660],["^ ","^1R",8,"^1S",660],["^ ","^1R",8,"^1S",660,"^G","chunk__43347"],["^ ","^1R",58,"^1S",660,"^G","i__43349"],["^ ","^1R",0,"^1S",661],["^ ","^1R",0,"^1S",661],["^ ","^1R",0,"^1S",663],["^ ","^1R",0,"^1S",664],["^ ","^1R",15,"^1S",664,"^G","seq__43346"],["^ ","^1R",15,"^1S",665,"^G","chunk__43347"],["^ ","^1R",15,"^1S",666,"^G","count__43348"],["^ ","^1R",15,"^1S",667],["^ ","^1R",16,"^1S",667,"^G","i__43349"],["^ ","^1R",27,"^1S",667],["^ ","^1R",0,"^1S",674],["^ ","^1R",4,"^1S",674,"^G","temp__5457__auto__"],["^ ","^1R",25,"^1S",674],["^ ","^1R",25,"^1S",674,"^G","cljs.core/seq"],["^ ","^1R",39,"^1S",674,"^G","seq__43346"],["^ ","^1R",0,"^1S",675],["^ ","^1R",0,"^1S",675],["^ ","^1R",3,"^1S",675,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",676],["^ ","^1R",0,"^1S",676],["^ ","^1R",4,"^1S",676,"^G","seq__43346"],["^ ","^1R",21,"^1S",676,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",677],["^ ","^1R",0,"^1S",677],["^ ","^1R",3,"^1S",677],["^ ","^1R",3,"^1S",677,"^G","cljs.core/chunked-seq?"],["^ ","^1R",32,"^1S",677,"^G","seq__43346"],["^ ","^1R",0,"^1S",678],["^ ","^1R",4,"^1S",678,"^G","c__4351__auto__"],["^ ","^1R",22,"^1S",678],["^ ","^1R",22,"^1S",678,"^G","cljs.core/chunk-first"],["^ ","^1R",44,"^1S",678,"^G","seq__43346"],["^ ","^1R",0,"^1S",679],["^ ","^1R",0,"^1S",679],["^ ","^1R",15,"^1S",679],["^ ","^1R",15,"^1S",679,"^G","cljs.core/chunk-rest"],["^ ","^1R",36,"^1S",679,"^G","seq__43346"],["^ ","^1R",15,"^1S",680,"^G","c__4351__auto__"],["^ ","^1R",15,"^1S",681],["^ ","^1R",15,"^1S",681,"^G","cljs.core/count"],["^ ","^1R",31,"^1S",681,"^G","c__4351__auto__"],["^ ","^1R",15,"^1S",682],["^ ","^1R",0,"^1S",689],["^ ","^1R",8,"^1S",689],["^ ","^1R",8,"^1S",689,"^G","cljs.core/first"],["^ ","^1R",24,"^1S",689,"^G","seq__43346"],["^ ","^1R",0,"^1S",690],["^ ","^1R",0,"^1S",690],["^ ","^1R",0,"^1S",692],["^ ","^1R",0,"^1S",693],["^ ","^1R",15,"^1S",693],["^ ","^1R",15,"^1S",693,"^G","cljs.core/next"],["^ ","^1R",30,"^1S",693,"^G","seq__43346"],["^ ","^1R",15,"^1S",694],["^ ","^1R",15,"^1S",695],["^ ","^1R",15,"^1S",696],["^ ","^1R",0,"^1S",704]],"^2Z",[["^ ","^1R",4,"^1S",660,"^G","e"],["^ ","^1R",4,"^1S",689,"^G","e"]],"^2M",[["^ ","^1R",47,"^1S",654,"^G","elements"]]],"~i249",["^ ","~i6",[["^ ","^1R",0,"^1S",661],["^ ","^1R",0,"^1S",690]],"~i7",[["^ ","^1R",0,"^1S",661,"^G","cljs.core.async/offer!"],["^ ","^1R",0,"^1S",690,"^G","cljs.core.async/offer!"]],"^2?",[["^ ","^1R",28,"^1S",661,"^G","queue"],["^ ","^1R",28,"^1S",690,"^G","queue"]],"^2H",[["^ ","^1R",34,"^1S",661,"^G","e"],["^ ","^1R",34,"^1S",690,"^G","e"]]],"~i251",["^ ","~i0",[["^ ","^1R",0,"^1S",710],["^ ","^1R",35,"^1S",713],["^ ","^1R",78,"^1S",713,"^G","p__43367"],["^ ","^1R",0,"^1S",714],["^ ","^1R",0,"^1S",714],["^ ","^1R",4,"^1S",714,"^G","map__43368"],["^ ","^1R",17,"^1S",714,"^G","p__43367"],["^ ","^1R",4,"^1S",715,"^G","map__43368"],["^ ","^1R",21,"^1S",715],["^ ","^1R",23,"^1S",715],["^ ","^1R",25,"^1S",715],["^ ","^1R",27,"^1S",715],["^ ","^1R",28,"^1S",715,"^G","map__43368"],["^ ","^1R",42,"^1S",715],["^ ","^1R",50,"^1S",715],["^ ","^1R",52,"^1S",715],["^ ","^1R",54,"^1S",715],["^ ","^1R",55,"^1S",715],["^ ","^1R",55,"^1S",715,"^G","map__43368"],["^ ","^1R",104,"^1S",715],["^ ","^1R",115,"^1S",715],["^ ","^1R",116,"^1S",715,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",148,"^1S",715],["^ ","^1R",148,"^1S",715,"^G","map__43368"],["^ ","^1R",179,"^1S",715],["^ ","^1R",184,"^1S",715],["^ ","^1R",191,"^1S",715],["^ ","^1R",199,"^1S",715],["^ ","^1R",199,"^1S",715,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",245,"^1S",715,"^G","cljs.core/hash-map"],["^ ","^1R",264,"^1S",715,"^G","map__43368"],["^ ","^1R",276,"^1S",715,"^G","map__43368"],["^ ","^1R",17,"^1S",716],["^ ","^1R",17,"^1S",716,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",61,"^1S",716,"^G","map__43368"],["^ ","^1R",76,"^1S",716],["^ ","^1R",0,"^1S",717]],"~i6",[["^ ","^1R",0,"^1S",713,"^G","fulcro.client/reset-history-impl"]]],"~i253",["^ ","^2L",[["^ ","^1R",4,"^1S",716,"^G","reconciler"]]],"~i254",["^ ","^2L",[["^ ","^1R",0,"^1S",717],["^ ","^1R",4,"^1S",717,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",718],["^ ","^1R",0,"^1S",718],["^ ","^1R",20,"^1S",718,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",719],["^ ","^1R",0,"^1S",719],["^ ","^1R",16,"^1S",719,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",720],["^ ","^1R",0,"^1S",729]],"^1U",[["^ ","^1R",4,"^1S",719,"^G","hist-atom"]],"^2>",[["^ ","^1R",25,"^1S",717]],"^1Y",[["^ ","^1R",25,"^1S",717,"^G","fulcro.client.primitives/get-history"]],"^43",[["^ ","^1R",62,"^1S",717,"^G","reconciler"]]],"~i255",["^ ","^3@",[["^ ","^1R",0,"^1S",720]],"^30",[["^ ","^1R",7,"^1S",720,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^2?",[["^ ","^1R",58,"^1S",720,"^G","hist-atom"]],"^28",[["^ ","^1R",68,"^1S",720],["^ ","^1R",18,"^1S",721,"^G","p__43373"],["^ ","^1R",0,"^1S",722],["^ ","^1R",0,"^1S",722],["^ ","^1R",4,"^1S",722,"^G","map__43374"],["^ ","^1R",17,"^1S",722,"^G","p__43373"],["^ ","^1R",4,"^1S",723,"^G","map__43374"],["^ ","^1R",21,"^1S",723],["^ ","^1R",23,"^1S",723],["^ ","^1R",25,"^1S",723],["^ ","^1R",27,"^1S",723],["^ ","^1R",28,"^1S",723,"^G","map__43374"],["^ ","^1R",42,"^1S",723],["^ ","^1R",50,"^1S",723],["^ ","^1R",52,"^1S",723],["^ ","^1R",54,"^1S",723],["^ ","^1R",55,"^1S",723],["^ ","^1R",55,"^1S",723,"^G","map__43374"],["^ ","^1R",104,"^1S",723],["^ ","^1R",115,"^1S",723],["^ ","^1R",116,"^1S",723,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",148,"^1S",723],["^ ","^1R",148,"^1S",723,"^G","map__43374"],["^ ","^1R",179,"^1S",723],["^ ","^1R",184,"^1S",723],["^ ","^1R",191,"^1S",723],["^ ","^1R",199,"^1S",723],["^ ","^1R",199,"^1S",723,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",245,"^1S",723,"^G","cljs.core/hash-map"],["^ ","^1R",264,"^1S",723,"^G","map__43374"],["^ ","^1R",276,"^1S",723,"^G","map__43374"],["^ ","^1R",4,"^1S",724,"^G","max-size"],["^ ","^1R",15,"^1S",724],["^ ","^1R",15,"^1S",724,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",59,"^1S",724,"^G","map__43374"],["^ ","^1R",74,"^1S",724],["^ ","^1R",0,"^1S",725]],"^2Y",[["^ ","^1R",0,"^1S",725]],"^2[",[["^ ","^1R",7,"^1S",725,"^G","fulcro.history/new-history"]],"^37",[["^ ","^1R",34,"^1S",725,"^G","max-size"]]],"~i257",["^ ","~i0",[["^ ","^1R",0,"^1S",732],["^ ","^1R",30,"^1S",732],["^ ","^1R",68,"^1S",732,"^G","p__43380"],["^ ","^1R",0,"^1S",733],["^ ","^1R",0,"^1S",733],["^ ","^1R",4,"^1S",733,"^G","map__43381"],["^ ","^1R",17,"^1S",733,"^G","p__43380"],["^ ","^1R",4,"^1S",734,"^G","map__43381"],["^ ","^1R",21,"^1S",734],["^ ","^1R",23,"^1S",734],["^ ","^1R",25,"^1S",734],["^ ","^1R",27,"^1S",734],["^ ","^1R",28,"^1S",734,"^G","map__43381"],["^ ","^1R",42,"^1S",734],["^ ","^1R",50,"^1S",734],["^ ","^1R",52,"^1S",734],["^ ","^1R",54,"^1S",734],["^ ","^1R",55,"^1S",734],["^ ","^1R",55,"^1S",734,"^G","map__43381"],["^ ","^1R",104,"^1S",734],["^ ","^1R",115,"^1S",734],["^ ","^1R",116,"^1S",734,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",148,"^1S",734],["^ ","^1R",148,"^1S",734,"^G","map__43381"],["^ ","^1R",179,"^1S",734],["^ ","^1R",184,"^1S",734],["^ ","^1R",191,"^1S",734],["^ ","^1R",199,"^1S",734],["^ ","^1R",199,"^1S",734,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",245,"^1S",734,"^G","cljs.core/hash-map"],["^ ","^1R",264,"^1S",734,"^G","map__43381"],["^ ","^1R",276,"^1S",734,"^G","map__43381"],["^ ","^1R",10,"^1S",735,"^G","map__43381"],["^ ","^1R",17,"^1S",736],["^ ","^1R",17,"^1S",736,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",61,"^1S",736,"^G","map__43381"],["^ ","^1R",76,"^1S",736],["^ ","^1R",0,"^1S",737]],"~i6",[["^ ","^1R",0,"^1S",732,"^G","fulcro.client/refresh*"]],"^1X",[["^ ","^1R",4,"^1S",736,"^G","reconciler"]],"^25",[["^ ","^1R",4,"^1S",735,"^G","app"]],"^35",[["^ ","^1R",77,"^1S",732,"^G","root"]],"^43",[["^ ","^1R",82,"^1S",732,"^G","target"]]],"~i259",["^ ","~i2",[["^ ","^1R",0,"^1S",737],["^ ","^1R",0,"^1S",739]],"~i8",[["^ ","^1R",4,"^1S",737,"^G","old-target"]],"^1Q",[["^ ","^1R",23,"^1S",737],["^ ","^1R",23,"^1S",737],["^ ","^1R",109,"^1S",737],["^ ","^1R",125,"^1S",737],["^ ","^1R",125,"^1S",737]],"^1V",[["^ ","^1R",211,"^1S",737,"^G","reconciler"]],"^35",[["^ ","^1R",109,"^1S",737,"^G","cljs.core/deref"]]],"~i260",["^ ","~i8",[["^ ","^1R",4,"^1S",738,"^G","target"]]],"~i261",["^ ","^1X",[["^ ","^1R",23,"^1S",738]],"^1Z",[["^ ","^1R",25,"^1S",738]],"^2F",[["^ ","^1R",32,"^1S",738,"^G","target"]],"^35",[["^ ","^1R",53,"^1S",738]],"^21",[["^ ","^1R",53,"^1S",738,"^G","goog.dom/getElement"]],"^2Y",[["^ ","^1R",73,"^1S",738,"^G","target"]],"^2P",[["^ ","^1R",81,"^1S",738,"^G","target"]]],"~i262",["^ ","~i4",[["^ ","^1R",0,"^1S",739],["^ ","^1R",0,"^1S",746],["^ ","^1R",0,"^1S",759]],"^4>",[["^ ","^1R",20,"^1S",739],["^ ","^1R",37,"^1S",739,"^G","and__3938__auto__"],["^ ","^1R",0,"^1S",740],["^ ","^1R",0,"^1S",740],["^ ","^1R",20,"^1S",740,"^G","and__3938__auto__"],["^ ","^1R",0,"^1S",743,"^G","and__3938__auto__"]],"^2M",[["^ ","^1R",57,"^1S",739,"^G","old-target"]],"^2H",[["^ ","^1R",0,"^1S",741]],"^2=",[["^ ","^1R",9,"^1S",741]],"^2E",[["^ ","^1R",10,"^1S",741,"^G","old-target"]],"^2O",[["^ ","^1R",31,"^1S",741,"^G","target"]]],"~i263",["^ ","~i6",[["^ ","^1R",0,"^1S",746],["^ ","^1R",4,"^1S",746],["^ ","^1R",4,"^1S",746],["^ ","^1R",4,"^1S",746,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1R",61,"^1S",746],["^ ","^1R",104,"^1S",746],["^ ","^1R",158,"^1S",746],["^ ","^1R",174,"^1S",746],["^ ","^1R",226,"^1S",746],["^ ","^1R",238,"^1S",746],["^ ","^1R",341,"^1S",746],["^ ","^1R",16,"^1S",747],["^ ","^1R",19,"^1S",747],["^ ","^1R",20,"^1S",747,"^G","e43383"],["^ ","^1R",38,"^1S",747,"^G","js/Error"],["^ ","^1R",0,"^1S",748],["^ ","^1R",4,"^1S",748,"^G","e__31527__auto__"],["^ ","^1R",29,"^1S",748,"^G","e43383"],["^ ","^1R",0,"^1S",749],["^ ","^1R",0,"^1S",749],["^ ","^1R",0,"^1S",749,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1R",57,"^1S",749],["^ ","^1R",100,"^1S",749],["^ ","^1R",154,"^1S",749],["^ ","^1R",170,"^1S",749],["^ ","^1R",222,"^1S",749],["^ ","^1R",234,"^1S",749],["^ ","^1R",337,"^1S",749],["^ ","^1R",390,"^1S",749,"^G","e__31527__auto__"],["^ ","^1R",0,"^1S",751],["^ ","^1R",0,"^1S",751],["^ ","^1R",6,"^1S",751,"^G","e43383"]]],"~i264",["^ ","~i6",[["^ ","^1R",0,"^1S",755]],"~i7",[["^ ","^1R",0,"^1S",755,"^G","fulcro.client.primitives/remove-root!"]],"^1T",[["^ ","^1R",43,"^1S",755,"^G","reconciler"]],"^2:",[["^ ","^1R",54,"^1S",755,"^G","old-target"]]],"~i265",["^ ","~i6",[["^ ","^1R",0,"^1S",757]],"~i7",[["^ ","^1R",0,"^1S",757,"^G","fulcro.client.primitives.add_root_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^1U",[["^ ","^1R",70,"^1S",757,"^G","reconciler"]],"^1Y",[["^ ","^1R",81,"^1S",757,"^G","root"]],"^4Z",[["^ ","^1R",86,"^1S",757,"^G","target"]]],"~i266",["^ ","~i2",[["^ ","^1R",0,"^1S",761]],"~i3",[["^ ","^1R",7,"^1S",761,"^G","fulcro.client.util.force_render.cljs$core$IFn$_invoke$arity$1"]],"^1U",[["^ ","^1R",69,"^1S",761,"^G","reconciler"]]],"~i268",["^ ","~i0",[["^ ","^1R",0,"^1S",763],["^ ","^1R",28,"^1S",763],["^ ","^1R",64,"^1S",763,"^G","p__43396"],["^ ","^1R",0,"^1S",764],["^ ","^1R",0,"^1S",764],["^ ","^1R",4,"^1S",764,"^G","map__43397"],["^ ","^1R",17,"^1S",764,"^G","p__43396"],["^ ","^1R",4,"^1S",765,"^G","map__43397"],["^ ","^1R",21,"^1S",765],["^ ","^1R",23,"^1S",765],["^ ","^1R",25,"^1S",765],["^ ","^1R",27,"^1S",765],["^ ","^1R",28,"^1S",765,"^G","map__43397"],["^ ","^1R",42,"^1S",765],["^ ","^1R",50,"^1S",765],["^ ","^1R",52,"^1S",765],["^ ","^1R",54,"^1S",765],["^ ","^1R",55,"^1S",765],["^ ","^1R",55,"^1S",765,"^G","map__43397"],["^ ","^1R",104,"^1S",765],["^ ","^1R",115,"^1S",765],["^ ","^1R",116,"^1S",765,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",148,"^1S",765],["^ ","^1R",148,"^1S",765,"^G","map__43397"],["^ ","^1R",179,"^1S",765],["^ ","^1R",184,"^1S",765],["^ ","^1R",191,"^1S",765],["^ ","^1R",199,"^1S",765],["^ ","^1R",199,"^1S",765,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",245,"^1S",765,"^G","cljs.core/hash-map"],["^ ","^1R",264,"^1S",765,"^G","map__43397"],["^ ","^1R",276,"^1S",765,"^G","map__43397"],["^ ","^1R",10,"^1S",766,"^G","map__43397"],["^ ","^1R",21,"^1S",767],["^ ","^1R",21,"^1S",767,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",65,"^1S",767,"^G","map__43397"],["^ ","^1R",80,"^1S",767],["^ ","^1R",20,"^1S",768],["^ ","^1R",20,"^1S",768,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",64,"^1S",768,"^G","map__43397"],["^ ","^1R",79,"^1S",768],["^ ","^1R",25,"^1S",769],["^ ","^1R",25,"^1S",769,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",69,"^1S",769,"^G","map__43397"],["^ ","^1R",84,"^1S",769],["^ ","^1R",0,"^1S",770]],"~i6",[["^ ","^1R",0,"^1S",763,"^G","fulcro.client/mount*"]],"^1U",[["^ ","^1R",4,"^1S",767,"^G","mounted?"]],"^2=",[["^ ","^1R",4,"^1S",768,"^G","initial-state"]],"^35",[["^ ","^1R",4,"^1S",769,"^G","reconciler-options"]],"^33",[["^ ","^1R",4,"^1S",766,"^G","app"]],"^49",[["^ ","^1R",73,"^1S",763,"^G","root-component"]],"^3E",[["^ ","^1R",88,"^1S",763,"^G","dom-id-or-node"]]],"~i269",["^ ","~i2",[["^ ","^1R",0,"^1S",770]],"~i6",[["^ ","^1R",20,"^1S",770,"^G","mounted?"]]],"~i270",["^ ","~i4",[["^ ","^1R",0,"^1S",771]]],"~i271",["^ ","~i6",[["^ ","^1R",0,"^1S",771]],"~i7",[["^ ","^1R",0,"^1S",771,"^G","fulcro.client/refresh*"]],"^2U",[["^ ","^1R",28,"^1S",771,"^G","app"]],"^2?",[["^ ","^1R",32,"^1S",771,"^G","root-component"]],"^2@",[["^ ","^1R",47,"^1S",771,"^G","dom-id-or-node"]]],"~i272",["^ ","~i6",[["^ ","^1R",0,"^1S",773,"^G","app"]]],"~i273",["^ ","~i4",[["^ ","^1R",0,"^1S",775],["^ ","^1R",0,"^1S",792]],"^4>",[["^ ","^1R",4,"^1S",775,"^G","uses-initial-app-state?"]],"^20",[["^ ","^1R",36,"^1S",775]],"^2@",[["^ ","^1R",36,"^1S",775,"^G","fulcro.client.primitives/has-initial-app-state?"]],"^2[",[["^ ","^1R",90,"^1S",775,"^G","root-component"]]],"~i274",["^ ","^4>",[["^ ","^1R",4,"^1S",776,"^G","ui-declared-state"]],"^20",[["^ ","^1R",24,"^1S",776],["^ ","^1R",41,"^1S",776,"^G","and__3938__auto__"],["^ ","^1R",0,"^1S",777],["^ ","^1R",0,"^1S",777],["^ ","^1R",3,"^1S",777,"^G","and__3938__auto__"],["^ ","^1R",0,"^1S",780,"^G","and__3938__auto__"]],"^2W",[["^ ","^1R",61,"^1S",776,"^G","uses-initial-app-state?"]],"^2[",[["^ ","^1R",0,"^1S",778],["^ ","^1R",61,"^1S",778]],"^32",[["^ ","^1R",7,"^1S",778,"^G","fulcro.client.primitives/initial-state"]],"~i103",[["^ ","^1R",46,"^1S",778,"^G","root-component"]]],"~i275",["^ ","^4>",[["^ ","^1R",4,"^1S",783,"^G","explicit-state?"]],"^20",[["^ ","^1R",28,"^1S",783],["^ ","^1R",45,"^1S",783,"^G","or__3949__auto__"],["^ ","^1R",0,"^1S",784],["^ ","^1R",0,"^1S",784],["^ ","^1R",20,"^1S",784,"^G","or__3949__auto__"],["^ ","^1R",0,"^1S",785,"^G","or__3949__auto__"]],"^4Z",[["^ ","^1R",64,"^1S",783]],"^2W",[["^ ","^1R",64,"^1S",783,"^G","fulcro.util/atom?"]],"^43",[["^ ","^1R",88,"^1S",783,"^G","initial-state"]],"^2S",[["^ ","^1R",0,"^1S",787]],"^2P",[["^ ","^1R",9,"^1S",787]],"^23",[["^ ","^1R",9,"^1S",787,"^G","cljs.core/seq"]],"^3B",[["^ ","^1R",23,"^1S",787,"^G","initial-state"]],"^3G",[["^ ","^1R",43,"^1S",787]],"^3:",[["^ ","^1R",43,"^1S",787,"^G","cljs.core/map?"]],"^4K",[["^ ","^1R",64,"^1S",787,"^G","initial-state"]]],"~i276",["^ ","^4>",[["^ ","^1R",4,"^1S",790,"^G","state"]],"^20",[["^ ","^1R",12,"^1S",790],["^ ","^1R",136,"^1S",790],["^ ","^1R",191,"^1S",790],["^ ","^1R",191,"^1S",790]]],"~i277",["^ ","^2:",[["^ ","^1R",30,"^1S",790,"^G","explicit-state?"]],"^2K",[["^ ","^1R",53,"^1S",790],["^ ","^1R",100,"^1S",790]],"^38",[["^ ","^1R",71,"^1S",790,"^G","initial-state"]],"^2P",[["^ ","^1R",86,"^1S",790,"^G","initial-state"]]],"~i278",["^ ","^2:",[["^ ","^1R",154,"^1S",790,"^G","ui-declared-state"]],"^2O",[["^ ","^1R",173,"^1S",790,"^G","ui-declared-state"]]],"~i280",["^ ","~i6",[["^ ","^1R",0,"^1S",792]],"~i7",[["^ ","^1R",7,"^1S",792,"^G","fulcro.client/initialize"]],"^2R",[["^ ","^1R",32,"^1S",792,"^G","app"]],"^1U",[["^ ","^1R",36,"^1S",792,"^G","state"]],"^1Z",[["^ ","^1R",42,"^1S",792,"^G","root-component"]],"^2E",[["^ ","^1R",57,"^1S",792,"^G","dom-id-or-node"]],"^2T",[["^ ","^1R",72,"^1S",792,"^G","reconciler-options"]]],"~i282",["^ ","~i0",[["^ ","^1R",0,"^1S",795],["^ ","^1R",0,"^1S",795],["^ ","^1R",0,"^1S",795],["^ ","^1R",0,"^1S",795],["^ ","^1R",0,"^1S",833],["^ ","^1R",0,"^1S",833],["^ ","^1R",0,"^1S",833],["^ ","^1R",0,"^1S",833],["^ ","^1R",72,"^1S",833],["^ ","^1R",83,"^1S",833,"^G","this__4203__auto__"],["^ ","^1R",102,"^1S",833,"^G","k__4204__auto__"],["^ ","^1R",0,"^1S",835],["^ ","^1R",0,"^1S",835],["^ ","^1R",4,"^1S",835,"^G","this__4203__auto__"],["^ ","^1R",29,"^1S",835],["^ ","^1R",0,"^1S",836],["^ ","^1R",0,"^1S",836],["^ ","^1R",7,"^1S",836,"^G","cljs.core._lookup.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",55,"^1S",836,"^G","this__4203__auto__"],["^ ","^1R",78,"^1S",836,"^G","k__4204__auto__"],["^ ","^1R",94,"^1S",836],["^ ","^1R",0,"^1S",839],["^ ","^1R",0,"^1S",839],["^ ","^1R",0,"^1S",839],["^ ","^1R",72,"^1S",839],["^ ","^1R",83,"^1S",839,"^G","this__4205__auto__"],["^ ","^1R",102,"^1S",839,"^G","k43414"],["^ ","^1R",109,"^1S",839,"^G","else__4206__auto__"],["^ ","^1R",0,"^1S",841],["^ ","^1R",0,"^1S",841],["^ ","^1R",4,"^1S",841,"^G","this__4205__auto__"],["^ ","^1R",29,"^1S",841],["^ ","^1R",0,"^1S",842],["^ ","^1R",0,"^1S",842],["^ ","^1R",4,"^1S",842,"^G","G__43424"],["^ ","^1R",15,"^1S",842,"^G","k43414"],["^ ","^1R",4,"^1S",843,"^G","G__43424"],["^ ","^1R",19,"^1S",843],["^ ","^1R",21,"^1S",843],["^ ","^1R",22,"^1S",843,"^G","G__43424"],["^ ","^1R",42,"^1S",843,"^G","cljs.core/Keyword"],["^ ","^1R",75,"^1S",843],["^ ","^1R",0,"^1S",844],["^ ","^1R",0,"^1S",844],["^ ","^1R",8,"^1S",844,"^G","G__43424"],["^ ","^1R",5,"^1S",845],["^ ","^1R",0,"^1S",846,"^G","initial-state"],["^ ","^1R",5,"^1S",849],["^ ","^1R",0,"^1S",850,"^G","mutation-merge"],["^ ","^1R",5,"^1S",853],["^ ","^1R",0,"^1S",854,"^G","started-callback"],["^ ","^1R",5,"^1S",857],["^ ","^1R",0,"^1S",858,"^G","remotes"],["^ ","^1R",5,"^1S",861],["^ ","^1R",0,"^1S",862,"^G","networking"],["^ ","^1R",5,"^1S",865],["^ ","^1R",0,"^1S",866,"^G","send-queues"],["^ ","^1R",5,"^1S",869],["^ ","^1R",0,"^1S",870,"^G","response-channels"],["^ ","^1R",5,"^1S",873],["^ ","^1R",0,"^1S",874,"^G","reconciler"],["^ ","^1R",5,"^1S",877],["^ ","^1R",0,"^1S",878,"^G","read-local"],["^ ","^1R",5,"^1S",881],["^ ","^1R",0,"^1S",882,"^G","query-interpreter"],["^ ","^1R",5,"^1S",885],["^ ","^1R",0,"^1S",886,"^G","mounted?"],["^ ","^1R",5,"^1S",889],["^ ","^1R",0,"^1S",890,"^G","reconciler-options"],["^ ","^1R",0,"^1S",894],["^ ","^1R",7,"^1S",894,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",51,"^1S",894,"^G","__extmap"],["^ ","^1R",67,"^1S",894,"^G","k43414"],["^ ","^1R",74,"^1S",894,"^G","else__4206__auto__"],["^ ","^1R",0,"^1S",899],["^ ","^1R",0,"^1S",899],["^ ","^1R",0,"^1S",899],["^ ","^1R",84,"^1S",899],["^ ","^1R",95,"^1S",899,"^G","this__4217__auto__"],["^ ","^1R",114,"^1S",899,"^G","writer__4218__auto__"],["^ ","^1R",135,"^1S",899,"^G","opts__4219__auto__"],["^ ","^1R",0,"^1S",901],["^ ","^1R",0,"^1S",901],["^ ","^1R",4,"^1S",901,"^G","this__4217__auto__"],["^ ","^1R",29,"^1S",901],["^ ","^1R",0,"^1S",902],["^ ","^1R",0,"^1S",902],["^ ","^1R",4,"^1S",902,"^G","pr-pair__4220__auto__"],["^ ","^1R",28,"^1S",902],["^ ","^1R",18,"^1S",903,"^G","keyval__4221__auto__"],["^ ","^1R",0,"^1S",904],["^ ","^1R",0,"^1S",904],["^ ","^1R",7,"^1S",904,"^G","cljs.core/pr-sequential-writer"],["^ ","^1R",38,"^1S",904,"^G","writer__4218__auto__"],["^ ","^1R",59,"^1S",904,"^G","cljs.core/pr-writer"],["^ ","^1R",79,"^1S",904],["^ ","^1R",82,"^1S",904],["^ ","^1R",86,"^1S",904],["^ ","^1R",89,"^1S",904,"^G","opts__4219__auto__"],["^ ","^1R",108,"^1S",904,"^G","keyval__4221__auto__"],["^ ","^1R",0,"^1S",907],["^ ","^1R",0,"^1S",907],["^ ","^1R",7,"^1S",907,"^G","cljs.core/pr-sequential-writer"],["^ ","^1R",38,"^1S",907,"^G","writer__4218__auto__"],["^ ","^1R",59,"^1S",907,"^G","pr-pair__4220__auto__"],["^ ","^1R",81,"^1S",907],["^ ","^1R",111,"^1S",907],["^ ","^1R",116,"^1S",907],["^ ","^1R",120,"^1S",907,"^G","opts__4219__auto__"],["^ ","^1R",139,"^1S",907],["^ ","^1R",139,"^1S",907,"^G","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",186,"^1S",907],["^ ","^1R",270,"^1S",907],["^ ","^1R",275,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",302,"^1S",907],["^ ","^1R",307,"^1S",907],["^ ","^1R",309,"^1S",907],["^ ","^1R",313,"^1S",907],["^ ","^1R",313,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",351,"^1S",907],["^ ","^1R",352,"^1S",907],["^ ","^1R",424,"^1S",907,"^G","initial-state"],["^ ","^1R",446,"^1S",907],["^ ","^1R",453,"^1S",907],["^ ","^1R",458,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",485,"^1S",907],["^ ","^1R",490,"^1S",907],["^ ","^1R",492,"^1S",907],["^ ","^1R",496,"^1S",907],["^ ","^1R",496,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",534,"^1S",907],["^ ","^1R",535,"^1S",907],["^ ","^1R",609,"^1S",907,"^G","mutation-merge"],["^ ","^1R",632,"^1S",907],["^ ","^1R",639,"^1S",907],["^ ","^1R",644,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",671,"^1S",907],["^ ","^1R",676,"^1S",907],["^ ","^1R",678,"^1S",907],["^ ","^1R",682,"^1S",907],["^ ","^1R",682,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",720,"^1S",907],["^ ","^1R",721,"^1S",907],["^ ","^1R",799,"^1S",907,"^G","started-callback"],["^ ","^1R",824,"^1S",907],["^ ","^1R",831,"^1S",907],["^ ","^1R",836,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",863,"^1S",907],["^ ","^1R",868,"^1S",907],["^ ","^1R",870,"^1S",907],["^ ","^1R",874,"^1S",907],["^ ","^1R",874,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",912,"^1S",907],["^ ","^1R",913,"^1S",907],["^ ","^1R",972,"^1S",907,"^G","remotes"],["^ ","^1R",988,"^1S",907],["^ ","^1R",995,"^1S",907],["^ ","^1R",1000,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1027,"^1S",907],["^ ","^1R",1032,"^1S",907],["^ ","^1R",1034,"^1S",907],["^ ","^1R",1038,"^1S",907],["^ ","^1R",1038,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1076,"^1S",907],["^ ","^1R",1077,"^1S",907],["^ ","^1R",1141,"^1S",907,"^G","networking"],["^ ","^1R",1160,"^1S",907],["^ ","^1R",1167,"^1S",907],["^ ","^1R",1172,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1199,"^1S",907],["^ ","^1R",1204,"^1S",907],["^ ","^1R",1206,"^1S",907],["^ ","^1R",1210,"^1S",907],["^ ","^1R",1210,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1248,"^1S",907],["^ ","^1R",1249,"^1S",907],["^ ","^1R",1316,"^1S",907,"^G","send-queues"],["^ ","^1R",1336,"^1S",907],["^ ","^1R",1343,"^1S",907],["^ ","^1R",1348,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1375,"^1S",907],["^ ","^1R",1380,"^1S",907],["^ ","^1R",1382,"^1S",907],["^ ","^1R",1386,"^1S",907],["^ ","^1R",1386,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1424,"^1S",907],["^ ","^1R",1425,"^1S",907],["^ ","^1R",1505,"^1S",907,"^G","response-channels"],["^ ","^1R",1531,"^1S",907],["^ ","^1R",1538,"^1S",907],["^ ","^1R",1543,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1570,"^1S",907],["^ ","^1R",1575,"^1S",907],["^ ","^1R",1577,"^1S",907],["^ ","^1R",1581,"^1S",907],["^ ","^1R",1581,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1619,"^1S",907],["^ ","^1R",1620,"^1S",907],["^ ","^1R",1686,"^1S",907,"^G","reconciler"],["^ ","^1R",1705,"^1S",907],["^ ","^1R",1712,"^1S",907],["^ ","^1R",1717,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1744,"^1S",907],["^ ","^1R",1749,"^1S",907],["^ ","^1R",1751,"^1S",907],["^ ","^1R",1755,"^1S",907],["^ ","^1R",1755,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1793,"^1S",907],["^ ","^1R",1794,"^1S",907],["^ ","^1R",1858,"^1S",907,"^G","read-local"],["^ ","^1R",1877,"^1S",907],["^ ","^1R",1884,"^1S",907],["^ ","^1R",1889,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1916,"^1S",907],["^ ","^1R",1921,"^1S",907],["^ ","^1R",1923,"^1S",907],["^ ","^1R",1927,"^1S",907],["^ ","^1R",1927,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",1965,"^1S",907],["^ ","^1R",1966,"^1S",907],["^ ","^1R",2045,"^1S",907,"^G","query-interpreter"],["^ ","^1R",2071,"^1S",907],["^ ","^1R",2078,"^1S",907],["^ ","^1R",2083,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",2110,"^1S",907],["^ ","^1R",2115,"^1S",907],["^ ","^1R",2117,"^1S",907],["^ ","^1R",2121,"^1S",907],["^ ","^1R",2121,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",2159,"^1S",907],["^ ","^1R",2160,"^1S",907],["^ ","^1R",2220,"^1S",907,"^G","mounted?"],["^ ","^1R",2243,"^1S",907],["^ ","^1R",2250,"^1S",907],["^ ","^1R",2255,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",2282,"^1S",907],["^ ","^1R",2287,"^1S",907],["^ ","^1R",2289,"^1S",907],["^ ","^1R",2293,"^1S",907],["^ ","^1R",2293,"^1S",907,"^G","cljs.core/PersistentVector"],["^ ","^1R",2331,"^1S",907],["^ ","^1R",2332,"^1S",907],["^ ","^1R",2413,"^1S",907,"^G","reconciler-options"],["^ ","^1R",2440,"^1S",907],["^ ","^1R",2455,"^1S",907,"^G","__extmap"],["^ ","^1R",0,"^1S",910],["^ ","^1R",0,"^1S",910],["^ ","^1R",0,"^1S",910],["^ ","^1R",76,"^1S",910],["^ ","^1R",87,"^1S",910,"^G","G__43413"],["^ ","^1R",0,"^1S",912],["^ ","^1R",0,"^1S",912],["^ ","^1R",4,"^1S",912,"^G","G__43413"],["^ ","^1R",19,"^1S",912],["^ ","^1R",0,"^1S",913],["^ ","^1R",0,"^1S",913],["^ ","^1R",12,"^1S",913,"^G","cljs.core/RecordIter"],["^ ","^1R",33,"^1S",913],["^ ","^1R",37,"^1S",913,"^G","G__43413"],["^ ","^1R",50,"^1S",913],["^ ","^1R",53,"^1S",913],["^ ","^1R",137,"^1S",913],["^ ","^1R",209,"^1S",913],["^ ","^1R",283,"^1S",913],["^ ","^1R",361,"^1S",913],["^ ","^1R",420,"^1S",913],["^ ","^1R",484,"^1S",913],["^ ","^1R",551,"^1S",913],["^ ","^1R",631,"^1S",913],["^ ","^1R",697,"^1S",913],["^ ","^1R",761,"^1S",913],["^ ","^1R",840,"^1S",913],["^ ","^1R",900,"^1S",913],["^ ","^1R",989,"^1S",913],["^ ","^1R",1007,"^1S",913,"^G","__extmap"],["^ ","^1R",1024,"^1S",913],["^ ","^1R",1024,"^1S",913,"^G","cljs.core/-iterator"],["^ ","^1R",1044,"^1S",913,"^G","__extmap"],["^ ","^1R",1061,"^1S",913],["^ ","^1R",1061,"^1S",913,"^G","cljs.core/nil-iter"],["^ ","^1R",0,"^1S",916],["^ ","^1R",0,"^1S",916],["^ ","^1R",0,"^1S",916],["^ ","^1R",68,"^1S",916],["^ ","^1R",79,"^1S",916,"^G","this__4201__auto__"],["^ ","^1R",0,"^1S",918],["^ ","^1R",0,"^1S",918],["^ ","^1R",4,"^1S",918,"^G","this__4201__auto__"],["^ ","^1R",29,"^1S",918],["^ ","^1R",0,"^1S",919],["^ ","^1R",0,"^1S",919,"^G","__meta"],["^ ","^1R",0,"^1S",922],["^ ","^1R",0,"^1S",922],["^ ","^1R",0,"^1S",922],["^ ","^1R",74,"^1S",922],["^ ","^1R",85,"^1S",922,"^G","this__4198__auto__"],["^ ","^1R",0,"^1S",924],["^ ","^1R",0,"^1S",924],["^ ","^1R",4,"^1S",924,"^G","this__4198__auto__"],["^ ","^1R",29,"^1S",924],["^ ","^1R",0,"^1S",925],["^ ","^1R",0,"^1S",925],["^ ","^1R",38,"^1S",925,"^G","initial-state"],["^ ","^1R",59,"^1S",925,"^G","mutation-merge"],["^ ","^1R",81,"^1S",925,"^G","started-callback"],["^ ","^1R",105,"^1S",925,"^G","remotes"],["^ ","^1R",120,"^1S",925,"^G","networking"],["^ ","^1R",138,"^1S",925,"^G","send-queues"],["^ ","^1R",157,"^1S",925,"^G","response-channels"],["^ ","^1R",182,"^1S",925,"^G","reconciler"],["^ ","^1R",200,"^1S",925,"^G","read-local"],["^ ","^1R",218,"^1S",925,"^G","query-interpreter"],["^ ","^1R",243,"^1S",925,"^G","mounted?"],["^ ","^1R",265,"^1S",925,"^G","reconciler-options"],["^ ","^1R",291,"^1S",925,"^G","__meta"],["^ ","^1R",305,"^1S",925,"^G","__extmap"],["^ ","^1R",321,"^1S",925,"^G","__hash"],["^ ","^1R",0,"^1S",928],["^ ","^1R",0,"^1S",928],["^ ","^1R",0,"^1S",928],["^ ","^1R",72,"^1S",928],["^ ","^1R",83,"^1S",928,"^G","this__4207__auto__"],["^ ","^1R",0,"^1S",930],["^ ","^1R",0,"^1S",930],["^ ","^1R",4,"^1S",930,"^G","this__4207__auto__"],["^ ","^1R",29,"^1S",930],["^ ","^1R",0,"^1S",931],["^ ","^1R",0,"^1S",931],["^ ","^1R",8,"^1S",931],["^ ","^1R",13,"^1S",931],["^ ","^1R",13,"^1S",931,"^G","cljs.core/count"],["^ ","^1R",29,"^1S",931,"^G","__extmap"],["^ ","^1R",0,"^1S",934],["^ ","^1R",0,"^1S",934],["^ ","^1R",0,"^1S",934],["^ ","^1R",68,"^1S",934],["^ ","^1R",79,"^1S",934,"^G","this__4199__auto__"],["^ ","^1R",0,"^1S",936],["^ ","^1R",0,"^1S",936],["^ ","^1R",4,"^1S",936,"^G","this__4199__auto__"],["^ ","^1R",29,"^1S",936],["^ ","^1R",0,"^1S",937],["^ ","^1R",0,"^1S",937],["^ ","^1R",4,"^1S",937,"^G","h__4061__auto__"],["^ ","^1R",22,"^1S",937,"^G","__hash"],["^ ","^1R",0,"^1S",938],["^ ","^1R",0,"^1S",938],["^ ","^1R",3,"^1S",938],["^ ","^1R",5,"^1S",938],["^ ","^1R",6,"^1S",938,"^G","h__4061__auto__"],["^ ","^1R",25,"^1S",938],["^ ","^1R",0,"^1S",939,"^G","h__4061__auto__"],["^ ","^1R",0,"^1S",941],["^ ","^1R",4,"^1S",941,"^G","h__4061__auto__"],["^ ","^1R",26,"^1S",941],["^ ","^1R",43,"^1S",941,"^G","fexpr__43433"],["^ ","^1R",58,"^1S",941],["^ ","^1R",18,"^1S",942,"^G","coll__4200__auto__"],["^ ","^1R",0,"^1S",943],["^ ","^1R",0,"^1S",943],["^ ","^1R",8,"^1S",943],["^ ","^1R",22,"^1S",943],["^ ","^1R",22,"^1S",943,"^G","cljs.core/hash-unordered-coll"],["^ ","^1R",52,"^1S",943,"^G","coll__4200__auto__"],["^ ","^1R",0,"^1S",946],["^ ","^1R",0,"^1S",946],["^ ","^1R",7,"^1S",946,"^G","fexpr__43433"],["^ ","^1R",20,"^1S",946,"^G","this__4199__auto__"],["^ ","^1R",0,"^1S",948],["^ ","^1R",0,"^1S",948],["^ ","^1R",0,"^1S",948,"^G","__hash"],["^ ","^1R",16,"^1S",948,"^G","h__4061__auto__"],["^ ","^1R",0,"^1S",950,"^G","h__4061__auto__"],["^ ","^1R",0,"^1S",954],["^ ","^1R",0,"^1S",954],["^ ","^1R",0,"^1S",954],["^ ","^1R",70,"^1S",954],["^ ","^1R",81,"^1S",954,"^G","this43415"],["^ ","^1R",91,"^1S",954,"^G","other43416"],["^ ","^1R",0,"^1S",956],["^ ","^1R",0,"^1S",956],["^ ","^1R",4,"^1S",956,"^G","this43415"],["^ ","^1R",20,"^1S",956],["^ ","^1R",0,"^1S",957],["^ ","^1R",0,"^1S",957],["^ ","^1R",9,"^1S",957],["^ ","^1R",11,"^1S",957],["^ ","^1R",12,"^1S",957,"^G","other43416"],["^ ","^1R",26,"^1S",957],["^ ","^1R",38,"^1S",957],["^ ","^1R",39,"^1S",957],["^ ","^1R",39,"^1S",957,"^G","this43415"],["^ ","^1R",69,"^1S",957],["^ ","^1R",69,"^1S",957,"^G","other43416"],["^ ","^1R",98,"^1S",957],["^ ","^1R",98,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",143,"^1S",957],["^ ","^1R",143,"^1S",957,"^G","this43415"],["^ ","^1R",171,"^1S",957],["^ ","^1R",171,"^1S",957,"^G","other43416"],["^ ","^1R",202,"^1S",957],["^ ","^1R",202,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",247,"^1S",957],["^ ","^1R",247,"^1S",957,"^G","this43415"],["^ ","^1R",276,"^1S",957],["^ ","^1R",276,"^1S",957,"^G","other43416"],["^ ","^1R",308,"^1S",957],["^ ","^1R",308,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",353,"^1S",957],["^ ","^1R",353,"^1S",957,"^G","this43415"],["^ ","^1R",384,"^1S",957],["^ ","^1R",384,"^1S",957,"^G","other43416"],["^ ","^1R",418,"^1S",957],["^ ","^1R",418,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",463,"^1S",957],["^ ","^1R",463,"^1S",957,"^G","this43415"],["^ ","^1R",485,"^1S",957],["^ ","^1R",485,"^1S",957,"^G","other43416"],["^ ","^1R",510,"^1S",957],["^ ","^1R",510,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",555,"^1S",957],["^ ","^1R",555,"^1S",957,"^G","this43415"],["^ ","^1R",580,"^1S",957],["^ ","^1R",580,"^1S",957,"^G","other43416"],["^ ","^1R",608,"^1S",957],["^ ","^1R",608,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",653,"^1S",957],["^ ","^1R",653,"^1S",957,"^G","this43415"],["^ ","^1R",679,"^1S",957],["^ ","^1R",679,"^1S",957,"^G","other43416"],["^ ","^1R",708,"^1S",957],["^ ","^1R",708,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",753,"^1S",957],["^ ","^1R",753,"^1S",957,"^G","this43415"],["^ ","^1R",785,"^1S",957],["^ ","^1R",785,"^1S",957,"^G","other43416"],["^ ","^1R",820,"^1S",957],["^ ","^1R",820,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",865,"^1S",957],["^ ","^1R",865,"^1S",957,"^G","this43415"],["^ ","^1R",890,"^1S",957],["^ ","^1R",890,"^1S",957,"^G","other43416"],["^ ","^1R",918,"^1S",957],["^ ","^1R",918,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",963,"^1S",957],["^ ","^1R",963,"^1S",957,"^G","this43415"],["^ ","^1R",988,"^1S",957],["^ ","^1R",988,"^1S",957,"^G","other43416"],["^ ","^1R",1016,"^1S",957],["^ ","^1R",1016,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",1061,"^1S",957],["^ ","^1R",1061,"^1S",957,"^G","this43415"],["^ ","^1R",1093,"^1S",957],["^ ","^1R",1093,"^1S",957,"^G","other43416"],["^ ","^1R",1128,"^1S",957],["^ ","^1R",1128,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",1173,"^1S",957],["^ ","^1R",1173,"^1S",957,"^G","this43415"],["^ ","^1R",1202,"^1S",957],["^ ","^1R",1202,"^1S",957,"^G","other43416"],["^ ","^1R",1234,"^1S",957],["^ ","^1R",1234,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",1279,"^1S",957],["^ ","^1R",1279,"^1S",957,"^G","this43415"],["^ ","^1R",1312,"^1S",957],["^ ","^1R",1312,"^1S",957,"^G","other43416"],["^ ","^1R",1348,"^1S",957],["^ ","^1R",1348,"^1S",957,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",1393,"^1S",957],["^ ","^1R",1393,"^1S",957,"^G","this43415"],["^ ","^1R",1416,"^1S",957],["^ ","^1R",1416,"^1S",957,"^G","other43416"],["^ ","^1R",0,"^1S",960],["^ ","^1R",0,"^1S",960],["^ ","^1R",0,"^1S",960],["^ ","^1R",71,"^1S",960,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",0,"^1S",962],["^ ","^1R",0,"^1S",962],["^ ","^1R",0,"^1S",962],["^ ","^1R",84,"^1S",962],["^ ","^1R",0,"^1S",964],["^ ","^1R",0,"^1S",964],["^ ","^1R",16,"^1S",964],["^ ","^1R",0,"^1S",965],["^ ","^1R",0,"^1S",968],["^ ","^1R",0,"^1S",968],["^ ","^1R",0,"^1S",968],["^ ","^1R",96,"^1S",968],["^ ","^1R",0,"^1S",970],["^ ","^1R",0,"^1S",970],["^ ","^1R",16,"^1S",970],["^ ","^1R",0,"^1S",971],["^ ","^1R",0,"^1S",974],["^ ","^1R",0,"^1S",974],["^ ","^1R",0,"^1S",974],["^ ","^1R",94,"^1S",974],["^ ","^1R",0,"^1S",976],["^ ","^1R",0,"^1S",976],["^ ","^1R",16,"^1S",976],["^ ","^1R",0,"^1S",977],["^ ","^1R",0,"^1S",1018],["^ ","^1R",0,"^1S",1018],["^ ","^1R",0,"^1S",1018],["^ ","^1R",114,"^1S",1018],["^ ","^1R",0,"^1S",1020],["^ ","^1R",0,"^1S",1020],["^ ","^1R",16,"^1S",1020],["^ ","^1R",0,"^1S",1021],["^ ","^1R",0,"^1S",1080],["^ ","^1R",0,"^1S",1080],["^ ","^1R",0,"^1S",1080],["^ ","^1R",98,"^1S",1080],["^ ","^1R",0,"^1S",1082],["^ ","^1R",0,"^1S",1082],["^ ","^1R",16,"^1S",1082],["^ ","^1R",0,"^1S",1083],["^ ","^1R",0,"^1S",1152],["^ ","^1R",0,"^1S",1152],["^ ","^1R",0,"^1S",1152],["^ ","^1R",86,"^1S",1152],["^ ","^1R",0,"^1S",1154],["^ ","^1R",0,"^1S",1154],["^ ","^1R",16,"^1S",1154],["^ ","^1R",0,"^1S",1155],["^ ","^1R",0,"^1S",1158],["^ ","^1R",0,"^1S",1158],["^ ","^1R",0,"^1S",1158],["^ ","^1R",98,"^1S",1158],["^ ","^1R",0,"^1S",1160],["^ ","^1R",0,"^1S",1160],["^ ","^1R",16,"^1S",1160],["^ ","^1R",0,"^1S",1161],["^ ","^1R",0,"^1S",1164],["^ ","^1R",0,"^1S",1164],["^ ","^1R",0,"^1S",1164],["^ ","^1R",86,"^1S",1164],["^ ","^1R",0,"^1S",1166],["^ ","^1R",0,"^1S",1166],["^ ","^1R",16,"^1S",1166],["^ ","^1R",0,"^1S",1167],["^ ","^1R",0,"^1S",1170],["^ ","^1R",0,"^1S",1170],["^ ","^1R",0,"^1S",1170],["^ ","^1R",69,"^1S",1170],["^ ","^1R",80,"^1S",1170,"^G","this__4212__auto__"],["^ ","^1R",99,"^1S",1170,"^G","k__4213__auto__"],["^ ","^1R",0,"^1S",1172],["^ ","^1R",0,"^1S",1172],["^ ","^1R",4,"^1S",1172,"^G","this__4212__auto__"],["^ ","^1R",29,"^1S",1172],["^ ","^1R",0,"^1S",1173],["^ ","^1R",0,"^1S",1173],["^ ","^1R",3,"^1S",1173],["^ ","^1R",3,"^1S",1173,"^G","cljs.core/contains?"],["^ ","^1R",29,"^1S",1173],["^ ","^1R",111,"^1S",1173],["^ ","^1R",180,"^1S",1173],["^ ","^1R",249,"^1S",1173],["^ ","^1R",328,"^1S",1173],["^ ","^1R",392,"^1S",1173],["^ ","^1R",457,"^1S",1173],["^ ","^1R",542,"^1S",1173],["^ ","^1R",613,"^1S",1173],["^ ","^1R",697,"^1S",1173],["^ ","^1R",769,"^1S",1173],["^ ","^1R",852,"^1S",1173],["^ ","^1R",929,"^1S",1173],["^ ","^1R",1030,"^1S",1173,"^G","k__4213__auto__"],["^ ","^1R",0,"^1S",1174],["^ ","^1R",7,"^1S",1174,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",54,"^1S",1174],["^ ","^1R",54,"^1S",1174,"^G","cljs.core/-with-meta"],["^ ","^1R",75,"^1S",1174],["^ ","^1R",75,"^1S",1174,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",120,"^1S",1174],["^ ","^1R",155,"^1S",1174,"^G","this__4212__auto__"],["^ ","^1R",179,"^1S",1174,"^G","__meta"],["^ ","^1R",194,"^1S",1174,"^G","k__4213__auto__"],["^ ","^1R",0,"^1S",1176],["^ ","^1R",38,"^1S",1176,"^G","initial-state"],["^ ","^1R",59,"^1S",1176,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1176,"^G","started-callback"],["^ ","^1R",105,"^1S",1176,"^G","remotes"],["^ ","^1R",120,"^1S",1176,"^G","networking"],["^ ","^1R",138,"^1S",1176,"^G","send-queues"],["^ ","^1R",157,"^1S",1176,"^G","response-channels"],["^ ","^1R",182,"^1S",1176,"^G","reconciler"],["^ ","^1R",200,"^1S",1176,"^G","read-local"],["^ ","^1R",218,"^1S",1176,"^G","query-interpreter"],["^ ","^1R",243,"^1S",1176,"^G","mounted?"],["^ ","^1R",265,"^1S",1176,"^G","reconciler-options"],["^ ","^1R",291,"^1S",1176,"^G","__meta"],["^ ","^1R",305,"^1S",1176],["^ ","^1R",305,"^1S",1176,"^G","cljs.core/not-empty"],["^ ","^1R",325,"^1S",1176],["^ ","^1R",325,"^1S",1176,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",372,"^1S",1176,"^G","__extmap"],["^ ","^1R",388,"^1S",1176,"^G","k__4213__auto__"],["^ ","^1R",406,"^1S",1176],["^ ","^1R",0,"^1S",1180],["^ ","^1R",0,"^1S",1180],["^ ","^1R",0,"^1S",1180],["^ ","^1R",76,"^1S",1180],["^ ","^1R",87,"^1S",1180,"^G","this__4210__auto__"],["^ ","^1R",106,"^1S",1180,"^G","k__4211__auto__"],["^ ","^1R",122,"^1S",1180,"^G","G__43413"],["^ ","^1R",0,"^1S",1182],["^ ","^1R",0,"^1S",1182],["^ ","^1R",4,"^1S",1182,"^G","this__4210__auto__"],["^ ","^1R",29,"^1S",1182],["^ ","^1R",0,"^1S",1183],["^ ","^1R",0,"^1S",1183],["^ ","^1R",4,"^1S",1183,"^G","pred__43458"],["^ ","^1R",18,"^1S",1183,"^G","cljs.core/keyword-identical?"],["^ ","^1R",4,"^1S",1184,"^G","expr__43459"],["^ ","^1R",18,"^1S",1184,"^G","k__4211__auto__"],["^ ","^1R",0,"^1S",1185],["^ ","^1R",0,"^1S",1185],["^ ","^1R",20,"^1S",1185],["^ ","^1R",37,"^1S",1185,"^G","G__43461"],["^ ","^1R",48,"^1S",1185],["^ ","^1R",4,"^1S",1186,"^G","G__43462"],["^ ","^1R",15,"^1S",1186,"^G","expr__43459"],["^ ","^1R",0,"^1S",1187],["^ ","^1R",0,"^1S",1187],["^ ","^1R",8,"^1S",1187,"^G","pred__43458"],["^ ","^1R",52,"^1S",1187,"^G","pred__43458"],["^ ","^1R",94,"^1S",1187,"^G","G__43461"],["^ ","^1R",103,"^1S",1187,"^G","G__43462"],["^ ","^1R",115,"^1S",1187,"^G","pred__43458"],["^ ","^1R",137,"^1S",1187,"^G","G__43461"],["^ ","^1R",146,"^1S",1187,"^G","G__43462"],["^ ","^1R",0,"^1S",1189],["^ ","^1R",38,"^1S",1189,"^G","G__43413"],["^ ","^1R",47,"^1S",1189,"^G","mutation-merge"],["^ ","^1R",69,"^1S",1189,"^G","started-callback"],["^ ","^1R",93,"^1S",1189,"^G","remotes"],["^ ","^1R",108,"^1S",1189,"^G","networking"],["^ ","^1R",126,"^1S",1189,"^G","send-queues"],["^ ","^1R",145,"^1S",1189,"^G","response-channels"],["^ ","^1R",170,"^1S",1189,"^G","reconciler"],["^ ","^1R",188,"^1S",1189,"^G","read-local"],["^ ","^1R",206,"^1S",1189,"^G","query-interpreter"],["^ ","^1R",231,"^1S",1189,"^G","mounted?"],["^ ","^1R",253,"^1S",1189,"^G","reconciler-options"],["^ ","^1R",279,"^1S",1189,"^G","__meta"],["^ ","^1R",293,"^1S",1189,"^G","__extmap"],["^ ","^1R",309,"^1S",1189],["^ ","^1R",0,"^1S",1191],["^ ","^1R",20,"^1S",1191],["^ ","^1R",37,"^1S",1191,"^G","G__43463"],["^ ","^1R",48,"^1S",1191],["^ ","^1R",4,"^1S",1192,"^G","G__43464"],["^ ","^1R",15,"^1S",1192,"^G","expr__43459"],["^ ","^1R",0,"^1S",1193],["^ ","^1R",0,"^1S",1193],["^ ","^1R",8,"^1S",1193,"^G","pred__43458"],["^ ","^1R",52,"^1S",1193,"^G","pred__43458"],["^ ","^1R",94,"^1S",1193,"^G","G__43463"],["^ ","^1R",103,"^1S",1193,"^G","G__43464"],["^ ","^1R",115,"^1S",1193,"^G","pred__43458"],["^ ","^1R",137,"^1S",1193,"^G","G__43463"],["^ ","^1R",146,"^1S",1193,"^G","G__43464"],["^ ","^1R",0,"^1S",1195],["^ ","^1R",38,"^1S",1195,"^G","initial-state"],["^ ","^1R",59,"^1S",1195,"^G","G__43413"],["^ ","^1R",68,"^1S",1195,"^G","started-callback"],["^ ","^1R",92,"^1S",1195,"^G","remotes"],["^ ","^1R",107,"^1S",1195,"^G","networking"],["^ ","^1R",125,"^1S",1195,"^G","send-queues"],["^ ","^1R",144,"^1S",1195,"^G","response-channels"],["^ ","^1R",169,"^1S",1195,"^G","reconciler"],["^ ","^1R",187,"^1S",1195,"^G","read-local"],["^ ","^1R",205,"^1S",1195,"^G","query-interpreter"],["^ ","^1R",230,"^1S",1195,"^G","mounted?"],["^ ","^1R",252,"^1S",1195,"^G","reconciler-options"],["^ ","^1R",278,"^1S",1195,"^G","__meta"],["^ ","^1R",292,"^1S",1195,"^G","__extmap"],["^ ","^1R",308,"^1S",1195],["^ ","^1R",0,"^1S",1197],["^ ","^1R",20,"^1S",1197],["^ ","^1R",37,"^1S",1197,"^G","G__43465"],["^ ","^1R",48,"^1S",1197],["^ ","^1R",4,"^1S",1198,"^G","G__43466"],["^ ","^1R",15,"^1S",1198,"^G","expr__43459"],["^ ","^1R",0,"^1S",1199],["^ ","^1R",0,"^1S",1199],["^ ","^1R",8,"^1S",1199,"^G","pred__43458"],["^ ","^1R",52,"^1S",1199,"^G","pred__43458"],["^ ","^1R",94,"^1S",1199,"^G","G__43465"],["^ ","^1R",103,"^1S",1199,"^G","G__43466"],["^ ","^1R",115,"^1S",1199,"^G","pred__43458"],["^ ","^1R",137,"^1S",1199,"^G","G__43465"],["^ ","^1R",146,"^1S",1199,"^G","G__43466"],["^ ","^1R",0,"^1S",1201],["^ ","^1R",38,"^1S",1201,"^G","initial-state"],["^ ","^1R",59,"^1S",1201,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1201,"^G","G__43413"],["^ ","^1R",90,"^1S",1201,"^G","remotes"],["^ ","^1R",105,"^1S",1201,"^G","networking"],["^ ","^1R",123,"^1S",1201,"^G","send-queues"],["^ ","^1R",142,"^1S",1201,"^G","response-channels"],["^ ","^1R",167,"^1S",1201,"^G","reconciler"],["^ ","^1R",185,"^1S",1201,"^G","read-local"],["^ ","^1R",203,"^1S",1201,"^G","query-interpreter"],["^ ","^1R",228,"^1S",1201,"^G","mounted?"],["^ ","^1R",250,"^1S",1201,"^G","reconciler-options"],["^ ","^1R",276,"^1S",1201,"^G","__meta"],["^ ","^1R",290,"^1S",1201,"^G","__extmap"],["^ ","^1R",306,"^1S",1201],["^ ","^1R",0,"^1S",1203],["^ ","^1R",20,"^1S",1203],["^ ","^1R",37,"^1S",1203,"^G","G__43467"],["^ ","^1R",48,"^1S",1203],["^ ","^1R",4,"^1S",1204,"^G","G__43468"],["^ ","^1R",15,"^1S",1204,"^G","expr__43459"],["^ ","^1R",0,"^1S",1205],["^ ","^1R",0,"^1S",1205],["^ ","^1R",8,"^1S",1205,"^G","pred__43458"],["^ ","^1R",52,"^1S",1205,"^G","pred__43458"],["^ ","^1R",94,"^1S",1205,"^G","G__43467"],["^ ","^1R",103,"^1S",1205,"^G","G__43468"],["^ ","^1R",115,"^1S",1205,"^G","pred__43458"],["^ ","^1R",137,"^1S",1205,"^G","G__43467"],["^ ","^1R",146,"^1S",1205,"^G","G__43468"],["^ ","^1R",0,"^1S",1207],["^ ","^1R",38,"^1S",1207,"^G","initial-state"],["^ ","^1R",59,"^1S",1207,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1207,"^G","started-callback"],["^ ","^1R",105,"^1S",1207,"^G","G__43413"],["^ ","^1R",114,"^1S",1207,"^G","networking"],["^ ","^1R",132,"^1S",1207,"^G","send-queues"],["^ ","^1R",151,"^1S",1207,"^G","response-channels"],["^ ","^1R",176,"^1S",1207,"^G","reconciler"],["^ ","^1R",194,"^1S",1207,"^G","read-local"],["^ ","^1R",212,"^1S",1207,"^G","query-interpreter"],["^ ","^1R",237,"^1S",1207,"^G","mounted?"],["^ ","^1R",259,"^1S",1207,"^G","reconciler-options"],["^ ","^1R",285,"^1S",1207,"^G","__meta"],["^ ","^1R",299,"^1S",1207,"^G","__extmap"],["^ ","^1R",315,"^1S",1207],["^ ","^1R",0,"^1S",1209],["^ ","^1R",20,"^1S",1209],["^ ","^1R",37,"^1S",1209,"^G","G__43469"],["^ ","^1R",48,"^1S",1209],["^ ","^1R",4,"^1S",1210,"^G","G__43470"],["^ ","^1R",15,"^1S",1210,"^G","expr__43459"],["^ ","^1R",0,"^1S",1211],["^ ","^1R",0,"^1S",1211],["^ ","^1R",8,"^1S",1211,"^G","pred__43458"],["^ ","^1R",52,"^1S",1211,"^G","pred__43458"],["^ ","^1R",94,"^1S",1211,"^G","G__43469"],["^ ","^1R",103,"^1S",1211,"^G","G__43470"],["^ ","^1R",115,"^1S",1211,"^G","pred__43458"],["^ ","^1R",137,"^1S",1211,"^G","G__43469"],["^ ","^1R",146,"^1S",1211,"^G","G__43470"],["^ ","^1R",0,"^1S",1213],["^ ","^1R",38,"^1S",1213,"^G","initial-state"],["^ ","^1R",59,"^1S",1213,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1213,"^G","started-callback"],["^ ","^1R",105,"^1S",1213,"^G","remotes"],["^ ","^1R",120,"^1S",1213,"^G","G__43413"],["^ ","^1R",129,"^1S",1213,"^G","send-queues"],["^ ","^1R",148,"^1S",1213,"^G","response-channels"],["^ ","^1R",173,"^1S",1213,"^G","reconciler"],["^ ","^1R",191,"^1S",1213,"^G","read-local"],["^ ","^1R",209,"^1S",1213,"^G","query-interpreter"],["^ ","^1R",234,"^1S",1213,"^G","mounted?"],["^ ","^1R",256,"^1S",1213,"^G","reconciler-options"],["^ ","^1R",282,"^1S",1213,"^G","__meta"],["^ ","^1R",296,"^1S",1213,"^G","__extmap"],["^ ","^1R",312,"^1S",1213],["^ ","^1R",0,"^1S",1215],["^ ","^1R",20,"^1S",1215],["^ ","^1R",37,"^1S",1215,"^G","G__43471"],["^ ","^1R",48,"^1S",1215],["^ ","^1R",4,"^1S",1216,"^G","G__43472"],["^ ","^1R",15,"^1S",1216,"^G","expr__43459"],["^ ","^1R",0,"^1S",1217],["^ ","^1R",0,"^1S",1217],["^ ","^1R",8,"^1S",1217,"^G","pred__43458"],["^ ","^1R",52,"^1S",1217,"^G","pred__43458"],["^ ","^1R",94,"^1S",1217,"^G","G__43471"],["^ ","^1R",103,"^1S",1217,"^G","G__43472"],["^ ","^1R",115,"^1S",1217,"^G","pred__43458"],["^ ","^1R",137,"^1S",1217,"^G","G__43471"],["^ ","^1R",146,"^1S",1217,"^G","G__43472"],["^ ","^1R",0,"^1S",1219],["^ ","^1R",38,"^1S",1219,"^G","initial-state"],["^ ","^1R",59,"^1S",1219,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1219,"^G","started-callback"],["^ ","^1R",105,"^1S",1219,"^G","remotes"],["^ ","^1R",120,"^1S",1219,"^G","networking"],["^ ","^1R",138,"^1S",1219,"^G","G__43413"],["^ ","^1R",147,"^1S",1219,"^G","response-channels"],["^ ","^1R",172,"^1S",1219,"^G","reconciler"],["^ ","^1R",190,"^1S",1219,"^G","read-local"],["^ ","^1R",208,"^1S",1219,"^G","query-interpreter"],["^ ","^1R",233,"^1S",1219,"^G","mounted?"],["^ ","^1R",255,"^1S",1219,"^G","reconciler-options"],["^ ","^1R",281,"^1S",1219,"^G","__meta"],["^ ","^1R",295,"^1S",1219,"^G","__extmap"],["^ ","^1R",311,"^1S",1219],["^ ","^1R",0,"^1S",1221],["^ ","^1R",20,"^1S",1221],["^ ","^1R",37,"^1S",1221,"^G","G__43473"],["^ ","^1R",48,"^1S",1221],["^ ","^1R",4,"^1S",1222,"^G","G__43474"],["^ ","^1R",15,"^1S",1222,"^G","expr__43459"],["^ ","^1R",0,"^1S",1223],["^ ","^1R",0,"^1S",1223],["^ ","^1R",8,"^1S",1223,"^G","pred__43458"],["^ ","^1R",52,"^1S",1223,"^G","pred__43458"],["^ ","^1R",94,"^1S",1223,"^G","G__43473"],["^ ","^1R",103,"^1S",1223,"^G","G__43474"],["^ ","^1R",115,"^1S",1223,"^G","pred__43458"],["^ ","^1R",137,"^1S",1223,"^G","G__43473"],["^ ","^1R",146,"^1S",1223,"^G","G__43474"],["^ ","^1R",0,"^1S",1225],["^ ","^1R",38,"^1S",1225,"^G","initial-state"],["^ ","^1R",59,"^1S",1225,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1225,"^G","started-callback"],["^ ","^1R",105,"^1S",1225,"^G","remotes"],["^ ","^1R",120,"^1S",1225,"^G","networking"],["^ ","^1R",138,"^1S",1225,"^G","send-queues"],["^ ","^1R",157,"^1S",1225,"^G","G__43413"],["^ ","^1R",166,"^1S",1225,"^G","reconciler"],["^ ","^1R",184,"^1S",1225,"^G","read-local"],["^ ","^1R",202,"^1S",1225,"^G","query-interpreter"],["^ ","^1R",227,"^1S",1225,"^G","mounted?"],["^ ","^1R",249,"^1S",1225,"^G","reconciler-options"],["^ ","^1R",275,"^1S",1225,"^G","__meta"],["^ ","^1R",289,"^1S",1225,"^G","__extmap"],["^ ","^1R",305,"^1S",1225],["^ ","^1R",0,"^1S",1227],["^ ","^1R",20,"^1S",1227],["^ ","^1R",37,"^1S",1227,"^G","G__43475"],["^ ","^1R",48,"^1S",1227],["^ ","^1R",4,"^1S",1228,"^G","G__43476"],["^ ","^1R",15,"^1S",1228,"^G","expr__43459"],["^ ","^1R",0,"^1S",1229],["^ ","^1R",0,"^1S",1229],["^ ","^1R",8,"^1S",1229,"^G","pred__43458"],["^ ","^1R",52,"^1S",1229,"^G","pred__43458"],["^ ","^1R",94,"^1S",1229,"^G","G__43475"],["^ ","^1R",103,"^1S",1229,"^G","G__43476"],["^ ","^1R",115,"^1S",1229,"^G","pred__43458"],["^ ","^1R",137,"^1S",1229,"^G","G__43475"],["^ ","^1R",146,"^1S",1229,"^G","G__43476"],["^ ","^1R",0,"^1S",1231],["^ ","^1R",38,"^1S",1231,"^G","initial-state"],["^ ","^1R",59,"^1S",1231,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1231,"^G","started-callback"],["^ ","^1R",105,"^1S",1231,"^G","remotes"],["^ ","^1R",120,"^1S",1231,"^G","networking"],["^ ","^1R",138,"^1S",1231,"^G","send-queues"],["^ ","^1R",157,"^1S",1231,"^G","response-channels"],["^ ","^1R",182,"^1S",1231,"^G","G__43413"],["^ ","^1R",191,"^1S",1231,"^G","read-local"],["^ ","^1R",209,"^1S",1231,"^G","query-interpreter"],["^ ","^1R",234,"^1S",1231,"^G","mounted?"],["^ ","^1R",256,"^1S",1231,"^G","reconciler-options"],["^ ","^1R",282,"^1S",1231,"^G","__meta"],["^ ","^1R",296,"^1S",1231,"^G","__extmap"],["^ ","^1R",312,"^1S",1231],["^ ","^1R",0,"^1S",1233],["^ ","^1R",20,"^1S",1233],["^ ","^1R",37,"^1S",1233,"^G","G__43478"],["^ ","^1R",48,"^1S",1233],["^ ","^1R",4,"^1S",1234,"^G","G__43479"],["^ ","^1R",15,"^1S",1234,"^G","expr__43459"],["^ ","^1R",0,"^1S",1235],["^ ","^1R",0,"^1S",1235],["^ ","^1R",8,"^1S",1235,"^G","pred__43458"],["^ ","^1R",52,"^1S",1235,"^G","pred__43458"],["^ ","^1R",94,"^1S",1235,"^G","G__43478"],["^ ","^1R",103,"^1S",1235,"^G","G__43479"],["^ ","^1R",115,"^1S",1235,"^G","pred__43458"],["^ ","^1R",137,"^1S",1235,"^G","G__43478"],["^ ","^1R",146,"^1S",1235,"^G","G__43479"],["^ ","^1R",0,"^1S",1237],["^ ","^1R",38,"^1S",1237,"^G","initial-state"],["^ ","^1R",59,"^1S",1237,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1237,"^G","started-callback"],["^ ","^1R",105,"^1S",1237,"^G","remotes"],["^ ","^1R",120,"^1S",1237,"^G","networking"],["^ ","^1R",138,"^1S",1237,"^G","send-queues"],["^ ","^1R",157,"^1S",1237,"^G","response-channels"],["^ ","^1R",182,"^1S",1237,"^G","reconciler"],["^ ","^1R",200,"^1S",1237,"^G","G__43413"],["^ ","^1R",209,"^1S",1237,"^G","query-interpreter"],["^ ","^1R",234,"^1S",1237,"^G","mounted?"],["^ ","^1R",256,"^1S",1237,"^G","reconciler-options"],["^ ","^1R",282,"^1S",1237,"^G","__meta"],["^ ","^1R",296,"^1S",1237,"^G","__extmap"],["^ ","^1R",312,"^1S",1237],["^ ","^1R",0,"^1S",1239],["^ ","^1R",20,"^1S",1239],["^ ","^1R",37,"^1S",1239,"^G","G__43481"],["^ ","^1R",48,"^1S",1239],["^ ","^1R",4,"^1S",1240,"^G","G__43482"],["^ ","^1R",15,"^1S",1240,"^G","expr__43459"],["^ ","^1R",0,"^1S",1241],["^ ","^1R",0,"^1S",1241],["^ ","^1R",8,"^1S",1241,"^G","pred__43458"],["^ ","^1R",52,"^1S",1241,"^G","pred__43458"],["^ ","^1R",94,"^1S",1241,"^G","G__43481"],["^ ","^1R",103,"^1S",1241,"^G","G__43482"],["^ ","^1R",115,"^1S",1241,"^G","pred__43458"],["^ ","^1R",137,"^1S",1241,"^G","G__43481"],["^ ","^1R",146,"^1S",1241,"^G","G__43482"],["^ ","^1R",0,"^1S",1243],["^ ","^1R",38,"^1S",1243,"^G","initial-state"],["^ ","^1R",59,"^1S",1243,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1243,"^G","started-callback"],["^ ","^1R",105,"^1S",1243,"^G","remotes"],["^ ","^1R",120,"^1S",1243,"^G","networking"],["^ ","^1R",138,"^1S",1243,"^G","send-queues"],["^ ","^1R",157,"^1S",1243,"^G","response-channels"],["^ ","^1R",182,"^1S",1243,"^G","reconciler"],["^ ","^1R",200,"^1S",1243,"^G","read-local"],["^ ","^1R",218,"^1S",1243,"^G","G__43413"],["^ ","^1R",227,"^1S",1243,"^G","mounted?"],["^ ","^1R",249,"^1S",1243,"^G","reconciler-options"],["^ ","^1R",275,"^1S",1243,"^G","__meta"],["^ ","^1R",289,"^1S",1243,"^G","__extmap"],["^ ","^1R",305,"^1S",1243],["^ ","^1R",0,"^1S",1245],["^ ","^1R",20,"^1S",1245],["^ ","^1R",37,"^1S",1245,"^G","G__43484"],["^ ","^1R",48,"^1S",1245],["^ ","^1R",4,"^1S",1246,"^G","G__43485"],["^ ","^1R",15,"^1S",1246,"^G","expr__43459"],["^ ","^1R",0,"^1S",1247],["^ ","^1R",0,"^1S",1247],["^ ","^1R",8,"^1S",1247,"^G","pred__43458"],["^ ","^1R",52,"^1S",1247,"^G","pred__43458"],["^ ","^1R",94,"^1S",1247,"^G","G__43484"],["^ ","^1R",103,"^1S",1247,"^G","G__43485"],["^ ","^1R",115,"^1S",1247,"^G","pred__43458"],["^ ","^1R",137,"^1S",1247,"^G","G__43484"],["^ ","^1R",146,"^1S",1247,"^G","G__43485"],["^ ","^1R",0,"^1S",1249],["^ ","^1R",38,"^1S",1249,"^G","initial-state"],["^ ","^1R",59,"^1S",1249,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1249,"^G","started-callback"],["^ ","^1R",105,"^1S",1249,"^G","remotes"],["^ ","^1R",120,"^1S",1249,"^G","networking"],["^ ","^1R",138,"^1S",1249,"^G","send-queues"],["^ ","^1R",157,"^1S",1249,"^G","response-channels"],["^ ","^1R",182,"^1S",1249,"^G","reconciler"],["^ ","^1R",200,"^1S",1249,"^G","read-local"],["^ ","^1R",218,"^1S",1249,"^G","query-interpreter"],["^ ","^1R",243,"^1S",1249,"^G","G__43413"],["^ ","^1R",252,"^1S",1249,"^G","reconciler-options"],["^ ","^1R",278,"^1S",1249,"^G","__meta"],["^ ","^1R",292,"^1S",1249,"^G","__extmap"],["^ ","^1R",308,"^1S",1249],["^ ","^1R",0,"^1S",1251],["^ ","^1R",20,"^1S",1251],["^ ","^1R",37,"^1S",1251,"^G","G__43486"],["^ ","^1R",48,"^1S",1251],["^ ","^1R",4,"^1S",1252,"^G","G__43487"],["^ ","^1R",15,"^1S",1252,"^G","expr__43459"],["^ ","^1R",0,"^1S",1253],["^ ","^1R",0,"^1S",1253],["^ ","^1R",8,"^1S",1253,"^G","pred__43458"],["^ ","^1R",52,"^1S",1253,"^G","pred__43458"],["^ ","^1R",94,"^1S",1253,"^G","G__43486"],["^ ","^1R",103,"^1S",1253,"^G","G__43487"],["^ ","^1R",115,"^1S",1253,"^G","pred__43458"],["^ ","^1R",137,"^1S",1253,"^G","G__43486"],["^ ","^1R",146,"^1S",1253,"^G","G__43487"],["^ ","^1R",0,"^1S",1255],["^ ","^1R",38,"^1S",1255,"^G","initial-state"],["^ ","^1R",59,"^1S",1255,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1255,"^G","started-callback"],["^ ","^1R",105,"^1S",1255,"^G","remotes"],["^ ","^1R",120,"^1S",1255,"^G","networking"],["^ ","^1R",138,"^1S",1255,"^G","send-queues"],["^ ","^1R",157,"^1S",1255,"^G","response-channels"],["^ ","^1R",182,"^1S",1255,"^G","reconciler"],["^ ","^1R",200,"^1S",1255,"^G","read-local"],["^ ","^1R",218,"^1S",1255,"^G","query-interpreter"],["^ ","^1R",243,"^1S",1255,"^G","mounted?"],["^ ","^1R",265,"^1S",1255,"^G","G__43413"],["^ ","^1R",274,"^1S",1255,"^G","__meta"],["^ ","^1R",288,"^1S",1255,"^G","__extmap"],["^ ","^1R",304,"^1S",1255],["^ ","^1R",0,"^1S",1257],["^ ","^1R",38,"^1S",1257,"^G","initial-state"],["^ ","^1R",59,"^1S",1257,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1257,"^G","started-callback"],["^ ","^1R",105,"^1S",1257,"^G","remotes"],["^ ","^1R",120,"^1S",1257,"^G","networking"],["^ ","^1R",138,"^1S",1257,"^G","send-queues"],["^ ","^1R",157,"^1S",1257,"^G","response-channels"],["^ ","^1R",182,"^1S",1257,"^G","reconciler"],["^ ","^1R",200,"^1S",1257,"^G","read-local"],["^ ","^1R",218,"^1S",1257,"^G","query-interpreter"],["^ ","^1R",243,"^1S",1257,"^G","mounted?"],["^ ","^1R",265,"^1S",1257,"^G","reconciler-options"],["^ ","^1R",291,"^1S",1257,"^G","__meta"],["^ ","^1R",305,"^1S",1257],["^ ","^1R",305,"^1S",1257,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",351,"^1S",1257,"^G","__extmap"],["^ ","^1R",367,"^1S",1257,"^G","k__4211__auto__"],["^ ","^1R",383,"^1S",1257,"^G","G__43413"],["^ ","^1R",393,"^1S",1257],["^ ","^1R",0,"^1S",1272],["^ ","^1R",0,"^1S",1272],["^ ","^1R",0,"^1S",1272],["^ ","^1R",70,"^1S",1272],["^ ","^1R",81,"^1S",1272,"^G","this__4215__auto__"],["^ ","^1R",0,"^1S",1274],["^ ","^1R",0,"^1S",1274],["^ ","^1R",4,"^1S",1274,"^G","this__4215__auto__"],["^ ","^1R",29,"^1S",1274],["^ ","^1R",0,"^1S",1275],["^ ","^1R",0,"^1S",1275],["^ ","^1R",7,"^1S",1275,"^G","cljs.core/seq"],["^ ","^1R",21,"^1S",1275],["^ ","^1R",21,"^1S",1275,"^G","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",68,"^1S",1275],["^ ","^1R",152,"^1S",1275],["^ ","^1R",157,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",176,"^1S",1275],["^ ","^1R",248,"^1S",1275,"^G","initial-state"],["^ ","^1R",269,"^1S",1275],["^ ","^1R",276,"^1S",1275],["^ ","^1R",281,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",300,"^1S",1275],["^ ","^1R",374,"^1S",1275,"^G","mutation-merge"],["^ ","^1R",396,"^1S",1275],["^ ","^1R",403,"^1S",1275],["^ ","^1R",408,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",427,"^1S",1275],["^ ","^1R",505,"^1S",1275,"^G","started-callback"],["^ ","^1R",529,"^1S",1275],["^ ","^1R",536,"^1S",1275],["^ ","^1R",541,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",560,"^1S",1275],["^ ","^1R",619,"^1S",1275,"^G","remotes"],["^ ","^1R",634,"^1S",1275],["^ ","^1R",641,"^1S",1275],["^ ","^1R",646,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",665,"^1S",1275],["^ ","^1R",729,"^1S",1275,"^G","networking"],["^ ","^1R",747,"^1S",1275],["^ ","^1R",754,"^1S",1275],["^ ","^1R",759,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",778,"^1S",1275],["^ ","^1R",845,"^1S",1275,"^G","send-queues"],["^ ","^1R",864,"^1S",1275],["^ ","^1R",871,"^1S",1275],["^ ","^1R",876,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",895,"^1S",1275],["^ ","^1R",975,"^1S",1275,"^G","response-channels"],["^ ","^1R",1000,"^1S",1275],["^ ","^1R",1007,"^1S",1275],["^ ","^1R",1012,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",1031,"^1S",1275],["^ ","^1R",1097,"^1S",1275,"^G","reconciler"],["^ ","^1R",1115,"^1S",1275],["^ ","^1R",1122,"^1S",1275],["^ ","^1R",1127,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",1146,"^1S",1275],["^ ","^1R",1210,"^1S",1275,"^G","read-local"],["^ ","^1R",1228,"^1S",1275],["^ ","^1R",1235,"^1S",1275],["^ ","^1R",1240,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",1259,"^1S",1275],["^ ","^1R",1338,"^1S",1275,"^G","query-interpreter"],["^ ","^1R",1363,"^1S",1275],["^ ","^1R",1370,"^1S",1275],["^ ","^1R",1375,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",1394,"^1S",1275],["^ ","^1R",1454,"^1S",1275,"^G","mounted?"],["^ ","^1R",1476,"^1S",1275],["^ ","^1R",1483,"^1S",1275],["^ ","^1R",1488,"^1S",1275,"^G","cljs/core.MapEntry"],["^ ","^1R",1507,"^1S",1275],["^ ","^1R",1588,"^1S",1275,"^G","reconciler-options"],["^ ","^1R",1614,"^1S",1275],["^ ","^1R",1629,"^1S",1275,"^G","__extmap"],["^ ","^1R",0,"^1S",1278],["^ ","^1R",0,"^1S",1278],["^ ","^1R",0,"^1S",1278],["^ ","^1R",77,"^1S",1278],["^ ","^1R",88,"^1S",1278,"^G","this__4202__auto__"],["^ ","^1R",107,"^1S",1278,"^G","G__43413"],["^ ","^1R",0,"^1S",1280],["^ ","^1R",0,"^1S",1280],["^ ","^1R",4,"^1S",1280,"^G","this__4202__auto__"],["^ ","^1R",29,"^1S",1280],["^ ","^1R",0,"^1S",1281],["^ ","^1R",0,"^1S",1281],["^ ","^1R",38,"^1S",1281,"^G","initial-state"],["^ ","^1R",59,"^1S",1281,"^G","mutation-merge"],["^ ","^1R",81,"^1S",1281,"^G","started-callback"],["^ ","^1R",105,"^1S",1281,"^G","remotes"],["^ ","^1R",120,"^1S",1281,"^G","networking"],["^ ","^1R",138,"^1S",1281,"^G","send-queues"],["^ ","^1R",157,"^1S",1281,"^G","response-channels"],["^ ","^1R",182,"^1S",1281,"^G","reconciler"],["^ ","^1R",200,"^1S",1281,"^G","read-local"],["^ ","^1R",218,"^1S",1281,"^G","query-interpreter"],["^ ","^1R",243,"^1S",1281,"^G","mounted?"],["^ ","^1R",265,"^1S",1281,"^G","reconciler-options"],["^ ","^1R",291,"^1S",1281,"^G","G__43413"],["^ ","^1R",300,"^1S",1281,"^G","__extmap"],["^ ","^1R",316,"^1S",1281,"^G","__hash"],["^ ","^1R",0,"^1S",1284],["^ ","^1R",0,"^1S",1284],["^ ","^1R",0,"^1S",1284],["^ ","^1R",74,"^1S",1284],["^ ","^1R",85,"^1S",1284,"^G","this__4208__auto__"],["^ ","^1R",104,"^1S",1284,"^G","entry__4209__auto__"],["^ ","^1R",0,"^1S",1286],["^ ","^1R",0,"^1S",1286],["^ ","^1R",4,"^1S",1286,"^G","this__4208__auto__"],["^ ","^1R",29,"^1S",1286],["^ ","^1R",0,"^1S",1287],["^ ","^1R",0,"^1S",1287],["^ ","^1R",3,"^1S",1287],["^ ","^1R",3,"^1S",1287,"^G","cljs.core/vector?"],["^ ","^1R",27,"^1S",1287,"^G","entry__4209__auto__"],["^ ","^1R",0,"^1S",1288],["^ ","^1R",7,"^1S",1288,"^G","cljs.core/-assoc"],["^ ","^1R",24,"^1S",1288,"^G","this__4208__auto__"],["^ ","^1R",47,"^1S",1288],["^ ","^1R",47,"^1S",1288,"^G","cljs.core._nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",92,"^1S",1288,"^G","entry__4209__auto__"],["^ ","^1R",112,"^1S",1288],["^ ","^1R",117,"^1S",1288],["^ ","^1R",117,"^1S",1288,"^G","cljs.core._nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",162,"^1S",1288,"^G","entry__4209__auto__"],["^ ","^1R",182,"^1S",1288],["^ ","^1R",0,"^1S",1290],["^ ","^1R",7,"^1S",1290,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",54,"^1S",1290,"^G","cljs.core/-conj"],["^ ","^1R",70,"^1S",1290,"^G","this__4208__auto__"],["^ ","^1R",93,"^1S",1290,"^G","entry__4209__auto__"],["^ ","^1R",0,"^1S",1294],["^ ","^1R",0,"^1S",1294],["^ ","^1R",0,"^1S",1294,"^G","fulcro.client/Application"],["^ ","^1R",37,"^1S",1294],["^ ","^1R",0,"^1S",1295],["^ ","^1R",0,"^1S",1295],["^ ","^1R",91,"^1S",1295],["^ ","^1R",166,"^1S",1295],["^ ","^1R",243,"^1S",1295],["^ ","^1R",324,"^1S",1295],["^ ","^1R",388,"^1S",1295],["^ ","^1R",458,"^1S",1295],["^ ","^1R",529,"^1S",1295],["^ ","^1R",612,"^1S",1295],["^ ","^1R",681,"^1S",1295],["^ ","^1R",751,"^1S",1295],["^ ","^1R",833,"^1S",1295],["^ ","^1R",899,"^1S",1295],["^ ","^1R",0,"^1S",1298],["^ ","^1R",0,"^1S",1298],["^ ","^1R",0,"^1S",1298,"^G","fulcro.client/Application"],["^ ","^1R",43,"^1S",1298],["^ ","^1R",0,"^1S",1300],["^ ","^1R",0,"^1S",1300],["^ ","^1R",0,"^1S",1300,"^G","fulcro.client/Application"],["^ ","^1R",48,"^1S",1300],["^ ","^1R",59,"^1S",1300,"^G","this__4240__auto__"],["^ ","^1R",0,"^1S",1301],["^ ","^1R",0,"^1S",1301],["^ ","^1R",12,"^1S",1301,"^G","cljs.core/List"],["^ ","^1R",27,"^1S",1301],["^ ","^1R",32,"^1S",1301],["^ ","^1R",60,"^1S",1301],["^ ","^1R",65,"^1S",1301],["^ ","^1R",69,"^1S",1301],["^ ","^1R",0,"^1S",1304],["^ ","^1R",0,"^1S",1304],["^ ","^1R",0,"^1S",1304,"^G","fulcro.client/Application"],["^ ","^1R",51,"^1S",1304],["^ ","^1R",62,"^1S",1304,"^G","this__4240__auto__"],["^ ","^1R",81,"^1S",1304,"^G","writer__4241__auto__"],["^ ","^1R",0,"^1S",1305],["^ ","^1R",0,"^1S",1305],["^ ","^1R",7,"^1S",1305,"^G","cljs.core/-write"],["^ ","^1R",24,"^1S",1305,"^G","writer__4241__auto__"],["^ ","^1R",45,"^1S",1305],["^ ","^1R",0,"^1S",1308],["^ ","^1R",33,"^1S",1311],["^ ","^1R",0,"^1S",1312],["^ ","^1R",0,"^1S",1312],["^ ","^1R",12,"^1S",1312,"^G","fulcro.client/Application"],["^ ","^1R",207,"^1S",1312],["^ ","^1R",212,"^1S",1312],["^ ","^1R",217,"^1S",1312],["^ ","^1R",0,"^1S",1315],["^ ","^1R",36,"^1S",1318],["^ ","^1R",80,"^1S",1318,"^G","G__43423"],["^ ","^1R",0,"^1S",1319],["^ ","^1R",0,"^1S",1319],["^ ","^1R",4,"^1S",1319,"^G","extmap__4236__auto__"],["^ ","^1R",27,"^1S",1319],["^ ","^1R",44,"^1S",1319,"^G","G__43496"],["^ ","^1R",55,"^1S",1319],["^ ","^1R",55,"^1S",1319,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1R",109,"^1S",1319,"^G","G__43423"],["^ ","^1R",118,"^1S",1319],["^ ","^1R",240,"^1S",1319],["^ ","^1R",314,"^1S",1319],["^ ","^1R",392,"^1S",1319],["^ ","^1R",451,"^1S",1319],["^ ","^1R",515,"^1S",1319],["^ ","^1R",582,"^1S",1319],["^ ","^1R",662,"^1S",1319],["^ ","^1R",728,"^1S",1319],["^ ","^1R",792,"^1S",1319],["^ ","^1R",871,"^1S",1319],["^ ","^1R",931,"^1S",1319],["^ ","^1R",0,"^1S",1320],["^ ","^1R",0,"^1S",1320],["^ ","^1R",3,"^1S",1320],["^ ","^1R",3,"^1S",1320,"^G","cljs.core/record?"],["^ ","^1R",27,"^1S",1320,"^G","G__43423"],["^ ","^1R",0,"^1S",1321],["^ ","^1R",7,"^1S",1321,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",52,"^1S",1321],["^ ","^1R",87,"^1S",1321,"^G","G__43496"],["^ ","^1R",0,"^1S",1323,"^G","G__43496"],["^ ","^1R",0,"^1S",1326],["^ ","^1R",0,"^1S",1326],["^ ","^1R",12,"^1S",1326,"^G","fulcro.client/Application"],["^ ","^1R",38,"^1S",1326],["^ ","^1R",38,"^1S",1326],["^ ","^1R",140,"^1S",1326,"^G","G__43423"],["^ ","^1R",150,"^1S",1326],["^ ","^1R",150,"^1S",1326],["^ ","^1R",254,"^1S",1326,"^G","G__43423"],["^ ","^1R",264,"^1S",1326],["^ ","^1R",264,"^1S",1326],["^ ","^1R",372,"^1S",1326,"^G","G__43423"],["^ ","^1R",382,"^1S",1326],["^ ","^1R",382,"^1S",1326],["^ ","^1R",471,"^1S",1326,"^G","G__43423"],["^ ","^1R",481,"^1S",1326],["^ ","^1R",481,"^1S",1326],["^ ","^1R",575,"^1S",1326,"^G","G__43423"],["^ ","^1R",585,"^1S",1326],["^ ","^1R",585,"^1S",1326],["^ ","^1R",682,"^1S",1326,"^G","G__43423"],["^ ","^1R",692,"^1S",1326],["^ ","^1R",692,"^1S",1326],["^ ","^1R",802,"^1S",1326,"^G","G__43423"],["^ ","^1R",812,"^1S",1326],["^ ","^1R",812,"^1S",1326],["^ ","^1R",908,"^1S",1326,"^G","G__43423"],["^ ","^1R",918,"^1S",1326],["^ ","^1R",918,"^1S",1326],["^ ","^1R",1012,"^1S",1326,"^G","G__43423"],["^ ","^1R",1022,"^1S",1326],["^ ","^1R",1022,"^1S",1326],["^ ","^1R",1131,"^1S",1326,"^G","G__43423"],["^ ","^1R",1141,"^1S",1326],["^ ","^1R",1141,"^1S",1326],["^ ","^1R",1231,"^1S",1326,"^G","G__43423"],["^ ","^1R",1241,"^1S",1326],["^ ","^1R",1241,"^1S",1326],["^ ","^1R",1352,"^1S",1326,"^G","G__43423"],["^ ","^1R",1362,"^1S",1326],["^ ","^1R",1367,"^1S",1326],["^ ","^1R",1367,"^1S",1326,"^G","cljs.core/not-empty"],["^ ","^1R",1387,"^1S",1326,"^G","extmap__4236__auto__"],["^ ","^1R",1409,"^1S",1326],["^ ","^1R",0,"^1S",1329,"^G","fulcro.client/Application"]],"^2L",[["^ ","^1R",0,"^1S",833,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",839,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",899,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",910,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",916,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",922,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",925,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",928,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",934,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",954,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",960,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",962,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",968,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",974,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",1018,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",1080,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",1152,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",1158,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",1164,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",1170,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1176,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",1180,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1189,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1195,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1201,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1207,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1213,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1219,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1225,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1231,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1237,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1243,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1249,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1255,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1257,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",1272,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",1278,"^G","fulcro.client/Application"],["^ ","^1R",12,"^1S",1281,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",1284,"^G","fulcro.client/Application"],["^ ","^1R",0,"^1S",1311,"^G","fulcro.client/->Application"],["^ ","^1R",0,"^1S",1318,"^G","fulcro.client/map->Application"]],"^1X",[["^ ","^1R",74,"^1S",1311,"^G","initial-state"],["^ ","^1R",38,"^1S",1312,"^G","initial-state"]],"^4Z",[["^ ","^1R",88,"^1S",1311,"^G","mutation-merge"],["^ ","^1R",52,"^1S",1312,"^G","mutation-merge"]],"^2N",[["^ ","^1R",103,"^1S",1311,"^G","started-callback"],["^ ","^1R",67,"^1S",1312,"^G","started-callback"]],"^2P",[["^ ","^1R",120,"^1S",1311,"^G","remotes"],["^ ","^1R",84,"^1S",1312,"^G","remotes"]],"^3J",[["^ ","^1R",128,"^1S",1311,"^G","networking"],["^ ","^1R",92,"^1S",1312,"^G","networking"]],"^3E",[["^ ","^1R",139,"^1S",1311,"^G","send-queues"],["^ ","^1R",103,"^1S",1312,"^G","send-queues"]]],"~i283",["^ ","^1X",[["^ ","^1R",151,"^1S",1311,"^G","response-channels"],["^ ","^1R",115,"^1S",1312,"^G","response-channels"]],"^3D",[["^ ","^1R",169,"^1S",1311,"^G","reconciler"],["^ ","^1R",133,"^1S",1312,"^G","reconciler"]],"^2N",[["^ ","^1R",180,"^1S",1311,"^G","read-local"],["^ ","^1R",144,"^1S",1312,"^G","read-local"]],"^32",[["^ ","^1R",191,"^1S",1311,"^G","query-interpreter"],["^ ","^1R",155,"^1S",1312,"^G","query-interpreter"]],"^2Q",[["^ ","^1R",209,"^1S",1311,"^G","mounted?"],["^ ","^1R",173,"^1S",1312,"^G","mounted?"]],"^3:",[["^ ","^1R",224,"^1S",1311,"^G","reconciler-options"],["^ ","^1R",188,"^1S",1312,"^G","reconciler-options"]]],"~i285",["^ ","^4>",[["^ ","^1R",95,"^1S",962,"^G","this"],["^ ","^1R",4,"^1S",964,"^G","this"]],"^2M",[["^ ","^1R",101,"^1S",962,"^G","root-component"]],"^28",[["^ ","^1R",116,"^1S",962,"^G","dom-id-or-node"]],"^21",[["^ ","^1R",0,"^1S",965]],"^2G",[["^ ","^1R",7,"^1S",965,"^G","fulcro.client/mount*"]],"^2O",[["^ ","^1R",33,"^1S",965,"^G","this"]],"^2V",[["^ ","^1R",43,"^1S",965,"^G","root-component"]],"^49",[["^ ","^1R",58,"^1S",965,"^G","dom-id-or-node"]]],"~i287",["^ ","^1W",[["^ ","^1R",107,"^1S",968,"^G","this"],["^ ","^1R",4,"^1S",970,"^G","this"]],"^1U",[["^ ","^1R",113,"^1S",968,"^G","new-state"]],"^1Y",[["^ ","^1R",0,"^1S",971]],"^20",[["^ ","^1R",7,"^1S",971,"^G","cljs.core/reset!"]],"^31",[["^ ","^1R",29,"^1S",971]],"^3D",[["^ ","^1R",29,"^1S",971,"^G","fulcro.client.primitives/app-state"]],"^26",[["^ ","^1R",64,"^1S",971,"^G","reconciler"]],"^33",[["^ ","^1R",83,"^1S",971,"^G","new-state"]]],"~i289",["^ ","^2M",[["^ ","^1R",105,"^1S",974,"^G","this"],["^ ","^1R",4,"^1S",976,"^G","this"]],"^2?",[["^ ","^1R",111,"^1S",974,"^G","root-component"]],"^2@",[["^ ","^1R",126,"^1S",974,"^G","callback"]]],"~i290",["^ ","~i4",[["^ ","^1R",0,"^1S",977]],"~i8",[["^ ","^1R",3,"^1S",977]],"^3@",[["^ ","^1R",5,"^1S",977]],"^30",[["^ ","^1R",5,"^1S",977,"^G","fulcro.client.primitives/has-initial-app-state?"]],"^3D",[["^ ","^1R",59,"^1S",977,"^G","root-component"]]],"~i291",["^ ","~i6",[["^ ","^1R",0,"^1S",978],["^ ","^1R",4,"^1S",978],["^ ","^1R",4,"^1S",978],["^ ","^1R",11,"^1S",978,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1R",68,"^1S",978],["^ ","^1R",111,"^1S",978],["^ ","^1R",165,"^1S",978],["^ ","^1R",181,"^1S",978],["^ ","^1R",233,"^1S",978],["^ ","^1R",245,"^1S",978],["^ ","^1R",350,"^1S",978],["^ ","^1R",16,"^1S",979],["^ ","^1R",19,"^1S",979],["^ ","^1R",20,"^1S",979,"^G","e43437"],["^ ","^1R",38,"^1S",979,"^G","js/Error"],["^ ","^1R",0,"^1S",980],["^ ","^1R",4,"^1S",980,"^G","e__31527__auto__"],["^ ","^1R",23,"^1S",980,"^G","e43437"],["^ ","^1R",0,"^1S",981],["^ ","^1R",0,"^1S",981],["^ ","^1R",7,"^1S",981,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1R",64,"^1S",981],["^ ","^1R",107,"^1S",981],["^ ","^1R",161,"^1S",981],["^ ","^1R",177,"^1S",981],["^ ","^1R",229,"^1S",981],["^ ","^1R",241,"^1S",981],["^ ","^1R",346,"^1S",981],["^ ","^1R",399,"^1S",981,"^G","e__31527__auto__"],["^ ","^1R",0,"^1S",983],["^ ","^1R",0,"^1S",983],["^ ","^1R",6,"^1S",983,"^G","e43437"]]],"~i292",["^ ","~i6",[["^ ","^1R",0,"^1S",987],["^ ","^1R",0,"^1S",988]],"^2Z",[["^ ","^1R",4,"^1S",987,"^G","base-state"]],"^1Q",[["^ ","^1R",17,"^1S",987],["^ ","^1R",159,"^1S",987]],"^1X",[["^ ","^1R",17,"^1S",987,"^G","fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3"]],"^4Z",[["^ ","^1R",84,"^1S",987,"^G","root-component"]],"^2N",[["^ ","^1R",99,"^1S",987],["^ ","^1R",153,"^1S",987]],"^2O",[["^ ","^1R",99,"^1S",987,"^G","fulcro.client.primitives/initial-state"]],"~i93",[["^ ","^1R",138,"^1S",987,"^G","root-component"]]],"~i293",["^ ","~i8",[["^ ","^1R",0,"^1S",988],["^ ","^1R",60,"^1S",988]],"~i9",[["^ ","^1R",0,"^1S",988,"^G","fulcro.client/clear-pending-remote-requests!"]],"^25",[["^ ","^1R",50,"^1S",988,"^G","this"]]],"~i294",["^ ","~i8",[["^ ","^1R",0,"^1S",990]],"~i9",[["^ ","^1R",0,"^1S",990,"^G","cljs.core/reset!"]],"^2U",[["^ ","^1R",22,"^1S",990]],"^1W",[["^ ","^1R",22,"^1S",990,"^G","fulcro.client.primitives/app-state"]],"^2>",[["^ ","^1R",57,"^1S",990,"^G","reconciler"]],"^2C",[["^ ","^1R",76,"^1S",990,"^G","base-state"]]],"~i295",["^ ","~i8",[["^ ","^1R",0,"^1S",992]],"~i9",[["^ ","^1R",0,"^1S",992,"^G","fulcro.client/reset-history!"]],"^1X",[["^ ","^1R",34,"^1S",992,"^G","this"]]],"~i296",["^ ","~i8",[["^ ","^1R",0,"^1S",994]],"~i9",[["^ ","^1R",1,"^1S",994,"^G","fulcro.client/merge-alternate-union-elements!"],["^ ","^1R",84,"^1S",994,"^G","fulcro.client/merge-alternate-union-elements!"],["^ ","^1R",193,"^1S",994,"^G","fulcro.client/merge-alternate-union-elements!"]],"^31",[["^ ","^1R",165,"^1S",994,"^G","this"],["^ ","^1R",254,"^1S",994,"^G","this"]],"^21",[["^ ","^1R",175,"^1S",994,"^G","root-component"],["^ ","^1R",264,"^1S",994,"^G","root-component"]]],"~i297",["^ ","~i8",[["^ ","^1R",0,"^1S",996],["^ ","^1R",4,"^1S",996],["^ ","^1R",4,"^1S",996],["^ ","^1R",4,"^1S",996,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1R",61,"^1S",996],["^ ","^1R",104,"^1S",996],["^ ","^1R",158,"^1S",996],["^ ","^1R",174,"^1S",996],["^ ","^1R",226,"^1S",996],["^ ","^1R",238,"^1S",996],["^ ","^1R",341,"^1S",996],["^ ","^1R",16,"^1S",997],["^ ","^1R",19,"^1S",997],["^ ","^1R",20,"^1S",997,"^G","e43440"],["^ ","^1R",38,"^1S",997,"^G","js/Error"],["^ ","^1R",0,"^1S",998],["^ ","^1R",4,"^1S",998,"^G","e__31527__auto__"],["^ ","^1R",29,"^1S",998,"^G","e43440"],["^ ","^1R",0,"^1S",999],["^ ","^1R",0,"^1S",999],["^ ","^1R",0,"^1S",999,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1R",57,"^1S",999],["^ ","^1R",100,"^1S",999],["^ ","^1R",154,"^1S",999],["^ ","^1R",170,"^1S",999],["^ ","^1R",222,"^1S",999],["^ ","^1R",234,"^1S",999],["^ ","^1R",337,"^1S",999],["^ ","^1R",390,"^1S",999,"^G","e__31527__auto__"],["^ ","^1R",0,"^1S",1001],["^ ","^1R",0,"^1S",1001],["^ ","^1R",6,"^1S",1001,"^G","e43440"]],"^2J",[["^ ","^1R",374,"^1S",996]],"^2K",[["^ ","^1R",374,"^1S",996,"^G","fulcro.client.primitives/app-state"]],"^36",[["^ ","^1R",409,"^1S",996,"^G","reconciler"]]],"~i298",["^ ","~i8",[["^ ","^1R",0,"^1S",1005],["^ ","^1R",0,"^1S",1008],["^ ","^1R",0,"^1S",1011]]],"~i299",["^ ","^4>",[["^ ","^1R",3,"^1S",1005],["^ ","^1R",57,"^1S",1005]],"^2L",[["^ ","^1R",3,"^1S",1005,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3@",[["^ ","^1R",48,"^1S",1005,"^G","callback"]],"^1Y",[["^ ","^1R",0,"^1S",1006]],"^20",[["^ ","^1R",1,"^1S",1006,"^G","started-callback"],["^ ","^1R",57,"^1S",1006,"^G","started-callback"],["^ ","^1R",124,"^1S",1006,"^G","started-callback"]],"^2J",[["^ ","^1R",111,"^1S",1006,"^G","this"],["^ ","^1R",158,"^1S",1006,"^G","this"]]],"~i300",["^ ","^4>",[["^ ","^1R",20,"^1S",1008,"^G","callback"]],"^1[",[["^ ","^1R",0,"^1S",1009]],"^2?",[["^ ","^1R",1,"^1S",1009,"^G","callback"],["^ ","^1R",42,"^1S",1009,"^G","callback"],["^ ","^1R",94,"^1S",1009,"^G","callback"]],"^24",[["^ ","^1R",81,"^1S",1009,"^G","this"],["^ ","^1R",113,"^1S",1009,"^G","this"]]],"~i301",["^ ","~i8",[["^ ","^1R",0,"^1S",1014]],"~i9",[["^ ","^1R",7,"^1S",1014,"^G","fulcro.client/refresh"]],"^1W",[["^ ","^1R",29,"^1S",1014,"^G","this"]]],"~i303",["^ ","^2@",[["^ ","^1R",125,"^1S",1018,"^G","this"],["^ ","^1R",4,"^1S",1020,"^G","this"]],"^25",[["^ ","^1R",131,"^1S",1018,"^G","remotes"]]],"~i304",["^ ","~i4",[["^ ","^1R",0,"^1S",1021],["^ ","^1R",0,"^1S",1023]],"^4>",[["^ ","^1R",4,"^1S",1021,"^G","remotes"]],"^2R",[["^ ","^1R",18,"^1S",1021],["^ ","^1R",78,"^1S",1021],["^ ","^1R",124,"^1S",1021],["^ ","^1R",227,"^1S",1021]]],"~i305",["^ ","^2?",[["^ ","^1R",20,"^1S",1021],["^ ","^1R",36,"^1S",1021]],"^2H",[["^ ","^1R",21,"^1S",1021,"^G","remotes"]],"^2@",[["^ ","^1R",43,"^1S",1021]],"^2:",[["^ ","^1R",43,"^1S",1021,"^G","cljs.core/keys"]],"^31",[["^ ","^1R",58,"^1S",1021,"^G","send-queues"]]],"~i306",["^ ","^2?",[["^ ","^1R",80,"^1S",1021],["^ ","^1R",104,"^1S",1021,"^G","cljs.core/Keyword"]],"^28",[["^ ","^1R",81,"^1S",1021,"^G","remotes"]],"^25",[["^ ","^1R",207,"^1S",1021,"^G","remotes"]]],"~i307",["^ ","^2H",[["^ ","^1R",227,"^1S",1021,"^G","remotes"]]],"~i308",["^ ","~i6",[["^ ","^1R",0,"^1S",1023],["^ ","^1R",4,"^1S",1023,"^G","seq__43442"],["^ ","^1R",17,"^1S",1023],["^ ","^1R",17,"^1S",1023,"^G","cljs.core/seq"],["^ ","^1R",4,"^1S",1024,"^G","chunk__43443"],["^ ","^1R",19,"^1S",1024],["^ ","^1R",4,"^1S",1025,"^G","count__43444"],["^ ","^1R",19,"^1S",1025],["^ ","^1R",4,"^1S",1026,"^G","i__43445"],["^ ","^1R",15,"^1S",1026],["^ ","^1R",0,"^1S",1028],["^ ","^1R",0,"^1S",1028],["^ ","^1R",3,"^1S",1028],["^ ","^1R",3,"^1S",1028],["^ ","^1R",4,"^1S",1028,"^G","i__43445"],["^ ","^1R",15,"^1S",1028,"^G","count__43444"],["^ ","^1R",0,"^1S",1029],["^ ","^1R",8,"^1S",1029],["^ ","^1R",8,"^1S",1029,"^G","chunk__43443"],["^ ","^1R",58,"^1S",1029,"^G","i__43445"],["^ ","^1R",0,"^1S",1030],["^ ","^1R",0,"^1S",1030],["^ ","^1R",0,"^1S",1032],["^ ","^1R",0,"^1S",1033],["^ ","^1R",15,"^1S",1033,"^G","seq__43442"],["^ ","^1R",15,"^1S",1034,"^G","chunk__43443"],["^ ","^1R",15,"^1S",1035,"^G","count__43444"],["^ ","^1R",15,"^1S",1036],["^ ","^1R",16,"^1S",1036,"^G","i__43445"],["^ ","^1R",27,"^1S",1036],["^ ","^1R",0,"^1S",1043],["^ ","^1R",4,"^1S",1043,"^G","temp__5457__auto__"],["^ ","^1R",25,"^1S",1043],["^ ","^1R",25,"^1S",1043,"^G","cljs.core/seq"],["^ ","^1R",39,"^1S",1043,"^G","seq__43442"],["^ ","^1R",0,"^1S",1044],["^ ","^1R",0,"^1S",1044],["^ ","^1R",3,"^1S",1044,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",1045],["^ ","^1R",0,"^1S",1045],["^ ","^1R",4,"^1S",1045,"^G","seq__43442"],["^ ","^1R",21,"^1S",1045,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",1046],["^ ","^1R",0,"^1S",1046],["^ ","^1R",3,"^1S",1046],["^ ","^1R",3,"^1S",1046,"^G","cljs.core/chunked-seq?"],["^ ","^1R",32,"^1S",1046,"^G","seq__43442"],["^ ","^1R",0,"^1S",1047],["^ ","^1R",4,"^1S",1047,"^G","c__4351__auto__"],["^ ","^1R",22,"^1S",1047],["^ ","^1R",22,"^1S",1047,"^G","cljs.core/chunk-first"],["^ ","^1R",44,"^1S",1047,"^G","seq__43442"],["^ ","^1R",0,"^1S",1048],["^ ","^1R",0,"^1S",1048],["^ ","^1R",15,"^1S",1048],["^ ","^1R",15,"^1S",1048,"^G","cljs.core/chunk-rest"],["^ ","^1R",36,"^1S",1048,"^G","seq__43442"],["^ ","^1R",15,"^1S",1049,"^G","c__4351__auto__"],["^ ","^1R",15,"^1S",1050],["^ ","^1R",15,"^1S",1050,"^G","cljs.core/count"],["^ ","^1R",31,"^1S",1050,"^G","c__4351__auto__"],["^ ","^1R",15,"^1S",1051],["^ ","^1R",0,"^1S",1058],["^ ","^1R",8,"^1S",1058],["^ ","^1R",8,"^1S",1058,"^G","cljs.core/first"],["^ ","^1R",24,"^1S",1058,"^G","seq__43442"],["^ ","^1R",0,"^1S",1059],["^ ","^1R",0,"^1S",1059],["^ ","^1R",0,"^1S",1061],["^ ","^1R",0,"^1S",1062],["^ ","^1R",15,"^1S",1062],["^ ","^1R",15,"^1S",1062,"^G","cljs.core/next"],["^ ","^1R",30,"^1S",1062,"^G","seq__43442"],["^ ","^1R",15,"^1S",1063],["^ ","^1R",15,"^1S",1064],["^ ","^1R",15,"^1S",1065],["^ ","^1R",0,"^1S",1073]],"^30",[["^ ","^1R",4,"^1S",1029,"^G","r"],["^ ","^1R",4,"^1S",1058,"^G","r"]],"^2U",[["^ ","^1R",31,"^1S",1023,"^G","remotes"]]],"~i309",["^ ","~i8",[["^ ","^1R",0,"^1S",1030],["^ ","^1R",0,"^1S",1059]],"~i9",[["^ ","^1R",0,"^1S",1030,"^G","fulcro.client/clear-queue"],["^ ","^1R",0,"^1S",1059,"^G","fulcro.client/clear-queue"]],"^29",[["^ ","^1R",26,"^1S",1030],["^ ","^1R",26,"^1S",1059]],"^1U",[["^ ","^1R",26,"^1S",1030,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",26,"^1S",1059,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2H",[["^ ","^1R",70,"^1S",1030,"^G","send-queues"],["^ ","^1R",70,"^1S",1059,"^G","send-queues"]],"^4Z",[["^ ","^1R",89,"^1S",1030,"^G","r"],["^ ","^1R",89,"^1S",1059,"^G","r"]]],"~i311",["^ ","^1[",[["^ ","^1R",109,"^1S",1080,"^G","this"],["^ ","^1R",4,"^1S",1082,"^G","this"]],"^1X",[["^ ","^1R",115,"^1S",1080,"^G","abort-id"]]],"~i313",["^ ","~i7",[["^ ","^1R",0,"^1S",1083],["^ ","^1R",4,"^1S",1083,"^G","seq__43448"],["^ ","^1R",17,"^1S",1083],["^ ","^1R",17,"^1S",1083,"^G","cljs.core/seq"],["^ ","^1R",4,"^1S",1084,"^G","chunk__43449"],["^ ","^1R",19,"^1S",1084],["^ ","^1R",4,"^1S",1085,"^G","count__43450"],["^ ","^1R",19,"^1S",1085],["^ ","^1R",4,"^1S",1086,"^G","i__43451"],["^ ","^1R",15,"^1S",1086],["^ ","^1R",0,"^1S",1088],["^ ","^1R",0,"^1S",1088],["^ ","^1R",3,"^1S",1088],["^ ","^1R",3,"^1S",1088],["^ ","^1R",4,"^1S",1088,"^G","i__43451"],["^ ","^1R",15,"^1S",1088,"^G","count__43450"],["^ ","^1R",0,"^1S",1089],["^ ","^1R",8,"^1S",1089],["^ ","^1R",8,"^1S",1089,"^G","chunk__43449"],["^ ","^1R",58,"^1S",1089,"^G","i__43451"],["^ ","^1R",0,"^1S",1090],["^ ","^1R",0,"^1S",1090],["^ ","^1R",0,"^1S",1098],["^ ","^1R",0,"^1S",1099],["^ ","^1R",15,"^1S",1099,"^G","seq__43448"],["^ ","^1R",15,"^1S",1100,"^G","chunk__43449"],["^ ","^1R",15,"^1S",1101,"^G","count__43450"],["^ ","^1R",15,"^1S",1102],["^ ","^1R",16,"^1S",1102,"^G","i__43451"],["^ ","^1R",27,"^1S",1102],["^ ","^1R",0,"^1S",1109],["^ ","^1R",4,"^1S",1109,"^G","temp__5457__auto__"],["^ ","^1R",25,"^1S",1109],["^ ","^1R",25,"^1S",1109,"^G","cljs.core/seq"],["^ ","^1R",39,"^1S",1109,"^G","seq__43448"],["^ ","^1R",0,"^1S",1110],["^ ","^1R",0,"^1S",1110],["^ ","^1R",3,"^1S",1110,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",1111],["^ ","^1R",0,"^1S",1111],["^ ","^1R",4,"^1S",1111,"^G","seq__43448"],["^ ","^1R",21,"^1S",1111,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",1112],["^ ","^1R",0,"^1S",1112],["^ ","^1R",3,"^1S",1112],["^ ","^1R",3,"^1S",1112,"^G","cljs.core/chunked-seq?"],["^ ","^1R",32,"^1S",1112,"^G","seq__43448"],["^ ","^1R",0,"^1S",1113],["^ ","^1R",4,"^1S",1113,"^G","c__4351__auto__"],["^ ","^1R",22,"^1S",1113],["^ ","^1R",22,"^1S",1113,"^G","cljs.core/chunk-first"],["^ ","^1R",44,"^1S",1113,"^G","seq__43448"],["^ ","^1R",0,"^1S",1114],["^ ","^1R",0,"^1S",1114],["^ ","^1R",15,"^1S",1114],["^ ","^1R",15,"^1S",1114,"^G","cljs.core/chunk-rest"],["^ ","^1R",36,"^1S",1114,"^G","seq__43448"],["^ ","^1R",15,"^1S",1115,"^G","c__4351__auto__"],["^ ","^1R",15,"^1S",1116],["^ ","^1R",15,"^1S",1116,"^G","cljs.core/count"],["^ ","^1R",31,"^1S",1116,"^G","c__4351__auto__"],["^ ","^1R",15,"^1S",1117],["^ ","^1R",0,"^1S",1124],["^ ","^1R",8,"^1S",1124],["^ ","^1R",8,"^1S",1124,"^G","cljs.core/first"],["^ ","^1R",24,"^1S",1124,"^G","seq__43448"],["^ ","^1R",0,"^1S",1125],["^ ","^1R",0,"^1S",1125],["^ ","^1R",0,"^1S",1133],["^ ","^1R",0,"^1S",1134],["^ ","^1R",15,"^1S",1134],["^ ","^1R",15,"^1S",1134,"^G","cljs.core/next"],["^ ","^1R",30,"^1S",1134,"^G","seq__43448"],["^ ","^1R",15,"^1S",1135],["^ ","^1R",15,"^1S",1136],["^ ","^1R",15,"^1S",1137],["^ ","^1R",0,"^1S",1145]],"^2M",[["^ ","^1R",4,"^1S",1089,"^G","r"],["^ ","^1R",4,"^1S",1124,"^G","r"]],"^1W",[["^ ","^1R",31,"^1S",1083]],"^2R",[["^ ","^1R",31,"^1S",1083,"^G","cljs.core/keys"]],"^1Q",[["^ ","^1R",46,"^1S",1083,"^G","networking"]]],"~i314",["^ ","~i9",[["^ ","^1R",0,"^1S",1090],["^ ","^1R",0,"^1S",1091],["^ ","^1R",0,"^1S",1125],["^ ","^1R",0,"^1S",1126]],"^2M",[["^ ","^1R",4,"^1S",1090,"^G","remote-net"],["^ ","^1R",4,"^1S",1125,"^G","remote-net"]],"^2H",[["^ ","^1R",23,"^1S",1090],["^ ","^1R",23,"^1S",1125]],"^1V",[["^ ","^1R",23,"^1S",1090,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",23,"^1S",1125,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2=",[["^ ","^1R",67,"^1S",1090,"^G","networking"],["^ ","^1R",67,"^1S",1125,"^G","networking"]],"^3D",[["^ ","^1R",85,"^1S",1090,"^G","r"],["^ ","^1R",85,"^1S",1125,"^G","r"]]],"~i315",["^ ","^2L",[["^ ","^1R",0,"^1S",1091],["^ ","^1R",0,"^1S",1092],["^ ","^1R",0,"^1S",1096],["^ ","^1R",0,"^1S",1126],["^ ","^1R",0,"^1S",1127],["^ ","^1R",0,"^1S",1131]],"^1W",[["^ ","^1R",3,"^1S",1091],["^ ","^1R",5,"^1S",1091],["^ ","^1R",7,"^1S",1091],["^ ","^1R",28,"^1S",1091],["^ ","^1R",36,"^1S",1091],["^ ","^1R",38,"^1S",1091],["^ ","^1R",40,"^1S",1091],["^ ","^1R",51,"^1S",1091],["^ ","^1R",52,"^1S",1091,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",84,"^1S",1091],["^ ","^1R",142,"^1S",1091],["^ ","^1R",147,"^1S",1091],["^ ","^1R",154,"^1S",1091],["^ ","^1R",3,"^1S",1126],["^ ","^1R",5,"^1S",1126],["^ ","^1R",7,"^1S",1126],["^ ","^1R",28,"^1S",1126],["^ ","^1R",36,"^1S",1126],["^ ","^1R",38,"^1S",1126],["^ ","^1R",40,"^1S",1126],["^ ","^1R",51,"^1S",1126],["^ ","^1R",52,"^1S",1126,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",84,"^1S",1126],["^ ","^1R",142,"^1S",1126],["^ ","^1R",147,"^1S",1126],["^ ","^1R",154,"^1S",1126]],"^2A",[["^ ","^1R",8,"^1S",1091,"^G","remote-net"],["^ ","^1R",84,"^1S",1091,"^G","remote-net"],["^ ","^1R",8,"^1S",1126,"^G","remote-net"],["^ ","^1R",84,"^1S",1126,"^G","remote-net"]]],"~i316",["^ ","^3@",[["^ ","^1R",0,"^1S",1092],["^ ","^1R",0,"^1S",1127]],"^30",[["^ ","^1R",0,"^1S",1092,"^G","fulcro.client.network/abort"],["^ ","^1R",0,"^1S",1127,"^G","fulcro.client.network/abort"]],"^1X",[["^ ","^1R",28,"^1S",1092,"^G","remote-net"],["^ ","^1R",28,"^1S",1127,"^G","remote-net"]],"^2@",[["^ ","^1R",45,"^1S",1092,"^G","abort-id"],["^ ","^1R",45,"^1S",1127,"^G","abort-id"]]],"~i317",["^ ","^3@",[["^ ","^1R",0,"^1S",1094],["^ ","^1R",0,"^1S",1129]],"^30",[["^ ","^1R",0,"^1S",1094,"^G","fulcro.client/abort-items-on-queue"],["^ ","^1R",0,"^1S",1129,"^G","fulcro.client/abort-items-on-queue"]],"^2@",[["^ ","^1R",35,"^1S",1094],["^ ","^1R",35,"^1S",1129]],"^2:",[["^ ","^1R",35,"^1S",1094,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",35,"^1S",1129,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^25",[["^ ","^1R",79,"^1S",1094,"^G","send-queues"],["^ ","^1R",79,"^1S",1129,"^G","send-queues"]],"^2K",[["^ ","^1R",98,"^1S",1094,"^G","r"],["^ ","^1R",98,"^1S",1129,"^G","r"]],"^2;",[["^ ","^1R",101,"^1S",1094,"^G","abort-id"],["^ ","^1R",101,"^1S",1129,"^G","abort-id"]]],"~i319",["^ ","^2Z",[["^ ","^1R",97,"^1S",1152,"^G","this"],["^ ","^1R",4,"^1S",1154,"^G","this"]],"^2R",[["^ ","^1R",0,"^1S",1155]],"^1[",[["^ ","^1R",7,"^1S",1155,"^G","fulcro.client.primitives/get-history"]],"^2:",[["^ ","^1R",44,"^1S",1155,"^G","reconciler"]]],"~i320",["^ ","^1[",[["^ ","^1R",109,"^1S",1158,"^G","this"],["^ ","^1R",4,"^1S",1160,"^G","this"]]],"~i321",["^ ","~i4",[["^ ","^1R",0,"^1S",1161]],"~i5",[["^ ","^1R",7,"^1S",1161,"^G","fulcro.client/reset-history-impl"]],"^1X",[["^ ","^1R",40,"^1S",1161,"^G","this"]]],"~i323",["^ ","^2Z",[["^ ","^1R",97,"^1S",1164,"^G","this"],["^ ","^1R",4,"^1S",1166,"^G","this"]],"^2R",[["^ ","^1R",0,"^1S",1167]],"^1[",[["^ ","^1R",7,"^1S",1167,"^G","fulcro.client.util.force_render.cljs$core$IFn$_invoke$arity$1"]],"^4Z",[["^ ","^1R",69,"^1S",1167,"^G","reconciler"]]],"~i325",["^ ","~i0",[["^ ","^1R",0,"^1S",1329],["^ ","^1R",0,"^1S",1329],["^ ","^1R",39,"^1S",1332],["^ ","^1R",86,"^1S",1332,"^G","var_args"],["^ ","^1R",0,"^1S",1333],["^ ","^1R",0,"^1S",1333],["^ ","^1R",4,"^1S",1333,"^G","args__4534__auto__"],["^ ","^1R",25,"^1S",1333],["^ ","^1R",0,"^1S",1334],["^ ","^1R",0,"^1S",1334],["^ ","^1R",4,"^1S",1334,"^G","len__4531__auto__"],["^ ","^1R",30,"^1S",1334],["^ ","^1R",30,"^1S",1334],["^ ","^1R",0,"^1S",1335],["^ ","^1R",0,"^1S",1335],["^ ","^1R",4,"^1S",1335,"^G","i__4532__auto__"],["^ ","^1R",28,"^1S",1335],["^ ","^1R",0,"^1S",1337],["^ ","^1R",0,"^1S",1337],["^ ","^1R",3,"^1S",1337],["^ ","^1R",4,"^1S",1337,"^G","i__4532__auto__"],["^ ","^1R",28,"^1S",1337,"^G","len__4531__auto__"],["^ ","^1R",0,"^1S",1338],["^ ","^1R",0,"^1S",1338],["^ ","^1R",0,"^1S",1338,"^G","args__4534__auto__"],["^ ","^1R",24,"^1S",1338],["^ ","^1R",25,"^1S",1338],["^ ","^1R",35,"^1S",1338,"^G","i__4532__auto__"],["^ ","^1R",0,"^1S",1340],["^ ","^1R",15,"^1S",1340],["^ ","^1R",16,"^1S",1340,"^G","i__4532__auto__"],["^ ","^1R",40,"^1S",1340],["^ ","^1R",0,"^1S",1344],["^ ","^1R",0,"^1S",1348],["^ ","^1R",4,"^1S",1348,"^G","argseq__4535__auto__"],["^ ","^1R",27,"^1S",1348],["^ ","^1R",29,"^1S",1348],["^ ","^1R",30,"^1S",1348],["^ ","^1R",36,"^1S",1348],["^ ","^1R",36,"^1S",1348,"^G","args__4534__auto__"],["^ ","^1R",64,"^1S",1348],["^ ","^1R",64,"^1S",1348],["^ ","^1R",69,"^1S",1348,"^G","cljs.core/IndexedSeq"],["^ ","^1R",90,"^1S",1348],["^ ","^1R",90,"^1S",1348,"^G","args__4534__auto__"],["^ ","^1R",115,"^1S",1348],["^ ","^1R",120,"^1S",1348],["^ ","^1R",124,"^1S",1348],["^ ","^1R",131,"^1S",1348],["^ ","^1R",0,"^1S",1349],["^ ","^1R",0,"^1S",1349],["^ ","^1R",7,"^1S",1349,"^G","fulcro.client/new-fulcro-test-client"],["^ ","^1R",81,"^1S",1349,"^G","argseq__4535__auto__"],["^ ","^1R",0,"^1S",1352],["^ ","^1R",0,"^1S",1352],["^ ","^1R",0,"^1S",1352],["^ ","^1R",0,"^1S",1352,"^G","fulcro.client/new-fulcro-test-client"],["^ ","^1R",76,"^1S",1352],["^ ","^1R",87,"^1S",1352,"^G","p__43580"],["^ ","^1R",0,"^1S",1353],["^ ","^1R",0,"^1S",1353],["^ ","^1R",4,"^1S",1353,"^G","map__43581"],["^ ","^1R",17,"^1S",1353,"^G","p__43580"],["^ ","^1R",4,"^1S",1354,"^G","map__43581"],["^ ","^1R",21,"^1S",1354],["^ ","^1R",23,"^1S",1354],["^ ","^1R",25,"^1S",1354],["^ ","^1R",27,"^1S",1354],["^ ","^1R",28,"^1S",1354,"^G","map__43581"],["^ ","^1R",42,"^1S",1354],["^ ","^1R",50,"^1S",1354],["^ ","^1R",52,"^1S",1354],["^ ","^1R",54,"^1S",1354],["^ ","^1R",55,"^1S",1354],["^ ","^1R",55,"^1S",1354,"^G","map__43581"],["^ ","^1R",104,"^1S",1354],["^ ","^1R",115,"^1S",1354],["^ ","^1R",116,"^1S",1354,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",148,"^1S",1354],["^ ","^1R",148,"^1S",1354,"^G","map__43581"],["^ ","^1R",179,"^1S",1354],["^ ","^1R",184,"^1S",1354],["^ ","^1R",191,"^1S",1354],["^ ","^1R",199,"^1S",1354],["^ ","^1R",199,"^1S",1354,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",245,"^1S",1354,"^G","cljs.core/hash-map"],["^ ","^1R",264,"^1S",1354,"^G","map__43581"],["^ ","^1R",276,"^1S",1354,"^G","map__43581"],["^ ","^1R",20,"^1S",1355],["^ ","^1R",20,"^1S",1355,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",64,"^1S",1355,"^G","map__43581"],["^ ","^1R",79,"^1S",1355],["^ ","^1R",151,"^1S",1355],["^ ","^1R",23,"^1S",1356],["^ ","^1R",23,"^1S",1356,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^1R",67,"^1S",1356,"^G","map__43581"],["^ ","^1R",82,"^1S",1356],["^ ","^1R",160,"^1S",1356],["^ ","^1R",25,"^1S",1357],["^ ","^1R",25,"^1S",1357,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",69,"^1S",1357,"^G","map__43581"],["^ ","^1R",84,"^1S",1357],["^ ","^1R",0,"^1S",1358],["^ ","^1R",0,"^1S",1361],["^ ","^1R",0,"^1S",1361],["^ ","^1R",0,"^1S",1361,"^G","fulcro.client/new-fulcro-test-client"],["^ ","^1R",63,"^1S",1361],["^ ","^1R",0,"^1S",1363],["^ ","^1R",0,"^1S",1364],["^ ","^1R",0,"^1S",1364],["^ ","^1R",0,"^1S",1364,"^G","fulcro.client/new-fulcro-test-client"],["^ ","^1R",57,"^1S",1364],["^ ","^1R",68,"^1S",1364,"^G","seq43579"],["^ ","^1R",0,"^1S",1365],["^ ","^1R",0,"^1S",1365],["^ ","^1R",4,"^1S",1365,"^G","self__4519__auto__"],["^ ","^1R",25,"^1S",1365],["^ ","^1R",0,"^1S",1366],["^ ","^1R",0,"^1S",1366],["^ ","^1R",7,"^1S",1366,"^G","self__4519__auto__"],["^ ","^1R",63,"^1S",1366],["^ ","^1R",63,"^1S",1366,"^G","cljs.core/seq"],["^ ","^1R",77,"^1S",1366,"^G","seq43579"],["^ ","^1R",0,"^1S",1369]],"~i6",[["^ ","^1R",0,"^1S",1332,"^G","fulcro.client/new-fulcro-test-client"]]],"~i327",["^ ","^3@",[["^ ","^1R",4,"^1S",1355,"^G","initial-state"]],"^1V",[["^ ","^1R",4,"^1S",1356,"^G","started-callback"]],"^2C",[["^ ","^1R",4,"^1S",1357,"^G","reconciler-options"]]],"~i329",["^ ","~i2",[["^ ","^1R",0,"^1S",1358],["^ ","^1R",41,"^1S",1358],["^ ","^1R",84,"^1S",1358],["^ ","^1R",170,"^1S",1358],["^ ","^1R",265,"^1S",1358],["^ ","^1R",365,"^1S",1358]],"~i3",[["^ ","^1R",7,"^1S",1358,"^G","fulcro.client/map->Application"]],"^31",[["^ ","^1R",156,"^1S",1358,"^G","initial-state"]]],"~i330",["^ ","^31",[["^ ","^1R",248,"^1S",1358,"^G","started-callback"]]],"~i331",["^ ","^31",[["^ ","^1R",346,"^1S",1358,"^G","reconciler-options"]]],"~i332",["^ ","^31",[["^ ","^1R",429,"^1S",1358]],"^3D",[["^ ","^1R",429,"^1S",1358,"^G","fulcro.client.network/mock-network"]]],"~i335",["^ ","~i3",[["^ ","^1R",0,"^1S",1369],["^ ","^1R",24,"^1S",1372],["^ ","^1R",0,"^1S",1373]],"~i9",[["^ ","^1R",0,"^1S",1372,"^G","fulcro.client/get-url"]]],"~i337",["^ ","~i8",[["^ ","^1R",0,"^1S",1373],["^ ","^1R",7,"^1S",1373]],"^2Z",[["^ ","^1R",7,"^1S",1373,"^G","js/window"]]],"~i340",["^ ","~i3",[["^ ","^1R",0,"^1S",1375],["^ ","^1R",0,"^1S",1375],["^ ","^1R",27,"^1S",1378],["^ ","^1R",62,"^1S",1378,"^G","var_args"],["^ ","^1R",0,"^1S",1379],["^ ","^1R",0,"^1S",1379],["^ ","^1R",4,"^1S",1379,"^G","G__43602"],["^ ","^1R",15,"^1S",1379],["^ ","^1R",15,"^1S",1379],["^ ","^1R",0,"^1S",1380],["^ ","^1R",0,"^1S",1380],["^ ","^1R",8,"^1S",1380,"^G","G__43602"],["^ ","^1R",5,"^1S",1381],["^ ","^1R",0,"^1S",1382],["^ ","^1R",7,"^1S",1382,"^G","fulcro.client/uri-params"],["^ ","^1R",5,"^1S",1385],["^ ","^1R",0,"^1S",1386],["^ ","^1R",7,"^1S",1386,"^G","fulcro.client/uri-params"],["^ ","^1R",62,"^1S",1386],["^ ","^1R",63,"^1S",1386],["^ ","^1R",73,"^1S",1386],["^ ","^1R",0,"^1S",1390],["^ ","^1R",6,"^1S",1390],["^ ","^1R",11,"^1S",1390,"^G","js/Error"],["^ ","^1R",17,"^1S",1390],["^ ","^1R",18,"^1S",1390],["^ ","^1R",80,"^1S",1390],["^ ","^1R",80,"^1S",1390],["^ ","^1R",0,"^1S",1395],["^ ","^1R",0,"^1S",1395],["^ ","^1R",57,"^1S",1395],["^ ","^1R",0,"^1S",1396],["^ ","^1R",0,"^1S",1399],["^ ","^1R",0,"^1S",1399],["^ ","^1R",57,"^1S",1399],["^ ","^1R",0,"^1S",1400],["^ ","^1R",0,"^1S",1450],["^ ","^1R",0,"^1S",1450],["^ ","^1R",51,"^1S",1450],["^ ","^1R",0,"^1S",1452]],"~i9",[["^ ","^1R",0,"^1S",1378,"^G","fulcro.client/uri-params"],["^ ","^1R",0,"^1S",1395,"^G","fulcro.client/uri-params"],["^ ","^1R",0,"^1S",1399,"^G","fulcro.client/uri-params"],["^ ","^1R",0,"^1S",1450,"^G","fulcro.client/uri-params"]]],"~i342",["^ ","~i9",[["^ ","^1R",0,"^1S",1396]],"^4>",[["^ ","^1R",7,"^1S",1396,"^G","fulcro.client.uri_params.cljs$core$IFn$_invoke$arity$1"]],"^29",[["^ ","^1R",62,"^1S",1396]],"^1U",[["^ ","^1R",62,"^1S",1396,"^G","fulcro.client/get-url"]]],"~i343",["^ ","~i7",[["^ ","^1R",68,"^1S",1399,"^G","url"]]],"~i344",["^ ","~i6",[["^ ","^1R",0,"^1S",1400],["^ ","^1R",0,"^1S",1401]],"^2Z",[["^ ","^1R",4,"^1S",1400,"^G","query-data"]],"^1Q",[["^ ","^1R",17,"^1S",1400]],"^4Z",[["^ ","^1R",17,"^1S",1400],["^ ","^1R",22,"^1S",1400,"^G","goog/Uri"]],"^2I",[["^ ","^1R",31,"^1S",1400,"^G","url"]]],"~i345",["^ ","~i8",[["^ ","^1R",0,"^1S",1401],["^ ","^1R",52,"^1S",1401]],"~i9",[["^ ","^1R",7,"^1S",1401,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]]],"~i346",["^ ","^4>",[["^ ","^1R",87,"^1S",1401],["^ ","^1R",104,"^1S",1401,"^G","iter__4324__auto__"],["^ ","^1R",125,"^1S",1401],["^ ","^1R",43,"^1S",1402,"^G","s__43607"],["^ ","^1R",0,"^1S",1403],["^ ","^1R",0,"^1S",1403],["^ ","^1R",12,"^1S",1403,"^G","cljs.core/LazySeq"],["^ ","^1R",30,"^1S",1403],["^ ","^1R",35,"^1S",1403],["^ ","^1R",0,"^1S",1405],["^ ","^1R",0,"^1S",1405],["^ ","^1R",4,"^1S",1405,"^G","s__43607"],["^ ","^1R",19,"^1S",1405,"^G","s__43607"],["^ ","^1R",0,"^1S",1407],["^ ","^1R",0,"^1S",1407],["^ ","^1R",4,"^1S",1407,"^G","temp__5457__auto__"],["^ ","^1R",25,"^1S",1407],["^ ","^1R",25,"^1S",1407,"^G","cljs.core/seq"],["^ ","^1R",39,"^1S",1407,"^G","s__43607"],["^ ","^1R",0,"^1S",1408],["^ ","^1R",0,"^1S",1408],["^ ","^1R",3,"^1S",1408,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",1409],["^ ","^1R",0,"^1S",1409],["^ ","^1R",4,"^1S",1409,"^G","s__43607"],["^ ","^1R",19,"^1S",1409,"^G","temp__5457__auto__"],["^ ","^1R",0,"^1S",1410],["^ ","^1R",0,"^1S",1410],["^ ","^1R",3,"^1S",1410],["^ ","^1R",3,"^1S",1410,"^G","cljs.core/chunked-seq?"],["^ ","^1R",32,"^1S",1410,"^G","s__43607"],["^ ","^1R",0,"^1S",1411],["^ ","^1R",4,"^1S",1411,"^G","c__4322__auto__"],["^ ","^1R",4,"^1S",1412,"^G","size__4323__auto__"],["^ ","^1R",25,"^1S",1412],["^ ","^1R",25,"^1S",1412,"^G","cljs.core/count"],["^ ","^1R",41,"^1S",1412,"^G","c__4322__auto__"],["^ ","^1R",4,"^1S",1413,"^G","b__43609"],["^ ","^1R",15,"^1S",1413],["^ ","^1R",15,"^1S",1413,"^G","cljs.core/chunk-buffer"],["^ ","^1R",38,"^1S",1413,"^G","size__4323__auto__"],["^ ","^1R",0,"^1S",1414],["^ ","^1R",0,"^1S",1414],["^ ","^1R",3,"^1S",1414],["^ ","^1R",3,"^1S",1414],["^ ","^1R",20,"^1S",1414,"^G","i__43608"],["^ ","^1R",31,"^1S",1414],["^ ","^1R",0,"^1S",1416],["^ ","^1R",0,"^1S",1416],["^ ","^1R",3,"^1S",1416],["^ ","^1R",4,"^1S",1416,"^G","i__43608"],["^ ","^1R",15,"^1S",1416,"^G","size__4323__auto__"],["^ ","^1R",0,"^1S",1417],["^ ","^1R",8,"^1S",1417],["^ ","^1R",8,"^1S",1417,"^G","cljs.core._nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^1R",53,"^1S",1417,"^G","c__4322__auto__"],["^ ","^1R",69,"^1S",1417,"^G","i__43608"],["^ ","^1R",0,"^1S",1418],["^ ","^1R",0,"^1S",1418],["^ ","^1R",0,"^1S",1418],["^ ","^1R",0,"^1S",1418,"^G","cljs.core/chunk-append"],["^ ","^1R",23,"^1S",1418,"^G","b__43609"],["^ ","^1R",32,"^1S",1418],["^ ","^1R",0,"^1S",1420],["^ ","^1R",15,"^1S",1420],["^ ","^1R",16,"^1S",1420,"^G","i__43608"],["^ ","^1R",27,"^1S",1420],["^ ","^1R",0,"^1S",1424],["^ ","^1R",0,"^1S",1429],["^ ","^1R",7,"^1S",1429,"^G","cljs.core/chunk-cons"],["^ ","^1R",28,"^1S",1429],["^ ","^1R",28,"^1S",1429,"^G","cljs.core/chunk"],["^ ","^1R",44,"^1S",1429,"^G","b__43609"],["^ ","^1R",54,"^1S",1429],["^ ","^1R",54,"^1S",1429,"^G","iter__43606"],["^ ","^1R",80,"^1S",1429],["^ ","^1R",80,"^1S",1429,"^G","cljs.core/chunk-rest"],["^ ","^1R",101,"^1S",1429,"^G","s__43607"],["^ ","^1R",0,"^1S",1431],["^ ","^1R",7,"^1S",1431,"^G","cljs.core/chunk-cons"],["^ ","^1R",28,"^1S",1431],["^ ","^1R",28,"^1S",1431,"^G","cljs.core/chunk"],["^ ","^1R",44,"^1S",1431,"^G","b__43609"],["^ ","^1R",54,"^1S",1431],["^ ","^1R",0,"^1S",1434],["^ ","^1R",8,"^1S",1434],["^ ","^1R",8,"^1S",1434,"^G","cljs.core/first"],["^ ","^1R",24,"^1S",1434,"^G","s__43607"],["^ ","^1R",0,"^1S",1435],["^ ","^1R",0,"^1S",1435],["^ ","^1R",7,"^1S",1435,"^G","cljs.core/cons"],["^ ","^1R",22,"^1S",1435],["^ ","^1R",133,"^1S",1435],["^ ","^1R",133,"^1S",1435,"^G","iter__43606"],["^ ","^1R",159,"^1S",1435],["^ ","^1R",159,"^1S",1435,"^G","cljs.core/rest"],["^ ","^1R",174,"^1S",1435,"^G","s__43607"],["^ ","^1R",0,"^1S",1438],["^ ","^1R",1,"^1S",1443],["^ ","^1R",6,"^1S",1443],["^ ","^1R",0,"^1S",1446],["^ ","^1R",0,"^1S",1446],["^ ","^1R",7,"^1S",1446,"^G","iter__4324__auto__"]],"^2U",[["^ ","^1R",4,"^1S",1417,"^G","k"],["^ ","^1R",4,"^1S",1434,"^G","k"]],"^2R",[["^ ","^1R",26,"^1S",1446]],"^1Z",[["^ ","^1R",26,"^1S",1446,"^G","query-data"]]],"~i347",["^ ","^3@",[["^ ","^1R",115,"^1S",1418,"^G","k"],["^ ","^1R",105,"^1S",1435,"^G","k"]],"^2M",[["^ ","^1R",117,"^1S",1418],["^ ","^1R",107,"^1S",1435]],"^29",[["^ ","^1R",117,"^1S",1418,"^G","query-data"],["^ ","^1R",107,"^1S",1435,"^G","query-data"]],"^2>",[["^ ","^1R",132,"^1S",1418,"^G","k"],["^ ","^1R",122,"^1S",1435,"^G","k"]]],"~i350",["^ ","~i3",[["^ ","^1R",0,"^1S",1452],["^ ","^1R",0,"^1S",1452],["^ ","^1R",30,"^1S",1455],["^ ","^1R",68,"^1S",1455,"^G","var_args"],["^ ","^1R",0,"^1S",1456],["^ ","^1R",0,"^1S",1456],["^ ","^1R",4,"^1S",1456,"^G","G__43617"],["^ ","^1R",15,"^1S",1456],["^ ","^1R",15,"^1S",1456],["^ ","^1R",0,"^1S",1457],["^ ","^1R",0,"^1S",1457],["^ ","^1R",8,"^1S",1457,"^G","G__43617"],["^ ","^1R",5,"^1S",1458],["^ ","^1R",0,"^1S",1459],["^ ","^1R",7,"^1S",1459,"^G","fulcro.client/get-url-param"],["^ ","^1R",65,"^1S",1459],["^ ","^1R",66,"^1S",1459],["^ ","^1R",76,"^1S",1459],["^ ","^1R",5,"^1S",1462],["^ ","^1R",0,"^1S",1463],["^ ","^1R",7,"^1S",1463,"^G","fulcro.client/get-url-param"],["^ ","^1R",65,"^1S",1463],["^ ","^1R",66,"^1S",1463],["^ ","^1R",76,"^1S",1463],["^ ","^1R",82,"^1S",1463],["^ ","^1R",83,"^1S",1463],["^ ","^1R",93,"^1S",1463],["^ ","^1R",0,"^1S",1467],["^ ","^1R",6,"^1S",1467],["^ ","^1R",11,"^1S",1467,"^G","js/Error"],["^ ","^1R",17,"^1S",1467],["^ ","^1R",18,"^1S",1467],["^ ","^1R",80,"^1S",1467],["^ ","^1R",80,"^1S",1467],["^ ","^1R",0,"^1S",1472],["^ ","^1R",0,"^1S",1472],["^ ","^1R",60,"^1S",1472],["^ ","^1R",0,"^1S",1473],["^ ","^1R",0,"^1S",1476],["^ ","^1R",0,"^1S",1476],["^ ","^1R",60,"^1S",1476],["^ ","^1R",0,"^1S",1477],["^ ","^1R",0,"^1S",1480],["^ ","^1R",0,"^1S",1480],["^ ","^1R",54,"^1S",1480],["^ ","^1R",0,"^1S",1482]],"~i9",[["^ ","^1R",0,"^1S",1455,"^G","fulcro.client/get-url-param"],["^ ","^1R",0,"^1S",1472,"^G","fulcro.client/get-url-param"],["^ ","^1R",0,"^1S",1476,"^G","fulcro.client/get-url-param"],["^ ","^1R",0,"^1S",1480,"^G","fulcro.client/get-url-param"]]],"~i352",["^ ","~i7",[["^ ","^1R",71,"^1S",1472,"^G","param-name"]],"^1[",[["^ ","^1R",0,"^1S",1473]],"^2?",[["^ ","^1R",7,"^1S",1473,"^G","fulcro.client.get_url_param.cljs$core$IFn$_invoke$arity$2"]],"^20",[["^ ","^1R",65,"^1S",1473]],"^2@",[["^ ","^1R",65,"^1S",1473,"^G","fulcro.client/get-url"]],"^2C",[["^ ","^1R",89,"^1S",1473,"^G","param-name"]]],"~i353",["^ ","~i7",[["^ ","^1R",71,"^1S",1476,"^G","url"]],"^2L",[["^ ","^1R",75,"^1S",1476,"^G","param-name"]]],"~i354",["^ ","~i6",[["^ ","^1R",0,"^1S",1477]],"~i7",[["^ ","^1R",7,"^1S",1477,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2L",[["^ ","^1R",51,"^1S",1477]],"^2Z",[["^ ","^1R",51,"^1S",1477,"^G","fulcro.client.uri_params.cljs$core$IFn$_invoke$arity$1"]],"^1Q",[["^ ","^1R",106,"^1S",1477,"^G","url"]],"^1Z",[["^ ","^1R",111,"^1S",1477,"^G","param-name"]]],"~i356",["^ ","~i0",[["^ ","^1R",0,"^1S",1482]],"~i5",[["^ ","^1R",0,"^1S",1485,"^G","fulcro.client/merge-component"]],"^3B",[["^ ","^1R",32,"^1S",1485,"^G","fulcro.client.primitives/merge-component"]]],"~i357",["^ ","~i0",[["^ ","^1R",0,"^1S",1486]],"~i5",[["^ ","^1R",0,"^1S",1489,"^G","fulcro.client/merge-alternate-unions"]],"^2Q",[["^ ","^1R",39,"^1S",1489,"^G","fulcro.client.primitives/merge-alternate-unions"]]],"~i358",["^ ","~i0",[["^ ","^1R",0,"^1S",1490]],"~i5",[["^ ","^1R",0,"^1S",1493,"^G","fulcro.client/merge-alternate-union-elements!"]],"^3:",[["^ ","^1R",53,"^1S",1493,"^G","fulcro.client.primitives/merge-alternate-union-elements!"]]],"~i359",["^ ","~i0",[["^ ","^1R",0,"^1S",1494]],"~i5",[["^ ","^1R",0,"^1S",1497,"^G","fulcro.client/merge-alternate-union-elements"]],"^3G",[["^ ","^1R",47,"^1S",1497,"^G","fulcro.client.primitives/merge-alternate-union-elements"]]],"~i360",["^ ","~i0",[["^ ","^1R",0,"^1S",1498]],"~i5",[["^ ","^1R",0,"^1S",1501,"^G","fulcro.client/integrate-ident"]],"^3B",[["^ ","^1R",32,"^1S",1501,"^G","fulcro.client.primitives/integrate-ident"]]],"~i361",["^ ","~i0",[["^ ","^1R",0,"^1S",1502]],"~i5",[["^ ","^1R",0,"^1S",1505,"^G","fulcro.client/integrate-ident!"]],"^34",[["^ ","^1R",38,"^1S",1505,"^G","fulcro.client.primitives/integrate-ident!"]]],"~i362",["^ ","~i0",[["^ ","^1R",0,"^1S",1506],["^ ","^1R",0,"^1S",1506],["^ ","^1R",34,"^1S",1509],["^ ","^1R",76,"^1S",1509,"^G","var_args"],["^ ","^1R",0,"^1S",1510],["^ ","^1R",0,"^1S",1510],["^ ","^1R",4,"^1S",1510,"^G","args__4534__auto__"],["^ ","^1R",25,"^1S",1510],["^ ","^1R",0,"^1S",1511],["^ ","^1R",0,"^1S",1511],["^ ","^1R",4,"^1S",1511,"^G","len__4531__auto__"],["^ ","^1R",30,"^1S",1511],["^ ","^1R",30,"^1S",1511],["^ ","^1R",0,"^1S",1512],["^ ","^1R",0,"^1S",1512],["^ ","^1R",4,"^1S",1512,"^G","i__4532__auto__"],["^ ","^1R",28,"^1S",1512],["^ ","^1R",0,"^1S",1514],["^ ","^1R",0,"^1S",1514],["^ ","^1R",3,"^1S",1514],["^ ","^1R",4,"^1S",1514,"^G","i__4532__auto__"],["^ ","^1R",28,"^1S",1514,"^G","len__4531__auto__"],["^ ","^1R",0,"^1S",1515],["^ ","^1R",0,"^1S",1515],["^ ","^1R",0,"^1S",1515,"^G","args__4534__auto__"],["^ ","^1R",24,"^1S",1515],["^ ","^1R",25,"^1S",1515],["^ ","^1R",35,"^1S",1515,"^G","i__4532__auto__"],["^ ","^1R",0,"^1S",1517],["^ ","^1R",15,"^1S",1517],["^ ","^1R",16,"^1S",1517,"^G","i__4532__auto__"],["^ ","^1R",40,"^1S",1517],["^ ","^1R",0,"^1S",1521],["^ ","^1R",0,"^1S",1525],["^ ","^1R",4,"^1S",1525,"^G","argseq__4535__auto__"],["^ ","^1R",27,"^1S",1525],["^ ","^1R",29,"^1S",1525],["^ ","^1R",30,"^1S",1525],["^ ","^1R",36,"^1S",1525],["^ ","^1R",36,"^1S",1525,"^G","args__4534__auto__"],["^ ","^1R",64,"^1S",1525],["^ ","^1R",64,"^1S",1525],["^ ","^1R",69,"^1S",1525,"^G","cljs.core/IndexedSeq"],["^ ","^1R",90,"^1S",1525],["^ ","^1R",90,"^1S",1525,"^G","args__4534__auto__"],["^ ","^1R",115,"^1S",1525],["^ ","^1R",120,"^1S",1525],["^ ","^1R",124,"^1S",1525],["^ ","^1R",131,"^1S",1525],["^ ","^1R",0,"^1S",1526],["^ ","^1R",0,"^1S",1526],["^ ","^1R",7,"^1S",1526,"^G","fulcro.client/merge-state!"],["^ ","^1R",76,"^1S",1526],["^ ","^1R",77,"^1S",1526],["^ ","^1R",87,"^1S",1526],["^ ","^1R",93,"^1S",1526],["^ ","^1R",94,"^1S",1526],["^ ","^1R",104,"^1S",1526],["^ ","^1R",110,"^1S",1526],["^ ","^1R",111,"^1S",1526],["^ ","^1R",121,"^1S",1526],["^ ","^1R",127,"^1S",1526,"^G","argseq__4535__auto__"],["^ ","^1R",0,"^1S",1529],["^ ","^1R",0,"^1S",1529],["^ ","^1R",0,"^1S",1529],["^ ","^1R",0,"^1S",1529,"^G","fulcro.client/merge-state!"],["^ ","^1R",71,"^1S",1529],["^ ","^1R",0,"^1S",1530],["^ ","^1R",0,"^1S",1543],["^ ","^1R",0,"^1S",1543],["^ ","^1R",0,"^1S",1543,"^G","fulcro.client/merge-state!"],["^ ","^1R",58,"^1S",1543],["^ ","^1R",0,"^1S",1545],["^ ","^1R",0,"^1S",1546],["^ ","^1R",0,"^1S",1546],["^ ","^1R",0,"^1S",1546,"^G","fulcro.client/merge-state!"],["^ ","^1R",52,"^1S",1546],["^ ","^1R",63,"^1S",1546,"^G","seq43622"],["^ ","^1R",0,"^1S",1547],["^ ","^1R",0,"^1S",1547],["^ ","^1R",4,"^1S",1547,"^G","G__43623"],["^ ","^1R",15,"^1S",1547],["^ ","^1R",15,"^1S",1547,"^G","cljs.core/first"],["^ ","^1R",31,"^1S",1547,"^G","seq43622"],["^ ","^1R",4,"^1S",1548,"^G","seq43622"],["^ ","^1R",19,"^1S",1548],["^ ","^1R",19,"^1S",1548,"^G","cljs.core/next"],["^ ","^1R",34,"^1S",1548,"^G","seq43622"],["^ ","^1R",4,"^1S",1549,"^G","G__43624"],["^ ","^1R",15,"^1S",1549],["^ ","^1R",15,"^1S",1549,"^G","cljs.core/first"],["^ ","^1R",31,"^1S",1549,"^G","seq43622"],["^ ","^1R",4,"^1S",1550,"^G","seq43622"],["^ ","^1R",19,"^1S",1550],["^ ","^1R",19,"^1S",1550,"^G","cljs.core/next"],["^ ","^1R",34,"^1S",1550,"^G","seq43622"],["^ ","^1R",4,"^1S",1551,"^G","G__43625"],["^ ","^1R",15,"^1S",1551],["^ ","^1R",15,"^1S",1551,"^G","cljs.core/first"],["^ ","^1R",31,"^1S",1551,"^G","seq43622"],["^ ","^1R",4,"^1S",1552,"^G","seq43622"],["^ ","^1R",19,"^1S",1552],["^ ","^1R",19,"^1S",1552,"^G","cljs.core/next"],["^ ","^1R",34,"^1S",1552,"^G","seq43622"],["^ ","^1R",0,"^1S",1553],["^ ","^1R",0,"^1S",1553],["^ ","^1R",4,"^1S",1553,"^G","self__4518__auto__"],["^ ","^1R",25,"^1S",1553],["^ ","^1R",0,"^1S",1554],["^ ","^1R",0,"^1S",1554],["^ ","^1R",7,"^1S",1554,"^G","self__4518__auto__"],["^ ","^1R",63,"^1S",1554,"^G","G__43623"],["^ ","^1R",72,"^1S",1554,"^G","G__43624"],["^ ","^1R",81,"^1S",1554,"^G","G__43625"],["^ ","^1R",90,"^1S",1554,"^G","seq43622"],["^ ","^1R",0,"^1S",1557]],"~i6",[["^ ","^1R",0,"^1S",1509,"^G","fulcro.client/merge-state!"]],"^2O",[["^ ","^1R",82,"^1S",1529,"^G","app-or-reconciler"]],"^3P",[["^ ","^1R",100,"^1S",1529,"^G","component"]],"^2Q",[["^ ","^1R",110,"^1S",1529,"^G","object-data"]],"^4K",[["^ ","^1R",122,"^1S",1529,"^G","named-params"]]],"~i363",["^ ","~i2",[["^ ","^1R",0,"^1S",1530],["^ ","^1R",4,"^1S",1530],["^ ","^1R",4,"^1S",1530],["^ ","^1R",4,"^1S",1530,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1R",61,"^1S",1530],["^ ","^1R",104,"^1S",1530],["^ ","^1R",158,"^1S",1530],["^ ","^1R",174,"^1S",1530],["^ ","^1R",226,"^1S",1530],["^ ","^1R",238,"^1S",1530],["^ ","^1R",16,"^1S",1531],["^ ","^1R",19,"^1S",1531],["^ ","^1R",20,"^1S",1531,"^G","e43629"],["^ ","^1R",38,"^1S",1531,"^G","js/Error"],["^ ","^1R",0,"^1S",1532],["^ ","^1R",4,"^1S",1532,"^G","e__31527__auto__"],["^ ","^1R",29,"^1S",1532,"^G","e43629"],["^ ","^1R",0,"^1S",1533],["^ ","^1R",0,"^1S",1533],["^ ","^1R",0,"^1S",1533,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1R",57,"^1S",1533],["^ ","^1R",100,"^1S",1533],["^ ","^1R",154,"^1S",1533],["^ ","^1R",170,"^1S",1533],["^ ","^1R",222,"^1S",1533],["^ ","^1R",234,"^1S",1533],["^ ","^1R",337,"^1S",1533],["^ ","^1R",390,"^1S",1533,"^G","e__31527__auto__"],["^ ","^1R",0,"^1S",1535],["^ ","^1R",0,"^1S",1535],["^ ","^1R",6,"^1S",1535,"^G","e43629"]],"^2Z",[["^ ","^1R",341,"^1S",1530,"^G","app-or-reconciler"]]],"~i364",["^ ","~i2",[["^ ","^1R",0,"^1S",1539],["^ ","^1R",0,"^1S",1540]],"~i8",[["^ ","^1R",4,"^1S",1539,"^G","reconciler"]],"^1[",[["^ ","^1R",17,"^1S",1539]],"^2>",[["^ ","^1R",19,"^1S",1539],["^ ","^1R",21,"^1S",1539],["^ ","^1R",23,"^1S",1539],["^ ","^1R",45,"^1S",1539],["^ ","^1R",53,"^1S",1539],["^ ","^1R",55,"^1S",1539],["^ ","^1R",57,"^1S",1539],["^ ","^1R",68,"^1S",1539],["^ ","^1R",69,"^1S",1539,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1R",101,"^1S",1539],["^ ","^1R",156,"^1S",1539],["^ ","^1R",161,"^1S",1539],["^ ","^1R",168,"^1S",1539]],"^2[",[["^ ","^1R",24,"^1S",1539,"^G","app-or-reconciler"],["^ ","^1R",101,"^1S",1539,"^G","app-or-reconciler"]]],"~i366",["^ ","^29",[["^ ","^1R",176,"^1S",1539],["^ ","^1R",176,"^1S",1539]],"^20",[["^ ","^1R",272,"^1S",1539,"^G","app-or-reconciler"]]],"~i367",["^ ","^29",[["^ ","^1R",291,"^1S",1539,"^G","app-or-reconciler"]]],"~i368",["^ ","~i4",[["^ ","^1R",0,"^1S",1540]],"~i5",[["^ ","^1R",7,"^1S",1540,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$5"]],"^2L",[["^ ","^1R",53,"^1S",1540,"^G","fulcro.client.primitives/merge-component!"]],"^1Y",[["^ ","^1R",100,"^1S",1540,"^G","reconciler"]],"^2C",[["^ ","^1R",111,"^1S",1540,"^G","component"]],"^2O",[["^ ","^1R",121,"^1S",1540,"^G","object-data"]],"^2<",[["^ ","^1R",133,"^1S",1540,"^G","named-params"]]],"~i369",["^ ","~i0",[["^ ","^1R",0,"^1S",1557]],"~i5",[["^ ","^1R",0,"^1S",1560,"^G","fulcro.client/iinitial-app-state?"]],"~i79",[["^ ","^1R",42,"^1S",1560,"^G","fulcro.client.primitives/has-initial-app-state?"]]],"~i370",["^ ","~i0",[["^ ","^1R",0,"^1S",1561]],"~i5",[["^ ","^1R",0,"^1S",1564,"^G","fulcro.client/iident?"]],"^36",[["^ ","^1R",30,"^1S",1564,"^G","fulcro.client.primitives/has-ident?"]]],"~i660",["^ ","^3D",[["^ ","^1R",62,"^1S",843],["^ ","^1R",62,"^1S",843,"^G","G__43424"]]],"~i2407",["^ ","^2J",[["^ ","^1R",22,"^1S",484],["^ ","^1R",22,"^1S",484,"^G","cljs.core/chunk-first"],["^ ","^1R",44,"^1S",484,"^G","s__43277"],["^ ","^1R",22,"^1S",1411],["^ ","^1R",22,"^1S",1411,"^G","cljs.core/chunk-first"],["^ ","^1R",44,"^1S",1411,"^G","s__43607"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["^1I","goog/dom/tagname.js"],[1508737613441,"^[","~$goog.dom.HtmlElement"],["^1I","goog/async/freelist.js"],[1508737613441,"^["],["^1I","cljs/core/async/impl/ioc_helpers.cljs"],[1516100900795,"^[","^Z","~$cljs.core.async.impl.protocols"],["^1I","goog/labs/useragent/platform.js"],[1508737613441,"^[","~$goog.labs.userAgent.util","~$goog.string"],["~:macro","^Z"],[1537260906000],["^1I","cljs/core/async.cljs"],[1516100900795,"^[","^Z","^8A","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^1I","goog/timer/timer.js"],[1508737613441,"^[","~$goog.Promise","~$goog.events.EventTarget"],["^1I","fulcro/util.cljc"],[1537260907310,"^[","^Z","^A","~$clojure.walk","^S"],["^1I","goog/module/basemodule.js"],[1508737613441,"^[","~$goog.Disposable","~$goog.module"],["^1I","cljs/spec/gen/alpha.cljs"],[1537260906289,"^[","^Z","^M"],["^1I","cljs/tools/reader/impl/utils.cljs"],[1537358547920,"^[","^Z","~$clojure.string","^8C"],["^1I","goog/math/math.js"],[1508737613441,"^[","~$goog.array","~$goog.asserts"],["^1I","goog/events/eventtype.js"],[1508737613441,"^[","~$goog.userAgent"],["^1I","goog/labs/useragent/browser.js"],[1508737613441,"^[","^8P","^8B","~$goog.object","^8C"],["^1I","goog/html/safeurl.js"],[1508737613441,"^[","^8Q","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","^8C","~$goog.string.Const","~$goog.string.TypedString"],["^1I","goog/array/array.js"],[1508737613441,"^[","^8Q"],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],[1537358551000,1529422278000,"~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"],["^8D","^10"],[1537260907000],["^1I","fulcro/client/primitives.cljc"],[1537260907310,"^[","^Z","^8C","~$cljsjs.react","^8S","~$fulcro-css.css-protocols","~$fulcro-css.css-implementation","^=","^P","^14","^S","~$fulcro.tempid","~$fulcro.transit","~$clojure.zip","~$fulcro.client.impl.data-targeting","^U","~$fulcro.client.impl.parser","^12","^8L","^8O","^A","~$cognitect.transit"],["^8D","^D"],[1516100900000],["^1I","goog/useragent/useragent.js"],[1508737613441,"^[","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^8B","~$goog.reflect","^8C"],["^8D","~$cljs.tools.reader.reader-types"],[1537358547000],["^8D","^W"],[1537260907000],["^1I","goog/async/run.js"],[1508737613441,"^[","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"],["^1I","com/cognitect/transit/impl/reader.js"],[1482686437866,"^[","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"],["^1I","goog/debug/error.js"],[1508737613441,"^["],["^1I","goog/async/workqueue.js"],[1508737613441,"^[","^8Q","~$goog.async.FreeList"],["^1I","goog/events/events.js"],[1508737613441,"^[","^8Q","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"],["^1I","goog/promise/resolver.js"],[1508737613441,"^["],["^1I","goog/events/browserfeature.js"],[1508737613441,"^[","^8R"],["^1I","cljs/tools/reader/edn.cljs"],[1537358547920,"^[","^Z","~$cljs.tools.reader.impl.errors","^9>","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^8C","~$goog.string.StringBuffer"],["^1I","goog/net/xhrio.js"],[1508737613441,"^[","~$goog.Timer","^8P","^8Q","^9E","^8K","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^8C","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^8R"],["^1I","goog/promise/thenable.js"],[1508737613441,"^["],["^1I","goog/dom/nodetype.js"],[1508737613441,"^["],["^1I","goog/net/bulkloaderhelper.js"],[1508737613441,"^[","^8M"],["^1I","cljs/tools/reader/impl/inspect.cljs"],[1537358547920,"^[","^Z"],["^1I","com/cognitect/transit/util.js"],[1482686437866,"^[","^8S"],["^8D","~$cljs.spec.gen.alpha"],[1537260906000],["^1I","cljs/tools/reader.cljs"],[1537358547920,"^[","^Z","^9>","^9K","^9L","^9J","^8P","^8C","^9N"],["^1I","goog/module/modulemanager.js"],[1508737613441,"^[","^8M","^8P","^8Q","~$goog.async.Deferred","~$goog.debug.Trace","~$goog.dispose","^9Q","^8N","~$goog.module.AbstractModuleLoader","~$goog.module.ModuleInfo","~$goog.module.ModuleLoadCallback","^8S"],["^1I","goog/net/wrapperxmlhttpfactory.js"],[1508737613441,"^[","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"],["^1I","goog/events/eventtarget.js"],[1508737613441,"^[","^8M","^8Q","~$goog.events","~$goog.events.Event","^9H","^9I","^8S"],["^1I","fulcro/client.cljc"],[1537260907310,"^[","^Z","^W","^11","^10","^16","^S","^=","^U","^12","^T","^P","^Q","^A","^14","^M"],["^1I","goog/module/moduleinfo.js"],[1508737613441,"^[","^8M","^9A","~$goog.functions","^8N","~$goog.module.BaseModule","^:3"],["^1I","goog/disposable/disposable.js"],[1508737613441,"^[","~$goog.disposable.IDisposable"],["^1I","goog/string/typedstring.js"],[1508737613441,"^["],["^8Z","node_modules/react/index.js"],[1537358551000,499162500000,"^8[","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"],["^1I","shadow/js.js"],[1537358551352,"^["],["^1I","goog/object/object.js"],[1508737613441,"^["],["^1I","goog/dom/asserts.js"],[1508737613441,"^[","^8Q"],"~:SHADOW-TIMESTAMP",[1537358551000,1537260906000],["^8Z","node_modules/react/cjs/react.development.js"],[1537358551000,499162500000,"^8[","~$module$node_modules$object_assign$index","~$module$node_modules$prop_types$checkPropTypes"],["^1I","cljs/stacktrace.cljc"],[1537260906289,"^[","^Z","^8C","^8O"],["^1I","goog/math/long.js"],[1508737613441,"^[","^8Q","^9="],["^1I","fulcro/transit.cljc"],[1537260907310,"^[","^Z","^99","~$com.cognitect.transit","^94"],["^1I","goog/events/listener.js"],[1508737613441,"^[","~$goog.events.ListenableKey"],["^1I","goog/html/trustedresourceurl.js"],[1508737613441,"^[","^8Q","^8V","^8W","^8X","^8Y"],["^1I","goog/html/legacyconversions.js"],[1508737613441,"^[","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","~$goog.html.SafeStyleSheet","~$goog.html.SafeUrl","^8U"],["^1I","goog/net/jsloader.js"],[1508737613441,"^[","^8P","^9Z","~$goog.debug.Error","^Q","~$goog.dom.TagName","~$goog.dom.safe","^8U","^8S"],["^1I","goog/debug/tracer.js"],[1508737613441,"^[","^8P","~$goog.debug.Logger","~$goog.iter","^9Q","^9W","~$goog.structs.SimplePool"],["^1I","cljs/core/async/impl/channels.cljs"],[1516100900795,"^[","^Z","^8A","^8H","^8F"],["^1I","goog/events/listenermap.js"],[1508737613441,"^[","^8P","~$goog.events.Listener","^8S"],["^1I","goog/events/eventid.js"],[1508737613441,"^["],["^1I","fulcro/client/network.cljc"],[1537260907310,"^[","^Z","^S","^A","^99","^:6","^95","^8O","~$goog.net.XhrIo","^9S","^9R"],["^1I","goog/functions/functions.js"],[1508737613441,"^["],["^1I","cljs/core/async/impl/dispatch.cljs"],[1516100900795,"^[","^Z","^8F","^9@"],["^1I","goog/html/safestyle.js"],[1508737613441,"^[","^8P","^8Q","^:F","^8C","^8X","^8Y"],["^1I","goog/dom/safe.js"],[1508737613441,"^[","^8Q","~$goog.dom.asserts","^:B","^:C","^:D","^:F","^8U","^8C","^8X"],["^1I","clojure/walk.cljs"],[1537260906289,"^[","^Z"],["^1I","goog/useragent/product.js"],[1508737613441,"^[","^9:","^9<","^8R"],["^1I","cljs/core/async/impl/protocols.cljs"],[1516100900795,"^[","^Z"],["^1I","goog/net/eventtype.js"],[1508737613441,"^["],["^1I","goog/structs/map.js"],[1508737613441,"^[","~$goog.iter.Iterator","~$goog.iter.StopIteration","^8S"],["^1I","com/cognitect/transit/delimiters.js"],[1482686437866,"^["],["^1I","goog/html/safehtml.js"],[1508737613441,"^[","^8P","^8Q","^:H","~$goog.dom.tags","^:C","^:D","^:E","^:F","^8U","^8V","^8W","^9:","^8S","^8C","^8X","^8Y"],["^1I","goog/dom/tags.js"],[1508737613441,"^[","^8S"],["^1I","goog/module/moduleloadcallback.js"],[1508737613441,"^[","^9E","^8N"],["^1I","goog/math/size.js"],[1508737613441,"^["],["^1I","fulcro/client/impl/data_targeting.cljc"],[1537260907310,"^[","^Z","^P","^12"],["^8D","^S"],[1537260907000],["^1I","goog/labs/useragent/engine.js"],[1508737613441,"^[","^8P","^8B","^8C"],["^1I","com/cognitect/transit/impl/decoder.js"],[1482686437866,"^[","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^9C","~$com.cognitect.transit.types"],["^1I","fulcro_css/css_implementation.cljc"],[1537260907310,"^[","^Z","~$cljs.tagged-literals","^92","^8O"],["^1I","cljs/reader.cljs"],[1537260906289,"^[","^Z","^8S","^9M","~$cljs.tools.reader.edn","^9N"],["^1I","fulcro_css/css_protocols.cljc"],[1537260907310,"^[","^Z"],["^1I","goog/dom/dom.js"],[1508737613441,"^[","^8P","^8Q","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^:H","^:I","^:B","~$goog.html.uncheckedconversions","~$goog.math.Coordinate","~$goog.math.Size","^8S","^8C","~$goog.string.Unicode","^8R"],["^8D","^A"],[1537260906000],["^1I","goog/asserts/asserts.js"],[1508737613441,"^[","^:G","^:Y","^8C"],["^1I","goog/debug/relativetimeprovider.js"],[1508737613441,"^["],["^1I","cljs/core/async/impl/buffers.cljs"],[1516100900795,"^[","^Z","^8A"],["^1I","goog/debug/logbuffer.js"],[1508737613441,"^[","^8Q","~$goog.debug.LogRecord"],["^1I","cljs/tagged_literals.cljc"],[1537260906289,"^[","^Z","~$cljs.reader"],["^1I","goog/uri/uri.js"],[1508737613441,"^[","^8P","^8Q","^8C","^9V","^9W","^9X","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1I","goog/net/errorcode.js"],[1508737613441,"^["],["^1I","goog/i18n/bidi.js"],[1508737613441,"^["],["^8Z","node_modules/object-assign/index.js"],[1537358551000,1484580833000,"^8["],["^1I","fulcro/client/impl/data_fetch.cljc"],[1537260907310,"^[","^Z","^W","^97","^12","^T","^8L","^P","^S","^14","^10","^U","^A"],["^8D","^="],[1516100900000],["^1I","goog/module/module.js"],[1508737613441,"^["],["^1I","fulcro/tempid.cljc"],[1537260907310,"^[","^Z"],["^1I","cljs/loader.cljs"],[1537260906289,"^[","^Z","^8S","~$goog.module.ModuleLoader","~$goog.module.ModuleManager"],["^1I","goog/disposable/idisposable.js"],[1508737613441,"^["],["^1I","goog/debug/formatter.js"],[1508737613441,"^[","~$goog.debug","^:J","~$goog.debug.RelativeTimeProvider","^:B","^:F","^:Z","^8X"],["^1I","goog/promise/promise.js"],[1508737613441,"^[","~$goog.Thenable","^8Q","^9D","~$goog.async.run","^9A","^:G","~$goog.promise.Resolver"],["^1I","cljs/core/async/impl/timers.cljs"],[1516100900795,"^[","^Z","^8A","^8E","^8H"],["^1I","cljs/spec/alpha.cljs"],[1537260906289,"^[","^Z","^8S","^8L","^9Y","^8O"],["^1I","goog/fs/url.js"],[1508737613441,"^["],["^1I","goog/debug/logrecord.js"],[1508737613441,"^["],["^1I","goog/base.js"],[1508737613441],["^1I","fulcro/client/util.cljc"],[1537260907310,"^[","^Z","^A","^8L","^W","^U","^95","^12","^99","^98"],["^1I","goog/json/hybrid.js"],[1508737613441,"^[","^8Q","~$goog.json"],["^1I","goog/structs/structs.js"],[1508737613441,"^[","^8P","^8S"],["^1I","cljs/tools/reader/impl/errors.cljs"],[1537358547920,"^[","^Z","^9>","^8O","~$cljs.tools.reader.impl.inspect"],["^1I","cljsjs/react.cljs"],[1537358551030,"^[","^Z","~$module$node_modules$react$index"],["^1I","clojure/string.cljs"],[1537260906289,"^[","^Z","^8C","^9N"],["^1I","fulcro/history.cljc"],[1537260907310,"^[","^Z","^S","^12","^P","^A"],["^8Z","node_modules/react/cjs/react.production.min.js"],[1537358551000,499162500000,"^8[","^:>"],["^1I","goog/net/httpstatus.js"],[1508737613441,"^["],["^1I","fulcro/client/mutations.cljc"],[1537260907310,"^[","^Z","^A","^12","^S","^W","~$cljs.loader","^U","^98"],["^1I","com/cognitect/transit/handlers.js"],[1482686437866,"^[","^:S","^:U","~$goog.math.Long"],["^1I","fulcro/client/impl/protocols.cljc"],[1537260907310,"^[","^Z"],["^1I","goog/debug/entrypointregistry.js"],[1508737613441,"^[","^8Q"],["^1I","goog/string/string.js"],[1508737613441,"^["],["^1I","com/cognitect/transit/types.js"],[1482686437866,"^[","^:S","~$com.cognitect.transit.eq","^;A"],["^1I","goog/module/abstractmoduleloader.js"],[1508737613441,"^[","^8N","^:2"],["^1I","goog/reflect/reflect.js"],[1508737613441,"^["],["^1I","goog/labs/useragent/util.js"],[1508737613441,"^[","^8C"],["^1I","com/cognitect/transit/eq.js"],[1482686437866,"^[","^:S"],["^8D","~$cljs.core.async.impl.ioc-macros"],[1516100900000],["^1I","goog/debug/debug.js"],[1508737613441,"^[","^8P","~$goog.debug.errorcontext","^8R"],["^1I","clojure/zip.cljs"],[1537260906289,"^[","^Z"],["^1I","goog/string/stringbuffer.js"],[1508737613441,"^["],["^1I","goog/math/coordinate.js"],[1508737613441,"^[","~$goog.math"],["^1I","goog/debug/errorcontext.js"],[1508737613441,"^["],["^1I","cljs/tools/reader/reader_types.cljs"],[1537358547920,"^[","^Z","^9K","^8C","^9N"],["^1I","goog/iter/iter.js"],[1508737613441,"^[","^8P","^8Q","^:8","^;E"],["^1I","goog/async/nexttick.js"],[1508737613441,"^[","^9E","^:H","^:8","^9:","^9;"],["^1I","goog/html/uncheckedconversions.js"],[1508737613441,"^[","^8Q","^:B","^:C","^:D","^:E","^:F","^8U","^8C","^8X"],["^1I","goog/debug/logger.js"],[1508737613441,"^[","^8P","^8Q","^;8","~$goog.debug.LogBuffer","^;2"],["^1I","com/cognitect/transit/caching.js"],[1482686437866,"^[","^:T"],["^8Z","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1537358551000,1529417620000,"^8["],["^1I","fulcro/client/impl/application.cljc"],[1537260907310,"^[","^Z","^S","^W","^10","^14","^P","~$fulcro.client.impl.data-fetch","^12","^T","^A","^=","^16","^U"],["^1I","goog/module/moduleloader.js"],[1508737613441,"^[","^9O","^8P","^:6","^:7","~$goog.events.EventHandler","~$goog.events.EventId","^8K","~$goog.html.legacyconversions","^9:","^9Q","^:1","~$goog.net.BulkLoader","^9S","~$goog.net.jsloader","^8R","~$goog.userAgent.product"],["^1I","goog/events/event.js"],[1508737613441,"^[","^8M","^;I"],["^1I","cljs/tools/reader/impl/commons.cljs"],[1537358547920,"^[","^Z","^9J","^9>","^9K"],["^1I","goog/events/eventhandler.js"],[1508737613441,"^[","^8M","^:6","^8S"],["^1I","goog/dom/htmlelement.js"],[1508737613441,"^["],["^1I","cljs/core.cljs"],[1537260906289,"^;A","~$goog.math.Integer","^8C","^8S","^8P","^M","^9N"],["^1I","com/cognitect/transit.js"],[1482686437866,"^[","^:S","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^:U","^;B","^9B","^9C"],["^1I","goog/html/safescript.js"],[1508737613441,"^[","^8Q","^8X","^8Y"],["^1I","goog/log/log.js"],[1508737613441,"^[","^;8","~$goog.debug.LogManager","^;2","^:J"],["^1I","fulcro/logging.cljc"],[1537260907310,"^[","^Z","^8O","^?","^9Q","^8S","~$goog.debug.Logger.Level","~$goog.debug.Console"],["^1I","goog/html/safestylesheet.js"],[1508737613441,"^[","^8P","^8Q","^:D","^8S","^8C","^8X","^8Y"],["^1I","goog/events/browserevent.js"],[1508737613441,"^[","^9G","^:7","~$goog.events.EventType","^9=","^8R"],["^1I","goog/math/integer.js"],[1508737613441,"^["],["^1I","goog/debug/console.js"],[1508737613441,"^[","^;Q","^:J","~$goog.debug.TextFormatter"],["^1I","goog/structs/simplepool.js"],[1508737613441,"^[","^8M"],["^1I","goog/dom/browserfeature.js"],[1508737613441,"^[","^8R"],["^1I","goog/net/bulkloader.js"],[1508737613441,"^[","^;H","^8K","^9Q","~$goog.net.BulkLoaderHelper","^9S","^:N"],["^1I","clojure/set.cljs"],[1537260906289,"^[","^Z"],["^1I","goog/uri/utils.js"],[1508737613441,"^[","^8P","^8Q","^8C"],["^1I","goog/string/const.js"],[1508737613441,"^[","^8Q","^8Y"],["^1I","goog/json/json.js"],[1508737613441,"^["],["^1I","goog/events/listenable.js"],[1508737613441,"^[","^;I"],["^1I","com/cognitect/transit/impl/writer.js"],[1482686437866,"^[","^:S","^9C","~$com.cognitect.transit.handlers","^:U","^:T","^;A"],["^1I","goog/net/xmlhttpfactory.js"],[1508737613441,"^[","^:4"],["^1I","goog/net/xmlhttp.js"],[1508737613441,"^[","^8Q","~$goog.net.WrapperXmlHttpFactory","^:5"],["^1I","fulcro/client/impl/parser.cljc"],[1537260907310,"^[","^Z","^P","^S","^12"],["^1I","goog/net/xhrlike.js"],[1508737613441,"^["],["^1I","goog/mochikit/async/deferred.js"],[1508737611097,"^[","^8J","^;:","^8P","^8Q","^:G"],["^1I","cognitect/transit.cljs"],[1537260903184,"^[","^Z","^:@","^:U","^;B","^;A"],["^8D","^;3"],[1537260906000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","fulcro/client.cljc","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D"],"^E",["^F",[]],"^G","^H","^K",["^ ","^L","^M"],"^N",["^ ","^O","^P","^@","^A","^Q","^Q","^L","^M","^R","^S","^T","^T","~$p","^U","^V","^W","^S","^S","^X","^T","^Y","^=","^Z","^Z","^[","^[","^10","^10","^11","^11","^W","^W","^=","^=","^12","^12","^13","^14","^P","^P","~$m","^10","^<","^=","^15","^12","^16","^16","^17","^Q","^18","^16","~$s","^A","^19","^U","^A","^A","^1:","^11","^14","^14","^U","^U"],"^1;",["^F",["^1<","^1="]],"~:shadow/js-access-global",["^F",["window","Error"]],"^1>",null,"~:defs",["^ ","~$reset-history-impl",["^ ","~:protocol-inline",null,"^5",["^ ","^6","fulcro/client.cljc","^7",252,"^8",7,"^9",252,"^:",25,"~:arglists",["^1@",["~$quote",["^1@",[[["^ ","~:keys",["~$reconciler"]]]]]]],"~:doc","Needed for mocking in tests. Use FulcroApplication protocol methods instead."],"^G","~$fulcro.client/reset-history-impl","~:variadic",false,"^6","fulcro/client.cljc","^:",25,"~:method-params",["^1@",[["~$p__43367"]]],"~:protocol-impl",null,"~:arglists-meta",["^1@",[null,null]],"^8",1,"^7",252,"^9",252,"~:max-fixed-arity",1,"~:fn-var",true,"^<2",["^1@",["^<3",["^1@",[[["^ ","^<4",["^<5"]]]]]]],"^<6","Needed for mocking in tests. Use FulcroApplication protocol methods instead."],"~$uri-params",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",341,"^8",10,"^9",341,"^:",20,"^<2",["^1@",["^<3",["^1@",[[],["~$url"]]]]],"^<6","Get the current URI parameters from the browser url or one you supply","~:top-fn",["^ ","^<8",false,"^<=",1,"^<9",["^1@",[[],["^<@"]]],"^<2",["^1@",[[],["^<@"]]],"^<<",["^1@",[null,null]]]],"^G","~$fulcro.client/uri-params","^<8",false,"^6","fulcro/client.cljc","^:",20,"^<A",["^ ","^<8",false,"^<=",1,"^<9",["^1@",[[],["^<@"]]],"^<2",["^1@",[[],["^<@"]]],"^<<",["^1@",[null,null]]],"^<9",["^1@",[[],["^<@"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",4,"^7",341,"^9",341,"^<=",1,"^<>",true,"^<2",["^1@",[[],["^<@"]]],"^<6","Get the current URI parameters from the browser url or one you supply"],"~$merge-alternate-union-elements!",["^ ","^G","~$fulcro.client/merge-alternate-union-elements!","^6","fulcro/client.cljc","^7",359,"^8",1,"^9",359,"^:",37,"^5",["^ ","^6","fulcro/client.cljc","^7",359,"^8",6,"^9",359,"^:",37],"^<6","DEPRECATED: Now defined in fulcro.client.primitives"],"~$mount",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",168,"^8",4,"^9",168,"^:",9,"~:protocol","~$fulcro.client/FulcroApplication","^<6","Start/replace the webapp on the given DOM ID or DOM Node.","^<2",["^1@",["^<3",["^1@",[["~$this","~$root-component","~$target-dom-id"]]]]]],"^<F","^<G","^G","~$fulcro.client/mount","^<8",false,"^6","fulcro/client.cljc","^:",9,"^<9",["^1@",[["^<H","^<I","^<J"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",167,"^9",168,"^<=",3,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^<H","^<I","^<J"]]]]],"^<6","Start/replace the webapp on the given DOM ID or DOM Node."],"~$iident?",["^ ","^G","~$fulcro.client/iident?","^6","fulcro/client.cljc","^7",371,"^8",1,"^9",371,"^:",13,"^5",["^ ","^6","fulcro/client.cljc","^7",371,"^8",6,"^9",371,"^:",13],"^<6","DEPRECATED: Now defined in fulcro.client.primitives","~:tag","~$boolean"],"~$abort-request!",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",174,"^8",4,"^9",174,"^:",18,"^<F","^<G","^<6","Abort the given request on all remotes. abort-id is a self-assigned ID for the remote interaction.","^<2",["^1@",["^<3",["^1@",[["^<H","~$abort-id"]]]]]],"^<F","^<G","^G","~$fulcro.client/abort-request!","^<8",false,"^6","fulcro/client.cljc","^:",18,"^<9",["^1@",[["^<H","^<Q"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",167,"^9",174,"^<=",2,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^<H","^<Q"]]]]],"^<6","Abort the given request on all remotes. abort-id is a self-assigned ID for the remote interaction."],"~$mutation-query?",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",187,"^8",8,"^9",187,"^:",23,"~:private",true,"^<2",["^1@",["^<3",["^1@",[["~$tx"]]]]]],"^<T",true,"^G","~$fulcro.client/mutation-query?","^<8",false,"^6","fulcro/client.cljc","^:",23,"^<9",["^1@",[["^<U"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",187,"^9",187,"^<=",1,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^<U"]]]]]],"~$start-networking",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",177,"^8",8,"^9",177,"^:",24,"^<T",true,"^<2",["^1@",["^<3",["^1@",[["~$network-map"]]]]],"^<6","Starts all remotes in a map. If a remote's `start` returns something that implements `FulcroNetwork`,\n  update the network map with this value. Returns possibly updated `network-map`."],"^<T",true,"^G","~$fulcro.client/start-networking","^<8",false,"^6","fulcro/client.cljc","^:",24,"^<9",["^1@",[["^<X"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",177,"^9",177,"^<=",1,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^<X"]]]]],"^<6","Starts all remotes in a map. If a remote's `start` returns something that implements `FulcroNetwork`,\n  update the network map with this value. Returns possibly updated `network-map`."],"~$merge-state!",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",363,"^8",7,"^9",363,"^:",19,"^<2",["^1@",["^<3",["^1@",[["~$app-or-reconciler","~$component","~$object-data","~$&","~$named-params"]]]]],"^<6","See primitives/merge-component!","^<A",["^ ","^<8",true,"^<=",3,"^<9",[["^1@",["^<[","^=0","^=1","^=2"]]],"^<2",["^1@",[["^<[","^=0","^=1","~$&","^=2"]]],"^<<",["^1@",[null]]]],"^G","~$fulcro.client/merge-state!","^<8",true,"^6","fulcro/client.cljc","^:",19,"^<A",["^ ","^<8",true,"^<=",3,"^<9",[["^1@",["^<[","^=0","^=1","^=2"]]],"^<2",["^1@",[["^<[","^=0","^=1","~$&","^=2"]]],"^<<",["^1@",[null]]],"^<9",[["^1@",["^<[","^=0","^=1","^=2"]]],"^<;",null,"^<<",["^1@",[null]],"^8",1,"^7",363,"^9",363,"^<=",3,"^<>",true,"^<2",["^1@",[["^<[","^=0","^=1","~$&","^=2"]]],"^<6","See primitives/merge-component!"],"~$normalize-network",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",52,"^8",8,"^9",52,"^:",25,"^<T",true,"^<2",["^1@",["^<3",["^1@",[["~$networking"]]]]]],"^<T",true,"^G","~$fulcro.client/normalize-network","^<8",false,"^6","fulcro/client.cljc","^:",25,"^<9",["^1@",[["^=5"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",52,"^9",52,"^<=",1,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^=5"]]]]]],"~$mutate",["^ ","^G","~$fulcro.client/mutate","^6","fulcro/client.cljc","^7",74,"^8",1,"^9",74,"^:",12,"^5",["^ ","^6","fulcro/client.cljc","^7",74,"^8",6,"^9",74,"^:",12]],"~$get-url-param",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",351,"^8",10,"^9",351,"^:",23,"^<2",["^1@",["^<3",["^1@",[["~$param-name"],["^<@","^=:"]]]]],"^<6","Get the value of the named parameter from the browser URL (or an explicit one)","^<A",["^ ","^<8",false,"^<=",2,"^<9",["^1@",[["^=:"],["^<@","^=:"]]],"^<2",["^1@",[["^=:"],["^<@","^=:"]]],"^<<",["^1@",[null,null]]]],"^G","~$fulcro.client/get-url-param","^<8",false,"^6","fulcro/client.cljc","^:",23,"^<A",["^ ","^<8",false,"^<=",2,"^<9",["^1@",[["^=:"],["^<@","^=:"]]],"^<2",["^1@",[["^=:"],["^<@","^=:"]]],"^<<",["^1@",[null,null]]],"^<9",["^1@",[["^=:"],["^<@","^=:"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",4,"^7",351,"^9",351,"^<=",2,"^<>",true,"^<2",["^1@",[["^=:"],["^<@","^=:"]]],"^<6","Get the value of the named parameter from the browser URL (or an explicit one)"],"~$reset-state!",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",169,"^8",4,"^9",169,"^:",16,"^<F","^<G","^<6","Replace the entire app state with the given (pre-normalized) state.","^<2",["^1@",["^<3",["^1@",[["^<H","~$new-state"]]]]]],"^<F","^<G","^G","~$fulcro.client/reset-state!","^<8",false,"^6","fulcro/client.cljc","^:",16,"^<9",["^1@",[["^<H","^=="]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",167,"^9",169,"^<=",2,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^<H","^=="]]]]],"^<6","Replace the entire app state with the given (pre-normalized) state."],"~$get-url",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",336,"^8",10,"^9",336,"^:",17,"^<2",["^1@",["^<3",["^1@",[[]]]]],"^<6","Get the current window location from the browser"],"^G","~$fulcro.client/get-url","^<8",false,"^6","fulcro/client.cljc","^:",17,"^<9",["^1@",[[]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",4,"^7",336,"^9",336,"^<=",0,"^<>",true,"^<2",["^1@",["^<3",["^1@",[[]]]]],"^<6","Get the current window location from the browser"],"~$iinitial-app-state?",["^ ","^G","~$fulcro.client/iinitial-app-state?","^6","fulcro/client.cljc","^7",370,"^8",1,"^9",370,"^:",25,"^5",["^ ","^6","fulcro/client.cljc","^7",370,"^8",6,"^9",370,"^:",25],"^<6","DEPRECATED: Now defined in fulcro.client.primitives","^<N","^<O"],"~$mount*",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",269,"^8",7,"^9",269,"^:",13,"^<2",["^1@",["^<3",["^1@",[[["^ ","^<4",["~$mounted?","~$initial-state","~$reconciler-options"],"^1C","^1:"],"^<I","~$dom-id-or-node"]]]]]],"^G","~$fulcro.client/mount*","^<8",false,"^6","fulcro/client.cljc","^:",13,"^<9",["^1@",[["~$p__43396","^<I","^=G"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",269,"^9",269,"^<=",3,"^<>",true,"^<2",["^1@",["^<3",["^1@",[[["^ ","^<4",["^=D","^=E","^=F"],"^1C","^1:"],"^<I","^=G"]]]]]],"~$refresh",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",172,"^8",4,"^9",172,"^:",11,"^<F","^<G","^<6","Refresh the UI (force re-render).","^<2",["^1@",["^<3",["^1@",[["^<H"]]]]]],"^<F","^<G","^G","~$fulcro.client/refresh","^<8",false,"^6","fulcro/client.cljc","^:",11,"^<9",["^1@",[["^<H"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",167,"^9",172,"^<=",1,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^<H"]]]]],"^<6","Refresh the UI (force re-render)."],"~$new-fulcro-test-client",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",326,"^8",7,"^9",326,"^:",29,"^<2",["^1@",["^<3",["^1@",[["~$&",["^ ","^<4",["^=E","~$started-callback","^=F"],"~:or",["^ ","^=E",["^ "],"^=M",null]]]]]]],"^<6","Create a test client that has no networking. Useful for UI testing with a real Fulcro app container.","^<A",["^ ","^<8",true,"^<=",0,"^<9",[["^1@",[["^ ","^<4",["^=E","^=M","^=F"],"^=N",["^ ","^=E",["^ "],"^=M",null]]]]],"^<2",["^1@",[["~$&",["^ ","^<4",["^=E","^=M","^=F"],"^=N",["^ ","^=E",["^ "],"^=M",null]]]]],"^<<",["^1@",[null]]]],"^G","~$fulcro.client/new-fulcro-test-client","^<8",true,"^6","fulcro/client.cljc","^:",29,"^<A",["^ ","^<8",true,"^<=",0,"^<9",[["^1@",[["^ ","^<4",["^=E","^=M","^=F"],"^=N",["^ ","^=E",["^ "],"^=M",null]]]]],"^<2",["^1@",[["~$&",["^ ","^<4",["^=E","^=M","^=F"],"^=N",["^ ","^=E",["^ "],"^=M",null]]]]],"^<<",["^1@",[null]]],"^<9",[["^1@",[["^ ","^<4",["^=E","^=M","^=F"],"^=N",["^ ","^=E",["^ "],"^=M",null]]]]],"^<;",null,"^<<",["^1@",[null]],"^8",1,"^7",326,"^9",326,"^<=",0,"^<>",true,"^<2",["^1@",[["~$&",["^ ","^<4",["^=E","^=M","^=F"],"^=N",["^ ","^=E",["^ "],"^=M",null]]]]],"^<6","Create a test client that has no networking. Useful for UI testing with a real Fulcro app container."],"~$integrate-ident",["^ ","^G","~$fulcro.client/integrate-ident","^6","fulcro/client.cljc","^7",361,"^8",1,"^9",361,"^:",21,"^5",["^ ","^6","fulcro/client.cljc","^7",361,"^8",6,"^9",361,"^:",21],"^<6","DEPRECATED: Now defined in fulcro.client.primitives"],"~$refresh*",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",258,"^8",7,"^9",258,"^:",15,"^<2",["^1@",["^<3",["^1@",[[["^ ","^<4",["^<5"],"^1C","^1:"],"~$root","~$target"]]]]]],"^G","~$fulcro.client/refresh*","^<8",false,"^6","fulcro/client.cljc","^:",15,"^<9",["^1@",[["~$p__43380","^=S","^=T"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",258,"^9",258,"^<=",3,"^<>",true,"^<2",["^1@",["^<3",["^1@",[[["^ ","^<4",["^<5"],"^1C","^1:"],"^=S","^=T"]]]]]],"~$integrate-ident!",["^ ","^G","~$fulcro.client/integrate-ident!","^6","fulcro/client.cljc","^7",362,"^8",1,"^9",362,"^:",22,"^5",["^ ","^6","fulcro/client.cljc","^7",362,"^8",6,"^9",362,"^:",22],"^<6","DEPRECATED: Now defined in fulcro.client.primitives"],"~$merge-alternate-union-elements",["^ ","^G","~$fulcro.client/merge-alternate-union-elements","^6","fulcro/client.cljc","^7",360,"^8",1,"^9",360,"^:",36,"^5",["^ ","^6","fulcro/client.cljc","^7",360,"^8",6,"^9",360,"^:",36],"^<6","DEPRECATED: Now defined in fulcro.client.primitives"],"~$clear-pending-remote-requests!",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",171,"^8",4,"^9",171,"^:",34,"^<F","^<G","^<6","Remove all pending network requests on the given remote(s). Useful on failures to eliminate cascading failures. Remote can be a keyword, set, or nil. `nil` means all remotes.","^<2",["^1@",["^<3",["^1@",[["^<H","~$remotes"]]]]]],"^<F","^<G","^G","~$fulcro.client/clear-pending-remote-requests!","^<8",false,"^6","fulcro/client.cljc","^:",34,"^<9",["^1@",[["^<H","^>0"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",167,"^9",171,"^<=",2,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^<H","^>0"]]]]],"^<6","Remove all pending network requests on the given remote(s). Useful on failures to eliminate cascading failures. Remote can be a keyword, set, or nil. `nil` means all remotes."],"~$new-fulcro-client",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",76,"^8",7,"^9",76,"^:",24,"^<2",["^1@",["^<3",["^1@",[["~$&",["^ ","^<4",["^=E","~$mutation-merge","^=M","^=5","^=F","~$query-interpreter","~$read-local","~$request-transform","~$network-error-callback","~$migrate","~$transit-handlers","~$shared"],"^=N",["^ ","^=E",["^ "],"^>5",["^1@",["~$constantly",false]],"^=M",["^1@",["^>;",null]],"^>7",["^1@",["^>;",null]],"^>8",null,"^>:",null]]]]]]],"^<6","Entry point for creating a new fulcro client. Instantiates an Application with default values, unless\n  overridden by the parameters. If you do not supply a networking object, one will be provided that connects to the\n  same server the application was served from, at `/api`.\n\n  If you supply a `:request-transform` it must be a function:\n\n  ```\n (fn [{:keys [body headers]}] {:body body' :headers headers'})\n  ```\n\n  it can replace the outgoing EDN of body or headers (returning both as a vector). NOTE: Both of these are clojurescript types.\n  The edn will be encoded with transit, and the headers will be converted to a js map. IMPORTANT: Only supported\n  when using the default built-in single-remote networking.\n\n  `:initial-state` is your applications initial state. If it is an atom, it *must* be normalized. Fulcro databases\n  always have normalization turned on (for server data merging). If it is not an atom, it will be auto-normalized.\n\n  `:started-callback` is an optional function that will receive the intiailized fulcro application after it is\n  mounted in the DOM, and is useful for triggering initial loads, routing mutations, etc. The reconciler is available\n  under the `:reconciler` key (and you can access the app state, root node, etc from there.)\n\n  `:network-error-callback` is a function of three arguments, the app state atom, status code, and the error, which will be invoked for\n  every network error (status code >= 400, or no network found). Only works if you choose to use the default built-in\n  networking (ignored if you also specify :networking).\n\n  `:migrate` is optional. It is a (fn [state tid->rid] ... state') that should return a new state where all tempids\n  (the keys of `tid->rid`) are rewritten to real ids (the values of tid->rid). This defaults to a full recursive\n  algorithm against all data in the app-state, which is correct but possibly slow).  Note that tempids will have an tempid data type.\n  See reconciler documentation for further information.\n\n  `:transit-handlers` (optional). A map with keys for `:read` and `:write`, which contain maps to be used for the read\n  and write side of transit to extend the supported data types. See `make-fulcro-network` in network.cljs. Only used\n  when you default to the built-in networking.\n\n  `:shared` (optional). A map of arbitrary values to be shared across all components, accessible to them via (prim/shared this)\n\n  `:read-local` (optional). An read function for the Parser. (fn [env k params] ...). If supplied,\n  it will be called once for each root-level query key. If it returns `nil` or `false` for that key then the built-in Fulcro read will handle that\n  branch of the root query. If it returns a map with the shape `{:value ...}`, then that will be used for the response. This is *not*\n  recursive. If you begin handling a *branch* (e.g. a join), you must finish doing so (though if using recursion, you can technically handle just\n  the properties that need your custom handling). At any time you can use `prim/db->tree` to get raw graph data from the database for a branch.\n  NOTE: *it will be allowed* to trigger remote reads. This is not recommended, as you will probably have to augment the networking layer to\n  get it to do what you mean. Use `load` instead. You have been warned. Triggering remote reads is allowed, but discouraged and unsupported.\n\n  `:query-interpreter` (optional). A custom query engine (parser and interpreter) that will be used to satisfy all\n  local client queries from the local state database. Cannot be used with `:read-local`.\n  It must be a `(fn [env query] )` that returns the result for the given query. It will not be given mutations.\n  The `env` will contain the `:state` atom, `:shared`, and `:parser`. It may also contain the `:reconciler`.\n\n  `:networking` (optional). An instance of FulcroNetwork that will act as the default remote (named :remote). If\n  you want to support multiple remotes, then this should be a map whose keys are the keyword names of the remotes\n  and whose values are FulcroNetwork instances.\n\n  `:mutation-merge (optional). A function `(fn [state mutation-symbol return-value])` that receives the app state as a\n  map (NOT an atom) and should return the new state as a map. This function is run when network results are being merged,\n  and is called once for each mutation that had a return value on the server. Returning nil from this function is safe, and will be ignored\n  with a console message for debugging. If you need information about the original mutation arguments then you must reflect\n  them back from the server in your return value. By default such values are discarded.\n  \n  `:reconciler-options (optional). A map that will be merged into the reconciler options. Currently it's mostly\n  useful to override things like :root-render and :root-unmount for React Native Apps.`\n\n  There is currently no way to circumvent the encoding of the body into transit. If you want to talk to other endpoints\n  via alternate protocols you must currently implement that outside of the framework (e.g. global functions/state).\n  ","^<A",["^ ","^<8",true,"^<=",0,"^<9",[["^1@",[["^ ","^<4",["^=E","^>3","^=M","^=5","^=F","^>4","^>5","^>6","^>7","^>8","^>9","^>:"],"^=N",["^ ","^=E",["^ "],"^>5",["^1@",["^>;",false]],"^=M",["^1@",["^>;",null]],"^>7",["^1@",["^>;",null]],"^>8",null,"^>:",null]]]]],"^<2",["^1@",[["~$&",["^ ","^<4",["^=E","^>3","^=M","^=5","^=F","^>4","^>5","^>6","^>7","^>8","^>9","^>:"],"^=N",["^ ","^=E",["^ "],"^>5",["^1@",["^>;",false]],"^=M",["^1@",["^>;",null]],"^>7",["^1@",["^>;",null]],"^>8",null,"^>:",null]]]]],"^<<",["^1@",[null]]]],"^G","~$fulcro.client/new-fulcro-client","^<8",true,"^6","fulcro/client.cljc","^:",24,"^<A",["^ ","^<8",true,"^<=",0,"^<9",[["^1@",[["^ ","^<4",["^=E","^>3","^=M","^=5","^=F","^>4","^>5","^>6","^>7","^>8","^>9","^>:"],"^=N",["^ ","^=E",["^ "],"^>5",["^1@",["^>;",false]],"^=M",["^1@",["^>;",null]],"^>7",["^1@",["^>;",null]],"^>8",null,"^>:",null]]]]],"^<2",["^1@",[["~$&",["^ ","^<4",["^=E","^>3","^=M","^=5","^=F","^>4","^>5","^>6","^>7","^>8","^>9","^>:"],"^=N",["^ ","^=E",["^ "],"^>5",["^1@",["^>;",false]],"^=M",["^1@",["^>;",null]],"^>7",["^1@",["^>;",null]],"^>8",null,"^>:",null]]]]],"^<<",["^1@",[null]]],"^<9",[["^1@",[["^ ","^<4",["^=E","^>3","^=M","^=5","^=F","^>4","^>5","^>6","^>7","^>8","^>9","^>:"],"^=N",["^ ","^=E",["^ "],"^>5",["^1@",["^>;",false]],"^=M",["^1@",["^>;",null]],"^>7",["^1@",["^>;",null]],"^>8",null,"^>:",null]]]]],"^<;",null,"^<<",["^1@",[null]],"^8",1,"^7",76,"^9",76,"^<=",0,"^<>",true,"^<2",["^1@",[["~$&",["^ ","^<4",["^=E","^>3","^=M","^=5","^=F","^>4","^>5","^>6","^>7","^>8","^>9","^>:"],"^=N",["^ ","^=E",["^ "],"^>5",["^1@",["^>;",false]],"^=M",["^1@",["^>;",null]],"^>7",["^1@",["^>;",null]],"^>8",null,"^>:",null]]]]],"^<6","Entry point for creating a new fulcro client. Instantiates an Application with default values, unless\n  overridden by the parameters. If you do not supply a networking object, one will be provided that connects to the\n  same server the application was served from, at `/api`.\n\n  If you supply a `:request-transform` it must be a function:\n\n  ```\n (fn [{:keys [body headers]}] {:body body' :headers headers'})\n  ```\n\n  it can replace the outgoing EDN of body or headers (returning both as a vector). NOTE: Both of these are clojurescript types.\n  The edn will be encoded with transit, and the headers will be converted to a js map. IMPORTANT: Only supported\n  when using the default built-in single-remote networking.\n\n  `:initial-state` is your applications initial state. If it is an atom, it *must* be normalized. Fulcro databases\n  always have normalization turned on (for server data merging). If it is not an atom, it will be auto-normalized.\n\n  `:started-callback` is an optional function that will receive the intiailized fulcro application after it is\n  mounted in the DOM, and is useful for triggering initial loads, routing mutations, etc. The reconciler is available\n  under the `:reconciler` key (and you can access the app state, root node, etc from there.)\n\n  `:network-error-callback` is a function of three arguments, the app state atom, status code, and the error, which will be invoked for\n  every network error (status code >= 400, or no network found). Only works if you choose to use the default built-in\n  networking (ignored if you also specify :networking).\n\n  `:migrate` is optional. It is a (fn [state tid->rid] ... state') that should return a new state where all tempids\n  (the keys of `tid->rid`) are rewritten to real ids (the values of tid->rid). This defaults to a full recursive\n  algorithm against all data in the app-state, which is correct but possibly slow).  Note that tempids will have an tempid data type.\n  See reconciler documentation for further information.\n\n  `:transit-handlers` (optional). A map with keys for `:read` and `:write`, which contain maps to be used for the read\n  and write side of transit to extend the supported data types. See `make-fulcro-network` in network.cljs. Only used\n  when you default to the built-in networking.\n\n  `:shared` (optional). A map of arbitrary values to be shared across all components, accessible to them via (prim/shared this)\n\n  `:read-local` (optional). An read function for the Parser. (fn [env k params] ...). If supplied,\n  it will be called once for each root-level query key. If it returns `nil` or `false` for that key then the built-in Fulcro read will handle that\n  branch of the root query. If it returns a map with the shape `{:value ...}`, then that will be used for the response. This is *not*\n  recursive. If you begin handling a *branch* (e.g. a join), you must finish doing so (though if using recursion, you can technically handle just\n  the properties that need your custom handling). At any time you can use `prim/db->tree` to get raw graph data from the database for a branch.\n  NOTE: *it will be allowed* to trigger remote reads. This is not recommended, as you will probably have to augment the networking layer to\n  get it to do what you mean. Use `load` instead. You have been warned. Triggering remote reads is allowed, but discouraged and unsupported.\n\n  `:query-interpreter` (optional). A custom query engine (parser and interpreter) that will be used to satisfy all\n  local client queries from the local state database. Cannot be used with `:read-local`.\n  It must be a `(fn [env query] )` that returns the result for the given query. It will not be given mutations.\n  The `env` will contain the `:state` atom, `:shared`, and `:parser`. It may also contain the `:reconciler`.\n\n  `:networking` (optional). An instance of FulcroNetwork that will act as the default remote (named :remote). If\n  you want to support multiple remotes, then this should be a map whose keys are the keyword names of the remotes\n  and whose values are FulcroNetwork instances.\n\n  `:mutation-merge (optional). A function `(fn [state mutation-symbol return-value])` that receives the app state as a\n  map (NOT an atom) and should return the new state as a map. This function is run when network results are being merged,\n  and is called once for each mutation that had a return value on the server. Returning nil from this function is safe, and will be ignored\n  with a console message for debugging. If you need information about the original mutation arguments then you must reflect\n  them back from the server in your return value. By default such values are discarded.\n  \n  `:reconciler-options (optional). A map that will be merged into the reconciler options. Currently it's mostly\n  useful to override things like :root-render and :root-unmount for React Native Apps.`\n\n  There is currently no way to circumvent the encoding of the body into transit. If you want to talk to other endpoints\n  via alternate protocols you must currently implement that outside of the framework (e.g. global functions/state).\n  "],"~$fulcro-tools",["^ ","^G","~$fulcro.client/fulcro-tools","^6","fulcro/client.cljc","^7",26,"^8",1,"^9",26,"^:",22,"^5",["^ ","^6","fulcro/client.cljc","^7",26,"^8",10,"^9",26,"^:",22],"^<N","~$any"],"~$reset-history!",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",175,"^8",4,"^9",175,"^:",18,"^<F","^<G","^<6","Returns the application with history reset to its initial, empty state. Resets application history to its initial, empty state. Suitable for resetting the app for situations such as user log out.","^<2",["^1@",["^<3",["^1@",[["^<H"]]]]]],"^<F","^<G","^G","~$fulcro.client/reset-history!","^<8",false,"^6","fulcro/client.cljc","^:",18,"^<9",["^1@",[["^<H"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",167,"^9",175,"^<=",1,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^<H"]]]]],"^<6","Returns the application with history reset to its initial, empty state. Resets application history to its initial, empty state. Suitable for resetting the app for situations such as user log out."],"~$history",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",173,"^8",4,"^9",173,"^:",11,"^<F","^<G","^<6","Return the current UI history of the application, suitable for network transfer","^<2",["^1@",["^<3",["^1@",[["^<H"]]]]]],"^<F","^<G","^G","~$fulcro.client/history","^<8",false,"^6","fulcro/client.cljc","^:",11,"^<9",["^1@",[["^<H"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",167,"^9",173,"^<=",1,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^<H"]]]]],"^<6","Return the current UI history of the application, suitable for network transfer"],"~$FulcroApplication",["^ ","^5",["^ ","^6","fulcro/client.cljc","^7",167,"^8",14,"^9",167,"^:",31,"^<6",null,"~:protocol-symbol",true,"~:jsdoc",["^1@",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","^<E",[["^<H","^<I","^<J"]],"^=<",[["^<H","^=="]],"~$reset-app!",[["^<H","^<I","~$callback"]],"^=[",[["^<H","^>0"]],"^=J",[["^<H"]],"^>B",[["^<H"]],"^<P",[["^<H","^<Q"]],"^>@",[["^<H"]]]]],"^>E",true,"^G","^<G","^6","fulcro/client.cljc","^:",31,"^8",1,"^7",167,"^>G",["^ ","^>H",["^ ","^<E",[["^<H","^<I","^<J"]],"^=<",[["^<H","^=="]],"^>I",[["^<H","^<I","^>J"]],"^=[",[["^<H","^>0"]],"^=J",[["^<H"]],"^>B",[["^<H"]],"^<P",[["^<H","^<Q"]],"^>@",[["^<H"]]]],"~:info",null,"^9",167,"^<N","^>?","~:impls",["^F",["~$fulcro.client/Application"]],"^<6",null,"^>F",["^1@",["@interface"]]],"~$->Application",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",283,"^8",12,"^9",283,"^:",23,"~:internal-ctor",true,"~:factory","~:positional","^<2",["^1@",["^<3",["^1@",[["^=E","^>3","^=M","^>0","^=5","~$send-queues","~$response-channels","^<5","^>5","^>4","^=D","^=F"]]]]],"^<6","Positional factory function for fulcro.client/Application."],"^G","~$fulcro.client/->Application","^<8",false,"^6","fulcro/client.cljc","^:",23,"^<9",["^1@",[["^=E","^>3","^=M","^>0","^=5","^>R","^>S","^<5","^>5","^>4","^=D","^=F"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^>O",true,"^>P","^>Q","^7",283,"^9",283,"^<=",12,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^=E","^>3","^=M","^>0","^=5","^>R","^>S","^<5","^>5","^>4","^=D","^=F"]]]]],"^<6","Positional factory function for fulcro.client/Application."],"~$map->Application",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",283,"^8",12,"^9",283,"^:",23,"^>O",true,"^>P","~:map","^<2",["^1@",["^<3",["^1@",[["~$G__43423"]]]]],"^<6","Factory function for fulcro.client/Application, taking a map of keywords to field values."],"^G","~$fulcro.client/map->Application","^<8",false,"^6","fulcro/client.cljc","^:",23,"^<9",["^1@",[["^>W"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^>O",true,"^>P","^>V","^7",283,"^9",283,"^<=",1,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^>W"]]]]],"^<6","Factory function for fulcro.client/Application, taking a map of keywords to field values."],"^>I",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",170,"^8",4,"^9",170,"^:",14,"^<F","^<G","^<6","Replace the entire app state with the initial app state defined on the root component (includes auto-merging of unions). callback can be nil, a function, or :original (to call original started-callback).","^<2",["^1@",["^<3",["^1@",[["^<H","^<I","^>J"]]]]]],"^<F","^<G","^G","~$fulcro.client/reset-app!","^<8",false,"^6","fulcro/client.cljc","^:",14,"^<9",["^1@",[["^<H","^<I","^>J"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",167,"^9",170,"^<=",3,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^<H","^<I","^>J"]]]]],"^<6","Replace the entire app state with the initial app state defined on the root component (includes auto-merging of unions). callback can be nil, a function, or :original (to call original started-callback)."],"~$clear-queue",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",234,"^8",7,"^9",234,"^:",18,"^<2",["^1@",["^<3",["^1@",[["~$queue"]]]]],"^<6","Needed for mocking in tests. Do not use directly. Use FulcroApplication protocol methods instead."],"^G","~$fulcro.client/clear-queue","^<8",false,"^6","fulcro/client.cljc","^:",18,"^<9",["^1@",[["^>["]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",234,"^9",234,"^<=",1,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^>["]]]]],"^<6","Needed for mocking in tests. Do not use directly. Use FulcroApplication protocol methods instead."],"~$initialize",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",202,"^8",8,"^9",202,"^:",18,"^<T",true,"^<2",["^1@",["^<3",["^1@",[[["^ ","^<4",["^=5","^>5","^=M","^>4"],"^1C","^1:"],"^=E","^<I","^=G","^=F"]]]]],"^<6","Initialize the fulcro Application. Creates network queue, sets up i18n, creates reconciler, mounts it, and returns\n  the initialized app"],"^<T",true,"^G","~$fulcro.client/initialize","^<8",false,"^6","fulcro/client.cljc","^:",18,"^<9",["^1@",[["~$p__43332","^=E","^<I","^=G","^=F"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",202,"^9",202,"^<=",5,"^<>",true,"^<2",["^1@",["^<3",["^1@",[[["^ ","^<4",["^=5","^>5","^=M","^>4"],"^1C","^1:"],"^=E","^<I","^=G","^=F"]]]]],"^<6","Initialize the fulcro Application. Creates network queue, sets up i18n, creates reconciler, mounts it, and returns\n  the initialized app"],"~$abort-items-on-queue",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",241,"^8",8,"^9",241,"^:",28,"^<T",true,"^<2",["^1@",["^<3",["^1@",[["^>[","^<Q"]]]]]],"^<T",true,"^G","~$fulcro.client/abort-items-on-queue","^<8",false,"^6","fulcro/client.cljc","^:",28,"^<9",["^1@",[["^>[","^<Q"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",241,"^9",241,"^<=",2,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^>[","^<Q"]]]]]],"~$merge-component",["^ ","^G","~$fulcro.client/merge-component","^6","fulcro/client.cljc","^7",357,"^8",1,"^9",357,"^:",21,"^5",["^ ","^6","fulcro/client.cljc","^7",357,"^8",6,"^9",357,"^:",21],"^<6","DEPRECATED: Now defined in fulcro.client.primitives"],"~$split-parser",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",190,"^8",8,"^9",190,"^:",20,"^<T",true,"^<2",["^1@",["^<3",["^1@",[["~$query-parser"]]]]],"^<6","Generate a parser that splits reads and writes across two parsers: the supplied query parser for queries, and the built-in\n  parser for mutations."],"^<T",true,"^G","~$fulcro.client/split-parser","^<8",false,"^6","fulcro/client.cljc","^:",20,"^<9",["^1@",[["^?9"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",190,"^9",190,"^<=",1,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^?9"]]]]],"^<6","Generate a parser that splits reads and writes across two parsers: the supplied query parser for queries, and the built-in\n  parser for mutations."],"~$add-tools",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",58,"^8",8,"^9",58,"^:",17,"^<T",true,"^<2",["^1@",["^<3",["^1@",[["~$original-start","~$original-net","~$original-tx-listen","~$original-instrument"]]]]]],"^<T",true,"^G","~$fulcro.client/add-tools","^<8",false,"^6","fulcro/client.cljc","^:",17,"^<9",["^1@",[["^?<","^?=","^?>","^??"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",58,"^9",58,"^<=",4,"^<>",true,"^<2",["^1@",["^<3",["^1@",[["^?<","^?=","^?>","^??"]]]]]],"~$register-tool",["^ ","^<1",null,"^5",["^ ","^6","fulcro/client.cljc","^7",38,"^8",7,"^9",38,"^:",20,"^<2",["^1@",["^<3",["^1@",[[["^ ","^<4",["~:fulcro.client/tool-id"],"^1C","~$tool-registry"]]]]]],"^<6","Register a debug tool. When an app starts, the debug tool can have several hooks that are notified:\n\n  ::tool-id some identifier to place the tool into the tool map\n  ::tx-listen is a (fn [tx info] ...) that will be called on every `transact!` of the app. Return value is ignored.\n  ::network-wrapper is (fn [network-map] network-map') that will be given the networking config BEFORE it is initialized. You can wrap\n  them, but you MUST return a compatible map out or you'll disable networking.\n  ::component-lifecycle is (fn [component evt]) that is called with evt of :mounted and :unmounted to tell you when the given component mounts/unmounts.\n  ::instrument-wrapper is a (fn [instrument] instrument') that allows you to wrap your own instrumentation (for rendering) around any existing (which may be nil)\n  ::app-started (fn [app] ...) that will be called once the app is mounted, just like started-callback. Return value ignored."],"^G","~$fulcro.client/register-tool","^<8",false,"^6","fulcro/client.cljc","^:",20,"^<9",["^1@",[["~$p__43120"]]],"^<;",null,"^<<",["^1@",[null,null]],"^8",1,"^7",38,"^9",38,"^<=",1,"^<>",true,"^<2",["^1@",["^<3",["^1@",[[["^ ","^<4",["^?B"],"^1C","^?C"]]]]]],"^<6","Register a debug tool. When an app starts, the debug tool can have several hooks that are notified:\n\n  ::tool-id some identifier to place the tool into the tool map\n  ::tx-listen is a (fn [tx info] ...) that will be called on every `transact!` of the app. Return value is ignored.\n  ::network-wrapper is (fn [network-map] network-map') that will be given the networking config BEFORE it is initialized. You can wrap\n  them, but you MUST return a compatible map out or you'll disable networking.\n  ::component-lifecycle is (fn [component evt]) that is called with evt of :mounted and :unmounted to tell you when the given component mounts/unmounts.\n  ::instrument-wrapper is a (fn [instrument] instrument') that allows you to wrap your own instrumentation (for rendering) around any existing (which may be nil)\n  ::app-started (fn [app] ...) that will be called once the app is mounted, just like started-callback. Return value ignored."],"~$merge-alternate-unions",["^ ","^G","~$fulcro.client/merge-alternate-unions","^6","fulcro/client.cljc","^7",358,"^8",1,"^9",358,"^:",28,"^5",["^ ","^6","fulcro/client.cljc","^7",358,"^8",6,"^9",358,"^:",28],"^<6","DEPRECATED: Now defined in fulcro.client.primitives"],"~$Application",["^ ","^G","^>M","~:type",true,"^<N","^>M","~:num-fields",12,"~:record",true,"^6","fulcro/client.cljc","^7",283,"^8",12]],"^1=",["^ ","^@","^A","^D","^D","^R","^S","^V","^W","^S","^S","^Y","^=","^Z","^Z","^10","^10","^W","^W","^=","^=","~$m","^10","^<","^=","~$s","^A","^A","^A"],"~:cljs.analyzer/constants",["^ ","^1;",["^F",["^=M","~:args","~:req-un","~:opt-un","~:remote","~:read-local","^=E","~:ret","~:react-component","~:gfn","~:children","^=F","~$cljs.core/keyword?","~:fulcro.client/instrument-wrapper","~:network-error-callback","~:pred-exprs","~:keys-pred","~:instrument","~:networking","~:opt-keys","~:fulcro.client.network/abort-id","~:read","~:fulcro.client/lifecycle-event","~:mutation-merge","~:else","~$cljs.spec.alpha/and","~$cljs.spec.alpha/cat","~:remotes","~:mounted?","^>5","~:response-channels","~:mounted","~:migrate","~:transit-handlers","~:req-specs","^6","~:fulcro.client/class","~:reconciler","~:fulcro-app","^=5","~:original","~$cljs.spec.alpha/fspec","~:query-interpreter","~:fulcro.client/factory","~:state","~:lifecycle","~$cljs.core/contains?","~$cljs.core/map?","~:env","^>3","~:fulcro.client/instrument","~$cljs.core/namespace","~$%","^>0","^=D","^>S","~:global-error-callback","~:otherwise","~:fulcro.client/network-wrapper","^?B","~$cljs.spec.alpha/keys","~:request-transform","~$fulcro.client.primitives/component?","^<5","~:req","~:networks","^>P","^>4","~:parser","~:event","^7","~:fulcro.history/max-size","~:fulcro.client/component-lifecycle","~:id","~:class","~:fulcro.client/tx-listen","~:req-keys","~:fulcro.client/props","~:send-queues","~$cljs.core/fn","^>K","~:opt-specs","~:unmounted","~:shared","~:pred-forms","~:error","~:fulcro.client/children","~:started-callback","~:fulcro.client/tool-registry","~:fulcro.client/app-started","~:target","~:initial-state","~:tx-info","~:reconciler-options","^>R","~:mutate","~$cljs.core/any?","~:tx-listen","~:existing-instrument","~:opt","~:props"]],"~:order",["^?B","^@7","^?V","^@M","^A0","^@D","^?M","^@8","^@K","^@J","^A@","^?R","^AC","^@P","^@U","^A=","^@B","^@4","^@<","^A6","^@L","^@Q","^?N","^A2","^A:","^@@","^@F","^?O","^?T","^?Y","^?Z","^@1","^@?","^@T","^A1","^A5","^A8","^AF","^AG","^?U","^@[","^>P","^A4","~~:ns-specs",["^ ","^?W",["^1@",["^@D","^?M",["^1@",["^@8","^AE","^@L"]],"^?R","^@L"]],"^@4",["^F",["^@<","^A6"]],"^@L",["^1@",["^@D","^?M",["^1@",["^@8","^?M",["^1@",["^@Q","^?N",["^A2","^A:","^@@","^@F"]]]]],"^?R","^AC"]],"^@P",["^1@",["^@D","^?M",["^1@",["^@8","^@U","^@J"]],"^?R","^@J"]],"^?B",["^1@",["^@7","^?V","^@M"]],"^@Y",["^1@",["^@D","^?M",["^1@",["^@8","^?S","^@S","^@W","^@4"]],"^?R","^AC"]],"^A0",["^1@",["^@D","^?M",["^1@",["^@8","^@K","^@J","^A@","^@J"]],"^?R","^AC"]],"^A<",["^1@",["^@Q","^@T",["^?B"],"^AF",["^A0","^@P","^A=","^@Y","^?W"]]],"^A=",["^1@",["^@D","^?M",["^1@",["^@8","^@B","^@J"]],"^?R","^AC"]]],"~:ns-speced-vars",[],"~:compiler-options",["^8?",[["^AK","~:static-fns"],true,["^AK","~:elide-asserts"],false,["^AK","~:optimize-constants"],null,["^AK","~:external-config"],null,["^AK","~:tooling-config"],null,["^AK","~:emit-constants"],null,["^AK","~:infer-externs"],true,["^AK","^1N"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^AK","~:fn-invoke-direct"],null,["^AK","^1P"],"/dev/null"]]]