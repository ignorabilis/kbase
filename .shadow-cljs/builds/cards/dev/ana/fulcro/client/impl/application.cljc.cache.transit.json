["^ ","~:output",["^ ","~:js","goog.provide('fulcro.client.impl.application');\r\ngoog.require('cljs.core');\r\ngoog.require('fulcro.logging');\r\ngoog.require('fulcro.client.primitives');\r\ngoog.require('fulcro.client.mutations');\r\ngoog.require('fulcro.history');\r\ngoog.require('clojure.set');\r\ngoog.require('fulcro.client.impl.data_fetch');\r\ngoog.require('fulcro.util');\r\ngoog.require('fulcro.client.util');\r\ngoog.require('cljs.spec.alpha');\r\ngoog.require('cljs.core.async');\r\ngoog.require('fulcro.client.network');\r\ngoog.require('fulcro.client.impl.protocols');\r\n/**\r\n * This internal function is responsible for generating and returning a function that can accomplish calling the fallbacks that\r\n *   appear in an incoming transaction, which is in turn used by the error-handling logic of the plumbing.\r\n */\r\nfulcro.client.impl.application.fallback_handler = (function fulcro$client$impl$application$fallback_handler(p__41643,query){\r\nvar map__41644 = p__41643;\r\nvar map__41644__$1 = ((((!((map__41644 == null)))?(((((map__41644.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41644.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41644):map__41644);\r\nvar reconciler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41644__$1,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966));\r\nreturn ((function (map__41644,map__41644__$1,reconciler){\r\nreturn (function (error){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(fulcro.client.primitives.app_state(reconciler),cljs.core.assoc,new cljs.core.Keyword(\"fulcro\",\"server-error\",\"fulcro/server-error\",-1254037316),error);\r\n\r\nvar temp__5455__auto__ = fulcro.client.primitives.fallback_tx(query,error);\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar q = temp__5455__auto__;\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),28], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Transaction failed. Running fallback.\",q], 0));\r\n}catch (e41651){if((e41651 instanceof Error)){\r\nvar e__31527__auto___41670 = e41651;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),28], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto___41670], 0));\r\n} else {\r\nthrow e41651;\r\n\r\n}\r\n}\r\nreturn fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2(reconciler,q);\r\n} else {\r\ntry{return fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),30], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Fallback triggered, but no fallbacks were defined.\"], 0));\r\n}catch (e41654){if((e41654 instanceof Error)){\r\nvar e__31527__auto__ = e41654;\r\nreturn fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),30], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto__], 0));\r\n} else {\r\nthrow e41654;\r\n\r\n}\r\n}}\r\n});\r\n;})(map__41644,map__41644__$1,reconciler))\r\n});\r\n/**\r\n * Enqueue a send to the network queue. This is a standalone function because we cannot mock core async functions.\r\n */\r\nfulcro.client.impl.application.enqueue = (function fulcro$client$impl$application$enqueue(q,v){\r\nvar c__31633__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run(((function (c__31633__auto__){\r\nreturn (function (){\r\nvar f__31634__auto__ = (function (){var switch__30661__auto__ = ((function (c__31633__auto__){\r\nreturn (function (state_41683){\r\nvar state_val_41684 = (state_41683[(1)]);\r\nif((state_val_41684 === (1))){\r\nvar state_41683__$1 = state_41683;\r\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_41683__$1,(2),q,v);\r\n} else {\r\nif((state_val_41684 === (2))){\r\nvar inst_41681 = (state_41683[(2)]);\r\nvar state_41683__$1 = state_41683;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_41683__$1,inst_41681);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});})(c__31633__auto__))\r\n;\r\nreturn ((function (switch__30661__auto__,c__31633__auto__){\r\nreturn (function() {\r\nvar fulcro$client$impl$application$enqueue_$_state_machine__30662__auto__ = null;\r\nvar fulcro$client$impl$application$enqueue_$_state_machine__30662__auto____0 = (function (){\r\nvar statearr_41694 = [null,null,null,null,null,null,null];\r\n(statearr_41694[(0)] = fulcro$client$impl$application$enqueue_$_state_machine__30662__auto__);\r\n\r\n(statearr_41694[(1)] = (1));\r\n\r\nreturn statearr_41694;\r\n});\r\nvar fulcro$client$impl$application$enqueue_$_state_machine__30662__auto____1 = (function (state_41683){\r\nwhile(true){\r\nvar ret_value__30663__auto__ = (function (){try{while(true){\r\nvar result__30664__auto__ = switch__30661__auto__(state_41683);\r\nif(cljs.core.keyword_identical_QMARK_(result__30664__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__30664__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e41697){if((e41697 instanceof Object)){\r\nvar ex__30665__auto__ = e41697;\r\nvar statearr_41698_41710 = state_41683;\r\n(statearr_41698_41710[(5)] = ex__30665__auto__);\r\n\r\n\r\ncljs.core.async.impl.ioc_helpers.process_exception(state_41683);\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nthrow e41697;\r\n\r\n}\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__30663__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__41711 = state_41683;\r\nstate_41683 = G__41711;\r\ncontinue;\r\n} else {\r\nreturn ret_value__30663__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\nfulcro$client$impl$application$enqueue_$_state_machine__30662__auto__ = function(state_41683){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn fulcro$client$impl$application$enqueue_$_state_machine__30662__auto____0.call(this);\r\ncase 1:\r\nreturn fulcro$client$impl$application$enqueue_$_state_machine__30662__auto____1.call(this,state_41683);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nfulcro$client$impl$application$enqueue_$_state_machine__30662__auto__.cljs$core$IFn$_invoke$arity$0 = fulcro$client$impl$application$enqueue_$_state_machine__30662__auto____0;\r\nfulcro$client$impl$application$enqueue_$_state_machine__30662__auto__.cljs$core$IFn$_invoke$arity$1 = fulcro$client$impl$application$enqueue_$_state_machine__30662__auto____1;\r\nreturn fulcro$client$impl$application$enqueue_$_state_machine__30662__auto__;\r\n})()\r\n;})(switch__30661__auto__,c__31633__auto__))\r\n})();\r\nvar state__31635__auto__ = (function (){var statearr_41704 = (f__31634__auto__.cljs$core$IFn$_invoke$arity$0 ? f__31634__auto__.cljs$core$IFn$_invoke$arity$0() : f__31634__auto__.call(null));\r\n(statearr_41704[(6)] = c__31633__auto__);\r\n\r\nreturn statearr_41704;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__31635__auto__);\r\n});})(c__31633__auto__))\r\n);\r\n\r\nreturn c__31633__auto__;\r\n});\r\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"fulcro.client.impl.application\",\"enqueue\",\"fulcro.client.impl.application/enqueue\",-1810476387,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"payload\",\"fulcro.client.impl.data-fetch/payload\",1553254295))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"payload\",\"fulcro.client.impl.data-fetch/payload\",1553254295)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.any_QMARK_,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"payload\",\"fulcro.client.impl.data-fetch/payload\",1553254295)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"payload\",\"fulcro.client.impl.data-fetch/payload\",1553254295)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"payload\",\"fulcro.client.impl.data-fetch/payload\",1553254295)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\r\n/**\r\n * Do a properly-plumbed network send. This function recursively strips ui attributes from the tx and pushes the tx over\r\n *   the network. It installs the given on-load and on-error handlers to deal with the network response. DEPRECATED: If\r\n *   you're doing something really low-level with networking, use send-with-history-tracking.\r\n */\r\nfulcro.client.impl.application.real_send = (function fulcro$client$impl$application$real_send(var_args){\r\nvar G__41720 = arguments.length;\r\nswitch (G__41720) {\r\ncase 2:\r\nreturn fulcro.client.impl.application.real_send.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn fulcro.client.impl.application.real_send.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.impl.application.real_send.cljs$core$IFn$_invoke$arity$2 = (function (net,p__41723){\r\nvar map__41724 = p__41723;\r\nvar map__41724__$1 = ((((!((map__41724 == null)))?(((((map__41724.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41724.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41724):map__41724);\r\nvar reconciler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41724__$1,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966));\r\nvar tx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41724__$1,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418));\r\nvar on_done = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41724__$1,new cljs.core.Keyword(null,\"on-done\",\"on-done\",-699252077));\r\nvar on_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41724__$1,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530));\r\nvar on_load = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41724__$1,new cljs.core.Keyword(null,\"on-load\",\"on-load\",1415151594));\r\nvar abort_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41724__$1,new cljs.core.Keyword(null,\"abort-id\",\"abort-id\",1559937819));\r\nvar progress_tx = ((function (map__41724,map__41724__$1,reconciler,tx,on_done,on_error,on_load,abort_id){\r\nreturn (function (p1__41717_SHARP_){\r\nreturn fulcro.client.mutations.progressive_update_transaction(tx,p1__41717_SHARP_);\r\n});})(map__41724,map__41724__$1,reconciler,tx,on_done,on_error,on_load,abort_id))\r\n;\r\nvar tx__$1 = fulcro.client.primitives.strip_ui(tx);\r\nif(((!((net == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === net.fulcro$client$network$ProgressiveTransfer$))))?true:false):false)){\r\nreturn fulcro.client.network.updating_send(net,tx__$1,on_done,on_error,on_load);\r\n} else {\r\nif(((!((net == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === net.fulcro$client$network$FulcroNetwork$))))?true:false):false)){\r\nreturn fulcro.client.network.send(net,tx__$1,on_done,on_error);\r\n} else {\r\nif(((!((net == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === net.fulcro$client$network$FulcroRemoteI$))))?true:false):false)){\r\nvar on_done__$1 = ((function (progress_tx,tx__$1,map__41724,map__41724__$1,reconciler,tx,on_done,on_error,on_load,abort_id){\r\nreturn (function (p__41732){\r\nvar map__41733 = p__41732;\r\nvar map__41733__$1 = ((((!((map__41733 == null)))?(((((map__41733.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41733.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41733):map__41733);\r\nvar body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41733__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\r\nvar transaction = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41733__$1,new cljs.core.Keyword(null,\"transaction\",\"transaction\",1777321997));\r\nreturn (on_done.cljs$core$IFn$_invoke$arity$2 ? on_done.cljs$core$IFn$_invoke$arity$2(body,transaction) : on_done.call(null,body,transaction));\r\n});})(progress_tx,tx__$1,map__41724,map__41724__$1,reconciler,tx,on_done,on_error,on_load,abort_id))\r\n;\r\nvar on_error__$1 = ((function (on_done__$1,progress_tx,tx__$1,map__41724,map__41724__$1,reconciler,tx,on_done,on_error,on_load,abort_id){\r\nreturn (function (p__41736){\r\nvar map__41737 = p__41736;\r\nvar map__41737__$1 = ((((!((map__41737 == null)))?(((((map__41737.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41737.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41737):map__41737);\r\nvar body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41737__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\r\nreturn (on_error.cljs$core$IFn$_invoke$arity$1 ? on_error.cljs$core$IFn$_invoke$arity$1(body) : on_error.call(null,body));\r\n});})(on_done__$1,progress_tx,tx__$1,map__41724,map__41724__$1,reconciler,tx,on_done,on_error,on_load,abort_id))\r\n;\r\nvar on_load__$1 = ((function (on_done__$1,on_error__$1,progress_tx,tx__$1,map__41724,map__41724__$1,reconciler,tx,on_done,on_error,on_load,abort_id){\r\nreturn (function (progress){\r\nif(cljs.core.truth_(reconciler)){\r\nreturn fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2(reconciler,progress_tx(progress));\r\n} else {\r\nreturn null;\r\n}\r\n});})(on_done__$1,on_error__$1,progress_tx,tx__$1,map__41724,map__41724__$1,reconciler,tx,on_done,on_error,on_load,abort_id))\r\n;\r\nreturn fulcro.client.network.transmit(net,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(\"fulcro.client.network\",\"edn\",\"fulcro.client.network/edn\",-1239708957),tx__$1,new cljs.core.Keyword(\"fulcro.client.network\",\"abort-id\",\"fulcro.client.network/abort-id\",-22430267),abort_id,new cljs.core.Keyword(\"fulcro.client.network\",\"ok-handler\",\"fulcro.client.network/ok-handler\",-107274727),on_done__$1,new cljs.core.Keyword(\"fulcro.client.network\",\"error-handler\",\"fulcro.client.network/error-handler\",-607171226),on_error__$1,new cljs.core.Keyword(\"fulcro.client.network\",\"progress-handler\",\"fulcro.client.network/progress-handler\",1886593355),on_load__$1], null));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n});\r\n\r\nfulcro.client.impl.application.real_send.cljs$core$IFn$_invoke$arity$5 = (function (net,tx,on_done,on_error,on_load){\r\nreturn fulcro.client.impl.application.real_send.cljs$core$IFn$_invoke$arity$2(net,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"tx\",\"tx\",466630418),tx,new cljs.core.Keyword(null,\"on-done\",\"on-done\",-699252077),on_done,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),on_error,new cljs.core.Keyword(null,\"on-load\",\"on-load\",1415151594),on_load], null));\r\n});\r\n\r\nfulcro.client.impl.application.real_send.cljs$lang$maxFixedArity = 5;\r\n\r\n/**\r\n * Does a real send but includes history activity tracking to prevent the gc of history that is related to active\r\n *   network requests. If you're doing something really low level in the networking, you want this over real-send.\r\n */\r\nfulcro.client.impl.application.send_with_history_tracking = (function fulcro$client$impl$application$send_with_history_tracking(var_args){\r\nvar G__41761 = arguments.length;\r\nswitch (G__41761) {\r\ncase 2:\r\nreturn fulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 6:\r\nreturn fulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2 = (function (net,p__41766){\r\nvar map__41768 = p__41766;\r\nvar map__41768__$1 = ((((!((map__41768 == null)))?(((((map__41768.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41768.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41768):map__41768);\r\nvar reconciler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41768__$1,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966));\r\nvar payload = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41768__$1,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092));\r\nvar tx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41768__$1,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418));\r\nvar on_done = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41768__$1,new cljs.core.Keyword(null,\"on-done\",\"on-done\",-699252077));\r\nvar on_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41768__$1,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530));\r\nvar on_load = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41768__$1,new cljs.core.Keyword(null,\"on-load\",\"on-load\",1415151594));\r\nvar map__41771 = payload;\r\nvar map__41771__$1 = ((((!((map__41771 == null)))?(((((map__41771.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41771.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41771):map__41771);\r\nvar history_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41771__$1,new cljs.core.Keyword(\"fulcro.history\",\"history-atom\",\"fulcro.history/history-atom\",-1250797564));\r\nvar tx_time = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41771__$1,new cljs.core.Keyword(\"fulcro.history\",\"tx-time\",\"fulcro.history/tx-time\",816348456));\r\nvar remote = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41771__$1,new cljs.core.Keyword(\"fulcro.client.primitives\",\"remote\",\"fulcro.client.primitives/remote\",82057012));\r\nvar abort_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41771__$1,new cljs.core.Keyword(\"fulcro.client.network\",\"abort-id\",\"fulcro.client.network/abort-id\",-22430267));\r\nvar with_history_recording = ((function (map__41771,map__41771__$1,history_atom,tx_time,remote,abort_id,map__41768,map__41768__$1,reconciler,payload,tx,on_done,on_error,on_load){\r\nreturn (function (handler){\r\nreturn ((function (map__41771,map__41771__$1,history_atom,tx_time,remote,abort_id,map__41768,map__41768__$1,reconciler,payload,tx,on_done,on_error,on_load){\r\nreturn (function (resp,items_or_tx){\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = history_atom;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nvar and__3938__auto____$1 = remote;\r\nif(cljs.core.truth_(and__3938__auto____$1)){\r\nreturn tx_time;\r\n} else {\r\nreturn and__3938__auto____$1;\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(history_atom,fulcro.history.remote_activity_finished,remote,tx_time);\r\n} else {\r\n}\r\n\r\nreturn (handler.cljs$core$IFn$_invoke$arity$2 ? handler.cljs$core$IFn$_invoke$arity$2(resp,items_or_tx) : handler.call(null,resp,items_or_tx));\r\n});\r\n;})(map__41771,map__41771__$1,history_atom,tx_time,remote,abort_id,map__41768,map__41768__$1,reconciler,payload,tx,on_done,on_error,on_load))\r\n});})(map__41771,map__41771__$1,history_atom,tx_time,remote,abort_id,map__41768,map__41768__$1,reconciler,payload,tx,on_done,on_error,on_load))\r\n;\r\nvar on_done__$1 = with_history_recording(on_done);\r\nvar on_error__$1 = with_history_recording(on_error);\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = history_atom;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nvar and__3938__auto____$1 = tx_time;\r\nif(cljs.core.truth_(and__3938__auto____$1)){\r\nreturn remote;\r\n} else {\r\nreturn and__3938__auto____$1;\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(history_atom,fulcro.history.remote_activity_started,remote,tx_time);\r\n} else {\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),79], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Payload had no history details.\"], 0));\r\n}catch (e41774){if((e41774 instanceof Error)){\r\nvar e__31527__auto___41794 = e41774;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),79], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto___41794], 0));\r\n} else {\r\nthrow e41774;\r\n\r\n}\r\n}}\r\n\r\nreturn fulcro.client.impl.application.real_send.cljs$core$IFn$_invoke$arity$2(net,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),reconciler,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418),tx,new cljs.core.Keyword(null,\"on-done\",\"on-done\",-699252077),on_done__$1,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),on_error__$1,new cljs.core.Keyword(null,\"on-load\",\"on-load\",1415151594),on_load,new cljs.core.Keyword(null,\"abort-id\",\"abort-id\",1559937819),abort_id], null));\r\n});\r\n\r\nfulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$6 = (function (payload,net,tx,on_done,on_error,on_load){\r\nreturn fulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2(net,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),payload,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418),tx,new cljs.core.Keyword(null,\"on-done\",\"on-done\",-699252077),on_done,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),on_error,new cljs.core.Keyword(null,\"on-load\",\"on-load\",1415151594),on_load], null));\r\n});\r\n\r\nfulcro.client.impl.application.send_with_history_tracking.cljs$lang$maxFixedArity = 6;\r\n\r\n/**\r\n * Split a tx that contains mutations.\r\n * \r\n * Examples:\r\n * [(f) (g)] => [[(f) (g)]]\r\n * [(f) (g) (f) (k)] => [[(f) (g)] [(f) (k)]]\r\n * [(f) (g) (f) (k) (g)] => [[(f) (g)] [(f) (k) (g)]]\r\n * \r\n * This function splits any mutation that uses the same dispatch symbol more than once (since returns from server go\r\n * into a map, and that is the only way to get return values from both), and also when the mutations do not share abort\r\n * IDs (so that mutations do not get grouped into a transaction that could cause them to get cancelled incorrectly).\r\n * \r\n * Returns a sequence that contains one or more transactions.\r\n */\r\nfulcro.client.impl.application.split_mutations = (function fulcro$client$impl$application$split_mutations(tx){\r\nif(!(((cljs.core.vector_QMARK_(tx)) && (cljs.core.every_QMARK_((function (t){\r\nvar or__3949__auto__ = fulcro.util.mutation_join_QMARK_(t);\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn ((cljs.core.list_QMARK_(t)) && ((cljs.core.first(t) instanceof cljs.core.Symbol)));\r\n}\r\n}),tx))))){\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),100], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"INTERNAL ERROR: split-mutations was asked to split a tx that contained things other than mutations.\",tx], 0));\r\n}catch (e41807){if((e41807 instanceof Error)){\r\nvar e__31527__auto___41836 = e41807;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),100], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto___41836], 0));\r\n} else {\r\nthrow e41807;\r\n\r\n}\r\n}\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tx], null);\r\n} else {\r\nif(cljs.core.empty_QMARK_(tx)){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n} else {\r\nvar dispatch_symbols = (function (tx__$1){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587)),cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol_QMARK_)),(function (){var G__41811 = tx__$1;\r\nvar G__41811__$1 = (((G__41811 == null))?null:fulcro.client.primitives.query__GT_ast(G__41811));\r\nif((G__41811__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(G__41811__$1);\r\n}\r\n})());\r\n});\r\nvar compatible_abort_QMARK_ = ((function (dispatch_symbols){\r\nreturn (function (tx1,tx2){\r\nvar a1 = fulcro.client.mutations.abort_ids(tx1);\r\nvar a2 = fulcro.client.mutations.abort_ids(tx2);\r\nreturn ((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(a1))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a1,a2)))) || (((cljs.core.empty_QMARK_(a1)) && (cljs.core.empty_QMARK_(a2)))));\r\n});})(dispatch_symbols))\r\n;\r\nvar can_be_included_QMARK_ = ((function (dispatch_symbols,compatible_abort_QMARK_){\r\nreturn (function (tx__$1,expr){\r\nvar or__3949__auto__ = cljs.core.empty_QMARK_(tx__$1);\r\nif(or__3949__auto__){\r\nreturn or__3949__auto__;\r\n} else {\r\nvar and__3938__auto__ = compatible_abort_QMARK_(tx__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [expr], null));\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn cljs.core.empty_QMARK_(clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(dispatch_symbols(tx__$1),dispatch_symbols(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [expr], null))));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n}\r\n});})(dispatch_symbols,compatible_abort_QMARK_))\r\n;\r\nvar map__41810 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (dispatch_symbols,compatible_abort_QMARK_,can_be_included_QMARK_){\r\nreturn (function (p__41824,expr){\r\nvar map__41825 = p__41824;\r\nvar map__41825__$1 = ((((!((map__41825 == null)))?(((((map__41825.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41825.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41825):map__41825);\r\nvar acc = map__41825__$1;\r\nvar current = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41825__$1,new cljs.core.Keyword(null,\"current\",\"current\",-1088038603));\r\nif(cljs.core.truth_(can_be_included_QMARK_(current,expr))){\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(acc,new cljs.core.Keyword(null,\"current\",\"current\",-1088038603),cljs.core.conj,expr);\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(acc,new cljs.core.Keyword(null,\"transactions\",\"transactions\",-1425846118),cljs.core.conj,current),new cljs.core.Keyword(null,\"current\",\"current\",-1088038603),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [expr], null));\r\n}\r\n});})(dispatch_symbols,compatible_abort_QMARK_,can_be_included_QMARK_))\r\n,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"transactions\",\"transactions\",-1425846118),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"current\",\"current\",-1088038603),cljs.core.PersistentVector.EMPTY], null),tx);\r\nvar map__41810__$1 = ((((!((map__41810 == null)))?(((((map__41810.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41810.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41810):map__41810);\r\nvar transactions = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41810__$1,new cljs.core.Keyword(null,\"transactions\",\"transactions\",-1425846118));\r\nvar current = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41810__$1,new cljs.core.Keyword(null,\"current\",\"current\",-1088038603));\r\nif(cljs.core.empty_QMARK_(current)){\r\nreturn transactions;\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(transactions,current);\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Splits out the (remote) mutations and fallbacks in a transaction, creates an error handler that can\r\n * trigger fallbacks, and enqueues the remote mutations on the network queue. If duplicate mutation names\r\n * appear, then they will be separated into separate network requests.\r\n * \r\n * NOTE: If the mutation in the tx has duplicates, then the same fallback will be used for the\r\n * resulting split tx. See `split-mutations` (which is used by this function to split dupes out of txes).\r\n */\r\nfulcro.client.impl.application.enqueue_mutations = (function fulcro$client$impl$application$enqueue_mutations(p__41859,remote_tx_map,cb){\r\nvar map__41860 = p__41859;\r\nvar map__41860__$1 = ((((!((map__41860 == null)))?(((((map__41860.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41860.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41860):map__41860);\r\nvar app = map__41860__$1;\r\nvar reconciler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41860__$1,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966));\r\nvar send_queues = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41860__$1,new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330));\r\nvar history = fulcro.client.primitives.get_history(reconciler);\r\nvar seq__41864 = cljs.core.seq(cljs.core.keys(remote_tx_map));\r\nvar chunk__41865 = null;\r\nvar count__41866 = (0);\r\nvar i__41867 = (0);\r\nwhile(true){\r\nif((i__41867 < count__41866)){\r\nvar remote = chunk__41865.cljs$core$IIndexed$_nth$arity$2(null,i__41867);\r\nvar queue_41941 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(send_queues,remote);\r\nvar full_remote_transaction_41942 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(remote_tx_map,remote);\r\nvar refresh_set_41943 = (function (){var or__3949__auto__ = (function (){var G__41869 = full_remote_transaction_41942;\r\nvar G__41869__$1 = (((G__41869 == null))?null:cljs.core.meta(G__41869));\r\nvar G__41869__$2 = (((G__41869__$1 == null))?null:new cljs.core.Keyword(\"fulcro.client.primitives\",\"refresh\",\"fulcro.client.primitives/refresh\",481513561).cljs$core$IFn$_invoke$arity$1(G__41869__$1));\r\nif((G__41869__$2 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.vec(G__41869__$2);\r\n}\r\n})();\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}\r\n})();\r\nvar tx_time_41944 = (function (){var G__41873 = full_remote_transaction_41942;\r\nvar G__41873__$1 = (((G__41873 == null))?null:cljs.core.meta(G__41873));\r\nif((G__41873__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(\"fulcro.history\",\"tx-time\",\"fulcro.history/tx-time\",816348456).cljs$core$IFn$_invoke$arity$1(G__41873__$1);\r\n}\r\n})();\r\nvar fallback_41945 = fulcro.client.impl.application.fallback_handler(app,full_remote_transaction_41942);\r\nvar desired_remote_mutations_41946 = fulcro.client.primitives.remove_loads_and_fallbacks(full_remote_transaction_41942);\r\nvar tx_list_41947 = fulcro.client.impl.application.split_mutations(desired_remote_mutations_41946);\r\nvar has_mutations_QMARK__41948 = ((function (seq__41864,chunk__41865,count__41866,i__41867,queue_41941,full_remote_transaction_41942,refresh_set_41943,tx_time_41944,fallback_41945,desired_remote_mutations_41946,tx_list_41947,remote,history,map__41860,map__41860__$1,app,reconciler,send_queues){\r\nreturn (function (tx){\r\nreturn (cljs.core.count(tx) > (0));\r\n});})(seq__41864,chunk__41865,count__41866,i__41867,queue_41941,full_remote_transaction_41942,refresh_set_41943,tx_time_41944,fallback_41945,desired_remote_mutations_41946,tx_list_41947,remote,history,map__41860,map__41860__$1,app,reconciler,send_queues))\r\n;\r\nvar payload_41949 = ((function (seq__41864,chunk__41865,count__41866,i__41867,queue_41941,full_remote_transaction_41942,refresh_set_41943,tx_time_41944,fallback_41945,desired_remote_mutations_41946,tx_list_41947,has_mutations_QMARK__41948,remote,history,map__41860,map__41860__$1,app,reconciler,send_queues){\r\nreturn (function (tx){\r\nvar abort_id = (function (){var G__41876 = tx;\r\nvar G__41876__$1 = (((G__41876 == null))?null:fulcro.client.mutations.abort_ids(G__41876));\r\nif((G__41876__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.first(G__41876__$1);\r\n}\r\n})();\r\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(\"fulcro.client.primitives\",\"query\",\"fulcro.client.primitives/query\",261276758),tx,new cljs.core.Keyword(\"fulcro.history\",\"tx-time\",\"fulcro.history/tx-time\",816348456),tx_time_41944,new cljs.core.Keyword(\"fulcro.history\",\"history-atom\",\"fulcro.history/history-atom\",-1250797564),history,new cljs.core.Keyword(\"fulcro.client.primitives\",\"remote\",\"fulcro.client.primitives/remote\",82057012),remote,new cljs.core.Keyword(\"fulcro.client.network\",\"abort-id\",\"fulcro.client.network/abort-id\",-22430267),abort_id,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-load\",\"fulcro.client.impl.data-fetch/on-load\",-1170993603),((function (seq__41864,chunk__41865,count__41866,i__41867,abort_id,queue_41941,full_remote_transaction_41942,refresh_set_41943,tx_time_41944,fallback_41945,desired_remote_mutations_41946,tx_list_41947,has_mutations_QMARK__41948,remote,history,map__41860,map__41860__$1,app,reconciler,send_queues){\r\nreturn (function (result,mtx){\r\nvar G__41881 = result;\r\nvar G__41882 = (function (){var or__3949__auto__ = mtx;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn tx;\r\n}\r\n})();\r\nvar G__41883 = remote;\r\nreturn (cb.cljs$core$IFn$_invoke$arity$3 ? cb.cljs$core$IFn$_invoke$arity$3(G__41881,G__41882,G__41883) : cb.call(null,G__41881,G__41882,G__41883));\r\n});})(seq__41864,chunk__41865,count__41866,i__41867,abort_id,queue_41941,full_remote_transaction_41942,refresh_set_41943,tx_time_41944,fallback_41945,desired_remote_mutations_41946,tx_list_41947,has_mutations_QMARK__41948,remote,history,map__41860,map__41860__$1,app,reconciler,send_queues))\r\n,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-error\",\"fulcro.client.impl.data-fetch/on-error\",867419629),((function (seq__41864,chunk__41865,count__41866,i__41867,abort_id,queue_41941,full_remote_transaction_41942,refresh_set_41943,tx_time_41944,fallback_41945,desired_remote_mutations_41946,tx_list_41947,has_mutations_QMARK__41948,remote,history,map__41860,map__41860__$1,app,reconciler,send_queues){\r\nreturn (function (result){\r\nreturn (fallback_41945.cljs$core$IFn$_invoke$arity$1 ? fallback_41945.cljs$core$IFn$_invoke$arity$1(result) : fallback_41945.call(null,result));\r\n});})(seq__41864,chunk__41865,count__41866,i__41867,abort_id,queue_41941,full_remote_transaction_41942,refresh_set_41943,tx_time_41944,fallback_41945,desired_remote_mutations_41946,tx_list_41947,has_mutations_QMARK__41948,remote,history,map__41860,map__41860__$1,app,reconciler,send_queues))\r\n], null);\r\n});})(seq__41864,chunk__41865,count__41866,i__41867,queue_41941,full_remote_transaction_41942,refresh_set_41943,tx_time_41944,fallback_41945,desired_remote_mutations_41946,tx_list_41947,has_mutations_QMARK__41948,remote,history,map__41860,map__41860__$1,app,reconciler,send_queues))\r\n;\r\nvar seq__41884_41975 = cljs.core.seq(tx_list_41947);\r\nvar chunk__41885_41976 = null;\r\nvar count__41886_41977 = (0);\r\nvar i__41887_41978 = (0);\r\nwhile(true){\r\nif((i__41887_41978 < count__41886_41977)){\r\nvar tx_41979 = chunk__41885_41976.cljs$core$IIndexed$_nth$arity$2(null,i__41887_41978);\r\nif(cljs.core.truth_(has_mutations_QMARK__41948(tx_41979))){\r\nfulcro.client.impl.application.enqueue(queue_41941,payload_41949(tx_41979));\r\n} else {\r\n}\r\n\r\n\r\nvar G__41980 = seq__41884_41975;\r\nvar G__41981 = chunk__41885_41976;\r\nvar G__41982 = count__41886_41977;\r\nvar G__41983 = (i__41887_41978 + (1));\r\nseq__41884_41975 = G__41980;\r\nchunk__41885_41976 = G__41981;\r\ncount__41886_41977 = G__41982;\r\ni__41887_41978 = G__41983;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto___41984 = cljs.core.seq(seq__41884_41975);\r\nif(temp__5457__auto___41984){\r\nvar seq__41884_41985__$1 = temp__5457__auto___41984;\r\nif(cljs.core.chunked_seq_QMARK_(seq__41884_41985__$1)){\r\nvar c__4351__auto___41986 = cljs.core.chunk_first(seq__41884_41985__$1);\r\nvar G__41989 = cljs.core.chunk_rest(seq__41884_41985__$1);\r\nvar G__41990 = c__4351__auto___41986;\r\nvar G__41991 = cljs.core.count(c__4351__auto___41986);\r\nvar G__41992 = (0);\r\nseq__41884_41975 = G__41989;\r\nchunk__41885_41976 = G__41990;\r\ncount__41886_41977 = G__41991;\r\ni__41887_41978 = G__41992;\r\ncontinue;\r\n} else {\r\nvar tx_41993 = cljs.core.first(seq__41884_41985__$1);\r\nif(cljs.core.truth_(has_mutations_QMARK__41948(tx_41993))){\r\nfulcro.client.impl.application.enqueue(queue_41941,payload_41949(tx_41993));\r\n} else {\r\n}\r\n\r\n\r\nvar G__41998 = cljs.core.next(seq__41884_41985__$1);\r\nvar G__41999 = null;\r\nvar G__42000 = (0);\r\nvar G__42001 = (0);\r\nseq__41884_41975 = G__41998;\r\nchunk__41885_41976 = G__41999;\r\ncount__41886_41977 = G__42000;\r\ni__41887_41978 = G__42001;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\n\r\nvar G__42005 = seq__41864;\r\nvar G__42006 = chunk__41865;\r\nvar G__42007 = count__41866;\r\nvar G__42008 = (i__41867 + (1));\r\nseq__41864 = G__42005;\r\nchunk__41865 = G__42006;\r\ncount__41866 = G__42007;\r\ni__41867 = G__42008;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto__ = cljs.core.seq(seq__41864);\r\nif(temp__5457__auto__){\r\nvar seq__41864__$1 = temp__5457__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__41864__$1)){\r\nvar c__4351__auto__ = cljs.core.chunk_first(seq__41864__$1);\r\nvar G__42009 = cljs.core.chunk_rest(seq__41864__$1);\r\nvar G__42010 = c__4351__auto__;\r\nvar G__42011 = cljs.core.count(c__4351__auto__);\r\nvar G__42012 = (0);\r\nseq__41864 = G__42009;\r\nchunk__41865 = G__42010;\r\ncount__41866 = G__42011;\r\ni__41867 = G__42012;\r\ncontinue;\r\n} else {\r\nvar remote = cljs.core.first(seq__41864__$1);\r\nvar queue_42013 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(send_queues,remote);\r\nvar full_remote_transaction_42014 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(remote_tx_map,remote);\r\nvar refresh_set_42015 = (function (){var or__3949__auto__ = (function (){var G__41908 = full_remote_transaction_42014;\r\nvar G__41908__$1 = (((G__41908 == null))?null:cljs.core.meta(G__41908));\r\nvar G__41908__$2 = (((G__41908__$1 == null))?null:new cljs.core.Keyword(\"fulcro.client.primitives\",\"refresh\",\"fulcro.client.primitives/refresh\",481513561).cljs$core$IFn$_invoke$arity$1(G__41908__$1));\r\nif((G__41908__$2 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.vec(G__41908__$2);\r\n}\r\n})();\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}\r\n})();\r\nvar tx_time_42016 = (function (){var G__41912 = full_remote_transaction_42014;\r\nvar G__41912__$1 = (((G__41912 == null))?null:cljs.core.meta(G__41912));\r\nif((G__41912__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(\"fulcro.history\",\"tx-time\",\"fulcro.history/tx-time\",816348456).cljs$core$IFn$_invoke$arity$1(G__41912__$1);\r\n}\r\n})();\r\nvar fallback_42017 = fulcro.client.impl.application.fallback_handler(app,full_remote_transaction_42014);\r\nvar desired_remote_mutations_42018 = fulcro.client.primitives.remove_loads_and_fallbacks(full_remote_transaction_42014);\r\nvar tx_list_42019 = fulcro.client.impl.application.split_mutations(desired_remote_mutations_42018);\r\nvar has_mutations_QMARK__42020 = ((function (seq__41864,chunk__41865,count__41866,i__41867,queue_42013,full_remote_transaction_42014,refresh_set_42015,tx_time_42016,fallback_42017,desired_remote_mutations_42018,tx_list_42019,remote,seq__41864__$1,temp__5457__auto__,history,map__41860,map__41860__$1,app,reconciler,send_queues){\r\nreturn (function (tx){\r\nreturn (cljs.core.count(tx) > (0));\r\n});})(seq__41864,chunk__41865,count__41866,i__41867,queue_42013,full_remote_transaction_42014,refresh_set_42015,tx_time_42016,fallback_42017,desired_remote_mutations_42018,tx_list_42019,remote,seq__41864__$1,temp__5457__auto__,history,map__41860,map__41860__$1,app,reconciler,send_queues))\r\n;\r\nvar payload_42021 = ((function (seq__41864,chunk__41865,count__41866,i__41867,queue_42013,full_remote_transaction_42014,refresh_set_42015,tx_time_42016,fallback_42017,desired_remote_mutations_42018,tx_list_42019,has_mutations_QMARK__42020,remote,seq__41864__$1,temp__5457__auto__,history,map__41860,map__41860__$1,app,reconciler,send_queues){\r\nreturn (function (tx){\r\nvar abort_id = (function (){var G__41914 = tx;\r\nvar G__41914__$1 = (((G__41914 == null))?null:fulcro.client.mutations.abort_ids(G__41914));\r\nif((G__41914__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.first(G__41914__$1);\r\n}\r\n})();\r\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(\"fulcro.client.primitives\",\"query\",\"fulcro.client.primitives/query\",261276758),tx,new cljs.core.Keyword(\"fulcro.history\",\"tx-time\",\"fulcro.history/tx-time\",816348456),tx_time_42016,new cljs.core.Keyword(\"fulcro.history\",\"history-atom\",\"fulcro.history/history-atom\",-1250797564),history,new cljs.core.Keyword(\"fulcro.client.primitives\",\"remote\",\"fulcro.client.primitives/remote\",82057012),remote,new cljs.core.Keyword(\"fulcro.client.network\",\"abort-id\",\"fulcro.client.network/abort-id\",-22430267),abort_id,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-load\",\"fulcro.client.impl.data-fetch/on-load\",-1170993603),((function (seq__41864,chunk__41865,count__41866,i__41867,abort_id,queue_42013,full_remote_transaction_42014,refresh_set_42015,tx_time_42016,fallback_42017,desired_remote_mutations_42018,tx_list_42019,has_mutations_QMARK__42020,remote,seq__41864__$1,temp__5457__auto__,history,map__41860,map__41860__$1,app,reconciler,send_queues){\r\nreturn (function (result,mtx){\r\nvar G__41916 = result;\r\nvar G__41917 = (function (){var or__3949__auto__ = mtx;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn tx;\r\n}\r\n})();\r\nvar G__41918 = remote;\r\nreturn (cb.cljs$core$IFn$_invoke$arity$3 ? cb.cljs$core$IFn$_invoke$arity$3(G__41916,G__41917,G__41918) : cb.call(null,G__41916,G__41917,G__41918));\r\n});})(seq__41864,chunk__41865,count__41866,i__41867,abort_id,queue_42013,full_remote_transaction_42014,refresh_set_42015,tx_time_42016,fallback_42017,desired_remote_mutations_42018,tx_list_42019,has_mutations_QMARK__42020,remote,seq__41864__$1,temp__5457__auto__,history,map__41860,map__41860__$1,app,reconciler,send_queues))\r\n,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-error\",\"fulcro.client.impl.data-fetch/on-error\",867419629),((function (seq__41864,chunk__41865,count__41866,i__41867,abort_id,queue_42013,full_remote_transaction_42014,refresh_set_42015,tx_time_42016,fallback_42017,desired_remote_mutations_42018,tx_list_42019,has_mutations_QMARK__42020,remote,seq__41864__$1,temp__5457__auto__,history,map__41860,map__41860__$1,app,reconciler,send_queues){\r\nreturn (function (result){\r\nreturn (fallback_42017.cljs$core$IFn$_invoke$arity$1 ? fallback_42017.cljs$core$IFn$_invoke$arity$1(result) : fallback_42017.call(null,result));\r\n});})(seq__41864,chunk__41865,count__41866,i__41867,abort_id,queue_42013,full_remote_transaction_42014,refresh_set_42015,tx_time_42016,fallback_42017,desired_remote_mutations_42018,tx_list_42019,has_mutations_QMARK__42020,remote,seq__41864__$1,temp__5457__auto__,history,map__41860,map__41860__$1,app,reconciler,send_queues))\r\n], null);\r\n});})(seq__41864,chunk__41865,count__41866,i__41867,queue_42013,full_remote_transaction_42014,refresh_set_42015,tx_time_42016,fallback_42017,desired_remote_mutations_42018,tx_list_42019,has_mutations_QMARK__42020,remote,seq__41864__$1,temp__5457__auto__,history,map__41860,map__41860__$1,app,reconciler,send_queues))\r\n;\r\nvar seq__41920_42056 = cljs.core.seq(tx_list_42019);\r\nvar chunk__41921_42057 = null;\r\nvar count__41922_42058 = (0);\r\nvar i__41923_42059 = (0);\r\nwhile(true){\r\nif((i__41923_42059 < count__41922_42058)){\r\nvar tx_42060 = chunk__41921_42057.cljs$core$IIndexed$_nth$arity$2(null,i__41923_42059);\r\nif(cljs.core.truth_(has_mutations_QMARK__42020(tx_42060))){\r\nfulcro.client.impl.application.enqueue(queue_42013,payload_42021(tx_42060));\r\n} else {\r\n}\r\n\r\n\r\nvar G__42063 = seq__41920_42056;\r\nvar G__42064 = chunk__41921_42057;\r\nvar G__42065 = count__41922_42058;\r\nvar G__42066 = (i__41923_42059 + (1));\r\nseq__41920_42056 = G__42063;\r\nchunk__41921_42057 = G__42064;\r\ncount__41922_42058 = G__42065;\r\ni__41923_42059 = G__42066;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto___42067__$1 = cljs.core.seq(seq__41920_42056);\r\nif(temp__5457__auto___42067__$1){\r\nvar seq__41920_42069__$1 = temp__5457__auto___42067__$1;\r\nif(cljs.core.chunked_seq_QMARK_(seq__41920_42069__$1)){\r\nvar c__4351__auto___42070 = cljs.core.chunk_first(seq__41920_42069__$1);\r\nvar G__42072 = cljs.core.chunk_rest(seq__41920_42069__$1);\r\nvar G__42073 = c__4351__auto___42070;\r\nvar G__42074 = cljs.core.count(c__4351__auto___42070);\r\nvar G__42075 = (0);\r\nseq__41920_42056 = G__42072;\r\nchunk__41921_42057 = G__42073;\r\ncount__41922_42058 = G__42074;\r\ni__41923_42059 = G__42075;\r\ncontinue;\r\n} else {\r\nvar tx_42076 = cljs.core.first(seq__41920_42069__$1);\r\nif(cljs.core.truth_(has_mutations_QMARK__42020(tx_42076))){\r\nfulcro.client.impl.application.enqueue(queue_42013,payload_42021(tx_42076));\r\n} else {\r\n}\r\n\r\n\r\nvar G__42078 = cljs.core.next(seq__41920_42069__$1);\r\nvar G__42079 = null;\r\nvar G__42080 = (0);\r\nvar G__42081 = (0);\r\nseq__41920_42056 = G__42078;\r\nchunk__41921_42057 = G__42079;\r\ncount__41922_42058 = G__42080;\r\ni__41923_42059 = G__42081;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\n\r\nvar G__42084 = cljs.core.next(seq__41864__$1);\r\nvar G__42085 = null;\r\nvar G__42086 = (0);\r\nvar G__42087 = (0);\r\nseq__41864 = G__42084;\r\nchunk__41865 = G__42085;\r\ncount__41866 = G__42086;\r\ni__41867 = G__42087;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Finds any loads marked `parallel` and triggers real network requests immediately. Remaining loads\r\n *   are pulled into a single fetch payload (combined into one query) and enqueued behind any prior mutations/reads that\r\n *   were already requested in a prior UI/event cycle. Thus non-parallel reads are processed in clusters grouped due to UI\r\n *   events (a single event might trigger many reads which will all go to the server as a single combined request).\r\n *   Further UI events that trigger remote interaction will end up waiting until prior network request(s) are complete.\r\n * \r\n *   This ensures that default reasoning is simple and sequential in the face of optimistic UI updates (real network\r\n *   traffic characteristics could cause out of order processing, and you would not want\r\n *   a 'create list' to be processed on the server *after* an 'add an item to the list'). \r\n */\r\nfulcro.client.impl.application.enqueue_reads = (function fulcro$client$impl$application$enqueue_reads(p__42094){\r\nvar map__42095 = p__42094;\r\nvar map__42095__$1 = ((((!((map__42095 == null)))?(((((map__42095.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42095.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42095):map__42095);\r\nvar send_queues = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42095__$1,new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330));\r\nvar reconciler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42095__$1,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966));\r\nvar networking = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42095__$1,new cljs.core.Keyword(null,\"networking\",\"networking\",586110628));\r\nvar seq__42098 = cljs.core.seq(cljs.core.keys(send_queues));\r\nvar chunk__42099 = null;\r\nvar count__42100 = (0);\r\nvar i__42101 = (0);\r\nwhile(true){\r\nif((i__42101 < count__42100)){\r\nvar remote = chunk__42099.cljs$core$IIndexed$_nth$arity$2(null,i__42101);\r\nvar queue_42141 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(send_queues,remote);\r\nvar network_42142 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(networking,remote);\r\nvar parallel_payload_42143 = fulcro.client.impl.data_fetch.mark_parallel_loading_BANG_(remote,reconciler);\r\nvar seq__42105_42145 = cljs.core.seq(parallel_payload_42143);\r\nvar chunk__42106_42146 = null;\r\nvar count__42107_42147 = (0);\r\nvar i__42108_42148 = (0);\r\nwhile(true){\r\nif((i__42108_42148 < count__42107_42147)){\r\nvar map__42109_42149 = chunk__42106_42146.cljs$core$IIndexed$_nth$arity$2(null,i__42108_42148);\r\nvar map__42109_42150__$1 = ((((!((map__42109_42149 == null)))?(((((map__42109_42149.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42109_42149.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42109_42149):map__42109_42149);\r\nvar payload_42151 = map__42109_42150__$1;\r\nvar query_42152 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42109_42150__$1,new cljs.core.Keyword(\"fulcro.client.primitives\",\"query\",\"fulcro.client.primitives/query\",261276758));\r\nvar on_load_42153 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42109_42150__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-load\",\"fulcro.client.impl.data-fetch/on-load\",-1170993603));\r\nvar on_error_42154 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42109_42150__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-error\",\"fulcro.client.impl.data-fetch/on-error\",867419629));\r\nvar load_descriptors_42155 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42109_42150__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"load-descriptors\",\"fulcro.client.impl.data-fetch/load-descriptors\",1275690424));\r\nvar abort_id_42156 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42109_42150__$1,new cljs.core.Keyword(\"fulcro.client.network\",\"abort-id\",\"fulcro.client.network/abort-id\",-22430267));\r\nvar on_load_SINGLEQUOTE__42161 = ((function (seq__42105_42145,chunk__42106_42146,count__42107_42147,i__42108_42148,seq__42098,chunk__42099,count__42100,i__42101,map__42109_42149,map__42109_42150__$1,payload_42151,query_42152,on_load_42153,on_error_42154,load_descriptors_42155,abort_id_42156,queue_42141,network_42142,parallel_payload_42143,remote,map__42095,map__42095__$1,send_queues,reconciler,networking){\r\nreturn (function (p1__42091_SHARP_){\r\nreturn (on_load_42153.cljs$core$IFn$_invoke$arity$2 ? on_load_42153.cljs$core$IFn$_invoke$arity$2(p1__42091_SHARP_,load_descriptors_42155) : on_load_42153.call(null,p1__42091_SHARP_,load_descriptors_42155));\r\n});})(seq__42105_42145,chunk__42106_42146,count__42107_42147,i__42108_42148,seq__42098,chunk__42099,count__42100,i__42101,map__42109_42149,map__42109_42150__$1,payload_42151,query_42152,on_load_42153,on_error_42154,load_descriptors_42155,abort_id_42156,queue_42141,network_42142,parallel_payload_42143,remote,map__42095,map__42095__$1,send_queues,reconciler,networking))\r\n;\r\nvar on_error_SINGLEQUOTE__42162 = ((function (seq__42105_42145,chunk__42106_42146,count__42107_42147,i__42108_42148,seq__42098,chunk__42099,count__42100,i__42101,on_load_SINGLEQUOTE__42161,map__42109_42149,map__42109_42150__$1,payload_42151,query_42152,on_load_42153,on_error_42154,load_descriptors_42155,abort_id_42156,queue_42141,network_42142,parallel_payload_42143,remote,map__42095,map__42095__$1,send_queues,reconciler,networking){\r\nreturn (function (p1__42092_SHARP_){\r\nreturn (on_error_42154.cljs$core$IFn$_invoke$arity$2 ? on_error_42154.cljs$core$IFn$_invoke$arity$2(p1__42092_SHARP_,load_descriptors_42155) : on_error_42154.call(null,p1__42092_SHARP_,load_descriptors_42155));\r\n});})(seq__42105_42145,chunk__42106_42146,count__42107_42147,i__42108_42148,seq__42098,chunk__42099,count__42100,i__42101,on_load_SINGLEQUOTE__42161,map__42109_42149,map__42109_42150__$1,payload_42151,query_42152,on_load_42153,on_error_42154,load_descriptors_42155,abort_id_42156,queue_42141,network_42142,parallel_payload_42143,remote,map__42095,map__42095__$1,send_queues,reconciler,networking))\r\n;\r\nfulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2(network_42142,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),payload_42151,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),reconciler,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418),query_42152,new cljs.core.Keyword(null,\"on-done\",\"on-done\",-699252077),on_load_SINGLEQUOTE__42161,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),on_error_SINGLEQUOTE__42162,new cljs.core.Keyword(null,\"abort-id\",\"abort-id\",1559937819),abort_id_42156], null));\r\n\r\n\r\nvar G__42175 = seq__42105_42145;\r\nvar G__42176 = chunk__42106_42146;\r\nvar G__42177 = count__42107_42147;\r\nvar G__42178 = (i__42108_42148 + (1));\r\nseq__42105_42145 = G__42175;\r\nchunk__42106_42146 = G__42176;\r\ncount__42107_42147 = G__42177;\r\ni__42108_42148 = G__42178;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto___42179 = cljs.core.seq(seq__42105_42145);\r\nif(temp__5457__auto___42179){\r\nvar seq__42105_42182__$1 = temp__5457__auto___42179;\r\nif(cljs.core.chunked_seq_QMARK_(seq__42105_42182__$1)){\r\nvar c__4351__auto___42183 = cljs.core.chunk_first(seq__42105_42182__$1);\r\nvar G__42185 = cljs.core.chunk_rest(seq__42105_42182__$1);\r\nvar G__42186 = c__4351__auto___42183;\r\nvar G__42187 = cljs.core.count(c__4351__auto___42183);\r\nvar G__42188 = (0);\r\nseq__42105_42145 = G__42185;\r\nchunk__42106_42146 = G__42186;\r\ncount__42107_42147 = G__42187;\r\ni__42108_42148 = G__42188;\r\ncontinue;\r\n} else {\r\nvar map__42113_42190 = cljs.core.first(seq__42105_42182__$1);\r\nvar map__42113_42191__$1 = ((((!((map__42113_42190 == null)))?(((((map__42113_42190.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42113_42190.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42113_42190):map__42113_42190);\r\nvar payload_42192 = map__42113_42191__$1;\r\nvar query_42193 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42113_42191__$1,new cljs.core.Keyword(\"fulcro.client.primitives\",\"query\",\"fulcro.client.primitives/query\",261276758));\r\nvar on_load_42194 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42113_42191__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-load\",\"fulcro.client.impl.data-fetch/on-load\",-1170993603));\r\nvar on_error_42195 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42113_42191__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-error\",\"fulcro.client.impl.data-fetch/on-error\",867419629));\r\nvar load_descriptors_42196 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42113_42191__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"load-descriptors\",\"fulcro.client.impl.data-fetch/load-descriptors\",1275690424));\r\nvar abort_id_42197 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42113_42191__$1,new cljs.core.Keyword(\"fulcro.client.network\",\"abort-id\",\"fulcro.client.network/abort-id\",-22430267));\r\nvar on_load_SINGLEQUOTE__42198 = ((function (seq__42105_42145,chunk__42106_42146,count__42107_42147,i__42108_42148,seq__42098,chunk__42099,count__42100,i__42101,map__42113_42190,map__42113_42191__$1,payload_42192,query_42193,on_load_42194,on_error_42195,load_descriptors_42196,abort_id_42197,seq__42105_42182__$1,temp__5457__auto___42179,queue_42141,network_42142,parallel_payload_42143,remote,map__42095,map__42095__$1,send_queues,reconciler,networking){\r\nreturn (function (p1__42091_SHARP_){\r\nreturn (on_load_42194.cljs$core$IFn$_invoke$arity$2 ? on_load_42194.cljs$core$IFn$_invoke$arity$2(p1__42091_SHARP_,load_descriptors_42196) : on_load_42194.call(null,p1__42091_SHARP_,load_descriptors_42196));\r\n});})(seq__42105_42145,chunk__42106_42146,count__42107_42147,i__42108_42148,seq__42098,chunk__42099,count__42100,i__42101,map__42113_42190,map__42113_42191__$1,payload_42192,query_42193,on_load_42194,on_error_42195,load_descriptors_42196,abort_id_42197,seq__42105_42182__$1,temp__5457__auto___42179,queue_42141,network_42142,parallel_payload_42143,remote,map__42095,map__42095__$1,send_queues,reconciler,networking))\r\n;\r\nvar on_error_SINGLEQUOTE__42199 = ((function (seq__42105_42145,chunk__42106_42146,count__42107_42147,i__42108_42148,seq__42098,chunk__42099,count__42100,i__42101,on_load_SINGLEQUOTE__42198,map__42113_42190,map__42113_42191__$1,payload_42192,query_42193,on_load_42194,on_error_42195,load_descriptors_42196,abort_id_42197,seq__42105_42182__$1,temp__5457__auto___42179,queue_42141,network_42142,parallel_payload_42143,remote,map__42095,map__42095__$1,send_queues,reconciler,networking){\r\nreturn (function (p1__42092_SHARP_){\r\nreturn (on_error_42195.cljs$core$IFn$_invoke$arity$2 ? on_error_42195.cljs$core$IFn$_invoke$arity$2(p1__42092_SHARP_,load_descriptors_42196) : on_error_42195.call(null,p1__42092_SHARP_,load_descriptors_42196));\r\n});})(seq__42105_42145,chunk__42106_42146,count__42107_42147,i__42108_42148,seq__42098,chunk__42099,count__42100,i__42101,on_load_SINGLEQUOTE__42198,map__42113_42190,map__42113_42191__$1,payload_42192,query_42193,on_load_42194,on_error_42195,load_descriptors_42196,abort_id_42197,seq__42105_42182__$1,temp__5457__auto___42179,queue_42141,network_42142,parallel_payload_42143,remote,map__42095,map__42095__$1,send_queues,reconciler,networking))\r\n;\r\nfulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2(network_42142,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),payload_42192,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),reconciler,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418),query_42193,new cljs.core.Keyword(null,\"on-done\",\"on-done\",-699252077),on_load_SINGLEQUOTE__42198,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),on_error_SINGLEQUOTE__42199,new cljs.core.Keyword(null,\"abort-id\",\"abort-id\",1559937819),abort_id_42197], null));\r\n\r\n\r\nvar G__42209 = cljs.core.next(seq__42105_42182__$1);\r\nvar G__42210 = null;\r\nvar G__42211 = (0);\r\nvar G__42212 = (0);\r\nseq__42105_42145 = G__42209;\r\nchunk__42106_42146 = G__42210;\r\ncount__42107_42147 = G__42211;\r\ni__42108_42148 = G__42212;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nvar fetch_payload_42213 = fulcro.client.impl.data_fetch.mark_loading(remote,reconciler);\r\nwhile(true){\r\nif(cljs.core.truth_(fetch_payload_42213)){\r\nfulcro.client.impl.application.enqueue(queue_42141,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(fetch_payload_42213,new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),network_42142));\r\n\r\nvar G__42214 = fulcro.client.impl.data_fetch.mark_loading(remote,reconciler);\r\nfetch_payload_42213 = G__42214;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\n\r\nvar G__42215 = seq__42098;\r\nvar G__42216 = chunk__42099;\r\nvar G__42217 = count__42100;\r\nvar G__42218 = (i__42101 + (1));\r\nseq__42098 = G__42215;\r\nchunk__42099 = G__42216;\r\ncount__42100 = G__42217;\r\ni__42101 = G__42218;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto__ = cljs.core.seq(seq__42098);\r\nif(temp__5457__auto__){\r\nvar seq__42098__$1 = temp__5457__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__42098__$1)){\r\nvar c__4351__auto__ = cljs.core.chunk_first(seq__42098__$1);\r\nvar G__42219 = cljs.core.chunk_rest(seq__42098__$1);\r\nvar G__42220 = c__4351__auto__;\r\nvar G__42221 = cljs.core.count(c__4351__auto__);\r\nvar G__42222 = (0);\r\nseq__42098 = G__42219;\r\nchunk__42099 = G__42220;\r\ncount__42100 = G__42221;\r\ni__42101 = G__42222;\r\ncontinue;\r\n} else {\r\nvar remote = cljs.core.first(seq__42098__$1);\r\nvar queue_42224 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(send_queues,remote);\r\nvar network_42225 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(networking,remote);\r\nvar parallel_payload_42226 = fulcro.client.impl.data_fetch.mark_parallel_loading_BANG_(remote,reconciler);\r\nvar seq__42125_42230 = cljs.core.seq(parallel_payload_42226);\r\nvar chunk__42126_42231 = null;\r\nvar count__42127_42232 = (0);\r\nvar i__42128_42233 = (0);\r\nwhile(true){\r\nif((i__42128_42233 < count__42127_42232)){\r\nvar map__42129_42236 = chunk__42126_42231.cljs$core$IIndexed$_nth$arity$2(null,i__42128_42233);\r\nvar map__42129_42237__$1 = ((((!((map__42129_42236 == null)))?(((((map__42129_42236.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42129_42236.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42129_42236):map__42129_42236);\r\nvar payload_42238 = map__42129_42237__$1;\r\nvar query_42239 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42129_42237__$1,new cljs.core.Keyword(\"fulcro.client.primitives\",\"query\",\"fulcro.client.primitives/query\",261276758));\r\nvar on_load_42240 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42129_42237__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-load\",\"fulcro.client.impl.data-fetch/on-load\",-1170993603));\r\nvar on_error_42241 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42129_42237__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-error\",\"fulcro.client.impl.data-fetch/on-error\",867419629));\r\nvar load_descriptors_42242 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42129_42237__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"load-descriptors\",\"fulcro.client.impl.data-fetch/load-descriptors\",1275690424));\r\nvar abort_id_42243 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42129_42237__$1,new cljs.core.Keyword(\"fulcro.client.network\",\"abort-id\",\"fulcro.client.network/abort-id\",-22430267));\r\nvar on_load_SINGLEQUOTE__42248 = ((function (seq__42125_42230,chunk__42126_42231,count__42127_42232,i__42128_42233,seq__42098,chunk__42099,count__42100,i__42101,map__42129_42236,map__42129_42237__$1,payload_42238,query_42239,on_load_42240,on_error_42241,load_descriptors_42242,abort_id_42243,queue_42224,network_42225,parallel_payload_42226,remote,seq__42098__$1,temp__5457__auto__,map__42095,map__42095__$1,send_queues,reconciler,networking){\r\nreturn (function (p1__42091_SHARP_){\r\nreturn (on_load_42240.cljs$core$IFn$_invoke$arity$2 ? on_load_42240.cljs$core$IFn$_invoke$arity$2(p1__42091_SHARP_,load_descriptors_42242) : on_load_42240.call(null,p1__42091_SHARP_,load_descriptors_42242));\r\n});})(seq__42125_42230,chunk__42126_42231,count__42127_42232,i__42128_42233,seq__42098,chunk__42099,count__42100,i__42101,map__42129_42236,map__42129_42237__$1,payload_42238,query_42239,on_load_42240,on_error_42241,load_descriptors_42242,abort_id_42243,queue_42224,network_42225,parallel_payload_42226,remote,seq__42098__$1,temp__5457__auto__,map__42095,map__42095__$1,send_queues,reconciler,networking))\r\n;\r\nvar on_error_SINGLEQUOTE__42249 = ((function (seq__42125_42230,chunk__42126_42231,count__42127_42232,i__42128_42233,seq__42098,chunk__42099,count__42100,i__42101,on_load_SINGLEQUOTE__42248,map__42129_42236,map__42129_42237__$1,payload_42238,query_42239,on_load_42240,on_error_42241,load_descriptors_42242,abort_id_42243,queue_42224,network_42225,parallel_payload_42226,remote,seq__42098__$1,temp__5457__auto__,map__42095,map__42095__$1,send_queues,reconciler,networking){\r\nreturn (function (p1__42092_SHARP_){\r\nreturn (on_error_42241.cljs$core$IFn$_invoke$arity$2 ? on_error_42241.cljs$core$IFn$_invoke$arity$2(p1__42092_SHARP_,load_descriptors_42242) : on_error_42241.call(null,p1__42092_SHARP_,load_descriptors_42242));\r\n});})(seq__42125_42230,chunk__42126_42231,count__42127_42232,i__42128_42233,seq__42098,chunk__42099,count__42100,i__42101,on_load_SINGLEQUOTE__42248,map__42129_42236,map__42129_42237__$1,payload_42238,query_42239,on_load_42240,on_error_42241,load_descriptors_42242,abort_id_42243,queue_42224,network_42225,parallel_payload_42226,remote,seq__42098__$1,temp__5457__auto__,map__42095,map__42095__$1,send_queues,reconciler,networking))\r\n;\r\nfulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2(network_42225,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),payload_42238,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),reconciler,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418),query_42239,new cljs.core.Keyword(null,\"on-done\",\"on-done\",-699252077),on_load_SINGLEQUOTE__42248,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),on_error_SINGLEQUOTE__42249,new cljs.core.Keyword(null,\"abort-id\",\"abort-id\",1559937819),abort_id_42243], null));\r\n\r\n\r\nvar G__42257 = seq__42125_42230;\r\nvar G__42258 = chunk__42126_42231;\r\nvar G__42259 = count__42127_42232;\r\nvar G__42260 = (i__42128_42233 + (1));\r\nseq__42125_42230 = G__42257;\r\nchunk__42126_42231 = G__42258;\r\ncount__42127_42232 = G__42259;\r\ni__42128_42233 = G__42260;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto___42261__$1 = cljs.core.seq(seq__42125_42230);\r\nif(temp__5457__auto___42261__$1){\r\nvar seq__42125_42263__$1 = temp__5457__auto___42261__$1;\r\nif(cljs.core.chunked_seq_QMARK_(seq__42125_42263__$1)){\r\nvar c__4351__auto___42264 = cljs.core.chunk_first(seq__42125_42263__$1);\r\nvar G__42265 = cljs.core.chunk_rest(seq__42125_42263__$1);\r\nvar G__42266 = c__4351__auto___42264;\r\nvar G__42267 = cljs.core.count(c__4351__auto___42264);\r\nvar G__42268 = (0);\r\nseq__42125_42230 = G__42265;\r\nchunk__42126_42231 = G__42266;\r\ncount__42127_42232 = G__42267;\r\ni__42128_42233 = G__42268;\r\ncontinue;\r\n} else {\r\nvar map__42133_42269 = cljs.core.first(seq__42125_42263__$1);\r\nvar map__42133_42270__$1 = ((((!((map__42133_42269 == null)))?(((((map__42133_42269.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42133_42269.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42133_42269):map__42133_42269);\r\nvar payload_42271 = map__42133_42270__$1;\r\nvar query_42272 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42133_42270__$1,new cljs.core.Keyword(\"fulcro.client.primitives\",\"query\",\"fulcro.client.primitives/query\",261276758));\r\nvar on_load_42273 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42133_42270__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-load\",\"fulcro.client.impl.data-fetch/on-load\",-1170993603));\r\nvar on_error_42274 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42133_42270__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-error\",\"fulcro.client.impl.data-fetch/on-error\",867419629));\r\nvar load_descriptors_42275 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42133_42270__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"load-descriptors\",\"fulcro.client.impl.data-fetch/load-descriptors\",1275690424));\r\nvar abort_id_42276 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42133_42270__$1,new cljs.core.Keyword(\"fulcro.client.network\",\"abort-id\",\"fulcro.client.network/abort-id\",-22430267));\r\nvar on_load_SINGLEQUOTE__42279 = ((function (seq__42125_42230,chunk__42126_42231,count__42127_42232,i__42128_42233,seq__42098,chunk__42099,count__42100,i__42101,map__42133_42269,map__42133_42270__$1,payload_42271,query_42272,on_load_42273,on_error_42274,load_descriptors_42275,abort_id_42276,seq__42125_42263__$1,temp__5457__auto___42261__$1,queue_42224,network_42225,parallel_payload_42226,remote,seq__42098__$1,temp__5457__auto__,map__42095,map__42095__$1,send_queues,reconciler,networking){\r\nreturn (function (p1__42091_SHARP_){\r\nreturn (on_load_42273.cljs$core$IFn$_invoke$arity$2 ? on_load_42273.cljs$core$IFn$_invoke$arity$2(p1__42091_SHARP_,load_descriptors_42275) : on_load_42273.call(null,p1__42091_SHARP_,load_descriptors_42275));\r\n});})(seq__42125_42230,chunk__42126_42231,count__42127_42232,i__42128_42233,seq__42098,chunk__42099,count__42100,i__42101,map__42133_42269,map__42133_42270__$1,payload_42271,query_42272,on_load_42273,on_error_42274,load_descriptors_42275,abort_id_42276,seq__42125_42263__$1,temp__5457__auto___42261__$1,queue_42224,network_42225,parallel_payload_42226,remote,seq__42098__$1,temp__5457__auto__,map__42095,map__42095__$1,send_queues,reconciler,networking))\r\n;\r\nvar on_error_SINGLEQUOTE__42280 = ((function (seq__42125_42230,chunk__42126_42231,count__42127_42232,i__42128_42233,seq__42098,chunk__42099,count__42100,i__42101,on_load_SINGLEQUOTE__42279,map__42133_42269,map__42133_42270__$1,payload_42271,query_42272,on_load_42273,on_error_42274,load_descriptors_42275,abort_id_42276,seq__42125_42263__$1,temp__5457__auto___42261__$1,queue_42224,network_42225,parallel_payload_42226,remote,seq__42098__$1,temp__5457__auto__,map__42095,map__42095__$1,send_queues,reconciler,networking){\r\nreturn (function (p1__42092_SHARP_){\r\nreturn (on_error_42274.cljs$core$IFn$_invoke$arity$2 ? on_error_42274.cljs$core$IFn$_invoke$arity$2(p1__42092_SHARP_,load_descriptors_42275) : on_error_42274.call(null,p1__42092_SHARP_,load_descriptors_42275));\r\n});})(seq__42125_42230,chunk__42126_42231,count__42127_42232,i__42128_42233,seq__42098,chunk__42099,count__42100,i__42101,on_load_SINGLEQUOTE__42279,map__42133_42269,map__42133_42270__$1,payload_42271,query_42272,on_load_42273,on_error_42274,load_descriptors_42275,abort_id_42276,seq__42125_42263__$1,temp__5457__auto___42261__$1,queue_42224,network_42225,parallel_payload_42226,remote,seq__42098__$1,temp__5457__auto__,map__42095,map__42095__$1,send_queues,reconciler,networking))\r\n;\r\nfulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2(network_42225,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),payload_42271,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),reconciler,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418),query_42272,new cljs.core.Keyword(null,\"on-done\",\"on-done\",-699252077),on_load_SINGLEQUOTE__42279,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),on_error_SINGLEQUOTE__42280,new cljs.core.Keyword(null,\"abort-id\",\"abort-id\",1559937819),abort_id_42276], null));\r\n\r\n\r\nvar G__42286 = cljs.core.next(seq__42125_42263__$1);\r\nvar G__42287 = null;\r\nvar G__42288 = (0);\r\nvar G__42289 = (0);\r\nseq__42125_42230 = G__42286;\r\nchunk__42126_42231 = G__42287;\r\ncount__42127_42232 = G__42288;\r\ni__42128_42233 = G__42289;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nvar fetch_payload_42292 = fulcro.client.impl.data_fetch.mark_loading(remote,reconciler);\r\nwhile(true){\r\nif(cljs.core.truth_(fetch_payload_42292)){\r\nfulcro.client.impl.application.enqueue(queue_42224,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(fetch_payload_42292,new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),network_42225));\r\n\r\nvar G__42294 = fulcro.client.impl.data_fetch.mark_loading(remote,reconciler);\r\nfetch_payload_42292 = G__42294;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\n\r\nvar G__42297 = cljs.core.next(seq__42098__$1);\r\nvar G__42298 = null;\r\nvar G__42299 = (0);\r\nvar G__42300 = (0);\r\nseq__42098 = G__42297;\r\nchunk__42099 = G__42298;\r\ncount__42100 = G__42299;\r\ni__42101 = G__42300;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\nfulcro.client.impl.application.detect_errant_remotes = (function fulcro$client$impl$application$detect_errant_remotes(p__42305){\r\nvar map__42306 = p__42305;\r\nvar map__42306__$1 = ((((!((map__42306 == null)))?(((((map__42306.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42306.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42306):map__42306);\r\nvar app = map__42306__$1;\r\nvar reconciler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42306__$1,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966));\r\nvar send_queues = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42306__$1,new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330));\r\nvar state = fulcro.client.primitives.app_state(reconciler);\r\nvar all_items = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.Keyword(\"fulcro\",\"ready-to-load\",\"fulcro/ready-to-load\",127104696));\r\nvar item_remotes = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(fulcro.client.impl.data_fetch.data_remote,all_items));\r\nvar all_remotes = cljs.core.set(cljs.core.keys(send_queues));\r\nvar invalid_remotes = clojure.set.difference.cljs$core$IFn$_invoke$arity$2(item_remotes,all_remotes);\r\nif(cljs.core.truth_(cljs.core.not_empty(invalid_remotes))){\r\ntry{return fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),203], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Use of invalid remote(s) detected! \",invalid_remotes], 0));\r\n}catch (e42308){if((e42308 instanceof Error)){\r\nvar e__31527__auto__ = e42308;\r\nreturn fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),203], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto__], 0));\r\n} else {\r\nthrow e42308;\r\n\r\n}\r\n}} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Puts queries/mutations (and their corresponding callbacks) onto the send queue. The networking code will pull these\r\n *   off one at a time and send them through the real networking layer. Reads are guaranteed to *follow* writes.\r\n */\r\nfulcro.client.impl.application.server_send = (function fulcro$client$impl$application$server_send(app,remote_tx_map,merge_result_callback){\r\nfulcro.client.impl.application.detect_errant_remotes(app);\r\n\r\nfulcro.client.impl.application.enqueue_mutations(app,remote_tx_map,merge_result_callback);\r\n\r\nreturn fulcro.client.impl.application.enqueue_reads(app);\r\n});\r\n/**\r\n * Sends a network payload. There are two kinds of payloads in Fulcro. The first is\r\n *   for reads, which are tracked by load descriptors in the app state. These load descriptors\r\n *   tell the plumbing how to handle the response, and expect to only be merged in once. Mutations\r\n *   do not have a payload, and can technically receive progress updates from the network. The built-in\r\n *   networking does not (currently) give progress events, but plugin networking can. It is currently not\r\n *   supported to give an update on a load, so this function is careful to detect that a payload is a send\r\n *   and turns all but the last update into a no-op. The send-complete function comes from the\r\n *   network sequential processing loop, and when called unblocks the network processing to allow the\r\n *   next request to go. Be very careful with this code, as bugs will cause applications to stop responding\r\n *   to remote requests.\r\n */\r\nfulcro.client.impl.application.send_payload = (function fulcro$client$impl$application$send_payload(network,reconciler,payload,send_complete){\r\nvar map__42329 = payload;\r\nvar map__42329__$1 = ((((!((map__42329 == null)))?(((((map__42329.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42329.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42329):map__42329);\r\nvar query = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42329__$1,new cljs.core.Keyword(\"fulcro.client.primitives\",\"query\",\"fulcro.client.primitives/query\",261276758));\r\nvar on_load = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42329__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-load\",\"fulcro.client.impl.data-fetch/on-load\",-1170993603));\r\nvar on_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42329__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"on-error\",\"fulcro.client.impl.data-fetch/on-error\",867419629));\r\nvar load_descriptors = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42329__$1,new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"load-descriptors\",\"fulcro.client.impl.data-fetch/load-descriptors\",1275690424));\r\nvar abort_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42329__$1,new cljs.core.Keyword(\"fulcro.client.network\",\"abort-id\",\"fulcro.client.network/abort-id\",-22430267));\r\nvar merge_data = (cljs.core.truth_(load_descriptors)?((function (map__42329,map__42329__$1,query,on_load,on_error,load_descriptors,abort_id){\r\nreturn (function (p1__42324_SHARP_){\r\nreturn (on_load.cljs$core$IFn$_invoke$arity$2 ? on_load.cljs$core$IFn$_invoke$arity$2(p1__42324_SHARP_,load_descriptors) : on_load.call(null,p1__42324_SHARP_,load_descriptors));\r\n});})(map__42329,map__42329__$1,query,on_load,on_error,load_descriptors,abort_id))\r\n:((function (map__42329,map__42329__$1,query,on_load,on_error,load_descriptors,abort_id){\r\nreturn (function (p1__42325_SHARP_,p2__42326_SHARP_){\r\nreturn (on_load.cljs$core$IFn$_invoke$arity$2 ? on_load.cljs$core$IFn$_invoke$arity$2(p1__42325_SHARP_,p2__42326_SHARP_) : on_load.call(null,p1__42325_SHARP_,p2__42326_SHARP_));\r\n});})(map__42329,map__42329__$1,query,on_load,on_error,load_descriptors,abort_id))\r\n);\r\nvar on_update = (cljs.core.truth_(load_descriptors)?cljs.core.identity:merge_data);\r\nvar on_error__$1 = (cljs.core.truth_(load_descriptors)?((function (map__42329,map__42329__$1,query,on_load,on_error,load_descriptors,abort_id,merge_data,on_update){\r\nreturn (function (p1__42327_SHARP_){\r\nreturn (on_error.cljs$core$IFn$_invoke$arity$2 ? on_error.cljs$core$IFn$_invoke$arity$2(p1__42327_SHARP_,load_descriptors) : on_error.call(null,p1__42327_SHARP_,load_descriptors));\r\n});})(map__42329,map__42329__$1,query,on_load,on_error,load_descriptors,abort_id,merge_data,on_update))\r\n:on_error);\r\nvar on_error__$2 = cljs.core.comp.cljs$core$IFn$_invoke$arity$2(send_complete,on_error__$1);\r\nvar on_done = cljs.core.comp.cljs$core$IFn$_invoke$arity$2(send_complete,merge_data);\r\nif(cljs.core.truth_(fulcro.client.impl.data_fetch.is_deferred_transaction_QMARK_(query))){\r\nvar G__42332 = cljs.core.PersistentArrayMap.EMPTY;\r\nreturn (on_done.cljs$core$IFn$_invoke$arity$1 ? on_done.cljs$core$IFn$_invoke$arity$1(G__42332) : on_done.call(null,G__42332));\r\n} else {\r\nreturn fulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2(network,new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),payload,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418),query,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),reconciler,new cljs.core.Keyword(null,\"on-done\",\"on-done\",-699252077),on_done,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),on_error__$2,new cljs.core.Keyword(null,\"on-load\",\"on-load\",1415151594),on_update,new cljs.core.Keyword(null,\"abort-id\",\"abort-id\",1559937819),abort_id], null));\r\n}\r\n});\r\nfulcro.client.impl.application.is_sequential_QMARK_ = (function fulcro$client$impl$application$is_sequential_QMARK_(network){\r\nif(((!((network == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === network.fulcro$client$network$NetworkBehavior$))))?true:(((!network.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(fulcro.client.network.NetworkBehavior,network):false)):cljs.core.native_satisfies_QMARK_(fulcro.client.network.NetworkBehavior,network))){\r\nreturn fulcro.client.network.serialize_requests_QMARK_(network);\r\n} else {\r\nreturn true;\r\n}\r\n});\r\n/**\r\n * Starts a async go loop that sends network requests on networking object's request queue.\r\n * Gives the appearance of a separate networking 'thread' using core async.\r\n */\r\nfulcro.client.impl.application.start_network_sequential_processing = (function fulcro$client$impl$application$start_network_sequential_processing(p__42370){\r\nvar map__42372 = p__42370;\r\nvar map__42372__$1 = ((((!((map__42372 == null)))?(((((map__42372.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42372.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42372):map__42372);\r\nvar app = map__42372__$1;\r\nvar networking = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42372__$1,new cljs.core.Keyword(null,\"networking\",\"networking\",586110628));\r\nvar reconciler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42372__$1,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966));\r\nvar send_queues = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42372__$1,new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330));\r\nvar response_channels = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42372__$1,new cljs.core.Keyword(null,\"response-channels\",\"response-channels\",-1871059128));\r\nvar seq__42379 = cljs.core.seq(cljs.core.keys(send_queues));\r\nvar chunk__42380 = null;\r\nvar count__42381 = (0);\r\nvar i__42382 = (0);\r\nwhile(true){\r\nif((i__42382 < count__42381)){\r\nvar remote = chunk__42380.cljs$core$IIndexed$_nth$arity$2(null,i__42382);\r\nvar queue_42513 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(send_queues,remote);\r\nvar network_42514 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(networking,remote);\r\nvar sequential_QMARK__42515 = fulcro.client.impl.application.is_sequential_QMARK_(network_42514);\r\nvar response_channel_42516 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(response_channels,remote);\r\nvar send_complete_42517 = (cljs.core.truth_(sequential_QMARK__42515)?((function (seq__42379,chunk__42380,count__42381,i__42382,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function (){\r\nvar c__31633__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run(((function (seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto__,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function (){\r\nvar f__31634__auto__ = (function (){var switch__30661__auto__ = ((function (seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto__,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function (state_42390){\r\nvar state_val_42391 = (state_42390[(1)]);\r\nif((state_val_42391 === (1))){\r\nvar state_42390__$1 = state_42390;\r\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_42390__$1,(2),response_channel_42516,new cljs.core.Keyword(null,\"complete\",\"complete\",-500388775));\r\n} else {\r\nif((state_val_42391 === (2))){\r\nvar inst_42388 = (state_42390[(2)]);\r\nvar state_42390__$1 = state_42390;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_42390__$1,inst_42388);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});})(seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto__,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n;\r\nreturn ((function (seq__42379,chunk__42380,count__42381,i__42382,switch__30661__auto__,c__31633__auto__,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function() {\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__ = null;\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0 = (function (){\r\nvar statearr_42400 = [null,null,null,null,null,null,null];\r\n(statearr_42400[(0)] = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__);\r\n\r\n(statearr_42400[(1)] = (1));\r\n\r\nreturn statearr_42400;\r\n});\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1 = (function (state_42390){\r\nwhile(true){\r\nvar ret_value__30663__auto__ = (function (){try{while(true){\r\nvar result__30664__auto__ = switch__30661__auto__(state_42390);\r\nif(cljs.core.keyword_identical_QMARK_(result__30664__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__30664__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e42402){if((e42402 instanceof Object)){\r\nvar ex__30665__auto__ = e42402;\r\nvar statearr_42403_42529 = state_42390;\r\n(statearr_42403_42529[(5)] = ex__30665__auto__);\r\n\r\n\r\ncljs.core.async.impl.ioc_helpers.process_exception(state_42390);\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nthrow e42402;\r\n\r\n}\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__30663__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__42531 = state_42390;\r\nstate_42390 = G__42531;\r\ncontinue;\r\n} else {\r\nreturn ret_value__30663__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__ = function(state_42390){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0.call(this);\r\ncase 1:\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1.call(this,state_42390);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__.cljs$core$IFn$_invoke$arity$0 = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0;\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__.cljs$core$IFn$_invoke$arity$1 = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1;\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__;\r\n})()\r\n;})(seq__42379,chunk__42380,count__42381,i__42382,switch__30661__auto__,c__31633__auto__,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n})();\r\nvar state__31635__auto__ = (function (){var statearr_42404 = (f__31634__auto__.cljs$core$IFn$_invoke$arity$0 ? f__31634__auto__.cljs$core$IFn$_invoke$arity$0() : f__31634__auto__.call(null));\r\n(statearr_42404[(6)] = c__31633__auto__);\r\n\r\nreturn statearr_42404;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__31635__auto__);\r\n});})(seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto__,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n);\r\n\r\nreturn c__31633__auto__;\r\n});})(seq__42379,chunk__42380,count__42381,i__42382,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n:cljs.core.identity);\r\nvar c__31633__auto___42541 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run(((function (seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto___42541,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,send_complete_42517,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function (){\r\nvar f__31634__auto__ = (function (){var switch__30661__auto__ = ((function (seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto___42541,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,send_complete_42517,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function (state_42422){\r\nvar state_val_42423 = (state_42422[(1)]);\r\nif((state_val_42423 === (1))){\r\nvar state_42422__$1 = state_42422;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_42422__$1,(2),queue_42513);\r\n} else {\r\nif((state_val_42423 === (2))){\r\nvar inst_42406 = (state_42422[(2)]);\r\nvar inst_42407 = inst_42406;\r\nvar state_42422__$1 = (function (){var statearr_42426 = state_42422;\r\n(statearr_42426[(7)] = inst_42407);\r\n\r\nreturn statearr_42426;\r\n})();\r\nvar statearr_42427_42549 = state_42422__$1;\r\n(statearr_42427_42549[(2)] = null);\r\n\r\n(statearr_42427_42549[(1)] = (3));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_42423 === (3))){\r\nvar inst_42407 = (state_42422[(7)]);\r\nvar inst_42409 = fulcro.client.impl.application.send_payload(network_42514,reconciler,inst_42407,send_complete_42517);\r\nvar state_42422__$1 = (function (){var statearr_42429 = state_42422;\r\n(statearr_42429[(8)] = inst_42409);\r\n\r\nreturn statearr_42429;\r\n})();\r\nif(cljs.core.truth_(sequential_QMARK__42515)){\r\nvar statearr_42430_42555 = state_42422__$1;\r\n(statearr_42430_42555[(1)] = (5));\r\n\r\n} else {\r\nvar statearr_42431_42556 = state_42422__$1;\r\n(statearr_42431_42556[(1)] = (6));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_42423 === (4))){\r\nvar inst_42420 = (state_42422[(2)]);\r\nvar state_42422__$1 = state_42422;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_42422__$1,inst_42420);\r\n} else {\r\nif((state_val_42423 === (5))){\r\nvar state_42422__$1 = state_42422;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_42422__$1,(8),response_channel_42516);\r\n} else {\r\nif((state_val_42423 === (6))){\r\nvar state_42422__$1 = state_42422;\r\nvar statearr_42432_42558 = state_42422__$1;\r\n(statearr_42432_42558[(2)] = null);\r\n\r\n(statearr_42432_42558[(1)] = (7));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_42423 === (7))){\r\nvar inst_42415 = (state_42422[(2)]);\r\nvar state_42422__$1 = (function (){var statearr_42433 = state_42422;\r\n(statearr_42433[(9)] = inst_42415);\r\n\r\nreturn statearr_42433;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_42422__$1,(9),queue_42513);\r\n} else {\r\nif((state_val_42423 === (8))){\r\nvar inst_42412 = (state_42422[(2)]);\r\nvar state_42422__$1 = state_42422;\r\nvar statearr_42434_42560 = state_42422__$1;\r\n(statearr_42434_42560[(2)] = inst_42412);\r\n\r\n(statearr_42434_42560[(1)] = (7));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_42423 === (9))){\r\nvar inst_42417 = (state_42422[(2)]);\r\nvar inst_42407 = inst_42417;\r\nvar state_42422__$1 = (function (){var statearr_42435 = state_42422;\r\n(statearr_42435[(7)] = inst_42407);\r\n\r\nreturn statearr_42435;\r\n})();\r\nvar statearr_42436_42562 = state_42422__$1;\r\n(statearr_42436_42562[(2)] = null);\r\n\r\n(statearr_42436_42562[(1)] = (3));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});})(seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto___42541,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,send_complete_42517,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n;\r\nreturn ((function (seq__42379,chunk__42380,count__42381,i__42382,switch__30661__auto__,c__31633__auto___42541,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,send_complete_42517,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function() {\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__ = null;\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0 = (function (){\r\nvar statearr_42437 = [null,null,null,null,null,null,null,null,null,null];\r\n(statearr_42437[(0)] = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__);\r\n\r\n(statearr_42437[(1)] = (1));\r\n\r\nreturn statearr_42437;\r\n});\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1 = (function (state_42422){\r\nwhile(true){\r\nvar ret_value__30663__auto__ = (function (){try{while(true){\r\nvar result__30664__auto__ = switch__30661__auto__(state_42422);\r\nif(cljs.core.keyword_identical_QMARK_(result__30664__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__30664__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e42439){if((e42439 instanceof Object)){\r\nvar ex__30665__auto__ = e42439;\r\nvar statearr_42442_42569 = state_42422;\r\n(statearr_42442_42569[(5)] = ex__30665__auto__);\r\n\r\n\r\ncljs.core.async.impl.ioc_helpers.process_exception(state_42422);\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nthrow e42439;\r\n\r\n}\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__30663__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__42570 = state_42422;\r\nstate_42422 = G__42570;\r\ncontinue;\r\n} else {\r\nreturn ret_value__30663__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__ = function(state_42422){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0.call(this);\r\ncase 1:\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1.call(this,state_42422);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__.cljs$core$IFn$_invoke$arity$0 = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0;\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__.cljs$core$IFn$_invoke$arity$1 = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1;\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__;\r\n})()\r\n;})(seq__42379,chunk__42380,count__42381,i__42382,switch__30661__auto__,c__31633__auto___42541,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,send_complete_42517,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n})();\r\nvar state__31635__auto__ = (function (){var statearr_42444 = (f__31634__auto__.cljs$core$IFn$_invoke$arity$0 ? f__31634__auto__.cljs$core$IFn$_invoke$arity$0() : f__31634__auto__.call(null));\r\n(statearr_42444[(6)] = c__31633__auto___42541);\r\n\r\nreturn statearr_42444;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__31635__auto__);\r\n});})(seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto___42541,queue_42513,network_42514,sequential_QMARK__42515,response_channel_42516,send_complete_42517,remote,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n);\r\n\r\n\r\n\r\nvar G__42572 = seq__42379;\r\nvar G__42573 = chunk__42380;\r\nvar G__42574 = count__42381;\r\nvar G__42575 = (i__42382 + (1));\r\nseq__42379 = G__42572;\r\nchunk__42380 = G__42573;\r\ncount__42381 = G__42574;\r\ni__42382 = G__42575;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto__ = cljs.core.seq(seq__42379);\r\nif(temp__5457__auto__){\r\nvar seq__42379__$1 = temp__5457__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__42379__$1)){\r\nvar c__4351__auto__ = cljs.core.chunk_first(seq__42379__$1);\r\nvar G__42580 = cljs.core.chunk_rest(seq__42379__$1);\r\nvar G__42581 = c__4351__auto__;\r\nvar G__42582 = cljs.core.count(c__4351__auto__);\r\nvar G__42583 = (0);\r\nseq__42379 = G__42580;\r\nchunk__42380 = G__42581;\r\ncount__42381 = G__42582;\r\ni__42382 = G__42583;\r\ncontinue;\r\n} else {\r\nvar remote = cljs.core.first(seq__42379__$1);\r\nvar queue_42584 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(send_queues,remote);\r\nvar network_42585 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(networking,remote);\r\nvar sequential_QMARK__42586 = fulcro.client.impl.application.is_sequential_QMARK_(network_42585);\r\nvar response_channel_42587 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(response_channels,remote);\r\nvar send_complete_42588 = (cljs.core.truth_(sequential_QMARK__42586)?((function (seq__42379,chunk__42380,count__42381,i__42382,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function (){\r\nvar c__31633__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run(((function (seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto__,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function (){\r\nvar f__31634__auto__ = (function (){var switch__30661__auto__ = ((function (seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto__,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function (state_42448){\r\nvar state_val_42449 = (state_42448[(1)]);\r\nif((state_val_42449 === (1))){\r\nvar state_42448__$1 = state_42448;\r\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_42448__$1,(2),response_channel_42587,new cljs.core.Keyword(null,\"complete\",\"complete\",-500388775));\r\n} else {\r\nif((state_val_42449 === (2))){\r\nvar inst_42446 = (state_42448[(2)]);\r\nvar state_42448__$1 = state_42448;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_42448__$1,inst_42446);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});})(seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto__,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n;\r\nreturn ((function (seq__42379,chunk__42380,count__42381,i__42382,switch__30661__auto__,c__31633__auto__,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function() {\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__ = null;\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0 = (function (){\r\nvar statearr_42453 = [null,null,null,null,null,null,null];\r\n(statearr_42453[(0)] = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__);\r\n\r\n(statearr_42453[(1)] = (1));\r\n\r\nreturn statearr_42453;\r\n});\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1 = (function (state_42448){\r\nwhile(true){\r\nvar ret_value__30663__auto__ = (function (){try{while(true){\r\nvar result__30664__auto__ = switch__30661__auto__(state_42448);\r\nif(cljs.core.keyword_identical_QMARK_(result__30664__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__30664__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e42457){if((e42457 instanceof Object)){\r\nvar ex__30665__auto__ = e42457;\r\nvar statearr_42459_42615 = state_42448;\r\n(statearr_42459_42615[(5)] = ex__30665__auto__);\r\n\r\n\r\ncljs.core.async.impl.ioc_helpers.process_exception(state_42448);\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nthrow e42457;\r\n\r\n}\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__30663__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__42621 = state_42448;\r\nstate_42448 = G__42621;\r\ncontinue;\r\n} else {\r\nreturn ret_value__30663__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__ = function(state_42448){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0.call(this);\r\ncase 1:\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1.call(this,state_42448);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__.cljs$core$IFn$_invoke$arity$0 = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0;\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__.cljs$core$IFn$_invoke$arity$1 = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1;\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__;\r\n})()\r\n;})(seq__42379,chunk__42380,count__42381,i__42382,switch__30661__auto__,c__31633__auto__,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n})();\r\nvar state__31635__auto__ = (function (){var statearr_42462 = (f__31634__auto__.cljs$core$IFn$_invoke$arity$0 ? f__31634__auto__.cljs$core$IFn$_invoke$arity$0() : f__31634__auto__.call(null));\r\n(statearr_42462[(6)] = c__31633__auto__);\r\n\r\nreturn statearr_42462;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__31635__auto__);\r\n});})(seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto__,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n);\r\n\r\nreturn c__31633__auto__;\r\n});})(seq__42379,chunk__42380,count__42381,i__42382,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n:cljs.core.identity);\r\nvar c__31633__auto___42630 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run(((function (seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto___42630,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,send_complete_42588,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function (){\r\nvar f__31634__auto__ = (function (){var switch__30661__auto__ = ((function (seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto___42630,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,send_complete_42588,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function (state_42480){\r\nvar state_val_42481 = (state_42480[(1)]);\r\nif((state_val_42481 === (1))){\r\nvar state_42480__$1 = state_42480;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_42480__$1,(2),queue_42584);\r\n} else {\r\nif((state_val_42481 === (2))){\r\nvar inst_42464 = (state_42480[(2)]);\r\nvar inst_42465 = inst_42464;\r\nvar state_42480__$1 = (function (){var statearr_42482 = state_42480;\r\n(statearr_42482[(7)] = inst_42465);\r\n\r\nreturn statearr_42482;\r\n})();\r\nvar statearr_42483_42648 = state_42480__$1;\r\n(statearr_42483_42648[(2)] = null);\r\n\r\n(statearr_42483_42648[(1)] = (3));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_42481 === (3))){\r\nvar inst_42465 = (state_42480[(7)]);\r\nvar inst_42467 = fulcro.client.impl.application.send_payload(network_42585,reconciler,inst_42465,send_complete_42588);\r\nvar state_42480__$1 = (function (){var statearr_42484 = state_42480;\r\n(statearr_42484[(8)] = inst_42467);\r\n\r\nreturn statearr_42484;\r\n})();\r\nif(cljs.core.truth_(sequential_QMARK__42586)){\r\nvar statearr_42485_42664 = state_42480__$1;\r\n(statearr_42485_42664[(1)] = (5));\r\n\r\n} else {\r\nvar statearr_42486_42666 = state_42480__$1;\r\n(statearr_42486_42666[(1)] = (6));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_42481 === (4))){\r\nvar inst_42478 = (state_42480[(2)]);\r\nvar state_42480__$1 = state_42480;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_42480__$1,inst_42478);\r\n} else {\r\nif((state_val_42481 === (5))){\r\nvar state_42480__$1 = state_42480;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_42480__$1,(8),response_channel_42587);\r\n} else {\r\nif((state_val_42481 === (6))){\r\nvar state_42480__$1 = state_42480;\r\nvar statearr_42490_42675 = state_42480__$1;\r\n(statearr_42490_42675[(2)] = null);\r\n\r\n(statearr_42490_42675[(1)] = (7));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_42481 === (7))){\r\nvar inst_42473 = (state_42480[(2)]);\r\nvar state_42480__$1 = (function (){var statearr_42491 = state_42480;\r\n(statearr_42491[(9)] = inst_42473);\r\n\r\nreturn statearr_42491;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_42480__$1,(9),queue_42584);\r\n} else {\r\nif((state_val_42481 === (8))){\r\nvar inst_42470 = (state_42480[(2)]);\r\nvar state_42480__$1 = state_42480;\r\nvar statearr_42492_42676 = state_42480__$1;\r\n(statearr_42492_42676[(2)] = inst_42470);\r\n\r\n(statearr_42492_42676[(1)] = (7));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_42481 === (9))){\r\nvar inst_42475 = (state_42480[(2)]);\r\nvar inst_42465 = inst_42475;\r\nvar state_42480__$1 = (function (){var statearr_42493 = state_42480;\r\n(statearr_42493[(7)] = inst_42465);\r\n\r\nreturn statearr_42493;\r\n})();\r\nvar statearr_42494_42680 = state_42480__$1;\r\n(statearr_42494_42680[(2)] = null);\r\n\r\n(statearr_42494_42680[(1)] = (3));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});})(seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto___42630,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,send_complete_42588,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n;\r\nreturn ((function (seq__42379,chunk__42380,count__42381,i__42382,switch__30661__auto__,c__31633__auto___42630,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,send_complete_42588,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels){\r\nreturn (function() {\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__ = null;\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0 = (function (){\r\nvar statearr_42499 = [null,null,null,null,null,null,null,null,null,null];\r\n(statearr_42499[(0)] = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__);\r\n\r\n(statearr_42499[(1)] = (1));\r\n\r\nreturn statearr_42499;\r\n});\r\nvar fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1 = (function (state_42480){\r\nwhile(true){\r\nvar ret_value__30663__auto__ = (function (){try{while(true){\r\nvar result__30664__auto__ = switch__30661__auto__(state_42480);\r\nif(cljs.core.keyword_identical_QMARK_(result__30664__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__30664__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e42500){if((e42500 instanceof Object)){\r\nvar ex__30665__auto__ = e42500;\r\nvar statearr_42501_42688 = state_42480;\r\n(statearr_42501_42688[(5)] = ex__30665__auto__);\r\n\r\n\r\ncljs.core.async.impl.ioc_helpers.process_exception(state_42480);\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nthrow e42500;\r\n\r\n}\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__30663__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__42693 = state_42480;\r\nstate_42480 = G__42693;\r\ncontinue;\r\n} else {\r\nreturn ret_value__30663__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__ = function(state_42480){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0.call(this);\r\ncase 1:\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1.call(this,state_42480);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__.cljs$core$IFn$_invoke$arity$0 = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____0;\r\nfulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__.cljs$core$IFn$_invoke$arity$1 = fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto____1;\r\nreturn fulcro$client$impl$application$start_network_sequential_processing_$_state_machine__30662__auto__;\r\n})()\r\n;})(seq__42379,chunk__42380,count__42381,i__42382,switch__30661__auto__,c__31633__auto___42630,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,send_complete_42588,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n})();\r\nvar state__31635__auto__ = (function (){var statearr_42502 = (f__31634__auto__.cljs$core$IFn$_invoke$arity$0 ? f__31634__auto__.cljs$core$IFn$_invoke$arity$0() : f__31634__auto__.call(null));\r\n(statearr_42502[(6)] = c__31633__auto___42630);\r\n\r\nreturn statearr_42502;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__31635__auto__);\r\n});})(seq__42379,chunk__42380,count__42381,i__42382,c__31633__auto___42630,queue_42584,network_42585,sequential_QMARK__42586,response_channel_42587,send_complete_42588,remote,seq__42379__$1,temp__5457__auto__,map__42372,map__42372__$1,app,networking,reconciler,send_queues,response_channels))\r\n);\r\n\r\n\r\n\r\nvar G__42706 = cljs.core.next(seq__42379__$1);\r\nvar G__42707 = null;\r\nvar G__42708 = (0);\r\nvar G__42709 = (0);\r\nseq__42379 = G__42706;\r\nchunk__42380 = G__42707;\r\ncount__42381 = G__42708;\r\ni__42382 = G__42709;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * The reconciler's send method calls FulcroApplication/server-send, which itself requires a reconciler with a\r\n *   send method already defined. This creates a catch-22 / circular dependency on the reconciler and :send field within\r\n *   the reconciler.\r\n * \r\n *   To resolve the issue, we def an atom pointing to the reconciler that the send method will deref each time it is\r\n *   called. This allows us to define the reconciler with a send method that, at the time of initialization, has an app\r\n *   that points to a nil reconciler. By the end of this function, the app's reconciler reference has been properly set.\r\n */\r\nfulcro.client.impl.application.generate_reconciler = (function fulcro$client$impl$application$generate_reconciler(p__42723,initial_state,parser,p__42724){\r\nvar map__42727 = p__42723;\r\nvar map__42727__$1 = ((((!((map__42727 == null)))?(((((map__42727.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42727.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42727):map__42727);\r\nvar app = map__42727__$1;\r\nvar send_queues = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42727__$1,new cljs.core.Keyword(null,\"send-queues\",\"send-queues\",-212336330));\r\nvar mutation_merge = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42727__$1,new cljs.core.Keyword(null,\"mutation-merge\",\"mutation-merge\",-2131743322));\r\nvar map__42728 = p__42724;\r\nvar map__42728__$1 = ((((!((map__42728 == null)))?(((((map__42728.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42728.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42728):map__42728);\r\nvar reconciler_options = map__42728__$1;\r\nvar migrate = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42728__$1,new cljs.core.Keyword(null,\"migrate\",\"migrate\",-207110743));\r\nvar rec_atom = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\r\nvar remotes = cljs.core.keys(send_queues);\r\nvar tempid_migrate = ((function (rec_atom,remotes,map__42727,map__42727__$1,app,send_queues,mutation_merge,map__42728,map__42728__$1,reconciler_options,migrate){\r\nreturn (function (pure,_,tempids){\r\nvar seq__42747_42768 = cljs.core.seq(cljs.core.vals(send_queues));\r\nvar chunk__42748_42769 = null;\r\nvar count__42749_42770 = (0);\r\nvar i__42750_42771 = (0);\r\nwhile(true){\r\nif((i__42750_42771 < count__42749_42770)){\r\nvar queue_42775 = chunk__42748_42769.cljs$core$IIndexed$_nth$arity$2(null,i__42750_42771);\r\nfulcro.client.primitives.rewrite_tempids_in_request_queue(queue_42775,tempids);\r\n\r\n\r\nvar G__42780 = seq__42747_42768;\r\nvar G__42781 = chunk__42748_42769;\r\nvar G__42782 = count__42749_42770;\r\nvar G__42783 = (i__42750_42771 + (1));\r\nseq__42747_42768 = G__42780;\r\nchunk__42748_42769 = G__42781;\r\ncount__42749_42770 = G__42782;\r\ni__42750_42771 = G__42783;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto___42786 = cljs.core.seq(seq__42747_42768);\r\nif(temp__5457__auto___42786){\r\nvar seq__42747_42787__$1 = temp__5457__auto___42786;\r\nif(cljs.core.chunked_seq_QMARK_(seq__42747_42787__$1)){\r\nvar c__4351__auto___42788 = cljs.core.chunk_first(seq__42747_42787__$1);\r\nvar G__42789 = cljs.core.chunk_rest(seq__42747_42787__$1);\r\nvar G__42790 = c__4351__auto___42788;\r\nvar G__42791 = cljs.core.count(c__4351__auto___42788);\r\nvar G__42792 = (0);\r\nseq__42747_42768 = G__42789;\r\nchunk__42748_42769 = G__42790;\r\ncount__42749_42770 = G__42791;\r\ni__42750_42771 = G__42792;\r\ncontinue;\r\n} else {\r\nvar queue_42793 = cljs.core.first(seq__42747_42787__$1);\r\nfulcro.client.primitives.rewrite_tempids_in_request_queue(queue_42793,tempids);\r\n\r\n\r\nvar G__42794 = cljs.core.next(seq__42747_42787__$1);\r\nvar G__42795 = null;\r\nvar G__42796 = (0);\r\nvar G__42797 = (0);\r\nseq__42747_42768 = G__42794;\r\nchunk__42748_42769 = G__42795;\r\ncount__42749_42770 = G__42796;\r\ni__42750_42771 = G__42797;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nvar state_migrate = (function (){var or__3949__auto__ = migrate;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn fulcro.client.primitives.resolve_tempids;\r\n}\r\n})();\r\nreturn (state_migrate.cljs$core$IFn$_invoke$arity$2 ? state_migrate.cljs$core$IFn$_invoke$arity$2(pure,tempids) : state_migrate.call(null,pure,tempids));\r\n});})(rec_atom,remotes,map__42727,map__42727__$1,app,send_queues,mutation_merge,map__42728,map__42728__$1,reconciler_options,migrate))\r\n;\r\nvar initial_state_with_locale = (function (){var set_default_locale = ((function (rec_atom,remotes,tempid_migrate,map__42727,map__42727__$1,app,send_queues,mutation_merge,map__42728,map__42728__$1,reconciler_options,migrate){\r\nreturn (function (s){\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(s,new cljs.core.Keyword(\"ui\",\"locale\",\"ui/locale\",-2115717461),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,new cljs.core.Keyword(null,\"en\",\"en\",88457073)));\r\n});})(rec_atom,remotes,tempid_migrate,map__42727,map__42727__$1,app,send_queues,mutation_merge,map__42728,map__42728__$1,reconciler_options,migrate))\r\n;\r\nvar is_atom_QMARK_ = fulcro.util.atom_QMARK_(initial_state);\r\nif(cljs.core.truth_(is_atom_QMARK_)){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(initial_state,set_default_locale);\r\n\r\nreturn initial_state;\r\n} else {\r\nreturn set_default_locale(initial_state);\r\n}\r\n})();\r\nvar config = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY,reconciler_options,new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"migrate\",\"migrate\",-207110743),tempid_migrate,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),initial_state_with_locale,new cljs.core.Keyword(null,\"send\",\"send\",-652151114),((function (rec_atom,remotes,tempid_migrate,initial_state_with_locale,map__42727,map__42727__$1,app,send_queues,mutation_merge,map__42728,map__42728__$1,reconciler_options,migrate){\r\nreturn (function (sends_keyed_by_remote,result_merge_callback){\r\nreturn fulcro.client.impl.application.server_send(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(app,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),cljs.core.deref(rec_atom)),sends_keyed_by_remote,result_merge_callback);\r\n});})(rec_atom,remotes,tempid_migrate,initial_state_with_locale,map__42727,map__42727__$1,app,send_queues,mutation_merge,map__42728,map__42728__$1,reconciler_options,migrate))\r\n,new cljs.core.Keyword(null,\"normalize\",\"normalize\",-1904390051),true,new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312),remotes,new cljs.core.Keyword(null,\"merge-ident\",\"merge-ident\",1040841862),((function (rec_atom,remotes,tempid_migrate,initial_state_with_locale,map__42727,map__42727__$1,app,send_queues,mutation_merge,map__42728,map__42728__$1,reconciler_options,migrate){\r\nreturn (function (reconciler,app_state,ident,props){\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(app_state,ident,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.sweep_one,cljs.core.merge),props);\r\n});})(rec_atom,remotes,tempid_migrate,initial_state_with_locale,map__42727,map__42727__$1,app,send_queues,mutation_merge,map__42728,map__42728__$1,reconciler_options,migrate))\r\n,new cljs.core.Keyword(null,\"merge-tree\",\"merge-tree\",-127861161),((function (rec_atom,remotes,tempid_migrate,initial_state_with_locale,map__42727,map__42727__$1,app,send_queues,mutation_merge,map__42728,map__42728__$1,reconciler_options,migrate){\r\nreturn (function (target,source){\r\nreturn fulcro.client.primitives.merge_handler(mutation_merge,target,source);\r\n});})(rec_atom,remotes,tempid_migrate,initial_state_with_locale,map__42727,map__42727__$1,app,send_queues,mutation_merge,map__42728,map__42728__$1,reconciler_options,migrate))\r\n,new cljs.core.Keyword(null,\"parser\",\"parser\",-1543495310),parser], null)], 0));\r\nvar rec = fulcro.client.primitives.reconciler(config);\r\ncljs.core.reset_BANG_(rec_atom,rec);\r\n\r\nreturn rec;\r\n});\r\nfulcro.client.impl.application.initialize_global_error_callbacks = (function fulcro$client$impl$application$initialize_global_error_callbacks(app){\r\nvar seq__42814 = cljs.core.seq(cljs.core.keys(new cljs.core.Keyword(null,\"networking\",\"networking\",586110628).cljs$core$IFn$_invoke$arity$1(app)));\r\nvar chunk__42815 = null;\r\nvar count__42816 = (0);\r\nvar i__42817 = (0);\r\nwhile(true){\r\nif((i__42817 < count__42816)){\r\nvar remote = chunk__42815.cljs$core$IIndexed$_nth$arity$2(null,i__42817);\r\nvar cb_atom_42830 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),remote,new cljs.core.Keyword(null,\"global-error-callback\",\"global-error-callback\",901427631)], null));\r\nif(cljs.core.truth_(fulcro.util.atom_QMARK_(cb_atom_42830))){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cb_atom_42830,((function (seq__42814,chunk__42815,count__42816,i__42817,cb_atom_42830,remote){\r\nreturn (function (p1__42813_SHARP_){\r\nif(cljs.core.fn_QMARK_(p1__42813_SHARP_)){\r\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$2(p1__42813_SHARP_,fulcro.client.primitives.app_state(new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966).cljs$core$IFn$_invoke$arity$1(app)));\r\n} else {\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Networking error callback must be a function.\",cljs.core.PersistentArrayMap.EMPTY);\r\n}\r\n});})(seq__42814,chunk__42815,count__42816,i__42817,cb_atom_42830,remote))\r\n);\r\n} else {\r\n}\r\n\r\n\r\nvar G__42835 = seq__42814;\r\nvar G__42836 = chunk__42815;\r\nvar G__42837 = count__42816;\r\nvar G__42838 = (i__42817 + (1));\r\nseq__42814 = G__42835;\r\nchunk__42815 = G__42836;\r\ncount__42816 = G__42837;\r\ni__42817 = G__42838;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto__ = cljs.core.seq(seq__42814);\r\nif(temp__5457__auto__){\r\nvar seq__42814__$1 = temp__5457__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__42814__$1)){\r\nvar c__4351__auto__ = cljs.core.chunk_first(seq__42814__$1);\r\nvar G__42839 = cljs.core.chunk_rest(seq__42814__$1);\r\nvar G__42840 = c__4351__auto__;\r\nvar G__42841 = cljs.core.count(c__4351__auto__);\r\nvar G__42842 = (0);\r\nseq__42814 = G__42839;\r\nchunk__42815 = G__42840;\r\ncount__42816 = G__42841;\r\ni__42817 = G__42842;\r\ncontinue;\r\n} else {\r\nvar remote = cljs.core.first(seq__42814__$1);\r\nvar cb_atom_42843 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"networking\",\"networking\",586110628),remote,new cljs.core.Keyword(null,\"global-error-callback\",\"global-error-callback\",901427631)], null));\r\nif(cljs.core.truth_(fulcro.util.atom_QMARK_(cb_atom_42843))){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cb_atom_42843,((function (seq__42814,chunk__42815,count__42816,i__42817,cb_atom_42843,remote,seq__42814__$1,temp__5457__auto__){\r\nreturn (function (p1__42813_SHARP_){\r\nif(cljs.core.fn_QMARK_(p1__42813_SHARP_)){\r\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$2(p1__42813_SHARP_,fulcro.client.primitives.app_state(new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966).cljs$core$IFn$_invoke$arity$1(app)));\r\n} else {\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Networking error callback must be a function.\",cljs.core.PersistentArrayMap.EMPTY);\r\n}\r\n});})(seq__42814,chunk__42815,count__42816,i__42817,cb_atom_42843,remote,seq__42814__$1,temp__5457__auto__))\r\n);\r\n} else {\r\n}\r\n\r\n\r\nvar G__42851 = cljs.core.next(seq__42814__$1);\r\nvar G__42852 = null;\r\nvar G__42853 = (0);\r\nvar G__42854 = (0);\r\nseq__42814 = G__42851;\r\nchunk__42815 = G__42852;\r\ncount__42816 = G__42853;\r\ni__42817 = G__42854;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Read function for the built-in parser.\r\n * \r\n *   *** NOTE: This function only runs when it is called without a target -- it is not triggered for remote reads. To\r\n *   trigger a remote read, use the `fulcro/data-fetch` namespace. ***\r\n * \r\n *   If a user-read is supplied, *it will be allowed* to trigger remote reads. This is not recommended, as you\r\n *   will probably have to augment the networking layer to get it to do what you mean. Use `load` instead. You have\r\n *   been warned. Triggering remote reads is allowed, but discouraged and unsupported.\r\n * \r\n *   Returns the current locale when reading the :ui/locale keyword. Otherwise pulls data out of the app-state.\r\n *   \r\n */\r\nfulcro.client.impl.application.read_local = (function fulcro$client$impl$application$read_local(user_read,p__42857,dkey,params){\r\nvar map__42859 = p__42857;\r\nvar map__42859__$1 = ((((!((map__42859 == null)))?(((((map__42859.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42859.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42859):map__42859);\r\nvar env = map__42859__$1;\r\nvar query = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42859__$1,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\r\nvar target = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42859__$1,new cljs.core.Keyword(null,\"target\",\"target\",253001721));\r\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42859__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\r\nvar ast = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42859__$1,new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068));\r\nvar temp__5455__auto__ = (user_read.cljs$core$IFn$_invoke$arity$3 ? user_read.cljs$core$IFn$_invoke$arity$3(env,dkey,params) : user_read.call(null,env,dkey,params));\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar custom_result = temp__5455__auto__;\r\nreturn custom_result;\r\n} else {\r\nif(cljs.core.not(target)){\r\nvar top_level_prop = (query == null);\r\nvar key = (function (){var or__3949__auto__ = new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(ast);\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn dkey;\r\n}\r\n})();\r\nvar by_ident_QMARK_ = fulcro.util.ident_QMARK_(key);\r\nvar union_QMARK_ = cljs.core.map_QMARK_(query);\r\nvar data = ((by_ident_QMARK_)?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),key):cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),key));\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),((union_QMARK_)?cljs.core.get.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.db__GT_tree.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([key,query])], null),cljs.core.deref(state),cljs.core.deref(state)),key):((top_level_prop)?data:fulcro.client.primitives.db__GT_tree.cljs$core$IFn$_invoke$arity$3(query,data,cljs.core.deref(state))\r\n))], null);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});\r\n/**\r\n * This is the entry point for writes. In general this is simply a call to the multi-method\r\n *   defined by Fulcro (mutate); however, Fulcro supports the concept of a global `post-mutate`\r\n *   function that will be called anytime the general mutate has an action that is desired. This\r\n *   can be useful, for example, in cases where you have some post-processing that needs\r\n *   to happen for a given (sub)set of mutations (that perhaps you did not define).\r\n */\r\nfulcro.client.impl.application.write_entry_point = (function fulcro$client$impl$application$write_entry_point(env,k,params){\r\nvar rv = (function (){try{return (fulcro.client.mutations.mutate.cljs$core$IFn$_invoke$arity$3 ? fulcro.client.mutations.mutate.cljs$core$IFn$_invoke$arity$3(env,k,params) : fulcro.client.mutations.mutate.call(null,env,k,params));\r\n}catch (e42891){var e = e42891;\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),350], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Mutation \",k,\" failed with exception\",e], 0));\r\n}catch (e42892){if((e42892 instanceof Error)){\r\nvar e__31527__auto___42909 = e42892;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),350], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto___42909], 0));\r\n} else {\r\nthrow e42892;\r\n\r\n}\r\n}\r\nreturn null;\r\n}})();\r\nvar action = new cljs.core.Keyword(null,\"action\",\"action\",-811238024).cljs$core$IFn$_invoke$arity$1(rv);\r\nif(cljs.core.truth_(action)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(rv,new cljs.core.Keyword(null,\"action\",\"action\",-811238024),((function (rv,action){\r\nreturn (function (){\r\ntry{var action_result = (action.cljs$core$IFn$_invoke$arity$3 ? action.cljs$core$IFn$_invoke$arity$3(env,k,params) : action.call(null,env,k,params));\r\ntry{(fulcro.client.mutations.post_mutate.cljs$core$IFn$_invoke$arity$3 ? fulcro.client.mutations.post_mutate.cljs$core$IFn$_invoke$arity$3(env,k,params) : fulcro.client.mutations.post_mutate.call(null,env,k,params));\r\n}catch (e42896){var e_42914 = e42896;\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),359], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Post mutate failed on dispatch to \",k], 0));\r\n}catch (e42897){if((e42897 instanceof Error)){\r\nvar e__31527__auto___42916 = e42897;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),359], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto___42916], 0));\r\n} else {\r\nthrow e42897;\r\n\r\n}\r\n}}\r\nreturn action_result;\r\n}catch (e42893){var e = e42893;\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),362], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Mutation \",k,\" failed with exception\"], 0));\r\n}catch (e42895){if((e42895 instanceof Error)){\r\nvar e__31527__auto___42920 = e42895;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.impl.application\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),362], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31527__auto___42920], 0));\r\n} else {\r\nthrow e42895;\r\n\r\n}\r\n}\r\nif(cljs.core.truth_(goog.DEBUG)){\r\nconsole.error(e);\r\n} else {\r\n}\r\n\r\nthrow e;\r\n}});})(rv,action))\r\n);\r\n} else {\r\nreturn rv;\r\n}\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","fulcro/client/impl/application.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",35],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$clojure.stacktrace","~$cljs.stacktrace","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$go","~$cljs.core.async.macros"],"~:excludes",["~#set",[]],"~:name","~$fulcro.client.impl.application","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","^@","^A","~$log","~$fulcro.logging","~$fulcro.client.util","^Q","~$p","~$fulcro.client.impl.protocols","~$prim","~$fulcro.client.primitives","^P","^P","~$async","^=","~$cljs.core","^V","~$fulcro.client.impl.data-fetch","^W","~$goog","^X","~$fulcro.client.mutations","^Y","^T","^T","^=","^=","~$fulcro.util","^Z","~$hist","~$fulcro.history","^N","^N","~$m","^Y","~$util","^Q","~$fulcro.client.network","^12","~$net","^12","~$s","^A","~$futil","^Z","^A","^A","^10","^10","^R","^R","~$f","^W"],"~:seen",["^F",["~:require","~:require-macros"]],"~:uses",null,"^17",["^ ","^@","^A","^D","^D","^O","^P","^S","^T","^P","^P","^U","^=","^V","^V","^Y","^Y","^T","^T","^=","^=","~$m","^Y","~$s","^A","^A","^A"],"~:form",["~#list",["~$ns","^H",["^1:",["^16",["^P","~:as","^O"],["^T","^1<","^S"],["^Y","^1<","~$m"],["^10","^1<","^["],["^N","^1<","^M"],["^W","^1<","~$f"],["^Z","^1<","^14"],["^Q","^1<","^11"],["^@","^1<","~$s"],["^=","^1<","^U"],["^12","^1<","^13"],["^R","^1<","~$p"]]],["^1:",["^17",["^D","~:refer",["^C"]]]]]],"~:flags",["^ ","^16",["^F",[]],"^17",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^X","^V","^P","^T","^Y","^10","^N","^W","^Z","^Q","^A","^=","^12","^R"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","fulcro/client/impl/application.cljc"],"~:compiled-at",1537360783860,"~:resource-name","fulcro/client/impl/application.cljc","~:warnings",[],"~:source","(ns fulcro.client.impl.application\n  (:require [fulcro.logging :as log]\n            [fulcro.client.primitives :as prim]\n            [fulcro.client.mutations :as m]\n            [fulcro.history :as hist]\n            [clojure.set :as set]\n            [fulcro.client.impl.data-fetch :as f]\n            [fulcro.util :as futil]\n            [fulcro.client.util :as util]\n    #?(:clj\n            [clojure.future :refer :all])\n            [clojure.spec.alpha :as s]\n    #?(:cljs [cljs.core.async :as async]\n       :clj\n            [clojure.core.async :as async :refer [go]])\n            [fulcro.client.network :as net]\n            [fulcro.client.impl.protocols :as p])\n  #?(:cljs (:require-macros\n             [cljs.core.async.macros :refer [go]])))\n\n(defn fallback-handler\n  \"This internal function is responsible for generating and returning a function that can accomplish calling the fallbacks that\n  appear in an incoming transaction, which is in turn used by the error-handling logic of the plumbing.\"\n  [{:keys [reconciler]} query]\n  (fn [error]\n    (swap! (prim/app-state reconciler) assoc :fulcro/server-error error)\n    (if-let [q (prim/fallback-tx query error)]\n      (do (log/warn \"Transaction failed. Running fallback.\" q)\n          (prim/transact! reconciler q))\n      (log/warn \"Fallback triggered, but no fallbacks were defined.\"))))\n\n;; this is here so we can do testing (can mock core async stuff out of the way)\n(defn- enqueue\n  \"Enqueue a send to the network queue. This is a standalone function because we cannot mock core async functions.\"\n  [q v]\n  (go (async/>! q v)))\n\n(s/fdef enqueue\n  :args (s/cat :queue any? :payload ::f/payload))\n\n(defn real-send\n  \"Do a properly-plumbed network send. This function recursively strips ui attributes from the tx and pushes the tx over\n  the network. It installs the given on-load and on-error handlers to deal with the network response. DEPRECATED: If\n  you're doing something really low-level with networking, use send-with-history-tracking.\"\n  ([net {:keys [reconciler tx on-done on-error on-load abort-id]}]\n    ; server-side rendering doesn't do networking. Don't care.\n    #?(:cljs\n       (let [progress-tx #(m/progressive-update-transaction tx %)\n             tx          (prim/strip-ui tx)]\n         (cond\n           (implements? net/ProgressiveTransfer net) (net/updating-send net tx on-done on-error on-load)\n           (implements? net/FulcroNetwork net) (net/send net tx on-done on-error)\n           (implements? net/FulcroRemoteI net)\n           (let [on-done  (fn [{:keys [body transaction]}] (on-done body transaction))\n                 on-error (fn [{:keys [body]}] (on-error body))\n                 on-load  (fn [progress] (when reconciler (prim/transact! reconciler (progress-tx progress))))]\n             (net/transmit net {::net/edn              tx\n                                ::net/abort-id         abort-id\n                                ::net/ok-handler       on-done\n                                ::net/error-handler    on-error\n                                ::net/progress-handler on-load}))))))\n  ([net tx on-done on-error on-load]\n   (real-send net {:tx tx :on-done on-done :on-error on-error :on-load on-load})))\n\n(defn send-with-history-tracking\n  \"Does a real send but includes history activity tracking to prevent the gc of history that is related to active\n  network requests. If you're doing something really low level in the networking, you want this over real-send.\"\n  ([net {:keys [reconciler payload tx on-done on-error on-load]}]\n   (let [{:keys [::hist/history-atom ::hist/tx-time ::prim/remote ::net/abort-id]} payload\n         with-history-recording (fn [handler]\n                                  (fn [resp items-or-tx]\n                                    (when (and history-atom remote tx-time)\n                                      (swap! history-atom hist/remote-activity-finished remote tx-time))\n                                    (handler resp items-or-tx)))\n         on-done                (with-history-recording on-done)\n         on-error               (with-history-recording on-error)]\n     (if (and history-atom tx-time remote)\n       (swap! history-atom hist/remote-activity-started remote tx-time)\n       (log/warn \"Payload had no history details.\"))\n     (real-send net {:reconciler reconciler :tx tx :on-done on-done :on-error on-error :on-load on-load :abort-id abort-id})))\n  ([payload net tx on-done on-error on-load]\n   (send-with-history-tracking net {:payload payload :tx tx :on-done on-done :on-error on-error :on-load on-load})))\n\n(defn split-mutations\n  \"Split a tx that contains mutations.\n\n   Examples:\n   [(f) (g)] => [[(f) (g)]]\n   [(f) (g) (f) (k)] => [[(f) (g)] [(f) (k)]]\n   [(f) (g) (f) (k) (g)] => [[(f) (g)] [(f) (k) (g)]]\n\n   This function splits any mutation that uses the same dispatch symbol more than once (since returns from server go\n   into a map, and that is the only way to get return values from both), and also when the mutations do not share abort\n   IDs (so that mutations do not get grouped into a transaction that could cause them to get cancelled incorrectly).\n\n   Returns a sequence that contains one or more transactions.\"\n  [tx]\n  (if-not (and (vector? tx) (every? (fn [t] (or (futil/mutation-join? t) (and (list? t) (symbol? (first t))))) tx))\n    (do\n      (log/error \"INTERNAL ERROR: split-mutations was asked to split a tx that contained things other than mutations.\" tx)\n      [tx])\n    (if (empty? tx)\n      []\n      (let [dispatch-symbols  (fn [tx]\n                                (into #{}\n                                  (comp (map :key) (filter symbol?))\n                                  (some-> tx prim/query->ast :children)))\n            compatible-abort? (fn [tx1 tx2]\n                                (let [a1 (m/abort-ids tx1)\n                                      a2 (m/abort-ids tx2)]\n                                  (or\n                                    (and (= 1 (count a1)) (= a1 a2))\n                                    (and (empty? a1) (empty? a2)))))\n            can-be-included?  (fn [tx expr]\n                                (or\n                                  (empty? tx)\n                                  (and\n                                    (compatible-abort? tx [expr])\n                                    (empty? (set/intersection (dispatch-symbols tx) (dispatch-symbols [expr]))))))\n            {:keys [transactions current]} (reduce\n                                             (fn [{:keys [current] :as acc} expr]\n                                               (if (can-be-included? current expr)\n                                                 (update acc :current conj expr)\n                                                 (-> acc\n                                                   (update :transactions conj current)\n                                                   (assoc :current [expr]))))\n                                             {:transactions [] :current []}\n                                             tx)]\n        (if (empty? current)\n          transactions\n          (conj transactions current))))))\n\n(defn enqueue-mutations\n  \"Splits out the (remote) mutations and fallbacks in a transaction, creates an error handler that can\n   trigger fallbacks, and enqueues the remote mutations on the network queue. If duplicate mutation names\n   appear, then they will be separated into separate network requests.\n\n   NOTE: If the mutation in the tx has duplicates, then the same fallback will be used for the\n   resulting split tx. See `split-mutations` (which is used by this function to split dupes out of txes).\"\n  [{:keys [reconciler send-queues] :as app} remote-tx-map cb]\n  ; NOTE: for history navigation we need to track the time at which the mutation was submitted. If we roll back, we want the db-before of that tx-time.\n  (let [history (prim/get-history reconciler)]\n    (doseq [remote (keys remote-tx-map)]\n      (let [queue                    (get send-queues remote)\n            full-remote-transaction  (get remote-tx-map remote)\n            refresh-set              (or (some-> full-remote-transaction meta ::prim/refresh vec) [])\n            tx-time                  (some-> full-remote-transaction meta ::hist/tx-time)\n            ; IMPORTANT: fallbacks claim to be on every remote (otherwise we have to make much more complicated logic about\n            ; the tx submission in transact and parsing). So, you will get a fallback handler for every **defined** remote.\n            ; The remove-loads-and-fallbacks will return an empty list if all there are is fallbacks, keeping us from submitting\n            ; a tx that contains only fallbacks.\n            fallback                 (fallback-handler app full-remote-transaction)\n            desired-remote-mutations (prim/remove-loads-and-fallbacks full-remote-transaction)\n            tx-list                  (split-mutations desired-remote-mutations)\n            has-mutations?           (fn [tx] (> (count tx) 0))\n            payload                  (fn [tx]\n                                       (let [abort-id (some-> tx m/abort-ids first)]\n                                         {::prim/query        tx\n                                          ::hist/tx-time      tx-time\n                                          ::hist/history-atom history\n                                          ::prim/remote       remote\n                                          ::net/abort-id      abort-id\n                                          ::f/on-load         (fn [result mtx]\n                                                                ; middleware can modify tx, so we have to take as a param\n                                                                (cb result (or mtx tx) remote))\n                                          ::f/on-error        (fn [result] (fallback result))}))]\n        (doseq [tx tx-list]\n          (when (has-mutations? tx)\n            (enqueue queue (payload tx))))))))\n\n(defn enqueue-reads\n  \"Finds any loads marked `parallel` and triggers real network requests immediately. Remaining loads\n  are pulled into a single fetch payload (combined into one query) and enqueued behind any prior mutations/reads that\n  were already requested in a prior UI/event cycle. Thus non-parallel reads are processed in clusters grouped due to UI\n  events (a single event might trigger many reads which will all go to the server as a single combined request).\n  Further UI events that trigger remote interaction will end up waiting until prior network request(s) are complete.\n\n  This ensures that default reasoning is simple and sequential in the face of optimistic UI updates (real network\n  traffic characteristics could cause out of order processing, and you would not want\n  a 'create list' to be processed on the server *after* an 'add an item to the list'). \"\n  [{:keys [send-queues reconciler networking]}]\n  (doseq [remote (keys send-queues)]\n    (let [queue            (get send-queues remote)\n          network          (get networking remote)\n          parallel-payload (f/mark-parallel-loading! remote reconciler)]\n      (doseq [{:keys [::prim/query ::f/on-load ::f/on-error ::f/load-descriptors ::net/abort-id] :as payload} parallel-payload]\n        (let [on-load'  #(on-load % load-descriptors)\n              on-error' #(on-error % load-descriptors)]\n          ; TODO: Update reporting is now possible with new FulcroRemote. Need to plumb (just for parallel loads, done in queue otherwise).\n          (send-with-history-tracking network {:payload payload :reconciler reconciler :tx query\n                                               :on-done on-load' :on-error on-error' :abort-id abort-id})))\n      (loop [fetch-payload (f/mark-loading remote reconciler)]\n        (when fetch-payload\n          (enqueue queue (assoc fetch-payload :networking network))\n          (recur (f/mark-loading remote reconciler)))))))\n\n(defn detect-errant-remotes [{:keys [reconciler send-queues] :as app}]\n  (let [state           (prim/app-state reconciler)\n        all-items       (get @state :fulcro/ready-to-load)\n        item-remotes    (into #{} (map f/data-remote all-items))\n        all-remotes     (set (keys send-queues))\n        invalid-remotes (clojure.set/difference item-remotes all-remotes)]\n    (when (not-empty invalid-remotes) (log/error \"Use of invalid remote(s) detected! \" invalid-remotes))))\n\n(defn server-send\n  \"Puts queries/mutations (and their corresponding callbacks) onto the send queue. The networking code will pull these\n  off one at a time and send them through the real networking layer. Reads are guaranteed to *follow* writes.\"\n  [app remote-tx-map merge-result-callback]\n  (detect-errant-remotes app)\n  (enqueue-mutations app remote-tx-map merge-result-callback)\n  (enqueue-reads app))\n\n(defn- send-payload\n  \"Sends a network payload. There are two kinds of payloads in Fulcro. The first is\n  for reads, which are tracked by load descriptors in the app state. These load descriptors\n  tell the plumbing how to handle the response, and expect to only be merged in once. Mutations\n  do not have a payload, and can technically receive progress updates from the network. The built-in\n  networking does not (currently) give progress events, but plugin networking can. It is currently not\n  supported to give an update on a load, so this function is careful to detect that a payload is a send\n  and turns all but the last update into a no-op. The send-complete function comes from the\n  network sequential processing loop, and when called unblocks the network processing to allow the\n  next request to go. Be very careful with this code, as bugs will cause applications to stop responding\n  to remote requests.\"\n  [network reconciler payload send-complete]\n  ; Note, only data-fetch reads will have load-descriptors,\n  ; in which case the payload on-load is data-fetch/loaded-callback, and cannot handle updates.\n  (let [{:keys [::prim/query ::f/on-load ::f/on-error ::f/load-descriptors ::net/abort-id]} payload\n        merge-data (if load-descriptors #(on-load % load-descriptors) #(on-load %1 %2))\n        on-update  (if load-descriptors identity merge-data)\n        on-error   (if load-descriptors #(on-error % load-descriptors) on-error)\n        on-error   (comp send-complete on-error)\n        on-done    (comp send-complete merge-data)]\n    (if (f/is-deferred-transaction? query)\n      (on-done {})                                          ; immediately let the deferred tx go by pretending that the load is done\n      (send-with-history-tracking network {:payload payload :tx query :reconciler reconciler\n                                           :on-done on-done :on-error on-error\n                                           :on-load on-update :abort-id abort-id}))))\n\n(defn is-sequential? [network]\n  (if #?(:clj false :cljs (satisfies? net/NetworkBehavior network))\n    (net/serialize-requests? network)\n    true))\n\n(defn start-network-sequential-processing\n  \"Starts a async go loop that sends network requests on networking object's request queue.\n   Gives the appearance of a separate networking 'thread' using core async.\"\n  [{:keys [networking reconciler send-queues response-channels] :as app}]\n  (doseq [remote (keys send-queues)]\n    (let [queue            (get send-queues remote)\n          network          (get networking remote)\n          sequential?      (is-sequential? network)\n          response-channel (get response-channels remote)\n          send-complete    (if sequential?\n                             (fn [] (go (async/>! response-channel :complete)))\n                             identity)]\n      (go\n        (loop [payload (async/<! queue)]\n          (send-payload network reconciler payload send-complete) ; async call. Calls send-complete when done\n          (when sequential?\n            (async/<! response-channel))                    ; block until send-complete\n          (recur (async/<! queue)))))))\n\n(defn generate-reconciler\n  \"The reconciler's send method calls FulcroApplication/server-send, which itself requires a reconciler with a\n  send method already defined. This creates a catch-22 / circular dependency on the reconciler and :send field within\n  the reconciler.\n\n  To resolve the issue, we def an atom pointing to the reconciler that the send method will deref each time it is\n  called. This allows us to define the reconciler with a send method that, at the time of initialization, has an app\n  that points to a nil reconciler. By the end of this function, the app's reconciler reference has been properly set.\"\n  [{:keys [send-queues mutation-merge] :as app} initial-state parser {:keys [migrate] :as reconciler-options}]\n  (let [rec-atom                  (atom nil)\n        remotes                   (keys send-queues)\n        tempid-migrate            (fn [pure _ tempids]\n                                    (doseq [queue (vals send-queues)]\n                                      (prim/rewrite-tempids-in-request-queue queue tempids))\n                                    (let [state-migrate (or migrate prim/resolve-tempids)]\n                                      (state-migrate pure tempids)))\n        initial-state-with-locale (let [set-default-locale (fn [s] (update s :ui/locale (fnil identity :en)))\n                                        is-atom?           (futil/atom? initial-state)]\n                                    (if is-atom?\n                                      (do\n                                        (swap! initial-state set-default-locale)\n                                        initial-state)\n                                      (do\n                                        (set-default-locale initial-state))))\n        config                    (merge {}\n                                    reconciler-options\n                                    {:migrate     tempid-migrate\n                                     :state       initial-state-with-locale\n                                     :send        (fn [sends-keyed-by-remote result-merge-callback]\n                                                    (server-send (assoc app :reconciler @rec-atom) sends-keyed-by-remote result-merge-callback))\n                                     :normalize   true\n                                     :remotes     remotes\n                                     :merge-ident (fn [reconciler app-state ident props]\n                                                    (update-in app-state ident (comp prim/sweep-one merge) props))\n                                     :merge-tree  (fn [target source]\n                                                    (prim/merge-handler mutation-merge target source))\n                                     :parser      parser})\n        rec                       (prim/reconciler config)]\n    (reset! rec-atom rec)\n    rec))\n\n(defn initialize-global-error-callbacks\n  [app]\n  (doseq [remote (keys (:networking app))]\n    (let [cb-atom (get-in app [:networking remote :global-error-callback])]\n      (when (futil/atom? cb-atom)\n        (swap! cb-atom #(if (fn? %)\n                          (partial % (prim/app-state (:reconciler app)))\n                          (throw (ex-info \"Networking error callback must be a function.\" {}))))))))\n\n(defn read-local\n  \"Read function for the built-in parser.\n\n  *** NOTE: This function only runs when it is called without a target -- it is not triggered for remote reads. To\n  trigger a remote read, use the `fulcro/data-fetch` namespace. ***\n\n  If a user-read is supplied, *it will be allowed* to trigger remote reads. This is not recommended, as you\n  will probably have to augment the networking layer to get it to do what you mean. Use `load` instead. You have\n  been warned. Triggering remote reads is allowed, but discouraged and unsupported.\n\n  Returns the current locale when reading the :ui/locale keyword. Otherwise pulls data out of the app-state.\n  \"\n  [user-read {:keys [query target state ast] :as env} dkey params]\n  (if-let [custom-result (user-read env dkey params)]\n    custom-result\n    (when (not target)\n      (let [top-level-prop (nil? query)\n            key            (or (:key ast) dkey)\n            by-ident?      (futil/ident? key)\n            union?         (map? query)\n            data           (if by-ident? (get-in @state key) (get @state key))]\n        {:value\n         (cond\n           union? (get (prim/db->tree [{key query}] @state @state) key)\n           top-level-prop data\n           :else (prim/db->tree query data @state))}))))\n\n(defn write-entry-point\n  \"This is the entry point for writes. In general this is simply a call to the multi-method\n  defined by Fulcro (mutate); however, Fulcro supports the concept of a global `post-mutate`\n  function that will be called anytime the general mutate has an action that is desired. This\n  can be useful, for example, in cases where you have some post-processing that needs\n  to happen for a given (sub)set of mutations (that perhaps you did not define).\"\n  [env k params]\n  (let [rv     (try\n                 (m/mutate env k params)\n                 (catch #?(:cljs :default :clj Exception) e\n                   (log/error \"Mutation \" k \" failed with exception\" e)\n                   nil))\n        action (:action rv)]\n    (if action\n      (assoc rv :action (fn []\n                          (try\n                            (let [action-result (action env k params)]\n                              (try\n                                (m/post-mutate env k params)\n                                (catch #?(:cljs :default :clj Exception) e (log/error \"Post mutate failed on dispatch to \" k)))\n                              action-result)\n                            (catch #?(:cljs :default :clj Exception) e\n                              (log/error \"Mutation \" k \" failed with exception\")\n                              #?(:cljs (when goog.DEBUG (js/console.error e)))\n                              (throw e)))))\n      rv)))\n\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i20",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",14],["^ ","^1K",50,"^1L",18],["^ ","^1K",108,"^1L",18,"^G","p__41643"],["^ ","^1K",0,"^1L",19],["^ ","^1K",0,"^1L",19],["^ ","^1K",4,"^1L",19,"^G","map__41644"],["^ ","^1K",17,"^1L",19,"^G","p__41643"],["^ ","^1K",4,"^1L",20,"^G","map__41644"],["^ ","^1K",21,"^1L",20],["^ ","^1K",23,"^1L",20],["^ ","^1K",25,"^1L",20],["^ ","^1K",27,"^1L",20],["^ ","^1K",28,"^1L",20,"^G","map__41644"],["^ ","^1K",42,"^1L",20],["^ ","^1K",50,"^1L",20],["^ ","^1K",52,"^1L",20],["^ ","^1K",54,"^1L",20],["^ ","^1K",55,"^1L",20],["^ ","^1K",55,"^1L",20,"^G","map__41644"],["^ ","^1K",104,"^1L",20],["^ ","^1K",115,"^1L",20],["^ ","^1K",116,"^1L",20,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",20],["^ ","^1K",148,"^1L",20,"^G","map__41644"],["^ ","^1K",179,"^1L",20],["^ ","^1K",184,"^1L",20],["^ ","^1K",191,"^1L",20],["^ ","^1K",199,"^1L",20],["^ ","^1K",199,"^1L",20,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",20,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",20,"^G","map__41644"],["^ ","^1K",276,"^1L",20,"^G","map__41644"],["^ ","^1K",17,"^1L",21],["^ ","^1K",17,"^1L",21,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",61,"^1L",21,"^G","map__41644"],["^ ","^1K",76,"^1L",21],["^ ","^1K",0,"^1L",22]],"~i6",[["^ ","^1K",0,"^1L",18,"^G","fulcro.client.impl.application/fallback-handler"]]],"~i23",["^ ","~i11",[["^ ","^1K",4,"^1L",21,"^G","reconciler"]],"~i24",[["^ ","^1K",117,"^1L",18,"^G","query"]]],"^1O",["^ ","~i2",[["^ ","^1K",0,"^1L",22],["^ ","^1K",0,"^1L",24]],"~i7",[["^ ","^1K",18,"^1L",23,"^G","error"]]],"~i25",["^ ","~i4",[["^ ","^1K",0,"^1L",24],["^ ","^1K",114,"^1L",24]],"~i5",[["^ ","^1K",0,"^1L",24,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^1N",[["^ ","^1K",51,"^1L",24]],"~i12",[["^ ","^1K",51,"^1L",24,"^G","fulcro.client.primitives/app-state"]],"~i27",[["^ ","^1K",86,"^1L",24,"^G","reconciler"]],"~i39",[["^ ","^1K",98,"^1L",24,"^G","cljs.core/assoc"]],"~i66",[["^ ","^1K",195,"^1L",24,"^G","error"]]],"~i26",["^ ","~i4",[["^ ","^1K",0,"^1L",26],["^ ","^1K",4,"^1L",26,"^G","temp__5455__auto__"],["^ ","^1K",0,"^1L",27],["^ ","^1K",0,"^1L",27],["^ ","^1K",20,"^1L",27,"^G","temp__5455__auto__"],["^ ","^1K",0,"^1L",28],["^ ","^1K",8,"^1L",28,"^G","temp__5455__auto__"],["^ ","^1K",0,"^1L",29]],"~i13",[["^ ","^1K",4,"^1L",28,"^G","q"]],"~i15",[["^ ","^1K",25,"^1L",26]],"~i16",[["^ ","^1K",25,"^1L",26,"^G","fulcro.client.primitives/fallback-tx"]],"~i33",[["^ ","^1K",62,"^1L",26,"^G","query"]],"^1S",[["^ ","^1K",68,"^1L",26,"^G","error"]]],"^1R",["^ ","~i6",[["^ ","^1K",0,"^1L",29]],"~i10",[["^ ","^1K",0,"^1L",29],["^ ","^1K",4,"^1L",29],["^ ","^1K",4,"^1L",29],["^ ","^1K",4,"^1L",29,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",61,"^1L",29],["^ ","^1K",104,"^1L",29],["^ ","^1K",158,"^1L",29],["^ ","^1K",191,"^1L",29],["^ ","^1K",243,"^1L",29],["^ ","^1K",254,"^1L",29],["^ ","^1K",357,"^1L",29],["^ ","^1K",16,"^1L",30],["^ ","^1K",19,"^1L",30],["^ ","^1K",20,"^1L",30,"^G","e41651"],["^ ","^1K",38,"^1L",30,"^G","js/Error"],["^ ","^1K",0,"^1L",31],["^ ","^1K",4,"^1L",31,"^G","e__31527__auto__"],["^ ","^1K",29,"^1L",31,"^G","e41651"],["^ ","^1K",0,"^1L",32],["^ ","^1K",0,"^1L",32],["^ ","^1K",0,"^1L",32,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",57,"^1L",32],["^ ","^1K",100,"^1L",32],["^ ","^1K",154,"^1L",32],["^ ","^1K",187,"^1L",32],["^ ","^1K",239,"^1L",32],["^ ","^1K",250,"^1L",32],["^ ","^1K",353,"^1L",32],["^ ","^1K",406,"^1L",32,"^G","e__31527__auto__"],["^ ","^1K",0,"^1L",34],["^ ","^1K",0,"^1L",34],["^ ","^1K",6,"^1L",34,"^G","e41651"]],"~i60",[["^ ","^1K",397,"^1L",29,"^G","q"]]],"~i28",["^ ","^1Z",[["^ ","^1K",0,"^1L",38]],"^1N",[["^ ","^1K",7,"^1L",38,"^G","fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^1U",[["^ ","^1K",77,"^1L",38,"^G","reconciler"]],"~i37",[["^ ","^1K",88,"^1L",38,"^G","q"]]],"~i29",["^ ","~i6",[["^ ","^1K",0,"^1L",40],["^ ","^1K",4,"^1L",40],["^ ","^1K",4,"^1L",40],["^ ","^1K",11,"^1L",40,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",68,"^1L",40],["^ ","^1K",111,"^1L",40],["^ ","^1K",165,"^1L",40],["^ ","^1K",198,"^1L",40],["^ ","^1K",250,"^1L",40],["^ ","^1K",261,"^1L",40],["^ ","^1K",364,"^1L",40],["^ ","^1K",16,"^1L",41],["^ ","^1K",19,"^1L",41],["^ ","^1K",20,"^1L",41,"^G","e41654"],["^ ","^1K",38,"^1L",41,"^G","js/Error"],["^ ","^1K",0,"^1L",42],["^ ","^1K",4,"^1L",42,"^G","e__31527__auto__"],["^ ","^1K",23,"^1L",42,"^G","e41654"],["^ ","^1K",0,"^1L",43],["^ ","^1K",0,"^1L",43],["^ ","^1K",7,"^1L",43,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",64,"^1L",43],["^ ","^1K",107,"^1L",43],["^ ","^1K",161,"^1L",43],["^ ","^1K",194,"^1L",43],["^ ","^1K",246,"^1L",43],["^ ","^1K",257,"^1L",43],["^ ","^1K",360,"^1L",43],["^ ","^1K",413,"^1L",43,"^G","e__31527__auto__"],["^ ","^1K",0,"^1L",45],["^ ","^1K",0,"^1L",45],["^ ","^1K",6,"^1L",45,"^G","e41654"]]],"~i32",["^ ","~i0",[["^ ","^1K",0,"^1L",52],["^ ","^1K",41,"^1L",55],["^ ","^1K",0,"^1L",56]],"~i7",[["^ ","^1K",0,"^1L",55,"^G","fulcro.client.impl.application/enqueue"]]],"~i34",["^ ","~i3",[["^ ","^1K",90,"^1L",55,"^G","q"]],"~i5",[["^ ","^1K",92,"^1L",55,"^G","v"]]],"~i35",["^ ","~i2",[["^ ","^1K",0,"^1L",56],["^ ","^1K",4,"^1L",56,"^G","c__31633__auto__"],["^ ","^1K",23,"^1L",56],["^ ","^1K",23,"^1L",56,"^G","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1"],["^ ","^1K",74,"^1L",56],["^ ","^1K",0,"^1L",57],["^ ","^1K",0,"^1L",57],["^ ","^1K",0,"^1L",57,"^G","cljs.core.async.impl.dispatch/run"],["^ ","^1K",34,"^1L",57],["^ ","^1K",0,"^1L",59],["^ ","^1K",0,"^1L",59],["^ ","^1K",4,"^1L",59,"^G","f__31634__auto__"],["^ ","^1K",23,"^1L",59],["^ ","^1K",40,"^1L",59,"^G","switch__30661__auto__"],["^ ","^1K",64,"^1L",59],["^ ","^1K",18,"^1L",60,"^G","state_41683"],["^ ","^1K",0,"^1L",61],["^ ","^1K",0,"^1L",61],["^ ","^1K",4,"^1L",61,"^G","state_val_41684"],["^ ","^1K",22,"^1L",61],["^ ","^1K",23,"^1L",61,"^G","state_41683"],["^ ","^1K",35,"^1L",61],["^ ","^1K",0,"^1L",62],["^ ","^1K",0,"^1L",62],["^ ","^1K",3,"^1L",62],["^ ","^1K",4,"^1L",62,"^G","state_val_41684"],["^ ","^1K",24,"^1L",62],["^ ","^1K",0,"^1L",63],["^ ","^1K",4,"^1L",63,"^G","state_41683"],["^ ","^1K",22,"^1L",63,"^G","state_41683"],["^ ","^1K",0,"^1L",64],["^ ","^1K",0,"^1L",64],["^ ","^1K",7,"^1L",64,"^G","cljs.core.async.impl.ioc-helpers/put!"],["^ ","^1K",50,"^1L",64,"^G","state_41683"],["^ ","^1K",66,"^1L",64],["^ ","^1K",0,"^1L",66],["^ ","^1K",3,"^1L",66],["^ ","^1K",4,"^1L",66,"^G","state_val_41684"],["^ ","^1K",24,"^1L",66],["^ ","^1K",0,"^1L",67],["^ ","^1K",4,"^1L",67,"^G","inst_41681"],["^ ","^1K",17,"^1L",67],["^ ","^1K",18,"^1L",67,"^G","state_41683"],["^ ","^1K",30,"^1L",67],["^ ","^1K",4,"^1L",68,"^G","state_41683"],["^ ","^1K",22,"^1L",68,"^G","state_41683"],["^ ","^1K",0,"^1L",69],["^ ","^1K",0,"^1L",69],["^ ","^1K",7,"^1L",69,"^G","cljs.core.async.impl.ioc-helpers/return-chan"],["^ ","^1K",52,"^1L",69,"^G","state_41683"],["^ ","^1K",68,"^1L",69,"^G","inst_41681"],["^ ","^1K",0,"^1L",71],["^ ","^1K",0,"^1L",76],["^ ","^1K",0,"^1L",76],["^ ","^1K",0,"^1L",80],["^ ","^1K",0,"^1L",80],["^ ","^1K",4,"^1L",80,"^G","statearr-41694"],["^ ","^1K",21,"^1L",80],["^ ","^1K",22,"^1L",80],["^ ","^1K",27,"^1L",80],["^ ","^1K",32,"^1L",80],["^ ","^1K",37,"^1L",80],["^ ","^1K",42,"^1L",80],["^ ","^1K",47,"^1L",80],["^ ","^1K",52,"^1L",80],["^ ","^1K",0,"^1L",81],["^ ","^1K",0,"^1L",81],["^ ","^1K",1,"^1L",81,"^G","statearr-41694"],["^ ","^1K",16,"^1L",81],["^ ","^1K",23,"^1L",81,"^G","state-machine__30662__auto__"],["^ ","^1K",0,"^1L",83],["^ ","^1K",1,"^1L",83,"^G","statearr-41694"],["^ ","^1K",16,"^1L",83],["^ ","^1K",23,"^1L",83],["^ ","^1K",0,"^1L",85,"^G","statearr-41694"],["^ ","^1K",90,"^1L",87,"^G","state_41683"],["^ ","^1K",0,"^1L",89],["^ ","^1K",0,"^1L",89],["^ ","^1K",4,"^1L",89,"^G","ret-value__30663__auto__"],["^ ","^1K",31,"^1L",89],["^ ","^1K",48,"^1L",89],["^ ","^1K",48,"^1L",89],["^ ","^1K",0,"^1L",90],["^ ","^1K",0,"^1L",90],["^ ","^1K",4,"^1L",90,"^G","result__30664__auto__"],["^ ","^1K",28,"^1L",90],["^ ","^1K",28,"^1L",90,"^G","switch__30661__auto__"],["^ ","^1K",50,"^1L",90,"^G","state_41683"],["^ ","^1K",0,"^1L",91],["^ ","^1K",0,"^1L",91],["^ ","^1K",3,"^1L",91],["^ ","^1K",3,"^1L",91,"^G","cljs.core/keyword-identical?"],["^ ","^1K",38,"^1L",91,"^G","result__30664__auto__"],["^ ","^1K",60,"^1L",91],["^ ","^1K",0,"^1L",92],["^ ","^1K",0,"^1L",94,"^G","result__30664__auto__"],["^ ","^1K",16,"^1L",98],["^ ","^1K",19,"^1L",98],["^ ","^1K",20,"^1L",98,"^G","e41697"],["^ ","^1K",38,"^1L",98,"^G","js/Object"],["^ ","^1K",0,"^1L",99],["^ ","^1K",4,"^1L",99,"^G","ex__30665__auto__"],["^ ","^1K",24,"^1L",99,"^G","e41697"],["^ ","^1K",0,"^1L",100],["^ ","^1K",0,"^1L",100],["^ ","^1K",4,"^1L",100,"^G","statearr-41698"],["^ ","^1K",27,"^1L",100,"^G","state_41683"],["^ ","^1K",0,"^1L",101],["^ ","^1K",0,"^1L",101],["^ ","^1K",1,"^1L",101,"^G","statearr-41698"],["^ ","^1K",22,"^1L",101],["^ ","^1K",29,"^1L",101,"^G","ex__30665__auto__"],["^ ","^1K",0,"^1L",103,"^G","statearr-41698"],["^ ","^1K",0,"^1L",104],["^ ","^1K",0,"^1L",104,"^G","cljs.core.async.impl.ioc-helpers/process-exception"],["^ ","^1K",51,"^1L",104,"^G","state_41683"],["^ ","^1K",0,"^1L",106],["^ ","^1K",0,"^1L",108],["^ ","^1K",0,"^1L",108],["^ ","^1K",6,"^1L",108,"^G","e41697"],["^ ","^1K",0,"^1L",112],["^ ","^1K",0,"^1L",112],["^ ","^1K",3,"^1L",112],["^ ","^1K",3,"^1L",112,"^G","cljs.core/keyword-identical?"],["^ ","^1K",38,"^1L",112,"^G","ret-value__30663__auto__"],["^ ","^1K",63,"^1L",112],["^ ","^1K",0,"^1L",113],["^ ","^1K",15,"^1L",113,"^G","state_41683"],["^ ","^1K",0,"^1L",117,"^G","ret-value__30663__auto__"],["^ ","^1K",81,"^1L",122,"^G","state_41683"],["^ ","^1K",90,"^1L",127,"^G","state_41683"],["^ ","^1K",4,"^1L",137,"^G","state__31635__auto__"],["^ ","^1K",27,"^1L",137],["^ ","^1K",44,"^1L",137,"^G","statearr-41704"],["^ ","^1K",61,"^1L",137],["^ ","^1K",62,"^1L",137,"^G","f__31634__auto__"],["^ ","^1K",111,"^1L",137,"^G","f__31634__auto__"],["^ ","^1K",162,"^1L",137,"^G","f__31634__auto__"],["^ ","^1K",0,"^1L",138],["^ ","^1K",0,"^1L",138],["^ ","^1K",1,"^1L",138,"^G","statearr-41704"],["^ ","^1K",16,"^1L",138,"^G","cljs.core.async.impl.ioc-helpers/USER-START-IDX"],["^ ","^1K",16,"^1L",138],["^ ","^1K",23,"^1L",138,"^G","c__31633__auto__"],["^ ","^1K",0,"^1L",140,"^G","statearr-41704"],["^ ","^1K",0,"^1L",142],["^ ","^1K",0,"^1L",142],["^ ","^1K",7,"^1L",142,"^G","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped"],["^ ","^1K",66,"^1L",142,"^G","state__31635__auto__"],["^ ","^1K",0,"^1L",146,"^G","c__31633__auto__"]],"^1X",[["^ ","^1K",70,"^1L",64,"^G","q"]],"~i18",[["^ ","^1K",72,"^1L",64,"^G","v"]]],"^21",["^ ","~i0",[["^ ","^1K",0,"^1L",148],["^ ","^1K",0,"^1L",148,"^G","cljs.spec.alpha/def-impl"],["^ ","^1K",25,"^1L",148],["^ ","^1K",148,"^1L",148],["^ ","^1K",163,"^1L",148],["^ ","^1K",252,"^1L",148],["^ ","^1K",305,"^1L",148],["^ ","^1K",320,"^1L",148],["^ ","^1K",405,"^1L",148],["^ ","^1K",460,"^1L",148],["^ ","^1K",535,"^1L",148],["^ ","^1K",594,"^1L",148],["^ ","^1K",712,"^1L",148],["^ ","^1K",712,"^1L",148,"^G","cljs.spec.alpha/fspec-impl"],["^ ","^1K",739,"^1L",148],["^ ","^1K",739,"^1L",148,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1K",795,"^1L",148],["^ ","^1K",810,"^1L",148],["^ ","^1K",895,"^1L",148],["^ ","^1K",950,"^1L",148],["^ ","^1K",1025,"^1L",148],["^ ","^1K",1084,"^1L",148],["^ ","^1K",1942,"^1L",148],["^ ","^1K",1947,"^1L",148],["^ ","^1K",1953,"^1L",148],["^ ","^1K",1968,"^1L",148],["^ ","^1K",2053,"^1L",148],["^ ","^1K",2108,"^1L",148],["^ ","^1K",2183,"^1L",148],["^ ","^1K",2242,"^1L",148],["^ ","^1K",2359,"^1L",148],["^ ","^1K",2359,"^1L",148,"^G","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^1K",2415,"^1L",148],["^ ","^1K",2490,"^1L",148,"^G","cljs.core/any?"],["^ ","^1K",2511,"^1L",148],["^ ","^1K",2516,"^1L",148],["^ ","^1K",2522,"^1L",148],["^ ","^1K",2597,"^1L",148],["^ ","^1K",2602,"^1L",148],["^ ","^1K",2607,"^1L",148]]],"~i38",["^ ","~i8",[["^ ","^1K",1201,"^1L",148],["^ ","^1K",1201,"^1L",148,"^G","cljs.spec.alpha/cat-impl"],["^ ","^1K",1226,"^1L",148],["^ ","^1K",1309,"^1L",148],["^ ","^1K",1364,"^1L",148],["^ ","^1K",1431,"^1L",148],["^ ","^1K",1535,"^1L",148],["^ ","^1K",1659,"^1L",148],["^ ","^1K",1742,"^1L",148],["^ ","^1K",1817,"^1L",148]],"~i22",[["^ ","^1K",1514,"^1L",148,"^G","cljs.core/any?"]]],"~i40",["^ ","~i0",[["^ ","^1K",0,"^1L",149],["^ ","^1K",0,"^1L",149],["^ ","^1K",43,"^1L",154],["^ ","^1K",94,"^1L",154,"^G","var_args"],["^ ","^1K",0,"^1L",155],["^ ","^1K",0,"^1L",155],["^ ","^1K",4,"^1L",155,"^G","G__41720"],["^ ","^1K",15,"^1L",155],["^ ","^1K",15,"^1L",155],["^ ","^1K",0,"^1L",156],["^ ","^1K",0,"^1L",156],["^ ","^1K",8,"^1L",156,"^G","G__41720"],["^ ","^1K",5,"^1L",157],["^ ","^1K",0,"^1L",158],["^ ","^1K",7,"^1L",158,"^G","fulcro.client.impl.application/real-send"],["^ ","^1K",78,"^1L",158],["^ ","^1K",79,"^1L",158],["^ ","^1K",89,"^1L",158],["^ ","^1K",95,"^1L",158],["^ ","^1K",96,"^1L",158],["^ ","^1K",106,"^1L",158],["^ ","^1K",5,"^1L",161],["^ ","^1K",0,"^1L",162],["^ ","^1K",7,"^1L",162,"^G","fulcro.client.impl.application/real-send"],["^ ","^1K",78,"^1L",162],["^ ","^1K",79,"^1L",162],["^ ","^1K",89,"^1L",162],["^ ","^1K",95,"^1L",162],["^ ","^1K",96,"^1L",162],["^ ","^1K",106,"^1L",162],["^ ","^1K",112,"^1L",162],["^ ","^1K",113,"^1L",162],["^ ","^1K",123,"^1L",162],["^ ","^1K",129,"^1L",162],["^ ","^1K",130,"^1L",162],["^ ","^1K",140,"^1L",162],["^ ","^1K",146,"^1L",162],["^ ","^1K",147,"^1L",162],["^ ","^1K",157,"^1L",162],["^ ","^1K",0,"^1L",166],["^ ","^1K",6,"^1L",166],["^ ","^1K",11,"^1L",166,"^G","js/Error"],["^ ","^1K",17,"^1L",166],["^ ","^1K",18,"^1L",166],["^ ","^1K",80,"^1L",166],["^ ","^1K",80,"^1L",166],["^ ","^1K",0,"^1L",171],["^ ","^1K",0,"^1L",171],["^ ","^1K",73,"^1L",171],["^ ","^1K",88,"^1L",171,"^G","p__41723"],["^ ","^1K",0,"^1L",172],["^ ","^1K",0,"^1L",172],["^ ","^1K",4,"^1L",172,"^G","map__41724"],["^ ","^1K",17,"^1L",172,"^G","p__41723"],["^ ","^1K",4,"^1L",173,"^G","map__41724"],["^ ","^1K",21,"^1L",173],["^ ","^1K",23,"^1L",173],["^ ","^1K",25,"^1L",173],["^ ","^1K",27,"^1L",173],["^ ","^1K",28,"^1L",173,"^G","map__41724"],["^ ","^1K",42,"^1L",173],["^ ","^1K",50,"^1L",173],["^ ","^1K",52,"^1L",173],["^ ","^1K",54,"^1L",173],["^ ","^1K",55,"^1L",173],["^ ","^1K",55,"^1L",173,"^G","map__41724"],["^ ","^1K",104,"^1L",173],["^ ","^1K",115,"^1L",173],["^ ","^1K",116,"^1L",173,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",173],["^ ","^1K",148,"^1L",173,"^G","map__41724"],["^ ","^1K",179,"^1L",173],["^ ","^1K",184,"^1L",173],["^ ","^1K",191,"^1L",173],["^ ","^1K",199,"^1L",173],["^ ","^1K",199,"^1L",173,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",173,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",173,"^G","map__41724"],["^ ","^1K",276,"^1L",173,"^G","map__41724"],["^ ","^1K",17,"^1L",174],["^ ","^1K",17,"^1L",174,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",61,"^1L",174,"^G","map__41724"],["^ ","^1K",76,"^1L",174],["^ ","^1K",9,"^1L",175],["^ ","^1K",9,"^1L",175,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",53,"^1L",175,"^G","map__41724"],["^ ","^1K",68,"^1L",175],["^ ","^1K",14,"^1L",176],["^ ","^1K",14,"^1L",176,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",58,"^1L",176,"^G","map__41724"],["^ ","^1K",73,"^1L",176],["^ ","^1K",15,"^1L",177],["^ ","^1K",15,"^1L",177,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",59,"^1L",177,"^G","map__41724"],["^ ","^1K",74,"^1L",177],["^ ","^1K",14,"^1L",178],["^ ","^1K",14,"^1L",178,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",58,"^1L",178,"^G","map__41724"],["^ ","^1K",73,"^1L",178],["^ ","^1K",15,"^1L",179],["^ ","^1K",15,"^1L",179,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",59,"^1L",179,"^G","map__41724"],["^ ","^1K",74,"^1L",179],["^ ","^1K",0,"^1L",180],["^ ","^1K",0,"^1L",227],["^ ","^1K",0,"^1L",227],["^ ","^1K",73,"^1L",227],["^ ","^1K",0,"^1L",228],["^ ","^1K",0,"^1L",231],["^ ","^1K",0,"^1L",231],["^ ","^1K",67,"^1L",231],["^ ","^1K",0,"^1L",233]],"~i6",[["^ ","^1K",0,"^1L",154,"^G","fulcro.client.impl.application/real-send"],["^ ","^1K",0,"^1L",171,"^G","fulcro.client.impl.application/real-send"],["^ ","^1K",0,"^1L",227,"^G","fulcro.client.impl.application/real-send"],["^ ","^1K",0,"^1L",231,"^G","fulcro.client.impl.application/real-send"]]],"~i44",["^ ","~i4",[["^ ","^1K",84,"^1L",171,"^G","net"]],"^1X",[["^ ","^1K",4,"^1L",174,"^G","reconciler"]],"^1R",[["^ ","^1K",4,"^1L",175,"^G","tx"]],"~i30",[["^ ","^1K",4,"^1L",176,"^G","on-done"]],"^27",[["^ ","^1K",4,"^1L",177,"^G","on-error"]],"~i47",[["^ ","^1K",4,"^1L",178,"^G","on-load"]],"~i55",[["^ ","^1K",4,"^1L",179,"^G","abort-id"]]],"^2<",["^ ","~i7",[["^ ","^1K",0,"^1L",180],["^ ","^1K",18,"^1L",180],["^ ","^1K",18,"^1L",181,"^G","p1__41717#"],["^ ","^1K",0,"^1L",182],["^ ","^1K",0,"^1L",186]],"^1V",[["^ ","^1K",4,"^1L",180,"^G","progress-tx"]],"^1U",[["^ ","^1K",0,"^1L",182],["^ ","^1K",65,"^1L",182,"^G","p1__41717#"]],"^1R",[["^ ","^1K",7,"^1L",182,"^G","fulcro.client.mutations/progressive-update-transaction"]],"^1[",[["^ ","^1K",62,"^1L",182,"^G","tx"]]],"~i48",["^ ","^1V",[["^ ","^1K",4,"^1L",185,"^G","tx"]],"^1P",[["^ ","^1K",13,"^1L",185]],"^1U",[["^ ","^1K",13,"^1L",185,"^G","fulcro.client.primitives/strip-ui"]],"^29",[["^ ","^1K",47,"^1L",185,"^G","tx"]]],"~i49",["^ ","~i9",[["^ ","^1K",0,"^1L",186],["^ ","^1K",0,"^1L",189],["^ ","^1K",0,"^1L",192],["^ ","^1K",0,"^1L",221]]],"~i50",["^ ","^1N",[["^ ","^1K",3,"^1L",186],["^ ","^1K",5,"^1L",186],["^ ","^1K",7,"^1L",186],["^ ","^1K",15,"^1L",186],["^ ","^1K",23,"^1L",186],["^ ","^1K",25,"^1L",186],["^ ","^1K",27,"^1L",186],["^ ","^1K",38,"^1L",186],["^ ","^1K",39,"^1L",186,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",71,"^1L",186],["^ ","^1K",122,"^1L",186],["^ ","^1K",127,"^1L",186],["^ ","^1K",134,"^1L",186]],"^2>",[["^ ","^1K",8,"^1L",186,"^G","net"],["^ ","^1K",71,"^1L",186,"^G","net"]],"~i53",[["^ ","^1K",0,"^1L",187]],"~i54",[["^ ","^1K",7,"^1L",187,"^G","fulcro.client.network/updating-send"]],"~i72",[["^ ","^1K",43,"^1L",187,"^G","net"]],"~i76",[["^ ","^1K",47,"^1L",187,"^G","tx"]],"~i79",[["^ ","^1K",54,"^1L",187,"^G","on-done"]],"~i87",[["^ ","^1K",62,"^1L",187,"^G","on-error"]],"~i96",[["^ ","^1K",71,"^1L",187,"^G","on-load"]]],"~i51",["^ ","^1N",[["^ ","^1K",3,"^1L",189],["^ ","^1K",5,"^1L",189],["^ ","^1K",7,"^1L",189],["^ ","^1K",15,"^1L",189],["^ ","^1K",23,"^1L",189],["^ ","^1K",25,"^1L",189],["^ ","^1K",27,"^1L",189],["^ ","^1K",38,"^1L",189],["^ ","^1K",39,"^1L",189,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",71,"^1L",189],["^ ","^1K",116,"^1L",189],["^ ","^1K",121,"^1L",189],["^ ","^1K",128,"^1L",189]],"~i42",[["^ ","^1K",8,"^1L",189,"^G","net"],["^ ","^1K",71,"^1L",189,"^G","net"]],"^2<",[["^ ","^1K",0,"^1L",190]],"^2>",[["^ ","^1K",7,"^1L",190,"^G","fulcro.client.network/send"]],"~i57",[["^ ","^1K",34,"^1L",190,"^G","net"]],"~i61",[["^ ","^1K",38,"^1L",190,"^G","tx"]],"~i64",[["^ ","^1K",45,"^1L",190,"^G","on-done"]],"^2C",[["^ ","^1K",53,"^1L",190,"^G","on-error"]]],"~i52",["^ ","^1N",[["^ ","^1K",3,"^1L",192],["^ ","^1K",5,"^1L",192],["^ ","^1K",7,"^1L",192],["^ ","^1K",15,"^1L",192],["^ ","^1K",23,"^1L",192],["^ ","^1K",25,"^1L",192],["^ ","^1K",27,"^1L",192],["^ ","^1K",38,"^1L",192],["^ ","^1K",39,"^1L",192,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",71,"^1L",192],["^ ","^1K",116,"^1L",192],["^ ","^1K",121,"^1L",192],["^ ","^1K",128,"^1L",192]],"^2I",[["^ ","^1K",8,"^1L",192,"^G","net"],["^ ","^1K",71,"^1L",192,"^G","net"]]],"^2A",["^ ","^1N",[["^ ","^1K",0,"^1L",193],["^ ","^1K",0,"^1L",219]],"~i17",[["^ ","^1K",4,"^1L",193,"^G","on-done"]],"^1U",[["^ ","^1K",18,"^1L",193],["^ ","^1K",18,"^1L",194,"^G","p__41732"],["^ ","^1K",0,"^1L",195],["^ ","^1K",0,"^1L",195],["^ ","^1K",4,"^1L",195,"^G","map__41733"],["^ ","^1K",17,"^1L",195,"^G","p__41732"],["^ ","^1K",4,"^1L",196,"^G","map__41733"],["^ ","^1K",21,"^1L",196],["^ ","^1K",23,"^1L",196],["^ ","^1K",25,"^1L",196],["^ ","^1K",27,"^1L",196],["^ ","^1K",28,"^1L",196,"^G","map__41733"],["^ ","^1K",42,"^1L",196],["^ ","^1K",50,"^1L",196],["^ ","^1K",52,"^1L",196],["^ ","^1K",54,"^1L",196],["^ ","^1K",55,"^1L",196],["^ ","^1K",55,"^1L",196,"^G","map__41733"],["^ ","^1K",104,"^1L",196],["^ ","^1K",115,"^1L",196],["^ ","^1K",116,"^1L",196,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",196],["^ ","^1K",148,"^1L",196,"^G","map__41733"],["^ ","^1K",179,"^1L",196],["^ ","^1K",184,"^1L",196],["^ ","^1K",191,"^1L",196],["^ ","^1K",199,"^1L",196],["^ ","^1K",199,"^1L",196,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",196,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",196,"^G","map__41733"],["^ ","^1K",276,"^1L",196,"^G","map__41733"],["^ ","^1K",11,"^1L",197],["^ ","^1K",11,"^1L",197,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",55,"^1L",197,"^G","map__41733"],["^ ","^1K",70,"^1L",197],["^ ","^1K",18,"^1L",198],["^ ","^1K",18,"^1L",198,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",62,"^1L",198,"^G","map__41733"],["^ ","^1K",77,"^1L",198],["^ ","^1K",0,"^1L",199]],"^1S",[["^ ","^1K",4,"^1L",197,"^G","body"]],"^2:",[["^ ","^1K",4,"^1L",198,"^G","transaction"]],"~i59",[["^ ","^1K",0,"^1L",199]],"^1[",[["^ ","^1K",8,"^1L",199,"^G","on-done"],["^ ","^1K",48,"^1L",199,"^G","on-done"],["^ ","^1K",106,"^1L",199,"^G","on-done"]],"~i68",[["^ ","^1K",86,"^1L",199,"^G","body"],["^ ","^1K",124,"^1L",199,"^G","body"]],"~i73",[["^ ","^1K",91,"^1L",199,"^G","transaction"],["^ ","^1K",129,"^1L",199,"^G","transaction"]]],"^2B",["^ ","^2N",[["^ ","^1K",4,"^1L",202,"^G","on-error"]],"^1U",[["^ ","^1K",19,"^1L",202],["^ ","^1K",18,"^1L",203,"^G","p__41736"],["^ ","^1K",0,"^1L",204],["^ ","^1K",0,"^1L",204],["^ ","^1K",4,"^1L",204,"^G","map__41737"],["^ ","^1K",17,"^1L",204,"^G","p__41736"],["^ ","^1K",4,"^1L",205,"^G","map__41737"],["^ ","^1K",21,"^1L",205],["^ ","^1K",23,"^1L",205],["^ ","^1K",25,"^1L",205],["^ ","^1K",27,"^1L",205],["^ ","^1K",28,"^1L",205,"^G","map__41737"],["^ ","^1K",42,"^1L",205],["^ ","^1K",50,"^1L",205],["^ ","^1K",52,"^1L",205],["^ ","^1K",54,"^1L",205],["^ ","^1K",55,"^1L",205],["^ ","^1K",55,"^1L",205,"^G","map__41737"],["^ ","^1K",104,"^1L",205],["^ ","^1K",115,"^1L",205],["^ ","^1K",116,"^1L",205,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",205],["^ ","^1K",148,"^1L",205,"^G","map__41737"],["^ ","^1K",179,"^1L",205],["^ ","^1K",184,"^1L",205],["^ ","^1K",191,"^1L",205],["^ ","^1K",199,"^1L",205],["^ ","^1K",199,"^1L",205,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",205,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",205,"^G","map__41737"],["^ ","^1K",276,"^1L",205,"^G","map__41737"],["^ ","^1K",11,"^1L",206],["^ ","^1K",11,"^1L",206,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",55,"^1L",206,"^G","map__41737"],["^ ","^1K",70,"^1L",206],["^ ","^1K",0,"^1L",207]],"^1S",[["^ ","^1K",4,"^1L",206,"^G","body"]],"^2<",[["^ ","^1K",0,"^1L",207]],"^2>",[["^ ","^1K",8,"^1L",207,"^G","on-error"],["^ ","^1K",49,"^1L",207,"^G","on-error"],["^ ","^1K",96,"^1L",207,"^G","on-error"]],"^2J",[["^ ","^1K",88,"^1L",207,"^G","body"],["^ ","^1K",115,"^1L",207,"^G","body"]]],"^2=",["^ ","^2N",[["^ ","^1K",4,"^1L",210,"^G","on-load"]],"^1U",[["^ ","^1K",18,"^1L",210],["^ ","^1K",0,"^1L",212]],"~i31",[["^ ","^1K",18,"^1L",211,"^G","progress"]],"~i41",[["^ ","^1K",0,"^1L",212],["^ ","^1K",0,"^1L",213],["^ ","^1K",0,"^1L",215]],"^2<",[["^ ","^1K",20,"^1L",212,"^G","reconciler"]],"~i58",[["^ ","^1K",0,"^1L",213]],"^2O",[["^ ","^1K",7,"^1L",213,"^G","fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2"]],"~i74",[["^ ","^1K",77,"^1L",213,"^G","reconciler"]],"~i85",[["^ ","^1K",88,"^1L",213]],"~i86",[["^ ","^1K",88,"^1L",213,"^G","progress-tx"]],"~i98",[["^ ","^1K",100,"^1L",213,"^G","progress"]]],"~i56",["^ ","^1V",[["^ ","^1K",0,"^1L",219],["^ ","^1K",42,"^1L",219],["^ ","^1K",85,"^1L",219],["^ ","^1K",185,"^1L",219],["^ ","^1K",295,"^1L",219],["^ ","^1K",413,"^1L",219],["^ ","^1K",538,"^1L",219]],"~i14",[["^ ","^1K",7,"^1L",219,"^G","fulcro.client.network/transmit"]],"^1R",[["^ ","^1K",38,"^1L",219,"^G","net"]],"^2=",[["^ ","^1K",178,"^1L",219,"^G","tx"]]],"^2J",["^ ","^2=",[["^ ","^1K",286,"^1L",219,"^G","abort-id"]]],"^2T",["^ ","^2=",[["^ ","^1K",401,"^1L",219,"^G","on-done"]]],"^2O",["^ ","^2=",[["^ ","^1K",525,"^1L",219,"^G","on-error"]]],"^1[",["^ ","^2=",[["^ ","^1K",656,"^1L",219,"^G","on-load"]]],"^2K",["^ ","~i4",[["^ ","^1K",84,"^1L",227,"^G","net"]],"~i8",[["^ ","^1K",88,"^1L",227,"^G","tx"]],"^1N",[["^ ","^1K",91,"^1L",227,"^G","on-done"]],"~i19",[["^ ","^1K",99,"^1L",227,"^G","on-error"]],"^20",[["^ ","^1K",108,"^1L",227,"^G","on-load"]]],"~i62",["^ ","~i3",[["^ ","^1K",0,"^1L",228],["^ ","^1K",82,"^1L",228],["^ ","^1K",125,"^1L",228],["^ ","^1K",176,"^1L",228],["^ ","^1K",243,"^1L",228],["^ ","^1K",313,"^1L",228]],"~i4",[["^ ","^1K",7,"^1L",228,"^G","fulcro.client.impl.application.real_send.cljs$core$IFn$_invoke$arity$2"]],"^2Z",[["^ ","^1K",78,"^1L",228,"^G","net"]],"^1M",[["^ ","^1K",173,"^1L",228,"^G","tx"]],"^25",[["^ ","^1K",235,"^1L",228,"^G","on-done"]],"^2A",[["^ ","^1K",304,"^1L",228,"^G","on-error"]],"~i71",[["^ ","^1K",372,"^1L",228,"^G","on-load"]]],"^2L",["^ ","~i0",[["^ ","^1K",0,"^1L",233],["^ ","^1K",0,"^1L",233],["^ ","^1K",60,"^1L",237],["^ ","^1K",128,"^1L",237,"^G","var_args"],["^ ","^1K",0,"^1L",238],["^ ","^1K",0,"^1L",238],["^ ","^1K",4,"^1L",238,"^G","G__41761"],["^ ","^1K",15,"^1L",238],["^ ","^1K",15,"^1L",238],["^ ","^1K",0,"^1L",239],["^ ","^1K",0,"^1L",239],["^ ","^1K",8,"^1L",239,"^G","G__41761"],["^ ","^1K",5,"^1L",240],["^ ","^1K",0,"^1L",241],["^ ","^1K",7,"^1L",241,"^G","fulcro.client.impl.application/send-with-history-tracking"],["^ ","^1K",95,"^1L",241],["^ ","^1K",96,"^1L",241],["^ ","^1K",106,"^1L",241],["^ ","^1K",112,"^1L",241],["^ ","^1K",113,"^1L",241],["^ ","^1K",123,"^1L",241],["^ ","^1K",5,"^1L",244],["^ ","^1K",0,"^1L",245],["^ ","^1K",7,"^1L",245,"^G","fulcro.client.impl.application/send-with-history-tracking"],["^ ","^1K",95,"^1L",245],["^ ","^1K",96,"^1L",245],["^ ","^1K",106,"^1L",245],["^ ","^1K",112,"^1L",245],["^ ","^1K",113,"^1L",245],["^ ","^1K",123,"^1L",245],["^ ","^1K",129,"^1L",245],["^ ","^1K",130,"^1L",245],["^ ","^1K",140,"^1L",245],["^ ","^1K",146,"^1L",245],["^ ","^1K",147,"^1L",245],["^ ","^1K",157,"^1L",245],["^ ","^1K",163,"^1L",245],["^ ","^1K",164,"^1L",245],["^ ","^1K",174,"^1L",245],["^ ","^1K",180,"^1L",245],["^ ","^1K",181,"^1L",245],["^ ","^1K",191,"^1L",245],["^ ","^1K",0,"^1L",249],["^ ","^1K",6,"^1L",249],["^ ","^1K",11,"^1L",249,"^G","js/Error"],["^ ","^1K",17,"^1L",249],["^ ","^1K",18,"^1L",249],["^ ","^1K",80,"^1L",249],["^ ","^1K",80,"^1L",249],["^ ","^1K",0,"^1L",254],["^ ","^1K",0,"^1L",254],["^ ","^1K",90,"^1L",254],["^ ","^1K",105,"^1L",254,"^G","p__41766"],["^ ","^1K",0,"^1L",255],["^ ","^1K",0,"^1L",255],["^ ","^1K",4,"^1L",255,"^G","map__41768"],["^ ","^1K",17,"^1L",255,"^G","p__41766"],["^ ","^1K",4,"^1L",256,"^G","map__41768"],["^ ","^1K",21,"^1L",256],["^ ","^1K",23,"^1L",256],["^ ","^1K",25,"^1L",256],["^ ","^1K",27,"^1L",256],["^ ","^1K",28,"^1L",256,"^G","map__41768"],["^ ","^1K",42,"^1L",256],["^ ","^1K",50,"^1L",256],["^ ","^1K",52,"^1L",256],["^ ","^1K",54,"^1L",256],["^ ","^1K",55,"^1L",256],["^ ","^1K",55,"^1L",256,"^G","map__41768"],["^ ","^1K",104,"^1L",256],["^ ","^1K",115,"^1L",256],["^ ","^1K",116,"^1L",256,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",256],["^ ","^1K",148,"^1L",256,"^G","map__41768"],["^ ","^1K",179,"^1L",256],["^ ","^1K",184,"^1L",256],["^ ","^1K",191,"^1L",256],["^ ","^1K",199,"^1L",256],["^ ","^1K",199,"^1L",256,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",256,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",256,"^G","map__41768"],["^ ","^1K",276,"^1L",256,"^G","map__41768"],["^ ","^1K",17,"^1L",257],["^ ","^1K",17,"^1L",257,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",61,"^1L",257,"^G","map__41768"],["^ ","^1K",76,"^1L",257],["^ ","^1K",14,"^1L",258],["^ ","^1K",14,"^1L",258,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",58,"^1L",258,"^G","map__41768"],["^ ","^1K",73,"^1L",258],["^ ","^1K",9,"^1L",259],["^ ","^1K",9,"^1L",259,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",53,"^1L",259,"^G","map__41768"],["^ ","^1K",68,"^1L",259],["^ ","^1K",14,"^1L",260],["^ ","^1K",14,"^1L",260,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",58,"^1L",260,"^G","map__41768"],["^ ","^1K",73,"^1L",260],["^ ","^1K",15,"^1L",261],["^ ","^1K",15,"^1L",261,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",59,"^1L",261,"^G","map__41768"],["^ ","^1K",74,"^1L",261],["^ ","^1K",14,"^1L",262],["^ ","^1K",14,"^1L",262,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",58,"^1L",262,"^G","map__41768"],["^ ","^1K",73,"^1L",262],["^ ","^1K",0,"^1L",263],["^ ","^1K",0,"^1L",323],["^ ","^1K",0,"^1L",323],["^ ","^1K",90,"^1L",323],["^ ","^1K",0,"^1L",324],["^ ","^1K",0,"^1L",327],["^ ","^1K",0,"^1L",327],["^ ","^1K",84,"^1L",327],["^ ","^1K",0,"^1L",329]],"~i6",[["^ ","^1K",0,"^1L",237,"^G","fulcro.client.impl.application/send-with-history-tracking"],["^ ","^1K",0,"^1L",254,"^G","fulcro.client.impl.application/send-with-history-tracking"],["^ ","^1K",0,"^1L",323,"^G","fulcro.client.impl.application/send-with-history-tracking"],["^ ","^1K",0,"^1L",327,"^G","fulcro.client.impl.application/send-with-history-tracking"]]],"~i67",["^ ","~i4",[["^ ","^1K",101,"^1L",254,"^G","net"]],"^1X",[["^ ","^1K",4,"^1L",257,"^G","reconciler"]],"^1R",[["^ ","^1K",4,"^1L",258,"^G","payload"]],"^25",[["^ ","^1K",4,"^1L",259,"^G","tx"]],"^27",[["^ ","^1K",4,"^1L",260,"^G","on-done"]],"~i46",[["^ ","^1K",4,"^1L",261,"^G","on-error"]],"^2=",[["^ ","^1K",4,"^1L",262,"^G","on-load"]]],"^2P",["^ ","~i3",[["^ ","^1K",0,"^1L",263],["^ ","^1K",4,"^1L",263,"^G","map__41771"],["^ ","^1K",4,"^1L",264,"^G","map__41771"],["^ ","^1K",21,"^1L",264],["^ ","^1K",23,"^1L",264],["^ ","^1K",25,"^1L",264],["^ ","^1K",27,"^1L",264],["^ ","^1K",28,"^1L",264,"^G","map__41771"],["^ ","^1K",42,"^1L",264],["^ ","^1K",50,"^1L",264],["^ ","^1K",52,"^1L",264],["^ ","^1K",54,"^1L",264],["^ ","^1K",55,"^1L",264],["^ ","^1K",55,"^1L",264,"^G","map__41771"],["^ ","^1K",104,"^1L",264],["^ ","^1K",115,"^1L",264],["^ ","^1K",116,"^1L",264,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",264],["^ ","^1K",148,"^1L",264,"^G","map__41771"],["^ ","^1K",179,"^1L",264],["^ ","^1K",184,"^1L",264],["^ ","^1K",191,"^1L",264],["^ ","^1K",199,"^1L",264],["^ ","^1K",199,"^1L",264,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",264,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",264,"^G","map__41771"],["^ ","^1K",276,"^1L",264,"^G","map__41771"],["^ ","^1K",4,"^1L",265,"^G","history-atom"],["^ ","^1K",19,"^1L",265],["^ ","^1K",19,"^1L",265,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",63,"^1L",265,"^G","map__41771"],["^ ","^1K",78,"^1L",265],["^ ","^1K",4,"^1L",266,"^G","tx-time"],["^ ","^1K",14,"^1L",266],["^ ","^1K",14,"^1L",266,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",58,"^1L",266,"^G","map__41771"],["^ ","^1K",73,"^1L",266],["^ ","^1K",4,"^1L",267,"^G","remote"],["^ ","^1K",13,"^1L",267],["^ ","^1K",13,"^1L",267,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",57,"^1L",267,"^G","map__41771"],["^ ","^1K",72,"^1L",267],["^ ","^1K",4,"^1L",268,"^G","abort-id"],["^ ","^1K",15,"^1L",268],["^ ","^1K",15,"^1L",268,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",59,"^1L",268,"^G","map__41771"],["^ ","^1K",74,"^1L",268],["^ ","^1K",0,"^1L",296]],"~i83",[["^ ","^1K",17,"^1L",263,"^G","payload"]]],"~i69",["^ ","~i9",[["^ ","^1K",4,"^1L",269,"^G","with-history-recording"]],"^23",[["^ ","^1K",29,"^1L",269],["^ ","^1K",0,"^1L",271]],"^21",[["^ ","^1K",18,"^1L",270,"^G","handler"]]],"~i70",["^ ","^24",[["^ ","^1K",0,"^1L",271],["^ ","^1K",0,"^1L",273]],"^1S",[["^ ","^1K",18,"^1L",272,"^G","resp"]],"^2:",[["^ ","^1K",23,"^1L",272,"^G","items-or-tx"]]],"^31",["^ ","~i36",[["^ ","^1K",0,"^1L",273],["^ ","^1K",0,"^1L",285],["^ ","^1K",0,"^1L",287]],"^2I",[["^ ","^1K",20,"^1L",273],["^ ","^1K",37,"^1L",273,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",274],["^ ","^1K",0,"^1L",274],["^ ","^1K",20,"^1L",274,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",275],["^ ","^1K",4,"^1L",275,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",276],["^ ","^1K",0,"^1L",276],["^ ","^1K",20,"^1L",276,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",279,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",282,"^G","and__3938__auto__"]],"^2<",[["^ ","^1K",57,"^1L",273,"^G","history-atom"]],"^1[",[["^ ","^1K",28,"^1L",275,"^G","remote"]],"^32",[["^ ","^1K",0,"^1L",277,"^G","tx-time"]]],"^2C",["^ ","^27",[["^ ","^1K",0,"^1L",285]],"^1S",[["^ ","^1K",0,"^1L",285,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"~i45",[["^ ","^1K",51,"^1L",285,"^G","history-atom"]],"^2T",[["^ ","^1K",64,"^1L",285,"^G","fulcro.history/remote-activity-finished"]],"~i88",[["^ ","^1K",104,"^1L",285,"^G","remote"]],"~i95",[["^ ","^1K",111,"^1L",285,"^G","tx-time"]]],"^2Q",["^ ","^37",[["^ ","^1K",0,"^1L",289]],"^21",[["^ ","^1K",8,"^1L",289,"^G","handler"],["^ ","^1K",48,"^1L",289,"^G","handler"],["^ ","^1K",106,"^1L",289,"^G","handler"]],"^38",[["^ ","^1K",86,"^1L",289,"^G","resp"],["^ ","^1K",124,"^1L",289,"^G","resp"]],"^2@",[["^ ","^1K",91,"^1L",289,"^G","items-or-tx"],["^ ","^1K",129,"^1L",289,"^G","items-or-tx"]]],"^2U",["^ ","~i9",[["^ ","^1K",4,"^1L",294,"^G","on-done"]],"^23",[["^ ","^1K",18,"^1L",294]],"^1Y",[["^ ","^1K",18,"^1L",294,"^G","with-history-recording"]],"^2Y",[["^ ","^1K",41,"^1L",294,"^G","on-done"]]],"~i75",["^ ","~i9",[["^ ","^1K",4,"^1L",295,"^G","on-error"]],"^23",[["^ ","^1K",19,"^1L",295]],"^1Y",[["^ ","^1K",19,"^1L",295,"^G","with-history-recording"]],"^2Y",[["^ ","^1K",42,"^1L",295,"^G","on-error"]]],"^2D",["^ ","~i5",[["^ ","^1K",0,"^1L",296]],"~i9",[["^ ","^1K",20,"^1L",296],["^ ","^1K",37,"^1L",296,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",297],["^ ","^1K",0,"^1L",297],["^ ","^1K",20,"^1L",297,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",298],["^ ","^1K",4,"^1L",298,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",299],["^ ","^1K",0,"^1L",299],["^ ","^1K",20,"^1L",299,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",302,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",305,"^G","and__3938__auto__"]],"^2Z",[["^ ","^1K",57,"^1L",296,"^G","history-atom"]],"^1R",[["^ ","^1K",28,"^1L",298,"^G","tx-time"]],"^25",[["^ ","^1K",0,"^1L",300,"^G","remote"]]],"~i77",["^ ","~i7",[["^ ","^1K",0,"^1L",308]],"~i8",[["^ ","^1K",0,"^1L",308,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^2Z",[["^ ","^1K",51,"^1L",308,"^G","history-atom"]],"^1R",[["^ ","^1K",64,"^1L",308,"^G","fulcro.history/remote-activity-started"]],"^2Y",[["^ ","^1K",103,"^1L",308,"^G","remote"]],"~i63",[["^ ","^1K",110,"^1L",308,"^G","tx-time"]]],"~i78",["^ ","~i7",[["^ ","^1K",0,"^1L",310],["^ ","^1K",4,"^1L",310],["^ ","^1K",4,"^1L",310],["^ ","^1K",4,"^1L",310,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",61,"^1L",310],["^ ","^1K",104,"^1L",310],["^ ","^1K",158,"^1L",310],["^ ","^1K",191,"^1L",310],["^ ","^1K",243,"^1L",310],["^ ","^1K",254,"^1L",310],["^ ","^1K",357,"^1L",310],["^ ","^1K",16,"^1L",311],["^ ","^1K",19,"^1L",311],["^ ","^1K",20,"^1L",311,"^G","e41774"],["^ ","^1K",38,"^1L",311,"^G","js/Error"],["^ ","^1K",0,"^1L",312],["^ ","^1K",4,"^1L",312,"^G","e__31527__auto__"],["^ ","^1K",29,"^1L",312,"^G","e41774"],["^ ","^1K",0,"^1L",313],["^ ","^1K",0,"^1L",313],["^ ","^1K",0,"^1L",313,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",57,"^1L",313],["^ ","^1K",100,"^1L",313],["^ ","^1K",154,"^1L",313],["^ ","^1K",187,"^1L",313],["^ ","^1K",239,"^1L",313],["^ ","^1K",250,"^1L",313],["^ ","^1K",353,"^1L",313],["^ ","^1K",406,"^1L",313,"^G","e__31527__auto__"],["^ ","^1K",0,"^1L",315],["^ ","^1K",0,"^1L",315],["^ ","^1K",6,"^1L",315,"^G","e41774"]]],"^2E",["^ ","~i5",[["^ ","^1K",0,"^1L",320],["^ ","^1K",82,"^1L",320],["^ ","^1K",125,"^1L",320],["^ ","^1K",202,"^1L",320],["^ ","^1K",253,"^1L",320],["^ ","^1K",324,"^1L",320],["^ ","^1K",398,"^1L",320],["^ ","^1K",465,"^1L",320]],"~i6",[["^ ","^1K",7,"^1L",320,"^G","fulcro.client.impl.application.real_send.cljs$core$IFn$_invoke$arity$2"]],"^1X",[["^ ","^1K",78,"^1L",320,"^G","net"]],"^1Y",[["^ ","^1K",191,"^1L",320,"^G","reconciler"]],"^2>",[["^ ","^1K",250,"^1L",320,"^G","tx"]],"^1[",[["^ ","^1K",312,"^1L",320,"^G","on-done"]],"^3>",[["^ ","^1K",385,"^1L",320,"^G","on-error"]],"^2G",[["^ ","^1K",457,"^1L",320,"^G","on-load"]],"~i114",[["^ ","^1K",526,"^1L",320,"^G","abort-id"]]],"~i80",["^ ","~i4",[["^ ","^1K",101,"^1L",323,"^G","payload"]],"^1Q",[["^ ","^1K",109,"^1L",323,"^G","net"]],"^1X",[["^ ","^1K",113,"^1L",323,"^G","tx"]],"^2[",[["^ ","^1K",116,"^1L",323,"^G","on-done"]],"^1R",[["^ ","^1K",124,"^1L",323,"^G","on-error"]],"^37",[["^ ","^1K",133,"^1L",323,"^G","on-load"]]],"~i81",["^ ","~i3",[["^ ","^1K",0,"^1L",324],["^ ","^1K",99,"^1L",324],["^ ","^1K",142,"^1L",324],["^ ","^1K",209,"^1L",324],["^ ","^1K",260,"^1L",324],["^ ","^1K",327,"^1L",324],["^ ","^1K",397,"^1L",324]],"~i4",[["^ ","^1K",7,"^1L",324,"^G","fulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2"]],"^2R",[["^ ","^1K",95,"^1L",324,"^G","net"]],"^38",[["^ ","^1K",201,"^1L",324,"^G","payload"]],"^2J",[["^ ","^1K",257,"^1L",324,"^G","tx"]],"^35",[["^ ","^1K",319,"^1L",324,"^G","on-done"]],"^2F",[["^ ","^1K",388,"^1L",324,"^G","on-error"]],"~i105",[["^ ","^1K",456,"^1L",324,"^G","on-load"]]],"^34",["^ ","~i0",[["^ ","^1K",0,"^1L",329],["^ ","^1K",49,"^1L",343],["^ ","^1K",0,"^1L",344]],"~i6",[["^ ","^1K",0,"^1L",343,"^G","fulcro.client.impl.application/split-mutations"]]],"^2G",["^ ","~i3",[["^ ","^1K",106,"^1L",343,"^G","tx"]]],"~i97",["^ ","~i2",[["^ ","^1K",0,"^1L",344],["^ ","^1K",3,"^1L",344]],"^1Z",[["^ ","^1K",5,"^1L",344]],"^1W",[["^ ","^1K",7,"^1L",344]],"^1X",[["^ ","^1K",7,"^1L",344,"^G","cljs.core/vector?"]],"^1O",[["^ ","^1K",31,"^1L",344,"^G","tx"]],"^20",[["^ ","^1K",40,"^1L",344]],"^22",[["^ ","^1K",40,"^1L",344,"^G","cljs.core/every?"]],"^37",[["^ ","^1K",63,"^1L",344],["^ ","^1K",0,"^1L",345]],"^2S",[["^ ","^1K",74,"^1L",344,"^G","t"]],"^2:",[["^ ","^1K",0,"^1L",345],["^ ","^1K",4,"^1L",345,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",346],["^ ","^1K",0,"^1L",346],["^ ","^1K",20,"^1L",346,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",347,"^G","or__3949__auto__"]],"^2>",[["^ ","^1K",23,"^1L",345]],"^2?",[["^ ","^1K",23,"^1L",345,"^G","fulcro.util/mutation-join?"]],"^36",[["^ ","^1K",56,"^1L",345,"^G","t"]],"^2Q",[["^ ","^1K",0,"^1L",349]],"^3>",[["^ ","^1K",9,"^1L",349]],"^2E",[["^ ","^1K",9,"^1L",349,"^G","cljs.core/list?"]],"^2V",[["^ ","^1K",31,"^1L",349,"^G","t"]],"^39",[["^ ","^1K",39,"^1L",349],["^ ","^1K",70,"^1L",349,"^G","cljs.core/Symbol"]],"^3C",[["^ ","^1K",40,"^1L",349]],"^2X",[["^ ","^1K",40,"^1L",349,"^G","cljs.core/first"]],"~i104",[["^ ","^1K",56,"^1L",349,"^G","t"]],"~i111",[["^ ","^1K",3,"^1L",351,"^G","tx"]]],"^2X",["^ ","~i4",[["^ ","^1K",0,"^1L",352],["^ ","^1K",0,"^1L",361]]],"~i99",["^ ","~i6",[["^ ","^1K",0,"^1L",352],["^ ","^1K",4,"^1L",352],["^ ","^1K",4,"^1L",352],["^ ","^1K",4,"^1L",352,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",61,"^1L",352],["^ ","^1K",104,"^1L",352],["^ ","^1K",158,"^1L",352],["^ ","^1K",191,"^1L",352],["^ ","^1K",243,"^1L",352],["^ ","^1K",255,"^1L",352],["^ ","^1K",360,"^1L",352],["^ ","^1K",16,"^1L",353],["^ ","^1K",19,"^1L",353],["^ ","^1K",20,"^1L",353,"^G","e41807"],["^ ","^1K",38,"^1L",353,"^G","js/Error"],["^ ","^1K",0,"^1L",354],["^ ","^1K",4,"^1L",354,"^G","e__31527__auto__"],["^ ","^1K",29,"^1L",354,"^G","e41807"],["^ ","^1K",0,"^1L",355],["^ ","^1K",0,"^1L",355],["^ ","^1K",0,"^1L",355,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",57,"^1L",355],["^ ","^1K",100,"^1L",355],["^ ","^1K",154,"^1L",355],["^ ","^1K",187,"^1L",355],["^ ","^1K",239,"^1L",355],["^ ","^1K",251,"^1L",355],["^ ","^1K",356,"^1L",355],["^ ","^1K",409,"^1L",355,"^G","e__31527__auto__"],["^ ","^1K",0,"^1L",357],["^ ","^1K",0,"^1L",357],["^ ","^1K",6,"^1L",357,"^G","e41807"]],"~i119",[["^ ","^1K",462,"^1L",352,"^G","tx"]]],"~i100",["^ ","~i7",[["^ ","^1K",90,"^1L",361,"^G","tx"]]],"~i101",["^ ","~i4",[["^ ","^1K",0,"^1L",363],["^ ","^1K",0,"^1L",364]],"~i8",[["^ ","^1K",3,"^1L",363]],"~i9",[["^ ","^1K",3,"^1L",363,"^G","cljs.core/empty?"]],"^1X",[["^ ","^1K",26,"^1L",363,"^G","tx"]]],"~i103",["^ ","~i6",[["^ ","^1K",0,"^1L",366],["^ ","^1K",4,"^1L",398,"^G","map__41810"],["^ ","^1K",4,"^1L",411,"^G","map__41810"],["^ ","^1K",21,"^1L",411],["^ ","^1K",23,"^1L",411],["^ ","^1K",25,"^1L",411],["^ ","^1K",27,"^1L",411],["^ ","^1K",28,"^1L",411,"^G","map__41810"],["^ ","^1K",42,"^1L",411],["^ ","^1K",50,"^1L",411],["^ ","^1K",52,"^1L",411],["^ ","^1K",54,"^1L",411],["^ ","^1K",55,"^1L",411],["^ ","^1K",55,"^1L",411,"^G","map__41810"],["^ ","^1K",104,"^1L",411],["^ ","^1K",115,"^1L",411],["^ ","^1K",116,"^1L",411,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",411],["^ ","^1K",148,"^1L",411,"^G","map__41810"],["^ ","^1K",179,"^1L",411],["^ ","^1K",184,"^1L",411],["^ ","^1K",191,"^1L",411],["^ ","^1K",199,"^1L",411],["^ ","^1K",199,"^1L",411,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",411,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",411,"^G","map__41810"],["^ ","^1K",276,"^1L",411,"^G","map__41810"],["^ ","^1K",19,"^1L",412],["^ ","^1K",19,"^1L",412,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",63,"^1L",412,"^G","map__41810"],["^ ","^1K",78,"^1L",412],["^ ","^1K",14,"^1L",413],["^ ","^1K",14,"^1L",413,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",58,"^1L",413,"^G","map__41810"],["^ ","^1K",73,"^1L",413],["^ ","^1K",0,"^1L",414]],"^1Q",[["^ ","^1K",4,"^1L",366,"^G","dispatch-symbols"]],"^2;",[["^ ","^1K",23,"^1L",366],["^ ","^1K",0,"^1L",367]],"^25",[["^ ","^1K",34,"^1L",366,"^G","tx"]]],"^3D",["^ ","^23",[["^ ","^1K",0,"^1L",367],["^ ","^1K",52,"^1L",367]],"^1Y",[["^ ","^1K",7,"^1L",367,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]]],"^3B",["^ ","^24",[["^ ","^1K",86,"^1L",367]],"^25",[["^ ","^1K",86,"^1L",367,"^G","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]],"^29",[["^ ","^1K",131,"^1L",367],["^ ","^1K",175,"^1L",367]],"^2S",[["^ ","^1K",131,"^1L",367,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^2H",[["^ ","^1K",228,"^1L",367]],"^2M",[["^ ","^1K",228,"^1L",367,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^2O",[["^ ","^1K",275,"^1L",367,"^G","cljs.core/symbol?"]]],"~i106",["^ ","^24",[["^ ","^1K",301,"^1L",367],["^ ","^1K",318,"^1L",367,"^G","G__41811"],["^ ","^1K",4,"^1L",368,"^G","G__41811"],["^ ","^1K",19,"^1L",368],["^ ","^1K",21,"^1L",368],["^ ","^1K",22,"^1L",368,"^G","G__41811"],["^ ","^1K",34,"^1L",368],["^ ","^1K",41,"^1L",368],["^ ","^1K",46,"^1L",368],["^ ","^1K",85,"^1L",368,"^G","G__41811"],["^ ","^1K",0,"^1L",369],["^ ","^1K",0,"^1L",369],["^ ","^1K",3,"^1L",369],["^ ","^1K",4,"^1L",369,"^G","G__41811"],["^ ","^1K",20,"^1L",369],["^ ","^1K",0,"^1L",370],["^ ","^1K",0,"^1L",372],["^ ","^1K",7,"^1L",372],["^ ","^1K",98,"^1L",372,"^G","G__41811"]],"^2I",[["^ ","^1K",329,"^1L",367,"^G","tx"]],"^38",[["^ ","^1K",46,"^1L",368,"^G","fulcro.client.primitives/query->ast"]]],"~i107",["^ ","^1Q",[["^ ","^1K",4,"^1L",376,"^G","compatible-abort?"]],"^2;",[["^ ","^1K",30,"^1L",376],["^ ","^1K",0,"^1L",378]],"^25",[["^ ","^1K",18,"^1L",377,"^G","tx1"]],"^1S",[["^ ","^1K",22,"^1L",377,"^G","tx2"]]],"~i108",["^ ","^23",[["^ ","^1K",0,"^1L",378],["^ ","^1K",0,"^1L",380]],"^27",[["^ ","^1K",4,"^1L",378,"^G","a1"]],"^2S",[["^ ","^1K",9,"^1L",378]],"^2I",[["^ ","^1K",9,"^1L",378,"^G","fulcro.client.mutations/abort-ids"]],"^2B",[["^ ","^1K",43,"^1L",378,"^G","tx1"]]],"~i109",["^ ","^27",[["^ ","^1K",4,"^1L",379,"^G","a2"]],"^2S",[["^ ","^1K",9,"^1L",379]],"^2I",[["^ ","^1K",9,"^1L",379,"^G","fulcro.client.mutations/abort-ids"]],"^2B",[["^ ","^1K",43,"^1L",379,"^G","tx2"]]],"~i110",["^ ","^24",[["^ ","^1K",0,"^1L",380]]],"^3E",["^ ","^37",[["^ ","^1K",9,"^1L",380]],"^2S",[["^ ","^1K",11,"^1L",380],["^ ","^1K",56,"^1L",380]],"^2I",[["^ ","^1K",11,"^1L",380,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^33",[["^ ","^1K",60,"^1L",380]],"^2<",[["^ ","^1K",60,"^1L",380,"^G","cljs.core/count"]],"^2A",[["^ ","^1K",76,"^1L",380,"^G","a1"]],"^2T",[["^ ","^1K",86,"^1L",380]],"^2O",[["^ ","^1K",86,"^1L",380,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2K",[["^ ","^1K",131,"^1L",380,"^G","a1"]],"^2L",[["^ ","^1K",134,"^1L",380,"^G","a2"]]],"~i112",["^ ","^37",[["^ ","^1K",145,"^1L",380]],"^2S",[["^ ","^1K",147,"^1L",380]],"^2I",[["^ ","^1K",147,"^1L",380,"^G","cljs.core/empty?"]],"^2?",[["^ ","^1K",170,"^1L",380,"^G","a1"]],"^2A",[["^ ","^1K",179,"^1L",380]],"^2B",[["^ ","^1K",179,"^1L",380,"^G","cljs.core/empty?"]],"^2K",[["^ ","^1K",202,"^1L",380,"^G","a2"]]],"~i113",["^ ","^1Q",[["^ ","^1K",4,"^1L",383,"^G","can-be-included?"]],"^2;",[["^ ","^1K",29,"^1L",383],["^ ","^1K",0,"^1L",385]],"^25",[["^ ","^1K",18,"^1L",384,"^G","tx"]],"^27",[["^ ","^1K",25,"^1L",384,"^G","expr"]]],"^3?",["^ ","^23",[["^ ","^1K",0,"^1L",385],["^ ","^1K",4,"^1L",385,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",386],["^ ","^1K",0,"^1L",386],["^ ","^1K",3,"^1L",386,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",387,"^G","or__3949__auto__"]]],"~i115",["^ ","^24",[["^ ","^1K",23,"^1L",385]],"^25",[["^ ","^1K",23,"^1L",385,"^G","cljs.core/empty?"]],"^2I",[["^ ","^1K",46,"^1L",385,"^G","tx"]]],"~i116",["^ ","^24",[["^ ","^1K",0,"^1L",389],["^ ","^1K",4,"^1L",389,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",390],["^ ","^1K",0,"^1L",390],["^ ","^1K",20,"^1L",390,"^G","and__3938__auto__"],["^ ","^1K",0,"^1L",393,"^G","and__3938__auto__"]]],"~i117",["^ ","^37",[["^ ","^1K",24,"^1L",389],["^ ","^1K",55,"^1L",389]],"^21",[["^ ","^1K",24,"^1L",389,"^G","compatible-abort?"]],"^2=",[["^ ","^1K",48,"^1L",389,"^G","tx"]],"^2O",[["^ ","^1K",138,"^1L",389,"^G","expr"]]],"~i118",["^ ","^37",[["^ ","^1K",0,"^1L",391]],"^21",[["^ ","^1K",7,"^1L",391,"^G","cljs.core/empty?"]],"^2:",[["^ ","^1K",30,"^1L",391]],"^38",[["^ ","^1K",30,"^1L",391,"^G","clojure.set.intersection.cljs$core$IFn$_invoke$arity$2"]],"^30",[["^ ","^1K",85,"^1L",391]],"^3=",[["^ ","^1K",85,"^1L",391,"^G","dispatch-symbols"]],"^3@",[["^ ","^1K",102,"^1L",391,"^G","tx"]],"~i84",[["^ ","^1K",110,"^1L",391],["^ ","^1K",127,"^1L",391]],"^2V",[["^ ","^1K",110,"^1L",391,"^G","dispatch-symbols"]],"^3J",[["^ ","^1K",210,"^1L",391,"^G","expr"]]],"^3G",["^ ","^1J",[["^ ","^1K",4,"^1L",412,"^G","transactions"]],"^1Y",[["^ ","^1K",4,"^1L",413,"^G","current"]],"~i43",[["^ ","^1K",17,"^1L",398],["^ ","^1K",1,"^1L",410],["^ ","^1K",44,"^1L",410],["^ ","^1K",114,"^1L",410],["^ ","^1K",147,"^1L",410],["^ ","^1K",207,"^1L",410]],"^2:",[["^ ","^1K",17,"^1L",398,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]]],"~i120",["^ ","^38",[["^ ","^1K",64,"^1L",398],["^ ","^1K",18,"^1L",399,"^G","p__41824"],["^ ","^1K",0,"^1L",400],["^ ","^1K",0,"^1L",400],["^ ","^1K",4,"^1L",400,"^G","map__41825"],["^ ","^1K",17,"^1L",400,"^G","p__41824"],["^ ","^1K",4,"^1L",401,"^G","map__41825"],["^ ","^1K",21,"^1L",401],["^ ","^1K",23,"^1L",401],["^ ","^1K",25,"^1L",401],["^ ","^1K",27,"^1L",401],["^ ","^1K",28,"^1L",401,"^G","map__41825"],["^ ","^1K",42,"^1L",401],["^ ","^1K",50,"^1L",401],["^ ","^1K",52,"^1L",401],["^ ","^1K",54,"^1L",401],["^ ","^1K",55,"^1L",401],["^ ","^1K",55,"^1L",401,"^G","map__41825"],["^ ","^1K",104,"^1L",401],["^ ","^1K",115,"^1L",401],["^ ","^1K",116,"^1L",401,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",401],["^ ","^1K",148,"^1L",401,"^G","map__41825"],["^ ","^1K",179,"^1L",401],["^ ","^1K",184,"^1L",401],["^ ","^1K",191,"^1L",401],["^ ","^1K",199,"^1L",401],["^ ","^1K",199,"^1L",401,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",401,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",401,"^G","map__41825"],["^ ","^1K",276,"^1L",401,"^G","map__41825"],["^ ","^1K",10,"^1L",402,"^G","map__41825"],["^ ","^1K",14,"^1L",403],["^ ","^1K",14,"^1L",403,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",58,"^1L",403,"^G","map__41825"],["^ ","^1K",73,"^1L",403],["^ ","^1K",0,"^1L",404]],"^2T",[["^ ","^1K",4,"^1L",403,"^G","current"]],"^31",[["^ ","^1K",4,"^1L",402,"^G","acc"]],"^2D",[["^ ","^1K",27,"^1L",399,"^G","expr"]]],"~i121",["^ ","^2<",[["^ ","^1K",0,"^1L",404]],"^2H",[["^ ","^1K",20,"^1L",404]],"^2M",[["^ ","^1K",20,"^1L",404,"^G","can-be-included?"]],"^35",[["^ ","^1K",43,"^1L",404,"^G","current"]],"^3<",[["^ ","^1K",51,"^1L",404,"^G","expr"]]],"~i122",["^ ","^2?",[["^ ","^1K",0,"^1L",405],["^ ","^1K",58,"^1L",405]],"^2@",[["^ ","^1K",7,"^1L",405,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^2J",[["^ ","^1K",54,"^1L",405,"^G","acc"]],"^36",[["^ ","^1K",118,"^1L",405,"^G","cljs.core/conj"]],"^3;",[["^ ","^1K",133,"^1L",405,"^G","expr"]]],"~i123",["^ ","^2A",[["^ ","^1K",100,"^1L",407,"^G","acc"]]],"~i124",["^ ","^2H",[["^ ","^1K",53,"^1L",407],["^ ","^1K",104,"^1L",407]],"^2M",[["^ ","^1K",53,"^1L",407,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^2Q",[["^ ","^1K",174,"^1L",407,"^G","cljs.core/conj"]],"^3>",[["^ ","^1K",189,"^1L",407,"^G","current"]]],"~i125",["^ ","^2H",[["^ ","^1K",0,"^1L",407],["^ ","^1K",198,"^1L",407],["^ ","^1K",258,"^1L",407]],"^2M",[["^ ","^1K",7,"^1L",407,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2P",[["^ ","^1K",341,"^1L",407,"^G","expr"]]],"~i127",["^ ","^38",[["^ ","^1K",248,"^1L",410,"^G","tx"]]],"~i128",["^ ","~i8",[["^ ","^1K",0,"^1L",414]],"^1Q",[["^ ","^1K",3,"^1L",414]],"^1V",[["^ ","^1K",3,"^1L",414,"^G","cljs.core/empty?"]],"^1J",[["^ ","^1K",26,"^1L",414,"^G","current"]]],"~i129",["^ ","^1Z",[["^ ","^1K",0,"^1L",415,"^G","transactions"]]],"~i130",["^ ","^1Z",[["^ ","^1K",0,"^1L",417]],"^1N",[["^ ","^1K",7,"^1L",417,"^G","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^1X",[["^ ","^1K",52,"^1L",417,"^G","transactions"]],"^22",[["^ ","^1K",65,"^1L",417,"^G","current"]]],"~i132",["^ ","~i0",[["^ ","^1K",0,"^1L",422],["^ ","^1K",51,"^1L",430],["^ ","^1K",110,"^1L",430,"^G","p__41859"],["^ ","^1K",0,"^1L",431],["^ ","^1K",0,"^1L",431],["^ ","^1K",4,"^1L",431,"^G","map__41860"],["^ ","^1K",17,"^1L",431,"^G","p__41859"],["^ ","^1K",4,"^1L",432,"^G","map__41860"],["^ ","^1K",21,"^1L",432],["^ ","^1K",23,"^1L",432],["^ ","^1K",25,"^1L",432],["^ ","^1K",27,"^1L",432],["^ ","^1K",28,"^1L",432,"^G","map__41860"],["^ ","^1K",42,"^1L",432],["^ ","^1K",50,"^1L",432],["^ ","^1K",52,"^1L",432],["^ ","^1K",54,"^1L",432],["^ ","^1K",55,"^1L",432],["^ ","^1K",55,"^1L",432,"^G","map__41860"],["^ ","^1K",104,"^1L",432],["^ ","^1K",115,"^1L",432],["^ ","^1K",116,"^1L",432,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",432],["^ ","^1K",148,"^1L",432,"^G","map__41860"],["^ ","^1K",179,"^1L",432],["^ ","^1K",184,"^1L",432],["^ ","^1K",191,"^1L",432],["^ ","^1K",199,"^1L",432],["^ ","^1K",199,"^1L",432,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",432,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",432,"^G","map__41860"],["^ ","^1K",276,"^1L",432,"^G","map__41860"],["^ ","^1K",10,"^1L",433,"^G","map__41860"],["^ ","^1K",17,"^1L",434],["^ ","^1K",17,"^1L",434,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",61,"^1L",434,"^G","map__41860"],["^ ","^1K",76,"^1L",434],["^ ","^1K",18,"^1L",435],["^ ","^1K",18,"^1L",435,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",62,"^1L",435,"^G","map__41860"],["^ ","^1K",77,"^1L",435],["^ ","^1K",0,"^1L",436]],"~i6",[["^ ","^1K",0,"^1L",430,"^G","fulcro.client.impl.application/enqueue-mutations"]]],"~i139",["^ ","^1N",[["^ ","^1K",4,"^1L",434,"^G","reconciler"]],"^28",[["^ ","^1K",4,"^1L",435,"^G","send-queues"]],"^1S",[["^ ","^1K",4,"^1L",433,"^G","app"]],"^2:",[["^ ","^1K",119,"^1L",430,"^G","remote-tx-map"]],"^2T",[["^ ","^1K",133,"^1L",430,"^G","cb"]]],"~i141",["^ ","~i2",[["^ ","^1K",0,"^1L",436],["^ ","^1K",0,"^1L",437]],"~i8",[["^ ","^1K",4,"^1L",436,"^G","history"]],"^1X",[["^ ","^1K",14,"^1L",436]],"^2N",[["^ ","^1K",14,"^1L",436,"^G","fulcro.client.primitives/get-history"]],"^24",[["^ ","^1K",51,"^1L",436,"^G","reconciler"]]],"~i142",["^ ","~i4",[["^ ","^1K",0,"^1L",437],["^ ","^1K",4,"^1L",437,"^G","seq__41864"],["^ ","^1K",17,"^1L",437],["^ ","^1K",17,"^1L",437,"^G","cljs.core/seq"],["^ ","^1K",4,"^1L",438,"^G","chunk__41865"],["^ ","^1K",19,"^1L",438],["^ ","^1K",4,"^1L",439,"^G","count__41866"],["^ ","^1K",19,"^1L",439],["^ ","^1K",4,"^1L",440,"^G","i__41867"],["^ ","^1K",15,"^1L",440],["^ ","^1K",0,"^1L",442],["^ ","^1K",0,"^1L",442],["^ ","^1K",3,"^1L",442],["^ ","^1K",3,"^1L",442],["^ ","^1K",4,"^1L",442,"^G","i__41867"],["^ ","^1K",15,"^1L",442,"^G","count__41866"],["^ ","^1K",0,"^1L",443],["^ ","^1K",13,"^1L",443],["^ ","^1K",13,"^1L",443,"^G","chunk__41865"],["^ ","^1K",63,"^1L",443,"^G","i__41867"],["^ ","^1K",0,"^1L",444],["^ ","^1K",0,"^1L",444],["^ ","^1K",0,"^1L",568],["^ ","^1K",0,"^1L",569],["^ ","^1K",15,"^1L",569,"^G","seq__41864"],["^ ","^1K",15,"^1L",570,"^G","chunk__41865"],["^ ","^1K",15,"^1L",571,"^G","count__41866"],["^ ","^1K",15,"^1L",572],["^ ","^1K",16,"^1L",572,"^G","i__41867"],["^ ","^1K",27,"^1L",572],["^ ","^1K",0,"^1L",579],["^ ","^1K",4,"^1L",579,"^G","temp__5457__auto__"],["^ ","^1K",25,"^1L",579],["^ ","^1K",25,"^1L",579,"^G","cljs.core/seq"],["^ ","^1K",39,"^1L",579,"^G","seq__41864"],["^ ","^1K",0,"^1L",580],["^ ","^1K",0,"^1L",580],["^ ","^1K",3,"^1L",580,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",581],["^ ","^1K",0,"^1L",581],["^ ","^1K",4,"^1L",581,"^G","seq__41864"],["^ ","^1K",21,"^1L",581,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",582],["^ ","^1K",0,"^1L",582],["^ ","^1K",3,"^1L",582],["^ ","^1K",3,"^1L",582,"^G","cljs.core/chunked-seq?"],["^ ","^1K",32,"^1L",582,"^G","seq__41864"],["^ ","^1K",0,"^1L",583],["^ ","^1K",4,"^1L",583,"^G","c__4351__auto__"],["^ ","^1K",22,"^1L",583],["^ ","^1K",22,"^1L",583,"^G","cljs.core/chunk-first"],["^ ","^1K",44,"^1L",583,"^G","seq__41864"],["^ ","^1K",0,"^1L",584],["^ ","^1K",0,"^1L",584],["^ ","^1K",15,"^1L",584],["^ ","^1K",15,"^1L",584,"^G","cljs.core/chunk-rest"],["^ ","^1K",36,"^1L",584,"^G","seq__41864"],["^ ","^1K",15,"^1L",585,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",586],["^ ","^1K",15,"^1L",586,"^G","cljs.core/count"],["^ ","^1K",31,"^1L",586,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",587],["^ ","^1K",0,"^1L",594],["^ ","^1K",13,"^1L",594],["^ ","^1K",13,"^1L",594,"^G","cljs.core/first"],["^ ","^1K",29,"^1L",594,"^G","seq__41864"],["^ ","^1K",0,"^1L",595],["^ ","^1K",0,"^1L",595],["^ ","^1K",0,"^1L",719],["^ ","^1K",0,"^1L",720],["^ ","^1K",15,"^1L",720],["^ ","^1K",15,"^1L",720,"^G","cljs.core/next"],["^ ","^1K",30,"^1L",720,"^G","seq__41864"],["^ ","^1K",15,"^1L",721],["^ ","^1K",15,"^1L",722],["^ ","^1K",15,"^1L",723],["^ ","^1K",0,"^1L",731]],"^1Q",[["^ ","^1K",4,"^1L",443,"^G","remote"],["^ ","^1K",4,"^1L",594,"^G","remote"]],"^2[",[["^ ","^1K",31,"^1L",437]],"^1J",[["^ ","^1K",31,"^1L",437,"^G","cljs.core/keys"]],"^1P",[["^ ","^1K",46,"^1L",437,"^G","remote-tx-map"]]],"~i143",["^ ","~i6",[["^ ","^1K",0,"^1L",444],["^ ","^1K",0,"^1L",507],["^ ","^1K",0,"^1L",595],["^ ","^1K",0,"^1L",658]],"^1Q",[["^ ","^1K",4,"^1L",444,"^G","queue"],["^ ","^1K",4,"^1L",595,"^G","queue"]],"^21",[["^ ","^1K",18,"^1L",444],["^ ","^1K",18,"^1L",595]],"^27",[["^ ","^1K",18,"^1L",444,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",18,"^1L",595,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2I",[["^ ","^1K",62,"^1L",444,"^G","send-queues"],["^ ","^1K",62,"^1L",595,"^G","send-queues"]],"^2B",[["^ ","^1K",74,"^1L",444,"^G","remote"],["^ ","^1K",74,"^1L",595,"^G","remote"]]],"~i144",["^ ","^1Q",[["^ ","^1K",4,"^1L",445,"^G","full-remote-transaction"],["^ ","^1K",4,"^1L",596,"^G","full-remote-transaction"]],"^21",[["^ ","^1K",36,"^1L",445],["^ ","^1K",36,"^1L",596]],"^27",[["^ ","^1K",36,"^1L",445,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",36,"^1L",596,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2I",[["^ ","^1K",80,"^1L",445,"^G","remote-tx-map"],["^ ","^1K",80,"^1L",596,"^G","remote-tx-map"]],"^2Y",[["^ ","^1K",94,"^1L",445,"^G","remote"],["^ ","^1K",94,"^1L",596,"^G","remote"]]],"~i145",["^ ","^1Q",[["^ ","^1K",4,"^1L",446,"^G","refresh-set"],["^ ","^1K",4,"^1L",597,"^G","refresh-set"]],"^21",[["^ ","^1K",24,"^1L",446],["^ ","^1K",41,"^1L",446,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",455],["^ ","^1K",0,"^1L",455],["^ ","^1K",20,"^1L",455,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",456,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",458],["^ ","^1K",24,"^1L",597],["^ ","^1K",41,"^1L",597,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",606],["^ ","^1K",0,"^1L",606],["^ ","^1K",20,"^1L",606,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",607,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",609]],"^2S",[["^ ","^1K",60,"^1L",446],["^ ","^1K",77,"^1L",446,"^G","G__41869"],["^ ","^1K",4,"^1L",447,"^G","G__41869"],["^ ","^1K",19,"^1L",447],["^ ","^1K",21,"^1L",447],["^ ","^1K",22,"^1L",447,"^G","G__41869"],["^ ","^1K",34,"^1L",447],["^ ","^1K",41,"^1L",447],["^ ","^1K",46,"^1L",447],["^ ","^1K",61,"^1L",447,"^G","G__41869"],["^ ","^1K",4,"^1L",448,"^G","G__41869"],["^ ","^1K",19,"^1L",448],["^ ","^1K",21,"^1L",448],["^ ","^1K",22,"^1L",448,"^G","G__41869"],["^ ","^1K",38,"^1L",448],["^ ","^1K",45,"^1L",448],["^ ","^1K",50,"^1L",448],["^ ","^1K",50,"^1L",448],["^ ","^1K",185,"^1L",448,"^G","G__41869"],["^ ","^1K",0,"^1L",449],["^ ","^1K",0,"^1L",449],["^ ","^1K",3,"^1L",449],["^ ","^1K",4,"^1L",449,"^G","G__41869"],["^ ","^1K",20,"^1L",449],["^ ","^1K",0,"^1L",450],["^ ","^1K",0,"^1L",452],["^ ","^1K",21,"^1L",452,"^G","G__41869"],["^ ","^1K",60,"^1L",597],["^ ","^1K",77,"^1L",597,"^G","G__41908"],["^ ","^1K",4,"^1L",598,"^G","G__41908"],["^ ","^1K",19,"^1L",598],["^ ","^1K",21,"^1L",598],["^ ","^1K",22,"^1L",598,"^G","G__41908"],["^ ","^1K",34,"^1L",598],["^ ","^1K",41,"^1L",598],["^ ","^1K",46,"^1L",598],["^ ","^1K",61,"^1L",598,"^G","G__41908"],["^ ","^1K",4,"^1L",599,"^G","G__41908"],["^ ","^1K",19,"^1L",599],["^ ","^1K",21,"^1L",599],["^ ","^1K",22,"^1L",599,"^G","G__41908"],["^ ","^1K",38,"^1L",599],["^ ","^1K",45,"^1L",599],["^ ","^1K",50,"^1L",599],["^ ","^1K",50,"^1L",599],["^ ","^1K",185,"^1L",599,"^G","G__41908"],["^ ","^1K",0,"^1L",600],["^ ","^1K",0,"^1L",600],["^ ","^1K",3,"^1L",600],["^ ","^1K",4,"^1L",600,"^G","G__41908"],["^ ","^1K",20,"^1L",600],["^ ","^1K",0,"^1L",601],["^ ","^1K",0,"^1L",603],["^ ","^1K",21,"^1L",603,"^G","G__41908"]],"^2?",[["^ ","^1K",88,"^1L",446,"^G","full-remote-transaction"],["^ ","^1K",88,"^1L",597,"^G","full-remote-transaction"]],"^2Q",[["^ ","^1K",46,"^1L",447,"^G","cljs.core/meta"],["^ ","^1K",46,"^1L",598,"^G","cljs.core/meta"]],"~i93",[["^ ","^1K",7,"^1L",452,"^G","cljs.core/vec"],["^ ","^1K",7,"^1L",603,"^G","cljs.core/vec"]]],"~i146",["^ ","^1Q",[["^ ","^1K",4,"^1L",461,"^G","tx-time"],["^ ","^1K",4,"^1L",612,"^G","tx-time"]],"^21",[["^ ","^1K",20,"^1L",461],["^ ","^1K",37,"^1L",461,"^G","G__41873"],["^ ","^1K",4,"^1L",462,"^G","G__41873"],["^ ","^1K",19,"^1L",462],["^ ","^1K",21,"^1L",462],["^ ","^1K",22,"^1L",462,"^G","G__41873"],["^ ","^1K",34,"^1L",462],["^ ","^1K",41,"^1L",462],["^ ","^1K",46,"^1L",462],["^ ","^1K",61,"^1L",462,"^G","G__41873"],["^ ","^1K",0,"^1L",463],["^ ","^1K",0,"^1L",463],["^ ","^1K",3,"^1L",463],["^ ","^1K",4,"^1L",463,"^G","G__41873"],["^ ","^1K",20,"^1L",463],["^ ","^1K",0,"^1L",464],["^ ","^1K",0,"^1L",466],["^ ","^1K",7,"^1L",466],["^ ","^1K",122,"^1L",466,"^G","G__41873"],["^ ","^1K",20,"^1L",612],["^ ","^1K",37,"^1L",612,"^G","G__41912"],["^ ","^1K",4,"^1L",613,"^G","G__41912"],["^ ","^1K",19,"^1L",613],["^ ","^1K",21,"^1L",613],["^ ","^1K",22,"^1L",613,"^G","G__41912"],["^ ","^1K",34,"^1L",613],["^ ","^1K",41,"^1L",613],["^ ","^1K",46,"^1L",613],["^ ","^1K",61,"^1L",613,"^G","G__41912"],["^ ","^1K",0,"^1L",614],["^ ","^1K",0,"^1L",614],["^ ","^1K",3,"^1L",614],["^ ","^1K",4,"^1L",614,"^G","G__41912"],["^ ","^1K",20,"^1L",614],["^ ","^1K",0,"^1L",615],["^ ","^1K",0,"^1L",617],["^ ","^1K",7,"^1L",617],["^ ","^1K",122,"^1L",617,"^G","G__41912"]],"^38",[["^ ","^1K",48,"^1L",461,"^G","full-remote-transaction"],["^ ","^1K",48,"^1L",612,"^G","full-remote-transaction"]],"^35",[["^ ","^1K",46,"^1L",462,"^G","cljs.core/meta"],["^ ","^1K",46,"^1L",613,"^G","cljs.core/meta"]]],"~i151",["^ ","^1Q",[["^ ","^1K",4,"^1L",469,"^G","fallback"],["^ ","^1K",4,"^1L",620,"^G","fallback"]],"^21",[["^ ","^1K",21,"^1L",469],["^ ","^1K",21,"^1L",620]],"^27",[["^ ","^1K",21,"^1L",469,"^G","fulcro.client.impl.application/fallback-handler"],["^ ","^1K",21,"^1L",620,"^G","fulcro.client.impl.application/fallback-handler"]],"^2=",[["^ ","^1K",69,"^1L",469,"^G","app"],["^ ","^1K",69,"^1L",620,"^G","app"]],"^2O",[["^ ","^1K",73,"^1L",469,"^G","full-remote-transaction"],["^ ","^1K",73,"^1L",620,"^G","full-remote-transaction"]]],"~i152",["^ ","^1Q",[["^ ","^1K",4,"^1L",470,"^G","desired-remote-mutations"],["^ ","^1K",4,"^1L",621,"^G","desired-remote-mutations"]],"^21",[["^ ","^1K",37,"^1L",470],["^ ","^1K",37,"^1L",621]],"^27",[["^ ","^1K",37,"^1L",470,"^G","fulcro.client.primitives/remove-loads-and-fallbacks"],["^ ","^1K",37,"^1L",621,"^G","fulcro.client.primitives/remove-loads-and-fallbacks"]],"^36",[["^ ","^1K",89,"^1L",470,"^G","full-remote-transaction"],["^ ","^1K",89,"^1L",621,"^G","full-remote-transaction"]]],"~i153",["^ ","^1Q",[["^ ","^1K",4,"^1L",471,"^G","tx-list"],["^ ","^1K",4,"^1L",622,"^G","tx-list"]],"^21",[["^ ","^1K",20,"^1L",471],["^ ","^1K",20,"^1L",622]],"^27",[["^ ","^1K",20,"^1L",471,"^G","fulcro.client.impl.application/split-mutations"],["^ ","^1K",20,"^1L",622,"^G","fulcro.client.impl.application/split-mutations"]],"^2B",[["^ ","^1K",67,"^1L",471,"^G","desired-remote-mutations"],["^ ","^1K",67,"^1L",622,"^G","desired-remote-mutations"]]],"~i154",["^ ","^1Q",[["^ ","^1K",4,"^1L",472,"^G","has-mutations?"],["^ ","^1K",4,"^1L",623,"^G","has-mutations?"]],"^21",[["^ ","^1K",33,"^1L",472],["^ ","^1K",0,"^1L",474],["^ ","^1K",33,"^1L",623],["^ ","^1K",0,"^1L",625]],"^2I",[["^ ","^1K",18,"^1L",473,"^G","tx"],["^ ","^1K",18,"^1L",624,"^G","tx"]],"^33",[["^ ","^1K",0,"^1L",474],["^ ","^1K",30,"^1L",474],["^ ","^1K",0,"^1L",625],["^ ","^1K",30,"^1L",625]],"^2?",[["^ ","^1K",8,"^1L",474],["^ ","^1K",8,"^1L",625]],"^2@",[["^ ","^1K",8,"^1L",474,"^G","cljs.core/count"],["^ ","^1K",8,"^1L",625,"^G","cljs.core/count"]],"^2Y",[["^ ","^1K",24,"^1L",474,"^G","tx"],["^ ","^1K",24,"^1L",625,"^G","tx"]]],"~i155",["^ ","^1Q",[["^ ","^1K",4,"^1L",477,"^G","payload"],["^ ","^1K",4,"^1L",628,"^G","payload"]],"^21",[["^ ","^1K",20,"^1L",477],["^ ","^1K",0,"^1L",479],["^ ","^1K",20,"^1L",628],["^ ","^1K",0,"^1L",630]],"^2I",[["^ ","^1K",18,"^1L",478,"^G","tx"],["^ ","^1K",18,"^1L",629,"^G","tx"]]],"~i156",["^ ","^1S",[["^ ","^1K",0,"^1L",479],["^ ","^1K",0,"^1L",487],["^ ","^1K",0,"^1L",487],["^ ","^1K",50,"^1L",487],["^ ","^1K",154,"^1L",487],["^ ","^1K",253,"^1L",487],["^ ","^1K",358,"^1L",487],["^ ","^1K",467,"^1L",487],["^ ","^1K",577,"^1L",487],["^ ","^1K",1,"^1L",500],["^ ","^1K",0,"^1L",630],["^ ","^1K",0,"^1L",638],["^ ","^1K",0,"^1L",638],["^ ","^1K",50,"^1L",638],["^ ","^1K",154,"^1L",638],["^ ","^1K",253,"^1L",638],["^ ","^1K",358,"^1L",638],["^ ","^1K",467,"^1L",638],["^ ","^1K",577,"^1L",638],["^ ","^1K",1,"^1L",651]],"^38",[["^ ","^1K",4,"^1L",479,"^G","abort-id"],["^ ","^1K",4,"^1L",630,"^G","abort-id"]],"^2B",[["^ ","^1K",15,"^1L",479],["^ ","^1K",32,"^1L",479,"^G","G__41876"],["^ ","^1K",4,"^1L",480,"^G","G__41876"],["^ ","^1K",19,"^1L",480],["^ ","^1K",21,"^1L",480],["^ ","^1K",22,"^1L",480,"^G","G__41876"],["^ ","^1K",34,"^1L",480],["^ ","^1K",41,"^1L",480],["^ ","^1K",46,"^1L",480],["^ ","^1K",80,"^1L",480,"^G","G__41876"],["^ ","^1K",0,"^1L",481],["^ ","^1K",0,"^1L",481],["^ ","^1K",3,"^1L",481],["^ ","^1K",4,"^1L",481,"^G","G__41876"],["^ ","^1K",20,"^1L",481],["^ ","^1K",0,"^1L",482],["^ ","^1K",0,"^1L",484],["^ ","^1K",23,"^1L",484,"^G","G__41876"],["^ ","^1K",15,"^1L",630],["^ ","^1K",32,"^1L",630,"^G","G__41914"],["^ ","^1K",4,"^1L",631,"^G","G__41914"],["^ ","^1K",19,"^1L",631],["^ ","^1K",21,"^1L",631],["^ ","^1K",22,"^1L",631,"^G","G__41914"],["^ ","^1K",34,"^1L",631],["^ ","^1K",41,"^1L",631],["^ ","^1K",46,"^1L",631],["^ ","^1K",80,"^1L",631,"^G","G__41914"],["^ ","^1K",0,"^1L",632],["^ ","^1K",0,"^1L",632],["^ ","^1K",3,"^1L",632],["^ ","^1K",4,"^1L",632,"^G","G__41914"],["^ ","^1K",20,"^1L",632],["^ ","^1K",0,"^1L",633],["^ ","^1K",0,"^1L",635],["^ ","^1K",23,"^1L",635,"^G","G__41914"]],"^30",[["^ ","^1K",43,"^1L",479,"^G","tx"],["^ ","^1K",43,"^1L",630,"^G","tx"]],"~i65",[["^ ","^1K",46,"^1L",480,"^G","fulcro.client.mutations/abort-ids"],["^ ","^1K",46,"^1L",631,"^G","fulcro.client.mutations/abort-ids"]],"^3<",[["^ ","^1K",7,"^1L",484,"^G","cljs.core/first"],["^ ","^1K",7,"^1L",635,"^G","cljs.core/first"]]],"~i157",["^ ","^30",[["^ ","^1K",151,"^1L",487,"^G","tx"],["^ ","^1K",151,"^1L",638,"^G","tx"]]],"~i158",["^ ","^30",[["^ ","^1K",239,"^1L",487,"^G","tx-time"],["^ ","^1K",239,"^1L",638,"^G","tx-time"]]],"~i159",["^ ","^30",[["^ ","^1K",350,"^1L",487,"^G","history"],["^ ","^1K",350,"^1L",638,"^G","history"]]],"~i160",["^ ","^30",[["^ ","^1K",460,"^1L",487,"^G","remote"],["^ ","^1K",460,"^1L",638,"^G","remote"]]],"~i161",["^ ","^30",[["^ ","^1K",568,"^1L",487,"^G","abort-id"],["^ ","^1K",568,"^1L",638,"^G","abort-id"]]],"~i162",["^ ","^30",[["^ ","^1K",694,"^1L",487],["^ ","^1K",0,"^1L",489],["^ ","^1K",694,"^1L",638],["^ ","^1K",0,"^1L",640]],"^32",[["^ ","^1K",18,"^1L",488,"^G","result"],["^ ","^1K",18,"^1L",639,"^G","result"]],"^2U",[["^ ","^1K",25,"^1L",488,"^G","mtx"],["^ ","^1K",25,"^1L",639,"^G","mtx"]]],"~i164",["^ ","^2L",[["^ ","^1K",0,"^1L",489],["^ ","^1K",4,"^1L",489,"^G","G__41881"],["^ ","^1K",4,"^1L",490,"^G","G__41882"],["^ ","^1K",4,"^1L",497,"^G","G__41883"],["^ ","^1K",0,"^1L",498],["^ ","^1K",0,"^1L",498],["^ ","^1K",76,"^1L",498,"^G","G__41881"],["^ ","^1K",85,"^1L",498,"^G","G__41882"],["^ ","^1K",94,"^1L",498,"^G","G__41883"],["^ ","^1K",119,"^1L",498,"^G","G__41881"],["^ ","^1K",128,"^1L",498,"^G","G__41882"],["^ ","^1K",137,"^1L",498,"^G","G__41883"],["^ ","^1K",0,"^1L",640],["^ ","^1K",4,"^1L",640,"^G","G__41916"],["^ ","^1K",4,"^1L",641,"^G","G__41917"],["^ ","^1K",4,"^1L",648,"^G","G__41918"],["^ ","^1K",0,"^1L",649],["^ ","^1K",0,"^1L",649],["^ ","^1K",76,"^1L",649,"^G","G__41916"],["^ ","^1K",85,"^1L",649,"^G","G__41917"],["^ ","^1K",94,"^1L",649,"^G","G__41918"],["^ ","^1K",119,"^1L",649,"^G","G__41916"],["^ ","^1K",128,"^1L",649,"^G","G__41917"],["^ ","^1K",137,"^1L",649,"^G","G__41918"]],"^4E",[["^ ","^1K",8,"^1L",498,"^G","cb"],["^ ","^1K",43,"^1L",498,"^G","cb"],["^ ","^1K",106,"^1L",498,"^G","cb"],["^ ","^1K",8,"^1L",649,"^G","cb"],["^ ","^1K",43,"^1L",649,"^G","cb"],["^ ","^1K",106,"^1L",649,"^G","cb"]],"^2P",[["^ ","^1K",15,"^1L",489,"^G","result"],["^ ","^1K",15,"^1L",640,"^G","result"]],"^3;",[["^ ","^1K",15,"^1L",490],["^ ","^1K",32,"^1L",490,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",491],["^ ","^1K",0,"^1L",491],["^ ","^1K",20,"^1L",491,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",492,"^G","or__3949__auto__"],["^ ","^1K",15,"^1L",641],["^ ","^1K",32,"^1L",641,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",642],["^ ","^1K",0,"^1L",642],["^ ","^1K",20,"^1L",642,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",643,"^G","or__3949__auto__"]],"^2E",[["^ ","^1K",51,"^1L",490,"^G","mtx"],["^ ","^1K",51,"^1L",641,"^G","mtx"]],"^34",[["^ ","^1K",0,"^1L",494,"^G","tx"],["^ ","^1K",0,"^1L",645,"^G","tx"]],"^2F",[["^ ","^1K",15,"^1L",497,"^G","remote"],["^ ","^1K",15,"^1L",648,"^G","remote"]]],"~i165",["^ ","^30",[["^ ","^1K",118,"^1L",500],["^ ","^1K",0,"^1L",502],["^ ","^1K",118,"^1L",651],["^ ","^1K",0,"^1L",653]],"^32",[["^ ","^1K",18,"^1L",501,"^G","result"],["^ ","^1K",18,"^1L",652,"^G","result"]],"^3;",[["^ ","^1K",0,"^1L",502],["^ ","^1K",0,"^1L",653]],"^2D",[["^ ","^1K",8,"^1L",502,"^G","fallback"],["^ ","^1K",55,"^1L",502,"^G","fallback"],["^ ","^1K",110,"^1L",502,"^G","fallback"],["^ ","^1K",8,"^1L",653,"^G","fallback"],["^ ","^1K",55,"^1L",653,"^G","fallback"],["^ ","^1K",110,"^1L",653,"^G","fallback"]],"^2V",[["^ ","^1K",100,"^1L",502,"^G","result"],["^ ","^1K",135,"^1L",502,"^G","result"],["^ ","^1K",100,"^1L",653,"^G","result"],["^ ","^1K",135,"^1L",653,"^G","result"]]],"~i166",["^ ","~i8",[["^ ","^1K",0,"^1L",507],["^ ","^1K",4,"^1L",507,"^G","seq__41884"],["^ ","^1K",23,"^1L",507],["^ ","^1K",23,"^1L",507,"^G","cljs.core/seq"],["^ ","^1K",4,"^1L",508,"^G","chunk__41885"],["^ ","^1K",25,"^1L",508],["^ ","^1K",4,"^1L",509,"^G","count__41886"],["^ ","^1K",25,"^1L",509],["^ ","^1K",4,"^1L",510,"^G","i__41887"],["^ ","^1K",21,"^1L",510],["^ ","^1K",0,"^1L",512],["^ ","^1K",0,"^1L",512],["^ ","^1K",3,"^1L",512],["^ ","^1K",3,"^1L",512],["^ ","^1K",4,"^1L",512,"^G","i__41887"],["^ ","^1K",21,"^1L",512,"^G","count__41886"],["^ ","^1K",0,"^1L",513],["^ ","^1K",15,"^1L",513],["^ ","^1K",15,"^1L",513,"^G","chunk__41885"],["^ ","^1K",71,"^1L",513,"^G","i__41887"],["^ ","^1K",0,"^1L",514],["^ ","^1K",0,"^1L",514],["^ ","^1K",0,"^1L",519],["^ ","^1K",0,"^1L",520],["^ ","^1K",15,"^1L",520,"^G","seq__41884"],["^ ","^1K",15,"^1L",521,"^G","chunk__41885"],["^ ","^1K",15,"^1L",522,"^G","count__41886"],["^ ","^1K",15,"^1L",523],["^ ","^1K",16,"^1L",523,"^G","i__41887"],["^ ","^1K",33,"^1L",523],["^ ","^1K",0,"^1L",530],["^ ","^1K",4,"^1L",530,"^G","temp__5457__auto__"],["^ ","^1K",31,"^1L",530],["^ ","^1K",31,"^1L",530,"^G","cljs.core/seq"],["^ ","^1K",45,"^1L",530,"^G","seq__41884"],["^ ","^1K",0,"^1L",531],["^ ","^1K",0,"^1L",531],["^ ","^1K",3,"^1L",531,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",532],["^ ","^1K",0,"^1L",532],["^ ","^1K",4,"^1L",532,"^G","seq__41884"],["^ ","^1K",27,"^1L",532,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",533],["^ ","^1K",0,"^1L",533],["^ ","^1K",3,"^1L",533],["^ ","^1K",3,"^1L",533,"^G","cljs.core/chunked-seq?"],["^ ","^1K",32,"^1L",533,"^G","seq__41884"],["^ ","^1K",0,"^1L",534],["^ ","^1K",4,"^1L",534,"^G","c__4351__auto__"],["^ ","^1K",28,"^1L",534],["^ ","^1K",28,"^1L",534,"^G","cljs.core/chunk-first"],["^ ","^1K",50,"^1L",534,"^G","seq__41884"],["^ ","^1K",0,"^1L",535],["^ ","^1K",0,"^1L",535],["^ ","^1K",15,"^1L",535],["^ ","^1K",15,"^1L",535,"^G","cljs.core/chunk-rest"],["^ ","^1K",36,"^1L",535,"^G","seq__41884"],["^ ","^1K",15,"^1L",536,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",537],["^ ","^1K",15,"^1L",537,"^G","cljs.core/count"],["^ ","^1K",31,"^1L",537,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",538],["^ ","^1K",0,"^1L",545],["^ ","^1K",15,"^1L",545],["^ ","^1K",15,"^1L",545,"^G","cljs.core/first"],["^ ","^1K",31,"^1L",545,"^G","seq__41884"],["^ ","^1K",0,"^1L",546],["^ ","^1K",0,"^1L",546],["^ ","^1K",0,"^1L",551],["^ ","^1K",0,"^1L",552],["^ ","^1K",15,"^1L",552],["^ ","^1K",15,"^1L",552,"^G","cljs.core/next"],["^ ","^1K",30,"^1L",552,"^G","seq__41884"],["^ ","^1K",15,"^1L",553],["^ ","^1K",15,"^1L",554],["^ ","^1K",15,"^1L",555],["^ ","^1K",0,"^1L",563],["^ ","^1K",0,"^1L",658],["^ ","^1K",4,"^1L",658,"^G","seq__41920"],["^ ","^1K",23,"^1L",658],["^ ","^1K",23,"^1L",658,"^G","cljs.core/seq"],["^ ","^1K",4,"^1L",659,"^G","chunk__41921"],["^ ","^1K",25,"^1L",659],["^ ","^1K",4,"^1L",660,"^G","count__41922"],["^ ","^1K",25,"^1L",660],["^ ","^1K",4,"^1L",661,"^G","i__41923"],["^ ","^1K",21,"^1L",661],["^ ","^1K",0,"^1L",663],["^ ","^1K",0,"^1L",663],["^ ","^1K",3,"^1L",663],["^ ","^1K",3,"^1L",663],["^ ","^1K",4,"^1L",663,"^G","i__41923"],["^ ","^1K",21,"^1L",663,"^G","count__41922"],["^ ","^1K",0,"^1L",664],["^ ","^1K",15,"^1L",664],["^ ","^1K",15,"^1L",664,"^G","chunk__41921"],["^ ","^1K",71,"^1L",664,"^G","i__41923"],["^ ","^1K",0,"^1L",665],["^ ","^1K",0,"^1L",665],["^ ","^1K",0,"^1L",670],["^ ","^1K",0,"^1L",671],["^ ","^1K",15,"^1L",671,"^G","seq__41920"],["^ ","^1K",15,"^1L",672,"^G","chunk__41921"],["^ ","^1K",15,"^1L",673,"^G","count__41922"],["^ ","^1K",15,"^1L",674],["^ ","^1K",16,"^1L",674,"^G","i__41923"],["^ ","^1K",33,"^1L",674],["^ ","^1K",0,"^1L",681],["^ ","^1K",4,"^1L",681,"^G","temp__5457__auto__"],["^ ","^1K",35,"^1L",681],["^ ","^1K",35,"^1L",681,"^G","cljs.core/seq"],["^ ","^1K",49,"^1L",681,"^G","seq__41920"],["^ ","^1K",0,"^1L",682],["^ ","^1K",0,"^1L",682],["^ ","^1K",3,"^1L",682,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",683],["^ ","^1K",0,"^1L",683],["^ ","^1K",4,"^1L",683,"^G","seq__41920"],["^ ","^1K",27,"^1L",683,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",684],["^ ","^1K",0,"^1L",684],["^ ","^1K",3,"^1L",684],["^ ","^1K",3,"^1L",684,"^G","cljs.core/chunked-seq?"],["^ ","^1K",32,"^1L",684,"^G","seq__41920"],["^ ","^1K",0,"^1L",685],["^ ","^1K",4,"^1L",685,"^G","c__4351__auto__"],["^ ","^1K",28,"^1L",685],["^ ","^1K",28,"^1L",685,"^G","cljs.core/chunk-first"],["^ ","^1K",50,"^1L",685,"^G","seq__41920"],["^ ","^1K",0,"^1L",686],["^ ","^1K",0,"^1L",686],["^ ","^1K",15,"^1L",686],["^ ","^1K",15,"^1L",686,"^G","cljs.core/chunk-rest"],["^ ","^1K",36,"^1L",686,"^G","seq__41920"],["^ ","^1K",15,"^1L",687,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",688],["^ ","^1K",15,"^1L",688,"^G","cljs.core/count"],["^ ","^1K",31,"^1L",688,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",689],["^ ","^1K",0,"^1L",696],["^ ","^1K",15,"^1L",696],["^ ","^1K",15,"^1L",696,"^G","cljs.core/first"],["^ ","^1K",31,"^1L",696,"^G","seq__41920"],["^ ","^1K",0,"^1L",697],["^ ","^1K",0,"^1L",697],["^ ","^1K",0,"^1L",702],["^ ","^1K",0,"^1L",703],["^ ","^1K",15,"^1L",703],["^ ","^1K",15,"^1L",703,"^G","cljs.core/next"],["^ ","^1K",30,"^1L",703,"^G","seq__41920"],["^ ","^1K",15,"^1L",704],["^ ","^1K",15,"^1L",705],["^ ","^1K",15,"^1L",706],["^ ","^1K",0,"^1L",714]],"^1X",[["^ ","^1K",4,"^1L",513,"^G","tx"],["^ ","^1K",4,"^1L",545,"^G","tx"],["^ ","^1K",4,"^1L",664,"^G","tx"],["^ ","^1K",4,"^1L",696,"^G","tx"]],"^2[",[["^ ","^1K",37,"^1L",507,"^G","tx-list"],["^ ","^1K",37,"^1L",658,"^G","tx-list"]]],"~i167",["^ ","^1Z",[["^ ","^1K",0,"^1L",514],["^ ","^1K",0,"^1L",515],["^ ","^1K",0,"^1L",517],["^ ","^1K",0,"^1L",546],["^ ","^1K",0,"^1L",547],["^ ","^1K",0,"^1L",549],["^ ","^1K",0,"^1L",665],["^ ","^1K",0,"^1L",666],["^ ","^1K",0,"^1L",668],["^ ","^1K",0,"^1L",697],["^ ","^1K",0,"^1L",698],["^ ","^1K",0,"^1L",700]],"^1X",[["^ ","^1K",20,"^1L",514],["^ ","^1K",20,"^1L",546],["^ ","^1K",20,"^1L",665],["^ ","^1K",20,"^1L",697]],"^2N",[["^ ","^1K",20,"^1L",514,"^G","has-mutations?"],["^ ","^1K",20,"^1L",546,"^G","has-mutations?"],["^ ","^1K",20,"^1L",665,"^G","has-mutations?"],["^ ","^1K",20,"^1L",697,"^G","has-mutations?"]],"^23",[["^ ","^1K",47,"^1L",514,"^G","tx"],["^ ","^1K",47,"^1L",546,"^G","tx"],["^ ","^1K",47,"^1L",665,"^G","tx"],["^ ","^1K",47,"^1L",697,"^G","tx"]]],"~i168",["^ ","^1Q",[["^ ","^1K",0,"^1L",515],["^ ","^1K",0,"^1L",547],["^ ","^1K",0,"^1L",666],["^ ","^1K",0,"^1L",698]],"^1V",[["^ ","^1K",0,"^1L",515,"^G","fulcro.client.impl.application/enqueue"],["^ ","^1K",0,"^1L",547,"^G","fulcro.client.impl.application/enqueue"],["^ ","^1K",0,"^1L",666,"^G","fulcro.client.impl.application/enqueue"],["^ ","^1K",0,"^1L",698,"^G","fulcro.client.impl.application/enqueue"]],"~i21",[["^ ","^1K",39,"^1L",515,"^G","queue"],["^ ","^1K",39,"^1L",547,"^G","queue"],["^ ","^1K",39,"^1L",666,"^G","queue"],["^ ","^1K",39,"^1L",698,"^G","queue"]],"^1R",[["^ ","^1K",51,"^1L",515],["^ ","^1K",51,"^1L",547],["^ ","^1K",51,"^1L",666],["^ ","^1K",51,"^1L",698]],"^20",[["^ ","^1K",51,"^1L",515,"^G","payload"],["^ ","^1K",51,"^1L",547,"^G","payload"],["^ ","^1K",51,"^1L",666,"^G","payload"],["^ ","^1K",51,"^1L",698,"^G","payload"]],"^37",[["^ ","^1K",65,"^1L",515,"^G","tx"],["^ ","^1K",65,"^1L",547,"^G","tx"],["^ ","^1K",65,"^1L",666,"^G","tx"],["^ ","^1K",65,"^1L",698,"^G","tx"]]],"~i170",["^ ","~i0",[["^ ","^1K",0,"^1L",737],["^ ","^1K",47,"^1L",748],["^ ","^1K",102,"^1L",748,"^G","p__42094"],["^ ","^1K",0,"^1L",749],["^ ","^1K",0,"^1L",749],["^ ","^1K",4,"^1L",749,"^G","map__42095"],["^ ","^1K",17,"^1L",749,"^G","p__42094"],["^ ","^1K",4,"^1L",750,"^G","map__42095"],["^ ","^1K",21,"^1L",750],["^ ","^1K",23,"^1L",750],["^ ","^1K",25,"^1L",750],["^ ","^1K",27,"^1L",750],["^ ","^1K",28,"^1L",750,"^G","map__42095"],["^ ","^1K",42,"^1L",750],["^ ","^1K",50,"^1L",750],["^ ","^1K",52,"^1L",750],["^ ","^1K",54,"^1L",750],["^ ","^1K",55,"^1L",750],["^ ","^1K",55,"^1L",750,"^G","map__42095"],["^ ","^1K",104,"^1L",750],["^ ","^1K",115,"^1L",750],["^ ","^1K",116,"^1L",750,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",750],["^ ","^1K",148,"^1L",750,"^G","map__42095"],["^ ","^1K",179,"^1L",750],["^ ","^1K",184,"^1L",750],["^ ","^1K",191,"^1L",750],["^ ","^1K",199,"^1L",750],["^ ","^1K",199,"^1L",750,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",750,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",750,"^G","map__42095"],["^ ","^1K",276,"^1L",750,"^G","map__42095"],["^ ","^1K",18,"^1L",751],["^ ","^1K",18,"^1L",751,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",62,"^1L",751,"^G","map__42095"],["^ ","^1K",77,"^1L",751],["^ ","^1K",17,"^1L",752],["^ ","^1K",17,"^1L",752,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",61,"^1L",752,"^G","map__42095"],["^ ","^1K",76,"^1L",752],["^ ","^1K",17,"^1L",753],["^ ","^1K",17,"^1L",753,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",61,"^1L",753,"^G","map__42095"],["^ ","^1K",76,"^1L",753],["^ ","^1K",0,"^1L",754]],"~i6",[["^ ","^1K",0,"^1L",748,"^G","fulcro.client.impl.application/enqueue-reads"]]],"~i180",["^ ","^1N",[["^ ","^1K",4,"^1L",751,"^G","send-queues"]],"^1M",[["^ ","^1K",4,"^1L",752,"^G","reconciler"]],"^24",[["^ ","^1K",4,"^1L",753,"^G","networking"]]],"~i181",["^ ","~i2",[["^ ","^1K",0,"^1L",754],["^ ","^1K",4,"^1L",754,"^G","seq__42098"],["^ ","^1K",17,"^1L",754],["^ ","^1K",17,"^1L",754,"^G","cljs.core/seq"],["^ ","^1K",4,"^1L",755,"^G","chunk__42099"],["^ ","^1K",19,"^1L",755],["^ ","^1K",4,"^1L",756,"^G","count__42100"],["^ ","^1K",19,"^1L",756],["^ ","^1K",4,"^1L",757,"^G","i__42101"],["^ ","^1K",15,"^1L",757],["^ ","^1K",0,"^1L",759],["^ ","^1K",0,"^1L",759],["^ ","^1K",3,"^1L",759],["^ ","^1K",3,"^1L",759],["^ ","^1K",4,"^1L",759,"^G","i__42101"],["^ ","^1K",15,"^1L",759,"^G","count__42100"],["^ ","^1K",0,"^1L",760],["^ ","^1K",13,"^1L",760],["^ ","^1K",13,"^1L",760,"^G","chunk__42099"],["^ ","^1K",63,"^1L",760,"^G","i__42101"],["^ ","^1K",0,"^1L",761],["^ ","^1K",0,"^1L",761],["^ ","^1K",0,"^1L",866],["^ ","^1K",0,"^1L",867],["^ ","^1K",15,"^1L",867,"^G","seq__42098"],["^ ","^1K",15,"^1L",868,"^G","chunk__42099"],["^ ","^1K",15,"^1L",869,"^G","count__42100"],["^ ","^1K",15,"^1L",870],["^ ","^1K",16,"^1L",870,"^G","i__42101"],["^ ","^1K",27,"^1L",870],["^ ","^1K",0,"^1L",877],["^ ","^1K",4,"^1L",877,"^G","temp__5457__auto__"],["^ ","^1K",25,"^1L",877],["^ ","^1K",25,"^1L",877,"^G","cljs.core/seq"],["^ ","^1K",39,"^1L",877,"^G","seq__42098"],["^ ","^1K",0,"^1L",878],["^ ","^1K",0,"^1L",878],["^ ","^1K",3,"^1L",878,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",879],["^ ","^1K",0,"^1L",879],["^ ","^1K",4,"^1L",879,"^G","seq__42098"],["^ ","^1K",21,"^1L",879,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",880],["^ ","^1K",0,"^1L",880],["^ ","^1K",3,"^1L",880],["^ ","^1K",3,"^1L",880,"^G","cljs.core/chunked-seq?"],["^ ","^1K",32,"^1L",880,"^G","seq__42098"],["^ ","^1K",0,"^1L",881],["^ ","^1K",4,"^1L",881,"^G","c__4351__auto__"],["^ ","^1K",22,"^1L",881],["^ ","^1K",22,"^1L",881,"^G","cljs.core/chunk-first"],["^ ","^1K",44,"^1L",881,"^G","seq__42098"],["^ ","^1K",0,"^1L",882],["^ ","^1K",0,"^1L",882],["^ ","^1K",15,"^1L",882],["^ ","^1K",15,"^1L",882,"^G","cljs.core/chunk-rest"],["^ ","^1K",36,"^1L",882,"^G","seq__42098"],["^ ","^1K",15,"^1L",883,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",884],["^ ","^1K",15,"^1L",884,"^G","cljs.core/count"],["^ ","^1K",31,"^1L",884,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",885],["^ ","^1K",0,"^1L",892],["^ ","^1K",13,"^1L",892],["^ ","^1K",13,"^1L",892,"^G","cljs.core/first"],["^ ","^1K",29,"^1L",892,"^G","seq__42098"],["^ ","^1K",0,"^1L",893],["^ ","^1K",0,"^1L",893],["^ ","^1K",0,"^1L",998],["^ ","^1K",0,"^1L",999],["^ ","^1K",15,"^1L",999],["^ ","^1K",15,"^1L",999,"^G","cljs.core/next"],["^ ","^1K",30,"^1L",999,"^G","seq__42098"],["^ ","^1K",15,"^1L",1000],["^ ","^1K",15,"^1L",1001],["^ ","^1K",15,"^1L",1002],["^ ","^1K",0,"^1L",1010]],"^1Z",[["^ ","^1K",4,"^1L",760,"^G","remote"],["^ ","^1K",4,"^1L",892,"^G","remote"]],"^2N",[["^ ","^1K",31,"^1L",754]],"^26",[["^ ","^1K",31,"^1L",754,"^G","cljs.core/keys"]],"^1M",[["^ ","^1K",46,"^1L",754,"^G","send-queues"]]],"~i182",["^ ","~i4",[["^ ","^1K",0,"^1L",761],["^ ","^1K",0,"^1L",764],["^ ","^1K",0,"^1L",893],["^ ","^1K",0,"^1L",896]],"^1Z",[["^ ","^1K",4,"^1L",761,"^G","queue"],["^ ","^1K",4,"^1L",893,"^G","queue"]],"^1R",[["^ ","^1K",18,"^1L",761],["^ ","^1K",18,"^1L",893]],"^20",[["^ ","^1K",18,"^1L",761,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",18,"^1L",893,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1K",62,"^1L",761,"^G","send-queues"],["^ ","^1K",62,"^1L",893,"^G","send-queues"]],"^2:",[["^ ","^1K",74,"^1L",761,"^G","remote"],["^ ","^1K",74,"^1L",893,"^G","remote"]]],"~i183",["^ ","^1Z",[["^ ","^1K",4,"^1L",762,"^G","network"],["^ ","^1K",4,"^1L",894,"^G","network"]],"^1R",[["^ ","^1K",20,"^1L",762],["^ ","^1K",20,"^1L",894]],"^20",[["^ ","^1K",20,"^1L",762,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",20,"^1L",894,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1K",64,"^1L",762,"^G","networking"],["^ ","^1K",64,"^1L",894,"^G","networking"]],"^3W",[["^ ","^1K",75,"^1L",762,"^G","remote"],["^ ","^1K",75,"^1L",894,"^G","remote"]]],"~i184",["^ ","^1Z",[["^ ","^1K",4,"^1L",763,"^G","parallel-payload"],["^ ","^1K",4,"^1L",895,"^G","parallel-payload"]],"^1R",[["^ ","^1K",29,"^1L",763],["^ ","^1K",29,"^1L",895]],"^20",[["^ ","^1K",29,"^1L",763,"^G","fulcro.client.impl.data-fetch/mark-parallel-loading!"],["^ ","^1K",29,"^1L",895,"^G","fulcro.client.impl.data-fetch/mark-parallel-loading!"]],"^2A",[["^ ","^1K",87,"^1L",763,"^G","remote"],["^ ","^1K",87,"^1L",895,"^G","remote"]],"^1[",[["^ ","^1K",94,"^1L",763,"^G","reconciler"],["^ ","^1K",94,"^1L",895,"^G","reconciler"]]],"~i185",["^ ","~i6",[["^ ","^1K",0,"^1L",764],["^ ","^1K",4,"^1L",764,"^G","seq__42105"],["^ ","^1K",23,"^1L",764],["^ ","^1K",23,"^1L",764,"^G","cljs.core/seq"],["^ ","^1K",4,"^1L",765,"^G","chunk__42106"],["^ ","^1K",25,"^1L",765],["^ ","^1K",4,"^1L",766,"^G","count__42107"],["^ ","^1K",25,"^1L",766],["^ ","^1K",4,"^1L",767,"^G","i__42108"],["^ ","^1K",21,"^1L",767],["^ ","^1K",0,"^1L",769],["^ ","^1K",0,"^1L",769],["^ ","^1K",3,"^1L",769],["^ ","^1K",3,"^1L",769],["^ ","^1K",4,"^1L",769,"^G","i__42108"],["^ ","^1K",21,"^1L",769,"^G","count__42107"],["^ ","^1K",0,"^1L",770],["^ ","^1K",4,"^1L",770,"^G","map__42109"],["^ ","^1K",23,"^1L",770],["^ ","^1K",23,"^1L",770,"^G","chunk__42106"],["^ ","^1K",79,"^1L",770,"^G","i__42108"],["^ ","^1K",4,"^1L",771,"^G","map__42109"],["^ ","^1K",27,"^1L",771],["^ ","^1K",29,"^1L",771],["^ ","^1K",31,"^1L",771],["^ ","^1K",33,"^1L",771],["^ ","^1K",34,"^1L",771,"^G","map__42109"],["^ ","^1K",54,"^1L",771],["^ ","^1K",62,"^1L",771],["^ ","^1K",64,"^1L",771],["^ ","^1K",66,"^1L",771],["^ ","^1K",67,"^1L",771],["^ ","^1K",67,"^1L",771,"^G","map__42109"],["^ ","^1K",122,"^1L",771],["^ ","^1K",133,"^1L",771],["^ ","^1K",134,"^1L",771,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",166,"^1L",771],["^ ","^1K",166,"^1L",771,"^G","map__42109"],["^ ","^1K",203,"^1L",771],["^ ","^1K",208,"^1L",771],["^ ","^1K",215,"^1L",771],["^ ","^1K",223,"^1L",771],["^ ","^1K",223,"^1L",771,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",269,"^1L",771,"^G","cljs.core/hash-map"],["^ ","^1K",288,"^1L",771,"^G","map__42109"],["^ ","^1K",306,"^1L",771,"^G","map__42109"],["^ ","^1K",20,"^1L",772,"^G","map__42109"],["^ ","^1K",4,"^1L",773,"^G","query"],["^ ","^1K",18,"^1L",773],["^ ","^1K",18,"^1L",773,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",62,"^1L",773,"^G","map__42109"],["^ ","^1K",83,"^1L",773],["^ ","^1K",4,"^1L",774,"^G","on-load"],["^ ","^1K",20,"^1L",774],["^ ","^1K",20,"^1L",774,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",64,"^1L",774,"^G","map__42109"],["^ ","^1K",85,"^1L",774],["^ ","^1K",4,"^1L",775,"^G","on-error"],["^ ","^1K",21,"^1L",775],["^ ","^1K",21,"^1L",775,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",65,"^1L",775,"^G","map__42109"],["^ ","^1K",86,"^1L",775],["^ ","^1K",4,"^1L",776,"^G","load-descriptors"],["^ ","^1K",29,"^1L",776],["^ ","^1K",29,"^1L",776,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",73,"^1L",776,"^G","map__42109"],["^ ","^1K",94,"^1L",776],["^ ","^1K",4,"^1L",777,"^G","abort-id"],["^ ","^1K",21,"^1L",777],["^ ","^1K",21,"^1L",777,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",65,"^1L",777,"^G","map__42109"],["^ ","^1K",86,"^1L",777],["^ ","^1K",0,"^1L",778],["^ ","^1K",0,"^1L",778],["^ ","^1K",0,"^1L",790],["^ ","^1K",0,"^1L",791],["^ ","^1K",15,"^1L",791,"^G","seq__42105"],["^ ","^1K",15,"^1L",792,"^G","chunk__42106"],["^ ","^1K",15,"^1L",793,"^G","count__42107"],["^ ","^1K",15,"^1L",794],["^ ","^1K",16,"^1L",794,"^G","i__42108"],["^ ","^1K",33,"^1L",794],["^ ","^1K",0,"^1L",801],["^ ","^1K",4,"^1L",801,"^G","temp__5457__auto__"],["^ ","^1K",31,"^1L",801],["^ ","^1K",31,"^1L",801,"^G","cljs.core/seq"],["^ ","^1K",45,"^1L",801,"^G","seq__42105"],["^ ","^1K",0,"^1L",802],["^ ","^1K",0,"^1L",802],["^ ","^1K",3,"^1L",802,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",803],["^ ","^1K",0,"^1L",803],["^ ","^1K",4,"^1L",803,"^G","seq__42105"],["^ ","^1K",27,"^1L",803,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",804],["^ ","^1K",0,"^1L",804],["^ ","^1K",3,"^1L",804],["^ ","^1K",3,"^1L",804,"^G","cljs.core/chunked-seq?"],["^ ","^1K",32,"^1L",804,"^G","seq__42105"],["^ ","^1K",0,"^1L",805],["^ ","^1K",4,"^1L",805,"^G","c__4351__auto__"],["^ ","^1K",28,"^1L",805],["^ ","^1K",28,"^1L",805,"^G","cljs.core/chunk-first"],["^ ","^1K",50,"^1L",805,"^G","seq__42105"],["^ ","^1K",0,"^1L",806],["^ ","^1K",0,"^1L",806],["^ ","^1K",15,"^1L",806],["^ ","^1K",15,"^1L",806,"^G","cljs.core/chunk-rest"],["^ ","^1K",36,"^1L",806,"^G","seq__42105"],["^ ","^1K",15,"^1L",807,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",808],["^ ","^1K",15,"^1L",808,"^G","cljs.core/count"],["^ ","^1K",31,"^1L",808,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",809],["^ ","^1K",0,"^1L",816],["^ ","^1K",4,"^1L",816,"^G","map__42113"],["^ ","^1K",23,"^1L",816],["^ ","^1K",23,"^1L",816,"^G","cljs.core/first"],["^ ","^1K",39,"^1L",816,"^G","seq__42105"],["^ ","^1K",4,"^1L",817,"^G","map__42113"],["^ ","^1K",27,"^1L",817],["^ ","^1K",29,"^1L",817],["^ ","^1K",31,"^1L",817],["^ ","^1K",33,"^1L",817],["^ ","^1K",34,"^1L",817,"^G","map__42113"],["^ ","^1K",54,"^1L",817],["^ ","^1K",62,"^1L",817],["^ ","^1K",64,"^1L",817],["^ ","^1K",66,"^1L",817],["^ ","^1K",67,"^1L",817],["^ ","^1K",67,"^1L",817,"^G","map__42113"],["^ ","^1K",122,"^1L",817],["^ ","^1K",133,"^1L",817],["^ ","^1K",134,"^1L",817,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",166,"^1L",817],["^ ","^1K",166,"^1L",817,"^G","map__42113"],["^ ","^1K",203,"^1L",817],["^ ","^1K",208,"^1L",817],["^ ","^1K",215,"^1L",817],["^ ","^1K",223,"^1L",817],["^ ","^1K",223,"^1L",817,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",269,"^1L",817,"^G","cljs.core/hash-map"],["^ ","^1K",288,"^1L",817,"^G","map__42113"],["^ ","^1K",306,"^1L",817,"^G","map__42113"],["^ ","^1K",20,"^1L",818,"^G","map__42113"],["^ ","^1K",4,"^1L",819,"^G","query"],["^ ","^1K",18,"^1L",819],["^ ","^1K",18,"^1L",819,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",62,"^1L",819,"^G","map__42113"],["^ ","^1K",83,"^1L",819],["^ ","^1K",4,"^1L",820,"^G","on-load"],["^ ","^1K",20,"^1L",820],["^ ","^1K",20,"^1L",820,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",64,"^1L",820,"^G","map__42113"],["^ ","^1K",85,"^1L",820],["^ ","^1K",4,"^1L",821,"^G","on-error"],["^ ","^1K",21,"^1L",821],["^ ","^1K",21,"^1L",821,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",65,"^1L",821,"^G","map__42113"],["^ ","^1K",86,"^1L",821],["^ ","^1K",4,"^1L",822,"^G","load-descriptors"],["^ ","^1K",29,"^1L",822],["^ ","^1K",29,"^1L",822,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",73,"^1L",822,"^G","map__42113"],["^ ","^1K",94,"^1L",822],["^ ","^1K",4,"^1L",823,"^G","abort-id"],["^ ","^1K",21,"^1L",823],["^ ","^1K",21,"^1L",823,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",65,"^1L",823,"^G","map__42113"],["^ ","^1K",86,"^1L",823],["^ ","^1K",0,"^1L",824],["^ ","^1K",0,"^1L",824],["^ ","^1K",0,"^1L",836],["^ ","^1K",0,"^1L",837],["^ ","^1K",15,"^1L",837],["^ ","^1K",15,"^1L",837,"^G","cljs.core/next"],["^ ","^1K",30,"^1L",837,"^G","seq__42105"],["^ ","^1K",15,"^1L",838],["^ ","^1K",15,"^1L",839],["^ ","^1K",15,"^1L",840],["^ ","^1K",0,"^1L",848],["^ ","^1K",0,"^1L",896],["^ ","^1K",4,"^1L",896,"^G","seq__42125"],["^ ","^1K",23,"^1L",896],["^ ","^1K",23,"^1L",896,"^G","cljs.core/seq"],["^ ","^1K",4,"^1L",897,"^G","chunk__42126"],["^ ","^1K",25,"^1L",897],["^ ","^1K",4,"^1L",898,"^G","count__42127"],["^ ","^1K",25,"^1L",898],["^ ","^1K",4,"^1L",899,"^G","i__42128"],["^ ","^1K",21,"^1L",899],["^ ","^1K",0,"^1L",901],["^ ","^1K",0,"^1L",901],["^ ","^1K",3,"^1L",901],["^ ","^1K",3,"^1L",901],["^ ","^1K",4,"^1L",901,"^G","i__42128"],["^ ","^1K",21,"^1L",901,"^G","count__42127"],["^ ","^1K",0,"^1L",902],["^ ","^1K",4,"^1L",902,"^G","map__42129"],["^ ","^1K",23,"^1L",902],["^ ","^1K",23,"^1L",902,"^G","chunk__42126"],["^ ","^1K",79,"^1L",902,"^G","i__42128"],["^ ","^1K",4,"^1L",903,"^G","map__42129"],["^ ","^1K",27,"^1L",903],["^ ","^1K",29,"^1L",903],["^ ","^1K",31,"^1L",903],["^ ","^1K",33,"^1L",903],["^ ","^1K",34,"^1L",903,"^G","map__42129"],["^ ","^1K",54,"^1L",903],["^ ","^1K",62,"^1L",903],["^ ","^1K",64,"^1L",903],["^ ","^1K",66,"^1L",903],["^ ","^1K",67,"^1L",903],["^ ","^1K",67,"^1L",903,"^G","map__42129"],["^ ","^1K",122,"^1L",903],["^ ","^1K",133,"^1L",903],["^ ","^1K",134,"^1L",903,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",166,"^1L",903],["^ ","^1K",166,"^1L",903,"^G","map__42129"],["^ ","^1K",203,"^1L",903],["^ ","^1K",208,"^1L",903],["^ ","^1K",215,"^1L",903],["^ ","^1K",223,"^1L",903],["^ ","^1K",223,"^1L",903,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",269,"^1L",903,"^G","cljs.core/hash-map"],["^ ","^1K",288,"^1L",903,"^G","map__42129"],["^ ","^1K",306,"^1L",903,"^G","map__42129"],["^ ","^1K",20,"^1L",904,"^G","map__42129"],["^ ","^1K",4,"^1L",905,"^G","query"],["^ ","^1K",18,"^1L",905],["^ ","^1K",18,"^1L",905,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",62,"^1L",905,"^G","map__42129"],["^ ","^1K",83,"^1L",905],["^ ","^1K",4,"^1L",906,"^G","on-load"],["^ ","^1K",20,"^1L",906],["^ ","^1K",20,"^1L",906,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",64,"^1L",906,"^G","map__42129"],["^ ","^1K",85,"^1L",906],["^ ","^1K",4,"^1L",907,"^G","on-error"],["^ ","^1K",21,"^1L",907],["^ ","^1K",21,"^1L",907,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",65,"^1L",907,"^G","map__42129"],["^ ","^1K",86,"^1L",907],["^ ","^1K",4,"^1L",908,"^G","load-descriptors"],["^ ","^1K",29,"^1L",908],["^ ","^1K",29,"^1L",908,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",73,"^1L",908,"^G","map__42129"],["^ ","^1K",94,"^1L",908],["^ ","^1K",4,"^1L",909,"^G","abort-id"],["^ ","^1K",21,"^1L",909],["^ ","^1K",21,"^1L",909,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",65,"^1L",909,"^G","map__42129"],["^ ","^1K",86,"^1L",909],["^ ","^1K",0,"^1L",910],["^ ","^1K",0,"^1L",910],["^ ","^1K",0,"^1L",922],["^ ","^1K",0,"^1L",923],["^ ","^1K",15,"^1L",923,"^G","seq__42125"],["^ ","^1K",15,"^1L",924,"^G","chunk__42126"],["^ ","^1K",15,"^1L",925,"^G","count__42127"],["^ ","^1K",15,"^1L",926],["^ ","^1K",16,"^1L",926,"^G","i__42128"],["^ ","^1K",33,"^1L",926],["^ ","^1K",0,"^1L",933],["^ ","^1K",4,"^1L",933,"^G","temp__5457__auto__"],["^ ","^1K",35,"^1L",933],["^ ","^1K",35,"^1L",933,"^G","cljs.core/seq"],["^ ","^1K",49,"^1L",933,"^G","seq__42125"],["^ ","^1K",0,"^1L",934],["^ ","^1K",0,"^1L",934],["^ ","^1K",3,"^1L",934,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",935],["^ ","^1K",0,"^1L",935],["^ ","^1K",4,"^1L",935,"^G","seq__42125"],["^ ","^1K",27,"^1L",935,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",936],["^ ","^1K",0,"^1L",936],["^ ","^1K",3,"^1L",936],["^ ","^1K",3,"^1L",936,"^G","cljs.core/chunked-seq?"],["^ ","^1K",32,"^1L",936,"^G","seq__42125"],["^ ","^1K",0,"^1L",937],["^ ","^1K",4,"^1L",937,"^G","c__4351__auto__"],["^ ","^1K",28,"^1L",937],["^ ","^1K",28,"^1L",937,"^G","cljs.core/chunk-first"],["^ ","^1K",50,"^1L",937,"^G","seq__42125"],["^ ","^1K",0,"^1L",938],["^ ","^1K",0,"^1L",938],["^ ","^1K",15,"^1L",938],["^ ","^1K",15,"^1L",938,"^G","cljs.core/chunk-rest"],["^ ","^1K",36,"^1L",938,"^G","seq__42125"],["^ ","^1K",15,"^1L",939,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",940],["^ ","^1K",15,"^1L",940,"^G","cljs.core/count"],["^ ","^1K",31,"^1L",940,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",941],["^ ","^1K",0,"^1L",948],["^ ","^1K",4,"^1L",948,"^G","map__42133"],["^ ","^1K",23,"^1L",948],["^ ","^1K",23,"^1L",948,"^G","cljs.core/first"],["^ ","^1K",39,"^1L",948,"^G","seq__42125"],["^ ","^1K",4,"^1L",949,"^G","map__42133"],["^ ","^1K",27,"^1L",949],["^ ","^1K",29,"^1L",949],["^ ","^1K",31,"^1L",949],["^ ","^1K",33,"^1L",949],["^ ","^1K",34,"^1L",949,"^G","map__42133"],["^ ","^1K",54,"^1L",949],["^ ","^1K",62,"^1L",949],["^ ","^1K",64,"^1L",949],["^ ","^1K",66,"^1L",949],["^ ","^1K",67,"^1L",949],["^ ","^1K",67,"^1L",949,"^G","map__42133"],["^ ","^1K",122,"^1L",949],["^ ","^1K",133,"^1L",949],["^ ","^1K",134,"^1L",949,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",166,"^1L",949],["^ ","^1K",166,"^1L",949,"^G","map__42133"],["^ ","^1K",203,"^1L",949],["^ ","^1K",208,"^1L",949],["^ ","^1K",215,"^1L",949],["^ ","^1K",223,"^1L",949],["^ ","^1K",223,"^1L",949,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",269,"^1L",949,"^G","cljs.core/hash-map"],["^ ","^1K",288,"^1L",949,"^G","map__42133"],["^ ","^1K",306,"^1L",949,"^G","map__42133"],["^ ","^1K",20,"^1L",950,"^G","map__42133"],["^ ","^1K",4,"^1L",951,"^G","query"],["^ ","^1K",18,"^1L",951],["^ ","^1K",18,"^1L",951,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",62,"^1L",951,"^G","map__42133"],["^ ","^1K",83,"^1L",951],["^ ","^1K",4,"^1L",952,"^G","on-load"],["^ ","^1K",20,"^1L",952],["^ ","^1K",20,"^1L",952,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",64,"^1L",952,"^G","map__42133"],["^ ","^1K",85,"^1L",952],["^ ","^1K",4,"^1L",953,"^G","on-error"],["^ ","^1K",21,"^1L",953],["^ ","^1K",21,"^1L",953,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",65,"^1L",953,"^G","map__42133"],["^ ","^1K",86,"^1L",953],["^ ","^1K",4,"^1L",954,"^G","load-descriptors"],["^ ","^1K",29,"^1L",954],["^ ","^1K",29,"^1L",954,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",73,"^1L",954,"^G","map__42133"],["^ ","^1K",94,"^1L",954],["^ ","^1K",4,"^1L",955,"^G","abort-id"],["^ ","^1K",21,"^1L",955],["^ ","^1K",21,"^1L",955,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",65,"^1L",955,"^G","map__42133"],["^ ","^1K",86,"^1L",955],["^ ","^1K",0,"^1L",956],["^ ","^1K",0,"^1L",956],["^ ","^1K",0,"^1L",968],["^ ","^1K",0,"^1L",969],["^ ","^1K",15,"^1L",969],["^ ","^1K",15,"^1L",969,"^G","cljs.core/next"],["^ ","^1K",30,"^1L",969,"^G","seq__42125"],["^ ","^1K",15,"^1L",970],["^ ","^1K",15,"^1L",971],["^ ","^1K",15,"^1L",972],["^ ","^1K",0,"^1L",980]],"^3I",[["^ ","^1K",4,"^1L",772,"^G","payload"],["^ ","^1K",4,"^1L",818,"^G","payload"],["^ ","^1K",4,"^1L",904,"^G","payload"],["^ ","^1K",4,"^1L",950,"^G","payload"]],"^3O",[["^ ","^1K",37,"^1L",764,"^G","parallel-payload"],["^ ","^1K",37,"^1L",896,"^G","parallel-payload"]]],"~i186",["^ ","~i8",[["^ ","^1K",0,"^1L",778],["^ ","^1K",33,"^1L",778],["^ ","^1K",18,"^1L",779,"^G","p1__42091#"],["^ ","^1K",0,"^1L",780],["^ ","^1K",34,"^1L",783],["^ ","^1K",18,"^1L",784,"^G","p1__42092#"],["^ ","^1K",0,"^1L",785],["^ ","^1K",0,"^1L",788],["^ ","^1K",0,"^1L",824],["^ ","^1K",33,"^1L",824],["^ ","^1K",18,"^1L",825,"^G","p1__42091#"],["^ ","^1K",0,"^1L",826],["^ ","^1K",34,"^1L",829],["^ ","^1K",18,"^1L",830,"^G","p1__42092#"],["^ ","^1K",0,"^1L",831],["^ ","^1K",0,"^1L",834],["^ ","^1K",0,"^1L",910],["^ ","^1K",33,"^1L",910],["^ ","^1K",18,"^1L",911,"^G","p1__42091#"],["^ ","^1K",0,"^1L",912],["^ ","^1K",34,"^1L",915],["^ ","^1K",18,"^1L",916,"^G","p1__42092#"],["^ ","^1K",0,"^1L",917],["^ ","^1K",0,"^1L",920],["^ ","^1K",0,"^1L",956],["^ ","^1K",33,"^1L",956],["^ ","^1K",18,"^1L",957,"^G","p1__42091#"],["^ ","^1K",0,"^1L",958],["^ ","^1K",34,"^1L",961],["^ ","^1K",18,"^1L",962,"^G","p1__42092#"],["^ ","^1K",0,"^1L",963],["^ ","^1K",0,"^1L",966]],"^2Z",[["^ ","^1K",4,"^1L",778,"^G","on-load'"],["^ ","^1K",4,"^1L",824,"^G","on-load'"],["^ ","^1K",4,"^1L",910,"^G","on-load'"],["^ ","^1K",4,"^1L",956,"^G","on-load'"]],"^1P",[["^ ","^1K",0,"^1L",780],["^ ","^1K",98,"^1L",780,"^G","p1__42091#"],["^ ","^1K",165,"^1L",780,"^G","p1__42091#"],["^ ","^1K",0,"^1L",826],["^ ","^1K",98,"^1L",826,"^G","p1__42091#"],["^ ","^1K",165,"^1L",826,"^G","p1__42091#"],["^ ","^1K",0,"^1L",912],["^ ","^1K",98,"^1L",912,"^G","p1__42091#"],["^ ","^1K",165,"^1L",912,"^G","p1__42091#"],["^ ","^1K",0,"^1L",958],["^ ","^1K",98,"^1L",958,"^G","p1__42091#"],["^ ","^1K",165,"^1L",958,"^G","p1__42091#"]],"^1U",[["^ ","^1K",8,"^1L",780,"^G","on-load"],["^ ","^1K",54,"^1L",780,"^G","on-load"],["^ ","^1K",141,"^1L",780,"^G","on-load"],["^ ","^1K",8,"^1L",826,"^G","on-load"],["^ ","^1K",54,"^1L",826,"^G","on-load"],["^ ","^1K",141,"^1L",826,"^G","on-load"],["^ ","^1K",8,"^1L",912,"^G","on-load"],["^ ","^1K",54,"^1L",912,"^G","on-load"],["^ ","^1K",141,"^1L",912,"^G","on-load"],["^ ","^1K",8,"^1L",958,"^G","on-load"],["^ ","^1K",54,"^1L",958,"^G","on-load"],["^ ","^1K",141,"^1L",958,"^G","on-load"]],"^37",[["^ ","^1K",115,"^1L",780,"^G","load-descriptors"],["^ ","^1K",182,"^1L",780,"^G","load-descriptors"],["^ ","^1K",115,"^1L",826,"^G","load-descriptors"],["^ ","^1K",182,"^1L",826,"^G","load-descriptors"],["^ ","^1K",115,"^1L",912,"^G","load-descriptors"],["^ ","^1K",182,"^1L",912,"^G","load-descriptors"],["^ ","^1K",115,"^1L",958,"^G","load-descriptors"],["^ ","^1K",182,"^1L",958,"^G","load-descriptors"]]],"~i187",["^ ","^2Z",[["^ ","^1K",4,"^1L",783,"^G","on-error'"],["^ ","^1K",4,"^1L",829,"^G","on-error'"],["^ ","^1K",4,"^1L",915,"^G","on-error'"],["^ ","^1K",4,"^1L",961,"^G","on-error'"]],"^1P",[["^ ","^1K",0,"^1L",785],["^ ","^1K",100,"^1L",785,"^G","p1__42092#"],["^ ","^1K",168,"^1L",785,"^G","p1__42092#"],["^ ","^1K",0,"^1L",831],["^ ","^1K",100,"^1L",831,"^G","p1__42092#"],["^ ","^1K",168,"^1L",831,"^G","p1__42092#"],["^ ","^1K",0,"^1L",917],["^ ","^1K",100,"^1L",917,"^G","p1__42092#"],["^ ","^1K",168,"^1L",917,"^G","p1__42092#"],["^ ","^1K",0,"^1L",963],["^ ","^1K",100,"^1L",963,"^G","p1__42092#"],["^ ","^1K",168,"^1L",963,"^G","p1__42092#"]],"^1U",[["^ ","^1K",8,"^1L",785,"^G","on-error"],["^ ","^1K",55,"^1L",785,"^G","on-error"],["^ ","^1K",143,"^1L",785,"^G","on-error"],["^ ","^1K",8,"^1L",831,"^G","on-error"],["^ ","^1K",55,"^1L",831,"^G","on-error"],["^ ","^1K",143,"^1L",831,"^G","on-error"],["^ ","^1K",8,"^1L",917,"^G","on-error"],["^ ","^1K",55,"^1L",917,"^G","on-error"],["^ ","^1K",143,"^1L",917,"^G","on-error"],["^ ","^1K",8,"^1L",963,"^G","on-error"],["^ ","^1K",55,"^1L",963,"^G","on-error"],["^ ","^1K",143,"^1L",963,"^G","on-error"]],"^21",[["^ ","^1K",117,"^1L",785,"^G","load-descriptors"],["^ ","^1K",185,"^1L",785,"^G","load-descriptors"],["^ ","^1K",117,"^1L",831,"^G","load-descriptors"],["^ ","^1K",185,"^1L",831,"^G","load-descriptors"],["^ ","^1K",117,"^1L",917,"^G","load-descriptors"],["^ ","^1K",185,"^1L",917,"^G","load-descriptors"],["^ ","^1K",117,"^1L",963,"^G","load-descriptors"],["^ ","^1K",185,"^1L",963,"^G","load-descriptors"]]],"~i189",["^ ","^1Z",[["^ ","^1K",0,"^1L",788],["^ ","^1K",102,"^1L",788],["^ ","^1K",145,"^1L",788],["^ ","^1K",218,"^1L",788],["^ ","^1K",295,"^1L",788],["^ ","^1K",355,"^1L",788],["^ ","^1K",441,"^1L",788],["^ ","^1K",530,"^1L",788],["^ ","^1K",0,"^1L",834],["^ ","^1K",102,"^1L",834],["^ ","^1K",145,"^1L",834],["^ ","^1K",218,"^1L",834],["^ ","^1K",295,"^1L",834],["^ ","^1K",355,"^1L",834],["^ ","^1K",441,"^1L",834],["^ ","^1K",530,"^1L",834],["^ ","^1K",0,"^1L",920],["^ ","^1K",102,"^1L",920],["^ ","^1K",145,"^1L",920],["^ ","^1K",218,"^1L",920],["^ ","^1K",295,"^1L",920],["^ ","^1K",355,"^1L",920],["^ ","^1K",441,"^1L",920],["^ ","^1K",530,"^1L",920],["^ ","^1K",0,"^1L",966],["^ ","^1K",102,"^1L",966],["^ ","^1K",145,"^1L",966],["^ ","^1K",218,"^1L",966],["^ ","^1K",295,"^1L",966],["^ ","^1K",355,"^1L",966],["^ ","^1K",441,"^1L",966],["^ ","^1K",530,"^1L",966]],"^1N",[["^ ","^1K",0,"^1L",788,"^G","fulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",0,"^1L",834,"^G","fulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",0,"^1L",920,"^G","fulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",0,"^1L",966,"^G","fulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2"]],"^27",[["^ ","^1K",88,"^1L",788,"^G","network"],["^ ","^1K",88,"^1L",834,"^G","network"],["^ ","^1K",88,"^1L",920,"^G","network"],["^ ","^1K",88,"^1L",966,"^G","network"]],"^2Y",[["^ ","^1K",204,"^1L",788,"^G","payload"],["^ ","^1K",204,"^1L",834,"^G","payload"],["^ ","^1K",204,"^1L",920,"^G","payload"],["^ ","^1K",204,"^1L",966,"^G","payload"]],"^2D",[["^ ","^1K",284,"^1L",788,"^G","reconciler"],["^ ","^1K",284,"^1L",834,"^G","reconciler"],["^ ","^1K",284,"^1L",920,"^G","reconciler"],["^ ","^1K",284,"^1L",966,"^G","reconciler"]],"~i91",[["^ ","^1K",343,"^1L",788,"^G","query"],["^ ","^1K",343,"^1L",834,"^G","query"],["^ ","^1K",343,"^1L",920,"^G","query"],["^ ","^1K",343,"^1L",966,"^G","query"]]],"~i190",["^ ","^2Y",[["^ ","^1K",414,"^1L",788,"^G","on-load'"],["^ ","^1K",414,"^1L",834,"^G","on-load'"],["^ ","^1K",414,"^1L",920,"^G","on-load'"],["^ ","^1K",414,"^1L",966,"^G","on-load'"]],"^3;",[["^ ","^1K",502,"^1L",788,"^G","on-error'"],["^ ","^1K",502,"^1L",834,"^G","on-error'"],["^ ","^1K",502,"^1L",920,"^G","on-error'"],["^ ","^1K",502,"^1L",966,"^G","on-error'"]],"^3:",[["^ ","^1K",591,"^1L",788,"^G","abort-id"],["^ ","^1K",591,"^1L",834,"^G","abort-id"],["^ ","^1K",591,"^1L",920,"^G","abort-id"],["^ ","^1K",591,"^1L",966,"^G","abort-id"]]],"~i191",["^ ","~i6",[["^ ","^1K",0,"^1L",853],["^ ","^1K",0,"^1L",855],["^ ","^1K",0,"^1L",985],["^ ","^1K",0,"^1L",987]],"^1V",[["^ ","^1K",4,"^1L",853,"^G","fetch-payload"],["^ ","^1K",4,"^1L",985,"^G","fetch-payload"]],"^1R",[["^ ","^1K",26,"^1L",853],["^ ","^1K",26,"^1L",985]],"^20",[["^ ","^1K",26,"^1L",853,"^G","fulcro.client.impl.data-fetch/mark-loading"],["^ ","^1K",26,"^1L",985,"^G","fulcro.client.impl.data-fetch/mark-loading"]],"^3W",[["^ ","^1K",69,"^1L",853,"^G","remote"],["^ ","^1K",69,"^1L",985,"^G","remote"]],"^2@",[["^ ","^1K",76,"^1L",853,"^G","reconciler"],["^ ","^1K",76,"^1L",985,"^G","reconciler"]]],"~i192",["^ ","~i8",[["^ ","^1K",0,"^1L",855],["^ ","^1K",0,"^1L",856],["^ ","^1K",0,"^1L",862],["^ ","^1K",0,"^1L",987],["^ ","^1K",0,"^1L",988],["^ ","^1K",0,"^1L",994]],"^2Z",[["^ ","^1K",20,"^1L",855,"^G","fetch-payload"],["^ ","^1K",20,"^1L",987,"^G","fetch-payload"]]],"~i193",["^ ","^1Z",[["^ ","^1K",0,"^1L",856],["^ ","^1K",0,"^1L",988]],"^1N",[["^ ","^1K",0,"^1L",856,"^G","fulcro.client.impl.application/enqueue"],["^ ","^1K",0,"^1L",988,"^G","fulcro.client.impl.application/enqueue"]],"^2[",[["^ ","^1K",39,"^1L",856,"^G","queue"],["^ ","^1K",39,"^1L",988,"^G","queue"]],"^1P",[["^ ","^1K",51,"^1L",856],["^ ","^1K",117,"^1L",856],["^ ","^1K",51,"^1L",988],["^ ","^1K",117,"^1L",988]],"^1U",[["^ ","^1K",51,"^1L",856,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"],["^ ","^1K",51,"^1L",988,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^23",[["^ ","^1K",97,"^1L",856,"^G","fetch-payload"],["^ ","^1K",97,"^1L",988,"^G","fetch-payload"]],"^2T",[["^ ","^1K",181,"^1L",856,"^G","network"],["^ ","^1K",181,"^1L",988,"^G","network"]]],"~i194",["^ ","^1Z",[["^ ","^1K",0,"^1L",858],["^ ","^1K",0,"^1L",990]],"^2N",[["^ ","^1K",15,"^1L",858],["^ ","^1K",15,"^1L",990]],"^26",[["^ ","^1K",15,"^1L",858,"^G","fulcro.client.impl.data-fetch/mark-loading"],["^ ","^1K",15,"^1L",990,"^G","fulcro.client.impl.data-fetch/mark-loading"]],"^1Y",[["^ ","^1K",58,"^1L",858,"^G","remote"],["^ ","^1K",58,"^1L",990,"^G","remote"]],"^29",[["^ ","^1K",65,"^1L",858,"^G","reconciler"],["^ ","^1K",65,"^1L",990,"^G","reconciler"]]],"~i196",["^ ","~i0",[["^ ","^1K",0,"^1L",1016],["^ ","^1K",55,"^1L",1016],["^ ","^1K",118,"^1L",1016,"^G","p__42305"],["^ ","^1K",0,"^1L",1017],["^ ","^1K",0,"^1L",1017],["^ ","^1K",4,"^1L",1017,"^G","map__42306"],["^ ","^1K",17,"^1L",1017,"^G","p__42305"],["^ ","^1K",4,"^1L",1018,"^G","map__42306"],["^ ","^1K",21,"^1L",1018],["^ ","^1K",23,"^1L",1018],["^ ","^1K",25,"^1L",1018],["^ ","^1K",27,"^1L",1018],["^ ","^1K",28,"^1L",1018,"^G","map__42306"],["^ ","^1K",42,"^1L",1018],["^ ","^1K",50,"^1L",1018],["^ ","^1K",52,"^1L",1018],["^ ","^1K",54,"^1L",1018],["^ ","^1K",55,"^1L",1018],["^ ","^1K",55,"^1L",1018,"^G","map__42306"],["^ ","^1K",104,"^1L",1018],["^ ","^1K",115,"^1L",1018],["^ ","^1K",116,"^1L",1018,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",1018],["^ ","^1K",148,"^1L",1018,"^G","map__42306"],["^ ","^1K",179,"^1L",1018],["^ ","^1K",184,"^1L",1018],["^ ","^1K",191,"^1L",1018],["^ ","^1K",199,"^1L",1018],["^ ","^1K",199,"^1L",1018,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",1018,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",1018,"^G","map__42306"],["^ ","^1K",276,"^1L",1018,"^G","map__42306"],["^ ","^1K",10,"^1L",1019,"^G","map__42306"],["^ ","^1K",17,"^1L",1020],["^ ","^1K",17,"^1L",1020,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",61,"^1L",1020,"^G","map__42306"],["^ ","^1K",76,"^1L",1020],["^ ","^1K",18,"^1L",1021],["^ ","^1K",18,"^1L",1021,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",62,"^1L",1021,"^G","map__42306"],["^ ","^1K",77,"^1L",1021],["^ ","^1K",0,"^1L",1022]],"~i6",[["^ ","^1K",0,"^1L",1016,"^G","fulcro.client.impl.application/detect-errant-remotes"]],"^21",[["^ ","^1K",4,"^1L",1020,"^G","reconciler"]],"^2>",[["^ ","^1K",4,"^1L",1021,"^G","send-queues"]],"^4E",[["^ ","^1K",4,"^1L",1019,"^G","app"]]],"~i197",["^ ","~i2",[["^ ","^1K",0,"^1L",1022],["^ ","^1K",0,"^1L",1027]],"~i8",[["^ ","^1K",4,"^1L",1022,"^G","state"]],"^1O",[["^ ","^1K",12,"^1L",1022]],"^1P",[["^ ","^1K",12,"^1L",1022,"^G","fulcro.client.primitives/app-state"]],"^29",[["^ ","^1K",47,"^1L",1022,"^G","reconciler"]]],"~i198",["^ ","~i8",[["^ ","^1K",4,"^1L",1023,"^G","all-items"]],"^1O",[["^ ","^1K",16,"^1L",1023],["^ ","^1K",60,"^1L",1023],["^ ","^1K",60,"^1L",1023,"^G","cljs.core/deref"],["^ ","^1K",83,"^1L",1023]],"^1P",[["^ ","^1K",16,"^1L",1023,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2;",[["^ ","^1K",76,"^1L",1023,"^G","state"]]],"~i199",["^ ","~i8",[["^ ","^1K",4,"^1L",1024,"^G","item-remotes"]],"^1O",[["^ ","^1K",19,"^1L",1024],["^ ","^1K",64,"^1L",1024]],"^1P",[["^ ","^1K",19,"^1L",1024,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^24",[["^ ","^1K",98,"^1L",1024]],"^25",[["^ ","^1K",98,"^1L",1024,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^1S",[["^ ","^1K",142,"^1L",1024,"^G","fulcro.client.impl.data-fetch/data-remote"]],"^2A",[["^ ","^1K",184,"^1L",1024,"^G","all-items"]]],"~i200",["^ ","~i8",[["^ ","^1K",4,"^1L",1025,"^G","all-remotes"]],"^1O",[["^ ","^1K",18,"^1L",1025]],"^1P",[["^ ","^1K",18,"^1L",1025,"^G","cljs.core/set"]],"^22",[["^ ","^1K",32,"^1L",1025]],"^2;",[["^ ","^1K",32,"^1L",1025,"^G","cljs.core/keys"]],"^25",[["^ ","^1K",47,"^1L",1025,"^G","send-queues"]]],"~i201",["^ ","~i8",[["^ ","^1K",4,"^1L",1026,"^G","invalid-remotes"]],"^1O",[["^ ","^1K",22,"^1L",1026]],"^1P",[["^ ","^1K",22,"^1L",1026,"^G","clojure.set.difference.cljs$core$IFn$_invoke$arity$2"]],"^2>",[["^ ","^1K",75,"^1L",1026,"^G","item-remotes"]],"^2K",[["^ ","^1K",88,"^1L",1026,"^G","all-remotes"]]],"~i202",["^ ","~i4",[["^ ","^1K",0,"^1L",1027],["^ ","^1K",0,"^1L",1028],["^ ","^1K",0,"^1L",1037]],"^1Z",[["^ ","^1K",20,"^1L",1027]],"^1N",[["^ ","^1K",20,"^1L",1027,"^G","cljs.core/not-empty"]],"^4Q",[["^ ","^1K",40,"^1L",1027,"^G","invalid-remotes"]],"^27",[["^ ","^1K",0,"^1L",1028],["^ ","^1K",4,"^1L",1028],["^ ","^1K",4,"^1L",1028],["^ ","^1K",11,"^1L",1028,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",68,"^1L",1028],["^ ","^1K",111,"^1L",1028],["^ ","^1K",165,"^1L",1028],["^ ","^1K",198,"^1L",1028],["^ ","^1K",250,"^1L",1028],["^ ","^1K",262,"^1L",1028],["^ ","^1K",367,"^1L",1028],["^ ","^1K",16,"^1L",1029],["^ ","^1K",19,"^1L",1029],["^ ","^1K",20,"^1L",1029,"^G","e42308"],["^ ","^1K",38,"^1L",1029,"^G","js/Error"],["^ ","^1K",0,"^1L",1030],["^ ","^1K",4,"^1L",1030,"^G","e__31527__auto__"],["^ ","^1K",23,"^1L",1030,"^G","e42308"],["^ ","^1K",0,"^1L",1031],["^ ","^1K",0,"^1L",1031],["^ ","^1K",7,"^1L",1031,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",64,"^1L",1031],["^ ","^1K",107,"^1L",1031],["^ ","^1K",161,"^1L",1031],["^ ","^1K",194,"^1L",1031],["^ ","^1K",246,"^1L",1031],["^ ","^1K",258,"^1L",1031],["^ ","^1K",363,"^1L",1031],["^ ","^1K",416,"^1L",1031,"^G","e__31527__auto__"],["^ ","^1K",0,"^1L",1033],["^ ","^1K",0,"^1L",1033],["^ ","^1K",6,"^1L",1033,"^G","e42308"]],"^2F",[["^ ","^1K",405,"^1L",1028,"^G","invalid-remotes"]]],"~i204",["^ ","~i0",[["^ ","^1K",0,"^1L",1040],["^ ","^1K",45,"^1L",1044],["^ ","^1K",0,"^1L",1045]],"~i6",[["^ ","^1K",0,"^1L",1044,"^G","fulcro.client.impl.application/server-send"]]],"~i207",["^ ","~i3",[["^ ","^1K",98,"^1L",1044,"^G","app"]],"~i7",[["^ ","^1K",102,"^1L",1044,"^G","remote-tx-map"]],"^4Q",[["^ ","^1K",116,"^1L",1044,"^G","merge-result-callback"]]],"~i208",["^ ","~i2",[["^ ","^1K",0,"^1L",1045]],"~i3",[["^ ","^1K",0,"^1L",1045,"^G","fulcro.client.impl.application/detect-errant-remotes"]],"^1P",[["^ ","^1K",53,"^1L",1045,"^G","app"]]],"~i209",["^ ","~i2",[["^ ","^1K",0,"^1L",1047]],"~i3",[["^ ","^1K",0,"^1L",1047,"^G","fulcro.client.impl.application/enqueue-mutations"]],"^4Q",[["^ ","^1K",49,"^1L",1047,"^G","app"]],"^1P",[["^ ","^1K",53,"^1L",1047,"^G","remote-tx-map"]],"^1S",[["^ ","^1K",67,"^1L",1047,"^G","merge-result-callback"]]],"~i210",["^ ","~i2",[["^ ","^1K",0,"^1L",1049]],"~i3",[["^ ","^1K",7,"^1L",1049,"^G","fulcro.client.impl.application/enqueue-reads"]],"^2N",[["^ ","^1K",52,"^1L",1049,"^G","app"]]],"~i212",["^ ","~i0",[["^ ","^1K",0,"^1L",1051],["^ ","^1K",46,"^1L",1063],["^ ","^1K",0,"^1L",1064]],"~i7",[["^ ","^1K",0,"^1L",1063,"^G","fulcro.client.impl.application/send-payload"]]],"~i223",["^ ","~i3",[["^ ","^1K",100,"^1L",1063,"^G","network"]],"^1N",[["^ ","^1K",108,"^1L",1063,"^G","reconciler"]],"^28",[["^ ","^1K",119,"^1L",1063,"^G","payload"]],"^2;",[["^ ","^1K",127,"^1L",1063,"^G","send-complete"]]],"~i226",["^ ","~i2",[["^ ","^1K",0,"^1L",1064],["^ ","^1K",4,"^1L",1064,"^G","map__42329"],["^ ","^1K",4,"^1L",1065,"^G","map__42329"],["^ ","^1K",21,"^1L",1065],["^ ","^1K",23,"^1L",1065],["^ ","^1K",25,"^1L",1065],["^ ","^1K",27,"^1L",1065],["^ ","^1K",28,"^1L",1065,"^G","map__42329"],["^ ","^1K",42,"^1L",1065],["^ ","^1K",50,"^1L",1065],["^ ","^1K",52,"^1L",1065],["^ ","^1K",54,"^1L",1065],["^ ","^1K",55,"^1L",1065],["^ ","^1K",55,"^1L",1065,"^G","map__42329"],["^ ","^1K",104,"^1L",1065],["^ ","^1K",115,"^1L",1065],["^ ","^1K",116,"^1L",1065,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",1065],["^ ","^1K",148,"^1L",1065,"^G","map__42329"],["^ ","^1K",179,"^1L",1065],["^ ","^1K",184,"^1L",1065],["^ ","^1K",191,"^1L",1065],["^ ","^1K",199,"^1L",1065],["^ ","^1K",199,"^1L",1065,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",1065,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",1065,"^G","map__42329"],["^ ","^1K",276,"^1L",1065,"^G","map__42329"],["^ ","^1K",4,"^1L",1066,"^G","query"],["^ ","^1K",12,"^1L",1066],["^ ","^1K",12,"^1L",1066,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",56,"^1L",1066,"^G","map__42329"],["^ ","^1K",71,"^1L",1066],["^ ","^1K",4,"^1L",1067,"^G","on-load"],["^ ","^1K",14,"^1L",1067],["^ ","^1K",14,"^1L",1067,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",58,"^1L",1067,"^G","map__42329"],["^ ","^1K",73,"^1L",1067],["^ ","^1K",4,"^1L",1068,"^G","on-error"],["^ ","^1K",15,"^1L",1068],["^ ","^1K",15,"^1L",1068,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",59,"^1L",1068,"^G","map__42329"],["^ ","^1K",74,"^1L",1068],["^ ","^1K",4,"^1L",1069,"^G","load-descriptors"],["^ ","^1K",23,"^1L",1069],["^ ","^1K",23,"^1L",1069,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",67,"^1L",1069,"^G","map__42329"],["^ ","^1K",82,"^1L",1069],["^ ","^1K",4,"^1L",1070,"^G","abort-id"],["^ ","^1K",15,"^1L",1070],["^ ","^1K",15,"^1L",1070,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",59,"^1L",1070,"^G","map__42329"],["^ ","^1K",74,"^1L",1070],["^ ","^1K",0,"^1L",1088]],"~i92",[["^ ","^1K",17,"^1L",1064,"^G","payload"]]],"~i227",["^ ","~i8",[["^ ","^1K",4,"^1L",1071,"^G","merge-data"]],"^2[",[["^ ","^1K",17,"^1L",1071],["^ ","^1K",53,"^1L",1071],["^ ","^1K",18,"^1L",1072,"^G","p1__42324#"],["^ ","^1K",0,"^1L",1073],["^ ","^1K",1,"^1L",1075],["^ ","^1K",18,"^1L",1076,"^G","p1__42325#"],["^ ","^1K",35,"^1L",1076,"^G","p2__42326#"],["^ ","^1K",0,"^1L",1077]],"^1M",[["^ ","^1K",35,"^1L",1071,"^G","load-descriptors"]],"^2S",[["^ ","^1K",0,"^1L",1073],["^ ","^1K",86,"^1L",1073,"^G","p1__42324#"],["^ ","^1K",141,"^1L",1073,"^G","p1__42324#"]],"^2I",[["^ ","^1K",8,"^1L",1073,"^G","on-load"],["^ ","^1K",48,"^1L",1073,"^G","on-load"],["^ ","^1K",123,"^1L",1073,"^G","on-load"]],"^2M",[["^ ","^1K",103,"^1L",1073,"^G","load-descriptors"],["^ ","^1K",158,"^1L",1073,"^G","load-descriptors"]],"^31",[["^ ","^1K",0,"^1L",1077],["^ ","^1K",86,"^1L",1077,"^G","p1__42325#"],["^ ","^1K",103,"^1L",1077,"^G","p2__42326#"],["^ ","^1K",141,"^1L",1077,"^G","p1__42325#"],["^ ","^1K",158,"^1L",1077,"^G","p2__42326#"]],"^2C",[["^ ","^1K",8,"^1L",1077,"^G","on-load"],["^ ","^1K",48,"^1L",1077,"^G","on-load"],["^ ","^1K",123,"^1L",1077,"^G","on-load"]]],"~i228",["^ ","~i8",[["^ ","^1K",4,"^1L",1080,"^G","on-update"]],"^2[",[["^ ","^1K",16,"^1L",1080]],"^1M",[["^ ","^1K",34,"^1L",1080,"^G","load-descriptors"]],"^29",[["^ ","^1K",52,"^1L",1080,"^G","cljs.core/identity"]],"^2?",[["^ ","^1K",71,"^1L",1080,"^G","merge-data"]]],"~i229",["^ ","~i8",[["^ ","^1K",4,"^1L",1081,"^G","on-error"]],"^2[",[["^ ","^1K",19,"^1L",1081],["^ ","^1K",55,"^1L",1081],["^ ","^1K",18,"^1L",1082,"^G","p1__42327#"],["^ ","^1K",0,"^1L",1083]],"^1M",[["^ ","^1K",37,"^1L",1081,"^G","load-descriptors"]],"^2S",[["^ ","^1K",0,"^1L",1083],["^ ","^1K",88,"^1L",1083,"^G","p1__42327#"],["^ ","^1K",144,"^1L",1083,"^G","p1__42327#"]],"^2I",[["^ ","^1K",8,"^1L",1083,"^G","on-error"],["^ ","^1K",49,"^1L",1083,"^G","on-error"],["^ ","^1K",125,"^1L",1083,"^G","on-error"]],"^2A",[["^ ","^1K",105,"^1L",1083,"^G","load-descriptors"],["^ ","^1K",161,"^1L",1083,"^G","load-descriptors"]],"^31",[["^ ","^1K",1,"^1L",1085,"^G","on-error"]]],"~i230",["^ ","~i8",[["^ ","^1K",4,"^1L",1086,"^G","on-error"]],"^2[",[["^ ","^1K",19,"^1L",1086]],"^1J",[["^ ","^1K",19,"^1L",1086,"^G","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]],"^1P",[["^ ","^1K",64,"^1L",1086,"^G","send-complete"]],"^1S",[["^ ","^1K",78,"^1L",1086,"^G","on-error"]]],"~i231",["^ ","~i8",[["^ ","^1K",4,"^1L",1087,"^G","on-done"]],"^2[",[["^ ","^1K",14,"^1L",1087]],"^1J",[["^ ","^1K",14,"^1L",1087,"^G","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]],"^1P",[["^ ","^1K",59,"^1L",1087,"^G","send-complete"]],"^1S",[["^ ","^1K",73,"^1L",1087,"^G","merge-data"]]],"~i232",["^ ","~i4",[["^ ","^1K",0,"^1L",1088]],"~i8",[["^ ","^1K",20,"^1L",1088]],"~i9",[["^ ","^1K",20,"^1L",1088,"^G","fulcro.client.impl.data-fetch/is-deferred-transaction?"]],"^37",[["^ ","^1K",81,"^1L",1088,"^G","query"]]],"~i233",["^ ","~i6",[["^ ","^1K",0,"^1L",1089],["^ ","^1K",4,"^1L",1089,"^G","G__42332"],["^ ","^1K",15,"^1L",1089],["^ ","^1K",0,"^1L",1090],["^ ","^1K",0,"^1L",1090],["^ ","^1K",86,"^1L",1090,"^G","G__42332"],["^ ","^1K",116,"^1L",1090,"^G","G__42332"]],"~i7",[["^ ","^1K",8,"^1L",1090,"^G","on-done"],["^ ","^1K",48,"^1L",1090,"^G","on-done"],["^ ","^1K",98,"^1L",1090,"^G","on-done"]]],"~i234",["^ ","~i6",[["^ ","^1K",0,"^1L",1092],["^ ","^1K",103,"^1L",1092],["^ ","^1K",146,"^1L",1092],["^ ","^1K",213,"^1L",1092],["^ ","^1K",267,"^1L",1092],["^ ","^1K",344,"^1L",1092],["^ ","^1K",411,"^1L",1092],["^ ","^1K",485,"^1L",1092],["^ ","^1K",554,"^1L",1092]],"~i7",[["^ ","^1K",7,"^1L",1092,"^G","fulcro.client.impl.application.send_with_history_tracking.cljs$core$IFn$_invoke$arity$2"]],"^24",[["^ ","^1K",95,"^1L",1092,"^G","network"]],"^2M",[["^ ","^1K",205,"^1L",1092,"^G","payload"]],"^2L",[["^ ","^1K",261,"^1L",1092,"^G","query"]],"~i82",[["^ ","^1K",333,"^1L",1092,"^G","reconciler"]]],"~i235",["^ ","^2M",[["^ ","^1K",403,"^1L",1092,"^G","on-done"]],"^36",[["^ ","^1K",472,"^1L",1092,"^G","on-error"]]],"~i236",["^ ","^2M",[["^ ","^1K",544,"^1L",1092,"^G","on-update"]],"^2C",[["^ ","^1K",615,"^1L",1092,"^G","abort-id"]]],"~i238",["^ ","~i0",[["^ ","^1K",0,"^1L",1095],["^ ","^1K",54,"^1L",1095],["^ ","^1K",0,"^1L",1096]],"~i6",[["^ ","^1K",0,"^1L",1095,"^G","fulcro.client.impl.application/is-sequential?"]],"^28",[["^ ","^1K",116,"^1L",1095,"^G","network"]]],"~i239",["^ ","~i2",[["^ ","^1K",0,"^1L",1096],["^ ","^1K",0,"^1L",1099]],"^1U",[["^ ","^1K",3,"^1L",1096],["^ ","^1K",5,"^1L",1096],["^ ","^1K",7,"^1L",1096],["^ ","^1K",19,"^1L",1096],["^ ","^1K",27,"^1L",1096],["^ ","^1K",29,"^1L",1096],["^ ","^1K",31,"^1L",1096],["^ ","^1K",42,"^1L",1096],["^ ","^1K",43,"^1L",1096,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",75,"^1L",1096],["^ ","^1K",126,"^1L",1096],["^ ","^1K",131,"^1L",1096],["^ ","^1K",133,"^1L",1096],["^ ","^1K",135,"^1L",1096],["^ ","^1K",180,"^1L",1096],["^ ","^1K",180,"^1L",1096,"^G","cljs.core/native-satisfies?"],["^ ","^1K",261,"^1L",1096],["^ ","^1K",269,"^1L",1096],["^ ","^1K",269,"^1L",1096,"^G","cljs.core/native-satisfies?"]],"^27",[["^ ","^1K",214,"^1L",1096,"^G","fulcro.client.network/NetworkBehavior"],["^ ","^1K",303,"^1L",1096,"^G","fulcro.client.network/NetworkBehavior"]],"^2T",[["^ ","^1K",8,"^1L",1096,"^G","network"],["^ ","^1K",75,"^1L",1096,"^G","network"],["^ ","^1K",135,"^1L",1096,"^G","network"],["^ ","^1K",252,"^1L",1096,"^G","network"],["^ ","^1K",341,"^1L",1096,"^G","network"]]],"~i240",["^ ","~i4",[["^ ","^1K",0,"^1L",1097]],"~i5",[["^ ","^1K",7,"^1L",1097,"^G","fulcro.client.network/serialize-requests?"]],"^22",[["^ ","^1K",55,"^1L",1097,"^G","network"]]],"~i243",["^ ","~i0",[["^ ","^1K",0,"^1L",1102],["^ ","^1K",69,"^1L",1106],["^ ","^1K",146,"^1L",1106,"^G","p__42370"],["^ ","^1K",0,"^1L",1107],["^ ","^1K",0,"^1L",1107],["^ ","^1K",4,"^1L",1107,"^G","map__42372"],["^ ","^1K",17,"^1L",1107,"^G","p__42370"],["^ ","^1K",4,"^1L",1108,"^G","map__42372"],["^ ","^1K",21,"^1L",1108],["^ ","^1K",23,"^1L",1108],["^ ","^1K",25,"^1L",1108],["^ ","^1K",27,"^1L",1108],["^ ","^1K",28,"^1L",1108,"^G","map__42372"],["^ ","^1K",42,"^1L",1108],["^ ","^1K",50,"^1L",1108],["^ ","^1K",52,"^1L",1108],["^ ","^1K",54,"^1L",1108],["^ ","^1K",55,"^1L",1108],["^ ","^1K",55,"^1L",1108,"^G","map__42372"],["^ ","^1K",104,"^1L",1108],["^ ","^1K",115,"^1L",1108],["^ ","^1K",116,"^1L",1108,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",1108],["^ ","^1K",148,"^1L",1108,"^G","map__42372"],["^ ","^1K",179,"^1L",1108],["^ ","^1K",184,"^1L",1108],["^ ","^1K",191,"^1L",1108],["^ ","^1K",199,"^1L",1108],["^ ","^1K",199,"^1L",1108,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",1108,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",1108,"^G","map__42372"],["^ ","^1K",276,"^1L",1108,"^G","map__42372"],["^ ","^1K",10,"^1L",1109,"^G","map__42372"],["^ ","^1K",17,"^1L",1110],["^ ","^1K",17,"^1L",1110,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",61,"^1L",1110,"^G","map__42372"],["^ ","^1K",76,"^1L",1110],["^ ","^1K",17,"^1L",1111],["^ ","^1K",17,"^1L",1111,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",61,"^1L",1111,"^G","map__42372"],["^ ","^1K",76,"^1L",1111],["^ ","^1K",18,"^1L",1112],["^ ","^1K",18,"^1L",1112,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",62,"^1L",1112,"^G","map__42372"],["^ ","^1K",77,"^1L",1112],["^ ","^1K",24,"^1L",1113],["^ ","^1K",24,"^1L",1113,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",68,"^1L",1113,"^G","map__42372"],["^ ","^1K",83,"^1L",1113],["^ ","^1K",0,"^1L",1114]],"~i6",[["^ ","^1K",0,"^1L",1106,"^G","fulcro.client.impl.application/start-network-sequential-processing"]]],"~i246",["^ ","^1N",[["^ ","^1K",4,"^1L",1110,"^G","networking"]],"^28",[["^ ","^1K",4,"^1L",1111,"^G","reconciler"]],"^1Y",[["^ ","^1K",4,"^1L",1112,"^G","send-queues"]],"^38",[["^ ","^1K",4,"^1L",1113,"^G","response-channels"]],"^2P",[["^ ","^1K",4,"^1L",1109,"^G","app"]]],"~i247",["^ ","~i2",[["^ ","^1K",0,"^1L",1114],["^ ","^1K",4,"^1L",1114,"^G","seq__42379"],["^ ","^1K",17,"^1L",1114],["^ ","^1K",17,"^1L",1114,"^G","cljs.core/seq"],["^ ","^1K",4,"^1L",1115,"^G","chunk__42380"],["^ ","^1K",19,"^1L",1115],["^ ","^1K",4,"^1L",1116,"^G","count__42381"],["^ ","^1K",19,"^1L",1116],["^ ","^1K",4,"^1L",1117,"^G","i__42382"],["^ ","^1K",15,"^1L",1117],["^ ","^1K",0,"^1L",1119],["^ ","^1K",0,"^1L",1119],["^ ","^1K",3,"^1L",1119],["^ ","^1K",3,"^1L",1119],["^ ","^1K",4,"^1L",1119,"^G","i__42382"],["^ ","^1K",15,"^1L",1119,"^G","count__42381"],["^ ","^1K",0,"^1L",1120],["^ ","^1K",13,"^1L",1120],["^ ","^1K",13,"^1L",1120,"^G","chunk__42380"],["^ ","^1K",63,"^1L",1120,"^G","i__42382"],["^ ","^1K",0,"^1L",1121],["^ ","^1K",0,"^1L",1121],["^ ","^1K",0,"^1L",1404],["^ ","^1K",0,"^1L",1405],["^ ","^1K",15,"^1L",1405,"^G","seq__42379"],["^ ","^1K",15,"^1L",1406,"^G","chunk__42380"],["^ ","^1K",15,"^1L",1407,"^G","count__42381"],["^ ","^1K",15,"^1L",1408],["^ ","^1K",16,"^1L",1408,"^G","i__42382"],["^ ","^1K",27,"^1L",1408],["^ ","^1K",0,"^1L",1415],["^ ","^1K",4,"^1L",1415,"^G","temp__5457__auto__"],["^ ","^1K",25,"^1L",1415],["^ ","^1K",25,"^1L",1415,"^G","cljs.core/seq"],["^ ","^1K",39,"^1L",1415,"^G","seq__42379"],["^ ","^1K",0,"^1L",1416],["^ ","^1K",0,"^1L",1416],["^ ","^1K",3,"^1L",1416,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",1417],["^ ","^1K",0,"^1L",1417],["^ ","^1K",4,"^1L",1417,"^G","seq__42379"],["^ ","^1K",21,"^1L",1417,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",1418],["^ ","^1K",0,"^1L",1418],["^ ","^1K",3,"^1L",1418],["^ ","^1K",3,"^1L",1418,"^G","cljs.core/chunked-seq?"],["^ ","^1K",32,"^1L",1418,"^G","seq__42379"],["^ ","^1K",0,"^1L",1419],["^ ","^1K",4,"^1L",1419,"^G","c__4351__auto__"],["^ ","^1K",22,"^1L",1419],["^ ","^1K",22,"^1L",1419,"^G","cljs.core/chunk-first"],["^ ","^1K",44,"^1L",1419,"^G","seq__42379"],["^ ","^1K",0,"^1L",1420],["^ ","^1K",0,"^1L",1420],["^ ","^1K",15,"^1L",1420],["^ ","^1K",15,"^1L",1420,"^G","cljs.core/chunk-rest"],["^ ","^1K",36,"^1L",1420,"^G","seq__42379"],["^ ","^1K",15,"^1L",1421,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",1422],["^ ","^1K",15,"^1L",1422,"^G","cljs.core/count"],["^ ","^1K",31,"^1L",1422,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",1423],["^ ","^1K",0,"^1L",1430],["^ ","^1K",13,"^1L",1430],["^ ","^1K",13,"^1L",1430,"^G","cljs.core/first"],["^ ","^1K",29,"^1L",1430,"^G","seq__42379"],["^ ","^1K",0,"^1L",1431],["^ ","^1K",0,"^1L",1431],["^ ","^1K",0,"^1L",1714],["^ ","^1K",0,"^1L",1715],["^ ","^1K",15,"^1L",1715],["^ ","^1K",15,"^1L",1715,"^G","cljs.core/next"],["^ ","^1K",30,"^1L",1715,"^G","seq__42379"],["^ ","^1K",15,"^1L",1716],["^ ","^1K",15,"^1L",1717],["^ ","^1K",15,"^1L",1718],["^ ","^1K",0,"^1L",1726]],"^1Z",[["^ ","^1K",4,"^1L",1120,"^G","remote"],["^ ","^1K",4,"^1L",1430,"^G","remote"]],"^2N",[["^ ","^1K",31,"^1L",1114]],"^26",[["^ ","^1K",31,"^1L",1114,"^G","cljs.core/keys"]],"^1M",[["^ ","^1K",46,"^1L",1114,"^G","send-queues"]]],"~i248",["^ ","~i4",[["^ ","^1K",0,"^1L",1121],["^ ","^1K",0,"^1L",1220],["^ ","^1K",0,"^1L",1431],["^ ","^1K",0,"^1L",1530]],"^1Z",[["^ ","^1K",4,"^1L",1121,"^G","queue"],["^ ","^1K",4,"^1L",1431,"^G","queue"]],"^1R",[["^ ","^1K",18,"^1L",1121],["^ ","^1K",18,"^1L",1431]],"^20",[["^ ","^1K",18,"^1L",1121,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",18,"^1L",1431,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1K",62,"^1L",1121,"^G","send-queues"],["^ ","^1K",62,"^1L",1431,"^G","send-queues"]],"^2:",[["^ ","^1K",74,"^1L",1121,"^G","remote"],["^ ","^1K",74,"^1L",1431,"^G","remote"]]],"~i249",["^ ","^1Z",[["^ ","^1K",4,"^1L",1122,"^G","network"],["^ ","^1K",4,"^1L",1432,"^G","network"]],"^1R",[["^ ","^1K",20,"^1L",1122],["^ ","^1K",20,"^1L",1432]],"^20",[["^ ","^1K",20,"^1L",1122,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",20,"^1L",1432,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1K",64,"^1L",1122,"^G","networking"],["^ ","^1K",64,"^1L",1432,"^G","networking"]],"^3W",[["^ ","^1K",75,"^1L",1122,"^G","remote"],["^ ","^1K",75,"^1L",1432,"^G","remote"]]],"~i250",["^ ","^1Z",[["^ ","^1K",4,"^1L",1123,"^G","sequential?"],["^ ","^1K",4,"^1L",1433,"^G","sequential?"]],"^1R",[["^ ","^1K",30,"^1L",1123],["^ ","^1K",30,"^1L",1433]],"^20",[["^ ","^1K",30,"^1L",1123,"^G","fulcro.client.impl.application/is-sequential?"],["^ ","^1K",30,"^1L",1433,"^G","fulcro.client.impl.application/is-sequential?"]],"^3W",[["^ ","^1K",82,"^1L",1123,"^G","network"],["^ ","^1K",82,"^1L",1433,"^G","network"]]],"~i251",["^ ","^1Z",[["^ ","^1K",4,"^1L",1124,"^G","response-channel"],["^ ","^1K",4,"^1L",1434,"^G","response-channel"]],"^1R",[["^ ","^1K",29,"^1L",1124],["^ ","^1K",29,"^1L",1434]],"^20",[["^ ","^1K",29,"^1L",1124,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",29,"^1L",1434,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1K",73,"^1L",1124,"^G","response-channels"],["^ ","^1K",73,"^1L",1434,"^G","response-channels"]],"^2@",[["^ ","^1K",91,"^1L",1124,"^G","remote"],["^ ","^1K",91,"^1L",1434,"^G","remote"]]],"~i252",["^ ","^1Z",[["^ ","^1K",4,"^1L",1125,"^G","send-complete"],["^ ","^1K",4,"^1L",1435,"^G","send-complete"]],"^1R",[["^ ","^1K",26,"^1L",1125],["^ ","^1K",26,"^1L",1435]],"^2R",[["^ ","^1K",44,"^1L",1125,"^G","sequential?"],["^ ","^1K",44,"^1L",1435,"^G","sequential?"]]],"~i253",["^ ","^22",[["^ ","^1K",69,"^1L",1125],["^ ","^1K",0,"^1L",1127],["^ ","^1K",69,"^1L",1435],["^ ","^1K",0,"^1L",1437]],"^37",[["^ ","^1K",0,"^1L",1127],["^ ","^1K",4,"^1L",1127,"^G","c__31633__auto__"],["^ ","^1K",23,"^1L",1127],["^ ","^1K",23,"^1L",1127,"^G","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1"],["^ ","^1K",74,"^1L",1127],["^ ","^1K",0,"^1L",1128],["^ ","^1K",0,"^1L",1128],["^ ","^1K",0,"^1L",1128,"^G","cljs.core.async.impl.dispatch/run"],["^ ","^1K",34,"^1L",1128],["^ ","^1K",0,"^1L",1130],["^ ","^1K",0,"^1L",1130],["^ ","^1K",4,"^1L",1130,"^G","f__31634__auto__"],["^ ","^1K",23,"^1L",1130],["^ ","^1K",40,"^1L",1130,"^G","switch__30661__auto__"],["^ ","^1K",64,"^1L",1130],["^ ","^1K",18,"^1L",1131,"^G","state_42390"],["^ ","^1K",0,"^1L",1132],["^ ","^1K",0,"^1L",1132],["^ ","^1K",4,"^1L",1132,"^G","state_val_42391"],["^ ","^1K",22,"^1L",1132],["^ ","^1K",23,"^1L",1132,"^G","state_42390"],["^ ","^1K",35,"^1L",1132],["^ ","^1K",0,"^1L",1133],["^ ","^1K",0,"^1L",1133],["^ ","^1K",3,"^1L",1133],["^ ","^1K",4,"^1L",1133,"^G","state_val_42391"],["^ ","^1K",24,"^1L",1133],["^ ","^1K",0,"^1L",1134],["^ ","^1K",4,"^1L",1134,"^G","state_42390"],["^ ","^1K",22,"^1L",1134,"^G","state_42390"],["^ ","^1K",0,"^1L",1135],["^ ","^1K",0,"^1L",1135],["^ ","^1K",7,"^1L",1135,"^G","cljs.core.async.impl.ioc-helpers/put!"],["^ ","^1K",50,"^1L",1135,"^G","state_42390"],["^ ","^1K",66,"^1L",1135],["^ ","^1K",93,"^1L",1135],["^ ","^1K",0,"^1L",1137],["^ ","^1K",3,"^1L",1137],["^ ","^1K",4,"^1L",1137,"^G","state_val_42391"],["^ ","^1K",24,"^1L",1137],["^ ","^1K",0,"^1L",1138],["^ ","^1K",4,"^1L",1138,"^G","inst_42388"],["^ ","^1K",17,"^1L",1138],["^ ","^1K",18,"^1L",1138,"^G","state_42390"],["^ ","^1K",30,"^1L",1138],["^ ","^1K",4,"^1L",1139,"^G","state_42390"],["^ ","^1K",22,"^1L",1139,"^G","state_42390"],["^ ","^1K",0,"^1L",1140],["^ ","^1K",0,"^1L",1140],["^ ","^1K",7,"^1L",1140,"^G","cljs.core.async.impl.ioc-helpers/return-chan"],["^ ","^1K",52,"^1L",1140,"^G","state_42390"],["^ ","^1K",68,"^1L",1140,"^G","inst_42388"],["^ ","^1K",0,"^1L",1142],["^ ","^1K",0,"^1L",1147],["^ ","^1K",0,"^1L",1147],["^ ","^1K",0,"^1L",1151],["^ ","^1K",0,"^1L",1151],["^ ","^1K",4,"^1L",1151,"^G","statearr-42400"],["^ ","^1K",21,"^1L",1151],["^ ","^1K",22,"^1L",1151],["^ ","^1K",27,"^1L",1151],["^ ","^1K",32,"^1L",1151],["^ ","^1K",37,"^1L",1151],["^ ","^1K",42,"^1L",1151],["^ ","^1K",47,"^1L",1151],["^ ","^1K",52,"^1L",1151],["^ ","^1K",0,"^1L",1152],["^ ","^1K",0,"^1L",1152],["^ ","^1K",1,"^1L",1152,"^G","statearr-42400"],["^ ","^1K",16,"^1L",1152],["^ ","^1K",23,"^1L",1152,"^G","state-machine__30662__auto__"],["^ ","^1K",0,"^1L",1154],["^ ","^1K",1,"^1L",1154,"^G","statearr-42400"],["^ ","^1K",16,"^1L",1154],["^ ","^1K",23,"^1L",1154],["^ ","^1K",0,"^1L",1156,"^G","statearr-42400"],["^ ","^1K",118,"^1L",1158,"^G","state_42390"],["^ ","^1K",0,"^1L",1160],["^ ","^1K",0,"^1L",1160],["^ ","^1K",4,"^1L",1160,"^G","ret-value__30663__auto__"],["^ ","^1K",31,"^1L",1160],["^ ","^1K",48,"^1L",1160],["^ ","^1K",48,"^1L",1160],["^ ","^1K",0,"^1L",1161],["^ ","^1K",0,"^1L",1161],["^ ","^1K",4,"^1L",1161,"^G","result__30664__auto__"],["^ ","^1K",28,"^1L",1161],["^ ","^1K",28,"^1L",1161,"^G","switch__30661__auto__"],["^ ","^1K",50,"^1L",1161,"^G","state_42390"],["^ ","^1K",0,"^1L",1162],["^ ","^1K",0,"^1L",1162],["^ ","^1K",3,"^1L",1162],["^ ","^1K",3,"^1L",1162,"^G","cljs.core/keyword-identical?"],["^ ","^1K",38,"^1L",1162,"^G","result__30664__auto__"],["^ ","^1K",60,"^1L",1162],["^ ","^1K",0,"^1L",1163],["^ ","^1K",0,"^1L",1165,"^G","result__30664__auto__"],["^ ","^1K",16,"^1L",1169],["^ ","^1K",19,"^1L",1169],["^ ","^1K",20,"^1L",1169,"^G","e42402"],["^ ","^1K",38,"^1L",1169,"^G","js/Object"],["^ ","^1K",0,"^1L",1170],["^ ","^1K",4,"^1L",1170,"^G","ex__30665__auto__"],["^ ","^1K",24,"^1L",1170,"^G","e42402"],["^ ","^1K",0,"^1L",1171],["^ ","^1K",0,"^1L",1171],["^ ","^1K",4,"^1L",1171,"^G","statearr-42403"],["^ ","^1K",27,"^1L",1171,"^G","state_42390"],["^ ","^1K",0,"^1L",1172],["^ ","^1K",0,"^1L",1172],["^ ","^1K",1,"^1L",1172,"^G","statearr-42403"],["^ ","^1K",22,"^1L",1172],["^ ","^1K",29,"^1L",1172,"^G","ex__30665__auto__"],["^ ","^1K",0,"^1L",1174,"^G","statearr-42403"],["^ ","^1K",0,"^1L",1175],["^ ","^1K",0,"^1L",1175,"^G","cljs.core.async.impl.ioc-helpers/process-exception"],["^ ","^1K",51,"^1L",1175,"^G","state_42390"],["^ ","^1K",0,"^1L",1177],["^ ","^1K",0,"^1L",1179],["^ ","^1K",0,"^1L",1179],["^ ","^1K",6,"^1L",1179,"^G","e42402"],["^ ","^1K",0,"^1L",1183],["^ ","^1K",0,"^1L",1183],["^ ","^1K",3,"^1L",1183],["^ ","^1K",3,"^1L",1183,"^G","cljs.core/keyword-identical?"],["^ ","^1K",38,"^1L",1183,"^G","ret-value__30663__auto__"],["^ ","^1K",63,"^1L",1183],["^ ","^1K",0,"^1L",1184],["^ ","^1K",15,"^1L",1184,"^G","state_42390"],["^ ","^1K",0,"^1L",1188,"^G","ret-value__30663__auto__"],["^ ","^1K",109,"^1L",1193,"^G","state_42390"],["^ ","^1K",118,"^1L",1198,"^G","state_42390"],["^ ","^1K",4,"^1L",1208,"^G","state__31635__auto__"],["^ ","^1K",27,"^1L",1208],["^ ","^1K",44,"^1L",1208,"^G","statearr-42404"],["^ ","^1K",61,"^1L",1208],["^ ","^1K",62,"^1L",1208,"^G","f__31634__auto__"],["^ ","^1K",111,"^1L",1208,"^G","f__31634__auto__"],["^ ","^1K",162,"^1L",1208,"^G","f__31634__auto__"],["^ ","^1K",0,"^1L",1209],["^ ","^1K",0,"^1L",1209],["^ ","^1K",1,"^1L",1209,"^G","statearr-42404"],["^ ","^1K",16,"^1L",1209,"^G","cljs.core.async.impl.ioc-helpers/USER-START-IDX"],["^ ","^1K",16,"^1L",1209],["^ ","^1K",23,"^1L",1209,"^G","c__31633__auto__"],["^ ","^1K",0,"^1L",1211,"^G","statearr-42404"],["^ ","^1K",0,"^1L",1213],["^ ","^1K",0,"^1L",1213],["^ ","^1K",7,"^1L",1213,"^G","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped"],["^ ","^1K",66,"^1L",1213,"^G","state__31635__auto__"],["^ ","^1K",0,"^1L",1217,"^G","c__31633__auto__"],["^ ","^1K",0,"^1L",1437],["^ ","^1K",4,"^1L",1437,"^G","c__31633__auto__"],["^ ","^1K",23,"^1L",1437],["^ ","^1K",23,"^1L",1437,"^G","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1"],["^ ","^1K",74,"^1L",1437],["^ ","^1K",0,"^1L",1438],["^ ","^1K",0,"^1L",1438],["^ ","^1K",0,"^1L",1438,"^G","cljs.core.async.impl.dispatch/run"],["^ ","^1K",34,"^1L",1438],["^ ","^1K",0,"^1L",1440],["^ ","^1K",0,"^1L",1440],["^ ","^1K",4,"^1L",1440,"^G","f__31634__auto__"],["^ ","^1K",23,"^1L",1440],["^ ","^1K",40,"^1L",1440,"^G","switch__30661__auto__"],["^ ","^1K",64,"^1L",1440],["^ ","^1K",18,"^1L",1441,"^G","state_42448"],["^ ","^1K",0,"^1L",1442],["^ ","^1K",0,"^1L",1442],["^ ","^1K",4,"^1L",1442,"^G","state_val_42449"],["^ ","^1K",22,"^1L",1442],["^ ","^1K",23,"^1L",1442,"^G","state_42448"],["^ ","^1K",35,"^1L",1442],["^ ","^1K",0,"^1L",1443],["^ ","^1K",0,"^1L",1443],["^ ","^1K",3,"^1L",1443],["^ ","^1K",4,"^1L",1443,"^G","state_val_42449"],["^ ","^1K",24,"^1L",1443],["^ ","^1K",0,"^1L",1444],["^ ","^1K",4,"^1L",1444,"^G","state_42448"],["^ ","^1K",22,"^1L",1444,"^G","state_42448"],["^ ","^1K",0,"^1L",1445],["^ ","^1K",0,"^1L",1445],["^ ","^1K",7,"^1L",1445,"^G","cljs.core.async.impl.ioc-helpers/put!"],["^ ","^1K",50,"^1L",1445,"^G","state_42448"],["^ ","^1K",66,"^1L",1445],["^ ","^1K",93,"^1L",1445],["^ ","^1K",0,"^1L",1447],["^ ","^1K",3,"^1L",1447],["^ ","^1K",4,"^1L",1447,"^G","state_val_42449"],["^ ","^1K",24,"^1L",1447],["^ ","^1K",0,"^1L",1448],["^ ","^1K",4,"^1L",1448,"^G","inst_42446"],["^ ","^1K",17,"^1L",1448],["^ ","^1K",18,"^1L",1448,"^G","state_42448"],["^ ","^1K",30,"^1L",1448],["^ ","^1K",4,"^1L",1449,"^G","state_42448"],["^ ","^1K",22,"^1L",1449,"^G","state_42448"],["^ ","^1K",0,"^1L",1450],["^ ","^1K",0,"^1L",1450],["^ ","^1K",7,"^1L",1450,"^G","cljs.core.async.impl.ioc-helpers/return-chan"],["^ ","^1K",52,"^1L",1450,"^G","state_42448"],["^ ","^1K",68,"^1L",1450,"^G","inst_42446"],["^ ","^1K",0,"^1L",1452],["^ ","^1K",0,"^1L",1457],["^ ","^1K",0,"^1L",1457],["^ ","^1K",0,"^1L",1461],["^ ","^1K",0,"^1L",1461],["^ ","^1K",4,"^1L",1461,"^G","statearr-42453"],["^ ","^1K",21,"^1L",1461],["^ ","^1K",22,"^1L",1461],["^ ","^1K",27,"^1L",1461],["^ ","^1K",32,"^1L",1461],["^ ","^1K",37,"^1L",1461],["^ ","^1K",42,"^1L",1461],["^ ","^1K",47,"^1L",1461],["^ ","^1K",52,"^1L",1461],["^ ","^1K",0,"^1L",1462],["^ ","^1K",0,"^1L",1462],["^ ","^1K",1,"^1L",1462,"^G","statearr-42453"],["^ ","^1K",16,"^1L",1462],["^ ","^1K",23,"^1L",1462,"^G","state-machine__30662__auto__"],["^ ","^1K",0,"^1L",1464],["^ ","^1K",1,"^1L",1464,"^G","statearr-42453"],["^ ","^1K",16,"^1L",1464],["^ ","^1K",23,"^1L",1464],["^ ","^1K",0,"^1L",1466,"^G","statearr-42453"],["^ ","^1K",118,"^1L",1468,"^G","state_42448"],["^ ","^1K",0,"^1L",1470],["^ ","^1K",0,"^1L",1470],["^ ","^1K",4,"^1L",1470,"^G","ret-value__30663__auto__"],["^ ","^1K",31,"^1L",1470],["^ ","^1K",48,"^1L",1470],["^ ","^1K",48,"^1L",1470],["^ ","^1K",0,"^1L",1471],["^ ","^1K",0,"^1L",1471],["^ ","^1K",4,"^1L",1471,"^G","result__30664__auto__"],["^ ","^1K",28,"^1L",1471],["^ ","^1K",28,"^1L",1471,"^G","switch__30661__auto__"],["^ ","^1K",50,"^1L",1471,"^G","state_42448"],["^ ","^1K",0,"^1L",1472],["^ ","^1K",0,"^1L",1472],["^ ","^1K",3,"^1L",1472],["^ ","^1K",3,"^1L",1472,"^G","cljs.core/keyword-identical?"],["^ ","^1K",38,"^1L",1472,"^G","result__30664__auto__"],["^ ","^1K",60,"^1L",1472],["^ ","^1K",0,"^1L",1473],["^ ","^1K",0,"^1L",1475,"^G","result__30664__auto__"],["^ ","^1K",16,"^1L",1479],["^ ","^1K",19,"^1L",1479],["^ ","^1K",20,"^1L",1479,"^G","e42457"],["^ ","^1K",38,"^1L",1479,"^G","js/Object"],["^ ","^1K",0,"^1L",1480],["^ ","^1K",4,"^1L",1480,"^G","ex__30665__auto__"],["^ ","^1K",24,"^1L",1480,"^G","e42457"],["^ ","^1K",0,"^1L",1481],["^ ","^1K",0,"^1L",1481],["^ ","^1K",4,"^1L",1481,"^G","statearr-42459"],["^ ","^1K",27,"^1L",1481,"^G","state_42448"],["^ ","^1K",0,"^1L",1482],["^ ","^1K",0,"^1L",1482],["^ ","^1K",1,"^1L",1482,"^G","statearr-42459"],["^ ","^1K",22,"^1L",1482],["^ ","^1K",29,"^1L",1482,"^G","ex__30665__auto__"],["^ ","^1K",0,"^1L",1484,"^G","statearr-42459"],["^ ","^1K",0,"^1L",1485],["^ ","^1K",0,"^1L",1485,"^G","cljs.core.async.impl.ioc-helpers/process-exception"],["^ ","^1K",51,"^1L",1485,"^G","state_42448"],["^ ","^1K",0,"^1L",1487],["^ ","^1K",0,"^1L",1489],["^ ","^1K",0,"^1L",1489],["^ ","^1K",6,"^1L",1489,"^G","e42457"],["^ ","^1K",0,"^1L",1493],["^ ","^1K",0,"^1L",1493],["^ ","^1K",3,"^1L",1493],["^ ","^1K",3,"^1L",1493,"^G","cljs.core/keyword-identical?"],["^ ","^1K",38,"^1L",1493,"^G","ret-value__30663__auto__"],["^ ","^1K",63,"^1L",1493],["^ ","^1K",0,"^1L",1494],["^ ","^1K",15,"^1L",1494,"^G","state_42448"],["^ ","^1K",0,"^1L",1498,"^G","ret-value__30663__auto__"],["^ ","^1K",109,"^1L",1503,"^G","state_42448"],["^ ","^1K",118,"^1L",1508,"^G","state_42448"],["^ ","^1K",4,"^1L",1518,"^G","state__31635__auto__"],["^ ","^1K",27,"^1L",1518],["^ ","^1K",44,"^1L",1518,"^G","statearr-42462"],["^ ","^1K",61,"^1L",1518],["^ ","^1K",62,"^1L",1518,"^G","f__31634__auto__"],["^ ","^1K",111,"^1L",1518,"^G","f__31634__auto__"],["^ ","^1K",162,"^1L",1518,"^G","f__31634__auto__"],["^ ","^1K",0,"^1L",1519],["^ ","^1K",0,"^1L",1519],["^ ","^1K",1,"^1L",1519,"^G","statearr-42462"],["^ ","^1K",16,"^1L",1519,"^G","cljs.core.async.impl.ioc-helpers/USER-START-IDX"],["^ ","^1K",16,"^1L",1519],["^ ","^1K",23,"^1L",1519,"^G","c__31633__auto__"],["^ ","^1K",0,"^1L",1521,"^G","statearr-42462"],["^ ","^1K",0,"^1L",1523],["^ ","^1K",0,"^1L",1523],["^ ","^1K",7,"^1L",1523,"^G","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped"],["^ ","^1K",66,"^1L",1523,"^G","state__31635__auto__"],["^ ","^1K",0,"^1L",1527,"^G","c__31633__auto__"]],"^2@",[["^ ","^1K",70,"^1L",1135,"^G","response-channel"],["^ ","^1K",70,"^1L",1445,"^G","response-channel"]]],"~i254",["^ ","^22",[["^ ","^1K",1,"^1L",1219,"^G","cljs.core/identity"],["^ ","^1K",1,"^1L",1529,"^G","cljs.core/identity"]]],"~i255",["^ ","~i6",[["^ ","^1K",0,"^1L",1220],["^ ","^1K",4,"^1L",1220,"^G","c__31633__auto__"],["^ ","^1K",29,"^1L",1220],["^ ","^1K",29,"^1L",1220,"^G","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1"],["^ ","^1K",80,"^1L",1220],["^ ","^1K",0,"^1L",1221],["^ ","^1K",0,"^1L",1221],["^ ","^1K",0,"^1L",1221,"^G","cljs.core.async.impl.dispatch/run"],["^ ","^1K",34,"^1L",1221],["^ ","^1K",0,"^1L",1223],["^ ","^1K",0,"^1L",1223],["^ ","^1K",4,"^1L",1223,"^G","f__31634__auto__"],["^ ","^1K",23,"^1L",1223],["^ ","^1K",40,"^1L",1223,"^G","switch__30661__auto__"],["^ ","^1K",64,"^1L",1223],["^ ","^1K",18,"^1L",1224,"^G","state_42422"],["^ ","^1K",0,"^1L",1225],["^ ","^1K",0,"^1L",1225],["^ ","^1K",4,"^1L",1225,"^G","state_val_42423"],["^ ","^1K",22,"^1L",1225],["^ ","^1K",23,"^1L",1225,"^G","state_42422"],["^ ","^1K",35,"^1L",1225],["^ ","^1K",0,"^1L",1226],["^ ","^1K",0,"^1L",1226],["^ ","^1K",3,"^1L",1226],["^ ","^1K",4,"^1L",1226,"^G","state_val_42423"],["^ ","^1K",24,"^1L",1226],["^ ","^1K",0,"^1L",1227],["^ ","^1K",4,"^1L",1227,"^G","state_42422"],["^ ","^1K",22,"^1L",1227,"^G","state_42422"],["^ ","^1K",0,"^1L",1228],["^ ","^1K",0,"^1L",1228],["^ ","^1K",7,"^1L",1228,"^G","cljs.core.async.impl.ioc-helpers/take!"],["^ ","^1K",51,"^1L",1228,"^G","state_42422"],["^ ","^1K",67,"^1L",1228],["^ ","^1K",0,"^1L",1230],["^ ","^1K",3,"^1L",1230],["^ ","^1K",4,"^1L",1230,"^G","state_val_42423"],["^ ","^1K",24,"^1L",1230],["^ ","^1K",0,"^1L",1231],["^ ","^1K",4,"^1L",1231,"^G","inst_42406"],["^ ","^1K",17,"^1L",1231],["^ ","^1K",18,"^1L",1231,"^G","state_42422"],["^ ","^1K",30,"^1L",1231],["^ ","^1K",4,"^1L",1232,"^G","inst_42407"],["^ ","^1K",17,"^1L",1232,"^G","inst_42406"],["^ ","^1K",4,"^1L",1233,"^G","state_42422"],["^ ","^1K",22,"^1L",1233],["^ ","^1K",39,"^1L",1233,"^G","statearr-42426"],["^ ","^1K",56,"^1L",1233,"^G","state_42422"],["^ ","^1K",0,"^1L",1234],["^ ","^1K",0,"^1L",1234],["^ ","^1K",1,"^1L",1234,"^G","statearr-42426"],["^ ","^1K",16,"^1L",1234],["^ ","^1K",23,"^1L",1234,"^G","inst_42407"],["^ ","^1K",0,"^1L",1236,"^G","statearr-42426"],["^ ","^1K",0,"^1L",1238],["^ ","^1K",0,"^1L",1238],["^ ","^1K",0,"^1L",1238],["^ ","^1K",4,"^1L",1238,"^G","statearr-42427"],["^ ","^1K",27,"^1L",1238,"^G","state_42422"],["^ ","^1K",0,"^1L",1239],["^ ","^1K",0,"^1L",1239],["^ ","^1K",1,"^1L",1239,"^G","statearr-42427"],["^ ","^1K",22,"^1L",1239],["^ ","^1K",29,"^1L",1239],["^ ","^1K",0,"^1L",1241],["^ ","^1K",1,"^1L",1241,"^G","statearr-42427"],["^ ","^1K",22,"^1L",1241],["^ ","^1K",29,"^1L",1241],["^ ","^1K",0,"^1L",1243,"^G","statearr-42427"],["^ ","^1K",0,"^1L",1244],["^ ","^1K",0,"^1L",1246],["^ ","^1K",3,"^1L",1246],["^ ","^1K",4,"^1L",1246,"^G","state_val_42423"],["^ ","^1K",24,"^1L",1246],["^ ","^1K",0,"^1L",1247],["^ ","^1K",4,"^1L",1247,"^G","inst_42407"],["^ ","^1K",17,"^1L",1247],["^ ","^1K",18,"^1L",1247,"^G","state_42422"],["^ ","^1K",30,"^1L",1247],["^ ","^1K",4,"^1L",1248,"^G","inst_42409"],["^ ","^1K",17,"^1L",1248],["^ ","^1K",86,"^1L",1248,"^G","inst_42407"],["^ ","^1K",4,"^1L",1249,"^G","state_42422"],["^ ","^1K",22,"^1L",1249],["^ ","^1K",39,"^1L",1249,"^G","statearr-42429"],["^ ","^1K",56,"^1L",1249,"^G","state_42422"],["^ ","^1K",0,"^1L",1250],["^ ","^1K",0,"^1L",1250],["^ ","^1K",1,"^1L",1250,"^G","statearr-42429"],["^ ","^1K",16,"^1L",1250],["^ ","^1K",23,"^1L",1250,"^G","inst_42409"],["^ ","^1K",0,"^1L",1252,"^G","statearr-42429"],["^ ","^1K",0,"^1L",1254],["^ ","^1K",0,"^1L",1254],["^ ","^1K",0,"^1L",1254],["^ ","^1K",0,"^1L",1255],["^ ","^1K",4,"^1L",1255,"^G","statearr-42430"],["^ ","^1K",27,"^1L",1255,"^G","state_42422"],["^ ","^1K",0,"^1L",1256],["^ ","^1K",0,"^1L",1256],["^ ","^1K",1,"^1L",1256,"^G","statearr-42430"],["^ ","^1K",22,"^1L",1256],["^ ","^1K",29,"^1L",1256],["^ ","^1K",0,"^1L",1258,"^G","statearr-42430"],["^ ","^1K",0,"^1L",1259],["^ ","^1K",4,"^1L",1259,"^G","statearr-42431"],["^ ","^1K",27,"^1L",1259,"^G","state_42422"],["^ ","^1K",0,"^1L",1260],["^ ","^1K",0,"^1L",1260],["^ ","^1K",1,"^1L",1260,"^G","statearr-42431"],["^ ","^1K",22,"^1L",1260],["^ ","^1K",29,"^1L",1260],["^ ","^1K",0,"^1L",1262,"^G","statearr-42431"],["^ ","^1K",0,"^1L",1264],["^ ","^1K",0,"^1L",1266],["^ ","^1K",3,"^1L",1266],["^ ","^1K",4,"^1L",1266,"^G","state_val_42423"],["^ ","^1K",24,"^1L",1266],["^ ","^1K",0,"^1L",1267],["^ ","^1K",4,"^1L",1267,"^G","inst_42420"],["^ ","^1K",17,"^1L",1267],["^ ","^1K",18,"^1L",1267,"^G","state_42422"],["^ ","^1K",30,"^1L",1267],["^ ","^1K",4,"^1L",1268,"^G","state_42422"],["^ ","^1K",22,"^1L",1268,"^G","state_42422"],["^ ","^1K",0,"^1L",1269],["^ ","^1K",0,"^1L",1269],["^ ","^1K",7,"^1L",1269,"^G","cljs.core.async.impl.ioc-helpers/return-chan"],["^ ","^1K",52,"^1L",1269,"^G","state_42422"],["^ ","^1K",68,"^1L",1269,"^G","inst_42420"],["^ ","^1K",0,"^1L",1271],["^ ","^1K",3,"^1L",1271],["^ ","^1K",4,"^1L",1271,"^G","state_val_42423"],["^ ","^1K",24,"^1L",1271],["^ ","^1K",0,"^1L",1272],["^ ","^1K",4,"^1L",1272,"^G","state_42422"],["^ ","^1K",22,"^1L",1272,"^G","state_42422"],["^ ","^1K",0,"^1L",1273],["^ ","^1K",0,"^1L",1273],["^ ","^1K",7,"^1L",1273,"^G","cljs.core.async.impl.ioc-helpers/take!"],["^ ","^1K",51,"^1L",1273,"^G","state_42422"],["^ ","^1K",67,"^1L",1273],["^ ","^1K",0,"^1L",1275],["^ ","^1K",3,"^1L",1275],["^ ","^1K",4,"^1L",1275,"^G","state_val_42423"],["^ ","^1K",24,"^1L",1275],["^ ","^1K",0,"^1L",1276],["^ ","^1K",4,"^1L",1276,"^G","state_42422"],["^ ","^1K",22,"^1L",1276,"^G","state_42422"],["^ ","^1K",0,"^1L",1277],["^ ","^1K",0,"^1L",1277],["^ ","^1K",0,"^1L",1277],["^ ","^1K",4,"^1L",1277,"^G","statearr-42432"],["^ ","^1K",27,"^1L",1277,"^G","state_42422"],["^ ","^1K",0,"^1L",1278],["^ ","^1K",0,"^1L",1278],["^ ","^1K",1,"^1L",1278,"^G","statearr-42432"],["^ ","^1K",22,"^1L",1278],["^ ","^1K",29,"^1L",1278],["^ ","^1K",0,"^1L",1280],["^ ","^1K",1,"^1L",1280,"^G","statearr-42432"],["^ ","^1K",22,"^1L",1280],["^ ","^1K",29,"^1L",1280],["^ ","^1K",0,"^1L",1282,"^G","statearr-42432"],["^ ","^1K",0,"^1L",1283],["^ ","^1K",0,"^1L",1285],["^ ","^1K",3,"^1L",1285],["^ ","^1K",4,"^1L",1285,"^G","state_val_42423"],["^ ","^1K",24,"^1L",1285],["^ ","^1K",0,"^1L",1286],["^ ","^1K",4,"^1L",1286,"^G","inst_42415"],["^ ","^1K",17,"^1L",1286],["^ ","^1K",18,"^1L",1286,"^G","state_42422"],["^ ","^1K",30,"^1L",1286],["^ ","^1K",4,"^1L",1287,"^G","state_42422"],["^ ","^1K",22,"^1L",1287],["^ ","^1K",39,"^1L",1287,"^G","statearr-42433"],["^ ","^1K",56,"^1L",1287,"^G","state_42422"],["^ ","^1K",0,"^1L",1288],["^ ","^1K",0,"^1L",1288],["^ ","^1K",1,"^1L",1288,"^G","statearr-42433"],["^ ","^1K",16,"^1L",1288],["^ ","^1K",23,"^1L",1288,"^G","inst_42415"],["^ ","^1K",0,"^1L",1290,"^G","statearr-42433"],["^ ","^1K",0,"^1L",1292],["^ ","^1K",0,"^1L",1292],["^ ","^1K",7,"^1L",1292,"^G","cljs.core.async.impl.ioc-helpers/take!"],["^ ","^1K",51,"^1L",1292,"^G","state_42422"],["^ ","^1K",67,"^1L",1292],["^ ","^1K",0,"^1L",1294],["^ ","^1K",3,"^1L",1294],["^ ","^1K",4,"^1L",1294,"^G","state_val_42423"],["^ ","^1K",24,"^1L",1294],["^ ","^1K",0,"^1L",1295],["^ ","^1K",4,"^1L",1295,"^G","inst_42412"],["^ ","^1K",17,"^1L",1295],["^ ","^1K",18,"^1L",1295,"^G","state_42422"],["^ ","^1K",30,"^1L",1295],["^ ","^1K",4,"^1L",1296,"^G","state_42422"],["^ ","^1K",22,"^1L",1296,"^G","state_42422"],["^ ","^1K",0,"^1L",1297],["^ ","^1K",0,"^1L",1297],["^ ","^1K",0,"^1L",1297],["^ ","^1K",4,"^1L",1297,"^G","statearr-42434"],["^ ","^1K",27,"^1L",1297,"^G","state_42422"],["^ ","^1K",0,"^1L",1298],["^ ","^1K",0,"^1L",1298],["^ ","^1K",1,"^1L",1298,"^G","statearr-42434"],["^ ","^1K",22,"^1L",1298],["^ ","^1K",29,"^1L",1298,"^G","inst_42412"],["^ ","^1K",0,"^1L",1300],["^ ","^1K",1,"^1L",1300,"^G","statearr-42434"],["^ ","^1K",22,"^1L",1300],["^ ","^1K",29,"^1L",1300],["^ ","^1K",0,"^1L",1302,"^G","statearr-42434"],["^ ","^1K",0,"^1L",1303],["^ ","^1K",0,"^1L",1305],["^ ","^1K",3,"^1L",1305],["^ ","^1K",4,"^1L",1305,"^G","state_val_42423"],["^ ","^1K",24,"^1L",1305],["^ ","^1K",0,"^1L",1306],["^ ","^1K",4,"^1L",1306,"^G","inst_42417"],["^ ","^1K",17,"^1L",1306],["^ ","^1K",18,"^1L",1306,"^G","state_42422"],["^ ","^1K",30,"^1L",1306],["^ ","^1K",4,"^1L",1307,"^G","inst_42407"],["^ ","^1K",17,"^1L",1307,"^G","inst_42417"],["^ ","^1K",4,"^1L",1308,"^G","state_42422"],["^ ","^1K",22,"^1L",1308],["^ ","^1K",39,"^1L",1308,"^G","statearr-42435"],["^ ","^1K",56,"^1L",1308,"^G","state_42422"],["^ ","^1K",0,"^1L",1309],["^ ","^1K",0,"^1L",1309],["^ ","^1K",1,"^1L",1309,"^G","statearr-42435"],["^ ","^1K",16,"^1L",1309],["^ ","^1K",23,"^1L",1309,"^G","inst_42407"],["^ ","^1K",0,"^1L",1311,"^G","statearr-42435"],["^ ","^1K",0,"^1L",1313],["^ ","^1K",0,"^1L",1313],["^ ","^1K",0,"^1L",1313],["^ ","^1K",4,"^1L",1313,"^G","statearr-42436"],["^ ","^1K",27,"^1L",1313,"^G","state_42422"],["^ ","^1K",0,"^1L",1314],["^ ","^1K",0,"^1L",1314],["^ ","^1K",1,"^1L",1314,"^G","statearr-42436"],["^ ","^1K",22,"^1L",1314],["^ ","^1K",29,"^1L",1314],["^ ","^1K",0,"^1L",1316],["^ ","^1K",1,"^1L",1316,"^G","statearr-42436"],["^ ","^1K",22,"^1L",1316],["^ ","^1K",29,"^1L",1316],["^ ","^1K",0,"^1L",1318,"^G","statearr-42436"],["^ ","^1K",0,"^1L",1319],["^ ","^1K",0,"^1L",1321],["^ ","^1K",0,"^1L",1333],["^ ","^1K",0,"^1L",1333],["^ ","^1K",0,"^1L",1337],["^ ","^1K",0,"^1L",1337],["^ ","^1K",4,"^1L",1337,"^G","statearr-42437"],["^ ","^1K",21,"^1L",1337],["^ ","^1K",22,"^1L",1337],["^ ","^1K",27,"^1L",1337],["^ ","^1K",32,"^1L",1337],["^ ","^1K",37,"^1L",1337],["^ ","^1K",42,"^1L",1337],["^ ","^1K",47,"^1L",1337],["^ ","^1K",52,"^1L",1337],["^ ","^1K",57,"^1L",1337],["^ ","^1K",62,"^1L",1337],["^ ","^1K",67,"^1L",1337],["^ ","^1K",0,"^1L",1338],["^ ","^1K",0,"^1L",1338],["^ ","^1K",1,"^1L",1338,"^G","statearr-42437"],["^ ","^1K",16,"^1L",1338],["^ ","^1K",23,"^1L",1338,"^G","state-machine__30662__auto__"],["^ ","^1K",0,"^1L",1340],["^ ","^1K",1,"^1L",1340,"^G","statearr-42437"],["^ ","^1K",16,"^1L",1340],["^ ","^1K",23,"^1L",1340],["^ ","^1K",0,"^1L",1342,"^G","statearr-42437"],["^ ","^1K",118,"^1L",1344,"^G","state_42422"],["^ ","^1K",0,"^1L",1346],["^ ","^1K",0,"^1L",1346],["^ ","^1K",4,"^1L",1346,"^G","ret-value__30663__auto__"],["^ ","^1K",31,"^1L",1346],["^ ","^1K",48,"^1L",1346],["^ ","^1K",48,"^1L",1346],["^ ","^1K",0,"^1L",1347],["^ ","^1K",0,"^1L",1347],["^ ","^1K",4,"^1L",1347,"^G","result__30664__auto__"],["^ ","^1K",28,"^1L",1347],["^ ","^1K",28,"^1L",1347,"^G","switch__30661__auto__"],["^ ","^1K",50,"^1L",1347,"^G","state_42422"],["^ ","^1K",0,"^1L",1348],["^ ","^1K",0,"^1L",1348],["^ ","^1K",3,"^1L",1348],["^ ","^1K",3,"^1L",1348,"^G","cljs.core/keyword-identical?"],["^ ","^1K",38,"^1L",1348,"^G","result__30664__auto__"],["^ ","^1K",60,"^1L",1348],["^ ","^1K",0,"^1L",1349],["^ ","^1K",0,"^1L",1351,"^G","result__30664__auto__"],["^ ","^1K",16,"^1L",1355],["^ ","^1K",19,"^1L",1355],["^ ","^1K",20,"^1L",1355,"^G","e42439"],["^ ","^1K",38,"^1L",1355,"^G","js/Object"],["^ ","^1K",0,"^1L",1356],["^ ","^1K",4,"^1L",1356,"^G","ex__30665__auto__"],["^ ","^1K",24,"^1L",1356,"^G","e42439"],["^ ","^1K",0,"^1L",1357],["^ ","^1K",0,"^1L",1357],["^ ","^1K",4,"^1L",1357,"^G","statearr-42442"],["^ ","^1K",27,"^1L",1357,"^G","state_42422"],["^ ","^1K",0,"^1L",1358],["^ ","^1K",0,"^1L",1358],["^ ","^1K",1,"^1L",1358,"^G","statearr-42442"],["^ ","^1K",22,"^1L",1358],["^ ","^1K",29,"^1L",1358,"^G","ex__30665__auto__"],["^ ","^1K",0,"^1L",1360,"^G","statearr-42442"],["^ ","^1K",0,"^1L",1361],["^ ","^1K",0,"^1L",1361,"^G","cljs.core.async.impl.ioc-helpers/process-exception"],["^ ","^1K",51,"^1L",1361,"^G","state_42422"],["^ ","^1K",0,"^1L",1363],["^ ","^1K",0,"^1L",1365],["^ ","^1K",0,"^1L",1365],["^ ","^1K",6,"^1L",1365,"^G","e42439"],["^ ","^1K",0,"^1L",1369],["^ ","^1K",0,"^1L",1369],["^ ","^1K",3,"^1L",1369],["^ ","^1K",3,"^1L",1369,"^G","cljs.core/keyword-identical?"],["^ ","^1K",38,"^1L",1369,"^G","ret-value__30663__auto__"],["^ ","^1K",63,"^1L",1369],["^ ","^1K",0,"^1L",1370],["^ ","^1K",15,"^1L",1370,"^G","state_42422"],["^ ","^1K",0,"^1L",1374,"^G","ret-value__30663__auto__"],["^ ","^1K",109,"^1L",1379,"^G","state_42422"],["^ ","^1K",118,"^1L",1384,"^G","state_42422"],["^ ","^1K",4,"^1L",1394,"^G","state__31635__auto__"],["^ ","^1K",27,"^1L",1394],["^ ","^1K",44,"^1L",1394,"^G","statearr-42444"],["^ ","^1K",61,"^1L",1394],["^ ","^1K",62,"^1L",1394,"^G","f__31634__auto__"],["^ ","^1K",111,"^1L",1394,"^G","f__31634__auto__"],["^ ","^1K",162,"^1L",1394,"^G","f__31634__auto__"],["^ ","^1K",0,"^1L",1395],["^ ","^1K",0,"^1L",1395],["^ ","^1K",1,"^1L",1395,"^G","statearr-42444"],["^ ","^1K",16,"^1L",1395,"^G","cljs.core.async.impl.ioc-helpers/USER-START-IDX"],["^ ","^1K",16,"^1L",1395],["^ ","^1K",23,"^1L",1395,"^G","c__31633__auto__"],["^ ","^1K",0,"^1L",1397,"^G","statearr-42444"],["^ ","^1K",0,"^1L",1399],["^ ","^1K",0,"^1L",1399],["^ ","^1K",7,"^1L",1399,"^G","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped"],["^ ","^1K",66,"^1L",1399,"^G","state__31635__auto__"],["^ ","^1K",0,"^1L",1403,"^G","c__31633__auto__"],["^ ","^1K",0,"^1L",1530],["^ ","^1K",4,"^1L",1530,"^G","c__31633__auto__"],["^ ","^1K",29,"^1L",1530],["^ ","^1K",29,"^1L",1530,"^G","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1"],["^ ","^1K",80,"^1L",1530],["^ ","^1K",0,"^1L",1531],["^ ","^1K",0,"^1L",1531],["^ ","^1K",0,"^1L",1531,"^G","cljs.core.async.impl.dispatch/run"],["^ ","^1K",34,"^1L",1531],["^ ","^1K",0,"^1L",1533],["^ ","^1K",0,"^1L",1533],["^ ","^1K",4,"^1L",1533,"^G","f__31634__auto__"],["^ ","^1K",23,"^1L",1533],["^ ","^1K",40,"^1L",1533,"^G","switch__30661__auto__"],["^ ","^1K",64,"^1L",1533],["^ ","^1K",18,"^1L",1534,"^G","state_42480"],["^ ","^1K",0,"^1L",1535],["^ ","^1K",0,"^1L",1535],["^ ","^1K",4,"^1L",1535,"^G","state_val_42481"],["^ ","^1K",22,"^1L",1535],["^ ","^1K",23,"^1L",1535,"^G","state_42480"],["^ ","^1K",35,"^1L",1535],["^ ","^1K",0,"^1L",1536],["^ ","^1K",0,"^1L",1536],["^ ","^1K",3,"^1L",1536],["^ ","^1K",4,"^1L",1536,"^G","state_val_42481"],["^ ","^1K",24,"^1L",1536],["^ ","^1K",0,"^1L",1537],["^ ","^1K",4,"^1L",1537,"^G","state_42480"],["^ ","^1K",22,"^1L",1537,"^G","state_42480"],["^ ","^1K",0,"^1L",1538],["^ ","^1K",0,"^1L",1538],["^ ","^1K",7,"^1L",1538,"^G","cljs.core.async.impl.ioc-helpers/take!"],["^ ","^1K",51,"^1L",1538,"^G","state_42480"],["^ ","^1K",67,"^1L",1538],["^ ","^1K",0,"^1L",1540],["^ ","^1K",3,"^1L",1540],["^ ","^1K",4,"^1L",1540,"^G","state_val_42481"],["^ ","^1K",24,"^1L",1540],["^ ","^1K",0,"^1L",1541],["^ ","^1K",4,"^1L",1541,"^G","inst_42464"],["^ ","^1K",17,"^1L",1541],["^ ","^1K",18,"^1L",1541,"^G","state_42480"],["^ ","^1K",30,"^1L",1541],["^ ","^1K",4,"^1L",1542,"^G","inst_42465"],["^ ","^1K",17,"^1L",1542,"^G","inst_42464"],["^ ","^1K",4,"^1L",1543,"^G","state_42480"],["^ ","^1K",22,"^1L",1543],["^ ","^1K",39,"^1L",1543,"^G","statearr-42482"],["^ ","^1K",56,"^1L",1543,"^G","state_42480"],["^ ","^1K",0,"^1L",1544],["^ ","^1K",0,"^1L",1544],["^ ","^1K",1,"^1L",1544,"^G","statearr-42482"],["^ ","^1K",16,"^1L",1544],["^ ","^1K",23,"^1L",1544,"^G","inst_42465"],["^ ","^1K",0,"^1L",1546,"^G","statearr-42482"],["^ ","^1K",0,"^1L",1548],["^ ","^1K",0,"^1L",1548],["^ ","^1K",0,"^1L",1548],["^ ","^1K",4,"^1L",1548,"^G","statearr-42483"],["^ ","^1K",27,"^1L",1548,"^G","state_42480"],["^ ","^1K",0,"^1L",1549],["^ ","^1K",0,"^1L",1549],["^ ","^1K",1,"^1L",1549,"^G","statearr-42483"],["^ ","^1K",22,"^1L",1549],["^ ","^1K",29,"^1L",1549],["^ ","^1K",0,"^1L",1551],["^ ","^1K",1,"^1L",1551,"^G","statearr-42483"],["^ ","^1K",22,"^1L",1551],["^ ","^1K",29,"^1L",1551],["^ ","^1K",0,"^1L",1553,"^G","statearr-42483"],["^ ","^1K",0,"^1L",1554],["^ ","^1K",0,"^1L",1556],["^ ","^1K",3,"^1L",1556],["^ ","^1K",4,"^1L",1556,"^G","state_val_42481"],["^ ","^1K",24,"^1L",1556],["^ ","^1K",0,"^1L",1557],["^ ","^1K",4,"^1L",1557,"^G","inst_42465"],["^ ","^1K",17,"^1L",1557],["^ ","^1K",18,"^1L",1557,"^G","state_42480"],["^ ","^1K",30,"^1L",1557],["^ ","^1K",4,"^1L",1558,"^G","inst_42467"],["^ ","^1K",17,"^1L",1558],["^ ","^1K",86,"^1L",1558,"^G","inst_42465"],["^ ","^1K",4,"^1L",1559,"^G","state_42480"],["^ ","^1K",22,"^1L",1559],["^ ","^1K",39,"^1L",1559,"^G","statearr-42484"],["^ ","^1K",56,"^1L",1559,"^G","state_42480"],["^ ","^1K",0,"^1L",1560],["^ ","^1K",0,"^1L",1560],["^ ","^1K",1,"^1L",1560,"^G","statearr-42484"],["^ ","^1K",16,"^1L",1560],["^ ","^1K",23,"^1L",1560,"^G","inst_42467"],["^ ","^1K",0,"^1L",1562,"^G","statearr-42484"],["^ ","^1K",0,"^1L",1564],["^ ","^1K",0,"^1L",1564],["^ ","^1K",0,"^1L",1564],["^ ","^1K",0,"^1L",1565],["^ ","^1K",4,"^1L",1565,"^G","statearr-42485"],["^ ","^1K",27,"^1L",1565,"^G","state_42480"],["^ ","^1K",0,"^1L",1566],["^ ","^1K",0,"^1L",1566],["^ ","^1K",1,"^1L",1566,"^G","statearr-42485"],["^ ","^1K",22,"^1L",1566],["^ ","^1K",29,"^1L",1566],["^ ","^1K",0,"^1L",1568,"^G","statearr-42485"],["^ ","^1K",0,"^1L",1569],["^ ","^1K",4,"^1L",1569,"^G","statearr-42486"],["^ ","^1K",27,"^1L",1569,"^G","state_42480"],["^ ","^1K",0,"^1L",1570],["^ ","^1K",0,"^1L",1570],["^ ","^1K",1,"^1L",1570,"^G","statearr-42486"],["^ ","^1K",22,"^1L",1570],["^ ","^1K",29,"^1L",1570],["^ ","^1K",0,"^1L",1572,"^G","statearr-42486"],["^ ","^1K",0,"^1L",1574],["^ ","^1K",0,"^1L",1576],["^ ","^1K",3,"^1L",1576],["^ ","^1K",4,"^1L",1576,"^G","state_val_42481"],["^ ","^1K",24,"^1L",1576],["^ ","^1K",0,"^1L",1577],["^ ","^1K",4,"^1L",1577,"^G","inst_42478"],["^ ","^1K",17,"^1L",1577],["^ ","^1K",18,"^1L",1577,"^G","state_42480"],["^ ","^1K",30,"^1L",1577],["^ ","^1K",4,"^1L",1578,"^G","state_42480"],["^ ","^1K",22,"^1L",1578,"^G","state_42480"],["^ ","^1K",0,"^1L",1579],["^ ","^1K",0,"^1L",1579],["^ ","^1K",7,"^1L",1579,"^G","cljs.core.async.impl.ioc-helpers/return-chan"],["^ ","^1K",52,"^1L",1579,"^G","state_42480"],["^ ","^1K",68,"^1L",1579,"^G","inst_42478"],["^ ","^1K",0,"^1L",1581],["^ ","^1K",3,"^1L",1581],["^ ","^1K",4,"^1L",1581,"^G","state_val_42481"],["^ ","^1K",24,"^1L",1581],["^ ","^1K",0,"^1L",1582],["^ ","^1K",4,"^1L",1582,"^G","state_42480"],["^ ","^1K",22,"^1L",1582,"^G","state_42480"],["^ ","^1K",0,"^1L",1583],["^ ","^1K",0,"^1L",1583],["^ ","^1K",7,"^1L",1583,"^G","cljs.core.async.impl.ioc-helpers/take!"],["^ ","^1K",51,"^1L",1583,"^G","state_42480"],["^ ","^1K",67,"^1L",1583],["^ ","^1K",0,"^1L",1585],["^ ","^1K",3,"^1L",1585],["^ ","^1K",4,"^1L",1585,"^G","state_val_42481"],["^ ","^1K",24,"^1L",1585],["^ ","^1K",0,"^1L",1586],["^ ","^1K",4,"^1L",1586,"^G","state_42480"],["^ ","^1K",22,"^1L",1586,"^G","state_42480"],["^ ","^1K",0,"^1L",1587],["^ ","^1K",0,"^1L",1587],["^ ","^1K",0,"^1L",1587],["^ ","^1K",4,"^1L",1587,"^G","statearr-42490"],["^ ","^1K",27,"^1L",1587,"^G","state_42480"],["^ ","^1K",0,"^1L",1588],["^ ","^1K",0,"^1L",1588],["^ ","^1K",1,"^1L",1588,"^G","statearr-42490"],["^ ","^1K",22,"^1L",1588],["^ ","^1K",29,"^1L",1588],["^ ","^1K",0,"^1L",1590],["^ ","^1K",1,"^1L",1590,"^G","statearr-42490"],["^ ","^1K",22,"^1L",1590],["^ ","^1K",29,"^1L",1590],["^ ","^1K",0,"^1L",1592,"^G","statearr-42490"],["^ ","^1K",0,"^1L",1593],["^ ","^1K",0,"^1L",1595],["^ ","^1K",3,"^1L",1595],["^ ","^1K",4,"^1L",1595,"^G","state_val_42481"],["^ ","^1K",24,"^1L",1595],["^ ","^1K",0,"^1L",1596],["^ ","^1K",4,"^1L",1596,"^G","inst_42473"],["^ ","^1K",17,"^1L",1596],["^ ","^1K",18,"^1L",1596,"^G","state_42480"],["^ ","^1K",30,"^1L",1596],["^ ","^1K",4,"^1L",1597,"^G","state_42480"],["^ ","^1K",22,"^1L",1597],["^ ","^1K",39,"^1L",1597,"^G","statearr-42491"],["^ ","^1K",56,"^1L",1597,"^G","state_42480"],["^ ","^1K",0,"^1L",1598],["^ ","^1K",0,"^1L",1598],["^ ","^1K",1,"^1L",1598,"^G","statearr-42491"],["^ ","^1K",16,"^1L",1598],["^ ","^1K",23,"^1L",1598,"^G","inst_42473"],["^ ","^1K",0,"^1L",1600,"^G","statearr-42491"],["^ ","^1K",0,"^1L",1602],["^ ","^1K",0,"^1L",1602],["^ ","^1K",7,"^1L",1602,"^G","cljs.core.async.impl.ioc-helpers/take!"],["^ ","^1K",51,"^1L",1602,"^G","state_42480"],["^ ","^1K",67,"^1L",1602],["^ ","^1K",0,"^1L",1604],["^ ","^1K",3,"^1L",1604],["^ ","^1K",4,"^1L",1604,"^G","state_val_42481"],["^ ","^1K",24,"^1L",1604],["^ ","^1K",0,"^1L",1605],["^ ","^1K",4,"^1L",1605,"^G","inst_42470"],["^ ","^1K",17,"^1L",1605],["^ ","^1K",18,"^1L",1605,"^G","state_42480"],["^ ","^1K",30,"^1L",1605],["^ ","^1K",4,"^1L",1606,"^G","state_42480"],["^ ","^1K",22,"^1L",1606,"^G","state_42480"],["^ ","^1K",0,"^1L",1607],["^ ","^1K",0,"^1L",1607],["^ ","^1K",0,"^1L",1607],["^ ","^1K",4,"^1L",1607,"^G","statearr-42492"],["^ ","^1K",27,"^1L",1607,"^G","state_42480"],["^ ","^1K",0,"^1L",1608],["^ ","^1K",0,"^1L",1608],["^ ","^1K",1,"^1L",1608,"^G","statearr-42492"],["^ ","^1K",22,"^1L",1608],["^ ","^1K",29,"^1L",1608,"^G","inst_42470"],["^ ","^1K",0,"^1L",1610],["^ ","^1K",1,"^1L",1610,"^G","statearr-42492"],["^ ","^1K",22,"^1L",1610],["^ ","^1K",29,"^1L",1610],["^ ","^1K",0,"^1L",1612,"^G","statearr-42492"],["^ ","^1K",0,"^1L",1613],["^ ","^1K",0,"^1L",1615],["^ ","^1K",3,"^1L",1615],["^ ","^1K",4,"^1L",1615,"^G","state_val_42481"],["^ ","^1K",24,"^1L",1615],["^ ","^1K",0,"^1L",1616],["^ ","^1K",4,"^1L",1616,"^G","inst_42475"],["^ ","^1K",17,"^1L",1616],["^ ","^1K",18,"^1L",1616,"^G","state_42480"],["^ ","^1K",30,"^1L",1616],["^ ","^1K",4,"^1L",1617,"^G","inst_42465"],["^ ","^1K",17,"^1L",1617,"^G","inst_42475"],["^ ","^1K",4,"^1L",1618,"^G","state_42480"],["^ ","^1K",22,"^1L",1618],["^ ","^1K",39,"^1L",1618,"^G","statearr-42493"],["^ ","^1K",56,"^1L",1618,"^G","state_42480"],["^ ","^1K",0,"^1L",1619],["^ ","^1K",0,"^1L",1619],["^ ","^1K",1,"^1L",1619,"^G","statearr-42493"],["^ ","^1K",16,"^1L",1619],["^ ","^1K",23,"^1L",1619,"^G","inst_42465"],["^ ","^1K",0,"^1L",1621,"^G","statearr-42493"],["^ ","^1K",0,"^1L",1623],["^ ","^1K",0,"^1L",1623],["^ ","^1K",0,"^1L",1623],["^ ","^1K",4,"^1L",1623,"^G","statearr-42494"],["^ ","^1K",27,"^1L",1623,"^G","state_42480"],["^ ","^1K",0,"^1L",1624],["^ ","^1K",0,"^1L",1624],["^ ","^1K",1,"^1L",1624,"^G","statearr-42494"],["^ ","^1K",22,"^1L",1624],["^ ","^1K",29,"^1L",1624],["^ ","^1K",0,"^1L",1626],["^ ","^1K",1,"^1L",1626,"^G","statearr-42494"],["^ ","^1K",22,"^1L",1626],["^ ","^1K",29,"^1L",1626],["^ ","^1K",0,"^1L",1628,"^G","statearr-42494"],["^ ","^1K",0,"^1L",1629],["^ ","^1K",0,"^1L",1631],["^ ","^1K",0,"^1L",1643],["^ ","^1K",0,"^1L",1643],["^ ","^1K",0,"^1L",1647],["^ ","^1K",0,"^1L",1647],["^ ","^1K",4,"^1L",1647,"^G","statearr-42499"],["^ ","^1K",21,"^1L",1647],["^ ","^1K",22,"^1L",1647],["^ ","^1K",27,"^1L",1647],["^ ","^1K",32,"^1L",1647],["^ ","^1K",37,"^1L",1647],["^ ","^1K",42,"^1L",1647],["^ ","^1K",47,"^1L",1647],["^ ","^1K",52,"^1L",1647],["^ ","^1K",57,"^1L",1647],["^ ","^1K",62,"^1L",1647],["^ ","^1K",67,"^1L",1647],["^ ","^1K",0,"^1L",1648],["^ ","^1K",0,"^1L",1648],["^ ","^1K",1,"^1L",1648,"^G","statearr-42499"],["^ ","^1K",16,"^1L",1648],["^ ","^1K",23,"^1L",1648,"^G","state-machine__30662__auto__"],["^ ","^1K",0,"^1L",1650],["^ ","^1K",1,"^1L",1650,"^G","statearr-42499"],["^ ","^1K",16,"^1L",1650],["^ ","^1K",23,"^1L",1650],["^ ","^1K",0,"^1L",1652,"^G","statearr-42499"],["^ ","^1K",118,"^1L",1654,"^G","state_42480"],["^ ","^1K",0,"^1L",1656],["^ ","^1K",0,"^1L",1656],["^ ","^1K",4,"^1L",1656,"^G","ret-value__30663__auto__"],["^ ","^1K",31,"^1L",1656],["^ ","^1K",48,"^1L",1656],["^ ","^1K",48,"^1L",1656],["^ ","^1K",0,"^1L",1657],["^ ","^1K",0,"^1L",1657],["^ ","^1K",4,"^1L",1657,"^G","result__30664__auto__"],["^ ","^1K",28,"^1L",1657],["^ ","^1K",28,"^1L",1657,"^G","switch__30661__auto__"],["^ ","^1K",50,"^1L",1657,"^G","state_42480"],["^ ","^1K",0,"^1L",1658],["^ ","^1K",0,"^1L",1658],["^ ","^1K",3,"^1L",1658],["^ ","^1K",3,"^1L",1658,"^G","cljs.core/keyword-identical?"],["^ ","^1K",38,"^1L",1658,"^G","result__30664__auto__"],["^ ","^1K",60,"^1L",1658],["^ ","^1K",0,"^1L",1659],["^ ","^1K",0,"^1L",1661,"^G","result__30664__auto__"],["^ ","^1K",16,"^1L",1665],["^ ","^1K",19,"^1L",1665],["^ ","^1K",20,"^1L",1665,"^G","e42500"],["^ ","^1K",38,"^1L",1665,"^G","js/Object"],["^ ","^1K",0,"^1L",1666],["^ ","^1K",4,"^1L",1666,"^G","ex__30665__auto__"],["^ ","^1K",24,"^1L",1666,"^G","e42500"],["^ ","^1K",0,"^1L",1667],["^ ","^1K",0,"^1L",1667],["^ ","^1K",4,"^1L",1667,"^G","statearr-42501"],["^ ","^1K",27,"^1L",1667,"^G","state_42480"],["^ ","^1K",0,"^1L",1668],["^ ","^1K",0,"^1L",1668],["^ ","^1K",1,"^1L",1668,"^G","statearr-42501"],["^ ","^1K",22,"^1L",1668],["^ ","^1K",29,"^1L",1668,"^G","ex__30665__auto__"],["^ ","^1K",0,"^1L",1670,"^G","statearr-42501"],["^ ","^1K",0,"^1L",1671],["^ ","^1K",0,"^1L",1671,"^G","cljs.core.async.impl.ioc-helpers/process-exception"],["^ ","^1K",51,"^1L",1671,"^G","state_42480"],["^ ","^1K",0,"^1L",1673],["^ ","^1K",0,"^1L",1675],["^ ","^1K",0,"^1L",1675],["^ ","^1K",6,"^1L",1675,"^G","e42500"],["^ ","^1K",0,"^1L",1679],["^ ","^1K",0,"^1L",1679],["^ ","^1K",3,"^1L",1679],["^ ","^1K",3,"^1L",1679,"^G","cljs.core/keyword-identical?"],["^ ","^1K",38,"^1L",1679,"^G","ret-value__30663__auto__"],["^ ","^1K",63,"^1L",1679],["^ ","^1K",0,"^1L",1680],["^ ","^1K",15,"^1L",1680,"^G","state_42480"],["^ ","^1K",0,"^1L",1684,"^G","ret-value__30663__auto__"],["^ ","^1K",109,"^1L",1689,"^G","state_42480"],["^ ","^1K",118,"^1L",1694,"^G","state_42480"],["^ ","^1K",4,"^1L",1704,"^G","state__31635__auto__"],["^ ","^1K",27,"^1L",1704],["^ ","^1K",44,"^1L",1704,"^G","statearr-42502"],["^ ","^1K",61,"^1L",1704],["^ ","^1K",62,"^1L",1704,"^G","f__31634__auto__"],["^ ","^1K",111,"^1L",1704,"^G","f__31634__auto__"],["^ ","^1K",162,"^1L",1704,"^G","f__31634__auto__"],["^ ","^1K",0,"^1L",1705],["^ ","^1K",0,"^1L",1705],["^ ","^1K",1,"^1L",1705,"^G","statearr-42502"],["^ ","^1K",16,"^1L",1705,"^G","cljs.core.async.impl.ioc-helpers/USER-START-IDX"],["^ ","^1K",16,"^1L",1705],["^ ","^1K",23,"^1L",1705,"^G","c__31633__auto__"],["^ ","^1K",0,"^1L",1707,"^G","statearr-42502"],["^ ","^1K",0,"^1L",1709],["^ ","^1K",0,"^1L",1709],["^ ","^1K",7,"^1L",1709,"^G","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped"],["^ ","^1K",66,"^1L",1709,"^G","state__31635__auto__"],["^ ","^1K",0,"^1L",1713,"^G","c__31633__auto__"]]],"~i256",["^ ","^1Y",[["^ ","^1K",71,"^1L",1228,"^G","queue"],["^ ","^1K",71,"^1L",1538,"^G","queue"]]],"~i257",["^ ","^1N",[["^ ","^1K",17,"^1L",1248,"^G","fulcro.client.impl.application/send-payload"],["^ ","^1K",17,"^1L",1558,"^G","fulcro.client.impl.application/send-payload"]],"^1O",[["^ ","^1K",61,"^1L",1248,"^G","network"],["^ ","^1K",61,"^1L",1558,"^G","network"]],"^23",[["^ ","^1K",75,"^1L",1248,"^G","reconciler"],["^ ","^1K",75,"^1L",1558,"^G","reconciler"]],"^2H",[["^ ","^1K",97,"^1L",1248,"^G","send-complete"],["^ ","^1K",97,"^1L",1558,"^G","send-complete"]]],"~i258",["^ ","^1X",[["^ ","^1K",20,"^1L",1254,"^G","sequential?"],["^ ","^1K",20,"^1L",1564,"^G","sequential?"]]],"~i259",["^ ","^28",[["^ ","^1K",71,"^1L",1273,"^G","response-channel"],["^ ","^1K",71,"^1L",1583,"^G","response-channel"]]],"~i260",["^ ","^1R",[["^ ","^1K",71,"^1L",1292,"^G","queue"],["^ ","^1K",71,"^1L",1602,"^G","queue"]]],"~i262",["^ ","~i0",[["^ ","^1K",0,"^1L",1732],["^ ","^1K",53,"^1L",1741],["^ ","^1K",114,"^1L",1741,"^G","p__42723"],["^ ","^1K",144,"^1L",1741,"^G","p__42724"],["^ ","^1K",0,"^1L",1742],["^ ","^1K",0,"^1L",1742],["^ ","^1K",4,"^1L",1742,"^G","map__42727"],["^ ","^1K",17,"^1L",1742,"^G","p__42723"],["^ ","^1K",4,"^1L",1743,"^G","map__42727"],["^ ","^1K",21,"^1L",1743],["^ ","^1K",23,"^1L",1743],["^ ","^1K",25,"^1L",1743],["^ ","^1K",27,"^1L",1743],["^ ","^1K",28,"^1L",1743,"^G","map__42727"],["^ ","^1K",42,"^1L",1743],["^ ","^1K",50,"^1L",1743],["^ ","^1K",52,"^1L",1743],["^ ","^1K",54,"^1L",1743],["^ ","^1K",55,"^1L",1743],["^ ","^1K",55,"^1L",1743,"^G","map__42727"],["^ ","^1K",104,"^1L",1743],["^ ","^1K",115,"^1L",1743],["^ ","^1K",116,"^1L",1743,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",1743],["^ ","^1K",148,"^1L",1743,"^G","map__42727"],["^ ","^1K",179,"^1L",1743],["^ ","^1K",184,"^1L",1743],["^ ","^1K",191,"^1L",1743],["^ ","^1K",199,"^1L",1743],["^ ","^1K",199,"^1L",1743,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",1743,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",1743,"^G","map__42727"],["^ ","^1K",276,"^1L",1743,"^G","map__42727"],["^ ","^1K",10,"^1L",1744,"^G","map__42727"],["^ ","^1K",18,"^1L",1745],["^ ","^1K",18,"^1L",1745,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",62,"^1L",1745,"^G","map__42727"],["^ ","^1K",77,"^1L",1745],["^ ","^1K",21,"^1L",1746],["^ ","^1K",21,"^1L",1746,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",65,"^1L",1746,"^G","map__42727"],["^ ","^1K",80,"^1L",1746],["^ ","^1K",4,"^1L",1747,"^G","map__42728"],["^ ","^1K",17,"^1L",1747,"^G","p__42724"],["^ ","^1K",4,"^1L",1748,"^G","map__42728"],["^ ","^1K",21,"^1L",1748],["^ ","^1K",23,"^1L",1748],["^ ","^1K",25,"^1L",1748],["^ ","^1K",27,"^1L",1748],["^ ","^1K",28,"^1L",1748,"^G","map__42728"],["^ ","^1K",42,"^1L",1748],["^ ","^1K",50,"^1L",1748],["^ ","^1K",52,"^1L",1748],["^ ","^1K",54,"^1L",1748],["^ ","^1K",55,"^1L",1748],["^ ","^1K",55,"^1L",1748,"^G","map__42728"],["^ ","^1K",104,"^1L",1748],["^ ","^1K",115,"^1L",1748],["^ ","^1K",116,"^1L",1748,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",1748],["^ ","^1K",148,"^1L",1748,"^G","map__42728"],["^ ","^1K",179,"^1L",1748],["^ ","^1K",184,"^1L",1748],["^ ","^1K",191,"^1L",1748],["^ ","^1K",199,"^1L",1748],["^ ","^1K",199,"^1L",1748,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",1748,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",1748,"^G","map__42728"],["^ ","^1K",276,"^1L",1748,"^G","map__42728"],["^ ","^1K",25,"^1L",1749,"^G","map__42728"],["^ ","^1K",14,"^1L",1750],["^ ","^1K",14,"^1L",1750,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",58,"^1L",1750,"^G","map__42728"],["^ ","^1K",73,"^1L",1750],["^ ","^1K",0,"^1L",1751]],"~i6",[["^ ","^1K",0,"^1L",1741,"^G","fulcro.client.impl.application/generate-reconciler"]]],"~i270",["^ ","^1N",[["^ ","^1K",4,"^1L",1745,"^G","send-queues"]],"^1M",[["^ ","^1K",4,"^1L",1746,"^G","mutation-merge"]],"^3W",[["^ ","^1K",4,"^1L",1744,"^G","app"]],"^2>",[["^ ","^1K",123,"^1L",1741,"^G","initial-state"]],"^30",[["^ ","^1K",137,"^1L",1741,"^G","parser"]],"^3<",[["^ ","^1K",4,"^1L",1750,"^G","migrate"]],"~i90",[["^ ","^1K",4,"^1L",1749,"^G","reconciler-options"]]],"~i271",["^ ","~i2",[["^ ","^1K",0,"^1L",1751],["^ ","^1K",0,"^1L",1848]],"~i8",[["^ ","^1K",4,"^1L",1751,"^G","rec-atom"]],"^24",[["^ ","^1K",15,"^1L",1751],["^ ","^1K",60,"^1L",1751]],"^25",[["^ ","^1K",15,"^1L",1751,"^G","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i272",["^ ","~i8",[["^ ","^1K",4,"^1L",1752,"^G","remotes"]],"^24",[["^ ","^1K",14,"^1L",1752]],"^25",[["^ ","^1K",14,"^1L",1752,"^G","cljs.core/keys"]],"^29",[["^ ","^1K",29,"^1L",1752,"^G","send-queues"]]],"~i273",["^ ","~i8",[["^ ","^1K",4,"^1L",1753,"^G","tempid-migrate"]],"^24",[["^ ","^1K",21,"^1L",1753],["^ ","^1K",0,"^1L",1755]],"^1S",[["^ ","^1K",18,"^1L",1754,"^G","pure"]],"^2:",[["^ ","^1K",23,"^1L",1754,"^G","_"]],"^33",[["^ ","^1K",25,"^1L",1754,"^G","tempids"]]],"~i274",["^ ","^37",[["^ ","^1K",0,"^1L",1755],["^ ","^1K",4,"^1L",1755,"^G","seq__42747"],["^ ","^1K",23,"^1L",1755],["^ ","^1K",23,"^1L",1755,"^G","cljs.core/seq"],["^ ","^1K",4,"^1L",1756,"^G","chunk__42748"],["^ ","^1K",25,"^1L",1756],["^ ","^1K",4,"^1L",1757,"^G","count__42749"],["^ ","^1K",25,"^1L",1757],["^ ","^1K",4,"^1L",1758,"^G","i__42750"],["^ ","^1K",21,"^1L",1758],["^ ","^1K",0,"^1L",1760],["^ ","^1K",0,"^1L",1760],["^ ","^1K",3,"^1L",1760],["^ ","^1K",3,"^1L",1760],["^ ","^1K",4,"^1L",1760,"^G","i__42750"],["^ ","^1K",21,"^1L",1760,"^G","count__42749"],["^ ","^1K",0,"^1L",1761],["^ ","^1K",18,"^1L",1761],["^ ","^1K",18,"^1L",1761,"^G","chunk__42748"],["^ ","^1K",74,"^1L",1761,"^G","i__42750"],["^ ","^1K",0,"^1L",1762],["^ ","^1K",0,"^1L",1762],["^ ","^1K",0,"^1L",1764],["^ ","^1K",0,"^1L",1765],["^ ","^1K",15,"^1L",1765,"^G","seq__42747"],["^ ","^1K",15,"^1L",1766,"^G","chunk__42748"],["^ ","^1K",15,"^1L",1767,"^G","count__42749"],["^ ","^1K",15,"^1L",1768],["^ ","^1K",16,"^1L",1768,"^G","i__42750"],["^ ","^1K",33,"^1L",1768],["^ ","^1K",0,"^1L",1775],["^ ","^1K",4,"^1L",1775,"^G","temp__5457__auto__"],["^ ","^1K",31,"^1L",1775],["^ ","^1K",31,"^1L",1775,"^G","cljs.core/seq"],["^ ","^1K",45,"^1L",1775,"^G","seq__42747"],["^ ","^1K",0,"^1L",1776],["^ ","^1K",0,"^1L",1776],["^ ","^1K",3,"^1L",1776,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",1777],["^ ","^1K",0,"^1L",1777],["^ ","^1K",4,"^1L",1777,"^G","seq__42747"],["^ ","^1K",27,"^1L",1777,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",1778],["^ ","^1K",0,"^1L",1778],["^ ","^1K",3,"^1L",1778],["^ ","^1K",3,"^1L",1778,"^G","cljs.core/chunked-seq?"],["^ ","^1K",32,"^1L",1778,"^G","seq__42747"],["^ ","^1K",0,"^1L",1779],["^ ","^1K",4,"^1L",1779,"^G","c__4351__auto__"],["^ ","^1K",28,"^1L",1779],["^ ","^1K",28,"^1L",1779,"^G","cljs.core/chunk-first"],["^ ","^1K",50,"^1L",1779,"^G","seq__42747"],["^ ","^1K",0,"^1L",1780],["^ ","^1K",0,"^1L",1780],["^ ","^1K",15,"^1L",1780],["^ ","^1K",15,"^1L",1780,"^G","cljs.core/chunk-rest"],["^ ","^1K",36,"^1L",1780,"^G","seq__42747"],["^ ","^1K",15,"^1L",1781,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",1782],["^ ","^1K",15,"^1L",1782,"^G","cljs.core/count"],["^ ","^1K",31,"^1L",1782,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",1783],["^ ","^1K",0,"^1L",1790],["^ ","^1K",18,"^1L",1790],["^ ","^1K",18,"^1L",1790,"^G","cljs.core/first"],["^ ","^1K",34,"^1L",1790,"^G","seq__42747"],["^ ","^1K",0,"^1L",1791],["^ ","^1K",0,"^1L",1791],["^ ","^1K",0,"^1L",1793],["^ ","^1K",0,"^1L",1794],["^ ","^1K",15,"^1L",1794],["^ ","^1K",15,"^1L",1794,"^G","cljs.core/next"],["^ ","^1K",30,"^1L",1794,"^G","seq__42747"],["^ ","^1K",15,"^1L",1795],["^ ","^1K",15,"^1L",1796],["^ ","^1K",15,"^1L",1797],["^ ","^1K",0,"^1L",1805]],"^2:",[["^ ","^1K",4,"^1L",1761,"^G","queue"],["^ ","^1K",4,"^1L",1790,"^G","queue"]],"^2@",[["^ ","^1K",37,"^1L",1755]],"^2H",[["^ ","^1K",37,"^1L",1755,"^G","cljs.core/vals"]],"^2Y",[["^ ","^1K",52,"^1L",1755,"^G","send-queues"]]],"~i275",["^ ","^27",[["^ ","^1K",0,"^1L",1762],["^ ","^1K",0,"^1L",1791]],"^1S",[["^ ","^1K",0,"^1L",1762,"^G","fulcro.client.primitives/rewrite-tempids-in-request-queue"],["^ ","^1K",0,"^1L",1791,"^G","fulcro.client.primitives/rewrite-tempids-in-request-queue"]],"^3<",[["^ ","^1K",58,"^1L",1762,"^G","queue"],["^ ","^1K",58,"^1L",1791,"^G","queue"]],"^34",[["^ ","^1K",70,"^1L",1762,"^G","tempids"],["^ ","^1K",70,"^1L",1791,"^G","tempids"]]],"~i276",["^ ","^37",[["^ ","^1K",0,"^1L",1810],["^ ","^1K",0,"^1L",1817]],"^2I",[["^ ","^1K",4,"^1L",1810,"^G","state-migrate"]],"^2Y",[["^ ","^1K",20,"^1L",1810],["^ ","^1K",37,"^1L",1810,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",1811],["^ ","^1K",0,"^1L",1811],["^ ","^1K",20,"^1L",1811,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",1812,"^G","or__3949__auto__"]],"^1[",[["^ ","^1K",56,"^1L",1810,"^G","migrate"]],"^2P",[["^ ","^1K",0,"^1L",1814,"^G","fulcro.client.primitives/resolve-tempids"]]],"~i277",["^ ","^27",[["^ ","^1K",0,"^1L",1817]],"^1S",[["^ ","^1K",8,"^1L",1817,"^G","state-migrate"],["^ ","^1K",54,"^1L",1817,"^G","state-migrate"],["^ ","^1K",114,"^1L",1817,"^G","state-migrate"]],"^2A",[["^ ","^1K",98,"^1L",1817,"^G","pure"],["^ ","^1K",138,"^1L",1817,"^G","pure"]],"^2T",[["^ ","^1K",103,"^1L",1817,"^G","tempids"],["^ ","^1K",143,"^1L",1817,"^G","tempids"]]],"~i278",["^ ","~i8",[["^ ","^1K",4,"^1L",1820,"^G","initial-state-with-locale"]],"^24",[["^ ","^1K",32,"^1L",1820],["^ ","^1K",0,"^1L",1826]],"^29",[["^ ","^1K",49,"^1L",1820,"^G","set-default-locale"]],"^2O",[["^ ","^1K",70,"^1L",1820],["^ ","^1K",0,"^1L",1822]],"^2L",[["^ ","^1K",18,"^1L",1821,"^G","s"]],"^32",[["^ ","^1K",0,"^1L",1822],["^ ","^1K",56,"^1L",1822]],"^2P",[["^ ","^1K",7,"^1L",1822,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$3"]],"^3;",[["^ ","^1K",54,"^1L",1822,"^G","s"]],"^39",[["^ ","^1K",117,"^1L",1822],["^ ","^1K",181,"^1L",1822]],"~i89",[["^ ","^1K",117,"^1L",1822,"^G","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2"]],"~i94",[["^ ","^1K",162,"^1L",1822,"^G","cljs.core/identity"]]],"~i279",["^ ","^29",[["^ ","^1K",4,"^1L",1825,"^G","is-atom?"]],"^2O",[["^ ","^1K",21,"^1L",1825]],"^1[",[["^ ","^1K",21,"^1L",1825,"^G","fulcro.util/atom?"]],"^2C",[["^ ","^1K",45,"^1L",1825,"^G","initial-state"]]],"~i280",["^ ","^37",[["^ ","^1K",0,"^1L",1826]],"^29",[["^ ","^1K",20,"^1L",1826,"^G","is-atom?"]]],"~i281",["^ ","^27",[["^ ","^1K",0,"^1L",1827]]],"~i282",["^ ","^29",[["^ ","^1K",0,"^1L",1827]],"^2S",[["^ ","^1K",0,"^1L",1827,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^2<",[["^ ","^1K",51,"^1L",1827,"^G","initial-state"]],"^2K",[["^ ","^1K",65,"^1L",1827,"^G","set-default-locale"]]],"~i283",["^ ","^29",[["^ ","^1K",0,"^1L",1829,"^G","initial-state"]]],"~i284",["^ ","^27",[["^ ","^1K",0,"^1L",1831]]],"~i285",["^ ","^29",[["^ ","^1K",0,"^1L",1831]],"^2S",[["^ ","^1K",7,"^1L",1831,"^G","set-default-locale"]],"^1[",[["^ ","^1K",26,"^1L",1831,"^G","initial-state"]]],"~i286",["^ ","~i8",[["^ ","^1K",4,"^1L",1834,"^G","config"]],"^24",[["^ ","^1K",13,"^1L",1834],["^ ","^1K",116,"^1L",1834],["^ ","^1K",170,"^1L",1834],["^ ","^1K",213,"^1L",1834],["^ ","^1K",287,"^1L",1834],["^ ","^1K",369,"^1L",1834],["^ ","^1K",1,"^1L",1838],["^ ","^1K",65,"^1L",1838],["^ ","^1K",70,"^1L",1838],["^ ","^1K",137,"^1L",1838],["^ ","^1K",1,"^1L",1842],["^ ","^1K",1,"^1L",1846]],"^25",[["^ ","^1K",13,"^1L",1834,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]]],"~i287",["^ ","^37",[["^ ","^1K",151,"^1L",1834,"^G","reconciler-options"]]],"~i288",["^ ","^2@",[["^ ","^1K",272,"^1L",1834,"^G","tempid-migrate"]]],"~i289",["^ ","^2@",[["^ ","^1K",343,"^1L",1834,"^G","initial-state-with-locale"]]],"~i290",["^ ","^2@",[["^ ","^1K",422,"^1L",1834],["^ ","^1K",0,"^1L",1836]],"^2=",[["^ ","^1K",18,"^1L",1835,"^G","sends-keyed-by-remote"]],"^3<",[["^ ","^1K",40,"^1L",1835,"^G","result-merge-callback"]]],"~i291",["^ ","^2M",[["^ ","^1K",0,"^1L",1836]],"^2A",[["^ ","^1K",7,"^1L",1836,"^G","fulcro.client.impl.application/server-send"]],"^4E",[["^ ","^1K",50,"^1L",1836],["^ ","^1K",100,"^1L",1836],["^ ","^1K",166,"^1L",1836],["^ ","^1K",166,"^1L",1836,"^G","cljs.core/deref"]],"^1T",[["^ ","^1K",50,"^1L",1836,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2C",[["^ ","^1K",96,"^1L",1836,"^G","app"]],"^6C",[["^ ","^1K",182,"^1L",1836,"^G","rec-atom"]],"^3F",[["^ ","^1K",193,"^1L",1836,"^G","sends-keyed-by-remote"]],"^3Y",[["^ ","^1K",215,"^1L",1836,"^G","result-merge-callback"]]],"~i293",["^ ","^2@",[["^ ","^1K",129,"^1L",1838,"^G","remotes"]]],"~i294",["^ ","^2@",[["^ ","^1K",204,"^1L",1838],["^ ","^1K",0,"^1L",1840]],"^2=",[["^ ","^1K",18,"^1L",1839,"^G","reconciler"]],"^1T",[["^ ","^1K",29,"^1L",1839,"^G","app-state"]],"^2D",[["^ ","^1K",39,"^1L",1839,"^G","ident"]],"^5N",[["^ ","^1K",45,"^1L",1839,"^G","props"]]],"~i295",["^ ","^2M",[["^ ","^1K",0,"^1L",1840]],"^2A",[["^ ","^1K",7,"^1L",1840,"^G","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^3=",[["^ ","^1K",57,"^1L",1840,"^G","app-state"]],"^2Q",[["^ ","^1K",67,"^1L",1840,"^G","ident"]],"^2E",[["^ ","^1K",73,"^1L",1840]],"^3@",[["^ ","^1K",73,"^1L",1840,"^G","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]],"^2V",[["^ ","^1K",118,"^1L",1840,"^G","fulcro.client.primitives/sweep-one"]],"^3H",[["^ ","^1K",153,"^1L",1840,"^G","cljs.core/merge"]],"^3L",[["^ ","^1K",170,"^1L",1840,"^G","props"]]],"~i296",["^ ","^2@",[["^ ","^1K",66,"^1L",1842],["^ ","^1K",0,"^1L",1844]],"^2=",[["^ ","^1K",18,"^1L",1843,"^G","target"]],"^30",[["^ ","^1K",25,"^1L",1843,"^G","source"]]],"~i297",["^ ","^2M",[["^ ","^1K",0,"^1L",1844]],"^2A",[["^ ","^1K",7,"^1L",1844,"^G","fulcro.client.primitives/merge-handler"]],"^2C",[["^ ","^1K",46,"^1L",1844,"^G","mutation-merge"]],"^2F",[["^ ","^1K",61,"^1L",1844,"^G","target"]],"^6D",[["^ ","^1K",68,"^1L",1844,"^G","source"]]],"~i298",["^ ","^2@",[["^ ","^1K",59,"^1L",1846,"^G","parser"]]],"~i299",["^ ","~i8",[["^ ","^1K",4,"^1L",1847,"^G","rec"]],"^24",[["^ ","^1K",10,"^1L",1847]],"^25",[["^ ","^1K",10,"^1L",1847,"^G","fulcro.client.primitives/reconciler"]],"^2H",[["^ ","^1K",46,"^1L",1847,"^G","config"]]],"~i300",["^ ","~i4",[["^ ","^1K",0,"^1L",1848]],"~i5",[["^ ","^1K",0,"^1L",1848,"^G","cljs.core/reset!"]],"^1Q",[["^ ","^1K",22,"^1L",1848,"^G","rec-atom"]],"^4Q",[["^ ","^1K",31,"^1L",1848,"^G","rec"]]],"~i301",["^ ","~i4",[["^ ","^1K",0,"^1L",1850,"^G","rec"]]],"~i303",["^ ","~i0",[["^ ","^1K",0,"^1L",1852],["^ ","^1K",67,"^1L",1852],["^ ","^1K",0,"^1L",1853]],"~i6",[["^ ","^1K",0,"^1L",1852,"^G","fulcro.client.impl.application/initialize-global-error-callbacks"]]],"~i304",["^ ","~i3",[["^ ","^1K",142,"^1L",1852,"^G","app"]]],"~i305",["^ ","~i2",[["^ ","^1K",0,"^1L",1853],["^ ","^1K",4,"^1L",1853,"^G","seq__42814"],["^ ","^1K",17,"^1L",1853],["^ ","^1K",17,"^1L",1853,"^G","cljs.core/seq"],["^ ","^1K",4,"^1L",1854,"^G","chunk__42815"],["^ ","^1K",19,"^1L",1854],["^ ","^1K",4,"^1L",1855,"^G","count__42816"],["^ ","^1K",19,"^1L",1855],["^ ","^1K",4,"^1L",1856,"^G","i__42817"],["^ ","^1K",15,"^1L",1856],["^ ","^1K",0,"^1L",1858],["^ ","^1K",0,"^1L",1858],["^ ","^1K",3,"^1L",1858],["^ ","^1K",3,"^1L",1858],["^ ","^1K",4,"^1L",1858,"^G","i__42817"],["^ ","^1K",15,"^1L",1858,"^G","count__42816"],["^ ","^1K",0,"^1L",1859],["^ ","^1K",13,"^1L",1859],["^ ","^1K",13,"^1L",1859,"^G","chunk__42815"],["^ ","^1K",63,"^1L",1859,"^G","i__42817"],["^ ","^1K",0,"^1L",1860],["^ ","^1K",0,"^1L",1860],["^ ","^1K",0,"^1L",1874],["^ ","^1K",0,"^1L",1875],["^ ","^1K",15,"^1L",1875,"^G","seq__42814"],["^ ","^1K",15,"^1L",1876,"^G","chunk__42815"],["^ ","^1K",15,"^1L",1877,"^G","count__42816"],["^ ","^1K",15,"^1L",1878],["^ ","^1K",16,"^1L",1878,"^G","i__42817"],["^ ","^1K",27,"^1L",1878],["^ ","^1K",0,"^1L",1885],["^ ","^1K",4,"^1L",1885,"^G","temp__5457__auto__"],["^ ","^1K",25,"^1L",1885],["^ ","^1K",25,"^1L",1885,"^G","cljs.core/seq"],["^ ","^1K",39,"^1L",1885,"^G","seq__42814"],["^ ","^1K",0,"^1L",1886],["^ ","^1K",0,"^1L",1886],["^ ","^1K",3,"^1L",1886,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",1887],["^ ","^1K",0,"^1L",1887],["^ ","^1K",4,"^1L",1887,"^G","seq__42814"],["^ ","^1K",21,"^1L",1887,"^G","temp__5457__auto__"],["^ ","^1K",0,"^1L",1888],["^ ","^1K",0,"^1L",1888],["^ ","^1K",3,"^1L",1888],["^ ","^1K",3,"^1L",1888,"^G","cljs.core/chunked-seq?"],["^ ","^1K",32,"^1L",1888,"^G","seq__42814"],["^ ","^1K",0,"^1L",1889],["^ ","^1K",4,"^1L",1889,"^G","c__4351__auto__"],["^ ","^1K",22,"^1L",1889],["^ ","^1K",22,"^1L",1889,"^G","cljs.core/chunk-first"],["^ ","^1K",44,"^1L",1889,"^G","seq__42814"],["^ ","^1K",0,"^1L",1890],["^ ","^1K",0,"^1L",1890],["^ ","^1K",15,"^1L",1890],["^ ","^1K",15,"^1L",1890,"^G","cljs.core/chunk-rest"],["^ ","^1K",36,"^1L",1890,"^G","seq__42814"],["^ ","^1K",15,"^1L",1891,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",1892],["^ ","^1K",15,"^1L",1892,"^G","cljs.core/count"],["^ ","^1K",31,"^1L",1892,"^G","c__4351__auto__"],["^ ","^1K",15,"^1L",1893],["^ ","^1K",0,"^1L",1900],["^ ","^1K",13,"^1L",1900],["^ ","^1K",13,"^1L",1900,"^G","cljs.core/first"],["^ ","^1K",29,"^1L",1900,"^G","seq__42814"],["^ ","^1K",0,"^1L",1901],["^ ","^1K",0,"^1L",1901],["^ ","^1K",0,"^1L",1915],["^ ","^1K",0,"^1L",1916],["^ ","^1K",15,"^1L",1916],["^ ","^1K",15,"^1L",1916,"^G","cljs.core/next"],["^ ","^1K",30,"^1L",1916,"^G","seq__42814"],["^ ","^1K",15,"^1L",1917],["^ ","^1K",15,"^1L",1918],["^ ","^1K",15,"^1L",1919],["^ ","^1K",0,"^1L",1927]],"^1Z",[["^ ","^1K",4,"^1L",1859,"^G","remote"],["^ ","^1K",4,"^1L",1900,"^G","remote"]],"^2N",[["^ ","^1K",31,"^1L",1853]],"^26",[["^ ","^1K",31,"^1L",1853,"^G","cljs.core/keys"]],"^1M",[["^ ","^1K",46,"^1L",1853],["^ ","^1K",46,"^1L",1853]],"^37",[["^ ","^1K",140,"^1L",1853,"^G","app"]]],"~i306",["^ ","~i4",[["^ ","^1K",0,"^1L",1860],["^ ","^1K",0,"^1L",1861],["^ ","^1K",0,"^1L",1901],["^ ","^1K",0,"^1L",1902]],"^1Z",[["^ ","^1K",4,"^1L",1860,"^G","cb-atom"],["^ ","^1K",4,"^1L",1901,"^G","cb-atom"]],"^26",[["^ ","^1K",20,"^1L",1860],["^ ","^1K",71,"^1L",1860],["^ ","^1K",154,"^1L",1860],["^ ","^1K",225,"^1L",1860],["^ ","^1K",20,"^1L",1901],["^ ","^1K",71,"^1L",1901],["^ ","^1K",154,"^1L",1901],["^ ","^1K",225,"^1L",1901]],"^2[",[["^ ","^1K",20,"^1L",1860,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",20,"^1L",1901,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1U",[["^ ","^1K",67,"^1L",1860,"^G","app"],["^ ","^1K",67,"^1L",1901,"^G","app"]],"^3W",[["^ ","^1K",218,"^1L",1860,"^G","remote"],["^ ","^1K",218,"^1L",1901,"^G","remote"]]],"~i307",["^ ","~i6",[["^ ","^1K",0,"^1L",1861],["^ ","^1K",0,"^1L",1862],["^ ","^1K",0,"^1L",1872],["^ ","^1K",0,"^1L",1902],["^ ","^1K",0,"^1L",1903],["^ ","^1K",0,"^1L",1913]],"^1Q",[["^ ","^1K",20,"^1L",1861],["^ ","^1K",20,"^1L",1902]],"^1V",[["^ ","^1K",20,"^1L",1861,"^G","fulcro.util/atom?"],["^ ","^1K",20,"^1L",1902,"^G","fulcro.util/atom?"]],"^1P",[["^ ","^1K",44,"^1L",1861,"^G","cb-atom"],["^ ","^1K",44,"^1L",1902,"^G","cb-atom"]]],"~i308",["^ ","~i8",[["^ ","^1K",0,"^1L",1862],["^ ","^1K",65,"^1L",1862],["^ ","^1K",18,"^1L",1863,"^G","p1__42813#"],["^ ","^1K",0,"^1L",1864],["^ ","^1K",0,"^1L",1903],["^ ","^1K",65,"^1L",1903],["^ ","^1K",18,"^1L",1904,"^G","p1__42813#"],["^ ","^1K",0,"^1L",1905]],"~i9",[["^ ","^1K",0,"^1L",1862,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",0,"^1L",1903,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^1W",[["^ ","^1K",51,"^1L",1862,"^G","cb-atom"],["^ ","^1K",51,"^1L",1903,"^G","cb-atom"]],"^1O",[["^ ","^1K",0,"^1L",1864],["^ ","^1K",0,"^1L",1905]],"^20",[["^ ","^1K",3,"^1L",1864],["^ ","^1K",23,"^1L",1864,"^G","p1__42813#"],["^ ","^1K",3,"^1L",1905],["^ ","^1K",23,"^1L",1905,"^G","p1__42813#"]],"^22",[["^ ","^1K",3,"^1L",1864,"^G","cljs.core/fn?"],["^ ","^1K",3,"^1L",1905,"^G","cljs.core/fn?"]]],"~i309",["^ ","^1U",[["^ ","^1K",0,"^1L",1865],["^ ","^1K",55,"^1L",1865,"^G","p1__42813#"],["^ ","^1K",0,"^1L",1906],["^ ","^1K",55,"^1L",1906,"^G","p1__42813#"]],"^1R",[["^ ","^1K",7,"^1L",1865,"^G","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",7,"^1L",1906,"^G","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"^21",[["^ ","^1K",72,"^1L",1865],["^ ","^1K",72,"^1L",1906]],"^27",[["^ ","^1K",72,"^1L",1865,"^G","fulcro.client.primitives/app-state"],["^ ","^1K",72,"^1L",1906,"^G","fulcro.client.primitives/app-state"]],"^2A",[["^ ","^1K",107,"^1L",1865],["^ ","^1K",107,"^1L",1865],["^ ","^1K",107,"^1L",1906],["^ ","^1K",107,"^1L",1906]],"^1T",[["^ ","^1K",203,"^1L",1865,"^G","app"],["^ ","^1K",203,"^1L",1906,"^G","app"]]],"~i310",["^ ","^1U",[["^ ","^1K",0,"^1L",1867],["^ ","^1K",0,"^1L",1908]],"^1Y",[["^ ","^1K",6,"^1L",1867],["^ ","^1K",54,"^1L",1867],["^ ","^1K",102,"^1L",1867],["^ ","^1K",6,"^1L",1908],["^ ","^1K",54,"^1L",1908],["^ ","^1K",102,"^1L",1908]],"^24",[["^ ","^1K",6,"^1L",1867,"^G","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",6,"^1L",1908,"^G","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"]]],"~i312",["^ ","~i0",[["^ ","^1K",0,"^1L",1933],["^ ","^1K",44,"^1L",1946],["^ ","^1K",106,"^1L",1946,"^G","p__42857"],["^ ","^1K",0,"^1L",1947],["^ ","^1K",0,"^1L",1947],["^ ","^1K",4,"^1L",1947,"^G","map__42859"],["^ ","^1K",17,"^1L",1947,"^G","p__42857"],["^ ","^1K",4,"^1L",1948,"^G","map__42859"],["^ ","^1K",21,"^1L",1948],["^ ","^1K",23,"^1L",1948],["^ ","^1K",25,"^1L",1948],["^ ","^1K",27,"^1L",1948],["^ ","^1K",28,"^1L",1948,"^G","map__42859"],["^ ","^1K",42,"^1L",1948],["^ ","^1K",50,"^1L",1948],["^ ","^1K",52,"^1L",1948],["^ ","^1K",54,"^1L",1948],["^ ","^1K",55,"^1L",1948],["^ ","^1K",55,"^1L",1948,"^G","map__42859"],["^ ","^1K",104,"^1L",1948],["^ ","^1K",115,"^1L",1948],["^ ","^1K",116,"^1L",1948,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1K",148,"^1L",1948],["^ ","^1K",148,"^1L",1948,"^G","map__42859"],["^ ","^1K",179,"^1L",1948],["^ ","^1K",184,"^1L",1948],["^ ","^1K",191,"^1L",1948],["^ ","^1K",199,"^1L",1948],["^ ","^1K",199,"^1L",1948,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",245,"^1L",1948,"^G","cljs.core/hash-map"],["^ ","^1K",264,"^1L",1948,"^G","map__42859"],["^ ","^1K",276,"^1L",1948,"^G","map__42859"],["^ ","^1K",10,"^1L",1949,"^G","map__42859"],["^ ","^1K",12,"^1L",1950],["^ ","^1K",12,"^1L",1950,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",56,"^1L",1950,"^G","map__42859"],["^ ","^1K",71,"^1L",1950],["^ ","^1K",13,"^1L",1951],["^ ","^1K",13,"^1L",1951,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",57,"^1L",1951,"^G","map__42859"],["^ ","^1K",72,"^1L",1951],["^ ","^1K",12,"^1L",1952],["^ ","^1K",12,"^1L",1952,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",56,"^1L",1952,"^G","map__42859"],["^ ","^1K",71,"^1L",1952],["^ ","^1K",10,"^1L",1953],["^ ","^1K",10,"^1L",1953,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1K",54,"^1L",1953,"^G","map__42859"],["^ ","^1K",69,"^1L",1953],["^ ","^1K",0,"^1L",1954]],"~i6",[["^ ","^1K",0,"^1L",1946,"^G","fulcro.client.impl.application/read-local"]]],"~i324",["^ ","~i3",[["^ ","^1K",96,"^1L",1946,"^G","user-read"]],"^4Q",[["^ ","^1K",4,"^1L",1950,"^G","query"]],"^1R",[["^ ","^1K",4,"^1L",1951,"^G","target"]],"^24",[["^ ","^1K",4,"^1L",1952,"^G","state"]],"^29",[["^ ","^1K",4,"^1L",1953,"^G","ast"]],"^2?",[["^ ","^1K",4,"^1L",1949,"^G","env"]],"^2B",[["^ ","^1K",115,"^1L",1946,"^G","dkey"]],"^2O",[["^ ","^1K",120,"^1L",1946,"^G","params"]]],"~i325",["^ ","~i2",[["^ ","^1K",0,"^1L",1954],["^ ","^1K",4,"^1L",1954,"^G","temp__5455__auto__"],["^ ","^1K",0,"^1L",1955],["^ ","^1K",0,"^1L",1955],["^ ","^1K",20,"^1L",1955,"^G","temp__5455__auto__"],["^ ","^1K",0,"^1L",1956],["^ ","^1K",20,"^1L",1956,"^G","temp__5455__auto__"],["^ ","^1K",0,"^1L",1957]],"^1N",[["^ ","^1K",4,"^1L",1956,"^G","custom-result"]],"^1P",[["^ ","^1K",25,"^1L",1954]],"^1U",[["^ ","^1K",26,"^1L",1954,"^G","user-read"],["^ ","^1K",68,"^1L",1954,"^G","user-read"],["^ ","^1K",127,"^1L",1954,"^G","user-read"]],"^37",[["^ ","^1K",108,"^1L",1954,"^G","env"],["^ ","^1K",147,"^1L",1954,"^G","env"]],"^29",[["^ ","^1K",112,"^1L",1954,"^G","dkey"],["^ ","^1K",151,"^1L",1954,"^G","dkey"]],"^38",[["^ ","^1K",117,"^1L",1954,"^G","params"],["^ ","^1K",156,"^1L",1954,"^G","params"]]],"~i326",["^ ","~i4",[["^ ","^1K",0,"^1L",1957,"^G","custom-result"]]],"~i327",["^ ","~i4",[["^ ","^1K",0,"^1L",1959],["^ ","^1K",0,"^1L",1960],["^ ","^1K",0,"^1L",1974]],"^1Z",[["^ ","^1K",3,"^1L",1959]],"^1N",[["^ ","^1K",3,"^1L",1959,"^G","cljs.core/not"]],"^1W",[["^ ","^1K",17,"^1L",1959,"^G","target"]]],"~i328",["^ ","~i6",[["^ ","^1K",0,"^1L",1960],["^ ","^1K",0,"^1L",1971],["^ ","^1K",0,"^1L",1971],["^ ","^1K",50,"^1L",1971]],"^1Q",[["^ ","^1K",4,"^1L",1960,"^G","top-level-prop"]],"^1R",[["^ ","^1K",21,"^1L",1960],["^ ","^1K",31,"^1L",1960]],"^1Y",[["^ ","^1K",22,"^1L",1960,"^G","query"]]],"~i329",["^ ","^1Q",[["^ ","^1K",4,"^1L",1961,"^G","key"]],"^1R",[["^ ","^1K",10,"^1L",1961],["^ ","^1K",27,"^1L",1961,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",1962],["^ ","^1K",0,"^1L",1962],["^ ","^1K",20,"^1L",1962,"^G","or__3949__auto__"],["^ ","^1K",0,"^1L",1963,"^G","or__3949__auto__"]],"^2R",[["^ ","^1K",46,"^1L",1961],["^ ","^1K",46,"^1L",1961]],"^21",[["^ ","^1K",128,"^1L",1961,"^G","ast"]],"^2I",[["^ ","^1K",0,"^1L",1965,"^G","dkey"]]],"~i330",["^ ","^1Q",[["^ ","^1K",4,"^1L",1968,"^G","by-ident?"]],"^1R",[["^ ","^1K",22,"^1L",1968]],"^20",[["^ ","^1K",22,"^1L",1968,"^G","fulcro.util/ident?"]],"^2S",[["^ ","^1K",47,"^1L",1968,"^G","key"]]],"~i331",["^ ","^1Q",[["^ ","^1K",4,"^1L",1969,"^G","union?"]],"^1R",[["^ ","^1K",19,"^1L",1969]],"^20",[["^ ","^1K",19,"^1L",1969,"^G","cljs.core/map?"]],"^1Y",[["^ ","^1K",40,"^1L",1969,"^G","query"]]],"~i332",["^ ","^1Q",[["^ ","^1K",4,"^1L",1970,"^G","data"]],"^1R",[["^ ","^1K",11,"^1L",1970]],"^2R",[["^ ","^1K",13,"^1L",1970,"^G","by-ident?"]],"^2S",[["^ ","^1K",30,"^1L",1970],["^ ","^1K",77,"^1L",1970],["^ ","^1K",77,"^1L",1970,"^G","cljs.core/deref"]],"^2I",[["^ ","^1K",30,"^1L",1970,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2@",[["^ ","^1K",93,"^1L",1970,"^G","state"]],"^2Y",[["^ ","^1K",100,"^1L",1970,"^G","key"]],"^2K",[["^ ","^1K",105,"^1L",1970],["^ ","^1K",149,"^1L",1970],["^ ","^1K",149,"^1L",1970,"^G","cljs.core/deref"]],"^30",[["^ ","^1K",105,"^1L",1970,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^32",[["^ ","^1K",165,"^1L",1970,"^G","state"]],"^2Q",[["^ ","^1K",172,"^1L",1970,"^G","key"]]],"~i334",["^ ","~i9",[["^ ","^1K",104,"^1L",1971],["^ ","^1K",434,"^1L",1971],["^ ","^1K",457,"^1L",1971]]],"~i335",["^ ","^1N",[["^ ","^1K",106,"^1L",1971,"^G","union?"]],"^26",[["^ ","^1K",120,"^1L",1971]],"^2[",[["^ ","^1K",120,"^1L",1971,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^1M",[["^ ","^1K",164,"^1L",1971],["^ ","^1K",231,"^1L",1971],["^ ","^1K",314,"^1L",1971],["^ ","^1K",382,"^1L",1971],["^ ","^1K",382,"^1L",1971,"^G","cljs.core/deref"],["^ ","^1K",405,"^1L",1971],["^ ","^1K",405,"^1L",1971,"^G","cljs.core/deref"]],"^1O",[["^ ","^1K",164,"^1L",1971,"^G","fulcro.client.primitives.db__GT_tree.cljs$core$IFn$_invoke$arity$3"]],"^29",[["^ ","^1K",362,"^1L",1971,"^G","key"]],"^2:",[["^ ","^1K",366,"^1L",1971,"^G","query"]],"^2A",[["^ ","^1K",398,"^1L",1971,"^G","state"]],"^1[",[["^ ","^1K",421,"^1L",1971,"^G","state"]],"^32",[["^ ","^1K",429,"^1L",1971,"^G","key"]]],"~i336",["^ ","^1N",[["^ ","^1K",436,"^1L",1971,"^G","top-level-prop"]],"^1U",[["^ ","^1K",452,"^1L",1971,"^G","data"]]],"~i337",["^ ","^2N",[["^ ","^1K",457,"^1L",1971],["^ ","^1K",535,"^1L",1971],["^ ","^1K",535,"^1L",1971,"^G","cljs.core/deref"]],"^26",[["^ ","^1K",457,"^1L",1971,"^G","fulcro.client.primitives.db__GT_tree.cljs$core$IFn$_invoke$arity$3"]],"^23",[["^ ","^1K",524,"^1L",1971,"^G","query"]],"^27",[["^ ","^1K",530,"^1L",1971,"^G","data"]],"^2:",[["^ ","^1K",551,"^1L",1971,"^G","state"]]],"~i339",["^ ","~i0",[["^ ","^1K",0,"^1L",1978],["^ ","^1K",51,"^1L",1985],["^ ","^1K",0,"^1L",1986]],"~i6",[["^ ","^1K",0,"^1L",1985,"^G","fulcro.client.impl.application/write-entry-point"]]],"~i345",["^ ","~i3",[["^ ","^1K",110,"^1L",1985,"^G","env"]],"~i7",[["^ ","^1K",114,"^1L",1985,"^G","k"]],"~i9",[["^ ","^1K",116,"^1L",1985,"^G","params"]]],"~i346",["^ ","~i2",[["^ ","^1K",0,"^1L",1986],["^ ","^1K",0,"^1L",2000]],"~i8",[["^ ","^1K",4,"^1L",1986,"^G","rv"]],"^1W",[["^ ","^1K",9,"^1L",1986],["^ ","^1K",26,"^1L",1986],["^ ","^1K",16,"^1L",1987],["^ ","^1K",24,"^1L",1987,"^G","e42891"],["^ ","^1K",0,"^1L",1988],["^ ","^1K",0,"^1L",1997]]],"~i347",["^ ","^2N",[["^ ","^1K",26,"^1L",1986]],"^26",[["^ ","^1K",34,"^1L",1986,"^G","fulcro.client.mutations/mutate"],["^ ","^1K",97,"^1L",1986,"^G","fulcro.client.mutations/mutate"],["^ ","^1K",174,"^1L",1986,"^G","fulcro.client.mutations/mutate"]],"^1R",[["^ ","^1K",158,"^1L",1986,"^G","env"],["^ ","^1K",215,"^1L",1986,"^G","env"]],"^2R",[["^ ","^1K",162,"^1L",1986,"^G","k"],["^ ","^1K",219,"^1L",1986,"^G","k"]],"^1Y",[["^ ","^1K",164,"^1L",1986,"^G","params"],["^ ","^1K",221,"^1L",1986,"^G","params"]]],"~i348",["^ ","^2T",[["^ ","^1K",20,"^1L",1987,"^G","e"]]],"~i349",["^ ","^2[",[["^ ","^1K",0,"^1L",1988],["^ ","^1K",4,"^1L",1988],["^ ","^1K",4,"^1L",1988],["^ ","^1K",4,"^1L",1988,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",61,"^1L",1988],["^ ","^1K",104,"^1L",1988],["^ ","^1K",158,"^1L",1988],["^ ","^1K",191,"^1L",1988],["^ ","^1K",243,"^1L",1988],["^ ","^1K",255,"^1L",1988],["^ ","^1K",360,"^1L",1988],["^ ","^1K",374,"^1L",1988],["^ ","^1K",16,"^1L",1989],["^ ","^1K",19,"^1L",1989],["^ ","^1K",20,"^1L",1989,"^G","e42892"],["^ ","^1K",38,"^1L",1989,"^G","js/Error"],["^ ","^1K",0,"^1L",1990],["^ ","^1K",4,"^1L",1990,"^G","e__31527__auto__"],["^ ","^1K",29,"^1L",1990,"^G","e42892"],["^ ","^1K",0,"^1L",1991],["^ ","^1K",0,"^1L",1991],["^ ","^1K",0,"^1L",1991,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",57,"^1L",1991],["^ ","^1K",100,"^1L",1991],["^ ","^1K",154,"^1L",1991],["^ ","^1K",187,"^1L",1991],["^ ","^1K",239,"^1L",1991],["^ ","^1K",251,"^1L",1991],["^ ","^1K",356,"^1L",1991],["^ ","^1K",409,"^1L",1991,"^G","e__31527__auto__"],["^ ","^1K",0,"^1L",1993],["^ ","^1K",0,"^1L",1993],["^ ","^1K",6,"^1L",1993,"^G","e42892"]],"^2I",[["^ ","^1K",372,"^1L",1988,"^G","k"]],"^35",[["^ ","^1K",399,"^1L",1988,"^G","e"]]],"~i351",["^ ","~i8",[["^ ","^1K",4,"^1L",1999,"^G","action"]],"^1W",[["^ ","^1K",13,"^1L",1999],["^ ","^1K",13,"^1L",1999]],"^1O",[["^ ","^1K",100,"^1L",1999,"^G","rv"]]],"~i352",["^ ","~i4",[["^ ","^1K",0,"^1L",2000]],"~i8",[["^ ","^1K",20,"^1L",2000,"^G","action"]]],"~i353",["^ ","~i6",[["^ ","^1K",0,"^1L",2001],["^ ","^1K",56,"^1L",2001]],"~i7",[["^ ","^1K",7,"^1L",2001,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^1V",[["^ ","^1K",53,"^1L",2001,"^G","rv"]],"^1O",[["^ ","^1K",113,"^1L",2001],["^ ","^1K",0,"^1L",2003]]],"~i354",["^ ","^1U",[["^ ","^1K",0,"^1L",2003],["^ ","^1K",4,"^1L",2003],["^ ","^1K",16,"^1L",2016],["^ ","^1K",24,"^1L",2016,"^G","e42893"],["^ ","^1K",0,"^1L",2017]]],"~i355",["^ ","^20",[["^ ","^1K",4,"^1L",2003],["^ ","^1K",0,"^1L",2004]],"^24",[["^ ","^1K",8,"^1L",2003,"^G","action-result"]],"^2>",[["^ ","^1K",24,"^1L",2003]],"^2?",[["^ ","^1K",25,"^1L",2003,"^G","action"],["^ ","^1K",64,"^1L",2003,"^G","action"],["^ ","^1K",117,"^1L",2003,"^G","action"]],"^2Y",[["^ ","^1K",101,"^1L",2003,"^G","env"],["^ ","^1K",134,"^1L",2003,"^G","env"]],"^1[",[["^ ","^1K",105,"^1L",2003,"^G","k"],["^ ","^1K",138,"^1L",2003,"^G","k"]],"^30",[["^ ","^1K",107,"^1L",2003,"^G","params"],["^ ","^1K",140,"^1L",2003,"^G","params"]]],"~i356",["^ ","^2;",[["^ ","^1K",0,"^1L",2004],["^ ","^1K",4,"^1L",2004],["^ ","^1K",16,"^1L",2005],["^ ","^1K",30,"^1L",2005,"^G","e42896"],["^ ","^1K",0,"^1L",2006]]],"~i357",["^ ","^23",[["^ ","^1K",4,"^1L",2004]],"^1Y",[["^ ","^1K",5,"^1L",2004,"^G","fulcro.client.mutations/post-mutate"],["^ ","^1K",73,"^1L",2004,"^G","fulcro.client.mutations/post-mutate"],["^ ","^1K",155,"^1L",2004,"^G","fulcro.client.mutations/post-mutate"]],"^2<",[["^ ","^1K",139,"^1L",2004,"^G","env"],["^ ","^1K",201,"^1L",2004,"^G","env"]],"^2H",[["^ ","^1K",143,"^1L",2004,"^G","k"],["^ ","^1K",205,"^1L",2004,"^G","k"]],"^2A",[["^ ","^1K",145,"^1L",2004,"^G","params"],["^ ","^1K",207,"^1L",2004,"^G","params"]]],"~i358",["^ ","^2Q",[["^ ","^1K",20,"^1L",2005,"^G","e"]],"^3;",[["^ ","^1K",0,"^1L",2006],["^ ","^1K",4,"^1L",2006],["^ ","^1K",4,"^1L",2006],["^ ","^1K",4,"^1L",2006,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",61,"^1L",2006],["^ ","^1K",104,"^1L",2006],["^ ","^1K",158,"^1L",2006],["^ ","^1K",191,"^1L",2006],["^ ","^1K",243,"^1L",2006],["^ ","^1K",255,"^1L",2006],["^ ","^1K",360,"^1L",2006],["^ ","^1K",16,"^1L",2007],["^ ","^1K",19,"^1L",2007],["^ ","^1K",20,"^1L",2007,"^G","e42897"],["^ ","^1K",38,"^1L",2007,"^G","js/Error"],["^ ","^1K",0,"^1L",2008],["^ ","^1K",4,"^1L",2008,"^G","e__31527__auto__"],["^ ","^1K",29,"^1L",2008,"^G","e42897"],["^ ","^1K",0,"^1L",2009],["^ ","^1K",0,"^1L",2009],["^ ","^1K",0,"^1L",2009,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",57,"^1L",2009],["^ ","^1K",100,"^1L",2009],["^ ","^1K",154,"^1L",2009],["^ ","^1K",187,"^1L",2009],["^ ","^1K",239,"^1L",2009],["^ ","^1K",251,"^1L",2009],["^ ","^1K",356,"^1L",2009],["^ ","^1K",409,"^1L",2009,"^G","e__31527__auto__"],["^ ","^1K",0,"^1L",2011],["^ ","^1K",0,"^1L",2011],["^ ","^1K",6,"^1L",2011,"^G","e42897"]],"^3[",[["^ ","^1K",397,"^1L",2006,"^G","k"]]],"~i359",["^ ","^2;",[["^ ","^1K",0,"^1L",2015,"^G","action-result"]]],"~i360",["^ ","^35",[["^ ","^1K",20,"^1L",2016,"^G","e"]]],"~i361",["^ ","^2;",[["^ ","^1K",0,"^1L",2017],["^ ","^1K",4,"^1L",2017],["^ ","^1K",4,"^1L",2017],["^ ","^1K",4,"^1L",2017,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",61,"^1L",2017],["^ ","^1K",104,"^1L",2017],["^ ","^1K",158,"^1L",2017],["^ ","^1K",191,"^1L",2017],["^ ","^1K",243,"^1L",2017],["^ ","^1K",255,"^1L",2017],["^ ","^1K",360,"^1L",2017],["^ ","^1K",374,"^1L",2017],["^ ","^1K",16,"^1L",2018],["^ ","^1K",19,"^1L",2018],["^ ","^1K",20,"^1L",2018,"^G","e42895"],["^ ","^1K",38,"^1L",2018,"^G","js/Error"],["^ ","^1K",0,"^1L",2019],["^ ","^1K",4,"^1L",2019,"^G","e__31527__auto__"],["^ ","^1K",29,"^1L",2019,"^G","e42895"],["^ ","^1K",0,"^1L",2020],["^ ","^1K",0,"^1L",2020],["^ ","^1K",0,"^1L",2020,"^G","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1K",57,"^1L",2020],["^ ","^1K",100,"^1L",2020],["^ ","^1K",154,"^1L",2020],["^ ","^1K",187,"^1L",2020],["^ ","^1K",239,"^1L",2020],["^ ","^1K",251,"^1L",2020],["^ ","^1K",356,"^1L",2020],["^ ","^1K",409,"^1L",2020,"^G","e__31527__auto__"],["^ ","^1K",0,"^1L",2022],["^ ","^1K",0,"^1L",2022],["^ ","^1K",6,"^1L",2022,"^G","e42895"]],"^2A",[["^ ","^1K",372,"^1L",2017,"^G","k"]]],"~i362",["^ ","^1S",[["^ ","^1K",0,"^1L",2026],["^ ","^1K",0,"^1L",2027],["^ ","^1K",0,"^1L",2029]],"^38",[["^ ","^1K",20,"^1L",2026,"^G","goog/DEBUG"]],"^2Y",[["^ ","^1K",0,"^1L",2027]],"^2J",[["^ ","^1K",0,"^1L",2027,"^G","js/console.error"]],"^2U",[["^ ","^1K",14,"^1L",2027,"^G","e"]]],"~i363",["^ ","^2;",[["^ ","^1K",0,"^1L",2031]],"^21",[["^ ","^1K",6,"^1L",2031,"^G","e"]]],"~i364",["^ ","~i6",[["^ ","^1K",0,"^1L",2035,"^G","rv"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["^1B","goog/dom/tagname.js"],[1508737613441,"^X","~$goog.dom.HtmlElement"],["^1B","goog/async/freelist.js"],[1508737613441,"^X"],["^1B","cljs/core/async/impl/ioc_helpers.cljs"],[1516100900795,"^X","^V","~$cljs.core.async.impl.protocols"],["^1B","goog/labs/useragent/platform.js"],[1508737613441,"^X","~$goog.labs.userAgent.util","~$goog.string"],["~:macro","^V"],[1537260906000],["^1B","cljs/core/async.cljs"],[1516100900795,"^X","^V","^81","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^1B","goog/timer/timer.js"],[1508737613441,"^X","~$goog.Promise","~$goog.events.EventTarget"],["^1B","fulcro/util.cljc"],[1537260907310,"^X","^V","^A","~$clojure.walk","^P"],["^1B","goog/module/basemodule.js"],[1508737613441,"^X","~$goog.Disposable","~$goog.module"],["^1B","cljs/spec/gen/alpha.cljs"],[1537260906289,"^X","^V","~$goog.Uri"],["^1B","cljs/tools/reader/impl/utils.cljs"],[1537358547920,"^X","^V","~$clojure.string","^83"],["^1B","goog/math/math.js"],[1508737613441,"^X","~$goog.array","~$goog.asserts"],["^1B","goog/events/eventtype.js"],[1508737613441,"^X","~$goog.userAgent"],["^1B","goog/labs/useragent/browser.js"],[1508737613441,"^X","^8A","^82","~$goog.object","^83"],["^1B","goog/html/safeurl.js"],[1508737613441,"^X","^8B","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","^83","~$goog.string.Const","~$goog.string.TypedString"],["^1B","goog/array/array.js"],[1508737613441,"^X","^8B"],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],[1537358551000,1529422278000,"~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"],["^84","^Y"],[1537260907000],["^1B","fulcro/client/primitives.cljc"],[1537260907310,"^X","^V","^83","~$cljsjs.react","^8D","~$fulcro-css.css-protocols","~$fulcro-css.css-implementation","^=","^N","^10","^P","~$fulcro.tempid","~$fulcro.transit","~$clojure.zip","~$fulcro.client.impl.data-targeting","^R","~$fulcro.client.impl.parser","^Z","^8<","^8@","^A","~$cognitect.transit"],["^84","^D"],[1516100900000],["^1B","goog/useragent/useragent.js"],[1508737613441,"^X","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^82","~$goog.reflect","^83"],["^84","~$cljs.tools.reader.reader-types"],[1537358547000],["^84","^T"],[1537260907000],["^1B","goog/async/run.js"],[1508737613441,"^X","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"],["^1B","com/cognitect/transit/impl/reader.js"],[1482686437866,"^X","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"],["^1B","goog/debug/error.js"],[1508737613441,"^X"],["^1B","goog/async/workqueue.js"],[1508737613441,"^X","^8B","~$goog.async.FreeList"],["^1B","goog/events/events.js"],[1508737613441,"^X","^8B","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"],["^1B","goog/promise/resolver.js"],[1508737613441,"^X"],["^1B","goog/events/browserfeature.js"],[1508737613441,"^X","^8C"],["^1B","cljs/tools/reader/edn.cljs"],[1537358547920,"^X","^V","~$cljs.tools.reader.impl.errors","^8[","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^83","~$goog.string.StringBuffer"],["^1B","goog/net/xhrio.js"],[1508737613441,"^X","~$goog.Timer","^8A","^8B","^96","^8;","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^83","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^8C"],["^1B","goog/promise/thenable.js"],[1508737613441,"^X"],["^1B","goog/dom/nodetype.js"],[1508737613441,"^X"],["^1B","goog/net/bulkloaderhelper.js"],[1508737613441,"^X","^8="],["^1B","cljs/tools/reader/impl/inspect.cljs"],[1537358547920,"^X","^V"],["^1B","com/cognitect/transit/util.js"],[1482686437866,"^X","^8D"],["^84","~$cljs.spec.gen.alpha"],[1537260906000],["^1B","cljs/tools/reader.cljs"],[1537358547920,"^X","^V","^8[","^9<","^9=","^9;","^8A","^83","^9?"],["^1B","goog/module/modulemanager.js"],[1508737613441,"^X","^8=","^8A","^8B","~$goog.async.Deferred","~$goog.debug.Trace","~$goog.dispose","^9B","^8>","~$goog.module.AbstractModuleLoader","~$goog.module.ModuleInfo","~$goog.module.ModuleLoadCallback","^8D"],["^1B","goog/net/wrapperxmlhttpfactory.js"],[1508737613441,"^X","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"],["^1B","goog/events/eventtarget.js"],[1508737613441,"^X","^8=","^8B","~$goog.events","~$goog.events.Event","^99","^9:","^8D"],["^1B","goog/module/moduleinfo.js"],[1508737613441,"^X","^8=","^92","~$goog.functions","^8>","~$goog.module.BaseModule","^9P"],["^1B","goog/disposable/disposable.js"],[1508737613441,"^X","~$goog.disposable.IDisposable"],["^1B","goog/string/typedstring.js"],[1508737613441,"^X"],["^8K","node_modules/react/index.js"],[1537358551000,499162500000,"^8L","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"],["^1B","shadow/js.js"],[1537358551352,"^X"],["^1B","goog/object/object.js"],[1508737613441,"^X"],["^1B","goog/dom/asserts.js"],[1508737613441,"^X","^8B"],"~:SHADOW-TIMESTAMP",[1537358551000,1537260906000],["^8K","node_modules/react/cjs/react.development.js"],[1537358551000,499162500000,"^8L","~$module$node_modules$object_assign$index","~$module$node_modules$prop_types$checkPropTypes"],["^1B","cljs/stacktrace.cljc"],[1537260906289,"^X","^V","^83","^8@"],["^1B","goog/math/long.js"],[1508737613441,"^X","^8B","^8Z"],["^1B","fulcro/transit.cljc"],[1537260907310,"^X","^V","^8V","~$com.cognitect.transit","^8Q"],["^1B","goog/events/listener.js"],[1508737613441,"^X","~$goog.events.ListenableKey"],["^1B","goog/html/trustedresourceurl.js"],[1508737613441,"^X","^8B","^8G","^8H","^8I","^8J"],["^1B","goog/html/legacyconversions.js"],[1508737613441,"^X","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","~$goog.html.SafeStyleSheet","~$goog.html.SafeUrl","^8F"],["^1B","goog/net/jsloader.js"],[1508737613441,"^X","^8A","^9K","~$goog.debug.Error","~$goog.dom","~$goog.dom.TagName","~$goog.dom.safe","^8F","^8D"],["^1B","goog/debug/tracer.js"],[1508737613441,"^X","^8A","~$goog.debug.Logger","~$goog.iter","^9B","^9H","~$goog.structs.SimplePool"],["^1B","cljs/core/async/impl/channels.cljs"],[1516100900795,"^X","^V","^81","^88","^86"],["^1B","goog/events/listenermap.js"],[1508737613441,"^X","^8A","~$goog.events.Listener","^8D"],["^1B","goog/events/eventid.js"],[1508737613441,"^X"],["^1B","fulcro/client/network.cljc"],[1537260907310,"^X","^V","^P","^A","^8V","^9S","^8R","^8@","~$goog.net.XhrIo","^9D","^9C"],["^1B","goog/functions/functions.js"],[1508737613441,"^X"],["^1B","cljs/core/async/impl/dispatch.cljs"],[1516100900795,"^X","^V","^86","^91"],["^1B","goog/html/safestyle.js"],[1508737613441,"^X","^8A","^8B","^:7","^83","^8I","^8J"],["^1B","goog/dom/safe.js"],[1508737613441,"^X","^8B","~$goog.dom.asserts","^:3","^:4","^:5","^:7","^8F","^83","^8I"],["^1B","clojure/walk.cljs"],[1537260906289,"^X","^V"],["^1B","goog/useragent/product.js"],[1508737613441,"^X","^8W","^8Y","^8C"],["^1B","cljs/core/async/impl/protocols.cljs"],[1516100900795,"^X","^V"],["^1B","goog/net/eventtype.js"],[1508737613441,"^X"],["^1B","goog/structs/map.js"],[1508737613441,"^X","~$goog.iter.Iterator","~$goog.iter.StopIteration","^8D"],["^1B","com/cognitect/transit/delimiters.js"],[1482686437866,"^X"],["^1B","goog/html/safehtml.js"],[1508737613441,"^X","^8A","^8B","^::","~$goog.dom.tags","^:4","^:5","^:6","^:7","^8F","^8G","^8H","^8W","^8D","^83","^8I","^8J"],["^1B","goog/dom/tags.js"],[1508737613441,"^X","^8D"],["^1B","goog/module/moduleloadcallback.js"],[1508737613441,"^X","^96","^8>"],["^1B","goog/math/size.js"],[1508737613441,"^X"],["^1B","fulcro/client/impl/data_targeting.cljc"],[1537260907310,"^X","^V","^N","^Z"],["^84","^P"],[1537260907000],["^1B","goog/labs/useragent/engine.js"],[1508737613441,"^X","^8A","^82","^83"],["^1B","com/cognitect/transit/impl/decoder.js"],[1482686437866,"^X","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^94","~$com.cognitect.transit.types"],["^1B","fulcro_css/css_implementation.cljc"],[1537260907310,"^X","^V","~$cljs.tagged-literals","^8O","^8@"],["^1B","cljs/reader.cljs"],[1537260906289,"^X","^V","^8D","^9>","~$cljs.tools.reader.edn","^9?"],["^1B","fulcro_css/css_protocols.cljc"],[1537260907310,"^X","^V"],["^1B","goog/dom/dom.js"],[1508737613441,"^X","^8A","^8B","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^::","^:;","^:3","~$goog.html.uncheckedconversions","~$goog.math.Coordinate","~$goog.math.Size","^8D","^83","~$goog.string.Unicode","^8C"],["^84","^A"],[1537260906000],["^1B","goog/asserts/asserts.js"],[1508737613441,"^X","^:8","^:K","^83"],["^1B","goog/debug/relativetimeprovider.js"],[1508737613441,"^X"],["^1B","cljs/core/async/impl/buffers.cljs"],[1516100900795,"^X","^V","^81"],["^1B","goog/debug/logbuffer.js"],[1508737613441,"^X","^8B","~$goog.debug.LogRecord"],["^1B","cljs/tagged_literals.cljc"],[1537260906289,"^X","^V","~$cljs.reader"],["^1B","goog/uri/uri.js"],[1508737613441,"^X","^8A","^8B","^83","^9G","^9H","^9I","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1B","goog/net/errorcode.js"],[1508737613441,"^X"],["^1B","goog/i18n/bidi.js"],[1508737613441,"^X"],["^8K","node_modules/object-assign/index.js"],[1537358551000,1484580833000,"^8L"],["^1B","fulcro/client/impl/data_fetch.cljc"],[1537260907310,"^X","^V","^T","^8T","^Z","^Q","^8<","^N","^P","^10","^Y","^R","^A"],["^84","^="],[1516100900000],["^1B","goog/module/module.js"],[1508737613441,"^X"],["^1B","fulcro/tempid.cljc"],[1537260907310,"^X","^V"],["^1B","cljs/loader.cljs"],[1537260906289,"^X","^V","^8D","~$goog.module.ModuleLoader","~$goog.module.ModuleManager"],["^1B","goog/disposable/idisposable.js"],[1508737613441,"^X"],["^1B","goog/debug/formatter.js"],[1508737613441,"^X","~$goog.debug","^:<","~$goog.debug.RelativeTimeProvider","^:3","^:7","^:L","^8I"],["^1B","goog/promise/promise.js"],[1508737613441,"^X","~$goog.Thenable","^8B","^95","~$goog.async.run","^92","^:8","~$goog.promise.Resolver"],["^1B","cljs/core/async/impl/timers.cljs"],[1516100900795,"^X","^V","^81","^85","^88"],["^1B","cljs/spec/alpha.cljs"],[1537260906289,"^X","^V","^8D","^8<","^9J","^8@"],["^1B","goog/fs/url.js"],[1508737613441,"^X"],["^1B","goog/debug/logrecord.js"],[1508737613441,"^X"],["^1B","goog/base.js"],[1508737613441],["^1B","fulcro/client/util.cljc"],[1537260907310,"^X","^V","^A","^8<","^T","^R","^8R","^Z","^8V","^8U"],["^1B","goog/json/hybrid.js"],[1508737613441,"^X","^8B","~$goog.json"],["^1B","goog/structs/structs.js"],[1508737613441,"^X","^8A","^8D"],["^1B","cljs/tools/reader/impl/errors.cljs"],[1537358547920,"^X","^V","^8[","^8@","~$cljs.tools.reader.impl.inspect"],["^1B","cljsjs/react.cljs"],[1537358551030,"^X","^V","~$module$node_modules$react$index"],["^1B","clojure/string.cljs"],[1537260906289,"^X","^V","^83","^9?"],["^1B","fulcro/history.cljc"],[1537260907310,"^X","^V","^P","^Z","^N","^A"],["^8K","node_modules/react/cjs/react.production.min.js"],[1537358551000,499162500000,"^8L","^9["],["^1B","goog/net/httpstatus.js"],[1508737613441,"^X"],["^1B","fulcro/client/mutations.cljc"],[1537260907310,"^X","^V","^A","^Z","^P","^T","~$cljs.loader","^R","^8U"],["^1B","com/cognitect/transit/handlers.js"],[1482686437866,"^X","^:E","^:G","~$goog.math.Long"],["^1B","fulcro/client/impl/protocols.cljc"],[1537260907310,"^X","^V"],["^1B","goog/debug/entrypointregistry.js"],[1508737613441,"^X","^8B"],["^1B","goog/string/string.js"],[1508737613441,"^X"],["^1B","com/cognitect/transit/types.js"],[1482686437866,"^X","^:E","~$com.cognitect.transit.eq","^;3"],["^1B","goog/module/abstractmoduleloader.js"],[1508737613441,"^X","^8>","^9O"],["^1B","goog/reflect/reflect.js"],[1508737613441,"^X"],["^1B","goog/labs/useragent/util.js"],[1508737613441,"^X","^83"],["^1B","com/cognitect/transit/eq.js"],[1482686437866,"^X","^:E"],["^84","~$cljs.core.async.impl.ioc-macros"],[1516100900000],["^1B","goog/debug/debug.js"],[1508737613441,"^X","^8A","~$goog.debug.errorcontext","^8C"],["^1B","clojure/zip.cljs"],[1537260906289,"^X","^V"],["^1B","goog/string/stringbuffer.js"],[1508737613441,"^X"],["^1B","goog/math/coordinate.js"],[1508737613441,"^X","~$goog.math"],["^1B","goog/debug/errorcontext.js"],[1508737613441,"^X"],["^1B","cljs/tools/reader/reader_types.cljs"],[1537358547920,"^X","^V","^9<","^83","^9?"],["^1B","goog/iter/iter.js"],[1508737613441,"^X","^8A","^8B","^9U","^;7"],["^1B","goog/async/nexttick.js"],[1508737613441,"^X","^96","^::","^9U","^8W","^8X"],["^1B","goog/html/uncheckedconversions.js"],[1508737613441,"^X","^8B","^:3","^:4","^:5","^:6","^:7","^8F","^83","^8I"],["^1B","goog/debug/logger.js"],[1508737613441,"^X","^8A","^8B","^:V","~$goog.debug.LogBuffer","^:P"],["^1B","com/cognitect/transit/caching.js"],[1482686437866,"^X","^:F"],["^8K","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1537358551000,1529417620000,"^8L"],["^1B","fulcro/client/impl/application.cljc"],[1537260907310,"^X","^V","^P","^T","^Y","^10","^N","^W","^Z","^Q","^A","^=","^12","^R"],["^1B","goog/module/moduleloader.js"],[1508737613441,"^X","^9@","^8A","^9S","^9T","~$goog.events.EventHandler","~$goog.events.EventId","^8;","~$goog.html.legacyconversions","^8W","^9B","^9N","~$goog.net.BulkLoader","^9D","~$goog.net.jsloader","^8C","~$goog.userAgent.product"],["^1B","goog/events/event.js"],[1508737613441,"^X","^8=","^;:"],["^1B","cljs/tools/reader/impl/commons.cljs"],[1537358547920,"^X","^V","^9;","^8[","^9<"],["^1B","goog/events/eventhandler.js"],[1508737613441,"^X","^8=","^9S","^8D"],["^1B","goog/dom/htmlelement.js"],[1508737613441,"^X"],["^1B","cljs/core.cljs"],[1537260906289,"^;3","~$goog.math.Integer","^83","^8D","^8A","^8?","^9?"],["^1B","com/cognitect/transit.js"],[1482686437866,"^X","^:E","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^:G","^;4","^93","^94"],["^1B","goog/html/safescript.js"],[1508737613441,"^X","^8B","^8I","^8J"],["^1B","goog/log/log.js"],[1508737613441,"^X","^:V","~$goog.debug.LogManager","^:P","^:<"],["^1B","fulcro/logging.cljc"],[1537260907310,"^X","^V","^8@","^?","^9B","^8D","~$goog.debug.Logger.Level","~$goog.debug.Console"],["^1B","goog/html/safestylesheet.js"],[1508737613441,"^X","^8A","^8B","^:5","^8D","^83","^8I","^8J"],["^1B","goog/events/browserevent.js"],[1508737613441,"^X","^98","^9T","~$goog.events.EventType","^8Z","^8C"],["^1B","goog/math/integer.js"],[1508737613441,"^X"],["^1B","goog/debug/console.js"],[1508737613441,"^X","^;B","^:<","~$goog.debug.TextFormatter"],["^1B","goog/structs/simplepool.js"],[1508737613441,"^X","^8="],["^1B","goog/dom/browserfeature.js"],[1508737613441,"^X","^8C"],["^1B","goog/net/bulkloader.js"],[1508737613441,"^X","^;9","^8;","^9B","~$goog.net.BulkLoaderHelper","^9D","^:@"],["^1B","clojure/set.cljs"],[1537260906289,"^X","^V"],["^1B","goog/uri/utils.js"],[1508737613441,"^X","^8A","^8B","^83"],["^1B","goog/string/const.js"],[1508737613441,"^X","^8B","^8J"],["^1B","goog/json/json.js"],[1508737613441,"^X"],["^1B","goog/events/listenable.js"],[1508737613441,"^X","^;:"],["^1B","com/cognitect/transit/impl/writer.js"],[1482686437866,"^X","^:E","^94","~$com.cognitect.transit.handlers","^:G","^:F","^;3"],["^1B","goog/net/xmlhttpfactory.js"],[1508737613441,"^X","^9Q"],["^1B","goog/net/xmlhttp.js"],[1508737613441,"^X","^8B","~$goog.net.WrapperXmlHttpFactory","^9R"],["^1B","fulcro/client/impl/parser.cljc"],[1537260907310,"^X","^V","^N","^P","^Z"],["^1B","goog/net/xhrlike.js"],[1508737613441,"^X"],["^1B","goog/mochikit/async/deferred.js"],[1508737611097,"^X","^8:","^:X","^8A","^8B","^:8"],["^1B","cognitect/transit.cljs"],[1537260903184,"^X","^V","^:1","^:G","^;4","^;3"],["^84","^:Q"],[1537260906000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",1,"^8",5,"^9",1,"^:",35],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D"],"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^N","^@","^A","^O","^P","^Q","^Q","~$p","^R","^S","^T","^P","^P","^U","^=","^V","^V","^W","^W","^X","^X","^Y","^Y","^T","^T","^=","^=","^Z","^Z","^[","^10","^N","^N","~$m","^Y","^11","^Q","^12","^12","^13","^12","~$s","^A","^14","^Z","^A","^A","^10","^10","^R","^R","~$f","^W"],"^15",["^F",["^16","^17"]],"~:shadow/js-access-global",["^F",["Object","Error"]],"^18",null,"~:defs",["^ ","~$enqueue-mutations",["^ ","~:protocol-inline",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",133,"^8",7,"^9",133,"^:",24,"~:arglists",["^1:",["~$quote",["^1:",[[["^ ","~:keys",["~$reconciler","~$send-queues"],"^1<","~$app"],"~$remote-tx-map","~$cb"]]]]],"~:doc","Splits out the (remote) mutations and fallbacks in a transaction, creates an error handler that can\n   trigger fallbacks, and enqueues the remote mutations on the network queue. If duplicate mutation names\n   appear, then they will be separated into separate network requests.\n\n   NOTE: If the mutation in the tx has duplicates, then the same fallback will be used for the\n   resulting split tx. See `split-mutations` (which is used by this function to split dupes out of txes)."],"^G","~$fulcro.client.impl.application/enqueue-mutations","~:variadic",false,"^6","fulcro/client/impl/application.cljc","^:",24,"~:method-params",["^1:",[["~$p__41859","^;U","^;V"]]],"~:protocol-impl",null,"~:arglists-meta",["^1:",[null,null]],"^8",1,"^7",133,"^9",133,"~:max-fixed-arity",3,"~:fn-var",true,"^;O",["^1:",["^;P",["^1:",[[["^ ","^;Q",["^;R","^;S"],"^1<","^;T"],"^;U","^;V"]]]]],"^;W","Splits out the (remote) mutations and fallbacks in a transaction, creates an error handler that can\n   trigger fallbacks, and enqueues the remote mutations on the network queue. If duplicate mutation names\n   appear, then they will be separated into separate network requests.\n\n   NOTE: If the mutation in the tx has duplicates, then the same fallback will be used for the\n   resulting split tx. See `split-mutations` (which is used by this function to split dupes out of txes)."],"~$is-sequential?",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",239,"^8",7,"^9",239,"^:",21,"^;O",["^1:",["^;P",["^1:",[["~$network"]]]]]],"^G","~$fulcro.client.impl.application/is-sequential?","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",21,"^;Z",["^1:",[["^<5"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",239,"^9",239,"^<2",1,"^<3",true,"^;O",["^1:",["^;P",["^1:",[["^<5"]]]]]],"~$initialize-global-error-callbacks",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",304,"^8",7,"^9",304,"^:",40,"^;O",["^1:",["^;P",["^1:",[["^;T"]]]]]],"^G","~$fulcro.client.impl.application/initialize-global-error-callbacks","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",40,"^;Z",["^1:",[["^;T"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",304,"^9",304,"^<2",1,"^<3",true,"^;O",["^1:",["^;P",["^1:",[["^;T"]]]]]],"~$read-local",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",313,"^8",7,"^9",313,"^:",17,"^;O",["^1:",["^;P",["^1:",[["~$user-read",["^ ","^;Q",["~$query","~$target","~$state","~$ast"],"^1<","~$env"],"~$dkey","~$params"]]]]],"^;W","Read function for the built-in parser.\n\n  *** NOTE: This function only runs when it is called without a target -- it is not triggered for remote reads. To\n  trigger a remote read, use the `fulcro/data-fetch` namespace. ***\n\n  If a user-read is supplied, *it will be allowed* to trigger remote reads. This is not recommended, as you\n  will probably have to augment the networking layer to get it to do what you mean. Use `load` instead. You have\n  been warned. Triggering remote reads is allowed, but discouraged and unsupported.\n\n  Returns the current locale when reading the :ui/locale keyword. Otherwise pulls data out of the app-state.\n  "],"^G","~$fulcro.client.impl.application/read-local","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",17,"^;Z",["^1:",[["^<:","~$p__42857","^<@","^<A"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",313,"^9",313,"^<2",4,"^<3",true,"^;O",["^1:",["^;P",["^1:",[["^<:",["^ ","^;Q",["^<;","^<<","^<=","^<>"],"^1<","^<?"],"^<@","^<A"]]]]],"^;W","Read function for the built-in parser.\n\n  *** NOTE: This function only runs when it is called without a target -- it is not triggered for remote reads. To\n  trigger a remote read, use the `fulcro/data-fetch` namespace. ***\n\n  If a user-read is supplied, *it will be allowed* to trigger remote reads. This is not recommended, as you\n  will probably have to augment the networking layer to get it to do what you mean. Use `load` instead. You have\n  been warned. Triggering remote reads is allowed, but discouraged and unsupported.\n\n  Returns the current locale when reading the :ui/locale keyword. Otherwise pulls data out of the app-state.\n  "],"~$start-network-sequential-processing",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",244,"^8",7,"^9",244,"^:",42,"^;O",["^1:",["^;P",["^1:",[[["^ ","^;Q",["~$networking","^;R","^;S","~$response-channels"],"^1<","^;T"]]]]]],"^;W","Starts a async go loop that sends network requests on networking object's request queue.\n   Gives the appearance of a separate networking 'thread' using core async."],"^G","~$fulcro.client.impl.application/start-network-sequential-processing","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",42,"^;Z",["^1:",[["~$p__42370"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",244,"^9",244,"^<2",1,"^<3",true,"^;O",["^1:",["^;P",["^1:",[[["^ ","^;Q",["^<E","^;R","^;S","^<F"],"^1<","^;T"]]]]]],"^;W","Starts a async go loop that sends network requests on networking object's request queue.\n   Gives the appearance of a separate networking 'thread' using core async."],"~$write-entry-point",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",340,"^8",7,"^9",340,"^:",24,"^;O",["^1:",["^;P",["^1:",[["^<?","~$k","^<A"]]]]],"^;W","This is the entry point for writes. In general this is simply a call to the multi-method\n  defined by Fulcro (mutate); however, Fulcro supports the concept of a global `post-mutate`\n  function that will be called anytime the general mutate has an action that is desired. This\n  can be useful, for example, in cases where you have some post-processing that needs\n  to happen for a given (sub)set of mutations (that perhaps you did not define)."],"^G","~$fulcro.client.impl.application/write-entry-point","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",24,"^;Z",["^1:",[["^<?","~$k","^<A"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",340,"^9",340,"^<2",3,"^<3",true,"^;O",["^1:",["^;P",["^1:",[["^<?","~$k","^<A"]]]]],"^;W","This is the entry point for writes. In general this is simply a call to the multi-method\n  defined by Fulcro (mutate); however, Fulcro supports the concept of a global `post-mutate`\n  function that will be called anytime the general mutate has an action that is desired. This\n  can be useful, for example, in cases where you have some post-processing that needs\n  to happen for a given (sub)set of mutations (that perhaps you did not define)."],"~$send-payload",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",213,"^8",8,"^9",213,"^:",20,"~:private",true,"^;O",["^1:",["^;P",["^1:",[["^<5","^;R","~$payload","~$send-complete"]]]]],"^;W","Sends a network payload. There are two kinds of payloads in Fulcro. The first is\n  for reads, which are tracked by load descriptors in the app state. These load descriptors\n  tell the plumbing how to handle the response, and expect to only be merged in once. Mutations\n  do not have a payload, and can technically receive progress updates from the network. The built-in\n  networking does not (currently) give progress events, but plugin networking can. It is currently not\n  supported to give an update on a load, so this function is careful to detect that a payload is a send\n  and turns all but the last update into a no-op. The send-complete function comes from the\n  network sequential processing loop, and when called unblocks the network processing to allow the\n  next request to go. Be very careful with this code, as bugs will cause applications to stop responding\n  to remote requests."],"^<L",true,"^G","~$fulcro.client.impl.application/send-payload","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",20,"^;Z",["^1:",[["^<5","^;R","^<M","^<N"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",213,"^9",213,"^<2",4,"^<3",true,"^;O",["^1:",["^;P",["^1:",[["^<5","^;R","^<M","^<N"]]]]],"^;W","Sends a network payload. There are two kinds of payloads in Fulcro. The first is\n  for reads, which are tracked by load descriptors in the app state. These load descriptors\n  tell the plumbing how to handle the response, and expect to only be merged in once. Mutations\n  do not have a payload, and can technically receive progress updates from the network. The built-in\n  networking does not (currently) give progress events, but plugin networking can. It is currently not\n  supported to give an update on a load, so this function is careful to detect that a payload is a send\n  and turns all but the last update into a no-op. The send-complete function comes from the\n  network sequential processing loop, and when called unblocks the network processing to allow the\n  next request to go. Be very careful with this code, as bugs will cause applications to stop responding\n  to remote requests."],"~$fallback-handler",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",21,"^8",7,"^9",21,"^:",23,"^;O",["^1:",["^;P",["^1:",[[["^ ","^;Q",["^;R"]],"^<;"]]]]],"^;W","This internal function is responsible for generating and returning a function that can accomplish calling the fallbacks that\n  appear in an incoming transaction, which is in turn used by the error-handling logic of the plumbing."],"^G","~$fulcro.client.impl.application/fallback-handler","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",23,"^;Z",["^1:",[["~$p__41643","^<;"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",21,"^9",21,"^<2",2,"^<3",true,"^;O",["^1:",["^;P",["^1:",[[["^ ","^;Q",["^;R"]],"^<;"]]]]],"^;W","This internal function is responsible for generating and returning a function that can accomplish calling the fallbacks that\n  appear in an incoming transaction, which is in turn used by the error-handling logic of the plumbing."],"~$split-mutations",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",84,"^8",7,"^9",84,"^:",22,"^;O",["^1:",["^;P",["^1:",[["~$tx"]]]]],"^;W","Split a tx that contains mutations.\n\n   Examples:\n   [(f) (g)] => [[(f) (g)]]\n   [(f) (g) (f) (k)] => [[(f) (g)] [(f) (k)]]\n   [(f) (g) (f) (k) (g)] => [[(f) (g)] [(f) (k) (g)]]\n\n   This function splits any mutation that uses the same dispatch symbol more than once (since returns from server go\n   into a map, and that is the only way to get return values from both), and also when the mutations do not share abort\n   IDs (so that mutations do not get grouped into a transaction that could cause them to get cancelled incorrectly).\n\n   Returns a sequence that contains one or more transactions."],"^G","~$fulcro.client.impl.application/split-mutations","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",22,"^;Z",["^1:",[["^<T"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",84,"^9",84,"^<2",1,"^<3",true,"^;O",["^1:",["^;P",["^1:",[["^<T"]]]]],"^;W","Split a tx that contains mutations.\n\n   Examples:\n   [(f) (g)] => [[(f) (g)]]\n   [(f) (g) (f) (k)] => [[(f) (g)] [(f) (k)]]\n   [(f) (g) (f) (k) (g)] => [[(f) (g)] [(f) (k) (g)]]\n\n   This function splits any mutation that uses the same dispatch symbol more than once (since returns from server go\n   into a map, and that is the only way to get return values from both), and also when the mutations do not share abort\n   IDs (so that mutations do not get grouped into a transaction that could cause them to get cancelled incorrectly).\n\n   Returns a sequence that contains one or more transactions."],"~$enqueue",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",33,"^8",8,"^9",33,"^:",15,"^<L",true,"^;O",["^1:",["^;P",["^1:",[["~$q","~$v"]]]]],"^;W","Enqueue a send to the network queue. This is a standalone function because we cannot mock core async functions."],"^<L",true,"^G","~$fulcro.client.impl.application/enqueue","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",15,"^;Z",["^1:",[["~$q","~$v"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",33,"^9",33,"^<2",2,"^<3",true,"^;O",["^1:",["^;P",["^1:",[["~$q","~$v"]]]]],"^;W","Enqueue a send to the network queue. This is a standalone function because we cannot mock core async functions."],"~$server-send",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",205,"^8",7,"^9",205,"^:",18,"^;O",["^1:",["^;P",["^1:",[["^;T","^;U","~$merge-result-callback"]]]]],"^;W","Puts queries/mutations (and their corresponding callbacks) onto the send queue. The networking code will pull these\n  off one at a time and send them through the real networking layer. Reads are guaranteed to *follow* writes."],"^G","~$fulcro.client.impl.application/server-send","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",18,"^;Z",["^1:",[["^;T","^;U","^<Y"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",205,"^9",205,"^<2",3,"^<3",true,"^;O",["^1:",["^;P",["^1:",[["^;T","^;U","^<Y"]]]]],"^;W","Puts queries/mutations (and their corresponding callbacks) onto the send queue. The networking code will pull these\n  off one at a time and send them through the real networking layer. Reads are guaranteed to *follow* writes."],"~$send-with-history-tracking",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",65,"^8",7,"^9",65,"^:",33,"^;O",["^1:",["^;P",["^1:",[["^13",["^ ","^;Q",["^;R","^<M","^<T","~$on-done","~$on-error","~$on-load"]]],["^<M","^13","^<T","^=0","^=1","^=2"]]]]],"^;W","Does a real send but includes history activity tracking to prevent the gc of history that is related to active\n  network requests. If you're doing something really low level in the networking, you want this over real-send.","~:top-fn",["^ ","^;Y",false,"^<2",6,"^;Z",["^1:",[["^13",["^ ","^;Q",["^;R","^<M","^<T","^=0","^=1","^=2"]]],["^<M","^13","^<T","^=0","^=1","^=2"]]],"^;O",["^1:",[["^13",["^ ","^;Q",["^;R","^<M","^<T","^=0","^=1","^=2"]]],["^<M","^13","^<T","^=0","^=1","^=2"]]],"^<1",["^1:",[null,null]]]],"^G","~$fulcro.client.impl.application/send-with-history-tracking","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",33,"^=3",["^ ","^;Y",false,"^<2",6,"^;Z",["^1:",[["^13",["^ ","^;Q",["^;R","^<M","^<T","^=0","^=1","^=2"]]],["^<M","^13","^<T","^=0","^=1","^=2"]]],"^;O",["^1:",[["^13",["^ ","^;Q",["^;R","^<M","^<T","^=0","^=1","^=2"]]],["^<M","^13","^<T","^=0","^=1","^=2"]]],"^<1",["^1:",[null,null]]],"^;Z",["^1:",[["^13",["^ ","^;Q",["^;R","^<M","^<T","^=0","^=1","^=2"]]],["^<M","^13","^<T","^=0","^=1","^=2"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",65,"^9",65,"^<2",6,"^<3",true,"^;O",["^1:",[["^13",["^ ","^;Q",["^;R","^<M","^<T","^=0","^=1","^=2"]]],["^<M","^13","^<T","^=0","^=1","^=2"]]],"^;W","Does a real send but includes history activity tracking to prevent the gc of history that is related to active\n  network requests. If you're doing something really low level in the networking, you want this over real-send."],"~$real-send",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",41,"^8",7,"^9",41,"^:",16,"^;O",["^1:",["^;P",["^1:",[["^13",["^ ","^;Q",["^;R","^<T","^=0","^=1","^=2","~$abort-id"]]],["^13","^<T","^=0","^=1","^=2"]]]]],"^;W","Do a properly-plumbed network send. This function recursively strips ui attributes from the tx and pushes the tx over\n  the network. It installs the given on-load and on-error handlers to deal with the network response. DEPRECATED: If\n  you're doing something really low-level with networking, use send-with-history-tracking.","^=3",["^ ","^;Y",false,"^<2",5,"^;Z",["^1:",[["^13",["^ ","^;Q",["^;R","^<T","^=0","^=1","^=2","^=6"]]],["^13","^<T","^=0","^=1","^=2"]]],"^;O",["^1:",[["^13",["^ ","^;Q",["^;R","^<T","^=0","^=1","^=2","^=6"]]],["^13","^<T","^=0","^=1","^=2"]]],"^<1",["^1:",[null,null]]]],"^G","~$fulcro.client.impl.application/real-send","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",16,"^=3",["^ ","^;Y",false,"^<2",5,"^;Z",["^1:",[["^13",["^ ","^;Q",["^;R","^<T","^=0","^=1","^=2","^=6"]]],["^13","^<T","^=0","^=1","^=2"]]],"^;O",["^1:",[["^13",["^ ","^;Q",["^;R","^<T","^=0","^=1","^=2","^=6"]]],["^13","^<T","^=0","^=1","^=2"]]],"^<1",["^1:",[null,null]]],"^;Z",["^1:",[["^13",["^ ","^;Q",["^;R","^<T","^=0","^=1","^=2","^=6"]]],["^13","^<T","^=0","^=1","^=2"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",41,"^9",41,"^<2",5,"^<3",true,"^;O",["^1:",[["^13",["^ ","^;Q",["^;R","^<T","^=0","^=1","^=2","^=6"]]],["^13","^<T","^=0","^=1","^=2"]]],"^;W","Do a properly-plumbed network send. This function recursively strips ui attributes from the tx and pushes the tx over\n  the network. It installs the given on-load and on-error handlers to deal with the network response. DEPRECATED: If\n  you're doing something really low-level with networking, use send-with-history-tracking."],"~$enqueue-reads",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",171,"^8",7,"^9",171,"^:",20,"^;O",["^1:",["^;P",["^1:",[[["^ ","^;Q",["^;S","^;R","^<E"]]]]]]],"^;W","Finds any loads marked `parallel` and triggers real network requests immediately. Remaining loads\n  are pulled into a single fetch payload (combined into one query) and enqueued behind any prior mutations/reads that\n  were already requested in a prior UI/event cycle. Thus non-parallel reads are processed in clusters grouped due to UI\n  events (a single event might trigger many reads which will all go to the server as a single combined request).\n  Further UI events that trigger remote interaction will end up waiting until prior network request(s) are complete.\n\n  This ensures that default reasoning is simple and sequential in the face of optimistic UI updates (real network\n  traffic characteristics could cause out of order processing, and you would not want\n  a 'create list' to be processed on the server *after* an 'add an item to the list'). "],"^G","~$fulcro.client.impl.application/enqueue-reads","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",20,"^;Z",["^1:",[["~$p__42094"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",171,"^9",171,"^<2",1,"^<3",true,"^;O",["^1:",["^;P",["^1:",[[["^ ","^;Q",["^;S","^;R","^<E"]]]]]]],"^;W","Finds any loads marked `parallel` and triggers real network requests immediately. Remaining loads\n  are pulled into a single fetch payload (combined into one query) and enqueued behind any prior mutations/reads that\n  were already requested in a prior UI/event cycle. Thus non-parallel reads are processed in clusters grouped due to UI\n  events (a single event might trigger many reads which will all go to the server as a single combined request).\n  Further UI events that trigger remote interaction will end up waiting until prior network request(s) are complete.\n\n  This ensures that default reasoning is simple and sequential in the face of optimistic UI updates (real network\n  traffic characteristics could cause out of order processing, and you would not want\n  a 'create list' to be processed on the server *after* an 'add an item to the list'). "],"~$generate-reconciler",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",263,"^8",7,"^9",263,"^:",26,"^;O",["^1:",["^;P",["^1:",[[["^ ","^;Q",["^;S","~$mutation-merge"],"^1<","^;T"],"~$initial-state","~$parser",["^ ","^;Q",["~$migrate"],"^1<","~$reconciler-options"]]]]]],"^;W","The reconciler's send method calls FulcroApplication/server-send, which itself requires a reconciler with a\n  send method already defined. This creates a catch-22 / circular dependency on the reconciler and :send field within\n  the reconciler.\n\n  To resolve the issue, we def an atom pointing to the reconciler that the send method will deref each time it is\n  called. This allows us to define the reconciler with a send method that, at the time of initialization, has an app\n  that points to a nil reconciler. By the end of this function, the app's reconciler reference has been properly set."],"^G","~$fulcro.client.impl.application/generate-reconciler","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",26,"^;Z",["^1:",[["~$p__42723","^==","^=>","~$p__42724"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",263,"^9",263,"^<2",4,"^<3",true,"^;O",["^1:",["^;P",["^1:",[[["^ ","^;Q",["^;S","^=<"],"^1<","^;T"],"^==","^=>",["^ ","^;Q",["^=?"],"^1<","^=@"]]]]]],"^;W","The reconciler's send method calls FulcroApplication/server-send, which itself requires a reconciler with a\n  send method already defined. This creates a catch-22 / circular dependency on the reconciler and :send field within\n  the reconciler.\n\n  To resolve the issue, we def an atom pointing to the reconciler that the send method will deref each time it is\n  called. This allows us to define the reconciler with a send method that, at the time of initialization, has an app\n  that points to a nil reconciler. By the end of this function, the app's reconciler reference has been properly set."],"~$detect-errant-remotes",["^ ","^;N",null,"^5",["^ ","^6","fulcro/client/impl/application.cljc","^7",197,"^8",7,"^9",197,"^:",28,"^;O",["^1:",["^;P",["^1:",[[["^ ","^;Q",["^;R","^;S"],"^1<","^;T"]]]]]]],"^G","~$fulcro.client.impl.application/detect-errant-remotes","^;Y",false,"^6","fulcro/client/impl/application.cljc","^:",28,"^;Z",["^1:",[["~$p__42305"]]],"^<0",null,"^<1",["^1:",[null,null]],"^8",1,"^7",197,"^9",197,"^<2",1,"^<3",true,"^;O",["^1:",["^;P",["^1:",[[["^ ","^;Q",["^;R","^;S"],"^1<","^;T"]]]]]]]],"^17",["^ ","^@","^A","^D","^D","^O","^P","^S","^T","^P","^P","^U","^=","^V","^V","^Y","^Y","^T","^T","^=","^=","~$m","^Y","~$s","^A","^A","^A"],"~:cljs.analyzer/constants",["^ ","^15",["^F",["~:args","~:children","~:fulcro.client.network/edn","~:fulcro.history/history-atom","~:payload","~:networking","~:fulcro.client.network/abort-id","~:key","~:merge-ident","~:fulcro.client.network/error-handler","~:mutation-merge","~:else","~$cljs.spec.alpha/cat","~:queue","~:fulcro.history/tx-time","~:remotes","~:response-channels","~:warn","~:migrate","~:value","^6","~:reconciler","~:on-load","~:fulcro.client.network/progress-handler","~$cljs.spec.alpha/fspec","~:ui/locale","~:ast","~:recur","~:transaction","~:state","~:fulcro.client.impl.data-fetch/on-error","~:global-error-callback","~:en","~:parser","~:tx","^7","~:on-done","~:fulcro.client.primitives/remote","~:current","~:fulcro.client.primitives/query","~:send-queues","~:send","~:merge-tree","~:fulcro.client.impl.data-fetch/payload","~:action","~:fulcro.client.impl.data-fetch/load-descriptors","~:error","~:fulcro/ready-to-load","~:complete","~:fulcro.client.primitives/refresh","~:fulcro.client.network/ok-handler","~:target","~:on-error","~:transactions","~:query","~:body","~:abort-id","~:fulcro/server-error","~:normalize","~:fulcro.client.impl.data-fetch/on-load","^<W","~$cljs.core/any?"]],"~:order~:ns-specs",["^ ","^<W",["^1:",["^>3","^=H",["^1:",["^=T","^=U","^>V","^=L","^>E"]]]]],"~:ns-speced-vars",["^<W"],"~:compiler-options",["^7[",[["^>Z","~:static-fns"],true,["^>Z","~:elide-asserts"],false,["^>Z","~:optimize-constants"],null,["^>Z","~:external-config"],null,["^>Z","~:tooling-config"],null,["^>Z","~:emit-constants"],null,["^>Z","~:infer-externs"],true,["^>Z","^1G"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^>Z","~:fn-invoke-direct"],null,["^>Z","^1I"],"/dev/null"]]]