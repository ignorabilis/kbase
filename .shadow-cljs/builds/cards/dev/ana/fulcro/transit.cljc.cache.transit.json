["^ ","~:output",["^ ","~:js","goog.provide('fulcro.transit');\r\ngoog.require('cljs.core');\r\ngoog.require('cognitect.transit');\r\ngoog.require('com.cognitect.transit');\r\ngoog.require('fulcro.tempid');\r\n\r\n/**\r\n* @constructor\r\n*/\r\nfulcro.transit.TempIdHandler = (function (){\r\n});\r\nfulcro.transit.TempIdHandler.prototype.tag = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn \"fulcro/tempid\";\r\n});\r\n\r\nfulcro.transit.TempIdHandler.prototype.rep = (function (r){\r\nvar self__ = this;\r\nvar _ = this;\r\nreturn r.id;\r\n});\r\n\r\nfulcro.transit.TempIdHandler.prototype.stringRep = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn null;\r\n});\r\n\r\nfulcro.transit.TempIdHandler.getBasis = (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n});\r\n\r\nfulcro.transit.TempIdHandler.cljs$lang$type = true;\r\n\r\nfulcro.transit.TempIdHandler.cljs$lang$ctorStr = \"fulcro.transit/TempIdHandler\";\r\n\r\nfulcro.transit.TempIdHandler.cljs$lang$ctorPrWriter = (function (this__4192__auto__,writer__4193__auto__,opt__4194__auto__){\r\nreturn cljs.core._write(writer__4193__auto__,\"fulcro.transit/TempIdHandler\");\r\n});\r\n\r\n/**\r\n * Positional factory function for fulcro.transit/TempIdHandler.\r\n */\r\nfulcro.transit.__GT_TempIdHandler = (function fulcro$transit$__GT_TempIdHandler(){\r\nreturn (new fulcro.transit.TempIdHandler());\r\n});\r\n\r\nfulcro.transit.writer = (function fulcro$transit$writer(var_args){\r\nvar G__32446 = arguments.length;\r\nswitch (G__32446) {\r\ncase 0:\r\nreturn fulcro.transit.writer.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn fulcro.transit.writer.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.transit.writer.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn fulcro.transit.writer.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\n});\r\n\r\nfulcro.transit.writer.cljs$core$IFn$_invoke$arity$1 = (function (opts){\r\nreturn cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"json\",\"json\",1279968570),cljs.core.assoc_in(opts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"handlers\",\"handlers\",79528781),fulcro.tempid.TempId], null),(new fulcro.transit.TempIdHandler())));\r\n});\r\n\r\nfulcro.transit.writer.cljs$lang$maxFixedArity = 1;\r\n\r\nfulcro.transit.reader = (function fulcro$transit$reader(var_args){\r\nvar G__32452 = arguments.length;\r\nswitch (G__32452) {\r\ncase 0:\r\nreturn fulcro.transit.reader.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn fulcro.transit.reader.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.transit.reader.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn fulcro.transit.reader.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\n});\r\n\r\nfulcro.transit.reader.cljs$core$IFn$_invoke$arity$1 = (function (opts){\r\nreturn cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"json\",\"json\",1279968570),cljs.core.assoc_in(opts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"handlers\",\"handlers\",79528781),\"fulcro/tempid\"], null),(function (id){\r\nreturn fulcro.tempid.tempid.cljs$core$IFn$_invoke$arity$1(id);\r\n})));\r\n});\r\n\r\nfulcro.transit.reader.cljs$lang$maxFixedArity = 1;\r\n\r\n/**\r\n * Checks to see that the value in question can be serialized by the default fulcro writer.\r\n */\r\nfulcro.transit.serializable_QMARK_ = (function fulcro$transit$serializable_QMARK_(v){\r\ntry{fulcro.transit.writer.cljs$core$IFn$_invoke$arity$0().write(v);\r\n\r\nreturn true;\r\n}catch (e32460){var e = e32460;\r\nreturn false;\r\n}});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","fulcro/transit.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$clojure.stacktrace","~$cljs.stacktrace","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$fulcro.transit","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cognitect.transit","^K","~$t","^K","~$com.cognitect.transit","^L","~$ct","^L","~$fulcro.tempid","^N","~$tempid","^N","~$cljs.core","^P","~$goog","^Q"],"~:seen",["^D",["~:require"]],"~:uses",["^ ","~$TempId","^N"],"~:require-macros",["^ ","^P","^P"],"~:form",["~#list",["~$ns","^F",["^X",["^S",["^K","~:as","~$t"],["^L","^Z","^M"],["^N","^Z","^O","~:refer",["^U"]]]]]],"~:flags",["^ ","^S",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^Q","^P","^K","^L","^N"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","fulcro/transit.cljc"],"~:compiled-at",1537360775546,"~:resource-name","fulcro/transit.cljc","~:warnings",[],"~:source","(ns fulcro.transit\n  #?(:clj\n     (:refer-clojure :exclude [ref]))\n  (:require [cognitect.transit :as t]\n    #?(:cljs [com.cognitect.transit :as ct])\n            [fulcro.tempid :as tempid #?@(:cljs [:refer [TempId]])])\n  #?(:clj\n     (:import [com.cognitect.transit\n               TransitFactory WriteHandler ReadHandler]\n              [fulcro.tempid TempId])))\n\n#?(:cljs\n   (deftype TempIdHandler []\n     Object\n     (tag [_ _] \"fulcro/tempid\")\n     (rep [_ r] (. r -id))\n     (stringRep [_ _] nil)))\n\n#?(:clj\n   (deftype TempIdHandler []\n     WriteHandler\n     (tag [_ _] \"fulcro/tempid\")\n     (rep [_ r] (. ^TempId r -id))\n     (stringRep [_ r] (. ^TempId r -id))\n     (getVerboseHandler [_] nil)))\n\n#?(:cljs\n   (defn writer\n     ([]\n      (writer {}))\n     ([opts]\n      (t/writer :json\n        (assoc-in opts [:handlers TempId] (TempIdHandler.))))))\n\n#?(:clj\n   (defn writer\n     ([out]\n      (writer out {}))\n     ([out opts]\n      (t/writer out :json\n        (assoc-in opts [:handlers TempId] (TempIdHandler.))))))\n\n#?(:cljs\n   (defn reader\n     ([]\n      (reader {}))\n     ([opts]\n      (t/reader :json\n        (assoc-in opts\n          [:handlers \"fulcro/tempid\"]\n          (fn [id] (tempid/tempid id)))))))\n\n#?(:clj\n   (defn reader\n     ([in]\n      (reader in {}))\n     ([in opts]\n      (t/reader in :json\n        (assoc-in opts\n          [:handlers \"fulcro/tempid\"]\n          (reify\n            ReadHandler\n            (fromRep [_ id] (TempId. id))))))))\n\n(defn serializable?\n  \"Checks to see that the value in question can be serialized by the default fulcro writer.\"\n  [v]\n  #?(:clj  (try\n             (.write (writer (java.io.ByteArrayOutputStream.)) v)\n             true\n             (catch Exception e false))\n     :cljs (try\n             (.write (writer) v)\n             true\n             (catch :default e false))))\n\n(comment\n  ;; cljs\n  (t/read (reader) (t/write (writer) (tempid/tempid)))\n\n  ;; clj\n  (import '[java.io ByteArrayOutputStream ByteArrayInputStream])\n\n  (def baos (ByteArrayOutputStream. 4096))\n  (def w (writer baos))\n  (t/write w (TempId. (java.util.UUID/randomUUID)))\n  (.toString baos)\n\n  (def in (ByteArrayInputStream. (.toByteArray baos)))\n  (def r (reader in))\n  (t/read r)\n  )\n","~:reader-features",["^D",["~:cljs"]],"~:source-map",["^ ","~i12",["^ ","~i3",[["^ ","~:gcol",0,"~:gline",5],["^ ","^1=",0,"^1>",5],["^ ","^1=",0,"^1>",11],["^ ","^1=",0,"^1>",11],["^ ","^1=",0,"^1>",11],["^ ","^1=",0,"^1>",11],["^ ","^1=",45,"^1>",11],["^ ","^1=",0,"^1>",13],["^ ","^1=",0,"^1>",13],["^ ","^1=",12,"^1>",13],["^ ","^1=",0,"^1>",14],["^ ","^1=",0,"^1>",14],["^ ","^1=",0,"^1>",17],["^ ","^1=",0,"^1>",17],["^ ","^1=",0,"^1>",17],["^ ","^1=",45,"^1>",17],["^ ","^1=",0,"^1>",19],["^ ","^1=",0,"^1>",19],["^ ","^1=",8,"^1>",19],["^ ","^1=",0,"^1>",20],["^ ","^1=",0,"^1>",23],["^ ","^1=",0,"^1>",23],["^ ","^1=",0,"^1>",23],["^ ","^1=",51,"^1>",23],["^ ","^1=",0,"^1>",25],["^ ","^1=",0,"^1>",25],["^ ","^1=",12,"^1>",25],["^ ","^1=",0,"^1>",26],["^ ","^1=",0,"^1>",26],["^ ","^1=",0,"^1>",29],["^ ","^1=",0,"^1>",29],["^ ","^1=",40,"^1>",29],["^ ","^1=",0,"^1>",30],["^ ","^1=",0,"^1>",30],["^ ","^1=",0,"^1>",33],["^ ","^1=",0,"^1>",33],["^ ","^1=",46,"^1>",33],["^ ","^1=",0,"^1>",35],["^ ","^1=",0,"^1>",35],["^ ","^1=",49,"^1>",35],["^ ","^1=",0,"^1>",37],["^ ","^1=",0,"^1>",37],["^ ","^1=",54,"^1>",37],["^ ","^1=",65,"^1>",37,"^E","this__4192__auto__"],["^ ","^1=",84,"^1>",37,"^E","writer__4193__auto__"],["^ ","^1=",105,"^1>",37,"^E","opt__4194__auto__"],["^ ","^1=",0,"^1>",38],["^ ","^1=",0,"^1>",38],["^ ","^1=",7,"^1>",38,"^E","cljs.core/-write"],["^ ","^1=",24,"^1>",38,"^E","writer__4193__auto__"],["^ ","^1=",45,"^1>",38],["^ ","^1=",0,"^1>",41],["^ ","^1=",36,"^1>",44],["^ ","^1=",0,"^1>",45],["^ ","^1=",0,"^1>",45],["^ ","^1=",12,"^1>",45,"^E","fulcro.transit/TempIdHandler"]],"^1<",[["^ ","^1=",0,"^1>",11,"^E","fulcro.transit/TempIdHandler"],["^ ","^1=",0,"^1>",17,"^E","fulcro.transit/TempIdHandler"],["^ ","^1=",0,"^1>",23,"^E","fulcro.transit/TempIdHandler"],["^ ","^1=",0,"^1>",29,"^E","fulcro.transit/TempIdHandler"],["^ ","^1=",0,"^1>",33,"^E","fulcro.transit/TempIdHandler"],["^ ","^1=",0,"^1>",35,"^E","fulcro.transit/TempIdHandler"],["^ ","^1=",0,"^1>",37,"^E","fulcro.transit/TempIdHandler"],["^ ","^1=",0,"^1>",44,"^E","fulcro.transit/->TempIdHandler"],["^ ","^1=",0,"^1>",48,"^E","fulcro.transit/TempIdHandler"]]],"~i14",["^ ","~i11",[["^ ","^1=",4,"^1>",13,"^E","_"]],"~i13",[["^ ","^1=",56,"^1>",11,"^E","_"]]],"~i15",["^ ","^1@",[["^ ","^1=",4,"^1>",19,"^E","_"]],"^1A",[["^ ","^1=",56,"^1>",17,"^E","r"]],"~i16",[["^ ","^1=",0,"^1>",20]],"~i19",[["^ ","^1=",7,"^1>",20,"^E","r"]]],"^1C",["^ ","~i17",[["^ ","^1=",4,"^1>",25,"^E","_"]],"^1D",[["^ ","^1=",62,"^1>",23,"^E","_"]]],"~i27",["^ ","~i3",[["^ ","^1=",0,"^1>",48],["^ ","^1=",0,"^1>",48],["^ ","^1=",24,"^1>",48],["^ ","^1=",56,"^1>",48,"^E","var_args"],["^ ","^1=",0,"^1>",49],["^ ","^1=",0,"^1>",49],["^ ","^1=",4,"^1>",49,"^E","G__32446"],["^ ","^1=",15,"^1>",49],["^ ","^1=",15,"^1>",49],["^ ","^1=",0,"^1>",50],["^ ","^1=",0,"^1>",50],["^ ","^1=",8,"^1>",50,"^E","G__32446"],["^ ","^1=",5,"^1>",51],["^ ","^1=",0,"^1>",52],["^ ","^1=",7,"^1>",52,"^E","fulcro.transit/writer"],["^ ","^1=",5,"^1>",55],["^ ","^1=",0,"^1>",56],["^ ","^1=",7,"^1>",56,"^E","fulcro.transit/writer"],["^ ","^1=",59,"^1>",56],["^ ","^1=",60,"^1>",56],["^ ","^1=",70,"^1>",56],["^ ","^1=",0,"^1>",60],["^ ","^1=",6,"^1>",60],["^ ","^1=",11,"^1>",60,"^E","js/Error"],["^ ","^1=",17,"^1>",60],["^ ","^1=",18,"^1>",60],["^ ","^1=",80,"^1>",60],["^ ","^1=",80,"^1>",60],["^ ","^1=",0,"^1>",65],["^ ","^1=",0,"^1>",65],["^ ","^1=",54,"^1>",65],["^ ","^1=",0,"^1>",66],["^ ","^1=",0,"^1>",69],["^ ","^1=",0,"^1>",69],["^ ","^1=",54,"^1>",69],["^ ","^1=",0,"^1>",70],["^ ","^1=",0,"^1>",73],["^ ","^1=",0,"^1>",73],["^ ","^1=",48,"^1>",73],["^ ","^1=",0,"^1>",75]],"~i9",[["^ ","^1=",0,"^1>",48,"^E","fulcro.transit/writer"],["^ ","^1=",0,"^1>",65,"^E","fulcro.transit/writer"],["^ ","^1=",0,"^1>",69,"^E","fulcro.transit/writer"],["^ ","^1=",0,"^1>",73,"^E","fulcro.transit/writer"]]],"~i29",["^ ","~i6",[["^ ","^1=",0,"^1>",66],["^ ","^1=",59,"^1>",66]],"~i7",[["^ ","^1=",7,"^1>",66,"^E","fulcro.transit.writer.cljs$core$IFn$_invoke$arity$1"]]],"~i30",["^ ","~i7",[["^ ","^1=",65,"^1>",69,"^E","opts"]]],"~i31",["^ ","~i6",[["^ ","^1=",0,"^1>",70],["^ ","^1=",62,"^1>",70]],"~i7",[["^ ","^1=",7,"^1>",70,"^E","cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2"]]],"~i32",["^ ","~i8",[["^ ","^1=",115,"^1>",70],["^ ","^1=",139,"^1>",70],["^ ","^1=",222,"^1>",70]],"~i9",[["^ ","^1=",115,"^1>",70,"^E","cljs.core/assoc-in"]],"~i18",[["^ ","^1=",134,"^1>",70,"^E","opts"]],"~i34",[["^ ","^1=",281,"^1>",70,"^E","fulcro.tempid/TempId"]],"~i42",[["^ ","^1=",310,"^1>",70],["^ ","^1=",315,"^1>",70,"^E","fulcro.transit/TempIdHandler"]]],"~i43",["^ ","~i3",[["^ ","^1=",0,"^1>",75],["^ ","^1=",0,"^1>",75],["^ ","^1=",24,"^1>",75],["^ ","^1=",56,"^1>",75,"^E","var_args"],["^ ","^1=",0,"^1>",76],["^ ","^1=",0,"^1>",76],["^ ","^1=",4,"^1>",76,"^E","G__32452"],["^ ","^1=",15,"^1>",76],["^ ","^1=",15,"^1>",76],["^ ","^1=",0,"^1>",77],["^ ","^1=",0,"^1>",77],["^ ","^1=",8,"^1>",77,"^E","G__32452"],["^ ","^1=",5,"^1>",78],["^ ","^1=",0,"^1>",79],["^ ","^1=",7,"^1>",79,"^E","fulcro.transit/reader"],["^ ","^1=",5,"^1>",82],["^ ","^1=",0,"^1>",83],["^ ","^1=",7,"^1>",83,"^E","fulcro.transit/reader"],["^ ","^1=",59,"^1>",83],["^ ","^1=",60,"^1>",83],["^ ","^1=",70,"^1>",83],["^ ","^1=",0,"^1>",87],["^ ","^1=",6,"^1>",87],["^ ","^1=",11,"^1>",87,"^E","js/Error"],["^ ","^1=",17,"^1>",87],["^ ","^1=",18,"^1>",87],["^ ","^1=",80,"^1>",87],["^ ","^1=",80,"^1>",87],["^ ","^1=",0,"^1>",92],["^ ","^1=",0,"^1>",92],["^ ","^1=",54,"^1>",92],["^ ","^1=",0,"^1>",93],["^ ","^1=",0,"^1>",96],["^ ","^1=",0,"^1>",96],["^ ","^1=",54,"^1>",96],["^ ","^1=",0,"^1>",97],["^ ","^1=",0,"^1>",102],["^ ","^1=",0,"^1>",102],["^ ","^1=",48,"^1>",102],["^ ","^1=",0,"^1>",104]],"~i9",[["^ ","^1=",0,"^1>",75,"^E","fulcro.transit/reader"],["^ ","^1=",0,"^1>",92,"^E","fulcro.transit/reader"],["^ ","^1=",0,"^1>",96,"^E","fulcro.transit/reader"],["^ ","^1=",0,"^1>",102,"^E","fulcro.transit/reader"]]],"~i45",["^ ","~i6",[["^ ","^1=",0,"^1>",93],["^ ","^1=",59,"^1>",93]],"~i7",[["^ ","^1=",7,"^1>",93,"^E","fulcro.transit.reader.cljs$core$IFn$_invoke$arity$1"]]],"~i46",["^ ","~i7",[["^ ","^1=",65,"^1>",96,"^E","opts"]]],"~i47",["^ ","~i6",[["^ ","^1=",0,"^1>",97],["^ ","^1=",62,"^1>",97]],"~i7",[["^ ","^1=",7,"^1>",97,"^E","cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2"]]],"~i48",["^ ","~i8",[["^ ","^1=",115,"^1>",97],["^ ","^1=",139,"^1>",97],["^ ","^1=",222,"^1>",97],["^ ","^1=",281,"^1>",97]],"~i9",[["^ ","^1=",115,"^1>",97,"^E","cljs.core/assoc-in"]],"^1K",[["^ ","^1=",134,"^1>",97,"^E","opts"]]],"~i50",["^ ","~i10",[["^ ","^1=",305,"^1>",97],["^ ","^1=",0,"^1>",98]],"^1B",[["^ ","^1=",316,"^1>",97,"^E","id"]],"^1D",[["^ ","^1=",0,"^1>",98]],"~i20",[["^ ","^1=",7,"^1>",98,"^E","fulcro.tempid.tempid.cljs$core$IFn$_invoke$arity$1"]],"^1L",[["^ ","^1=",58,"^1>",98,"^E","id"]]],"~i64",["^ ","~i0",[["^ ","^1=",0,"^1>",104],["^ ","^1=",37,"^1>",107],["^ ","^1=",0,"^1>",108]],"~i6",[["^ ","^1=",0,"^1>",107,"^E","fulcro.transit/serializable?"]]],"~i66",["^ ","~i3",[["^ ","^1=",82,"^1>",107,"^E","v"]]],"~i71",["^ ","^1@",[["^ ","^1=",0,"^1>",108],["^ ","^1=",4,"^1>",108],["^ ","^1=",0,"^1>",110],["^ ","^1=",16,"^1>",111],["^ ","^1=",24,"^1>",111,"^E","e32460"],["^ ","^1=",0,"^1>",112],["^ ","^1=",0,"^1>",112]]],"~i72",["^ ","^1A",[["^ ","^1=",4,"^1>",108]],"~i21",[["^ ","^1=",4,"^1>",108]],"~i22",[["^ ","^1=",4,"^1>",108,"^E","fulcro.transit.writer.cljs$core$IFn$_invoke$arity$0"]],"^1H",[["^ ","^1=",64,"^1>",108,"^E","v"]]],"~i74",["^ ","^1G",[["^ ","^1=",20,"^1>",111,"^E","e"]]],"~i76",["^ ","~i0",[["^ ","^1=",0,"^1>",114]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^P"],[1537260906000],["^14","goog/math/math.js"],[1508737613441,"^Q","~$goog.array","~$goog.asserts"],["^14","goog/array/array.js"],[1508737613441,"^Q","^27"],["^14","com/cognitect/transit/impl/reader.js"],[1482686437866,"^Q","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"],["^14","goog/debug/error.js"],[1508737613441,"^Q"],["^14","goog/dom/nodetype.js"],[1508737613441,"^Q"],["^14","com/cognitect/transit/util.js"],[1482686437866,"^Q","~$goog.object"],["^14","goog/object/object.js"],[1508737613441,"^Q"],"~:SHADOW-TIMESTAMP",[1537358551000,1537260906000],["^14","goog/math/long.js"],[1508737613441,"^Q","^27","~$goog.reflect"],["^14","fulcro/transit.cljc"],[1537260907310,"^Q","^P","^K","^L","^N"],["^14","goog/functions/functions.js"],[1508737613441,"^Q"],["^14","goog/structs/map.js"],[1508737613441,"^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration","^2:"],["^14","com/cognitect/transit/delimiters.js"],[1482686437866,"^Q"],["^14","com/cognitect/transit/impl/decoder.js"],[1482686437866,"^Q","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^29","~$com.cognitect.transit.types"],["^14","goog/asserts/asserts.js"],[1508737613441,"^Q","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^14","goog/uri/uri.js"],[1508737613441,"^Q","^26","^27","^2D","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^14","fulcro/tempid.cljc"],[1537260907310,"^Q","^P"],["^14","goog/base.js"],[1508737613441],["^14","goog/structs/structs.js"],[1508737613441,"^Q","^26","^2:"],["^14","com/cognitect/transit/handlers.js"],[1482686437866,"^Q","^2?","^2A","~$goog.math.Long"],["^14","goog/string/string.js"],[1508737613441,"^Q"],["^14","com/cognitect/transit/types.js"],[1482686437866,"^Q","^2?","~$com.cognitect.transit.eq","^2J"],["^14","goog/reflect/reflect.js"],[1508737613441,"^Q"],["^14","com/cognitect/transit/eq.js"],[1482686437866,"^Q","^2?"],["^14","goog/string/stringbuffer.js"],[1508737613441,"^Q"],["^14","goog/iter/iter.js"],[1508737613441,"^Q","^26","^27","~$goog.functions","~$goog.math"],["^14","com/cognitect/transit/caching.js"],[1482686437866,"^Q","^2@"],["^14","cljs/core.cljs"],[1537260906289,"^2J","~$goog.math.Integer","^2D","^2:","^26","~$goog.Uri","~$goog.string.StringBuffer"],["^14","com/cognitect/transit.js"],[1482686437866,"^Q","^2?","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^2A","^2K","^28","^29"],["^14","goog/math/integer.js"],[1508737613441,"^Q"],["^14","goog/uri/utils.js"],[1508737613441,"^Q","^26","^27","^2D"],["^14","com/cognitect/transit/impl/writer.js"],[1482686437866,"^Q","^2?","^29","~$com.cognitect.transit.handlers","^2A","^2@","^2J"],["^14","cognitect/transit.cljs"],[1537260903184,"^Q","^P","^L","^2A","^2K","^2J"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","fulcro/transit.cljc","^7",1,"^8",5,"^9",1,"^:",19],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"~:shadow/js-access-properties",["^D",["rep","stringRep"]],"^E","^F","^I",null,"^J",["^ ","^K","^K","~$t","^K","^L","^L","^M","^L","^N","^N","^O","^N","^P","^P","^Q","^Q"],"^R",["^D",["^S"]],"~:shadow/js-access-global",["^D",["Error"]],"^T",["^ ","^U","^N"],"~:defs",["^ ","~$TempIdHandler",["^ ","^E","~$fulcro.transit/TempIdHandler","~:type",true,"~:tag","^2Y","~:num-fields",0,"~:record",false,"^6","fulcro/transit.cljc","^7",13,"^8",13],"~$->TempIdHandler",["^ ","~:protocol-inline",null,"^5",["^ ","~:protocols",["^D",["~$cljs.core/Object"]],"^6","fulcro/transit.cljc","^:",26,"^8",13,"~:factory","~:positional","^7",13,"^9",13,"~:arglists",["^X",["~$quote",["^X",[[]]]]],"~:skip-protocol-flag",null,"~:doc","Positional factory function for fulcro.transit/TempIdHandler."],"^34",["^D",["^35"]],"^E","~$fulcro.transit/->TempIdHandler","~:variadic",false,"^6","fulcro/transit.cljc","^:",26,"~:method-params",["^X",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^X",[null,null]],"^8",4,"^36","^37","^7",13,"^9",13,"~:max-fixed-arity",0,"~:fn-var",true,"^38",["^X",["^39",["^X",[[]]]]],"^3:",null,"^3;","Positional factory function for fulcro.transit/TempIdHandler."],"~$writer",["^ ","^33",null,"^5",["^ ","^6","fulcro/transit.cljc","^7",28,"^8",10,"^9",28,"^:",16,"^38",["^X",["^39",["^X",[[],["~$opts"]]]]],"~:top-fn",["^ ","^3=",false,"^3A",1,"^3>",["^X",[[],["^3D"]]],"^38",["^X",[[],["^3D"]]],"^3@",["^X",[null,null]]]],"^E","~$fulcro.transit/writer","^3=",false,"^6","fulcro/transit.cljc","^:",16,"^3E",["^ ","^3=",false,"^3A",1,"^3>",["^X",[[],["^3D"]]],"^38",["^X",[[],["^3D"]]],"^3@",["^X",[null,null]]],"^3>",["^X",[[],["^3D"]]],"^3?",null,"^3@",["^X",[null,null]],"^8",4,"^7",28,"^9",28,"^3A",1,"^3B",true,"^38",["^X",[[],["^3D"]]]],"~$reader",["^ ","^33",null,"^5",["^ ","^6","fulcro/transit.cljc","^7",44,"^8",10,"^9",44,"^:",16,"^38",["^X",["^39",["^X",[[],["^3D"]]]]],"^3E",["^ ","^3=",false,"^3A",1,"^3>",["^X",[[],["^3D"]]],"^38",["^X",[[],["^3D"]]],"^3@",["^X",[null,null]]]],"^E","~$fulcro.transit/reader","^3=",false,"^6","fulcro/transit.cljc","^:",16,"^3E",["^ ","^3=",false,"^3A",1,"^3>",["^X",[[],["^3D"]]],"^38",["^X",[[],["^3D"]]],"^3@",["^X",[null,null]]],"^3>",["^X",[[],["^3D"]]],"^3?",null,"^3@",["^X",[null,null]],"^8",4,"^7",44,"^9",44,"^3A",1,"^3B",true,"^38",["^X",[[],["^3D"]]]],"~$serializable?",["^ ","^33",null,"^5",["^ ","^6","fulcro/transit.cljc","^7",65,"^8",7,"^9",65,"^:",20,"^38",["^X",["^39",["^X",[["~$v"]]]]],"^3;","Checks to see that the value in question can be serialized by the default fulcro writer."],"^E","~$fulcro.transit/serializable?","^3=",false,"^6","fulcro/transit.cljc","^:",20,"^3>",["^X",[["~$v"]]],"^3?",null,"^3@",["^X",[null,null]],"^8",1,"^7",65,"^9",65,"^3A",1,"^3B",true,"^38",["^X",["^39",["^X",[["~$v"]]]]],"^3;","Checks to see that the value in question can be serialized by the default fulcro writer."]],"^V",["^ ","^P","^P"],"~:cljs.analyzer/constants",["^ ","^R",["^D",["~:handlers","~:json"]],"~:order",["^3M","^3L"]],"^10",["^ ","^S",["^D",[]]],"^11",["^ "],"^12",["^Q","^P","^K","^L","^N"]],"^H","^F","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^24",[["^3Q","~:static-fns"],true,["^3Q","~:elide-asserts"],false,["^3Q","~:optimize-constants"],null,["^3Q","~:external-config"],null,["^3Q","~:tooling-config"],null,["^3Q","~:emit-constants"],null,["^3Q","~:infer-externs"],true,["^3Q","^19"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^3Q","~:fn-invoke-direct"],null,["^3Q","^1;"],"/dev/null"]]]