["^ ","~:output",["^ ","~:js","goog.provide('fulcro.client.primitives');\r\ngoog.require('cljs.core');\r\ngoog.require('goog.string');\r\ngoog.require('cljsjs.react');\r\ngoog.require('goog.object');\r\ngoog.require('fulcro_css.css_protocols');\r\ngoog.require('fulcro_css.css_implementation');\r\ngoog.require('cljs.core.async');\r\ngoog.require('clojure.set');\r\ngoog.require('fulcro.history');\r\ngoog.require('fulcro.logging');\r\ngoog.require('fulcro.tempid');\r\ngoog.require('fulcro.transit');\r\ngoog.require('clojure.zip');\r\ngoog.require('fulcro.client.impl.data_targeting');\r\ngoog.require('fulcro.client.impl.protocols');\r\ngoog.require('fulcro.client.impl.parser');\r\ngoog.require('fulcro.util');\r\ngoog.require('clojure.walk');\r\ngoog.require('clojure.string');\r\ngoog.require('cljs.spec.alpha');\r\ngoog.require('cognitect.transit');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\nfulcro.client.primitives.Ident = function(){};\r\n\r\n/**\r\n * Return the ident for this component\r\n */\r\nfulcro.client.primitives.ident = (function fulcro$client$primitives$ident(this$,props){\r\nif(((!((this$ == null))) && (!((this$.fulcro$client$primitives$Ident$ident$arity$2 == null))))){\r\nreturn this$.fulcro$client$primitives$Ident$ident$arity$2(this$,props);\r\n} else {\r\nvar x__4243__auto__ = (((this$ == null))?null:this$);\r\nvar m__4244__auto__ = (fulcro.client.primitives.ident[goog.typeOf(x__4243__auto__)]);\r\nif(!((m__4244__auto__ == null))){\r\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$2(this$,props) : m__4244__auto__.call(null,this$,props));\r\n} else {\r\nvar m__4244__auto____$1 = (fulcro.client.primitives.ident[\"_\"]);\r\nif(!((m__4244__auto____$1 == null))){\r\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$2(this$,props) : m__4244__auto____$1.call(null,this$,props));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"Ident.ident\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\nfulcro.client.primitives.IQuery = function(){};\r\n\r\n/**\r\n * Return the component's unbound static query\r\n */\r\nfulcro.client.primitives.query = (function fulcro$client$primitives$query(this$){\r\nif(((!((this$ == null))) && (!((this$.fulcro$client$primitives$IQuery$query$arity$1 == null))))){\r\nreturn this$.fulcro$client$primitives$IQuery$query$arity$1(this$);\r\n} else {\r\nvar x__4243__auto__ = (((this$ == null))?null:this$);\r\nvar m__4244__auto__ = (fulcro.client.primitives.query[goog.typeOf(x__4243__auto__)]);\r\nif(!((m__4244__auto__ == null))){\r\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4244__auto__.call(null,this$));\r\n} else {\r\nvar m__4244__auto____$1 = (fulcro.client.primitives.query[\"_\"]);\r\nif(!((m__4244__auto____$1 == null))){\r\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4244__auto____$1.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IQuery.query\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\nfulcro.client.primitives.InitialAppState = function(){};\r\n\r\n/**\r\n * Get the initial state to be used for this component in app state. You are responsible for composing these together.\r\n */\r\nfulcro.client.primitives.initial_state = (function fulcro$client$primitives$initial_state(clz,params){\r\nif(((!((clz == null))) && (!((clz.fulcro$client$primitives$InitialAppState$initial_state$arity$2 == null))))){\r\nreturn clz.fulcro$client$primitives$InitialAppState$initial_state$arity$2(clz,params);\r\n} else {\r\nvar x__4243__auto__ = (((clz == null))?null:clz);\r\nvar m__4244__auto__ = (fulcro.client.primitives.initial_state[goog.typeOf(x__4243__auto__)]);\r\nif(!((m__4244__auto__ == null))){\r\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$2(clz,params) : m__4244__auto__.call(null,clz,params));\r\n} else {\r\nvar m__4244__auto____$1 = (fulcro.client.primitives.initial_state[\"_\"]);\r\nif(!((m__4244__auto____$1 == null))){\r\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$2(clz,params) : m__4244__auto____$1.call(null,clz,params));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"InitialAppState.initial-state\",clz);\r\n}\r\n}\r\n}\r\n});\r\n\r\nfulcro.client.primitives.has_initial_app_state_QMARK_ = (function fulcro$client$primitives$has_initial_app_state_QMARK_(component){\r\nif(!((component == null))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === component.fulcro$client$primitives$InitialAppState$)))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n});\r\nfulcro.client.primitives.has_ident_QMARK_ = (function fulcro$client$primitives$has_ident_QMARK_(component){\r\nif(!((component == null))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === component.fulcro$client$primitives$Ident$)))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n});\r\nfulcro.client.primitives.has_query_QMARK_ = (function fulcro$client$primitives$has_query_QMARK_(component){\r\nif(!((component == null))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === component.fulcro$client$primitives$IQuery$)))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n});\r\n/**\r\n * Get the initial state of a component. Needed because calling the protocol method from a defui component in clj will not work as expected.\r\n */\r\nfulcro.client.primitives.get_initial_state = (function fulcro$client$primitives$get_initial_state(class$,params){\r\nvar G__37651 = ((((!((class$ == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === class$.fulcro$client$primitives$InitialAppState$))))?true:false):false))?fulcro.client.primitives.initial_state(class$,params):null);\r\nif((G__37651 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.with_meta(G__37651,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"computed\",\"computed\",-1482016762),true], null));\r\n}\r\n});\r\n/**\r\n * Returns true if the given initial state was computed from a call to get-initial-state.\r\n */\r\nfulcro.client.primitives.computed_initial_state_QMARK_ = (function fulcro$client$primitives$computed_initial_state_QMARK_(s){\r\nvar and__3938__auto__ = cljs.core.map_QMARK_(s);\r\nif(and__3938__auto__){\r\nvar G__37659 = s;\r\nvar G__37659__$1 = (((G__37659 == null))?null:cljs.core.meta(G__37659));\r\nif((G__37659__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"computed\",\"computed\",-1482016762).cljs$core$IFn$_invoke$arity$1(G__37659__$1);\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n});\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client.primitives\",\"remote\",\"fulcro.client.primitives/remote\",82057012),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),cljs.core.keyword_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client.primitives\",\"ident\",\"fulcro.client.primitives/ident\",-1688940366),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"missing\",\"missing\",362507769),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346),new cljs.core.Symbol(\"fulcro.util\",\"ident?\",\"fulcro.util/ident?\",-2064561335,null)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"missing\",\"missing\",362507769),new cljs.core.Keyword(null,\"ident\",\"ident\",-742346)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Symbol(\"fulcro.util\",\"ident?\",\"fulcro.util/ident?\",-2064561335,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nil_QMARK_,fulcro.util.ident_QMARK_], null),null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client.primitives\",\"query\",\"fulcro.client.primitives/query\",261276758),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.vector_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client.primitives\",\"transaction\",\"fulcro.client.primitives/transaction\",1435510665),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"every\",\"cljs.spec.alpha/every\",123912744,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__37669#\",\"p1__37669#\",-1166893737,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",1201033885,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(null,\"p1__37669#\",\"p1__37669#\",-1166893737,null)),cljs.core.list(new cljs.core.Symbol(\"fulcro.util\",\"mutation?\",\"fulcro.util/mutation?\",-1077955232,null),new cljs.core.Symbol(null,\"p1__37669#\",\"p1__37669#\",-1166893737,null)))),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__37669#\",\"p1__37669#\",-1166893737,null)], null),cljs.core.list(new cljs.core.Symbol(null,\"or\",\"or\",1876275696,null),cljs.core.list(new cljs.core.Symbol(null,\"keyword?\",\"keyword?\",1917797069,null),new cljs.core.Symbol(null,\"p1__37669#\",\"p1__37669#\",-1166893737,null)),cljs.core.list(new cljs.core.Symbol(\"util\",\"mutation?\",\"util/mutation?\",-1080424299,null),new cljs.core.Symbol(null,\"p1__37669#\",\"p1__37669#\",-1166893737,null)))),(function (p1__37669_SHARP_){\r\nreturn (((p1__37669_SHARP_ instanceof cljs.core.Keyword)) || (fulcro.util.mutation_QMARK_(p1__37669_SHARP_)));\r\n}),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__37675){\r\nreturn cljs.core.vector_QMARK_(G__37675);\r\n}),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"every\",\"cljs.spec.alpha/every\",123912744,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",1201033885,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),cljs.core.list(new cljs.core.Symbol(\"fulcro.util\",\"mutation?\",\"fulcro.util/mutation?\",-1077955232,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)))),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null))], null),null));\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client.primitives\",\"pessimistic?\",\"fulcro.client.primitives/pessimistic?\",-804432644),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),cljs.core.boolean_QMARK_);\r\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"fulcro.client.primitives\",\"tempids\",\"fulcro.client.primitives/tempids\",1304031205),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Symbol(\"fulcro.client.primitives\",\"tempid?\",\"fulcro.client.primitives/tempid?\",-1763280099,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Symbol(null,\"tempid?\",\"tempid?\",2034653313,null),new cljs.core.Symbol(null,\"any?\",\"any?\",-318999933,null)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"fulcro.client.primitives\",\"tempid?\",\"fulcro.client.primitives/tempid?\",-1763280099,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [fulcro.client.primitives.tempid_QMARK_,cljs.core.any_QMARK_], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"into\",\"into\",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__37700){\r\nreturn cljs.core.map_QMARK_(G__37700);\r\n}),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),(function (i__15438__auto__,v__15439__auto__){\r\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__15439__auto__,(0));\r\n}),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Symbol(\"fulcro.client.primitives\",\"tempid?\",\"fulcro.client.primitives/tempid?\",-1763280099,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null),null));\r\n/**\r\n * pass-through function for getting history, that enables testing (cannot mock protocols easily)\r\n */\r\nfulcro.client.primitives.get_history = (function fulcro$client$primitives$get_history(reconciler){\r\nif(cljs.core.truth_(reconciler)){\r\nreturn fulcro.client.impl.protocols.get_history(reconciler);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nfulcro.client.primitives.add_basis_time_STAR_ = (function fulcro$client$primitives$add_basis_time_STAR_(p__37713,props,time){\r\nvar map__37714 = p__37713;\r\nvar map__37714__$1 = ((((!((map__37714 == null)))?(((((map__37714.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__37714.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__37714):map__37714);\r\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__37714__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\nif(cljs.core.map_QMARK_(props)){\r\nif(cljs.core.seq(children)){\r\nvar children__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"union\",\"union\",2142937499),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(cljs.core.first(children))))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(cljs.core.first(children)))):children);\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.into.cljs$core$IFn$_invoke$arity$3(props,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1(((function (children__$1,map__37714,map__37714__$1,children){\r\nreturn (function (p1__37703_SHARP_){\r\nreturn cljs.core.contains_QMARK_(props,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(p1__37703_SHARP_));\r\n});})(children__$1,map__37714,map__37714__$1,children))\r\n),cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (children__$1,map__37714,map__37714__$1,children){\r\nreturn (function (p__37718){\r\nvar map__37719 = p__37718;\r\nvar map__37719__$1 = ((((!((map__37719 == null)))?(((((map__37719.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__37719.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__37719):map__37719);\r\nvar ast = map__37719__$1;\r\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__37719__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\nvar query = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__37719__$1,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\r\nvar x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(props,key);\r\nvar ast__$1 = (function (){var G__37725 = ast;\r\nvar G__37725__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),query))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__37725,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children__$1):G__37725);\r\nif(cljs.core.pos_int_QMARK_(query)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__37725__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (G__37725,G__37725__$1,x,map__37719,map__37719__$1,ast,key,query,children__$1,map__37714,map__37714__$1,children){\r\nreturn (function (p1__37706_SHARP_){\r\nvar G__37726 = p1__37706_SHARP_;\r\nif(cljs.core.pos_int_QMARK_(new cljs.core.Keyword(null,\"query\",\"query\",-1288509510).cljs$core$IFn$_invoke$arity$1(p1__37706_SHARP_))){\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(G__37726,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),cljs.core.dec);\r\n} else {\r\nreturn G__37726;\r\n}\r\n});})(G__37725,G__37725__$1,x,map__37719,map__37719__$1,ast,key,query,children__$1,map__37714,map__37714__$1,children))\r\n,children__$1));\r\n} else {\r\nreturn G__37725__$1;\r\n}\r\n})();\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key,((cljs.core.sequential_QMARK_(x))?cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (x,ast__$1,map__37719,map__37719__$1,ast,key,query,children__$1,map__37714,map__37714__$1,children){\r\nreturn (function (p1__37707_SHARP_){\r\nreturn (fulcro.client.primitives.add_basis_time_STAR_.cljs$core$IFn$_invoke$arity$3 ? fulcro.client.primitives.add_basis_time_STAR_.cljs$core$IFn$_invoke$arity$3(ast__$1,p1__37707_SHARP_,time) : fulcro.client.primitives.add_basis_time_STAR_.call(null,ast__$1,p1__37707_SHARP_,time));\r\n});})(x,ast__$1,map__37719,map__37719__$1,ast,key,query,children__$1,map__37714,map__37714__$1,children))\r\n,x):(fulcro.client.primitives.add_basis_time_STAR_.cljs$core$IFn$_invoke$arity$3 ? fulcro.client.primitives.add_basis_time_STAR_.cljs$core$IFn$_invoke$arity$3(ast__$1,x,time) : fulcro.client.primitives.add_basis_time_STAR_.call(null,ast__$1,x,time)))], null);\r\n});})(children__$1,map__37714,map__37714__$1,children))\r\n)),children__$1),cljs.core.assoc,new cljs.core.Keyword(\"fulcro.client.primitives\",\"time\",\"fulcro.client.primitives/time\",-138753010),time);\r\n} else {\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(props,cljs.core.assoc,new cljs.core.Keyword(\"fulcro.client.primitives\",\"time\",\"fulcro.client.primitives/time\",-138753010),time);\r\n}\r\n} else {\r\nreturn props;\r\n}\r\n});\r\n/**\r\n * Recursively add the given basis time to all of the maps in the props. This is part of the UI refresh optimization\r\n *   algorithm. Children that refresh in isolation could be mis-drawn if a parent subsequently does a re-render without\r\n *   a query (e.g. local state change). The basis times allow us to detect and avoid that.\r\n */\r\nfulcro.client.primitives.add_basis_time = (function fulcro$client$primitives$add_basis_time(var_args){\r\nvar G__37749 = arguments.length;\r\nswitch (G__37749) {\r\ncase 2:\r\nreturn fulcro.client.primitives.add_basis_time.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn fulcro.client.primitives.add_basis_time.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.add_basis_time.cljs$core$IFn$_invoke$arity$2 = (function (props,time){\r\nreturn clojure.walk.prewalk((function (ele){\r\nif(cljs.core.map_QMARK_(ele)){\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(ele,cljs.core.assoc,new cljs.core.Keyword(\"fulcro.client.primitives\",\"time\",\"fulcro.client.primitives/time\",-138753010),time);\r\n} else {\r\nreturn ele;\r\n}\r\n}),props);\r\n});\r\n\r\nfulcro.client.primitives.add_basis_time.cljs$core$IFn$_invoke$arity$3 = (function (q,props,time){\r\nreturn fulcro.client.primitives.add_basis_time_STAR_((fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1(q) : fulcro.client.primitives.query__GT_ast.call(null,q)),props,time);\r\n});\r\n\r\nfulcro.client.primitives.add_basis_time.cljs$lang$maxFixedArity = 3;\r\n\r\n/**\r\n * Returns the basis time from the given props, or ::unset if not available.\r\n */\r\nfulcro.client.primitives.get_basis_time = (function fulcro$client$primitives$get_basis_time(props){\r\nvar or__3949__auto__ = new cljs.core.Keyword(\"fulcro.client.primitives\",\"time\",\"fulcro.client.primitives/time\",-138753010).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(props));\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"unset\",\"unset\",-513298114);\r\n}\r\n});\r\n/**\r\n * get the current basis time from the reconciler. Used instead of calling the protocol method `basis-t` to facilitate testing.\r\n */\r\nfulcro.client.primitives.get_current_time = (function fulcro$client$primitives$get_current_time(reconciler){\r\nreturn fulcro.client.impl.protocols.basis_t(reconciler);\r\n});\r\n/**\r\n * Collect the static declarations from the defui.\r\n */\r\nfulcro.client.primitives.collect_statics = (function fulcro$client$primitives$collect_statics(dt){\r\nvar split_on_static = (function fulcro$client$primitives$collect_statics_$_split_on_static(forms){\r\nreturn cljs.core.split_with(cljs.core.complement(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"static\",\"static\",-1440077198,null),null], null), null)),forms);\r\n});\r\nvar split_on_symbol = (function fulcro$client$primitives$collect_statics_$_split_on_symbol(forms){\r\nreturn cljs.core.split_with(cljs.core.complement(cljs.core.symbol_QMARK_),forms);\r\n});\r\nvar dt__$1 = cljs.core.seq(dt);\r\nvar dt_SINGLEQUOTE_ = cljs.core.PersistentVector.EMPTY;\r\nvar statics = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),cljs.core.PersistentVector.EMPTY], null);\r\nwhile(true){\r\nif(dt__$1){\r\nvar vec__37775 = split_on_static(dt__$1);\r\nvar pre = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37775,(0),null);\r\nvar vec__37778 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37775,(1),null);\r\nvar seq__37779 = cljs.core.seq(vec__37778);\r\nvar first__37780 = cljs.core.first(seq__37779);\r\nvar seq__37779__$1 = cljs.core.next(seq__37779);\r\nvar _ = first__37780;\r\nvar first__37780__$1 = cljs.core.first(seq__37779__$1);\r\nvar seq__37779__$2 = cljs.core.next(seq__37779__$1);\r\nvar sym = first__37780__$1;\r\nvar remaining = seq__37779__$2;\r\nvar post = vec__37778;\r\nvar dt_SINGLEQUOTE___$1 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(dt_SINGLEQUOTE_,pre);\r\nif(cljs.core.seq(post)){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(sym,new cljs.core.Symbol(null,\"field\",\"field\",338095027,null))){\r\nvar vec__37782 = cljs.core.split_at((2),remaining);\r\nvar field_info = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37782,(0),null);\r\nvar dt__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37782,(1),null);\r\nvar G__37803 = cljs.core.seq(dt__$2);\r\nvar G__37804 = dt_SINGLEQUOTE___$1;\r\nvar G__37805 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(statics,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230)], null),cljs.core.conj,cljs.core.vec(field_info));\r\ndt__$1 = G__37803;\r\ndt_SINGLEQUOTE_ = G__37804;\r\nstatics = G__37805;\r\ncontinue;\r\n} else {\r\nif((sym instanceof cljs.core.Symbol)){\r\nvar vec__37786 = split_on_symbol(remaining);\r\nvar protocol_info = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37786,(0),null);\r\nvar dt__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37786,(1),null);\r\nvar G__37808 = cljs.core.seq(dt__$2);\r\nvar G__37809 = dt_SINGLEQUOTE___$1;\r\nvar G__37810 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(statics,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896)], null),cljs.core.into,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym], null),protocol_info));\r\ndt__$1 = G__37808;\r\ndt_SINGLEQUOTE_ = G__37809;\r\nstatics = G__37810;\r\ncontinue;\r\n} else {\r\nthrow (new Error(\"Malformed static\"));\r\n\r\n}\r\n}\r\n} else {\r\nvar G__37815 = null;\r\nvar G__37816 = dt_SINGLEQUOTE___$1;\r\nvar G__37817 = statics;\r\ndt__$1 = G__37815;\r\ndt_SINGLEQUOTE_ = G__37816;\r\nstatics = G__37817;\r\ncontinue;\r\n}\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"dt\",\"dt\",-368444759),dt_SINGLEQUOTE_,new cljs.core.Keyword(null,\"statics\",\"statics\",-1984882809),statics], null);\r\n}\r\nbreak;\r\n}\r\n});\r\nfulcro.client.primitives.validate_statics = (function fulcro$client$primitives$validate_statics(dt){\r\nvar temp__5457__auto__ = cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"IQuery\",null,\"Ident\",null], null), null),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__37820_SHARP_){\r\nreturn cljs.core.last(clojure.string.split.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__37820_SHARP_)].join(''),/\\//));\r\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol_QMARK_,dt)));\r\nif(cljs.core.truth_(temp__5457__auto__)){\r\nvar invalid = temp__5457__auto__;\r\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(invalid),\" protocol declaration must appear with `static`.\"].join('')));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nfulcro.client.primitives.lifecycle_sigs = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null,\"initLocalState\",\"initLocalState\",1594027651,null),new cljs.core.Symbol(null,\"componentWillMount\",\"componentWillMount\",1355203908,null),new cljs.core.Symbol(null,\"componentDidUpdate\",\"componentDidUpdate\",-342946454,null),new cljs.core.Symbol(null,\"componentDidCatch\",\"componentDidCatch\",-1832718036,null),new cljs.core.Symbol(null,\"UNSAFE_componentWillMount\",\"UNSAFE_componentWillMount\",-954355859,null),new cljs.core.Symbol(null,\"getSnapshotBeforeUpdate\",\"getSnapshotBeforeUpdate\",-1793313585,null),new cljs.core.Symbol(null,\"UNSAFE_componentWillUpdate\",\"UNSAFE_componentWillUpdate\",1368599313,null),new cljs.core.Symbol(null,\"componentWillUnmount\",\"componentWillUnmount\",-1080646955,null),new cljs.core.Symbol(null,\"componentWillReceiveProps\",\"componentWillReceiveProps\",-2094446795,null),new cljs.core.Symbol(null,\"shouldComponentUpdate\",\"shouldComponentUpdate\",-858684809,null),new cljs.core.Symbol(null,\"render\",\"render\",232498073,null),new cljs.core.Symbol(null,\"componentWillUpdate\",\"componentWillUpdate\",-1997044837,null),new cljs.core.Symbol(null,\"UNSAFE_componentWillReceiveProps\",\"UNSAFE_componentWillReceiveProps\",1989928510,null),new cljs.core.Symbol(null,\"componentDidMount\",\"componentDidMount\",-1698724833,null)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null),new cljs.core.Symbol(null,\"prev-props\",\"prev-props\",1081981230,null),new cljs.core.Symbol(null,\"prev-state\",\"prev-state\",1365252518,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null),new cljs.core.Symbol(null,\"error\",\"error\",661562495,null),new cljs.core.Symbol(null,\"info\",\"info\",1323462525,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null),new cljs.core.Symbol(null,\"prev-props\",\"prev-props\",1081981230,null),new cljs.core.Symbol(null,\"prev-state\",\"prev-state\",1365252518,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null),new cljs.core.Symbol(null,\"next-props\",\"next-props\",-266324026,null),new cljs.core.Symbol(null,\"next-state\",\"next-state\",211803275,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null),new cljs.core.Symbol(null,\"next-props\",\"next-props\",-266324026,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null),new cljs.core.Symbol(null,\"next-props\",\"next-props\",-266324026,null),new cljs.core.Symbol(null,\"next-state\",\"next-state\",211803275,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null),new cljs.core.Symbol(null,\"next-props\",\"next-props\",-266324026,null),new cljs.core.Symbol(null,\"next-state\",\"next-state\",211803275,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null),new cljs.core.Symbol(null,\"next-props\",\"next-props\",-266324026,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"this\",\"this\",1028897902,null)], null)]);\r\nfulcro.client.primitives.validate_sig = (function fulcro$client$primitives$validate_sig(p__37835){\r\nvar vec__37838 = p__37835;\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37838,(0),null);\r\nvar sig = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37838,(1),null);\r\nvar method = vec__37838;\r\nvar required_signature = cljs.core.get.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.lifecycle_sigs,name);\r\nif((cljs.core.count(required_signature) <= cljs.core.count(sig))){\r\nreturn null;\r\n} else {\r\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1([\"Invalid signature for \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sig),\", need \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(required_signature)].join('')),\"\\n\",\"(<= (count required-signature) (count sig))\"].join('')));\r\n}\r\n});\r\nvar will_receive_props_38183 = (function (p__37938){\r\nvar vec__37939 = p__37938;\r\nvar seq__37940 = cljs.core.seq(vec__37939);\r\nvar first__37941 = cljs.core.first(seq__37940);\r\nvar seq__37940__$1 = cljs.core.next(seq__37940);\r\nvar name = first__37941;\r\nvar first__37941__$1 = cljs.core.first(seq__37940__$1);\r\nvar seq__37940__$2 = cljs.core.next(seq__37940__$1);\r\nvar vec__37942 = first__37941__$1;\r\nvar this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37942,(0),null);\r\nvar next_props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37942,(1),null);\r\nvar args = vec__37942;\r\nvar body = seq__37940__$2;\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,name,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37871__auto__\",\"this__37871__auto__\",-1427925778,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-props__37872__auto__\",\"next-props__37872__auto__\",1010090081,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,this$,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37871__auto__\",\"this__37871__auto__\",-1427925778,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,next_props,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-props__37872__auto__\",\"next-props__37872__auto__\",1010090081,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$value\",null,(1),null))], 0)))),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null))], 0))));\r\n});\r\nvar will_update_38184 = ((function (will_receive_props_38183){\r\nreturn (function (p__37951){\r\nvar vec__37952 = p__37951;\r\nvar seq__37953 = cljs.core.seq(vec__37952);\r\nvar first__37954 = cljs.core.first(seq__37953);\r\nvar seq__37953__$1 = cljs.core.next(seq__37953);\r\nvar name = first__37954;\r\nvar first__37954__$1 = cljs.core.first(seq__37953__$1);\r\nvar seq__37953__$2 = cljs.core.next(seq__37953__$1);\r\nvar vec__37955 = first__37954__$1;\r\nvar this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37955,(0),null);\r\nvar next_props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37955,(1),null);\r\nvar next_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37955,(2),null);\r\nvar args = vec__37955;\r\nvar body = seq__37953__$2;\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,name,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37873__auto__\",\"this__37873__auto__\",1289166255,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-props__37874__auto__\",\"next-props__37874__auto__\",-921997670,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-state__37875__auto__\",\"next-state__37875__auto__\",2110048293,null),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,this$,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37873__auto__\",\"this__37873__auto__\",1289166255,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,next_props,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-props__37874__auto__\",\"next-props__37874__auto__\",-921997670,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$value\",null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,next_state,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-state__37875__auto__\",\"next-state__37875__auto__\",2110048293,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$state\",null,(1),null))], 0)))),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null))], 0))));\r\n});})(will_receive_props_38183))\r\n;\r\nfulcro.client.primitives.reshape_map = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reshape\",\"reshape\",1588089910),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null,\"render\",\"render\",232498073,null),new cljs.core.Symbol(null,\"componentWillReceiveProps\",\"componentWillReceiveProps\",-2094446795,null),new cljs.core.Symbol(null,\"componentDidUpdate\",\"componentDidUpdate\",-342946454,null),new cljs.core.Symbol(null,\"componentDidMount\",\"componentDidMount\",-1698724833,null),new cljs.core.Symbol(null,\"componentWillUpdate\",\"componentWillUpdate\",-1997044837,null),new cljs.core.Symbol(null,\"getSnapshotBeforeUpdate\",\"getSnapshotBeforeUpdate\",-1793313585,null),new cljs.core.Symbol(null,\"componentWillUnmount\",\"componentWillUnmount\",-1080646955,null),new cljs.core.Symbol(null,\"shouldComponentUpdate\",\"shouldComponentUpdate\",-858684809,null),new cljs.core.Symbol(null,\"UNSAFE_componentWillUpdate\",\"UNSAFE_componentWillUpdate\",1368599313,null),new cljs.core.Symbol(null,\"UNSAFE_componentWillReceiveProps\",\"UNSAFE_componentWillReceiveProps\",1989928510,null),new cljs.core.Symbol(null,\"initLocalState\",\"initLocalState\",1594027651,null)],[((function (will_receive_props_38183,will_update_38184){\r\nreturn (function (p__37970){\r\nvar vec__37971 = p__37970;\r\nvar seq__37972 = cljs.core.seq(vec__37971);\r\nvar first__37973 = cljs.core.first(seq__37972);\r\nvar seq__37972__$1 = cljs.core.next(seq__37972);\r\nvar name = first__37973;\r\nvar first__37973__$1 = cljs.core.first(seq__37972__$1);\r\nvar seq__37972__$2 = cljs.core.next(seq__37972__$1);\r\nvar vec__37974 = first__37973__$1;\r\nvar this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37974,(0),null);\r\nvar args = vec__37974;\r\nvar body = seq__37972__$2;\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,name,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37913__auto__\",\"this__37913__auto__\",2075332209,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,this$,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37913__auto__\",\"this__37913__auto__\",2075332209,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"binding\",\"clojure.core/binding\",2144622993,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"*reconciler*\",\"fulcro.client.primitives/*reconciler*\",-1389819093,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"get-reconciler\",\"fulcro.client.primitives/get-reconciler\",394660282,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37913__auto__\",\"this__37913__auto__\",2075332209,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"*depth*\",\"fulcro.client.primitives/*depth*\",-1043647943,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"inc\",\"clojure.core/inc\",-977605856,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"depth\",\"fulcro.client.primitives/depth\",798240003,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37913__auto__\",\"this__37913__auto__\",2075332209,null),null,(1),null))))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"*shared*\",\"fulcro.client.primitives/*shared*\",399764910,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"shared\",\"fulcro.client.primitives/shared\",-1589508494,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37913__auto__\",\"this__37913__auto__\",2075332209,null),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"*instrument*\",\"fulcro.client.primitives/*instrument*\",1628425165,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"instrument\",\"fulcro.client.primitives/instrument\",-1943731993,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37913__auto__\",\"this__37913__auto__\",2075332209,null),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"*parent*\",\"fulcro.client.primitives/*parent*\",-1707213508,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37913__auto__\",\"this__37913__auto__\",2075332209,null),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null))], 0)))),null,(1),null))], 0))));\r\n});})(will_receive_props_38183,will_update_38184))\r\n,will_receive_props_38183,((function (will_receive_props_38183,will_update_38184){\r\nreturn (function (p__37987){\r\nvar vec__37988 = p__37987;\r\nvar seq__37989 = cljs.core.seq(vec__37988);\r\nvar first__37990 = cljs.core.first(seq__37989);\r\nvar seq__37989__$1 = cljs.core.next(seq__37989);\r\nvar name = first__37990;\r\nvar first__37990__$1 = cljs.core.first(seq__37989__$1);\r\nvar seq__37989__$2 = cljs.core.next(seq__37989__$1);\r\nvar vec__37991 = first__37990__$1;\r\nvar seq__37992 = cljs.core.seq(vec__37991);\r\nvar first__37993 = cljs.core.first(seq__37992);\r\nvar seq__37992__$1 = cljs.core.next(seq__37992);\r\nvar this$ = first__37993;\r\nvar first__37993__$1 = cljs.core.first(seq__37992__$1);\r\nvar seq__37992__$2 = cljs.core.next(seq__37992__$1);\r\nvar prev_props = first__37993__$1;\r\nvar first__37993__$2 = cljs.core.first(seq__37992__$2);\r\nvar seq__37992__$3 = cljs.core.next(seq__37992__$2);\r\nvar prev_state = first__37993__$2;\r\nvar optional = seq__37992__$3;\r\nvar args = vec__37991;\r\nvar body = seq__37989__$2;\r\nvar snapshot_sym = (((cljs.core.first(optional) instanceof cljs.core.Symbol))?cljs.core.first(optional):cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"snapshot\"));\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,name,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37881__auto__\",\"this__37881__auto__\",562970121,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-props__37882__auto__\",\"prev-props__37882__auto__\",-170676799,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-state__37883__auto__\",\"prev-state__37883__auto__\",-1388901743,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"snapshot__37884__auto__\",\"snapshot__37884__auto__\",204540863,null),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,this$,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37881__auto__\",\"this__37881__auto__\",562970121,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,snapshot_sym,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"snapshot__37884__auto__\",\"snapshot__37884__auto__\",204540863,null),null,(1),null)),(new cljs.core.List(null,prev_props,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-props__37882__auto__\",\"prev-props__37882__auto__\",-170676799,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$value\",null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,prev_state,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-state__37883__auto__\",\"prev-state__37883__auto__\",-1388901743,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$state\",null,(1),null))], 0)))),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when\",\"clojure.core/when\",21610388,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"implements?\",\"cljs.core/implements?\",-251485149,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"Ident\",\"fulcro.client.primitives/Ident\",-1049116985,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37881__auto__\",\"this__37881__auto__\",562970121,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"ident__37885__auto__\",\"ident__37885__auto__\",108489044,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"ident\",\"fulcro.client.primitives/ident\",-48408839,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37881__auto__\",\"this__37881__auto__\",562970121,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,prev_props,null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-ident__37886__auto__\",\"next-ident__37886__auto__\",-1644476153,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"ident\",\"fulcro.client.primitives/ident\",-48408839,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37881__auto__\",\"this__37881__auto__\",562970121,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"props\",\"fulcro.client.primitives/props\",-525522558,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37881__auto__\",\"this__37881__auto__\",562970121,null),null,(1),null))))),null,(1),null))], 0)))),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when\",\"clojure.core/when\",21610388,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"not=\",\"clojure.core/not=\",646247579,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"ident__37885__auto__\",\"ident__37885__auto__\",108489044,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-ident__37886__auto__\",\"next-ident__37886__auto__\",-1644476153,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"idxr__37888__auto__\",\"idxr__37888__auto__\",-1077923756,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"get-in\",\"clojure.core/get-in\",-1204155834,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"get-reconciler\",\"fulcro.client.primitives/get-reconciler\",394660282,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37881__auto__\",\"this__37881__auto__\",562970121,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"config\",\"config\",994861415),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315),null,(1),null)))))),null,(1),null))], 0)))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when-not\",\"clojure.core/when-not\",-516174277,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"nil?\",\"clojure.core/nil?\",842444475,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"idxr__37888__auto__\",\"idxr__37888__auto__\",-1077923756,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"swap!\",\"clojure.core/swap!\",-1898658849,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"indexes\",\"indexes\",1496475545),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"idxr__37888__auto__\",\"idxr__37888__auto__\",-1077923756,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"fn\",\"clojure.core/fn\",-980152636,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(null,\"indexes__37890__auto__\",\"indexes__37890__auto__\",112167515,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"->\",\"clojure.core/->\",1452757553,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexes__37890__auto__\",\"indexes__37890__auto__\",112167515,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"update-in\",\"clojure.core/update-in\",2079870444,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"ref->components\",\"ref->components\",-303587249),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"ident__37885__auto__\",\"ident__37885__auto__\",108489044,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"disj\",\"clojure.core/disj\",1848745359,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37881__auto__\",\"this__37881__auto__\",562970121,null),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"update-in\",\"clojure.core/update-in\",2079870444,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"ref->components\",\"ref->components\",-303587249),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-ident__37886__auto__\",\"next-ident__37886__auto__\",-1644476153,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"fnil\",\"clojure.core/fnil\",653784127,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"conj\",\"clojure.core/conj\",-357857389,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_set,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37881__auto__\",\"this__37881__auto__\",562970121,null),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),body], 0)))),null,(1),null))], 0))));\r\n});})(will_receive_props_38183,will_update_38184))\r\n,((function (will_receive_props_38183,will_update_38184){\r\nreturn (function (p__38020){\r\nvar vec__38023 = p__38020;\r\nvar seq__38024 = cljs.core.seq(vec__38023);\r\nvar first__38025 = cljs.core.first(seq__38024);\r\nvar seq__38024__$1 = cljs.core.next(seq__38024);\r\nvar name = first__38025;\r\nvar first__38025__$1 = cljs.core.first(seq__38024__$1);\r\nvar seq__38024__$2 = cljs.core.next(seq__38024__$1);\r\nvar vec__38026 = first__38025__$1;\r\nvar this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38026,(0),null);\r\nvar args = vec__38026;\r\nvar body = seq__38024__$2;\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,name,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37891__auto__\",\"this__37891__auto__\",-844704453,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,this$,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37891__auto__\",\"this__37891__auto__\",-844704453,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"reconciler__37892__auto__\",\"reconciler__37892__auto__\",-1904213230,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"get-reconciler\",\"fulcro.client.primitives/get-reconciler\",394660282,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37891__auto__\",\"this__37891__auto__\",-844704453,null),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"lifecycle__37893__auto__\",\"lifecycle__37893__auto__\",1938527182,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"get-in\",\"clojure.core/get-in\",-1204155834,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"reconciler__37892__auto__\",\"reconciler__37892__auto__\",-1904213230,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"config\",\"config\",994861415),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"lifecycle\",\"lifecycle\",341496205),null,(1),null)))))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37894__auto__\",\"indexer__37894__auto__\",-753986193,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"get-in\",\"clojure.core/get-in\",-1204155834,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"reconciler__37892__auto__\",\"reconciler__37892__auto__\",-1904213230,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"config\",\"config\",994861415),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315),null,(1),null)))))),null,(1),null))], 0)))),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"set\",\"goog.object/set\",-2123361230,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37891__auto__\",\"this__37891__auto__\",-844704453,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$mounted\",null,(1),null)),(new cljs.core.List(null,true,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when-not\",\"clojure.core/when-not\",-516174277,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"nil?\",\"clojure.core/nil?\",842444475,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37894__auto__\",\"indexer__37894__auto__\",-753986193,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.impl.protocols\",\"index-component!\",\"fulcro.client.impl.protocols/index-component!\",-573197644,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37894__auto__\",\"indexer__37894__auto__\",-753986193,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37891__auto__\",\"this__37891__auto__\",-844704453,null),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when\",\"clojure.core/when\",21610388,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"lifecycle__37893__auto__\",\"lifecycle__37893__auto__\",1938527182,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"lifecycle__37893__auto__\",\"lifecycle__37893__auto__\",1938527182,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37891__auto__\",\"this__37891__auto__\",-844704453,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"mount\",\"mount\",-1560582470),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),body], 0)))),null,(1),null))], 0))));\r\n});})(will_receive_props_38183,will_update_38184))\r\n,will_update_38184,((function (will_receive_props_38183,will_update_38184){\r\nreturn (function (p__38045){\r\nvar vec__38046 = p__38045;\r\nvar seq__38047 = cljs.core.seq(vec__38046);\r\nvar first__38048 = cljs.core.first(seq__38047);\r\nvar seq__38047__$1 = cljs.core.next(seq__38047);\r\nvar name = first__38048;\r\nvar first__38048__$1 = cljs.core.first(seq__38047__$1);\r\nvar seq__38047__$2 = cljs.core.next(seq__38047__$1);\r\nvar vec__38049 = first__38048__$1;\r\nvar this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38049,(0),null);\r\nvar prev_props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38049,(1),null);\r\nvar prev_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38049,(2),null);\r\nvar args = vec__38049;\r\nvar body = seq__38047__$2;\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,name,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37908__auto__\",\"this__37908__auto__\",-1880639632,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-props__37909__auto__\",\"prev-props__37909__auto__\",-929152683,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-state__37910__auto__\",\"prev-state__37910__auto__\",-1354708532,null),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,this$,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37908__auto__\",\"this__37908__auto__\",-1880639632,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,prev_props,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-props__37909__auto__\",\"prev-props__37909__auto__\",-929152683,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$value\",null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,prev_state,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-state__37910__auto__\",\"prev-state__37910__auto__\",-1354708532,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$state\",null,(1),null))], 0)))),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null))], 0))));\r\n});})(will_receive_props_38183,will_update_38184))\r\n,((function (will_receive_props_38183,will_update_38184){\r\nreturn (function (p__38060){\r\nvar vec__38061 = p__38060;\r\nvar seq__38062 = cljs.core.seq(vec__38061);\r\nvar first__38063 = cljs.core.first(seq__38062);\r\nvar seq__38062__$1 = cljs.core.next(seq__38062);\r\nvar name = first__38063;\r\nvar first__38063__$1 = cljs.core.first(seq__38062__$1);\r\nvar seq__38062__$2 = cljs.core.next(seq__38062__$1);\r\nvar vec__38064 = first__38063__$1;\r\nvar this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38064,(0),null);\r\nvar args = vec__38064;\r\nvar body = seq__38062__$2;\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,name,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37897__auto__\",\"this__37897__auto__\",528903892,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,this$,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37897__auto__\",\"this__37897__auto__\",528903892,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"reconciler__37898__auto__\",\"reconciler__37898__auto__\",1705516206,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"get-reconciler\",\"fulcro.client.primitives/get-reconciler\",394660282,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37897__auto__\",\"this__37897__auto__\",528903892,null),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"lifecycle__37899__auto__\",\"lifecycle__37899__auto__\",-1511420365,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"get-in\",\"clojure.core/get-in\",-1204155834,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"reconciler__37898__auto__\",\"reconciler__37898__auto__\",1705516206,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"config\",\"config\",994861415),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"lifecycle\",\"lifecycle\",341496205),null,(1),null)))))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"cfg__37900__auto__\",\"cfg__37900__auto__\",124829174,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"config\",\"config\",994861415),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"reconciler__37898__auto__\",\"reconciler__37898__auto__\",1705516206,null),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"st__37901__auto__\",\"st__37901__auto__\",1622598312,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"cfg__37900__auto__\",\"cfg__37900__auto__\",124829174,null),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37902__auto__\",\"indexer__37902__auto__\",-987829209,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"cfg__37900__auto__\",\"cfg__37900__auto__\",124829174,null),null,(1),null))))),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"set\",\"goog.object/set\",-2123361230,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37897__auto__\",\"this__37897__auto__\",528903892,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$mounted\",null,(1),null)),(new cljs.core.List(null,false,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when\",\"clojure.core/when\",21610388,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"and\",\"clojure.core/and\",-173545115,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"not\",\"clojure.core/not\",2621194,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"nil?\",\"clojure.core/nil?\",842444475,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"st__37901__auto__\",\"st__37901__auto__\",1622598312,null),null,(1),null))))),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"get-in\",\"clojure.core/get-in\",-1204155834,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"deref\",\"clojure.core/deref\",188719157,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"st__37901__auto__\",\"st__37901__auto__\",1622598312,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(\"fulcro.client.primitives\",\"queries\",\"fulcro.client.primitives/queries\",-963324249),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37897__auto__\",\"this__37897__auto__\",528903892,null),null,(1),null)))))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"swap!\",\"clojure.core/swap!\",-1898658849,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"st__37901__auto__\",\"st__37901__auto__\",1622598312,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"update-in\",\"clojure.core/update-in\",2079870444,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Keyword(\"fulcro.client.primitives\",\"queries\",\"fulcro.client.primitives/queries\",-963324249),null,(1),null)))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"dissoc\",\"clojure.core/dissoc\",-334178853,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37897__auto__\",\"this__37897__auto__\",528903892,null),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when\",\"clojure.core/when\",21610388,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"lifecycle__37899__auto__\",\"lifecycle__37899__auto__\",-1511420365,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"lifecycle__37899__auto__\",\"lifecycle__37899__auto__\",-1511420365,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37897__auto__\",\"this__37897__auto__\",528903892,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"unmount\",\"unmount\",-1779083333),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when\",\"clojure.core/when\",21610388,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37902__auto__\",\"indexer__37902__auto__\",-987829209,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.impl.protocols\",\"drop-component!\",\"fulcro.client.impl.protocols/drop-component!\",-1384303178,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37902__auto__\",\"indexer__37902__auto__\",-987829209,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37897__auto__\",\"this__37897__auto__\",528903892,null),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),body], 0)))),null,(1),null))], 0))));\r\n});})(will_receive_props_38183,will_update_38184))\r\n,((function (will_receive_props_38183,will_update_38184){\r\nreturn (function (p__38091){\r\nvar vec__38094 = p__38091;\r\nvar seq__38095 = cljs.core.seq(vec__38094);\r\nvar first__38096 = cljs.core.first(seq__38095);\r\nvar seq__38095__$1 = cljs.core.next(seq__38095);\r\nvar name = first__38096;\r\nvar first__38096__$1 = cljs.core.first(seq__38095__$1);\r\nvar seq__38095__$2 = cljs.core.next(seq__38095__$1);\r\nvar vec__38097 = first__38096__$1;\r\nvar this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38097,(0),null);\r\nvar next_props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38097,(1),null);\r\nvar next_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38097,(2),null);\r\nvar args = vec__38097;\r\nvar body = seq__38095__$2;\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,name,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37905__auto__\",\"this__37905__auto__\",-1577360340,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-props__37906__auto__\",\"next-props__37906__auto__\",1029046726,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-state__37907__auto__\",\"next-state__37907__auto__\",1714468690,null),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,this$,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37905__auto__\",\"this__37905__auto__\",-1577360340,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,next_props,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-props__37906__auto__\",\"next-props__37906__auto__\",1029046726,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$value\",null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,next_state,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-state__37907__auto__\",\"next-state__37907__auto__\",1714468690,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$state\",null,(1),null))], 0)))),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null))], 0))));\r\n});})(will_receive_props_38183,will_update_38184))\r\n,will_update_38184,will_receive_props_38183,((function (will_receive_props_38183,will_update_38184){\r\nreturn (function (p__38108){\r\nvar vec__38111 = p__38108;\r\nvar seq__38112 = cljs.core.seq(vec__38111);\r\nvar first__38113 = cljs.core.first(seq__38112);\r\nvar seq__38112__$1 = cljs.core.next(seq__38112);\r\nvar name = first__38113;\r\nvar first__38113__$1 = cljs.core.first(seq__38112__$1);\r\nvar seq__38112__$2 = cljs.core.next(seq__38112__$1);\r\nvar vec__38114 = first__38113__$1;\r\nvar this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38114,(0),null);\r\nvar args = vec__38114;\r\nvar body = seq__38112__$2;\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,name,null,(1),null)),(new cljs.core.List(null,args,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"ret__37878__auto__\",\"ret__37878__auto__\",-41682375,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"js-obj\",\"cljs.core/js-obj\",1009370607,null),null,(1),null)),(new cljs.core.List(null,\"fulcro$state\",null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"ret__37878__auto__\",\"ret__37878__auto__\",-41682375,null),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0))));\r\n});})(will_receive_props_38183,will_update_38184))\r\n]),new cljs.core.Keyword(null,\"defaults\",\"defaults\",976027214),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"shouldComponentUpdate\",\"shouldComponentUpdate\",-858684809,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-props__37916__auto__\",\"next-props__37916__auto__\",-1375983965,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-state__37917__auto__\",\"next-state__37917__auto__\",-983947733,null),null,(1),null))], 0))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"*blindly-render*\",\"fulcro.client.primitives/*blindly-render*\",229605902,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,true,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"next-children__37918__auto__\",\"next-children__37918__auto__\",181810157,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-props__37916__auto__\",\"next-props__37916__auto__\",-1375983965,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"-children\",\"fulcro.client.primitives/-children\",-1506977941,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-props__37916__auto__\",\"next-props__37916__auto__\",-1375983965,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-props__37916__auto__\",\"next-props__37916__auto__\",-1375983965,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$value\",null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"current-props__37920__auto__\",\"current-props__37920__auto__\",-1261145766,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"props\",\"fulcro.client.primitives/props\",-525522558,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"props-changed?__37921__auto__\",\"props-changed?__37921__auto__\",964251334,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"not=\",\"clojure.core/not=\",646247579,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"current-props__37920__auto__\",\"current-props__37920__auto__\",-1261145766,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-props__37916__auto__\",\"next-props__37916__auto__\",-1375983965,null),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-state__37917__auto__\",\"next-state__37917__auto__\",-983947733,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-state__37917__auto__\",\"next-state__37917__auto__\",-983947733,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$state\",null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"state-changed?__37922__auto__\",\"state-changed?__37922__auto__\",-2030946876,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"and\",\"clojure.core/and\",-173545115,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"..\",\"..\",-300507420,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"-state\",\"-state\",1439972041,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"not=\",\"clojure.core/not=\",646247579,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"-state\",\"-state\",1439972041,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$state\",null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-state__37917__auto__\",\"next-state__37917__auto__\",-983947733,null),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"children-changed?__37923__auto__\",\"children-changed?__37923__auto__\",1668514889,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"not=\",\"clojure.core/not=\",646247579,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"..\",\"..\",-300507420,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"-props\",\"fulcro.client.primitives/-props\",1729165934,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"-children\",\"fulcro.client.primitives/-children\",-1506977941,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-children__37918__auto__\",\"next-children__37918__auto__\",181810157,null),null,(1),null))], 0)))),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"or\",\"clojure.core/or\",1106799215,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"props-changed?__37921__auto__\",\"props-changed?__37921__auto__\",964251334,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"state-changed?__37922__auto__\",\"state-changed?__37922__auto__\",-2030946876,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"children-changed?__37923__auto__\",\"children-changed?__37923__auto__\",1668514889,null),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"componentDidUpdate\",\"componentDidUpdate\",-342946454,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-props__37924__auto__\",\"prev-props__37924__auto__\",-1201718983,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-state__37925__auto__\",\"prev-state__37925__auto__\",-1119137668,null),null,(1),null))], 0))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-props__37924__auto__\",\"prev-props__37924__auto__\",-1201718983,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"get\",\"goog.object/get\",-1684509985,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-props__37924__auto__\",\"prev-props__37924__auto__\",-1201718983,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$value\",null,(1),null))], 0)))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when\",\"clojure.core/when\",21610388,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"implements?\",\"cljs.core/implements?\",-251485149,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"Ident\",\"fulcro.client.primitives/Ident\",-1049116985,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"ident__37926__auto__\",\"ident__37926__auto__\",-1550346688,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"ident\",\"fulcro.client.primitives/ident\",-48408839,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"prev-props__37924__auto__\",\"prev-props__37924__auto__\",-1201718983,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-ident__37927__auto__\",\"next-ident__37927__auto__\",-703467222,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"ident\",\"fulcro.client.primitives/ident\",-48408839,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"props\",\"fulcro.client.primitives/props\",-525522558,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null))))),null,(1),null))], 0)))),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when\",\"clojure.core/when\",21610388,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"not=\",\"clojure.core/not=\",646247579,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"ident__37926__auto__\",\"ident__37926__auto__\",-1550346688,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-ident__37927__auto__\",\"next-ident__37927__auto__\",-703467222,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"idxr__37928__auto__\",\"idxr__37928__auto__\",1742217560,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"get-in\",\"clojure.core/get-in\",-1204155834,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"get-reconciler\",\"fulcro.client.primitives/get-reconciler\",394660282,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"config\",\"config\",994861415),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315),null,(1),null)))))),null,(1),null))], 0)))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when-not\",\"clojure.core/when-not\",-516174277,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"nil?\",\"clojure.core/nil?\",842444475,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"idxr__37928__auto__\",\"idxr__37928__auto__\",1742217560,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"swap!\",\"clojure.core/swap!\",-1898658849,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"indexes\",\"indexes\",1496475545),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"idxr__37928__auto__\",\"idxr__37928__auto__\",1742217560,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"fn\",\"clojure.core/fn\",-980152636,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(null,\"indexes__37929__auto__\",\"indexes__37929__auto__\",1950785160,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"->\",\"clojure.core/->\",1452757553,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexes__37929__auto__\",\"indexes__37929__auto__\",1950785160,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"update-in\",\"clojure.core/update-in\",2079870444,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"ref->components\",\"ref->components\",-303587249),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"ident__37926__auto__\",\"ident__37926__auto__\",-1550346688,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"disj\",\"clojure.core/disj\",1848745359,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"update-in\",\"clojure.core/update-in\",2079870444,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"ref->components\",\"ref->components\",-303587249),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"next-ident__37927__auto__\",\"next-ident__37927__auto__\",-703467222,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"fnil\",\"clojure.core/fnil\",653784127,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"conj\",\"clojure.core/conj\",-357857389,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_set,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"componentDidMount\",\"componentDidMount\",-1698724833,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"set\",\"goog.object/set\",-2123361230,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$mounted\",null,(1),null)),(new cljs.core.List(null,true,null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37930__auto__\",\"indexer__37930__auto__\",-1539762419,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"get-in\",\"clojure.core/get-in\",-1204155834,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"get-reconciler\",\"fulcro.client.primitives/get-reconciler\",394660282,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"config\",\"config\",994861415),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315),null,(1),null)))))),null,(1),null))], 0)))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when-not\",\"clojure.core/when-not\",-516174277,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"nil?\",\"clojure.core/nil?\",842444475,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37930__auto__\",\"indexer__37930__auto__\",-1539762419,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.impl.protocols\",\"index-component!\",\"fulcro.client.impl.protocols/index-component!\",-573197644,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37930__auto__\",\"indexer__37930__auto__\",-1539762419,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"componentWillUnmount\",\"componentWillUnmount\",-1080646955,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"let\",\"clojure.core/let\",-407137853,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"r__37931__auto__\",\"r__37931__auto__\",1645603210,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"get-reconciler\",\"fulcro.client.primitives/get-reconciler\",394660282,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"cfg__37932__auto__\",\"cfg__37932__auto__\",638319011,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"config\",\"config\",994861415),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"r__37931__auto__\",\"r__37931__auto__\",1645603210,null),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"st__37933__auto__\",\"st__37933__auto__\",21790719,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"cfg__37932__auto__\",\"cfg__37932__auto__\",638319011,null),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37930__auto__\",\"indexer__37930__auto__\",-1539762419,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"cfg__37932__auto__\",\"cfg__37932__auto__\",638319011,null),null,(1),null))))),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"set\",\"goog.object/set\",-2123361230,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"fulcro$mounted\",null,(1),null)),(new cljs.core.List(null,false,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when\",\"clojure.core/when\",21610388,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"and\",\"clojure.core/and\",-173545115,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"not\",\"clojure.core/not\",2621194,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"nil?\",\"clojure.core/nil?\",842444475,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"st__37933__auto__\",\"st__37933__auto__\",21790719,null),null,(1),null))))),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"get-in\",\"clojure.core/get-in\",-1204155834,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"deref\",\"clojure.core/deref\",188719157,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"st__37933__auto__\",\"st__37933__auto__\",21790719,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(\"fulcro.client.primitives\",\"queries\",\"fulcro.client.primitives/queries\",-963324249),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null)))))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"swap!\",\"clojure.core/swap!\",-1898658849,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"st__37933__auto__\",\"st__37933__auto__\",21790719,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"update-in\",\"clojure.core/update-in\",2079870444,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Keyword(\"fulcro.client.primitives\",\"queries\",\"fulcro.client.primitives/queries\",-963324249),null,(1),null)))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"dissoc\",\"clojure.core/dissoc\",-334178853,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when-not\",\"clojure.core/when-not\",-516174277,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"nil?\",\"clojure.core/nil?\",842444475,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37930__auto__\",\"indexer__37930__auto__\",-1539762419,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.impl.protocols\",\"drop-component!\",\"fulcro.client.impl.protocols/drop-component!\",-1384303178,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"indexer__37930__auto__\",\"indexer__37930__auto__\",-1539762419,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__37915__auto__\",\"this__37915__auto__\",-1625002490,null),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))))),null,(1),null))], 0)))))], null);\r\nfulcro.client.primitives.reshape = (function fulcro$client$primitives$reshape(dt,p__38579){\r\nvar map__38580 = p__38579;\r\nvar map__38580__$1 = ((((!((map__38580 == null)))?(((((map__38580.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__38580.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__38580):map__38580);\r\nvar reshape = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38580__$1,new cljs.core.Keyword(null,\"reshape\",\"reshape\",1588089910));\r\nvar defaults = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38580__$1,new cljs.core.Keyword(null,\"defaults\",\"defaults\",976027214));\r\nvar reshape_STAR_ = ((function (map__38580,map__38580__$1,reshape,defaults){\r\nreturn (function fulcro$client$primitives$reshape_$_reshape_STAR_(x){\r\nif(((cljs.core.sequential_QMARK_(x)) && (cljs.core.contains_QMARK_(reshape,cljs.core.first(x))))){\r\nvar reshapef = cljs.core.get.cljs$core$IFn$_invoke$arity$2(reshape,cljs.core.first(x));\r\nfulcro.client.primitives.validate_sig(x);\r\n\r\nreturn (reshapef.cljs$core$IFn$_invoke$arity$1 ? reshapef.cljs$core$IFn$_invoke$arity$1(x) : reshapef.call(null,x));\r\n} else {\r\nreturn x;\r\n}\r\n});})(map__38580,map__38580__$1,reshape,defaults))\r\n;\r\nvar add_defaults_step = ((function (map__38580,map__38580__$1,reshape,defaults){\r\nreturn (function fulcro$client$primitives$reshape_$_add_defaults_step(ret,p__38616){\r\nvar vec__38617 = p__38616;\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38617,(0),null);\r\nvar impl = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38617,(1),null);\r\nif(cljs.core.not(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([name]),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,ret))))){\r\nvar vec__38620 = cljs.core.split_with(cljs.core.complement(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),null], null), null)),ret);\r\nvar before = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38620,(0),null);\r\nvar vec__38623 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38620,(1),null);\r\nvar seq__38624 = cljs.core.seq(vec__38623);\r\nvar first__38625 = cljs.core.first(seq__38624);\r\nvar seq__38624__$1 = cljs.core.next(seq__38624);\r\nvar p = first__38625;\r\nvar after = seq__38624__$1;\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.vec(before),p,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.cons(name,impl)], 0)),after);\r\n} else {\r\nreturn ret;\r\n}\r\n});})(map__38580,map__38580__$1,reshape,defaults))\r\n;\r\nvar add_defaults = ((function (map__38580,map__38580__$1,reshape,defaults){\r\nreturn (function fulcro$client$primitives$reshape_$_add_defaults(dt__$1){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(add_defaults_step,dt__$1,defaults);\r\n});})(map__38580,map__38580__$1,reshape,defaults))\r\n;\r\nvar add_object_protocol = ((function (map__38580,map__38580__$1,reshape,defaults){\r\nreturn (function fulcro$client$primitives$reshape_$_add_object_protocol(dt__$1){\r\nif(cljs.core.not(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),null], null), null),dt__$1))){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(dt__$1,new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null));\r\n} else {\r\nreturn dt__$1;\r\n}\r\n});})(map__38580,map__38580__$1,reshape,defaults))\r\n;\r\nreturn add_defaults(add_object_protocol(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(reshape_STAR_,dt))));\r\n});\r\nfulcro.client.primitives.defui_STAR_ = (function fulcro$client$primitives$defui_STAR_(var_args){\r\nvar G__38690 = arguments.length;\r\nswitch (G__38690) {\r\ncase 2:\r\nreturn fulcro.client.primitives.defui_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn fulcro.client.primitives.defui_STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.defui_STAR_.cljs$core$IFn$_invoke$arity$2 = (function (name,form){\r\nreturn fulcro.client.primitives.defui_STAR_.cljs$core$IFn$_invoke$arity$3(name,form,null);\r\n});\r\n\r\nfulcro.client.primitives.defui_STAR_.cljs$core$IFn$_invoke$arity$3 = (function (name,forms,env){\r\nvar field_set_BANG_ = (function fulcro$client$primitives$field_set_BANG_(obj,p__38703){\r\nvar vec__38704 = p__38703;\r\nvar field = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38704,(0),null);\r\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38704,(1),null);\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),null,(1),null)),(new cljs.core.List(null,obj,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(field)].join('')),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,value,null,(1),null))], 0))));\r\n});\r\nvar docstring = ((typeof cljs.core.first(forms) === 'string')?cljs.core.first(forms):null);\r\nvar forms__$1 = (function (){var G__38712 = forms;\r\nif(cljs.core.truth_(docstring)){\r\nreturn cljs.core.rest(G__38712);\r\n} else {\r\nreturn G__38712;\r\n}\r\n})();\r\nvar map__38711 = fulcro.client.primitives.collect_statics(forms__$1);\r\nvar map__38711__$1 = ((((!((map__38711 == null)))?(((((map__38711.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__38711.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__38711):map__38711);\r\nvar dt = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38711__$1,new cljs.core.Keyword(null,\"dt\",\"dt\",-368444759));\r\nvar statics = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38711__$1,new cljs.core.Keyword(null,\"statics\",\"statics\",-1984882809));\r\nvar _ = fulcro.client.primitives.validate_statics(dt);\r\nvar fqn = (cljs.core.truth_(env)?cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)))].join(''),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join('')):name);\r\nvar ctor = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"defn\",\"clojure.core/defn\",-1504648747,null),null,(1),null)),(new cljs.core.List(null,cljs.core.with_meta(name,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"@constructor\",\"@nocollapse\"], null)], null),cljs.core.meta(name),(cljs.core.truth_(docstring)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),docstring], null):null)], 0))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"this-as\",\"cljs.core/this-as\",623378171,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__38679__auto__\",\"this__38679__auto__\",-1018687383,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\".apply\",\".apply\",-1176201338,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"js\",\"React.Component\",\"js/React.Component\",752301916,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__38679__auto__\",\"this__38679__auto__\",-1018687383,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"js-arguments\",\"cljs.core/js-arguments\",464029257,null),null,(1),null))))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"if-not\",\"clojure.core/if-not\",-2100576274,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"nil?\",\"clojure.core/nil?\",842444475,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-initLocalState\",\".-initLocalState\",-1875308467,null),null,(1),null)),(new cljs.core.List(null,cljs.core.with_meta(new cljs.core.Symbol(null,\"this__38679__auto__\",\"this__38679__auto__\",-1018687383,null),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),null,(1),null)),(new cljs.core.List(null,\"fulcro/client/primitives.cljc\",null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),null,(1),null)),(new cljs.core.List(null,520,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),null,(1),null)),(new cljs.core.List(null,70,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),null,(1),null)),(new cljs.core.List(null,520,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),null,(1),null)),(new cljs.core.List(null,75,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"js\",\"fulcro.client.primitives/js\",1733013126,null),null,(1),null))], 0)))))),null,(1),null))))),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-state\",\".-state\",2145135971,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__38679__auto__\",\"this__38679__auto__\",-1018687383,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".initLocalState\",\".initLocalState\",-104173886,null),null,(1),null)),(new cljs.core.List(null,cljs.core.with_meta(new cljs.core.Symbol(null,\"this__38679__auto__\",\"this__38679__auto__\",-1018687383,null),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),null,(1),null)),(new cljs.core.List(null,\"fulcro/client/primitives.cljc\",null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),null,(1),null)),(new cljs.core.List(null,521,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),null,(1),null)),(new cljs.core.List(null,79,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),null,(1),null)),(new cljs.core.List(null,521,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),null,(1),null)),(new cljs.core.List(null,84,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"js\",\"fulcro.client.primitives/js\",1733013126,null),null,(1),null))], 0)))))),null,(1),null))))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-state\",\".-state\",2145135971,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__38679__auto__\",\"this__38679__auto__\",-1018687383,null),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"js-obj\",\"cljs.core/js-obj\",1009370607,null),null,(1),null))))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"this__38679__auto__\",\"this__38679__auto__\",-1018687383,null),null,(1),null))], 0)))),null,(1),null))], 0))));\r\nvar set_react_proto_BANG_ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-prototype\",\".-prototype\",-1562038608,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"goog.object\",\"clone\",\"goog.object/clone\",-508199474,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"js\",\"React.Component.prototype\",\"js/React.Component.prototype\",259217051,null),null,(1),null))))),null,(1),null))], 0))));\r\nvar ctor__$1 = (cljs.core.truth_(new cljs.core.Keyword(null,\"once\",\"once\",-262568523).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name)))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"when-not\",\"clojure.core/when-not\",-516174277,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"exists?\",\"cljs.core/exists?\",1852387968,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,ctor,null,(1),null)),(new cljs.core.List(null,set_react_proto_BANG_,null,(1),null))], 0)))):cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),(new cljs.core.List(null,ctor,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,set_react_proto_BANG_,null,(1),null))], 0)))));\r\nvar display_name = (cljs.core.truth_(env)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env))),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''):new cljs.core.Symbol(\"js\",\"undefined\",\"js/undefined\",-329966622,null));\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),(new cljs.core.List(null,ctor__$1,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"specify!\",\"cljs.core/specify!\",-585401629,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-prototype\",\".-prototype\",-1562038608,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fulcro.client.primitives.reshape(dt,fulcro.client.primitives.reshape_map)], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"..\",\"..\",-300507420,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"-prototype\",\"fulcro.client.primitives/-prototype\",-2134858131,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"-constructor\",\"fulcro.client.primitives/-constructor\",-1610906763,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,name,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"..\",\"..\",-300507420,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"-prototype\",\"fulcro.client.primitives/-prototype\",-2134858131,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"-constructor\",\"fulcro.client.primitives/-constructor\",-1610906763,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"-displayName\",\"fulcro.client.primitives/-displayName\",-157445350,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,display_name,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-fulcro$isComponent\",\".-fulcro$isComponent\",-876583754,null),null,(1),null)),(new cljs.core.List(null,cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-prototype\",\".-prototype\",-1562038608,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null))))),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),null,(1),null)),(new cljs.core.List(null,\"fulcro/client/primitives.cljc\",null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"line\",\"line\",212345235),null,(1),null)),(new cljs.core.List(null,541,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),null,(1),null)),(new cljs.core.List(null,39,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),null,(1),null)),(new cljs.core.List(null,541,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),null,(1),null)),(new cljs.core.List(null,66,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.primitives\",\"js\",\"fulcro.client.primitives/js\",1733013126,null),null,(1),null))], 0)))))),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,true,null,(1),null))], 0)))),null,(1),null)),cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (docstring,forms__$1,map__38711,map__38711__$1,dt,statics,_,fqn,ctor,set_react_proto_BANG_,ctor__$1,display_name){\r\nreturn (function (p1__38684_SHARP_){\r\nreturn field_set_BANG_(name,p1__38684_SHARP_);\r\n});})(docstring,forms__$1,map__38711,map__38711__$1,dt,statics,_,fqn,ctor,set_react_proto_BANG_,ctor__$1,display_name))\r\n,new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230).cljs$core$IFn$_invoke$arity$1(statics)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"specify!\",\"cljs.core/specify!\",-585401629,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (docstring,forms__$1,map__38711,map__38711__$1,dt,statics,_,fqn,ctor,set_react_proto_BANG_,ctor__$1,display_name){\r\nreturn (function (p1__38685_SHARP_){\r\nvar G__38738 = p1__38685_SHARP_;\r\nif((p1__38685_SHARP_ instanceof cljs.core.Symbol)){\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__38738,cljs.core.assoc,new cljs.core.Keyword(null,\"static\",\"static\",1214358571),true);\r\n} else {\r\nreturn G__38738;\r\n}\r\n});})(docstring,forms__$1,map__38711,map__38711__$1,dt,statics,_,fqn,ctor,set_react_proto_BANG_,ctor__$1,display_name))\r\n,new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896).cljs$core$IFn$_invoke$arity$1(statics))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"specify!\",\"cljs.core/specify!\",-585401629,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"-prototype\",\"-prototype\",-450831903,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896).cljs$core$IFn$_invoke$arity$1(statics)], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-cljs$lang$type\",\".-cljs$lang$type\",-1029307724,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,true,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-cljs$lang$ctorStr\",\".-cljs$lang$ctorStr\",-1820706991,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(fqn)].join(''),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-cljs$lang$ctorPrWriter\",\".-cljs$lang$ctorPrWriter\",255834464,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"clojure.core\",\"fn\",\"clojure.core/fn\",-980152636,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"this__38686__auto__\",\"this__38686__auto__\",-1959478992,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"writer__38687__auto__\",\"writer__38687__auto__\",-2003121753,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"opt__38688__auto__\",\"opt__38688__auto__\",74818738,null),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"-write\",\"cljs.core/-write\",527220517,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"writer__38687__auto__\",\"writer__38687__auto__\",-2003121753,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(fqn)].join(''),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0))));\r\n});\r\n\r\nfulcro.client.primitives.defui_STAR_.cljs$lang$maxFixedArity = 3;\r\n\r\nfulcro.client.primitives.roots = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nfulcro.client.primitives._STAR_raf_STAR_ = null;\r\nfulcro.client.primitives._STAR_reconciler_STAR_ = null;\r\nfulcro.client.primitives._STAR_parent_STAR_ = null;\r\nfulcro.client.primitives._STAR_blindly_render_STAR_ = false;\r\nfulcro.client.primitives._STAR_shared_STAR_ = null;\r\nfulcro.client.primitives._STAR_instrument_STAR_ = null;\r\nfulcro.client.primitives._STAR_depth_STAR_ = (0);\r\nfulcro.client.primitives.compute_react_key = (function fulcro$client$primitives$compute_react_key(cl,props){\r\nvar temp__5455__auto__ = new cljs.core.Keyword(null,\"react-key\",\"react-key\",1337881348).cljs$core$IFn$_invoke$arity$1(props);\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar rk = temp__5455__auto__;\r\nreturn rk;\r\n} else {\r\nvar temp__5455__auto____$1 = new cljs.core.Keyword(\"fulcro.client.impl.parser\",\"data-path\",\"fulcro.client.impl.parser/data-path\",1793359026).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(props));\r\nif(cljs.core.truth_(temp__5455__auto____$1)){\r\nvar idx = temp__5455__auto____$1;\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cl.name),\"_\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(idx)].join('');\r\n} else {\r\nreturn undefined;\r\n}\r\n}\r\n});\r\n/**\r\n * Returns true if the argument is a component.\r\n */\r\nfulcro.client.primitives.component_QMARK_ = (function fulcro$client$primitives$component_QMARK_(x){\r\nif(!((x == null))){\r\nreturn x.fulcro$isComponent === true;\r\n} else {\r\nreturn false;\r\n}\r\n});\r\n/**\r\n * Returns the component type, regardless of whether the component has been\r\n *    mounted\r\n */\r\nfulcro.client.primitives.react_type = (function fulcro$client$primitives$react_type(x){\r\nvar or__3949__auto__ = goog.object.get(x,\"type\");\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn cljs.core.type(x);\r\n}\r\n});\r\nfulcro.client.primitives.state = (function fulcro$client$primitives$state(c){\r\nif(fulcro.client.primitives.component_QMARK_(c)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (component? c)\"));\r\n}\r\n\r\nreturn c.state;\r\n});\r\n/**\r\n * PRIVATE: Do not use. GET a RAW react prop\r\n */\r\nfulcro.client.primitives.get_raw_react_prop = (function fulcro$client$primitives$get_raw_react_prop(c,k){\r\nvar G__38776 = c.props;\r\nvar G__38777 = k;\r\nreturn goog.object.get(G__38776,G__38777);\r\n});\r\n/**\r\n * Returns true if x is a reconciler.\r\n */\r\nfulcro.client.primitives.reconciler_QMARK_ = (function fulcro$client$primitives$reconciler_QMARK_(x){\r\nif(!((x == null))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === x.fulcro$client$impl$protocols$IReconciler$)))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n});\r\n/**\r\n * PRIVATE: Get the indexer associated with the reconciler.\r\n */\r\nfulcro.client.primitives.get_indexer = (function fulcro$client$primitives$get_indexer(reconciler){\r\nif(fulcro.client.primitives.reconciler_QMARK_(reconciler)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (reconciler? reconciler)\"));\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"config\",\"config\",994861415).cljs$core$IFn$_invoke$arity$1(reconciler));\r\n});\r\nfulcro.client.primitives.sift_idents = (function fulcro$client$primitives$sift_idents(res){\r\nvar map__38783 = cljs.core.group_by((function (p1__38782_SHARP_){\r\nreturn cljs.core.vector_QMARK_(cljs.core.first(p1__38782_SHARP_));\r\n}),res);\r\nvar map__38783__$1 = ((((!((map__38783 == null)))?(((((map__38783.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__38783.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__38783):map__38783);\r\nvar idents = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38783__$1,true);\r\nvar rest = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38783__$1,false);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,idents),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,rest)], null);\r\n});\r\nfulcro.client.primitives.get_reconciler = (function fulcro$client$primitives$get_reconciler(c){\r\nif(fulcro.client.primitives.component_QMARK_(c)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (component? c)\"));\r\n}\r\n\r\nreturn fulcro.client.primitives.get_raw_react_prop(c,\"fulcro$reconciler\");\r\n});\r\n/**\r\n * Returns the parent component.\r\n */\r\nfulcro.client.primitives.parent = (function fulcro$client$primitives$parent(component){\r\nreturn fulcro.client.primitives.get_raw_react_prop(component,\"fulcro$parent\");\r\n});\r\n/**\r\n * PRIVATE: Returns the render depth (a integer) of the component relative to\r\n * the mount root.\r\n */\r\nfulcro.client.primitives.depth = (function fulcro$client$primitives$depth(component){\r\nif(fulcro.client.primitives.component_QMARK_(component)){\r\nreturn fulcro.client.primitives.get_raw_react_prop(component,\"fulcro$depth\");\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Returns the components React key.\r\n */\r\nfulcro.client.primitives.react_key = (function fulcro$client$primitives$react_key(component){\r\nreturn fulcro.client.primitives.get_raw_react_prop(component,\"fulcro$reactKey\");\r\n});\r\n/**\r\n * Return a components props.\r\n */\r\nfulcro.client.primitives.props = (function fulcro$client$primitives$props(component){\r\nif(fulcro.client.primitives.component_QMARK_(component)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (component? component)\"));\r\n}\r\n\r\nvar G__38787 = component.props;\r\nvar G__38788 = \"fulcro$value\";\r\nreturn goog.object.get(G__38787,G__38788);\r\n});\r\n/**\r\n * Get a component's local state. May provide a single key or a sequential\r\n * collection of keys for indexed access into the component's local state.\r\n */\r\nfulcro.client.primitives.get_state = (function fulcro$client$primitives$get_state(var_args){\r\nvar G__38795 = arguments.length;\r\nswitch (G__38795) {\r\ncase 1:\r\nreturn fulcro.client.primitives.get_state.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn fulcro.client.primitives.get_state.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.get_state.cljs$core$IFn$_invoke$arity$1 = (function (component){\r\nreturn fulcro.client.primitives.get_state.cljs$core$IFn$_invoke$arity$2(component,cljs.core.PersistentVector.EMPTY);\r\n});\r\n\r\nfulcro.client.primitives.get_state.cljs$core$IFn$_invoke$arity$2 = (function (component,k_or_ks){\r\nif(fulcro.client.primitives.component_QMARK_(component)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (component? component)\"));\r\n}\r\n\r\nvar cst = (function (){var temp__5457__auto__ = component.state;\r\nif(cljs.core.truth_(temp__5457__auto__)){\r\nvar state = temp__5457__auto__;\r\nreturn goog.object.get(state,\"fulcro$state\");\r\n} else {\r\nreturn null;\r\n}\r\n})();\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cst,((cljs.core.sequential_QMARK_(k_or_ks))?k_or_ks:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k_or_ks], null)));\r\n});\r\n\r\nfulcro.client.primitives.get_state.cljs$lang$maxFixedArity = 2;\r\n\r\n/**\r\n * Get the statically-declared query of IQuery from a given class.\r\n */\r\nfulcro.client.primitives.get_static_query = (function fulcro$client$primitives$get_static_query(c){\r\nif(fulcro.client.primitives.has_query_QMARK_){\r\n} else {\r\nthrow (new Error(\"Assert failed: has-query?\"));\r\n}\r\n\r\nif(cljs.core.truth_(c)){\r\n} else {\r\nthrow (new Error(\"Assert failed: c\"));\r\n}\r\n\r\nreturn fulcro.client.primitives.query(c);\r\n});\r\n/**\r\n * Returns true if the given component or one of its parents has a query.\r\n */\r\nfulcro.client.primitives.some_hasquery_QMARK_ = (function fulcro$client$primitives$some_hasquery_QMARK_(c){\r\nvar c__$1 = c;\r\nwhile(true){\r\nif((c__$1 == null)){\r\nreturn false;\r\n} else {\r\nif(fulcro.client.primitives.has_query_QMARK_(c__$1)){\r\nreturn true;\r\n} else {\r\nvar G__38808 = fulcro.client.primitives.parent(c__$1);\r\nc__$1 = G__38808;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Get the ident for a mounted component OR using a component class.\r\n * \r\n *   That arity-2 will return the ident using the supplied props map.\r\n * \r\n *   The single-arity version should only be used with a mounted component (e.g. `this` from `render`), and will derive the\r\n *   props that were sent to it most recently.\r\n */\r\nfulcro.client.primitives.get_ident = (function fulcro$client$primitives$get_ident(var_args){\r\nvar G__38810 = arguments.length;\r\nswitch (G__38810) {\r\ncase 1:\r\nreturn fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$1 = (function (x){\r\nif(fulcro.client.primitives.component_QMARK_(x)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (component? x)\"));\r\n}\r\n\r\nvar temp__5455__auto__ = fulcro.client.primitives.props(x);\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar m = temp__5455__auto__;\r\nreturn fulcro.client.primitives.ident(x,m);\r\n} else {\r\ntry{return fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),735], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"get-ident was invoked on component with nil props (this could mean it wasn't yet mounted): \",x], 0));\r\n}catch (e38811){if((e38811 instanceof Error)){\r\nvar e__31518__auto__ = e38811;\r\nreturn fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),735], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto__], 0));\r\n} else {\r\nthrow e38811;\r\n\r\n}\r\n}}\r\n});\r\n\r\nfulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2 = (function (class$,props){\r\nif(((!((class$ == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === class$.fulcro$client$primitives$Ident$))))?true:false):false)){\r\nvar id = fulcro.client.primitives.ident(class$,props);\r\nif(!(fulcro.util.ident_QMARK_(id))){\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),748], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"get-ident returned an invalid ident for class:\",class$], 0));\r\n}catch (e38814){if((e38814 instanceof Error)){\r\nvar e__31518__auto___38823 = e38814;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),748], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___38823], 0));\r\n} else {\r\nthrow e38814;\r\n\r\n}\r\n}} else {\r\n}\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912),cljs.core.second(id))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(id),null], null);\r\n} else {\r\nreturn id;\r\n}\r\n} else {\r\ntry{return fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),750], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"get-ident called with something that is either not a class or does not implement ident: \",class$], 0));\r\n}catch (e38815){if((e38815 instanceof Error)){\r\nvar e__31518__auto__ = e38815;\r\nreturn fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),750], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto__], 0));\r\n} else {\r\nthrow e38815;\r\n\r\n}\r\n}}\r\n});\r\n\r\nfulcro.client.primitives.get_ident.cljs$lang$maxFixedArity = 2;\r\n\r\n/**\r\n * Returns a string version of the given react component's name.\r\n */\r\nfulcro.client.primitives.component_name = (function fulcro$client$primitives$component_name(class$){\r\nreturn class$.displayName;\r\n});\r\n/**\r\n * Returns a string ID for the query of the given class with qualifier\r\n */\r\nfulcro.client.primitives.query_id = (function fulcro$client$primitives$query_id(class$,qualifier){\r\nif((class$ == null)){\r\ntry{return fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),762], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Query ID received no class (if you see this warning, it probably means metadata was lost on your query)\",cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"\",cljs.core.PersistentArrayMap.EMPTY)], 0));\r\n}catch (e38827){if((e38827 instanceof Error)){\r\nvar e__31518__auto__ = e38827;\r\nreturn fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),762], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto__], 0));\r\n} else {\r\nthrow e38827;\r\n\r\n}\r\n}} else {\r\nvar temp__5457__auto__ = fulcro.client.primitives.component_name(class$);\r\nif(cljs.core.truth_(temp__5457__auto__)){\r\nvar classname = temp__5457__auto__;\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(classname),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(qualifier)?[\"$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(qualifier)].join(''):null))].join('');\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});\r\n/**\r\n * Wraps children in a React.Fragment. Props are optional, like normal DOM elements.\r\n */\r\nfulcro.client.primitives.fragment = (function fulcro$client$primitives$fragment(var_args){\r\nvar args__4534__auto__ = [];\r\nvar len__4531__auto___38838 = arguments.length;\r\nvar i__4532__auto___38839 = (0);\r\nwhile(true){\r\nif((i__4532__auto___38839 < len__4531__auto___38838)){\r\nargs__4534__auto__.push((arguments[i__4532__auto___38839]));\r\n\r\nvar G__38840 = (i__4532__auto___38839 + (1));\r\ni__4532__auto___38839 = G__38840;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\r\nreturn fulcro.client.primitives.fragment.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\r\n});\r\n\r\nfulcro.client.primitives.fragment.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nvar vec__38834 = ((cljs.core.map_QMARK_(cljs.core.first(args)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(args),cljs.core.rest(args)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [({}),args], null));\r\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38834,(0),null);\r\nvar children = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38834,(1),null);\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(React.createElement,React.Fragment,cljs.core.clj__GT_js(props),children);\r\n});\r\n\r\nfulcro.client.primitives.fragment.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\nfulcro.client.primitives.fragment.cljs$lang$applyTo = (function (seq38832){\r\nvar self__4519__auto__ = this;\r\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq38832));\r\n});\r\n\r\nfulcro.client.primitives.create_element = (function fulcro$client$primitives$create_element(class$,props,children){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(React.createElement,class$,props,children);\r\n});\r\n/**\r\n * Create a factory constructor from a component class created with\r\n *    defui.\r\n */\r\nfulcro.client.primitives.factory = (function fulcro$client$primitives$factory(var_args){\r\nvar G__38846 = arguments.length;\r\nswitch (G__38846) {\r\ncase 1:\r\nreturn fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$1 = (function (class$){\r\nreturn fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$2(class$,null);\r\n});\r\n\r\nfulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$2 = (function (class$,p__38848){\r\nvar map__38849 = p__38848;\r\nvar map__38849__$1 = ((((!((map__38849 == null)))?(((((map__38849.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__38849.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__38849):map__38849);\r\nvar opts = map__38849__$1;\r\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38849__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\r\nvar keyfn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38849__$1,new cljs.core.Keyword(null,\"keyfn\",\"keyfn\",780060332));\r\nvar instrument_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__38849__$1,new cljs.core.Keyword(null,\"instrument?\",\"instrument?\",-1835582396),true);\r\nvar qualifier = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38849__$1,new cljs.core.Keyword(null,\"qualifier\",\"qualifier\",125841738));\r\nif(cljs.core.fn_QMARK_(class$)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (fn? class)\"));\r\n}\r\n\r\nreturn cljs.core.with_meta(((function (map__38849,map__38849__$1,opts,validator,keyfn,instrument_QMARK_,qualifier){\r\nreturn (function() { \r\nvar fulcro$client$primitives$element_factory__delegate = function (props,children){\r\nif((validator == null)){\r\n} else {\r\nif(cljs.core.truth_((validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(props) : validator.call(null,props)))){\r\n} else {\r\nthrow (new Error(\"Assert failed: (validator props)\"));\r\n}\r\n}\r\n\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = fulcro.client.primitives._STAR_instrument_STAR_;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn instrument_QMARK_;\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nvar G__38852 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"props\",\"props\",453281727),props,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),class$,new cljs.core.Keyword(null,\"factory\",\"factory\",63933746),fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$2(class$,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"instrument?\",\"instrument?\",-1835582396),false))], null);\r\nreturn (fulcro.client.primitives._STAR_instrument_STAR_.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives._STAR_instrument_STAR_.cljs$core$IFn$_invoke$arity$1(G__38852) : fulcro.client.primitives._STAR_instrument_STAR_.call(null,G__38852));\r\n} else {\r\nvar key = ((!((keyfn == null)))?(keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(props) : keyfn.call(null,props)):fulcro.client.primitives.compute_react_key(class$,props));\r\nvar ref = new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967).cljs$core$IFn$_invoke$arity$1(props);\r\nvar ref__$1 = (function (){var G__38853 = ref;\r\nif((ref instanceof cljs.core.Keyword)){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__38853)].join('');\r\n} else {\r\nreturn G__38853;\r\n}\r\n})();\r\nreturn fulcro.client.primitives.create_element(class$,({\"fulcro$reactKey\": key, \"fulcro$queryid\": fulcro.client.primitives.query_id(class$,qualifier), \"key\": key, \"ref\": ref__$1, \"fulcro$reconciler\": fulcro.client.primitives._STAR_reconciler_STAR_, \"fulcro$instrument\": fulcro.client.primitives._STAR_instrument_STAR_, \"fulcro$parent\": fulcro.client.primitives._STAR_parent_STAR_, \"fulcro$depth\": fulcro.client.primitives._STAR_depth_STAR_, \"fulcro$value\": props, \"fulcro$shared\": fulcro.client.primitives._STAR_shared_STAR_}),(function (){var or__3949__auto__ = fulcro.util.force_children(children);\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}\r\n})());\r\n}\r\n};\r\nvar fulcro$client$primitives$element_factory = function (props,var_args){\r\nvar children = null;\r\nif (arguments.length > 1) {\r\nvar G__38863__i = 0, G__38863__a = new Array(arguments.length -  1);\r\nwhile (G__38863__i < G__38863__a.length) {G__38863__a[G__38863__i] = arguments[G__38863__i + 1]; ++G__38863__i;}\r\n  children = new cljs.core.IndexedSeq(G__38863__a,0,null);\r\n} \r\nreturn fulcro$client$primitives$element_factory__delegate.call(this,props,children);};\r\nfulcro$client$primitives$element_factory.cljs$lang$maxFixedArity = 1;\r\nfulcro$client$primitives$element_factory.cljs$lang$applyTo = (function (arglist__38864){\r\nvar props = cljs.core.first(arglist__38864);\r\nvar children = cljs.core.rest(arglist__38864);\r\nreturn fulcro$client$primitives$element_factory__delegate(props,children);\r\n});\r\nfulcro$client$primitives$element_factory.cljs$core$IFn$_invoke$arity$variadic = fulcro$client$primitives$element_factory__delegate;\r\nreturn fulcro$client$primitives$element_factory;\r\n})()\r\n;})(map__38849,map__38849__$1,opts,validator,keyfn,instrument_QMARK_,qualifier))\r\n,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),class$,new cljs.core.Keyword(null,\"queryid\",\"queryid\",-271432056),fulcro.client.primitives.query_id(class$,qualifier),new cljs.core.Keyword(null,\"qualifier\",\"qualifier\",125841738),qualifier], null));\r\n});\r\n\r\nfulcro.client.primitives.factory.cljs$lang$maxFixedArity = 2;\r\n\r\n/**\r\n * Similar to factory, but returns a function with the signature\r\n *   [props computed] instead of default [props & children]. This makes easier to send\r\n *   computed but will not accept children params.\r\n */\r\nfulcro.client.primitives.computed_factory = (function fulcro$client$primitives$computed_factory(var_args){\r\nvar G__38867 = arguments.length;\r\nswitch (G__38867) {\r\ncase 1:\r\nreturn fulcro.client.primitives.computed_factory.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn fulcro.client.primitives.computed_factory.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.computed_factory.cljs$core$IFn$_invoke$arity$1 = (function (class$){\r\nreturn fulcro.client.primitives.computed_factory.cljs$core$IFn$_invoke$arity$2(class$,cljs.core.PersistentArrayMap.EMPTY);\r\n});\r\n\r\nfulcro.client.primitives.computed_factory.cljs$core$IFn$_invoke$arity$2 = (function (class$,options){\r\nvar factory = fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$2(class$,options);\r\nreturn ((function (factory){\r\nreturn (function() {\r\nvar fulcro$client$primitives$real_factory = null;\r\nvar fulcro$client$primitives$real_factory__1 = (function (props){\r\nreturn fulcro$client$primitives$real_factory.cljs$core$IFn$_invoke$arity$2(props,cljs.core.PersistentArrayMap.EMPTY);\r\n});\r\nvar fulcro$client$primitives$real_factory__2 = (function (props,computed){\r\nvar G__38870 = (computed.cljs$core$IFn$_invoke$arity$2 ? computed.cljs$core$IFn$_invoke$arity$2(props,computed) : computed.call(null,props,computed));\r\nreturn (factory.cljs$core$IFn$_invoke$arity$1 ? factory.cljs$core$IFn$_invoke$arity$1(G__38870) : factory.call(null,G__38870));\r\n});\r\nfulcro$client$primitives$real_factory = function(props,computed){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn fulcro$client$primitives$real_factory__1.call(this,props);\r\ncase 2:\r\nreturn fulcro$client$primitives$real_factory__2.call(this,props,computed);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nfulcro$client$primitives$real_factory.cljs$core$IFn$_invoke$arity$1 = fulcro$client$primitives$real_factory__1;\r\nfulcro$client$primitives$real_factory.cljs$core$IFn$_invoke$arity$2 = fulcro$client$primitives$real_factory__2;\r\nreturn fulcro$client$primitives$real_factory;\r\n})()\r\n;})(factory))\r\n});\r\n\r\nfulcro.client.primitives.computed_factory.cljs$lang$maxFixedArity = 2;\r\n\r\n/**\r\n * Takes a state map that may contain normalized queries and a query ID. Returns the stored query or nil.\r\n */\r\nfulcro.client.primitives.denormalize_query = (function fulcro$client$primitives$denormalize_query(state_map,ID){\r\nvar get_stored_query = (function (id){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(state_map,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client.primitives\",\"queries\",\"fulcro.client.primitives/queries\",-963324249),id,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510)], null));\r\n});\r\nvar temp__5457__auto__ = get_stored_query(ID);\r\nif(cljs.core.truth_(temp__5457__auto__)){\r\nvar normalized_query = temp__5457__auto__;\r\nreturn clojure.walk.prewalk(((function (normalized_query,temp__5457__auto__,get_stored_query){\r\nreturn (function (ele){\r\nvar temp__5455__auto__ = (function (){var and__3938__auto__ = typeof ele === 'string';\r\nif(and__3938__auto__){\r\nreturn get_stored_query(ele);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})();\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar q = temp__5455__auto__;\r\nreturn q;\r\n} else {\r\nreturn ele;\r\n}\r\n});})(normalized_query,temp__5457__auto__,get_stored_query))\r\n,normalized_query);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nfulcro.client.primitives.get_query_by_id = (function fulcro$client$primitives$get_query_by_id(state_map,class$,queryid){\r\nvar query = (function (){var or__3949__auto__ = fulcro.client.primitives.denormalize_query(state_map,queryid);\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn fulcro.client.primitives.get_static_query(class$);\r\n}\r\n})();\r\nreturn cljs.core.with_meta(query,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"component\",\"component\",1555936782),class$,new cljs.core.Keyword(null,\"queryid\",\"queryid\",-271432056),queryid], null));\r\n});\r\nfulcro.client.primitives.is_factory_QMARK_ = (function fulcro$client$primitives$is_factory_QMARK_(class_or_factory){\r\nreturn ((cljs.core.fn_QMARK_(class_or_factory)) && (cljs.core.contains_QMARK_(cljs.core.meta(class_or_factory),new cljs.core.Keyword(null,\"qualifier\",\"qualifier\",125841738))));\r\n});\r\nfulcro.client.primitives._STAR_query_state_STAR_ = cljs.core.PersistentArrayMap.EMPTY;\r\n/**\r\n * Get the query id that is cached in the component's props.\r\n */\r\nfulcro.client.primitives.get_query_id = (function fulcro$client$primitives$get_query_id(component){\r\nif(fulcro.client.primitives.component_QMARK_(component)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (component? component)\"));\r\n}\r\n\r\nreturn fulcro.client.primitives.get_raw_react_prop(component,\"fulcro$queryid\");\r\n});\r\n/**\r\n * Get the query for the given class or factory. If called without a state map, then you'll get the declared static\r\n *   query of the class. If a state map is supplied, then the dynamically set queries in that state will result in\r\n *   the current dynamically-set query according to that state.\r\n */\r\nfulcro.client.primitives.get_query = (function fulcro$client$primitives$get_query(var_args){\r\nvar G__38885 = arguments.length;\r\nswitch (G__38885) {\r\ncase 1:\r\nreturn fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$1 = (function (class_or_factory){\r\nreturn fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2(class_or_factory,fulcro.client.primitives._STAR_query_state_STAR_);\r\n});\r\n\r\nfulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2 = (function (class_or_factory,state_map){\r\nvar _STAR_query_state_STAR_38886 = fulcro.client.primitives._STAR_query_state_STAR_;\r\nfulcro.client.primitives._STAR_query_state_STAR_ = state_map;\r\n\r\ntry{var class$ = (cljs.core.truth_(fulcro.client.primitives.is_factory_QMARK_(class_or_factory))?new cljs.core.Keyword(null,\"class\",\"class\",-2030961996).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(class_or_factory)):((fulcro.client.primitives.component_QMARK_(class_or_factory))?fulcro.client.primitives.react_type(class_or_factory):class_or_factory\r\n));\r\nvar qualifier = (cljs.core.truth_(fulcro.client.primitives.is_factory_QMARK_(class_or_factory))?new cljs.core.Keyword(null,\"qualifier\",\"qualifier\",125841738).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(class_or_factory)):null);\r\nvar queryid = ((fulcro.client.primitives.component_QMARK_(class_or_factory))?fulcro.client.primitives.get_query_id(class_or_factory):fulcro.client.primitives.query_id(class$,qualifier));\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = class$;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn fulcro.client.primitives.has_query_QMARK_(class$);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn fulcro.client.primitives.get_query_by_id(state_map,class$,queryid);\r\n} else {\r\nreturn null;\r\n}\r\n}finally {fulcro.client.primitives._STAR_query_state_STAR_ = _STAR_query_state_STAR_38886;\r\n}});\r\n\r\nfulcro.client.primitives.get_query.cljs$lang$maxFixedArity = 2;\r\n\r\nfulcro.client.primitives.link_element = (function fulcro$client$primitives$link_element(element){\r\nreturn clojure.walk.prewalk((function fulcro$client$primitives$link_element_$_link_element_helper(ele){\r\nvar map__38895 = cljs.core.meta(ele);\r\nvar map__38895__$1 = ((((!((map__38895 == null)))?(((((map__38895.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__38895.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__38895):map__38895);\r\nvar queryid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38895__$1,new cljs.core.Keyword(null,\"queryid\",\"queryid\",-271432056));\r\nif(cljs.core.truth_(queryid)){\r\nreturn queryid;\r\n} else {\r\nreturn ele;\r\n}\r\n}),element);\r\n});\r\nfulcro.client.primitives.deep_merge = (function fulcro$client$primitives$deep_merge(var_args){\r\nvar args__4534__auto__ = [];\r\nvar len__4531__auto___38904 = arguments.length;\r\nvar i__4532__auto___38905 = (0);\r\nwhile(true){\r\nif((i__4532__auto___38905 < len__4531__auto___38904)){\r\nargs__4534__auto__.push((arguments[i__4532__auto___38905]));\r\n\r\nvar G__38906 = (i__4532__auto___38905 + (1));\r\ni__4532__auto___38905 = G__38906;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\r\nreturn fulcro.client.primitives.deep_merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\r\n});\r\n\r\nfulcro.client.primitives.deep_merge.cljs$core$IFn$_invoke$arity$variadic = (function (xs){\r\n\r\nif(cljs.core.every_QMARK_(cljs.core.map_QMARK_,xs)){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.merge_with,fulcro.client.primitives.deep_merge,xs);\r\n} else {\r\nreturn cljs.core.last(xs);\r\n}\r\n});\r\n\r\nfulcro.client.primitives.deep_merge.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\nfulcro.client.primitives.deep_merge.cljs$lang$applyTo = (function (seq38900){\r\nvar self__4519__auto__ = this;\r\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq38900));\r\n});\r\n\r\n/**\r\n * Determines if there are query elements in the present query that need to be normalized as well. If so, it does so.\r\n *   Returns the new state map.\r\n */\r\nfulcro.client.primitives.normalize_query_elements = (function fulcro$client$primitives$normalize_query_elements(state_map,query){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function fulcro$client$primitives$normalize_query_elements_$_normalize_query_elements_reducer(state,ele){\r\nvar parameterized_QMARK_ = cljs.core.seq_QMARK_(ele);\r\nvar raw_element = ((parameterized_QMARK_)?cljs.core.first(ele):ele);\r\nif(fulcro.util.union_QMARK_(raw_element)){\r\nvar union_alternates = cljs.core.first(cljs.core.vals(raw_element));\r\nvar normalized_union_alternates = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.link_element,union_alternates));\r\nvar union_query_id = new cljs.core.Keyword(null,\"queryid\",\"queryid\",-271432056).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(union_alternates));\r\nif(cljs.core.truth_(union_query_id)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"Union query has an ID. Did you use extended get-query?\",\"\\n\",\"union-query-id\"].join('')));\r\n}\r\n\r\nreturn fulcro.client.primitives.deep_merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"fulcro.client.primitives\",\"queries\",\"fulcro.client.primitives/queries\",-963324249),cljs.core.PersistentArrayMap.createAsIfByAssoc([union_query_id,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),normalized_union_alternates,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),union_query_id], null)])], null),cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (union_alternates,normalized_union_alternates,union_query_id,parameterized_QMARK_,raw_element){\r\nreturn (function fulcro$client$primitives$normalize_query_elements_$_normalize_query_elements_reducer_$_normalize_union_reducer(s,p__38910){\r\nvar vec__38911 = p__38910;\r\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38911,(0),null);\r\nvar subquery = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38911,(1),null);\r\nreturn (fulcro.client.primitives.normalize_query.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.normalize_query.cljs$core$IFn$_invoke$arity$2(s,subquery) : fulcro.client.primitives.normalize_query.call(null,s,subquery));\r\n});})(union_alternates,normalized_union_alternates,union_query_id,parameterized_QMARK_,raw_element))\r\n,state,union_alternates)], 0));\r\n} else {\r\nif(cljs.core.truth_(fulcro.util.join_QMARK_(raw_element))){\r\nvar G__38916 = state;\r\nvar G__38917 = fulcro.util.join_value(raw_element);\r\nreturn (fulcro.client.primitives.normalize_query.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.normalize_query.cljs$core$IFn$_invoke$arity$2(G__38916,G__38917) : fulcro.client.primitives.normalize_query.call(null,G__38916,G__38917));\r\n} else {\r\nreturn state;\r\n\r\n}\r\n}\r\n}),state_map,query);\r\n});\r\n/**\r\n * Find all of the elements (only at the top level) of the given query and replace them\r\n *   with their query ID\r\n */\r\nfulcro.client.primitives.link_query = (function fulcro$client$primitives$link_query(query){\r\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.link_element,query);\r\n});\r\n/**\r\n * Given a state map and a query, returns a state map with the query normalized into the database. Query fragments\r\n *   that already appear in the state will not be added. \r\n */\r\nfulcro.client.primitives.normalize_query = (function fulcro$client$primitives$normalize_query(state_map,query){\r\nvar new_state = fulcro.client.primitives.normalize_query_elements(state_map,query);\r\nvar new_state__$1 = (((new cljs.core.Keyword(\"fulcro.client.primitives\",\"queries\",\"fulcro.client.primitives/queries\",-963324249).cljs$core$IFn$_invoke$arity$1(new_state) == null))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_state,new cljs.core.Keyword(\"fulcro.client.primitives\",\"queries\",\"fulcro.client.primitives/queries\",-963324249),cljs.core.PersistentArrayMap.EMPTY):new_state);\r\nvar top_query = fulcro.client.primitives.link_query(query);\r\nvar temp__5455__auto__ = (function (){var G__38925 = query;\r\nvar G__38925__$1 = (((G__38925 == null))?null:cljs.core.meta(G__38925));\r\nif((G__38925__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"queryid\",\"queryid\",-271432056).cljs$core$IFn$_invoke$arity$1(G__38925__$1);\r\n}\r\n})();\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar queryid = temp__5455__auto__;\r\nreturn fulcro.client.primitives.deep_merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"fulcro.client.primitives\",\"queries\",\"fulcro.client.primitives/queries\",-963324249),cljs.core.PersistentArrayMap.createAsIfByAssoc([queryid,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),top_query,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),queryid], null)])], null),new_state__$1], 0));\r\n} else {\r\nreturn new_state__$1;\r\n}\r\n});\r\n/**\r\n * Put a query in app state.\r\n *   NOTE: Indexes must be rebuilt after setting a query, so this function should primarily be used to build\r\n *   up an initial app state.\r\n */\r\nfulcro.client.primitives.set_query_STAR_ = (function fulcro$client$primitives$set_query_STAR_(state_map,ui_factory_class_or_queryid,p__38931){\r\nvar map__38932 = p__38931;\r\nvar map__38932__$1 = ((((!((map__38932 == null)))?(((((map__38932.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__38932.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__38932):map__38932);\r\nvar args = map__38932__$1;\r\nvar query = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38932__$1,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\r\nvar queryid = (((ui_factory_class_or_queryid == null))?null:((typeof ui_factory_class_or_queryid === 'string')?ui_factory_class_or_queryid:(cljs.core.truth_((function (){var G__38934 = ui_factory_class_or_queryid;\r\nvar G__38934__$1 = (((G__38934 == null))?null:cljs.core.meta(G__38934));\r\nif((G__38934__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.contains_QMARK_(G__38934__$1,new cljs.core.Keyword(null,\"queryid\",\"queryid\",-271432056));\r\n}\r\n})())?(function (){var G__38935 = ui_factory_class_or_queryid;\r\nvar G__38935__$1 = (((G__38935 == null))?null:cljs.core.meta(G__38935));\r\nif((G__38935__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"queryid\",\"queryid\",-271432056).cljs$core$IFn$_invoke$arity$1(G__38935__$1);\r\n}\r\n})():fulcro.client.primitives.query_id(ui_factory_class_or_queryid,null)\r\n)));\r\nvar setq_STAR_ = ((function (queryid,map__38932,map__38932__$1,args,query){\r\nreturn (function (state){\r\nreturn fulcro.client.primitives.normalize_query(cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(\"fulcro.client.primitives\",\"queries\",\"fulcro.client.primitives/queries\",-963324249),cljs.core.dissoc,queryid),cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(query,cljs.core.assoc,new cljs.core.Keyword(null,\"queryid\",\"queryid\",-271432056),queryid));\r\n});})(queryid,map__38932,map__38932__$1,args,query))\r\n;\r\nif(typeof queryid === 'string'){\r\nvar G__38937 = state_map;\r\nif(cljs.core.contains_QMARK_(args,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510))){\r\nreturn setq_STAR_(G__38937);\r\n} else {\r\nreturn G__38937;\r\n}\r\n} else {\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1006], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Set query failed. There was no query ID.\"], 0));\r\n}catch (e38938){if((e38938 instanceof Error)){\r\nvar e__31518__auto___38944 = e38938;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1006], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___38944], 0));\r\n} else {\r\nthrow e38938;\r\n\r\n}\r\n}\r\nreturn state_map;\r\n}\r\n});\r\n/**\r\n * Gather the keys that would be considered part of the refresh set for the given query.\r\n * \r\n *   E.g. [:a {:j [:b]} {:u {:x [:l] :y [:k]}}] ==> #{:a :j :u}\r\n */\r\nfulcro.client.primitives.gather_keys = (function fulcro$client$primitives$gather_keys(query){\r\nif(cljs.core.vector_QMARK_(query)){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function fulcro$client$primitives$gather_keys_$_gather_keys_reducer(rv,e){\r\nif((e instanceof cljs.core.Keyword)){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(rv,e);\r\n} else {\r\nif(((fulcro.util.ident_QMARK_(e)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),cljs.core.second(e))))){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(rv,cljs.core.first(e));\r\n} else {\r\nif(((cljs.core.list_QMARK_(e)) && ((cljs.core.first(e) instanceof cljs.core.Keyword)))){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(rv,cljs.core.first(e));\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = fulcro.util.join_QMARK_(e);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn ((fulcro.util.ident_QMARK_(fulcro.util.join_key(e))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),cljs.core.second(fulcro.util.join_key(e)))));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(rv,cljs.core.first(fulcro.util.join_key(e)));\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = fulcro.util.join_QMARK_(e);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn (fulcro.util.join_key(e) instanceof cljs.core.Keyword);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(rv,fulcro.util.join_key(e));\r\n} else {\r\nreturn rv;\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}),cljs.core.PersistentHashSet.EMPTY,query);\r\n} else {\r\nif(cljs.core.map_QMARK_(query)){\r\nreturn cljs.core.set(cljs.core.keys(query));\r\n} else {\r\nreturn cljs.core.PersistentHashSet.EMPTY;\r\n\r\n}\r\n}\r\n});\r\nfulcro.client.primitives.normalize_STAR_ = (function fulcro$client$primitives$normalize_STAR_(query,data,refs,union_seen){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),query)){\r\nreturn data;\r\n} else {\r\nif(cljs.core.map_QMARK_(query)){\r\nvar class$ = new cljs.core.Keyword(null,\"component\",\"component\",1555936782).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(query));\r\nvar ident = ((((!((class$ == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === class$.fulcro$client$primitives$Ident$))))?true:false):false))?fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2(class$,data):null);\r\nif(!((ident == null))){\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4((function (){var G__38959 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(query,cljs.core.first(ident));\r\nvar G__38960 = data;\r\nvar G__38961 = refs;\r\nvar G__38962 = union_seen;\r\nreturn (fulcro.client.primitives.normalize_STAR_.cljs$core$IFn$_invoke$arity$4 ? fulcro.client.primitives.normalize_STAR_.cljs$core$IFn$_invoke$arity$4(G__38959,G__38960,G__38961,G__38962) : fulcro.client.primitives.normalize_STAR_.call(null,G__38959,G__38960,G__38961,G__38962));\r\n})(),cljs.core.assoc,new cljs.core.Keyword(\"fulcro.client.primitives\",\"tag\",\"fulcro.client.primitives/tag\",649496853),cljs.core.first(ident));\r\n} else {\r\nthrow (new Error(\"Union components must implement Ident\"));\r\n}\r\n} else {\r\nif(cljs.core.vector_QMARK_(data)){\r\nreturn data;\r\n} else {\r\nvar q = cljs.core.seq(query);\r\nvar ret = data;\r\nwhile(true){\r\nif(!((q == null))){\r\nvar expr = cljs.core.first(q);\r\nif(cljs.core.truth_(fulcro.util.join_QMARK_(expr))){\r\nvar vec__38965 = fulcro.util.join_entry(expr);\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38965,(0),null);\r\nvar sel = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38965,(1),null);\r\nvar recursive_QMARK_ = fulcro.util.recursion_QMARK_(sel);\r\nvar union_entry = ((fulcro.util.union_QMARK_(expr))?sel:union_seen);\r\nvar sel__$1 = ((recursive_QMARK_)?((!((union_seen == null)))?union_seen:query):sel);\r\nvar class$ = new cljs.core.Keyword(null,\"component\",\"component\",1555936782).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sel__$1));\r\nvar v = cljs.core.get.cljs$core$IFn$_invoke$arity$2(data,k);\r\nif(((recursive_QMARK_) && (fulcro.util.ident_QMARK_(v)))){\r\nvar G__38992 = cljs.core.next(q);\r\nvar G__38993 = ret;\r\nq = G__38992;\r\nret = G__38993;\r\ncontinue;\r\n} else {\r\nif(cljs.core.map_QMARK_(v)){\r\nvar x = (fulcro.client.primitives.normalize_STAR_.cljs$core$IFn$_invoke$arity$4 ? fulcro.client.primitives.normalize_STAR_.cljs$core$IFn$_invoke$arity$4(sel__$1,v,refs,union_entry) : fulcro.client.primitives.normalize_STAR_.call(null,sel__$1,v,refs,union_entry));\r\nif(!((((class$ == null)) || (!(((!((class$ == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === class$.fulcro$client$primitives$Ident$))))?true:false):false)))))){\r\nvar i = fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2(class$,v);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(refs,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(i),cljs.core.second(i)], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));\r\n\r\nvar G__38995 = cljs.core.next(q);\r\nvar G__38996 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,i);\r\nq = G__38995;\r\nret = G__38996;\r\ncontinue;\r\n} else {\r\nvar G__38997 = cljs.core.next(q);\r\nvar G__38998 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,x);\r\nq = G__38997;\r\nret = G__38998;\r\ncontinue;\r\n}\r\n} else {\r\nif(cljs.core.vector_QMARK_(v)){\r\nvar xs = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (q,ret,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr){\r\nreturn (function (p1__38954_SHARP_){\r\nreturn (fulcro.client.primitives.normalize_STAR_.cljs$core$IFn$_invoke$arity$4 ? fulcro.client.primitives.normalize_STAR_.cljs$core$IFn$_invoke$arity$4(sel__$1,p1__38954_SHARP_,refs,union_entry) : fulcro.client.primitives.normalize_STAR_.call(null,sel__$1,p1__38954_SHARP_,refs,union_entry));\r\n});})(q,ret,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr))\r\n),v);\r\nif(!((((class$ == null)) || (!(((!((class$ == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === class$.fulcro$client$primitives$Ident$))))?true:false):false)))))){\r\nvar is = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (q,ret,xs,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr){\r\nreturn (function (p1__38956_SHARP_){\r\nreturn fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2(class$,p1__38956_SHARP_);\r\n});})(q,ret,xs,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr))\r\n),xs);\r\nif(cljs.core.vector_QMARK_(sel__$1)){\r\nif(cljs.core.empty_QMARK_(is)){\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(refs,((function (q,ret,is,xs,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr){\r\nreturn (function (refs__$1){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (q,ret,is,xs,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr){\r\nreturn (function (m,p__38976){\r\nvar vec__38977 = p__38976;\r\nvar i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38977,(0),null);\r\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38977,(1),null);\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(m,i,cljs.core.merge,x);\r\n});})(q,ret,is,xs,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr))\r\n,refs__$1,cljs.core.zipmap(is,xs));\r\n});})(q,ret,is,xs,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr))\r\n);\r\n}\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(refs,((function (q,ret,is,xs,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr){\r\nreturn (function (refs_SINGLEQUOTE_){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (q,ret,is,xs,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr){\r\nreturn (function (ret__$1,p__38982){\r\nvar vec__38983 = p__38982;\r\nvar i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38983,(0),null);\r\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38983,(1),null);\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret__$1,i,cljs.core.merge,x);\r\n});})(q,ret,is,xs,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr))\r\n,refs_SINGLEQUOTE_,cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,is,xs));\r\n});})(q,ret,is,xs,vec__38965,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr))\r\n);\r\n}\r\n\r\nvar G__39005 = cljs.core.next(q);\r\nvar G__39006 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,is);\r\nq = G__39005;\r\nret = G__39006;\r\ncontinue;\r\n} else {\r\nvar G__39007 = cljs.core.next(q);\r\nvar G__39008 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,xs);\r\nq = G__39007;\r\nret = G__39008;\r\ncontinue;\r\n}\r\n} else {\r\nif((v == null)){\r\nvar G__39011 = cljs.core.next(q);\r\nvar G__39012 = ret;\r\nq = G__39011;\r\nret = G__39012;\r\ncontinue;\r\n} else {\r\nvar G__39013 = cljs.core.next(q);\r\nvar G__39014 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,v);\r\nq = G__39013;\r\nret = G__39014;\r\ncontinue;\r\n\r\n}\r\n}\r\n}\r\n}\r\n} else {\r\nvar k = ((cljs.core.seq_QMARK_(expr))?cljs.core.first(expr):expr);\r\nvar v = cljs.core.get.cljs$core$IFn$_invoke$arity$2(data,k);\r\nif((v == null)){\r\nvar G__39015 = cljs.core.next(q);\r\nvar G__39016 = ret;\r\nq = G__39015;\r\nret = G__39016;\r\ncontinue;\r\n} else {\r\nvar G__39018 = cljs.core.next(q);\r\nvar G__39019 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,v);\r\nq = G__39018;\r\nret = G__39019;\r\ncontinue;\r\n}\r\n}\r\n} else {\r\nreturn ret;\r\n}\r\nbreak;\r\n}\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Given a component class or instance and a tree of data, use the component's\r\n * query to transform the tree into the default database format. All nodes that\r\n * can be mapped via Ident implementations wil be replaced with ident links. The\r\n * original node data will be moved into tables indexed by ident. If merge-idents\r\n * option is true, will return these tables in the result instead of as metadata.\r\n */\r\nfulcro.client.primitives.tree__GT_db = (function fulcro$client$primitives$tree__GT_db(var_args){\r\nvar G__39023 = arguments.length;\r\nswitch (G__39023) {\r\ncase 2:\r\nreturn fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$2 = (function (x,data){\r\nreturn fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3(x,data,false);\r\n});\r\n\r\nfulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3 = (function (x,data,merge_idents){\r\nvar refs = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar x__$1 = ((cljs.core.vector_QMARK_(x))?x:fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2(x,data));\r\nvar ret = fulcro.client.primitives.normalize_STAR_(x__$1,data,refs,null);\r\nif(merge_idents){\r\nvar refs_SINGLEQUOTE_ = cljs.core.deref(refs);\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ret,refs_SINGLEQUOTE_], 0));\r\n} else {\r\nreturn cljs.core.with_meta(ret,cljs.core.deref(refs));\r\n}\r\n});\r\n\r\nfulcro.client.primitives.tree__GT_db.cljs$lang$maxFixedArity = 3;\r\n\r\nfulcro.client.primitives.focused_join = (function fulcro$client$primitives$focused_join(expr,ks,full_expr,union_expr){\r\nvar expr_meta = cljs.core.meta(expr);\r\nvar expr_SINGLEQUOTE_ = ((cljs.core.map_QMARK_(expr))?(function (){var join_value = cljs.core.second(cljs.core.first(expr));\r\nvar join_value__$1 = ((((fulcro.util.recursion_QMARK_(join_value)) && (cljs.core.seq(ks))))?((!((union_expr == null)))?union_expr:full_expr):join_value);\r\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.ffirst(expr),(fulcro.client.primitives.focus_query_STAR_.cljs$core$IFn$_invoke$arity$3 ? fulcro.client.primitives.focus_query_STAR_.cljs$core$IFn$_invoke$arity$3(join_value__$1,ks,null) : fulcro.client.primitives.focus_query_STAR_.call(null,join_value__$1,ks,null))]);\r\n})():((cljs.core.seq_QMARK_(expr))?(new cljs.core.List(null,(function (){var G__39029 = cljs.core.first(expr);\r\nvar G__39030 = ks;\r\nvar G__39031 = null;\r\nvar G__39032 = null;\r\nreturn (fulcro.client.primitives.focused_join.cljs$core$IFn$_invoke$arity$4 ? fulcro.client.primitives.focused_join.cljs$core$IFn$_invoke$arity$4(G__39029,G__39030,G__39031,G__39032) : fulcro.client.primitives.focused_join.call(null,G__39029,G__39030,G__39031,G__39032));\r\n})(),(new cljs.core.List(null,cljs.core.second(expr),null,(1),null)),(2),null)):expr\r\n));\r\nvar G__39034 = expr_SINGLEQUOTE_;\r\nif(!((expr_meta == null))){\r\nreturn cljs.core.with_meta(G__39034,expr_meta);\r\n} else {\r\nreturn G__39034;\r\n}\r\n});\r\nfulcro.client.primitives.focus_query_STAR_ = (function fulcro$client$primitives$focus_query_STAR_(query,path,union_expr){\r\nif(cljs.core.empty_QMARK_(path)){\r\nreturn query;\r\n} else {\r\nvar vec__39038 = path;\r\nvar seq__39039 = cljs.core.seq(vec__39038);\r\nvar first__39040 = cljs.core.first(seq__39039);\r\nvar seq__39039__$1 = cljs.core.next(seq__39039);\r\nvar k = first__39040;\r\nvar ks = seq__39039__$1;\r\nvar match = ((function (vec__39038,seq__39039,first__39040,seq__39039__$1,k,ks){\r\nreturn (function fulcro$client$primitives$focus_query_STAR__$_match(x){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,fulcro.util.join_key(x));\r\n});})(vec__39038,seq__39039,first__39040,seq__39039__$1,k,ks))\r\n;\r\nvar value = ((function (vec__39038,seq__39039,first__39040,seq__39039__$1,k,ks){\r\nreturn (function fulcro$client$primitives$focus_query_STAR__$_value(x){\r\nreturn fulcro.client.primitives.focused_join(x,ks,query,union_expr);\r\n});})(vec__39038,seq__39039,first__39040,seq__39039__$1,k,ks))\r\n;\r\nif(cljs.core.map_QMARK_(query)){\r\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc([k,(function (){var G__39043 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(query,k);\r\nvar G__39044 = ks;\r\nvar G__39045 = query;\r\nreturn (fulcro.client.primitives.focus_query_STAR_.cljs$core$IFn$_invoke$arity$3 ? fulcro.client.primitives.focus_query_STAR_.cljs$core$IFn$_invoke$arity$3(G__39043,G__39044,G__39045) : fulcro.client.primitives.focus_query_STAR_.call(null,G__39043,G__39044,G__39045));\r\n})()]);\r\n} else {\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$3(cljs.core.filter.cljs$core$IFn$_invoke$arity$1(match),cljs.core.map.cljs$core$IFn$_invoke$arity$1(value),cljs.core.take.cljs$core$IFn$_invoke$arity$1((1))),query);\r\n}\r\n}\r\n});\r\n/**\r\n * Given a query, focus it along the specified path.\r\n * \r\n *   Examples:\r\n *  (focus-query [:foo :bar :baz] [:foo])\r\n *  => [:foo]\r\n * \r\n *  (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [:foo :bar])\r\n *  => [{:foo [:bar]}]\r\n */\r\nfulcro.client.primitives.focus_query = (function fulcro$client$primitives$focus_query(query,path){\r\nreturn fulcro.client.primitives.focus_query_STAR_(query,path,null);\r\n});\r\nfulcro.client.primitives.focus_subquery_union_STAR_ = (function fulcro$client$primitives$focus_subquery_union_STAR_(query_ast,sub_ast){\r\nvar s_index = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__39051_SHARP_){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234).cljs$core$IFn$_invoke$arity$1(p1__39051_SHARP_),p1__39051_SHARP_],null));\r\n})),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(sub_ast));\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(query_ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (s_index){\r\nreturn (function (children,p__39053){\r\nvar map__39054 = p__39053;\r\nvar map__39054__$1 = ((((!((map__39054 == null)))?(((((map__39054.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39054.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39054):map__39054);\r\nvar union_entry = map__39054__$1;\r\nvar union_key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39054__$1,new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234));\r\nvar temp__5455__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(s_index,union_key);\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar sub = temp__5455__auto__;\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,(fulcro.client.primitives.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2(union_entry,sub) : fulcro.client.primitives.focus_subquery_STAR_.call(null,union_entry,sub)));\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,union_entry);\r\n}\r\n});})(s_index))\r\n,cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(query_ast)));\r\n});\r\nfulcro.client.primitives.focus_subquery_STAR_ = (function fulcro$client$primitives$focus_subquery_STAR_(query_ast,sub_ast){\r\nvar q_index = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__39061_SHARP_){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(p1__39061_SHARP_),p1__39061_SHARP_],null));\r\n})),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(query_ast));\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(query_ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (q_index){\r\nreturn (function (children,p__39063){\r\nvar map__39064 = p__39063;\r\nvar map__39064__$1 = ((((!((map__39064 == null)))?(((((map__39064.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39064.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39064):map__39064);\r\nvar focus = map__39064__$1;\r\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39064__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39064__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\r\nvar temp__5455__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(q_index,key);\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar source = temp__5455__auto__;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"join\",\"join\",-758861890),type,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(source)], 0))){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,(fulcro.client.primitives.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.focus_subquery_STAR_.cljs$core$IFn$_invoke$arity$2(source,focus) : fulcro.client.primitives.focus_subquery_STAR_.call(null,source,focus)));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"union\",\"union\",2142937499),type,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(source)], 0))){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,fulcro.client.primitives.focus_subquery_union_STAR_(source,focus));\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children,source);\r\n\r\n}\r\n}\r\n} else {\r\nreturn children;\r\n}\r\n});})(q_index))\r\n,cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(sub_ast)));\r\n});\r\n/**\r\n * Given a query, focus it along the specified query expression.\r\n * \r\n *   Examples:\r\n *  (focus-query [:foo :bar :baz] [:foo])\r\n *  => [:foo]\r\n * \r\n *  (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\r\n *  => [{:foo [:bar]} :woz]\r\n */\r\nfulcro.client.primitives.focus_subquery = (function fulcro$client$primitives$focus_subquery(query,sub_query){\r\nvar query_ast = (fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1(query) : fulcro.client.primitives.query__GT_ast.call(null,query));\r\nvar sub_ast = (fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1(sub_query) : fulcro.client.primitives.query__GT_ast.call(null,sub_query));\r\nvar G__39071 = fulcro.client.primitives.focus_subquery_STAR_(query_ast,sub_ast);\r\nreturn (fulcro.client.primitives.ast__GT_query.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.ast__GT_query.cljs$core$IFn$_invoke$arity$1(G__39071) : fulcro.client.primitives.ast__GT_query.call(null,G__39071));\r\n});\r\n/**\r\n * Given a query expression return its key.\r\n */\r\nfulcro.client.primitives.expr__GT_key = (function fulcro$client$primitives$expr__GT_key(expr){\r\nif((expr instanceof cljs.core.Keyword)){\r\nreturn expr;\r\n} else {\r\nif(cljs.core.map_QMARK_(expr)){\r\nreturn cljs.core.ffirst(expr);\r\n} else {\r\nif(cljs.core.seq_QMARK_(expr)){\r\nvar expr_SINGLEQUOTE_ = cljs.core.first(expr);\r\nif(cljs.core.map_QMARK_(expr_SINGLEQUOTE_)){\r\nreturn cljs.core.ffirst(expr_SINGLEQUOTE_);\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nif(fulcro.util.ident_QMARK_(expr)){\r\nvar G__39075 = expr;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),cljs.core.second(expr))){\r\nreturn cljs.core.first(G__39075);\r\n} else {\r\nreturn G__39075;\r\n}\r\n} else {\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Invalid query expr \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr)].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"error\",\"invalid-expression\",\"error/invalid-expression\",-881565136)], null));\r\n\r\n}\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Return a zipper on a query expression.\r\n */\r\nfulcro.client.primitives.query_zip = (function fulcro$client$primitives$query_zip(root){\r\nreturn clojure.zip.zipper((function (p1__39079_SHARP_){\r\nreturn ((cljs.core.vector_QMARK_(p1__39079_SHARP_)) || (cljs.core.map_QMARK_(p1__39079_SHARP_)) || (cljs.core.seq_QMARK_(p1__39079_SHARP_)));\r\n}),cljs.core.seq,(function (node,children){\r\nvar ret = ((cljs.core.vector_QMARK_(node))?cljs.core.vec(children):((cljs.core.map_QMARK_(node))?cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,children):((cljs.core.seq_QMARK_(node))?children:null)));\r\nreturn cljs.core.with_meta(ret,cljs.core.meta(node));\r\n}),root);\r\n});\r\n/**\r\n * Move from the current zipper location to the specified key. loc must be a\r\n * hash map node.\r\n */\r\nfulcro.client.primitives.move_to_key = (function fulcro$client$primitives$move_to_key(loc,k){\r\nvar loc__$1 = clojure.zip.down(loc);\r\nwhile(true){\r\nvar node = clojure.zip.node(loc__$1);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,cljs.core.first(node))){\r\nreturn clojure.zip.right(clojure.zip.down(loc__$1));\r\n} else {\r\nvar G__39087 = clojure.zip.right(loc__$1);\r\nloc__$1 = G__39087;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Given a query and a path into a query return a zipper focused at the location\r\n * specified by the path. This location can be replaced to customize / alter\r\n * the query.\r\n */\r\nfulcro.client.primitives.query_template = (function fulcro$client$primitives$query_template(query,path){\r\nvar query_template_STAR_ = (function fulcro$client$primitives$query_template_$_query_template_STAR_(loc,path__$1){\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(path__$1)){\r\nreturn loc;\r\n} else {\r\nvar node = clojure.zip.node(loc);\r\nif(cljs.core.vector_QMARK_(node)){\r\nvar G__39101 = clojure.zip.down(loc);\r\nvar G__39102 = path__$1;\r\nloc = G__39101;\r\npath__$1 = G__39102;\r\ncontinue;\r\n} else {\r\nvar vec__39095 = path__$1;\r\nvar seq__39096 = cljs.core.seq(vec__39095);\r\nvar first__39097 = cljs.core.first(seq__39096);\r\nvar seq__39096__$1 = cljs.core.next(seq__39096);\r\nvar k = first__39097;\r\nvar ks = seq__39096__$1;\r\nvar k_SINGLEQUOTE_ = fulcro.client.primitives.expr__GT_key(node);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,k_SINGLEQUOTE_)){\r\nif(((cljs.core.map_QMARK_(node)) || (((cljs.core.seq_QMARK_(node)) && (cljs.core.map_QMARK_(cljs.core.first(node))))))){\r\nvar loc_SINGLEQUOTE_ = fulcro.client.primitives.move_to_key((function (){var G__39098 = loc;\r\nif(cljs.core.seq_QMARK_(node)){\r\nreturn clojure.zip.down(G__39098);\r\n} else {\r\nreturn G__39098;\r\n}\r\n})(),k);\r\nvar node_SINGLEQUOTE_ = clojure.zip.node(loc_SINGLEQUOTE_);\r\nif(cljs.core.map_QMARK_(node_SINGLEQUOTE_)){\r\nif(cljs.core.seq(ks)){\r\nvar G__39104 = clojure.zip.replace(loc_SINGLEQUOTE_,clojure.zip.node(fulcro.client.primitives.move_to_key(loc_SINGLEQUOTE_,cljs.core.first(ks))));\r\nvar G__39105 = cljs.core.next(ks);\r\nloc = G__39104;\r\npath__$1 = G__39105;\r\ncontinue;\r\n} else {\r\nreturn loc_SINGLEQUOTE_;\r\n}\r\n} else {\r\nvar G__39106 = loc_SINGLEQUOTE_;\r\nvar G__39107 = ks;\r\nloc = G__39106;\r\npath__$1 = G__39107;\r\ncontinue;\r\n}\r\n} else {\r\nvar G__39108 = clojure.zip.right(clojure.zip.down(clojure.zip.down(clojure.zip.down(loc))));\r\nvar G__39109 = ks;\r\nloc = G__39108;\r\npath__$1 = G__39109;\r\ncontinue;\r\n}\r\n} else {\r\nvar G__39112 = clojure.zip.right(loc);\r\nvar G__39113 = path__$1;\r\nloc = G__39112;\r\npath__$1 = G__39113;\r\ncontinue;\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\nreturn query_template_STAR_(fulcro.client.primitives.query_zip(query),path);\r\n});\r\nfulcro.client.primitives.replace = (function fulcro$client$primitives$replace(template,new_query){\r\nreturn clojure.zip.root(clojure.zip.replace(template,new_query));\r\n});\r\n/**\r\n * Changes a join on key k with depth limit from [:a {:k n}] to [:a {:k (dec n)}]\r\n */\r\nfulcro.client.primitives.reduce_query_depth = (function fulcro$client$primitives$reduce_query_depth(q,k){\r\nif(!(cljs.core.empty_QMARK_(fulcro.client.primitives.focus_query(q,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null))))){\r\nvar pos = fulcro.client.primitives.query_template(q,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null));\r\nvar node = clojure.zip.node(pos);\r\nvar node_SINGLEQUOTE_ = (function (){var G__39117 = node;\r\nif(typeof node === 'number'){\r\nreturn (G__39117 - (1));\r\n} else {\r\nreturn G__39117;\r\n}\r\n})();\r\nreturn fulcro.client.primitives.replace(pos,node_SINGLEQUOTE_);\r\n} else {\r\nreturn q;\r\n}\r\n});\r\n/**\r\n * Given a union expression decrement each of the query roots by one if it\r\n * is recursive.\r\n */\r\nfulcro.client.primitives.reduce_union_recursion_depth = (function fulcro$client$primitives$reduce_union_recursion_depth(union_expr,recursion_key){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__39119){\r\nvar vec__39120 = p__39119;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39120,(0),null);\r\nvar q = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39120,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,fulcro.client.primitives.reduce_query_depth(q,recursion_key)], null);\r\n}),union_expr));\r\n});\r\nfulcro.client.primitives.mappable_ident_QMARK_ = (function fulcro$client$primitives$mappable_ident_QMARK_(refs,ident){\r\nreturn ((fulcro.util.ident_QMARK_(ident)) && (cljs.core.contains_QMARK_(refs,cljs.core.first(ident))));\r\n});\r\n/**\r\n * Denormalize a data based on query. refs is a data structure which maps idents\r\n * to their values. map-ident is a function taking a ident to another ident,\r\n * used during tempid transition. idents-seen is the set of idents encountered,\r\n * used to limit recursion. union-expr is the current union expression being\r\n * evaluated. recurse-key is key representing the current recursive query being\r\n * evaluted.\r\n */\r\nfulcro.client.primitives.denormalize_STAR_ = (function fulcro$client$primitives$denormalize_STAR_(query,data,refs,map_ident,idents_seen,union_expr,recurse_key){\r\nvar union_recur_QMARK_ = (function (){var and__3938__auto__ = union_expr;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn recurse_key;\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})();\r\nvar recur_ident = (cljs.core.truth_(union_recur_QMARK_)?data:null);\r\nvar data__$1 = (function (){var data__$1 = data;\r\nwhile(true){\r\nif(cljs.core.truth_(fulcro.client.primitives.mappable_ident_QMARK_(refs,data__$1))){\r\nvar G__39176 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(refs,(map_ident.cljs$core$IFn$_invoke$arity$1 ? map_ident.cljs$core$IFn$_invoke$arity$1(data__$1) : map_ident.call(null,data__$1)));\r\ndata__$1 = G__39176;\r\ncontinue;\r\n} else {\r\nreturn data__$1;\r\n}\r\nbreak;\r\n}\r\n})();\r\nif(cljs.core.vector_QMARK_(data__$1)){\r\nvar step = ((function (union_recur_QMARK_,recur_ident,data__$1){\r\nreturn (function (ident){\r\nif(cljs.core.not(fulcro.client.primitives.mappable_ident_QMARK_(refs,ident))){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(query,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null))){\r\nreturn ident;\r\n} else {\r\nvar map__39134 = cljs.core.group_by(fulcro.util.join_QMARK_,query);\r\nvar map__39134__$1 = ((((!((map__39134 == null)))?(((((map__39134.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39134.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39134):map__39134);\r\nvar props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39134__$1,false);\r\nvar joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39134__$1,true);\r\nvar props__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (map__39134,map__39134__$1,props,joins,union_recur_QMARK_,recur_ident,data__$1){\r\nreturn (function (p1__39126_SHARP_){\r\nvar G__39137 = p1__39126_SHARP_;\r\nif(cljs.core.seq_QMARK_(p1__39126_SHARP_)){\r\nreturn cljs.core.first(G__39137);\r\n} else {\r\nreturn G__39137;\r\n}\r\n});})(map__39134,map__39134__$1,props,joins,union_recur_QMARK_,recur_ident,data__$1))\r\n,props);\r\nvar joins__$1 = cljs.core.seq(joins);\r\nvar ret = cljs.core.PersistentArrayMap.EMPTY;\r\nwhile(true){\r\nif(!((joins__$1 == null))){\r\nvar join = cljs.core.first(joins__$1);\r\nvar vec__39139 = fulcro.util.join_entry(join);\r\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39139,(0),null);\r\nvar sel = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39139,(1),null);\r\nvar v = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ident,key);\r\nvar G__39182 = cljs.core.next(joins__$1);\r\nvar G__39183 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,(fulcro.client.primitives.denormalize_STAR_.cljs$core$IFn$_invoke$arity$7 ? fulcro.client.primitives.denormalize_STAR_.cljs$core$IFn$_invoke$arity$7(sel,v,refs,map_ident,idents_seen,union_expr,recurse_key) : fulcro.client.primitives.denormalize_STAR_.call(null,sel,v,refs,map_ident,idents_seen,union_expr,recurse_key)));\r\njoins__$1 = G__39182;\r\nret = G__39183;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(ident,props__$1),ret], 0));\r\n}\r\nbreak;\r\n}\r\n}\r\n} else {\r\nvar ident_SINGLEQUOTE_ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(refs,(map_ident.cljs$core$IFn$_invoke$arity$1 ? map_ident.cljs$core$IFn$_invoke$arity$1(ident) : map_ident.call(null,ident)));\r\nvar query__$1 = (function (){var G__39143 = query;\r\nif(cljs.core.truth_(union_recur_QMARK_)){\r\nreturn fulcro.client.primitives.reduce_union_recursion_depth(G__39143,recurse_key);\r\n} else {\r\nreturn G__39143;\r\n}\r\n})();\r\nvar union_seen_SINGLEQUOTE_ = (function (){var G__39144 = union_expr;\r\nif(cljs.core.truth_(union_recur_QMARK_)){\r\nreturn fulcro.client.primitives.reduce_union_recursion_depth(G__39144,recurse_key);\r\n} else {\r\nreturn G__39144;\r\n}\r\n})();\r\nvar query_SINGLEQUOTE_ = (function (){var G__39146 = query__$1;\r\nif(cljs.core.map_QMARK_(query__$1)){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__39146,cljs.core.first(ident));\r\n} else {\r\nreturn G__39146;\r\n}\r\n})();\r\nreturn (fulcro.client.primitives.denormalize_STAR_.cljs$core$IFn$_invoke$arity$7 ? fulcro.client.primitives.denormalize_STAR_.cljs$core$IFn$_invoke$arity$7(query_SINGLEQUOTE_,ident_SINGLEQUOTE_,refs,map_ident,idents_seen,union_seen_SINGLEQUOTE_,null) : fulcro.client.primitives.denormalize_STAR_.call(null,query_SINGLEQUOTE_,ident_SINGLEQUOTE_,refs,map_ident,idents_seen,union_seen_SINGLEQUOTE_,null));\r\n}\r\n});})(union_recur_QMARK_,recur_ident,data__$1))\r\n;\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(step),data__$1);\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = cljs.core.map_QMARK_(query);\r\nif(and__3938__auto__){\r\nreturn union_recur_QMARK_;\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nvar G__39147 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(query,cljs.core.first(recur_ident));\r\nvar G__39148 = data__$1;\r\nvar G__39149 = refs;\r\nvar G__39150 = map_ident;\r\nvar G__39151 = idents_seen;\r\nvar G__39152 = union_expr;\r\nvar G__39153 = recurse_key;\r\nreturn (fulcro.client.primitives.denormalize_STAR_.cljs$core$IFn$_invoke$arity$7 ? fulcro.client.primitives.denormalize_STAR_.cljs$core$IFn$_invoke$arity$7(G__39147,G__39148,G__39149,G__39150,G__39151,G__39152,G__39153) : fulcro.client.primitives.denormalize_STAR_.call(null,G__39147,G__39148,G__39149,G__39150,G__39151,G__39152,G__39153));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),query)){\r\nreturn data__$1;\r\n} else {\r\nvar map__39155 = cljs.core.group_by(((function (union_recur_QMARK_,recur_ident,data__$1){\r\nreturn (function (p1__39127_SHARP_){\r\nvar or__3949__auto__ = fulcro.util.join_QMARK_(p1__39127_SHARP_);\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn ((fulcro.util.ident_QMARK_(p1__39127_SHARP_)) || (((cljs.core.seq_QMARK_(p1__39127_SHARP_)) && (fulcro.util.ident_QMARK_(cljs.core.first(p1__39127_SHARP_))))));\r\n}\r\n});})(union_recur_QMARK_,recur_ident,data__$1))\r\n,query);\r\nvar map__39155__$1 = ((((!((map__39155 == null)))?(((((map__39155.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39155.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39155):map__39155);\r\nvar props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39155__$1,false);\r\nvar joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39155__$1,true);\r\nvar props__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (map__39155,map__39155__$1,props,joins,union_recur_QMARK_,recur_ident,data__$1){\r\nreturn (function (p1__39128_SHARP_){\r\nvar G__39158 = p1__39128_SHARP_;\r\nif(cljs.core.seq_QMARK_(p1__39128_SHARP_)){\r\nreturn cljs.core.first(G__39158);\r\n} else {\r\nreturn G__39158;\r\n}\r\n});})(map__39155,map__39155__$1,props,joins,union_recur_QMARK_,recur_ident,data__$1))\r\n,props);\r\nvar joins__$1 = cljs.core.seq(joins);\r\nvar ret = cljs.core.PersistentArrayMap.EMPTY;\r\nwhile(true){\r\nif(!((joins__$1 == null))){\r\nvar join = cljs.core.first(joins__$1);\r\nvar join__$1 = (function (){var G__39163 = join;\r\nif(cljs.core.seq_QMARK_(join)){\r\nreturn cljs.core.first(G__39163);\r\n} else {\r\nreturn G__39163;\r\n}\r\n})();\r\nvar join__$2 = (function (){var G__39164 = join__$1;\r\nif(fulcro.util.ident_QMARK_(join__$1)){\r\nreturn cljs.core.PersistentHashMap.fromArrays([G__39164],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null)]);\r\n} else {\r\nreturn G__39164;\r\n}\r\n})();\r\nvar vec__39160 = fulcro.util.join_entry(join__$2);\r\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39160,(0),null);\r\nvar sel = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39160,(1),null);\r\nvar recurse_QMARK_ = fulcro.util.recursion_QMARK_(sel);\r\nvar recurse_key__$1 = ((recurse_QMARK_)?key:null);\r\nvar v = ((fulcro.util.ident_QMARK_(key))?((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),cljs.core.second(key)))?cljs.core.get.cljs$core$IFn$_invoke$arity$2(refs,cljs.core.first(key)):cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(refs,(map_ident.cljs$core$IFn$_invoke$arity$1 ? map_ident.cljs$core$IFn$_invoke$arity$1(key) : map_ident.call(null,key)))):cljs.core.get.cljs$core$IFn$_invoke$arity$2(data__$1,key));\r\nvar key__$1 = (function (){var G__39167 = key;\r\nif(fulcro.util.unique_ident_QMARK_(key)){\r\nreturn cljs.core.first(G__39167);\r\n} else {\r\nreturn G__39167;\r\n}\r\n})();\r\nvar v__$1 = (cljs.core.truth_(fulcro.client.primitives.mappable_ident_QMARK_(refs,v))?(function (){var v__$1 = v;\r\nwhile(true){\r\nvar next = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(refs,(map_ident.cljs$core$IFn$_invoke$arity$1 ? map_ident.cljs$core$IFn$_invoke$arity$1(v__$1) : map_ident.call(null,v__$1)));\r\nif(cljs.core.truth_(fulcro.client.primitives.mappable_ident_QMARK_(refs,next))){\r\nvar G__39193 = next;\r\nv__$1 = G__39193;\r\ncontinue;\r\n} else {\r\nreturn (map_ident.cljs$core$IFn$_invoke$arity$1 ? map_ident.cljs$core$IFn$_invoke$arity$1(v__$1) : map_ident.call(null,v__$1));\r\n}\r\nbreak;\r\n}\r\n})():v);\r\nvar limit = ((typeof sel === 'number')?sel:new cljs.core.Keyword(null,\"none\",\"none\",1333468478));\r\nvar union_entry = ((fulcro.util.union_QMARK_(join__$2))?sel:((recurse_QMARK_)?union_expr:null));\r\nvar sel__$1 = ((recurse_QMARK_)?((!((union_expr == null)))?union_entry:fulcro.client.primitives.reduce_query_depth(query,key__$1)):(cljs.core.truth_((function (){var and__3938__auto__ = fulcro.client.primitives.mappable_ident_QMARK_(refs,v__$1);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn fulcro.util.union_QMARK_(join__$2);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())?cljs.core.get.cljs$core$IFn$_invoke$arity$2(sel,cljs.core.first(v__$1)):((((fulcro.util.ident_QMARK_(key__$1)) && (fulcro.util.union_QMARK_(join__$2))))?cljs.core.get.cljs$core$IFn$_invoke$arity$2(sel,cljs.core.first(key__$1)):sel\r\n)));\r\nvar graph_loop_QMARK_ = ((recurse_QMARK_) && (cljs.core.contains_QMARK_(cljs.core.set(cljs.core.get.cljs$core$IFn$_invoke$arity$2(idents_seen,key__$1)),v__$1)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"none\",\"none\",1333468478),limit)));\r\nvar idents_seen__$1 = (cljs.core.truth_((function (){var and__3938__auto__ = fulcro.client.primitives.mappable_ident_QMARK_(refs,v__$1);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn recurse_QMARK_;\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())?cljs.core.assoc_in(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(idents_seen,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [key__$1], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),v__$1),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"last-ident\",\"last-ident\",534500972),key__$1], null),v__$1):idents_seen);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),limit)){\r\nvar G__39197 = cljs.core.next(joins__$1);\r\nvar G__39198 = ret;\r\njoins__$1 = G__39197;\r\nret = G__39198;\r\ncontinue;\r\n} else {\r\nif(graph_loop_QMARK_){\r\nvar G__39199 = cljs.core.next(joins__$1);\r\nvar G__39200 = ret;\r\njoins__$1 = G__39199;\r\nret = G__39200;\r\ncontinue;\r\n} else {\r\nif((v__$1 == null)){\r\nvar G__39202 = cljs.core.next(joins__$1);\r\nvar G__39203 = ret;\r\njoins__$1 = G__39202;\r\nret = G__39203;\r\ncontinue;\r\n} else {\r\nvar G__39204 = cljs.core.next(joins__$1);\r\nvar G__39205 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key__$1,(fulcro.client.primitives.denormalize_STAR_.cljs$core$IFn$_invoke$arity$7 ? fulcro.client.primitives.denormalize_STAR_.cljs$core$IFn$_invoke$arity$7(sel__$1,v__$1,refs,map_ident,idents_seen__$1,union_entry,recurse_key__$1) : fulcro.client.primitives.denormalize_STAR_.call(null,sel__$1,v__$1,refs,map_ident,idents_seen__$1,union_entry,recurse_key__$1)));\r\njoins__$1 = G__39204;\r\nret = G__39205;\r\ncontinue;\r\n\r\n}\r\n}\r\n}\r\n} else {\r\nvar temp__5455__auto__ = cljs.core.some(((function (joins__$1,ret,map__39155,map__39155__$1,props,joins,props__$1,union_recur_QMARK_,recur_ident,data__$1){\r\nreturn (function (p__39171){\r\nvar vec__39172 = p__39171;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39172,(0),null);\r\nvar identset = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39172,(1),null);\r\nif(cljs.core.contains_QMARK_(identset,cljs.core.get.cljs$core$IFn$_invoke$arity$2(data__$1,k))){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(idents_seen,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"last-ident\",\"last-ident\",534500972),k], null));\r\n} else {\r\nreturn null;\r\n}\r\n});})(joins__$1,ret,map__39155,map__39155__$1,props,joins,props__$1,union_recur_QMARK_,recur_ident,data__$1))\r\n,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(idents_seen,new cljs.core.Keyword(null,\"last-ident\",\"last-ident\",534500972)));\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar looped_key = temp__5455__auto__;\r\nreturn looped_key;\r\n} else {\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(data__$1,props__$1),ret], 0));\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n\r\n}\r\n}\r\n});\r\n/**\r\n * Given a query, some data in the default database format, and the entire\r\n * application state in the default database format, return the tree where all\r\n * ident links have been replaced with their original node values.\r\n */\r\nfulcro.client.primitives.db__GT_tree = (function fulcro$client$primitives$db__GT_tree(var_args){\r\nvar G__39209 = arguments.length;\r\nswitch (G__39209) {\r\ncase 3:\r\nreturn fulcro.client.primitives.db__GT_tree.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn fulcro.client.primitives.db__GT_tree.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.db__GT_tree.cljs$core$IFn$_invoke$arity$3 = (function (query,data,refs){\r\nif(cljs.core.map_QMARK_(refs)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (map? refs)\"));\r\n}\r\n\r\nreturn fulcro.client.primitives.denormalize_STAR_(query,data,refs,cljs.core.identity,cljs.core.PersistentArrayMap.EMPTY,null,null);\r\n});\r\n\r\nfulcro.client.primitives.db__GT_tree.cljs$core$IFn$_invoke$arity$4 = (function (query,data,refs,map_ident){\r\nif(cljs.core.map_QMARK_(refs)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (map? refs)\"));\r\n}\r\n\r\nreturn fulcro.client.primitives.denormalize_STAR_(query,data,refs,map_ident,cljs.core.PersistentArrayMap.EMPTY,null,null);\r\n});\r\n\r\nfulcro.client.primitives.db__GT_tree.cljs$lang$maxFixedArity = 4;\r\n\r\n/**\r\n * Get any component from the indexer that matches the ref.\r\n */\r\nfulcro.client.primitives.ref__GT_any = (function fulcro$client$primitives$ref__GT_any(x,ref){\r\nvar indexer = ((fulcro.client.primitives.reconciler_QMARK_(x))?fulcro.client.primitives.get_indexer(x):x);\r\nreturn cljs.core.first(fulcro.client.impl.protocols.key__GT_components(indexer,ref));\r\n});\r\n/**\r\n * Replaces all tempids in app-state with the ids returned by the server.\r\n */\r\nfulcro.client.primitives.resolve_tempids = (function fulcro$client$primitives$resolve_tempids(state,tid__GT_rid){\r\nif(cljs.core.empty_QMARK_(tid__GT_rid)){\r\nreturn state;\r\n} else {\r\nreturn clojure.walk.prewalk((function (p1__39218_SHARP_){\r\nif(cljs.core.truth_((fulcro.client.primitives.tempid_QMARK_.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.tempid_QMARK_.cljs$core$IFn$_invoke$arity$1(p1__39218_SHARP_) : fulcro.client.primitives.tempid_QMARK_.call(null,p1__39218_SHARP_)))){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(tid__GT_rid,p1__39218_SHARP_,p1__39218_SHARP_);\r\n} else {\r\nreturn p1__39218_SHARP_;\r\n}\r\n}),state);\r\n}\r\n});\r\n/**\r\n * Rewrite any pending requests in the request queue to account for the fact that a response might have\r\n *   changed ids that are expressed in the mutations of that queue. tempid-map MUST be a map from om\r\n *   tempid to real ids, not idents.\r\n */\r\nfulcro.client.primitives.rewrite_tempids_in_request_queue = (function fulcro$client$primitives$rewrite_tempids_in_request_queue(queue,tempid_map){\r\nvar entry = cljs.core.async.poll_BANG_(queue);\r\nvar entries = cljs.core.PersistentVector.EMPTY;\r\nwhile(true){\r\nif(cljs.core.truth_(entry)){\r\nvar G__39231 = cljs.core.async.poll_BANG_(queue);\r\nvar G__39232 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(entries,fulcro.client.primitives.resolve_tempids(entry,tempid_map));\r\nentry = G__39231;\r\nentries = G__39232;\r\ncontinue;\r\n} else {\r\nif(cljs.core.seq(entries)){\r\nvar seq__39222 = cljs.core.seq(entries);\r\nvar chunk__39223 = null;\r\nvar count__39224 = (0);\r\nvar i__39225 = (0);\r\nwhile(true){\r\nif((i__39225 < count__39224)){\r\nvar e = chunk__39223.cljs$core$IIndexed$_nth$arity$2(null,i__39225);\r\nif(cljs.core.truth_(cljs.core.async.offer_BANG_(queue,e))){\r\n} else {\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1477], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Unable to put request back on network queue during tempid rewrite!\"], 0));\r\n}catch (e39226){if((e39226 instanceof Error)){\r\nvar e__31518__auto___39235 = e39226;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1477], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___39235], 0));\r\n} else {\r\nthrow e39226;\r\n\r\n}\r\n}}\r\n\r\n\r\nvar G__39236 = seq__39222;\r\nvar G__39237 = chunk__39223;\r\nvar G__39238 = count__39224;\r\nvar G__39239 = (i__39225 + (1));\r\nseq__39222 = G__39236;\r\nchunk__39223 = G__39237;\r\ncount__39224 = G__39238;\r\ni__39225 = G__39239;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto__ = cljs.core.seq(seq__39222);\r\nif(temp__5457__auto__){\r\nvar seq__39222__$1 = temp__5457__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__39222__$1)){\r\nvar c__4351__auto__ = cljs.core.chunk_first(seq__39222__$1);\r\nvar G__39241 = cljs.core.chunk_rest(seq__39222__$1);\r\nvar G__39242 = c__4351__auto__;\r\nvar G__39243 = cljs.core.count(c__4351__auto__);\r\nvar G__39244 = (0);\r\nseq__39222 = G__39241;\r\nchunk__39223 = G__39242;\r\ncount__39224 = G__39243;\r\ni__39225 = G__39244;\r\ncontinue;\r\n} else {\r\nvar e = cljs.core.first(seq__39222__$1);\r\nif(cljs.core.truth_(cljs.core.async.offer_BANG_(queue,e))){\r\n} else {\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1477], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Unable to put request back on network queue during tempid rewrite!\"], 0));\r\n}catch (e39229){if((e39229 instanceof Error)){\r\nvar e__31518__auto___39247 = e39229;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1477], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___39247], 0));\r\n} else {\r\nthrow e39229;\r\n\r\n}\r\n}}\r\n\r\n\r\nvar G__39248 = cljs.core.next(seq__39222__$1);\r\nvar G__39249 = null;\r\nvar G__39250 = (0);\r\nvar G__39251 = (0);\r\nseq__39222 = G__39248;\r\nchunk__39223 = G__39249;\r\ncount__39224 = G__39250;\r\ni__39225 = G__39251;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Removes all fulcro/load and tx/fallback mutations from the query\r\n */\r\nfulcro.client.primitives.remove_loads_and_fallbacks = (function fulcro$client$primitives$remove_loads_and_fallbacks(query){\r\nvar symbols_to_filter = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"fulcro\",\"load\",\"fulcro/load\",-1361504416,null),null,new cljs.core.Symbol(\"fulcro.client.data-fetch\",\"load\",\"fulcro.client.data-fetch/load\",-1506599212,null),null,new cljs.core.Symbol(\"tx\",\"fallback\",\"tx/fallback\",-1892802308,null),null,new cljs.core.Symbol(\"fulcro.client.data-fetch\",\"fallback\",\"fulcro.client.data-fetch/fallback\",1556791555,null),null], null), null);\r\nvar ast = (fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1(query) : fulcro.client.primitives.query__GT_ast.call(null,query));\r\nvar children = new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast);\r\nvar new_children = cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (symbols_to_filter,ast,children){\r\nreturn (function (child){\r\nreturn !(cljs.core.contains_QMARK_(symbols_to_filter,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510).cljs$core$IFn$_invoke$arity$1(child)));\r\n});})(symbols_to_filter,ast,children))\r\n,children);\r\nvar new_ast = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new_children);\r\nreturn (fulcro.client.primitives.ast__GT_query.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.ast__GT_query.cljs$core$IFn$_invoke$arity$1(new_ast) : fulcro.client.primitives.ast__GT_query.call(null,new_ast));\r\n});\r\nfulcro.client.primitives.fallback_tx = (function fulcro$client$primitives$fallback_tx(tx,resp){\r\n\r\nvar symbols_to_find = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"tx\",\"fallback\",\"tx/fallback\",-1892802308,null),null,new cljs.core.Symbol(\"fulcro.client.data-fetch\",\"fallback\",\"fulcro.client.data-fetch/fallback\",1556791555,null),null], null), null);\r\nvar ast = (fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1(tx) : fulcro.client.primitives.query__GT_ast.call(null,tx));\r\nvar children = new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast);\r\nvar new_children = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (symbols_to_find,ast,children){\r\nreturn (function (ast__$1){\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(ast__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.assoc,new cljs.core.Keyword(null,\"execute\",\"execute\",-129499188),true,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([resp], 0));\r\n});})(symbols_to_find,ast,children))\r\n,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (symbols_to_find,ast,children){\r\nreturn (function (child){\r\nreturn cljs.core.contains_QMARK_(symbols_to_find,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510).cljs$core$IFn$_invoke$arity$1(child));\r\n});})(symbols_to_find,ast,children))\r\n,children));\r\nvar new_ast = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new_children);\r\nvar fallback_tx = (fulcro.client.primitives.ast__GT_query.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.ast__GT_query.cljs$core$IFn$_invoke$arity$1(new_ast) : fulcro.client.primitives.ast__GT_query.call(null,new_ast));\r\nif(cljs.core.truth_(cljs.core.not_empty(fallback_tx))){\r\nreturn fallback_tx;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Check the given keyword to see if it is in the :ui namespace.\r\n */\r\nfulcro.client.primitives.is_ui_query_fragment_QMARK_ = (function fulcro$client$primitives$is_ui_query_fragment_QMARK_(kw){\r\nvar kw__$1 = ((cljs.core.map_QMARK_(kw))?cljs.core.first(cljs.core.keys(kw)):kw);\r\nif((kw__$1 instanceof cljs.core.Keyword)){\r\nvar G__39261 = kw__$1;\r\nvar G__39261__$1 = (((G__39261 == null))?null:cljs.core.namespace(G__39261));\r\nif((G__39261__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.re_find(/^ui(?:\\.|$)/,G__39261__$1);\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Returns a new query with fragments that are in the `ui` namespace removed.\r\n */\r\nfulcro.client.primitives.strip_ui = (function fulcro$client$primitives$strip_ui(query){\r\nvar ast = (fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.query__GT_ast.cljs$core$IFn$_invoke$arity$1(query) : fulcro.client.primitives.query__GT_ast.call(null,query));\r\nvar drop_ui_children = ((function (ast){\r\nreturn (function fulcro$client$primitives$strip_ui_$_drop_ui_children(ast_node){\r\nvar children = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (ast){\r\nreturn (function (acc,n){\r\nif(cljs.core.truth_(fulcro.client.primitives.is_ui_query_fragment_QMARK_(new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510).cljs$core$IFn$_invoke$arity$1(n)))){\r\nreturn acc;\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,fulcro$client$primitives$strip_ui_$_drop_ui_children(n));\r\n}\r\n});})(ast))\r\n,cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast_node));\r\nif(cljs.core.seq(children)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast_node,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children);\r\n} else {\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(ast_node,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\n}\r\n});})(ast))\r\n;\r\nvar G__39265 = drop_ui_children(ast);\r\nreturn (fulcro.client.primitives.ast__GT_query.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.ast__GT_query.cljs$core$IFn$_invoke$arity$1(G__39265) : fulcro.client.primitives.ast__GT_query.call(null,G__39265));\r\n});\r\nfulcro.client.primitives.nf = new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912);\r\n/**\r\n * Returns data with meta-data marking it as a leaf in the result.\r\n */\r\nfulcro.client.primitives.as_leaf = (function fulcro$client$primitives$as_leaf(data){\r\nif(cljs.core.coll_QMARK_(data)){\r\nreturn cljs.core.with_meta(data,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"fulcro\",\"leaf\",\"fulcro/leaf\",-2094500471),true], null));\r\n} else {\r\nreturn data;\r\n}\r\n});\r\n/**\r\n * Returns true iff the given data is marked as a leaf in the result (according to the query). Requires pre-marking.\r\n */\r\nfulcro.client.primitives.leaf_QMARK_ = (function fulcro$client$primitives$leaf_QMARK_(data){\r\nreturn ((!(cljs.core.coll_QMARK_(data))) || (cljs.core.empty_QMARK_(data)) || (((cljs.core.coll_QMARK_(data)) && (cljs.core.boolean$(new cljs.core.Keyword(\"fulcro\",\"leaf\",\"fulcro/leaf\",-2094500471).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(data)))))));\r\n});\r\n/**\r\n * Turn a union query into a query that attempts to encompass all possible things that might be queried\r\n */\r\nfulcro.client.primitives.union__GT_query = (function fulcro$client$primitives$union__GT_query(union_query){\r\nreturn cljs.core.vec(cljs.core.set(cljs.core.flatten(cljs.core.vals(union_query))));\r\n});\r\n/**\r\n * Recursively walk the query and response marking anything that was *asked for* in the query but is *not* in the response as missing.\r\n *   The merge process (which happens later in the plumbing) looks for these markers as indicators to remove any existing\r\n *   data in the database (which has provably disappeared).\r\n * \r\n *   The naive approach to data merging (even recursive) would fail to remove such data.\r\n * \r\n *   Returns the result with missing markers in place (which are then used/removed in a later stage).\r\n */\r\nfulcro.client.primitives.mark_missing = (function fulcro$client$primitives$mark_missing(result,query){\r\nvar missing_entity = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"ui\",\"fetch-state\",\"ui/fetch-state\",1030289927),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"type\",\"fulcro.client.impl.data-fetch/type\",296514265),new cljs.core.Keyword(null,\"not-found\",\"not-found\",-629079980)], null)], null);\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (missing_entity){\r\nreturn (function (result__$1,element){\r\nvar element__$1 = ((cljs.core.list_QMARK_(element))?cljs.core.first(element):element\r\n);\r\nvar result_key = (((element__$1 instanceof cljs.core.Keyword))?element__$1:(cljs.core.truth_(fulcro.util.join_QMARK_(element__$1))?fulcro.util.join_key(element__$1):null\r\n));\r\nvar result_value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(result__$1,result_key);\r\nif(((((fulcro.util.ident_QMARK_(result_key)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),cljs.core.second(result_key))))) || (((fulcro.util.ident_QMARK_(element__$1)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),cljs.core.second(element__$1))))))){\r\nreturn result__$1;\r\n} else {\r\nif(cljs.core.truth_(fulcro.client.primitives.is_ui_query_fragment_QMARK_(result_key))){\r\nreturn result__$1;\r\n} else {\r\nif((((element__$1 instanceof cljs.core.Keyword)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(result__$1,element__$1) == null)))){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,element__$1,new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912));\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = fulcro.util.join_QMARK_(element__$1);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn ((typeof fulcro.util.join_value(element__$1) === 'number') || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),fulcro.util.join_value(element__$1))));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nvar k = fulcro.util.join_key(element__$1);\r\nvar result_SINGLEQUOTE_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(result__$1,k);\r\nif((result_SINGLEQUOTE_ == null)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,k,new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912));\r\n} else {\r\nif(cljs.core.vector_QMARK_(result_SINGLEQUOTE_)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,k,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (k,result_SINGLEQUOTE_,element__$1,result_key,result_value,missing_entity){\r\nreturn (function (item){\r\nreturn (fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2(item,query) : fulcro.client.primitives.mark_missing.call(null,item,query));\r\n});})(k,result_SINGLEQUOTE_,element__$1,result_key,result_value,missing_entity))\r\n,result_SINGLEQUOTE_));\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,k,(fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2(result_SINGLEQUOTE_,query) : fulcro.client.primitives.mark_missing.call(null,result_SINGLEQUOTE_,query)));\r\n\r\n}\r\n}\r\n} else {\r\nif(((fulcro.util.ident_QMARK_(element__$1)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(result__$1,element__$1) == null)))){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,element__$1,missing_entity);\r\n} else {\r\nif(fulcro.util.union_QMARK_(element__$1)){\r\nvar v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(result__$1,result_key,new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912));\r\nvar to_one_QMARK_ = cljs.core.map_QMARK_(v);\r\nvar to_many_QMARK_ = cljs.core.vector_QMARK_(v);\r\nvar wide_query = fulcro.client.primitives.union__GT_query(fulcro.util.join_value(element__$1));\r\nif(to_one_QMARK_){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,result_key,(fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2(v,wide_query) : fulcro.client.primitives.mark_missing.call(null,v,wide_query)));\r\n} else {\r\nif(to_many_QMARK_){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,result_key,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (v,to_one_QMARK_,to_many_QMARK_,wide_query,element__$1,result_key,result_value,missing_entity){\r\nreturn (function (i){\r\nreturn (fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2(i,wide_query) : fulcro.client.primitives.mark_missing.call(null,i,wide_query));\r\n});})(v,to_one_QMARK_,to_many_QMARK_,wide_query,element__$1,result_key,result_value,missing_entity))\r\n,v));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912),v)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,result_key,new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912));\r\n} else {\r\nreturn result__$1;\r\n\r\n}\r\n}\r\n}\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = fulcro.util.join_QMARK_(element__$1);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn ((fulcro.util.ident_QMARK_(fulcro.util.join_key(element__$1))) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(result__$1,fulcro.util.join_key(element__$1)) == null)));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nvar mock_missing_object = (function (){var G__39282 = cljs.core.PersistentArrayMap.EMPTY;\r\nvar G__39283 = fulcro.util.join_value(element__$1);\r\nreturn (fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2(G__39282,G__39283) : fulcro.client.primitives.mark_missing.call(null,G__39282,G__39283));\r\n})();\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,fulcro.util.join_key(element__$1),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([mock_missing_object,missing_entity], 0)));\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = fulcro.util.join_QMARK_(element__$1);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912),cljs.core.get.cljs$core$IFn$_invoke$arity$3(result__$1,fulcro.util.join_key(element__$1),new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912)));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,fulcro.util.join_key(element__$1),new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912));\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = fulcro.util.join_QMARK_(element__$1);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn cljs.core.vector_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(result__$1,fulcro.util.join_key(element__$1)));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,fulcro.util.join_key(element__$1),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (element__$1,result_key,result_value,missing_entity){\r\nreturn (function (item){\r\nvar G__39286 = item;\r\nvar G__39287 = fulcro.util.join_value(element__$1);\r\nreturn (fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2(G__39286,G__39287) : fulcro.client.primitives.mark_missing.call(null,G__39286,G__39287));\r\n});})(element__$1,result_key,result_value,missing_entity))\r\n,cljs.core.get.cljs$core$IFn$_invoke$arity$2(result__$1,fulcro.util.join_key(element__$1))));\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = fulcro.util.join_QMARK_(element__$1);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn cljs.core.map_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(result__$1,fulcro.util.join_key(element__$1)));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,fulcro.util.join_key(element__$1),(function (){var G__39289 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(result__$1,fulcro.util.join_key(element__$1));\r\nvar G__39290 = fulcro.util.join_value(element__$1);\r\nreturn (fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2(G__39289,G__39290) : fulcro.client.primitives.mark_missing.call(null,G__39289,G__39290));\r\n})());\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = fulcro.util.join_QMARK_(element__$1);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn ((cljs.core.vector_QMARK_(fulcro.util.join_value(element__$1))) && (!(((cljs.core.map_QMARK_(result_value)) || (cljs.core.vector_QMARK_(result_value))))));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result__$1,result_key,(function (){var G__39292 = cljs.core.PersistentArrayMap.EMPTY;\r\nvar G__39293 = fulcro.util.join_value(element__$1);\r\nreturn (fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.mark_missing.cljs$core$IFn$_invoke$arity$2(G__39292,G__39293) : fulcro.client.primitives.mark_missing.call(null,G__39292,G__39293));\r\n})());\r\n} else {\r\nif(cljs.core.truth_(result_key)){\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(result__$1,result_key,fulcro.client.primitives.as_leaf);\r\n} else {\r\nreturn result__$1;\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});})(missing_entity))\r\n,result,query);\r\n});\r\n/**\r\n * Remove not-found keys from m (non-recursive)\r\n */\r\nfulcro.client.primitives.sweep_one = (function fulcro$client$primitives$sweep_one(m){\r\nif(cljs.core.map_QMARK_(m)){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,p__39310){\r\nvar vec__39311 = p__39310;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39311,(0),null);\r\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39311,(1),null);\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912),k)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912),v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"tempids\",\"fulcro.client.primitives/tempids\",1304031205),k)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),k)))){\r\nreturn acc;\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,k,v);\r\n}\r\n}),cljs.core.with_meta(cljs.core.PersistentArrayMap.EMPTY,cljs.core.meta(m)),m);\r\n} else {\r\nif(cljs.core.vector_QMARK_(m)){\r\nreturn cljs.core.with_meta(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.sweep_one,m),cljs.core.meta(m));\r\n} else {\r\nreturn m;\r\n\r\n}\r\n}\r\n});\r\n/**\r\n * Remove all of the not-found keys (recursively) from v, stopping at marked leaves (if present)\r\n */\r\nfulcro.client.primitives.sweep = (function fulcro$client$primitives$sweep(m){\r\nif(cljs.core.truth_(fulcro.client.primitives.leaf_QMARK_(m))){\r\nreturn fulcro.client.primitives.sweep_one(m);\r\n} else {\r\nif(cljs.core.map_QMARK_(m)){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,p__39319){\r\nvar vec__39321 = p__39319;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39321,(0),null);\r\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39321,(1),null);\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912),k)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912),v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"tempids\",\"fulcro.client.primitives/tempids\",1304031205),k)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),k)))){\r\nreturn acc;\r\n} else {\r\nif(((fulcro.util.ident_QMARK_(v)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912),cljs.core.second(v))))){\r\nreturn acc;\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,k,(fulcro.client.primitives.sweep.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.sweep.cljs$core$IFn$_invoke$arity$1(v) : fulcro.client.primitives.sweep.call(null,v)));\r\n\r\n}\r\n}\r\n}),cljs.core.with_meta(cljs.core.PersistentArrayMap.EMPTY,cljs.core.meta(m)),m);\r\n} else {\r\nif(cljs.core.vector_QMARK_(m)){\r\nreturn cljs.core.with_meta(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.sweep,m),cljs.core.meta(m));\r\n} else {\r\nreturn m;\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Do a recursive merge of source into target, but remove any target data that is marked as missing in the response. The\r\n *   missing marker is generated in the source when something has been asked for in the query, but had no value in the\r\n *   response. This allows us to correctly remove 'empty' data from the database without accidentally removing something\r\n *   that may still exist on the server (in truth we don't know its status, since it wasn't asked for, but we leave\r\n *   it as our 'best guess')\r\n */\r\nfulcro.client.primitives.sweep_merge = (function fulcro$client$primitives$sweep_merge(target,source){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,p__39328){\r\nvar vec__39329 = p__39328;\r\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39329,(0),null);\r\nvar new_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39329,(1),null);\r\nvar existing_value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(acc,key);\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,new cljs.core.Keyword(\"fulcro.client.primitives\",\"tempids\",\"fulcro.client.primitives/tempids\",1304031205))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912))))){\r\nreturn acc;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new_value,new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912))){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(acc,key);\r\n} else {\r\nif(((fulcro.util.ident_QMARK_(new_value)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"not-found\",\"fulcro.client.primitives/not-found\",941693912),cljs.core.second(new_value))))){\r\nreturn acc;\r\n} else {\r\nif(cljs.core.truth_(fulcro.client.primitives.leaf_QMARK_(new_value))){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,key,fulcro.client.primitives.sweep_one(new_value));\r\n} else {\r\nif(((cljs.core.map_QMARK_(existing_value)) && (cljs.core.map_QMARK_(new_value)))){\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(acc,key,fulcro.client.primitives.sweep_merge,new_value);\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,key,fulcro.client.primitives.sweep(new_value));\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}),target,source);\r\n});\r\n/**\r\n * Handle merging incoming data, but be sure to sweep it of values that are marked missing. Also triggers the given mutation-merge\r\n *   if available.\r\n */\r\nfulcro.client.primitives.merge_handler = (function fulcro$client$primitives$merge_handler(mutation_merge,target,source){\r\nvar source_to_merge = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__39338){\r\nvar vec__39339 = p__39338;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39339,(0),null);\r\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39339,(1),null);\r\nreturn !((k instanceof cljs.core.Symbol));\r\n}),source));\r\nvar merged_state = fulcro.client.primitives.sweep_merge(target,source_to_merge);\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (source_to_merge,merged_state){\r\nreturn (function (acc,p__39344){\r\nvar vec__39345 = p__39344;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39345,(0),null);\r\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39345,(1),null);\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = mutation_merge;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn (k instanceof cljs.core.Symbol);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nvar temp__5455__auto__ = (function (){var G__39348 = acc;\r\nvar G__39349 = k;\r\nvar G__39350 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(v,new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"fulcro.client.primitives\",\"tempids\",\"fulcro.client.primitives/tempids\",1304031205)], 0));\r\nreturn (mutation_merge.cljs$core$IFn$_invoke$arity$3 ? mutation_merge.cljs$core$IFn$_invoke$arity$3(G__39348,G__39349,G__39350) : mutation_merge.call(null,G__39348,G__39349,G__39350));\r\n})();\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar updated_state = temp__5455__auto__;\r\nreturn updated_state;\r\n} else {\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1693], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Return value handler for\",k,\"returned nil. Ignored.\"], 0));\r\n}catch (e39351){if((e39351 instanceof Error)){\r\nvar e__31518__auto___39356 = e39351;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1693], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___39356], 0));\r\n} else {\r\nthrow e39351;\r\n\r\n}\r\n}\r\nreturn acc;\r\n}\r\n} else {\r\nreturn acc;\r\n}\r\n});})(source_to_merge,merged_state))\r\n,merged_state,source);\r\n});\r\n/**\r\n * Merge all of the mutations that were joined with a query\r\n */\r\nfulcro.client.primitives.merge_mutation_joins = (function fulcro$client$primitives$merge_mutation_joins(state,query,data_tree){\r\nif(cljs.core.map_QMARK_(data_tree)){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (updated_state,query_element){\r\nvar k = (function (){var and__3938__auto__ = fulcro.util.mutation_join_QMARK_(query_element);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn fulcro.util.join_key(query_element);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})();\r\nvar subtree = cljs.core.get.cljs$core$IFn$_invoke$arity$2(data_tree,k);\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = k;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn subtree;\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nvar subquery = fulcro.util.join_value(query_element);\r\nvar target = new cljs.core.Keyword(\"fulcro.client.impl.data-fetch\",\"target\",\"fulcro.client.impl.data-fetch/target\",1805324748).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(subquery));\r\nvar idnt = new cljs.core.Keyword(\"fulcro.client.primitives\",\"temporary-key\",\"fulcro.client.primitives/temporary-key\",485271105);\r\nvar norm_query = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([idnt,subquery])], null);\r\nvar norm_tree = cljs.core.PersistentArrayMap.createAsIfByAssoc([idnt,subtree]);\r\nvar norm_tree_marked = fulcro.client.primitives.mark_missing(norm_tree,norm_query);\r\nvar db = fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3(norm_query,norm_tree_marked,true);\r\nvar G__39360 = fulcro.client.primitives.sweep_merge(updated_state,db);\r\nvar G__39360__$1 = (cljs.core.truth_(target)?fulcro.client.impl.data_targeting.process_target.cljs$core$IFn$_invoke$arity$3(G__39360,idnt,target):G__39360);\r\nif(cljs.core.not(target)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__39360__$1,db,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([idnt], 0));\r\n} else {\r\nreturn G__39360__$1;\r\n}\r\n} else {\r\nreturn updated_state;\r\n}\r\n}),state,query);\r\n} else {\r\nreturn state;\r\n}\r\n});\r\nfulcro.client.primitives.merge_idents = (function fulcro$client$primitives$merge_idents(tree,config,refs,query){\r\nvar map__39368 = config;\r\nvar map__39368__$1 = ((((!((map__39368 == null)))?(((((map__39368.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39368.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39368):map__39368);\r\nvar merge_ident = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39368__$1,new cljs.core.Keyword(null,\"merge-ident\",\"merge-ident\",1040841862));\r\nvar indexer = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39368__$1,new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315));\r\nvar ident_joins = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (map__39368,map__39368__$1,merge_ident,indexer){\r\nreturn (function (p1__39366_SHARP_){\r\nvar G__39371 = p1__39366_SHARP_;\r\nif(cljs.core.seq_QMARK_(p1__39366_SHARP_)){\r\nreturn cljs.core.first(G__39371);\r\n} else {\r\nreturn G__39371;\r\n}\r\n});})(map__39368,map__39368__$1,merge_ident,indexer))\r\n),cljs.core.filter.cljs$core$IFn$_invoke$arity$1(((function (map__39368,map__39368__$1,merge_ident,indexer){\r\nreturn (function (p1__39367_SHARP_){\r\nvar and__3938__auto__ = fulcro.util.join_QMARK_(p1__39367_SHARP_);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn fulcro.util.ident_QMARK_(fulcro.util.join_key(p1__39367_SHARP_));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n});})(map__39368,map__39368__$1,merge_ident,indexer))\r\n)),query);\r\nvar step = ((function (map__39368,map__39368__$1,merge_ident,indexer,ident_joins){\r\nreturn (function fulcro$client$primitives$merge_idents_$_step(tree_SINGLEQUOTE_,p__39381){\r\nvar vec__39382 = p__39381;\r\nvar ident = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39382,(0),null);\r\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39382,(1),null);\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"normalize\",\"normalize\",-1904390051).cljs$core$IFn$_invoke$arity$1(config))){\r\nvar c_or_q = (function (){var or__3949__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ident_joins,ident);\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn fulcro.client.primitives.ref__GT_any(indexer,ident);\r\n}\r\n})();\r\nvar props_SINGLEQUOTE_ = fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$2(c_or_q,props);\r\nvar refs__$1 = cljs.core.meta(props_SINGLEQUOTE_);\r\nvar G__39386 = (merge_ident.cljs$core$IFn$_invoke$arity$4 ? merge_ident.cljs$core$IFn$_invoke$arity$4(config,tree_SINGLEQUOTE_,ident,props_SINGLEQUOTE_) : merge_ident.call(null,config,tree_SINGLEQUOTE_,ident,props_SINGLEQUOTE_));\r\nvar G__39387 = refs__$1;\r\nvar fexpr__39385 = new cljs.core.Keyword(null,\"merge-tree\",\"merge-tree\",-127861161).cljs$core$IFn$_invoke$arity$1(config);\r\nreturn (fexpr__39385.cljs$core$IFn$_invoke$arity$2 ? fexpr__39385.cljs$core$IFn$_invoke$arity$2(G__39386,G__39387) : fexpr__39385.call(null,G__39386,G__39387));\r\n} else {\r\nreturn (merge_ident.cljs$core$IFn$_invoke$arity$4 ? merge_ident.cljs$core$IFn$_invoke$arity$4(config,tree_SINGLEQUOTE_,ident,props) : merge_ident.call(null,config,tree_SINGLEQUOTE_,ident,props));\r\n}\r\n});})(map__39368,map__39368__$1,merge_ident,indexer,ident_joins))\r\n;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step,tree,refs);\r\n});\r\nfulcro.client.primitives.merge_novelty = (function fulcro$client$primitives$merge_novelty(var_args){\r\nvar G__39398 = arguments.length;\r\nswitch (G__39398) {\r\ncase 5:\r\nreturn fulcro.client.primitives.merge_novelty.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn fulcro.client.primitives.merge_novelty.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.merge_novelty.cljs$core$IFn$_invoke$arity$5 = (function (reconciler,state_map,result_tree,query,tempids){\r\nvar state = (function (){var temp__5455__auto__ = new cljs.core.Keyword(null,\"migrate\",\"migrate\",-207110743).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"config\",\"config\",994861415).cljs$core$IFn$_invoke$arity$1(reconciler));\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar migrate = temp__5455__auto__;\r\nvar root_component = (fulcro.client.primitives.app_root.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.app_root.cljs$core$IFn$_invoke$arity$1(reconciler) : fulcro.client.primitives.app_root.call(null,reconciler));\r\nvar root_query = (cljs.core.truth_(query)?null:fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2(root_component,state_map));\r\nvar G__39400 = state_map;\r\nvar G__39401 = (function (){var or__3949__auto__ = query;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn root_query;\r\n}\r\n})();\r\nvar G__39402 = tempids;\r\nreturn (migrate.cljs$core$IFn$_invoke$arity$3 ? migrate.cljs$core$IFn$_invoke$arity$3(G__39400,G__39401,G__39402) : migrate.call(null,G__39400,G__39401,G__39402));\r\n} else {\r\nreturn state_map;\r\n}\r\n})();\r\nreturn fulcro.client.primitives.merge_novelty.cljs$core$IFn$_invoke$arity$4(reconciler,state,result_tree,query);\r\n});\r\n\r\nfulcro.client.primitives.merge_novelty.cljs$core$IFn$_invoke$arity$4 = (function (reconciler,state_map,result_tree,query){\r\nvar config = new cljs.core.Keyword(null,\"config\",\"config\",994861415).cljs$core$IFn$_invoke$arity$1(reconciler);\r\nvar vec__39405 = fulcro.client.primitives.sift_idents(result_tree);\r\nvar idts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39405,(0),null);\r\nvar result_tree__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39405,(1),null);\r\nvar normalized_result = (cljs.core.truth_(new cljs.core.Keyword(null,\"normalize\",\"normalize\",-1904390051).cljs$core$IFn$_invoke$arity$1(config))?fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3((function (){var or__3949__auto__ = query;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"root\",\"root\",-448657453).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(reconciler)));\r\n}\r\n})(),result_tree__$1,true):result_tree__$1);\r\nvar G__39409 = fulcro.client.primitives.merge_idents(fulcro.client.primitives.merge_mutation_joins(state_map,query,result_tree__$1),config,idts,query);\r\nvar G__39410 = normalized_result;\r\nvar fexpr__39408 = new cljs.core.Keyword(null,\"merge-tree\",\"merge-tree\",-127861161).cljs$core$IFn$_invoke$arity$1(config);\r\nreturn (fexpr__39408.cljs$core$IFn$_invoke$arity$2 ? fexpr__39408.cljs$core$IFn$_invoke$arity$2(G__39409,G__39410) : fexpr__39408.call(null,G__39409,G__39410));\r\n});\r\n\r\nfulcro.client.primitives.merge_novelty.cljs$lang$maxFixedArity = 5;\r\n\r\nfulcro.client.primitives.get_tempids = (function fulcro$client$primitives$get_tempids(m){\r\nvar or__3949__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089));\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,new cljs.core.Keyword(\"fulcro.client.primitives\",\"tempids\",\"fulcro.client.primitives/tempids\",1304031205));\r\n}\r\n});\r\n/**\r\n * Internal implementation of merge. Given a reconciler, state (map), result, and query returns a map of the:\r\n * \r\n *   `:keys` to refresh\r\n *   `:next` state\r\n *   and `::tempids` that need to be migrated\r\n */\r\nfulcro.client.primitives.merge_STAR_ = (function fulcro$client$primitives$merge_STAR_(reconciler,state,res,query){\r\nvar tempids = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.merge,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.get_tempids,cljs.core.second),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol_QMARK_,cljs.core.first),res)));\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol_QMARK_),cljs.core.keys(res)),new cljs.core.Keyword(null,\"next\",\"next\",-117701485),fulcro.client.primitives.merge_novelty.cljs$core$IFn$_invoke$arity$5(reconciler,state,res,query,tempids),new cljs.core.Keyword(\"fulcro.client.primitives\",\"tempids\",\"fulcro.client.primitives/tempids\",1304031205),tempids], null);\r\n});\r\n/**\r\n * Merge an arbitrary data-tree that conforms to the shape of the given query.\r\n * \r\n *   query - A query, derived from defui components, that can be used to normalized a tree of data.\r\n *   data-tree - A tree of data that matches the nested shape of query\r\n *   remote - No longer used. May be passed, but is ignored.\r\n */\r\nfulcro.client.primitives.merge_BANG_ = (function fulcro$client$primitives$merge_BANG_(var_args){\r\nvar G__39426 = arguments.length;\r\nswitch (G__39426) {\r\ncase 2:\r\nreturn fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (reconciler,data_tree){\r\nreturn fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$3(reconciler,data_tree,null);\r\n});\r\n\r\nfulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (reconciler,data_tree,query){\r\nreturn fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$4(reconciler,data_tree,query,null);\r\n});\r\n\r\nfulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$4 = (function (reconciler,data_tree,query,remote){\r\nvar tx = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.mutations\",\"merge!\",\"fulcro.client.mutations/merge!\",137581651,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"data-tree\",\"data-tree\",1311167582),data_tree,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),query,new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576),remote], null),null,(1),null))))),null,(1),null))))));\r\nreturn (fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2(reconciler,tx) : fulcro.client.primitives.transact_BANG_.call(null,reconciler,tx));\r\n});\r\n\r\nfulcro.client.primitives.merge_BANG_.cljs$lang$maxFixedArity = 4;\r\n\r\n/**\r\n * Build an index from property to class using the (annotated) query.\r\n */\r\nfulcro.client.primitives.build_prop__GT_class_index_BANG_ = (function fulcro$client$primitives$build_prop__GT_class_index_BANG_(prop__GT_classes,query){\r\nreturn clojure.walk.prewalk((function fulcro$client$primitives$build_prop__GT_class_index_BANG__$_index_walk_helper(ele){\r\nvar temp__5457__auto___39442 = (function (){var G__39436 = ele;\r\nvar G__39436__$1 = (((G__39436 == null))?null:cljs.core.meta(G__39436));\r\nif((G__39436__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"component\",\"component\",1555936782).cljs$core$IFn$_invoke$arity$1(G__39436__$1);\r\n}\r\n})();\r\nif(cljs.core.truth_(temp__5457__auto___39442)){\r\nvar component_39445 = temp__5457__auto___39442;\r\nvar ks_39446 = fulcro.client.primitives.gather_keys(ele);\r\nvar seq__39437_39447 = cljs.core.seq(ks_39446);\r\nvar chunk__39438_39448 = null;\r\nvar count__39439_39449 = (0);\r\nvar i__39440_39450 = (0);\r\nwhile(true){\r\nif((i__39440_39450 < count__39439_39449)){\r\nvar k_39451 = chunk__39438_39448.cljs$core$IIndexed$_nth$arity$2(null,i__39440_39450);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(prop__GT_classes,cljs.core.update,k_39451,cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([component_39445], 0));\r\n\r\n\r\nvar G__39453 = seq__39437_39447;\r\nvar G__39454 = chunk__39438_39448;\r\nvar G__39455 = count__39439_39449;\r\nvar G__39456 = (i__39440_39450 + (1));\r\nseq__39437_39447 = G__39453;\r\nchunk__39438_39448 = G__39454;\r\ncount__39439_39449 = G__39455;\r\ni__39440_39450 = G__39456;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto___39457__$1 = cljs.core.seq(seq__39437_39447);\r\nif(temp__5457__auto___39457__$1){\r\nvar seq__39437_39459__$1 = temp__5457__auto___39457__$1;\r\nif(cljs.core.chunked_seq_QMARK_(seq__39437_39459__$1)){\r\nvar c__4351__auto___39461 = cljs.core.chunk_first(seq__39437_39459__$1);\r\nvar G__39462 = cljs.core.chunk_rest(seq__39437_39459__$1);\r\nvar G__39463 = c__4351__auto___39461;\r\nvar G__39464 = cljs.core.count(c__4351__auto___39461);\r\nvar G__39465 = (0);\r\nseq__39437_39447 = G__39462;\r\nchunk__39438_39448 = G__39463;\r\ncount__39439_39449 = G__39464;\r\ni__39440_39450 = G__39465;\r\ncontinue;\r\n} else {\r\nvar k_39466 = cljs.core.first(seq__39437_39459__$1);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(prop__GT_classes,cljs.core.update,k_39466,cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([component_39445], 0));\r\n\r\n\r\nvar G__39467 = cljs.core.next(seq__39437_39459__$1);\r\nvar G__39468 = null;\r\nvar G__39469 = (0);\r\nvar G__39470 = (0);\r\nseq__39437_39447 = G__39467;\r\nchunk__39438_39448 = G__39468;\r\ncount__39439_39449 = G__39469;\r\ni__39440_39450 = G__39470;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\n}\r\n\r\nreturn ele;\r\n}),query);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {fulcro.client.impl.protocols.IIndexer}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\nfulcro.client.primitives.Indexer = (function (indexes,__meta,__extmap,__hash){\r\nthis.indexes = indexes;\r\nthis.__meta = __meta;\r\nthis.__extmap = __extmap;\r\nthis.__hash = __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2229700362;\r\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\r\n});\r\nfulcro.client.primitives.Indexer.prototype.fulcro$client$impl$protocols$IIndexer$ = cljs.core.PROTOCOL_SENTINEL;\r\n\r\nfulcro.client.primitives.Indexer.prototype.fulcro$client$impl$protocols$IIndexer$indexes$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn new cljs.core.Keyword(null,\"indexes\",\"indexes\",1496475545).cljs$core$IFn$_invoke$arity$1(this$__$1);\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.fulcro$client$impl$protocols$IIndexer$index_root$arity$2 = (function (this$,root_class){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(this$__$1))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"State map is in `this` for indexing root\",\"\\n\",\"(:state this)\"].join('')));\r\n}\r\n\r\nvar prop__GT_classes = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar state_map = cljs.core.get.cljs$core$IFn$_invoke$arity$2(this$__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\r\nvar rootq = fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$2(root_class,null),state_map);\r\nfulcro.client.primitives.build_prop__GT_class_index_BANG_(prop__GT_classes,rootq);\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.indexes,cljs.core.merge,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717),cljs.core.deref(prop__GT_classes)], null));\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.fulcro$client$impl$protocols$IIndexer$index_component_BANG_$arity$2 = (function (_,c){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.indexes,((function (___$1){\r\nreturn (function fulcro$client$primitives$component_indexer(indexes__$1){\r\nvar indexes__$2 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(indexes__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919),fulcro.client.primitives.react_type(c)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),c);\r\nvar ident = ((((!((c == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === c.fulcro$client$primitives$Ident$))))?true:false):false))?(function (){var ident = fulcro.client.primitives.ident(c,fulcro.client.primitives.props(c));\r\nif(fulcro.util.ident_QMARK_(ident)){\r\n} else {\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1822], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"malformed Ident. An ident must be a vector of \",\"two elements (a keyword and an EDN value). Check \",\"the Ident implementation of component `\",c.constructor.displayName,\"`.\"], 0));\r\n}catch (e39484){if((e39484 instanceof Error)){\r\nvar e__31518__auto___39518 = e39484;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1822], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___39518], 0));\r\n} else {\r\nthrow e39484;\r\n\r\n}\r\n}}\r\n\r\nif(!((cljs.core.second(ident) == null))){\r\n} else {\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1828], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"component \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(c.constructor.displayName),\"'s ident (\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ident),\") has a `nil` second element.\",\" This warning can be safely ignored if that is intended.\"].join('')], 0));\r\n}catch (e39486){if((e39486 instanceof Error)){\r\nvar e__31518__auto___39520 = e39486;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1828], null),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___39520], 0));\r\n} else {\r\nthrow e39486;\r\n\r\n}\r\n}}\r\n\r\nreturn ident;\r\n})():null);\r\nif(!((ident == null))){\r\nvar G__39489 = indexes__$2;\r\nif(cljs.core.truth_(ident)){\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__39489,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref->components\",\"ref->components\",-303587249),ident], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),c);\r\n} else {\r\nreturn G__39489;\r\n}\r\n} else {\r\nreturn indexes__$2;\r\n}\r\n});})(___$1))\r\n);\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.fulcro$client$impl$protocols$IIndexer$drop_component_BANG_$arity$2 = (function (_,c){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.indexes,((function (___$1){\r\nreturn (function fulcro$client$primitives$drop_component_helper(indexes__$1){\r\nvar indexes__$2 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(indexes__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919),fulcro.client.primitives.react_type(c)], null),cljs.core.disj,c);\r\nvar ident = ((((!((c == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === c.fulcro$client$primitives$Ident$))))?true:false):false))?fulcro.client.primitives.ident(c,fulcro.client.primitives.props(c)):null);\r\nif(!((ident == null))){\r\nvar G__39492 = indexes__$2;\r\nif(cljs.core.truth_(ident)){\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__39492,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref->components\",\"ref->components\",-303587249),ident], null),cljs.core.disj,c);\r\n} else {\r\nreturn G__39492;\r\n}\r\n} else {\r\nreturn indexes__$2;\r\n}\r\n});})(___$1))\r\n);\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.fulcro$client$impl$protocols$IIndexer$key__GT_components$arity$2 = (function (_,k){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nvar indexes__$1 = cljs.core.deref(self__.indexes);\r\nif(fulcro.client.primitives.component_QMARK_(k)){\r\nreturn cljs.core.PersistentHashSet.createAsIfByAssoc([k]);\r\n} else {\r\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (indexes__$1,___$1){\r\nreturn (function (p1__39472_SHARP_){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(indexes__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919),p1__39472_SHARP_], null));\r\n});})(indexes__$1,___$1))\r\n),cljs.core.completing.cljs$core$IFn$_invoke$arity$1(cljs.core.into),cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(indexes__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref->components\",\"ref->components\",-303587249),k], null),cljs.core.PersistentHashSet.EMPTY),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(indexes__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717),k], null)));\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4203__auto__,k__4204__auto__){\r\nvar self__ = this;\r\nvar this__4203__auto____$1 = this;\r\nreturn cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this__4203__auto____$1,k__4204__auto__,null);\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4205__auto__,k39474,else__4206__auto__){\r\nvar self__ = this;\r\nvar this__4205__auto____$1 = this;\r\nvar G__39496 = k39474;\r\nvar G__39496__$1 = (((G__39496 instanceof cljs.core.Keyword))?G__39496.fqn:null);\r\nswitch (G__39496__$1) {\r\ncase \"indexes\":\r\nreturn self__.indexes;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k39474,else__4206__auto__);\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4217__auto__,writer__4218__auto__,opts__4219__auto__){\r\nvar self__ = this;\r\nvar this__4217__auto____$1 = this;\r\nvar pr_pair__4220__auto__ = ((function (this__4217__auto____$1){\r\nreturn (function (keyval__4221__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4218__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4219__auto__,keyval__4221__auto__);\r\n});})(this__4217__auto____$1))\r\n;\r\nreturn cljs.core.pr_sequential_writer(writer__4218__auto__,pr_pair__4220__auto__,\"#fulcro.client.primitives.Indexer{\",\", \",\"}\",opts__4219__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"indexes\",\"indexes\",1496475545),self__.indexes],null))], null),self__.__extmap));\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__39473){\r\nvar self__ = this;\r\nvar G__39473__$1 = this;\r\nreturn (new cljs.core.RecordIter((0),G__39473__$1,1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"indexes\",\"indexes\",1496475545)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4201__auto__){\r\nvar self__ = this;\r\nvar this__4201__auto____$1 = this;\r\nreturn self__.__meta;\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4198__auto__){\r\nvar self__ = this;\r\nvar this__4198__auto____$1 = this;\r\nreturn (new fulcro.client.primitives.Indexer(self__.indexes,self__.__meta,self__.__extmap,self__.__hash));\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4207__auto__){\r\nvar self__ = this;\r\nvar this__4207__auto____$1 = this;\r\nreturn (1 + cljs.core.count(self__.__extmap));\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4199__auto__){\r\nvar self__ = this;\r\nvar this__4199__auto____$1 = this;\r\nvar h__4061__auto__ = self__.__hash;\r\nif(!((h__4061__auto__ == null))){\r\nreturn h__4061__auto__;\r\n} else {\r\nvar h__4061__auto____$1 = (function (){var fexpr__39500 = ((function (h__4061__auto__,this__4199__auto____$1){\r\nreturn (function (coll__4200__auto__){\r\nreturn (-535195966 ^ cljs.core.hash_unordered_coll(coll__4200__auto__));\r\n});})(h__4061__auto__,this__4199__auto____$1))\r\n;\r\nreturn fexpr__39500(this__4199__auto____$1);\r\n})();\r\nself__.__hash = h__4061__auto____$1;\r\n\r\nreturn h__4061__auto____$1;\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this39475,other39476){\r\nvar self__ = this;\r\nvar this39475__$1 = this;\r\nreturn ((!((other39476 == null))) && ((this39475__$1.constructor === other39476.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this39475__$1.indexes,other39476.indexes)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this39475__$1.__extmap,other39476.__extmap)));\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4212__auto__,k__4213__auto__){\r\nvar self__ = this;\r\nvar this__4212__auto____$1 = this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"indexes\",\"indexes\",1496475545),null], null), null),k__4213__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4212__auto____$1),self__.__meta),k__4213__auto__);\r\n} else {\r\nreturn (new fulcro.client.primitives.Indexer(self__.indexes,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4213__auto__)),null));\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4210__auto__,k__4211__auto__,G__39473){\r\nvar self__ = this;\r\nvar this__4210__auto____$1 = this;\r\nvar pred__39504 = cljs.core.keyword_identical_QMARK_;\r\nvar expr__39505 = k__4211__auto__;\r\nif(cljs.core.truth_((function (){var G__39507 = new cljs.core.Keyword(null,\"indexes\",\"indexes\",1496475545);\r\nvar G__39508 = expr__39505;\r\nreturn (pred__39504.cljs$core$IFn$_invoke$arity$2 ? pred__39504.cljs$core$IFn$_invoke$arity$2(G__39507,G__39508) : pred__39504.call(null,G__39507,G__39508));\r\n})())){\r\nreturn (new fulcro.client.primitives.Indexer(G__39473,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new fulcro.client.primitives.Indexer(self__.indexes,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4211__auto__,G__39473),null));\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4215__auto__){\r\nvar self__ = this;\r\nvar this__4215__auto____$1 = this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"indexes\",\"indexes\",1496475545),self__.indexes,null))], null),self__.__extmap));\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4202__auto__,G__39473){\r\nvar self__ = this;\r\nvar this__4202__auto____$1 = this;\r\nreturn (new fulcro.client.primitives.Indexer(self__.indexes,G__39473,self__.__extmap,self__.__hash));\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4208__auto__,entry__4209__auto__){\r\nvar self__ = this;\r\nvar this__4208__auto____$1 = this;\r\nif(cljs.core.vector_QMARK_(entry__4209__auto__)){\r\nreturn cljs.core._assoc(this__4208__auto____$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4209__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4209__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4208__auto____$1,entry__4209__auto__);\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Indexer.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.deref(self__.indexes);\r\n});\r\n\r\nfulcro.client.primitives.Indexer.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"indexes\",\"indexes\",-1157960224,null)], null);\r\n});\r\n\r\nfulcro.client.primitives.Indexer.cljs$lang$type = true;\r\n\r\nfulcro.client.primitives.Indexer.cljs$lang$ctorPrSeq = (function (this__4240__auto__){\r\nreturn (new cljs.core.List(null,\"fulcro.client.primitives/Indexer\",null,(1),null));\r\n});\r\n\r\nfulcro.client.primitives.Indexer.cljs$lang$ctorPrWriter = (function (this__4240__auto__,writer__4241__auto__){\r\nreturn cljs.core._write(writer__4241__auto__,\"fulcro.client.primitives/Indexer\");\r\n});\r\n\r\n/**\r\n * Positional factory function for fulcro.client.primitives/Indexer.\r\n */\r\nfulcro.client.primitives.__GT_Indexer = (function fulcro$client$primitives$__GT_Indexer(indexes){\r\nreturn (new fulcro.client.primitives.Indexer(indexes,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for fulcro.client.primitives/Indexer, taking a map of keywords to field values.\r\n */\r\nfulcro.client.primitives.map__GT_Indexer = (function fulcro$client$primitives$map__GT_Indexer(G__39477){\r\nvar extmap__4236__auto__ = (function (){var G__39512 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(G__39477,new cljs.core.Keyword(null,\"indexes\",\"indexes\",1496475545));\r\nif(cljs.core.record_QMARK_(G__39477)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__39512);\r\n} else {\r\nreturn G__39512;\r\n}\r\n})();\r\nreturn (new fulcro.client.primitives.Indexer(new cljs.core.Keyword(null,\"indexes\",\"indexes\",1496475545).cljs$core$IFn$_invoke$arity$1(G__39477),null,cljs.core.not_empty(extmap__4236__auto__),null));\r\n});\r\n\r\nfulcro.client.primitives.to_env = (function fulcro$client$primitives$to_env(x){\r\nvar config = ((fulcro.client.primitives.reconciler_QMARK_(x))?new cljs.core.Keyword(null,\"config\",\"config\",994861415).cljs$core$IFn$_invoke$arity$1(x):x);\r\nreturn cljs.core.select_keys(config,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"shared\",\"shared\",-384145993),new cljs.core.Keyword(null,\"parser\",\"parser\",-1543495310)], null));\r\n});\r\n/**\r\n * Given an environment, a query and a set of remotes return a hash map of remotes\r\n * mapped to the query specific to that remote.\r\n */\r\nfulcro.client.primitives.gather_sends = (function fulcro$client$primitives$gather_sends(p__39543,q,remotes,tx_time){\r\nvar map__39544 = p__39543;\r\nvar map__39544__$1 = ((((!((map__39544 == null)))?(((((map__39544.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39544.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39544):map__39544);\r\nvar env = map__39544__$1;\r\nvar parser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39544__$1,new cljs.core.Keyword(null,\"parser\",\"parser\",-1543495310));\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (map__39544,map__39544__$1,env,parser){\r\nreturn (function (p1__39541_SHARP_){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__39541_SHARP_,(function (){var G__39546 = (parser.cljs$core$IFn$_invoke$arity$3 ? parser.cljs$core$IFn$_invoke$arity$3(env,q,p1__39541_SHARP_) : parser.call(null,env,q,p1__39541_SHARP_));\r\nif((G__39546 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__39546,cljs.core.assoc,new cljs.core.Keyword(\"fulcro.history\",\"tx-time\",\"fulcro.history/tx-time\",816348456),tx_time);\r\n}\r\n})()],null));\r\n});})(map__39544,map__39544__$1,env,parser))\r\n),cljs.core.filter.cljs$core$IFn$_invoke$arity$1(((function (map__39544,map__39544__$1,env,parser){\r\nreturn (function (p__39547){\r\nvar vec__39548 = p__39547;\r\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39548,(0),null);\r\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39548,(1),null);\r\nreturn (cljs.core.count(v) > (0));\r\n});})(map__39544,map__39544__$1,env,parser))\r\n)),remotes);\r\n});\r\nfulcro.client.primitives.schedule_sends_BANG_ = (function fulcro$client$primitives$schedule_sends_BANG_(reconciler){\r\nif(cljs.core.truth_(fulcro.client.impl.protocols.schedule_sends_BANG_(reconciler))){\r\nreturn setTimeout((function (){\r\nreturn fulcro.client.impl.protocols.send_BANG_(reconciler);\r\n}),(0));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nfulcro.client.primitives.queue_render_BANG_ = (function fulcro$client$primitives$queue_render_BANG_(f){\r\nif(cljs.core.fn_QMARK_(fulcro.client.primitives._STAR_raf_STAR_)){\r\nreturn (fulcro.client.primitives._STAR_raf_STAR_.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives._STAR_raf_STAR_.cljs$core$IFn$_invoke$arity$1(f) : fulcro.client.primitives._STAR_raf_STAR_.call(null,f));\r\n} else {\r\nif(!((typeof requestAnimationFrame !== 'undefined'))){\r\nreturn setTimeout(f,(16));\r\n} else {\r\nreturn requestAnimationFrame(f);\r\n\r\n}\r\n}\r\n});\r\nfulcro.client.primitives.schedule_render_BANG_ = (function fulcro$client$primitives$schedule_render_BANG_(reconciler){\r\nif(cljs.core.truth_(fulcro.client.impl.protocols.schedule_render_BANG_(reconciler))){\r\nreturn fulcro.client.primitives.queue_render_BANG_((function (){\r\nreturn fulcro.client.impl.protocols.reconcile_BANG_.cljs$core$IFn$_invoke$arity$1(reconciler);\r\n}));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Returns true if the component is mounted.\r\n */\r\nfulcro.client.primitives.mounted_QMARK_ = (function fulcro$client$primitives$mounted_QMARK_(x){\r\nreturn ((fulcro.client.primitives.component_QMARK_(x)) && (cljs.core.boolean$(goog.object.get(x,\"fulcro$mounted\"))));\r\n});\r\n/**\r\n * Finds props for a given component. Returns ::no-ident if the component has\r\n *   no ident (which prevents localized update). This eliminates the need for\r\n *   path data.\r\n */\r\nfulcro.client.primitives.fulcro_ui__GT_props = (function fulcro$client$primitives$fulcro_ui__GT_props(p__39563,c){\r\nvar map__39564 = p__39563;\r\nvar map__39564__$1 = ((((!((map__39564 == null)))?(((((map__39564.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39564.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39564):map__39564);\r\nvar env = map__39564__$1;\r\nvar parser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39564__$1,new cljs.core.Keyword(null,\"parser\",\"parser\",-1543495310));\r\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39564__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\r\nvar ui = ((((!((c == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === c.fulcro$client$primitives$Ident$))))?true:false):false))?(function (){var id = fulcro.client.primitives.ident(c,fulcro.client.primitives.props(c));\r\nvar has_tempid_QMARK_ = (function (){var G__39569 = cljs.core.second(id);\r\nreturn (fulcro.client.primitives.tempid_QMARK_.cljs$core$IFn$_invoke$arity$1 ? fulcro.client.primitives.tempid_QMARK_.cljs$core$IFn$_invoke$arity$1(G__39569) : fulcro.client.primitives.tempid_QMARK_.call(null,G__39569));\r\n})();\r\nvar query = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([id,fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2(c,cljs.core.deref(state))])], null);\r\nvar data_path = new cljs.core.Keyword(\"fulcro.client.impl.parser\",\"data-path\",\"fulcro.client.impl.parser/data-path\",1793359026).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fulcro.client.primitives.props(c)));\r\nvar result = (function (){var G__39571 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"replacement-root-path\",\"replacement-root-path\",-1563938351),data_path);\r\nvar G__39572 = query;\r\nreturn (parser.cljs$core$IFn$_invoke$arity$2 ? parser.cljs$core$IFn$_invoke$arity$2(G__39571,G__39572) : parser.call(null,G__39571,G__39572));\r\n})();\r\nvar value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(result,id);\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = has_tempid_QMARK_;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn (((value == null)) || (cljs.core.empty_QMARK_(value)));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn new cljs.core.Keyword(\"fulcro.client.primitives\",\"no-ident\",\"fulcro.client.primitives/no-ident\",1180553616);\r\n} else {\r\nreturn value;\r\n}\r\n})():null);\r\nvar or__3949__auto__ = ui;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(\"fulcro.client.primitives\",\"no-ident\",\"fulcro.client.primitives/no-ident\",1180553616);\r\n}\r\n});\r\n/**\r\n * Add computed properties to props. Note will replace any pre-existing\r\n * computed properties.\r\n */\r\nfulcro.client.primitives.computed = (function fulcro$client$primitives$computed(props,computed_map){\r\nif((props == null)){\r\nreturn null;\r\n} else {\r\nif(cljs.core.vector_QMARK_(props)){\r\nvar G__39576 = props;\r\nif(!(cljs.core.empty_QMARK_(computed_map))){\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__39576,cljs.core.assoc,new cljs.core.Keyword(\"fulcro.client.primitives\",\"computed\",\"fulcro.client.primitives/computed\",201987962),computed_map);\r\n} else {\r\nreturn G__39576;\r\n}\r\n} else {\r\nvar G__39577 = props;\r\nif(!(cljs.core.empty_QMARK_(computed_map))){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__39577,new cljs.core.Keyword(\"fulcro.client.primitives\",\"computed\",\"fulcro.client.primitives/computed\",201987962),computed_map);\r\n} else {\r\nreturn G__39577;\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Return the computed properties on a component or its props.\r\n */\r\nfulcro.client.primitives.get_computed = (function fulcro$client$primitives$get_computed(var_args){\r\nvar G__39582 = arguments.length;\r\nswitch (G__39582) {\r\ncase 1:\r\nreturn fulcro.client.primitives.get_computed.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn fulcro.client.primitives.get_computed.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.get_computed.cljs$core$IFn$_invoke$arity$1 = (function (x){\r\nreturn fulcro.client.primitives.get_computed.cljs$core$IFn$_invoke$arity$2(x,cljs.core.PersistentVector.EMPTY);\r\n});\r\n\r\nfulcro.client.primitives.get_computed.cljs$core$IFn$_invoke$arity$2 = (function (x,k_or_ks){\r\nif((x == null)){\r\nreturn null;\r\n} else {\r\nvar props = (function (){var G__39583 = x;\r\nif(fulcro.client.primitives.component_QMARK_(x)){\r\nreturn fulcro.client.primitives.props(G__39583);\r\n} else {\r\nreturn G__39583;\r\n}\r\n})();\r\nvar ks = cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.client.primitives\",\"computed\",\"fulcro.client.primitives/computed\",201987962)], null),(function (){var G__39584 = k_or_ks;\r\nif(!(cljs.core.sequential_QMARK_(k_or_ks))){\r\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[G__39584],null));\r\n} else {\r\nreturn G__39584;\r\n}\r\n})());\r\nif(cljs.core.vector_QMARK_(props)){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(props),ks);\r\n} else {\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(props,ks);\r\n}\r\n}\r\n});\r\n\r\nfulcro.client.primitives.get_computed.cljs$lang$maxFixedArity = 2;\r\n\r\n/**\r\n * Returns the component's children.\r\n */\r\nfulcro.client.primitives.children = (function fulcro$client$primitives$children(component){\r\nvar cs = component.props.children;\r\nif(((cljs.core.coll_QMARK_(cs)) || (cljs.core.array_QMARK_(cs)))){\r\nreturn cs;\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cs], null);\r\n}\r\n});\r\n/**\r\n * An exception-protected React .forceUpdate\r\n */\r\nfulcro.client.primitives.force_update = (function fulcro$client$primitives$force_update(var_args){\r\nvar G__39593 = arguments.length;\r\nswitch (G__39593) {\r\ncase 2:\r\nreturn fulcro.client.primitives.force_update.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 1:\r\nreturn fulcro.client.primitives.force_update.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.force_update.cljs$core$IFn$_invoke$arity$2 = (function (c,cb){\r\ntry{return c.forceUpdate(cb);\r\n}catch (e39594){var e = e39594;\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1959], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Component\",c,\"threw an exception while rendering \"], 0));\r\n}catch (e39595){if((e39595 instanceof Error)){\r\nvar e__31518__auto___39600 = e39595;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),1959], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___39600], 0));\r\n} else {\r\nthrow e39595;\r\n\r\n}\r\n}\r\nif(cljs.core.truth_(goog.DEBUG)){\r\nreturn console.error(e);\r\n} else {\r\nreturn null;\r\n}\r\n}});\r\n\r\nfulcro.client.primitives.force_update.cljs$core$IFn$_invoke$arity$1 = (function (c){\r\nreturn fulcro.client.primitives.force_update.cljs$core$IFn$_invoke$arity$2(c,null);\r\n});\r\n\r\nfulcro.client.primitives.force_update.cljs$lang$maxFixedArity = 2;\r\n\r\n/**\r\n * Remove components from the given list by removing those whose paths are encompassed by others. In other words,\r\n * remove components from the list when there is a parent of that component also in the list.\r\n */\r\nfulcro.client.primitives.dedup_components_by_path = (function fulcro$client$primitives$dedup_components_by_path(components){\r\nvar get_path = (function (p1__39601_SHARP_){\r\nvar G__39604 = p1__39601_SHARP_;\r\nvar G__39604__$1 = (((G__39604 == null))?null:fulcro.client.primitives.props(G__39604));\r\nvar G__39604__$2 = (((G__39604__$1 == null))?null:cljs.core.meta(G__39604__$1));\r\nif((G__39604__$2 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(\"fulcro.client.impl.parser\",\"data-path\",\"fulcro.client.impl.parser/data-path\",1793359026).cljs$core$IFn$_invoke$arity$1(G__39604__$2);\r\n}\r\n});\r\nvar sorted_comps = cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(get_path,components);\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (get_path,sorted_comps){\r\nreturn (function (acc,c){\r\nvar last_component = cljs.core.last(acc);\r\nvar prev_path = get_path(last_component);\r\nvar path = get_path(c);\r\nvar path_prefix = cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs.core.count(prev_path),path);\r\nif(cljs.core.truth_((function (){var or__3949__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(last_component,c);\r\nif(or__3949__auto__){\r\nreturn or__3949__auto__;\r\n} else {\r\nvar and__3938__auto__ = prev_path;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prev_path,path_prefix);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n}\r\n})())){\r\nreturn acc;\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,c);\r\n}\r\n});})(get_path,sorted_comps))\r\n,cljs.core.PersistentVector.EMPTY,sorted_comps);\r\n});\r\n/**\r\n * Run an optimal render of the given `refresh-queue` (a list of idents and data query keywords). This function attempts\r\n * to refresh the minimum number of components according to the UI depth and state. If it cannot do targeted updates then\r\n * it will call `render-root` to render the entire UI. Other optimizations may apply in render-root.\r\n */\r\nfulcro.client.primitives.optimal_render = (function fulcro$client$primitives$optimal_render(reconciler,refresh_queue,render_root){\r\nvar reconciler_state = new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(reconciler);\r\nvar map__39612 = cljs.core.deref(reconciler_state);\r\nvar map__39612__$1 = ((((!((map__39612 == null)))?(((((map__39612.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39612.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39612):map__39612);\r\nvar root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39612__$1,new cljs.core.Keyword(null,\"root\",\"root\",-448657453));\r\nvar render_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39612__$1,new cljs.core.Keyword(null,\"render-props\",\"render-props\",-249976873));\r\nvar root__$1 = ((fulcro.client.primitives.component_QMARK_(root))?root:(fulcro.client.primitives.class__GT_any.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.class__GT_any.cljs$core$IFn$_invoke$arity$2(reconciler,root) : fulcro.client.primitives.class__GT_any.call(null,reconciler,root)));\r\nvar config = new cljs.core.Keyword(null,\"config\",\"config\",994861415).cljs$core$IFn$_invoke$arity$1(reconciler);\r\nvar queued_components = cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config){\r\nreturn (function (p1__39608_SHARP_){\r\nreturn fulcro.client.impl.protocols.key__GT_components(new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315).cljs$core$IFn$_invoke$arity$1(config),p1__39608_SHARP_);\r\n});})(reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config))\r\n),((function (reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config){\r\nreturn (function (p1__39609_SHARP_,p2__39611_SHARP_){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(p1__39609_SHARP_,p2__39611_SHARP_);\r\n});})(reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config))\r\n,cljs.core.PersistentHashSet.EMPTY,refresh_queue);\r\nvar mounted_components = cljs.core.filter.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.mounted_QMARK_,queued_components);\r\nvar data_path = ((function (reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config,queued_components,mounted_components){\r\nreturn (function (c){\r\nvar G__39614 = c;\r\nvar G__39614__$1 = (((G__39614 == null))?null:fulcro.client.primitives.props(G__39614));\r\nvar G__39614__$2 = (((G__39614__$1 == null))?null:cljs.core.meta(G__39614__$1));\r\nif((G__39614__$2 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(\"fulcro.client.impl.parser\",\"data-path\",\"fulcro.client.impl.parser/data-path\",1793359026).cljs$core$IFn$_invoke$arity$1(G__39614__$2);\r\n}\r\n});})(reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config,queued_components,mounted_components))\r\n;\r\nvar parent_with_path = ((function (reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config,queued_components,mounted_components,data_path){\r\nreturn (function fulcro$client$primitives$optimal_render_$_pwp(c){\r\nvar p = fulcro.client.primitives.parent(c);\r\nwhile(true){\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = p;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn data_path(p);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn p;\r\n} else {\r\nif(cljs.core.truth_(p)){\r\nvar G__39623 = fulcro.client.primitives.parent(p);\r\np = G__39623;\r\ncontinue;\r\n} else {\r\nreturn root__$1;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});})(reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config,queued_components,mounted_components,data_path))\r\n;\r\nvar refreshable_components = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config,queued_components,mounted_components,data_path,parent_with_path){\r\nreturn (function (result,c){\r\nif(cljs.core.truth_(data_path(c))){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(result,c);\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(result,parent_with_path(c));\r\n}\r\n});})(reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config,queued_components,mounted_components,data_path,parent_with_path))\r\n,cljs.core.PersistentVector.EMPTY,mounted_components);\r\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(fulcro.client.primitives.to_env(config),new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),reconciler);\r\nif(cljs.core.truth_(root__$1)){\r\nvar old_tree = fulcro.client.primitives.props(root__$1);\r\nvar components = fulcro.client.primitives.dedup_components_by_path(refreshable_components);\r\nvar updated_tree = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (old_tree,components,reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config,queued_components,mounted_components,data_path,parent_with_path,refreshable_components,env){\r\nreturn (function (tree,c){\r\nvar component_props = fulcro.client.primitives.props(c);\r\nvar computed = fulcro.client.primitives.get_computed.cljs$core$IFn$_invoke$arity$1(component_props);\r\nvar target_path = data_path(c);\r\nvar next_raw_props = fulcro.client.primitives.fulcro_ui__GT_props(env,c);\r\nvar force_root_QMARK_ = ((cljs.core.not(target_path)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"fulcro.client.primitives\",\"no-ident\",\"fulcro.client.primitives/no-ident\",1180553616),next_raw_props)));\r\nvar next_props = ((force_root_QMARK_)?null:fulcro.client.primitives.computed(next_raw_props,computed));\r\nif(force_root_QMARK_){\r\nif(cljs.core.not(target_path)){\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2026], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Optimal render skipping optimizations because component does not have a target path\",c], 0));\r\n}catch (e39618){if((e39618 instanceof Error)){\r\nvar e__31518__auto___39627 = e39618;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2026], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___39627], 0));\r\n} else {\r\nthrow e39618;\r\n\r\n}\r\n}} else {\r\n}\r\n\r\nreturn cljs.core.reduced(null);\r\n} else {\r\nreturn cljs.core.assoc_in(tree,target_path,next_props);\r\n}\r\n});})(old_tree,components,reconciler_state,map__39612,map__39612__$1,root,render_props,root__$1,config,queued_components,mounted_components,data_path,parent_with_path,refreshable_components,env))\r\n,old_tree,components);\r\nif(cljs.core.truth_(updated_tree)){\r\nreturn (render_props.cljs$core$IFn$_invoke$arity$1 ? render_props.cljs$core$IFn$_invoke$arity$1(updated_tree) : render_props.call(null,updated_tree));\r\n} else {\r\nvar start = cljs.core.inst_ms((new Date()));\r\nvar _ = (render_root.cljs$core$IFn$_invoke$arity$0 ? render_root.cljs$core$IFn$_invoke$arity$0() : render_root.call(null));\r\nvar end = cljs.core.inst_ms((new Date()));\r\nif(((end - start) > (20))){\r\ntry{return fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2037], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Root render took \",(end - start),\"ms\"], 0));\r\n}catch (e39619){if((e39619 instanceof Error)){\r\nvar e__31518__auto__ = e39619;\r\nreturn fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2037], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto__], 0));\r\n} else {\r\nthrow e39619;\r\n\r\n}\r\n}} else {\r\nreturn null;\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {fulcro.client.impl.protocols.IReconciler}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\nfulcro.client.primitives.Reconciler = (function (config,state,history,__meta,__extmap,__hash){\r\nthis.config = config;\r\nthis.state = state;\r\nthis.history = history;\r\nthis.__meta = __meta;\r\nthis.__extmap = __extmap;\r\nthis.__hash = __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2229700362;\r\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\r\n});\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4203__auto__,k__4204__auto__){\r\nvar self__ = this;\r\nvar this__4203__auto____$1 = this;\r\nreturn cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this__4203__auto____$1,k__4204__auto__,null);\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4205__auto__,k39636,else__4206__auto__){\r\nvar self__ = this;\r\nvar this__4205__auto____$1 = this;\r\nvar G__39643 = k39636;\r\nvar G__39643__$1 = (((G__39643 instanceof cljs.core.Keyword))?G__39643.fqn:null);\r\nswitch (G__39643__$1) {\r\ncase \"config\":\r\nreturn self__.config;\r\n\r\nbreak;\r\ncase \"state\":\r\nreturn self__.state;\r\n\r\nbreak;\r\ncase \"history\":\r\nreturn self__.history;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k39636,else__4206__auto__);\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$ = cljs.core.PROTOCOL_SENTINEL;\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$queue_BANG_$arity$2 = (function (this$,ks){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn fulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$3(this$__$1,ks,null);\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$queue_BANG_$arity$3 = (function (_,ks,remote){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nif(!((remote == null))){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(self__.state,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"remote-queue\",\"remote-queue\",1823260578),remote], null),cljs.core.into,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ks], 0));\r\n} else {\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(self__.state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879)], null),cljs.core.into,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ks], 0));\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$queue_sends_BANG_$arity$2 = (function (_,sends){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(self__.state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"queued-sends\",\"queued-sends\",278114765)], null),new cljs.core.Keyword(null,\"merge-sends\",\"merge-sends\",-1718434202).cljs$core$IFn$_invoke$arity$1(self__.config),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sends], 0));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$get_history$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn self__.history;\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$send_BANG_$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar sends = new cljs.core.Keyword(null,\"queued-sends\",\"queued-sends\",278114765).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state));\r\nif(cljs.core.empty_QMARK_(sends)){\r\nreturn null;\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.state,((function (sends,this$__$1){\r\nreturn (function fulcro$client$primitives$clear_queue_fn(state__$1){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state__$1,new cljs.core.Keyword(null,\"queued-sends\",\"queued-sends\",278114765),cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(null,\"sends-queued\",\"sends-queued\",-1276878712),false);\r\n});})(sends,this$__$1))\r\n);\r\n\r\nvar G__39647 = sends;\r\nvar G__39648 = ((function (G__39647,sends,this$__$1){\r\nreturn (function() {\r\nvar fulcro$client$primitives$send_cb = null;\r\nvar fulcro$client$primitives$send_cb__1 = (function (resp){\r\nreturn fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$3(this$__$1,resp,null);\r\n});\r\nvar fulcro$client$primitives$send_cb__2 = (function (resp,query){\r\nreturn fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$3(this$__$1,resp,query);\r\n});\r\nvar fulcro$client$primitives$send_cb__3 = (function (resp,query,remote){\r\nif((remote == null)){\r\n} else {\r\nfulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$3(this$__$1,cljs.core.keys(resp),remote);\r\n}\r\n\r\nfulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$4(this$__$1,resp,query,remote);\r\n\r\nreturn fulcro.client.impl.protocols.reconcile_BANG_.cljs$core$IFn$_invoke$arity$2(this$__$1,remote);\r\n});\r\nfulcro$client$primitives$send_cb = function(resp,query,remote){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn fulcro$client$primitives$send_cb__1.call(this,resp);\r\ncase 2:\r\nreturn fulcro$client$primitives$send_cb__2.call(this,resp,query);\r\ncase 3:\r\nreturn fulcro$client$primitives$send_cb__3.call(this,resp,query,remote);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nfulcro$client$primitives$send_cb.cljs$core$IFn$_invoke$arity$1 = fulcro$client$primitives$send_cb__1;\r\nfulcro$client$primitives$send_cb.cljs$core$IFn$_invoke$arity$2 = fulcro$client$primitives$send_cb__2;\r\nfulcro$client$primitives$send_cb.cljs$core$IFn$_invoke$arity$3 = fulcro$client$primitives$send_cb__3;\r\nreturn fulcro$client$primitives$send_cb;\r\n})()\r\n;})(G__39647,sends,this$__$1))\r\n;\r\nvar fexpr__39646 = new cljs.core.Keyword(null,\"send\",\"send\",-652151114).cljs$core$IFn$_invoke$arity$1(self__.config);\r\nreturn (fexpr__39646.cljs$core$IFn$_invoke$arity$2 ? fexpr__39646.cljs$core$IFn$_invoke$arity$2(G__39647,G__39648) : fexpr__39646.call(null,G__39647,G__39648));\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$reconcile_BANG_$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn fulcro.client.impl.protocols.reconcile_BANG_.cljs$core$IFn$_invoke$arity$2(this$__$1,null);\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$reconcile_BANG_$arity$2 = (function (this$,remote){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar reconciler_state = cljs.core.deref(self__.state);\r\nvar components_to_refresh = ((!((remote == null)))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(reconciler_state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"remote-queue\",\"remote-queue\",1823260578),remote], null)):new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879).cljs$core$IFn$_invoke$arity$1(reconciler_state));\r\nvar render_mode = new cljs.core.Keyword(null,\"render-mode\",\"render-mode\",-151613976).cljs$core$IFn$_invoke$arity$1(self__.config);\r\nvar force_root_QMARK_ = ((cljs.core.empty_QMARK_(components_to_refresh)) || (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"keyframe\",\"keyframe\",1957083746),null,new cljs.core.Keyword(null,\"brutal\",\"brutal\",-361671204),null], null), null),render_mode)) || (fulcro.client.primitives._STAR_blindly_render_STAR_));\r\nvar blind_refresh_QMARK_ = ((cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"brutal\",\"brutal\",-361671204),null], null), null),render_mode)) || (fulcro.client.primitives._STAR_blindly_render_STAR_));\r\nvar rendered_root_QMARK_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\r\nvar render_root = ((function (reconciler_state,components_to_refresh,render_mode,force_root_QMARK_,blind_refresh_QMARK_,rendered_root_QMARK_,this$__$1){\r\nreturn (function (){\r\nvar temp__5455__auto__ = new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(reconciler_state);\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar do_render = temp__5455__auto__;\r\nif(cljs.core.truth_(cljs.core.deref(rendered_root_QMARK_))){\r\nreturn null;\r\n} else {\r\ncljs.core.reset_BANG_(rendered_root_QMARK_,true);\r\n\r\nreturn (do_render.cljs$core$IFn$_invoke$arity$0 ? do_render.cljs$core$IFn$_invoke$arity$0() : do_render.call(null));\r\n}\r\n} else {\r\ntry{return fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2167], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Render skipped. Renderer was nil. Possibly a hot code reload?\"], 0));\r\n}catch (e39652){if((e39652 instanceof Error)){\r\nvar e__31518__auto__ = e39652;\r\nreturn fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2167], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto__], 0));\r\n} else {\r\nthrow e39652;\r\n\r\n}\r\n}}\r\n});})(reconciler_state,components_to_refresh,render_mode,force_root_QMARK_,blind_refresh_QMARK_,rendered_root_QMARK_,this$__$1))\r\n;\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"queued\",\"queued\",1701634607)], null),cljs.core.not);\r\n\r\nif(!((remote == null))){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.state,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"remote-queue\",\"remote-queue\",1823260578),remote], null),cljs.core.PersistentVector.EMPTY);\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.state,cljs.core.assoc,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),cljs.core.PersistentVector.EMPTY);\r\n}\r\n\r\nvar _STAR_blindly_render_STAR_39654 = fulcro.client.primitives._STAR_blindly_render_STAR_;\r\nfulcro.client.primitives._STAR_blindly_render_STAR_ = blind_refresh_QMARK_;\r\n\r\ntry{if(force_root_QMARK_){\r\nreturn render_root();\r\n} else {\r\nreturn fulcro.client.primitives.optimal_render(this$__$1,components_to_refresh,render_root);\r\n}\r\n}finally {fulcro.client.primitives._STAR_blindly_render_STAR_ = _STAR_blindly_render_STAR_39654;\r\n}});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$schedule_render_BANG_$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nif(cljs.core.not(new cljs.core.Keyword(null,\"queued\",\"queued\",1701634607).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state)))){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.state,cljs.core.assoc,new cljs.core.Keyword(null,\"queued\",\"queued\",1701634607),true);\r\n\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$tick_BANG_$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.state,cljs.core.update,new cljs.core.Keyword(null,\"t\",\"t\",-1397832519),cljs.core.inc);\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$schedule_sends_BANG_$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nif(cljs.core.not(new cljs.core.Keyword(null,\"sends-queued\",\"sends-queued\",-1276878712).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state)))){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.state,cljs.core.assoc,new cljs.core.Keyword(null,\"sends-queued\",\"sends-queued\",-1276878712),true);\r\n\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$basis_t$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn new cljs.core.Keyword(null,\"t\",\"t\",-1397832519).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$add_root_BANG_$arity$4 = (function (this$,root_class,target,options){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar ret = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\r\nvar rctor = fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$1(root_class);\r\nvar guid = (function (){var or__3949__auto__ = fulcro.client.impl.protocols.get_id(this$__$1);\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn fulcro.util.unique_key();\r\n}\r\n})();\r\nif(cljs.core.truth_(fulcro.client.impl.protocols.get_id(this$__$1))){\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.state,cljs.core.assoc,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),guid);\r\n}\r\n\r\nif(fulcro.client.primitives.has_query_QMARK_(root_class)){\r\nfulcro.client.impl.protocols.index_root(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315).cljs$core$IFn$_invoke$arity$1(self__.config),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(self__.config))),root_class);\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = new cljs.core.Keyword(null,\"normalize\",\"normalize\",-1904390051).cljs$core$IFn$_invoke$arity$1(self__.config);\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn cljs.core.not(new cljs.core.Keyword(null,\"normalized\",\"normalized\",-1887621663).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state)));\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nvar new_state_39704 = fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$2(root_class,cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(self__.config)));\r\nvar refs_39705 = cljs.core.meta(new_state_39704);\r\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(self__.config),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new_state_39704,refs_39705], 0)));\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.state,cljs.core.assoc,new cljs.core.Keyword(null,\"normalized\",\"normalized\",-1887621663),true);\r\n} else {\r\n}\r\n\r\nvar renderf = ((function (ret,rctor,guid,this$__$1){\r\nreturn (function fulcro$client$primitives$render_fn(data){\r\nvar _STAR_reconciler_STAR_39658 = fulcro.client.primitives._STAR_reconciler_STAR_;\r\nvar _STAR_shared_STAR_39659 = fulcro.client.primitives._STAR_shared_STAR_;\r\nvar _STAR_instrument_STAR_39660 = fulcro.client.primitives._STAR_instrument_STAR_;\r\nfulcro.client.primitives._STAR_reconciler_STAR_ = this$__$1;\r\n\r\nfulcro.client.primitives._STAR_shared_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"shared\",\"shared\",-384145993).cljs$core$IFn$_invoke$arity$1(self__.config),(cljs.core.truth_(new cljs.core.Keyword(null,\"shared-fn\",\"shared-fn\",-180260144).cljs$core$IFn$_invoke$arity$1(self__.config))?(function (){var fexpr__39661 = new cljs.core.Keyword(null,\"shared-fn\",\"shared-fn\",-180260144).cljs$core$IFn$_invoke$arity$1(self__.config);\r\nreturn (fexpr__39661.cljs$core$IFn$_invoke$arity$1 ? fexpr__39661.cljs$core$IFn$_invoke$arity$1(data) : fexpr__39661.call(null,data));\r\n})():null)], 0));\r\n\r\nfulcro.client.primitives._STAR_instrument_STAR_ = new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844).cljs$core$IFn$_invoke$arity$1(self__.config);\r\n\r\ntry{var c = ((!((target == null)))?(function (){var G__39663 = (rctor.cljs$core$IFn$_invoke$arity$1 ? rctor.cljs$core$IFn$_invoke$arity$1(data) : rctor.call(null,data));\r\nvar G__39664 = target;\r\nvar fexpr__39662 = new cljs.core.Keyword(null,\"root-render\",\"root-render\",835981146).cljs$core$IFn$_invoke$arity$1(self__.config);\r\nreturn (fexpr__39662.cljs$core$IFn$_invoke$arity$2 ? fexpr__39662.cljs$core$IFn$_invoke$arity$2(G__39663,G__39664) : fexpr__39662.call(null,G__39663,G__39664));\r\n})():(((cljs.core.deref(ret) == null))?(rctor.cljs$core$IFn$_invoke$arity$1 ? rctor.cljs$core$IFn$_invoke$arity$1(data) : rctor.call(null,data)):(function (){var temp__5457__auto__ = cljs.core.deref(ret);\r\nif(cljs.core.truth_(temp__5457__auto__)){\r\nvar c_SINGLEQUOTE_ = temp__5457__auto__;\r\nif(fulcro.client.primitives.mounted_QMARK_(c_SINGLEQUOTE_)){\r\nreturn fulcro.client.primitives.force_update.cljs$core$IFn$_invoke$arity$2(c_SINGLEQUOTE_,data);\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n})()\r\n));\r\nif((((cljs.core.deref(ret) == null)) && (!((c == null))))){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.state,cljs.core.assoc,new cljs.core.Keyword(null,\"root\",\"root\",-448657453),c);\r\n\r\nreturn cljs.core.reset_BANG_(ret,c);\r\n} else {\r\nreturn null;\r\n}\r\n}finally {fulcro.client.primitives._STAR_instrument_STAR_ = _STAR_instrument_STAR_39660;\r\n\r\nfulcro.client.primitives._STAR_shared_STAR_ = _STAR_shared_STAR_39659;\r\n\r\nfulcro.client.primitives._STAR_reconciler_STAR_ = _STAR_reconciler_STAR_39658;\r\n}});})(ret,rctor,guid,this$__$1))\r\n;\r\nvar parsef = ((function (renderf,ret,rctor,guid,this$__$1){\r\nreturn (function fulcro$client$primitives$parse_fn(){\r\nvar root_query = fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2(rctor,cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(self__.config)));\r\nif((((root_query == null)) || (cljs.core.vector_QMARK_(root_query)))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"Application root query must be a vector\",\"\\n\",\"(or (nil? root-query) (vector? root-query))\"].join('')));\r\n}\r\n\r\nif(!((root_query == null))){\r\nvar env = fulcro.client.primitives.to_env(self__.config);\r\nvar root_props = (function (){var fexpr__39668 = new cljs.core.Keyword(null,\"parser\",\"parser\",-1543495310).cljs$core$IFn$_invoke$arity$1(self__.config);\r\nreturn (fexpr__39668.cljs$core$IFn$_invoke$arity$2 ? fexpr__39668.cljs$core$IFn$_invoke$arity$2(env,root_query) : fexpr__39668.call(null,env,root_query));\r\n})();\r\nif(cljs.core.empty_QMARK_(root_props)){\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2091], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"WARNING: Root props were empty. Your root query returned no data!\"], 0));\r\n}catch (e39669){if((e39669 instanceof Error)){\r\nvar e__31518__auto___39715 = e39669;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2091], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___39715], 0));\r\n} else {\r\nthrow e39669;\r\n\r\n}\r\n}} else {\r\n}\r\n\r\nreturn renderf(root_props);\r\n} else {\r\nreturn renderf(cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(self__.config)));\r\n}\r\n});})(renderf,ret,rctor,guid,this$__$1))\r\n;\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.state,cljs.core.merge,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),parsef,new cljs.core.Keyword(null,\"root\",\"root\",-448657453),root_class,new cljs.core.Keyword(null,\"render-props\",\"render-props\",-249976873),renderf,new cljs.core.Keyword(null,\"remove\",\"remove\",-131428414),((function (renderf,parsef,ret,rctor,guid,this$__$1){\r\nreturn (function fulcro$client$primitives$remove_fn(){\r\ncljs.core.remove_watch(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(self__.config),fulcro.client.impl.protocols.get_id(this$__$1));\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.state,((function (renderf,parsef,ret,rctor,guid,this$__$1){\r\nreturn (function (p1__39631_SHARP_){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p1__39631_SHARP_,new cljs.core.Keyword(null,\"target\",\"target\",253001721)),new cljs.core.Keyword(null,\"render\",\"render\",-1408033454)),new cljs.core.Keyword(null,\"root\",\"root\",-448657453)),new cljs.core.Keyword(null,\"remove\",\"remove\",-131428414));\r\n});})(renderf,parsef,ret,rctor,guid,this$__$1))\r\n);\r\n\r\nif((target == null)){\r\nreturn null;\r\n} else {\r\nvar fexpr__39670 = new cljs.core.Keyword(null,\"root-unmount\",\"root-unmount\",1692900789).cljs$core$IFn$_invoke$arity$1(self__.config);\r\nreturn (fexpr__39670.cljs$core$IFn$_invoke$arity$1 ? fexpr__39670.cljs$core$IFn$_invoke$arity$1(target) : fexpr__39670.call(null,target));\r\n}\r\n});})(renderf,parsef,ret,rctor,guid,this$__$1))\r\n], null));\r\n\r\ncljs.core.add_watch(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(self__.config),fulcro.client.impl.protocols.get_id(this$__$1),((function (renderf,parsef,ret,rctor,guid,this$__$1){\r\nreturn (function fulcro$client$primitives$add_fn(_,___$1,___$2,___$3){\r\nif(!(fulcro.client.primitives.has_query_QMARK_(root_class))){\r\nreturn fulcro.client.primitives.queue_render_BANG_(parsef);\r\n} else {\r\nfulcro.client.impl.protocols.tick_BANG_(this$__$1);\r\n\r\nreturn fulcro.client.primitives.schedule_render_BANG_(this$__$1);\r\n}\r\n});})(renderf,parsef,ret,rctor,guid,this$__$1))\r\n);\r\n\r\nparsef();\r\n\r\nreturn cljs.core.deref(ret);\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$reindex_BANG_$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.state),new cljs.core.Keyword(null,\"root\",\"root\",-448657453));\r\nvar root_class = fulcro.client.primitives.react_type(root);\r\nif(fulcro.client.primitives.has_query_QMARK_(root)){\r\nvar indexer = new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315).cljs$core$IFn$_invoke$arity$1(self__.config);\r\nreturn fulcro.client.impl.protocols.index_root(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(indexer,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(self__.config))),root_class);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$remove_root_BANG_$arity$2 = (function (_,target){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nvar temp__5457__auto__ = new cljs.core.Keyword(null,\"remove\",\"remove\",-131428414).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state));\r\nif(cljs.core.truth_(temp__5457__auto__)){\r\nvar remove = temp__5457__auto__;\r\nreturn (remove.cljs$core$IFn$_invoke$arity$0 ? remove.cljs$core$IFn$_invoke$arity$0() : remove.call(null));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.fulcro$client$impl$protocols$IReconciler$get_id$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4217__auto__,writer__4218__auto__,opts__4219__auto__){\r\nvar self__ = this;\r\nvar this__4217__auto____$1 = this;\r\nvar pr_pair__4220__auto__ = ((function (this__4217__auto____$1){\r\nreturn (function (keyval__4221__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4218__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4219__auto__,keyval__4221__auto__);\r\n});})(this__4217__auto____$1))\r\n;\r\nreturn cljs.core.pr_sequential_writer(writer__4218__auto__,pr_pair__4220__auto__,\"#fulcro.client.primitives.Reconciler{\",\", \",\"}\",opts__4219__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"config\",\"config\",994861415),self__.config],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),self__.state],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"history\",\"history\",-247395220),self__.history],null))], null),self__.__extmap));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__39635){\r\nvar self__ = this;\r\nvar G__39635__$1 = this;\r\nreturn (new cljs.core.RecordIter((0),G__39635__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"config\",\"config\",994861415),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"history\",\"history\",-247395220)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4201__auto__){\r\nvar self__ = this;\r\nvar this__4201__auto____$1 = this;\r\nreturn self__.__meta;\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4198__auto__){\r\nvar self__ = this;\r\nvar this__4198__auto____$1 = this;\r\nreturn (new fulcro.client.primitives.Reconciler(self__.config,self__.state,self__.history,self__.__meta,self__.__extmap,self__.__hash));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4207__auto__){\r\nvar self__ = this;\r\nvar this__4207__auto____$1 = this;\r\nreturn (3 + cljs.core.count(self__.__extmap));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4199__auto__){\r\nvar self__ = this;\r\nvar this__4199__auto____$1 = this;\r\nvar h__4061__auto__ = self__.__hash;\r\nif(!((h__4061__auto__ == null))){\r\nreturn h__4061__auto__;\r\n} else {\r\nvar h__4061__auto____$1 = (function (){var fexpr__39674 = ((function (h__4061__auto__,this__4199__auto____$1){\r\nreturn (function (coll__4200__auto__){\r\nreturn (775628851 ^ cljs.core.hash_unordered_coll(coll__4200__auto__));\r\n});})(h__4061__auto__,this__4199__auto____$1))\r\n;\r\nreturn fexpr__39674(this__4199__auto____$1);\r\n})();\r\nself__.__hash = h__4061__auto____$1;\r\n\r\nreturn h__4061__auto____$1;\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this39637,other39638){\r\nvar self__ = this;\r\nvar this39637__$1 = this;\r\nreturn ((!((other39638 == null))) && ((this39637__$1.constructor === other39638.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this39637__$1.config,other39638.config)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this39637__$1.state,other39638.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this39637__$1.history,other39638.history)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this39637__$1.__extmap,other39638.__extmap)));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4212__auto__,k__4213__auto__){\r\nvar self__ = this;\r\nvar this__4212__auto____$1 = this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"config\",\"config\",994861415),null,new cljs.core.Keyword(null,\"history\",\"history\",-247395220),null,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),null], null), null),k__4213__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4212__auto____$1),self__.__meta),k__4213__auto__);\r\n} else {\r\nreturn (new fulcro.client.primitives.Reconciler(self__.config,self__.state,self__.history,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4213__auto__)),null));\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4210__auto__,k__4211__auto__,G__39635){\r\nvar self__ = this;\r\nvar this__4210__auto____$1 = this;\r\nvar pred__39678 = cljs.core.keyword_identical_QMARK_;\r\nvar expr__39679 = k__4211__auto__;\r\nif(cljs.core.truth_((function (){var G__39681 = new cljs.core.Keyword(null,\"config\",\"config\",994861415);\r\nvar G__39682 = expr__39679;\r\nreturn (pred__39678.cljs$core$IFn$_invoke$arity$2 ? pred__39678.cljs$core$IFn$_invoke$arity$2(G__39681,G__39682) : pred__39678.call(null,G__39681,G__39682));\r\n})())){\r\nreturn (new fulcro.client.primitives.Reconciler(G__39635,self__.state,self__.history,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__39683 = new cljs.core.Keyword(null,\"state\",\"state\",-1988618099);\r\nvar G__39684 = expr__39679;\r\nreturn (pred__39678.cljs$core$IFn$_invoke$arity$2 ? pred__39678.cljs$core$IFn$_invoke$arity$2(G__39683,G__39684) : pred__39678.call(null,G__39683,G__39684));\r\n})())){\r\nreturn (new fulcro.client.primitives.Reconciler(self__.config,G__39635,self__.history,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__39685 = new cljs.core.Keyword(null,\"history\",\"history\",-247395220);\r\nvar G__39686 = expr__39679;\r\nreturn (pred__39678.cljs$core$IFn$_invoke$arity$2 ? pred__39678.cljs$core$IFn$_invoke$arity$2(G__39685,G__39686) : pred__39678.call(null,G__39685,G__39686));\r\n})())){\r\nreturn (new fulcro.client.primitives.Reconciler(self__.config,self__.state,G__39635,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new fulcro.client.primitives.Reconciler(self__.config,self__.state,self__.history,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4211__auto__,G__39635),null));\r\n}\r\n}\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4215__auto__){\r\nvar self__ = this;\r\nvar this__4215__auto____$1 = this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"config\",\"config\",994861415),self__.config,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),self__.state,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"history\",\"history\",-247395220),self__.history,null))], null),self__.__extmap));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4202__auto__,G__39635){\r\nvar self__ = this;\r\nvar this__4202__auto____$1 = this;\r\nreturn (new fulcro.client.primitives.Reconciler(self__.config,self__.state,self__.history,G__39635,self__.__extmap,self__.__hash));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4208__auto__,entry__4209__auto__){\r\nvar self__ = this;\r\nvar this__4208__auto____$1 = this;\r\nif(cljs.core.vector_QMARK_(entry__4209__auto__)){\r\nreturn cljs.core._assoc(this__4208__auto____$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4209__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4209__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4208__auto____$1,entry__4209__auto__);\r\n}\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(self__.config));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"config\",\"config\",-1659574354,null),new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.Symbol(null,\"history\",\"history\",1393136307,null)], null);\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.cljs$lang$type = true;\r\n\r\nfulcro.client.primitives.Reconciler.cljs$lang$ctorPrSeq = (function (this__4240__auto__){\r\nreturn (new cljs.core.List(null,\"fulcro.client.primitives/Reconciler\",null,(1),null));\r\n});\r\n\r\nfulcro.client.primitives.Reconciler.cljs$lang$ctorPrWriter = (function (this__4240__auto__,writer__4241__auto__){\r\nreturn cljs.core._write(writer__4241__auto__,\"fulcro.client.primitives/Reconciler\");\r\n});\r\n\r\n/**\r\n * Positional factory function for fulcro.client.primitives/Reconciler.\r\n */\r\nfulcro.client.primitives.__GT_Reconciler = (function fulcro$client$primitives$__GT_Reconciler(config,state,history){\r\nreturn (new fulcro.client.primitives.Reconciler(config,state,history,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for fulcro.client.primitives/Reconciler, taking a map of keywords to field values.\r\n */\r\nfulcro.client.primitives.map__GT_Reconciler = (function fulcro$client$primitives$map__GT_Reconciler(G__39639){\r\nvar extmap__4236__auto__ = (function (){var G__39690 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__39639,new cljs.core.Keyword(null,\"config\",\"config\",994861415),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"history\",\"history\",-247395220)], 0));\r\nif(cljs.core.record_QMARK_(G__39639)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__39690);\r\n} else {\r\nreturn G__39690;\r\n}\r\n})();\r\nreturn (new fulcro.client.primitives.Reconciler(new cljs.core.Keyword(null,\"config\",\"config\",994861415).cljs$core$IFn$_invoke$arity$1(G__39639),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(G__39639),new cljs.core.Keyword(null,\"history\",\"history\",-247395220).cljs$core$IFn$_invoke$arity$1(G__39639),null,cljs.core.not_empty(extmap__4236__auto__),null));\r\n});\r\n\r\n/**\r\n * Construct a reconciler from a configuration map.\r\n * \r\n * Required parameters:\r\n *   :state        - the application state. If IAtom value is not supplied the\r\n *                   data will be normalized into the default database format\r\n *                   using the root query. This can be disabled by explicitly\r\n *                   setting the optional :normalize parameter to false.\r\n *   :parser       - the parser to be used\r\n * \r\n * Optional parameters:\r\n *   :id           - a unique ID that this reconciler will be known as. Used to resolve global variable usage when more than one app is on a page. If\r\n *                   left unspecified it will default to a random UUID.\r\n *   :shared       - a map of global shared properties for the component tree.\r\n *   :shared-fn    - a function to compute global shared properties from the root props.\r\n *                   the result is merged with :shared.\r\n *   :send         - required only if the parser will return a non-empty value when\r\n *                   run against the supplied :remotes. send is a function of two\r\n *                   arguments, the map of remote expressions keyed by remote target\r\n *                   and a callback which should be invoked with the result from each\r\n *                   remote target. Note this means the callback can be invoked\r\n *                   multiple times to support parallel fetching and incremental\r\n *                   loading if desired. The callback should take the response as the\r\n *                   first argument and the the query that was sent as the second\r\n *                   argument.\r\n *   :history      - A positive integer. The number of history steps to keep in memory.\r\n *   :normalize    - whether the state should be normalized. If true it is assumed\r\n *                   all novelty introduced into the system will also need\r\n *                   normalization.\r\n *   :remotes      - a vector of keywords representing remote services which can\r\n *                   evaluate query expressions. Defaults to [:remote]\r\n *   :root-render  - the root render function. Defaults to ReactDOM.render\r\n *   :root-unmount - the root unmount function. Defaults to\r\n *                   ReactDOM.unmountComponentAtNode\r\n *   :render-mode  - :normal - fastest, and the default. Components with idents can refresh in isolation.\r\n *                             shouldComponentUpdate returns false if state/data are unchanged. Follow-on reads are\r\n *                             required to refresh non-local concerns.\r\n *                   :keyframe - Every data change runs a root-level query and re-renders from root.\r\n *                               shouldComponentUpdate is the same as :default. Follow-on reads are *not* needed for\r\n *                               non-local UI refresh.\r\n *                   :brutal - Every data change runs a root-level query, and re-renders from root. shouldComponentUpdate\r\n *                             always returns true, forcing full React diff. Not really useful for anything but benchmarking.\r\n *   :lifecycle    - A function (fn [component event]) that is called when react components either :mount or :unmount. Useful for debugging tools.\r\n *   :tx-listen    - a function of 2 arguments that will listen to transactions.\r\n *                   The first argument is the parser's env map also containing\r\n *                   the old and new state. The second argument is a history-step (see history). It also contains\r\n *                   a couple of legacy fields for bw compatibility with 1.0.\r\n */\r\nfulcro.client.primitives.reconciler = (function fulcro$client$primitives$reconciler(p__39738){\r\nvar map__39740 = p__39738;\r\nvar map__39740__$1 = ((((!((map__39740 == null)))?(((((map__39740.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39740.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39740):map__39740);\r\nvar config = map__39740__$1;\r\nvar root_render = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__39740__$1,new cljs.core.Keyword(null,\"root-render\",\"root-render\",835981146),((function (map__39740,map__39740__$1,config){\r\nreturn (function (p1__39733_SHARP_,p2__39734_SHARP_){\r\nreturn ReactDOM.render(p1__39733_SHARP_,p2__39734_SHARP_);\r\n});})(map__39740,map__39740__$1,config))\r\n);\r\nvar normalize = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"normalize\",\"normalize\",-1904390051));\r\nvar tx_listen = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"tx-listen\",\"tx-listen\",119130367));\r\nvar instrument = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844));\r\nvar merge_sends = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__39740__$1,new cljs.core.Keyword(null,\"merge-sends\",\"merge-sends\",-1718434202),((function (map__39740,map__39740__$1,config,root_render,normalize,tx_listen,instrument){\r\nreturn (function (p1__39731_SHARP_,p2__39732_SHARP_){\r\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.into,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__39731_SHARP_,p2__39732_SHARP_], 0));\r\n});})(map__39740,map__39740__$1,config,root_render,normalize,tx_listen,instrument))\r\n);\r\nvar merge_ident = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"merge-ident\",\"merge-ident\",1040841862));\r\nvar remotes = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__39740__$1,new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576)], null));\r\nvar render_mode = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__39740__$1,new cljs.core.Keyword(null,\"render-mode\",\"render-mode\",-151613976),new cljs.core.Keyword(null,\"normal\",\"normal\",-1519123858));\r\nvar migrate = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"migrate\",\"migrate\",-207110743));\r\nvar history = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__39740__$1,new cljs.core.Keyword(null,\"history\",\"history\",-247395220),(200));\r\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\r\nvar lifecycle = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__39740__$1,new cljs.core.Keyword(null,\"lifecycle\",\"lifecycle\",341496205),null);\r\nvar shared_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"shared-fn\",\"shared-fn\",-180260144));\r\nvar parser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"parser\",\"parser\",-1543495310));\r\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\r\nvar root_unmount = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__39740__$1,new cljs.core.Keyword(null,\"root-unmount\",\"root-unmount\",1692900789),((function (map__39740,map__39740__$1,config,root_render,normalize,tx_listen,instrument,merge_sends,merge_ident,remotes,render_mode,migrate,history,state,lifecycle,shared_fn,parser,id){\r\nreturn (function (p1__39735_SHARP_){\r\nreturn ReactDOM.unmountComponentAtNode(p1__39735_SHARP_);\r\n});})(map__39740,map__39740__$1,config,root_render,normalize,tx_listen,instrument,merge_sends,merge_ident,remotes,render_mode,migrate,history,state,lifecycle,shared_fn,parser,id))\r\n);\r\nvar send = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"send\",\"send\",-652151114));\r\nvar merge_tree = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"merge-tree\",\"merge-tree\",-127861161));\r\nvar shared = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39740__$1,new cljs.core.Keyword(null,\"shared\",\"shared\",-384145993));\r\nif(cljs.core.map_QMARK_(config)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (map? config)\"));\r\n}\r\n\r\nvar idxr = fulcro.client.primitives.map__GT_Indexer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"indexes\",\"indexes\",1496475545),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY)], null));\r\nvar norm_QMARK_ = ((!((state == null)))?(((((state.cljs$lang$protocol_mask$partition1$ & (16384))) || ((cljs.core.PROTOCOL_SENTINEL === state.cljs$core$IAtom$))))?true:(((!state.cljs$lang$protocol_mask$partition1$))?cljs.core.native_satisfies_QMARK_(cljs.core.IAtom,state):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IAtom,state));\r\nvar state_SINGLEQUOTE_ = ((norm_QMARK_)?state:cljs.core.atom.cljs$core$IFn$_invoke$arity$1(state));\r\nvar ret = (new fulcro.client.primitives.Reconciler(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"pathopt\",\"pathopt\",-61073149),new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844),new cljs.core.Keyword(null,\"merge-ident\",\"merge-ident\",1040841862),new cljs.core.Keyword(null,\"merge-sends\",\"merge-sends\",-1718434202),new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312),new cljs.core.Keyword(null,\"render-mode\",\"render-mode\",-151613976),new cljs.core.Keyword(null,\"migrate\",\"migrate\",-207110743),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"lifecycle\",\"lifecycle\",341496205),new cljs.core.Keyword(null,\"shared-fn\",\"shared-fn\",-180260144),new cljs.core.Keyword(null,\"parser\",\"parser\",-1543495310),new cljs.core.Keyword(null,\"indexer\",\"indexer\",-1774914315),new cljs.core.Keyword(null,\"root-unmount\",\"root-unmount\",1692900789),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"shared\",\"shared\",-384145993),new cljs.core.Keyword(null,\"merge-tree\",\"merge-tree\",-127861161),new cljs.core.Keyword(null,\"root-render\",\"root-render\",835981146),new cljs.core.Keyword(null,\"normalize\",\"normalize\",-1904390051),new cljs.core.Keyword(null,\"tx-listen\",\"tx-listen\",119130367)],[true,instrument,merge_ident,merge_sends,remotes,render_mode,migrate,state_SINGLEQUOTE_,lifecycle,shared_fn,parser,idxr,root_unmount,send,shared,merge_tree,root_render,(function (){var or__3949__auto__ = !(norm_QMARK_);\r\nif(or__3949__auto__){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn normalize;\r\n}\r\n})(),tx_listen]),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"normalized\",\"normalized\",-1887621663),new cljs.core.Keyword(null,\"remote-queue\",\"remote-queue\",1823260578),new cljs.core.Keyword(null,\"remove\",\"remove\",-131428414),new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),new cljs.core.Keyword(null,\"sends-queued\",\"sends-queued\",-1276878712),new cljs.core.Keyword(null,\"queued-sends\",\"queued-sends\",278114765),new cljs.core.Keyword(null,\"queued\",\"queued\",1701634607),new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),new cljs.core.Keyword(null,\"root\",\"root\",-448657453),new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"t\",\"t\",-1397832519),new cljs.core.Keyword(null,\"target\",\"target\",253001721)],[norm_QMARK_,cljs.core.PersistentArrayMap.EMPTY,null,cljs.core.PersistentVector.EMPTY,false,cljs.core.PersistentArrayMap.EMPTY,false,null,null,id,(0),null])),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(fulcro.history.new_history(history)),null,null,null));\r\nreturn ret;\r\n});\r\n/**\r\n * Internal implementation detail of transact!. Call that function instead.\r\n */\r\nfulcro.client.primitives.transact_STAR_ = (function fulcro$client$primitives$transact_STAR_(reconciler,c,ref,tx){\r\nif(cljs.core.truth_(reconciler)){\r\nfulcro.client.impl.protocols.tick_BANG_(reconciler);\r\n\r\nvar cfg = new cljs.core.Keyword(null,\"config\",\"config\",994861415).cljs$core$IFn$_invoke$arity$1(reconciler);\r\nvar ref__$1 = (cljs.core.truth_((function (){var and__3938__auto__ = c;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nvar and__3938__auto____$1 = ((!((c == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === c.fulcro$client$primitives$Ident$))))?true:false):false);\r\nif(and__3938__auto____$1){\r\nreturn cljs.core.not(ref);\r\n} else {\r\nreturn and__3938__auto____$1;\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())?fulcro.client.primitives.ident(c,fulcro.client.primitives.props(c)):ref);\r\nvar env = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fulcro.client.primitives.to_env(cfg),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966),reconciler,new cljs.core.Keyword(null,\"component\",\"component\",1555936782),c], null),(cljs.core.truth_(ref__$1)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),ref__$1], null):null)], 0));\r\nvar old_state = cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(cfg));\r\nvar history = fulcro.client.primitives.get_history(reconciler);\r\nvar v = (function (){var fexpr__39757 = new cljs.core.Keyword(null,\"parser\",\"parser\",-1543495310).cljs$core$IFn$_invoke$arity$1(cfg);\r\nreturn (fexpr__39757.cljs$core$IFn$_invoke$arity$2 ? fexpr__39757.cljs$core$IFn$_invoke$arity$2(env,tx) : fexpr__39757.call(null,env,tx));\r\n})();\r\nvar declared_refreshes = (function (){var or__3949__auto__ = (function (){var G__39762 = v;\r\nvar G__39762__$1 = (((G__39762 == null))?null:cljs.core.meta(G__39762));\r\nvar G__39762__$2 = (((G__39762__$1 == null))?null:new cljs.core.Keyword(\"fulcro.client.primitives\",\"refresh\",\"fulcro.client.primitives/refresh\",481513561).cljs$core$IFn$_invoke$arity$1(G__39762__$1));\r\nif((G__39762__$2 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.vec(G__39762__$2);\r\n}\r\n})();\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}\r\n})();\r\nvar follow_on_reads = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(declared_refreshes,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword_QMARK_,tx));\r\nvar tx_time = fulcro.client.primitives.get_current_time(reconciler);\r\nvar snds = fulcro.client.primitives.gather_sends(env,tx,new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312).cljs$core$IFn$_invoke$arity$1(cfg),tx_time);\r\nvar new_state = cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(cfg));\r\nvar xs = (function (){var G__39763 = follow_on_reads;\r\nvar G__39763__$1 = ((!((c == null)))?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__39763,c):G__39763);\r\nif(!((ref__$1 == null))){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__39763__$1,ref__$1);\r\n} else {\r\nreturn G__39763__$1;\r\n}\r\n})();\r\nvar history_step = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(\"fulcro.history\",\"tx\",\"fulcro.history/tx\",1485693993),tx,new cljs.core.Keyword(\"fulcro.history\",\"client-time\",\"fulcro.history/client-time\",1879420278),(new Date()),new cljs.core.Keyword(\"fulcro.history\",\"network-sends\",\"fulcro.history/network-sends\",-234790789),snds,new cljs.core.Keyword(\"fulcro.history\",\"db-before\",\"fulcro.history/db-before\",650457365),old_state,new cljs.core.Keyword(\"fulcro.history\",\"db-after\",\"fulcro.history/db-after\",-1774997361),new_state], null);\r\nif(cljs.core.truth_(history)){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(history,fulcro.history.record_history_step,tx_time,history_step);\r\n} else {\r\n}\r\n\r\nfulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$2(reconciler,cljs.core.into.cljs$core$IFn$_invoke$arity$3(xs,cljs.core.remove.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol_QMARK_),cljs.core.keys(v)));\r\n\r\nif(cljs.core.empty_QMARK_(snds)){\r\n} else {\r\nvar seq__39764_39785 = cljs.core.seq(snds);\r\nvar chunk__39765_39786 = null;\r\nvar count__39766_39787 = (0);\r\nvar i__39767_39788 = (0);\r\nwhile(true){\r\nif((i__39767_39788 < count__39766_39787)){\r\nvar vec__39768_39789 = chunk__39765_39786.cljs$core$IIndexed$_nth$arity$2(null,i__39767_39788);\r\nvar remote_39790 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39768_39789,(0),null);\r\nvar __39791 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39768_39789,(1),null);\r\nfulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$3(reconciler,xs,remote_39790);\r\n\r\n\r\nvar G__39792 = seq__39764_39785;\r\nvar G__39793 = chunk__39765_39786;\r\nvar G__39794 = count__39766_39787;\r\nvar G__39795 = (i__39767_39788 + (1));\r\nseq__39764_39785 = G__39792;\r\nchunk__39765_39786 = G__39793;\r\ncount__39766_39787 = G__39794;\r\ni__39767_39788 = G__39795;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto___39796 = cljs.core.seq(seq__39764_39785);\r\nif(temp__5457__auto___39796){\r\nvar seq__39764_39797__$1 = temp__5457__auto___39796;\r\nif(cljs.core.chunked_seq_QMARK_(seq__39764_39797__$1)){\r\nvar c__4351__auto___39798 = cljs.core.chunk_first(seq__39764_39797__$1);\r\nvar G__39799 = cljs.core.chunk_rest(seq__39764_39797__$1);\r\nvar G__39800 = c__4351__auto___39798;\r\nvar G__39801 = cljs.core.count(c__4351__auto___39798);\r\nvar G__39802 = (0);\r\nseq__39764_39785 = G__39799;\r\nchunk__39765_39786 = G__39800;\r\ncount__39766_39787 = G__39801;\r\ni__39767_39788 = G__39802;\r\ncontinue;\r\n} else {\r\nvar vec__39774_39803 = cljs.core.first(seq__39764_39797__$1);\r\nvar remote_39804 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39774_39803,(0),null);\r\nvar __39805 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39774_39803,(1),null);\r\nfulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$3(reconciler,xs,remote_39804);\r\n\r\n\r\nvar G__39809 = cljs.core.next(seq__39764_39797__$1);\r\nvar G__39810 = null;\r\nvar G__39811 = (0);\r\nvar G__39812 = (0);\r\nseq__39764_39785 = G__39809;\r\nchunk__39765_39786 = G__39810;\r\ncount__39766_39787 = G__39811;\r\ni__39767_39788 = G__39812;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nfulcro.client.impl.protocols.queue_sends_BANG_(reconciler,snds);\r\n\r\nfulcro.client.primitives.schedule_sends_BANG_(reconciler);\r\n}\r\n\r\nvar temp__5457__auto___39813 = new cljs.core.Keyword(null,\"tx-listen\",\"tx-listen\",119130367).cljs$core$IFn$_invoke$arity$1(cfg);\r\nif(cljs.core.truth_(temp__5457__auto___39813)){\r\nvar f_39814 = temp__5457__auto___39813;\r\nvar tx_data_39815 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"old-state\",\"old-state\",1039580704),old_state,new cljs.core.Keyword(null,\"new-state\",\"new-state\",-490349212),new_state], null)], 0));\r\nvar G__39777_39816 = tx_data_39815;\r\nvar G__39778_39817 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(history_step,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418),tx,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),v], 0));\r\n(f_39814.cljs$core$IFn$_invoke$arity$2 ? f_39814.cljs$core$IFn$_invoke$arity$2(G__39777_39816,G__39778_39817) : f_39814.call(null,G__39777_39816,G__39778_39817));\r\n} else {\r\n}\r\n\r\nreturn v;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Given a query expression annotate all mutations by adding a :mutator -> ident\r\n * entry to the metadata of each mutation expression in the query.\r\n */\r\nfulcro.client.primitives.annotate_mutations = (function fulcro$client$primitives$annotate_mutations(tx,ident){\r\nvar annotate = (function fulcro$client$primitives$annotate_mutations_$_annotate(expr,ident__$1){\r\nvar G__39823 = expr;\r\nif(fulcro.util.mutation_QMARK_(expr)){\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__39823,cljs.core.assoc,new cljs.core.Keyword(null,\"mutator\",\"mutator\",-1326825366),ident__$1);\r\n} else {\r\nreturn G__39823;\r\n}\r\n});\r\nreturn cljs.core.with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__39818_SHARP_){\r\nreturn annotate(p1__39818_SHARP_,ident);\r\n})),tx),cljs.core.meta(tx));\r\n});\r\n/**\r\n * Given a reconciler or component run a transaction. tx is a parse expression\r\n * that should include mutations followed by any necessary read. The reads will\r\n * be used to trigger component re-rendering.\r\n * \r\n * Example:\r\n * \r\n *   (transact! widget\r\n *     '[(do/this!) (do/that!)\r\n *       :read/this :read/that])\r\n * \r\n *  NOTE: transact! is not safe to call from within mutations unless you defer it inside of a setTimeout. This is\r\n *  because otherwise you could potentially nest calls of swap! that will cause unexpected results. In general it\r\n *  the model of Fulcro is such that a call transact! within a mutation is technically just bad design. If you\r\n *  need pessimistic UI control, see ptransact! instead.\r\n */\r\nfulcro.client.primitives.transact_BANG_ = (function fulcro$client$primitives$transact_BANG_(var_args){\r\nvar G__39828 = arguments.length;\r\nswitch (G__39828) {\r\ncase 2:\r\nreturn fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (x,tx){\r\nif(((fulcro.client.primitives.component_QMARK_(x)) || (fulcro.client.primitives.reconciler_QMARK_(x)))){\r\n} else {\r\nthrow (new Error(\"Assert failed: (or (component? x) (reconciler? x))\"));\r\n}\r\n\r\nif(cljs.core.vector_QMARK_(tx)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (vector? tx)\"));\r\n}\r\n\r\nvar tx__$1 = (function (){var G__39829 = tx;\r\nif((function (){var and__3938__auto__ = fulcro.client.primitives.component_QMARK_(x);\r\nif(and__3938__auto__){\r\nif(!((x == null))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === x.fulcro$client$primitives$Ident$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition$)){\r\nreturn cljs.core.native_satisfies_QMARK_(fulcro.client.primitives.Ident,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(fulcro.client.primitives.Ident,x);\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})()){\r\nreturn fulcro.client.primitives.annotate_mutations(G__39829,fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$1(x));\r\n} else {\r\nreturn G__39829;\r\n}\r\n})();\r\nif(fulcro.client.primitives.reconciler_QMARK_(x)){\r\nreturn fulcro.client.primitives.transact_STAR_(x,null,null,tx__$1);\r\n} else {\r\nif(cljs.core.not(fulcro.client.primitives.some_hasquery_QMARK_(x))){\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2375], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"transact! should be called on a component\",\"that implements IQuery or has a parent that\",\"implements IQuery\"].join('')], 0));\r\n}catch (e39832){if((e39832 instanceof Error)){\r\nvar e__31518__auto___39844 = e39832;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2375], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___39844], 0));\r\n} else {\r\nthrow e39832;\r\n\r\n}\r\n}\r\nreturn fulcro.client.primitives.transact_STAR_(fulcro.client.primitives.get_reconciler(x),null,null,tx__$1);\r\n} else {\r\nvar p = fulcro.client.primitives.parent(x);\r\nvar x__$1 = x;\r\nvar tx__$2 = tx__$1;\r\nwhile(true){\r\nif((p == null)){\r\nvar r = fulcro.client.primitives.get_reconciler(x__$1);\r\nreturn fulcro.client.primitives.transact_STAR_(r,x__$1,null,tx__$2);\r\n} else {\r\nvar vec__39836 = ((((!((p == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === p.fulcro$client$impl$protocols$ITxIntercept$))))?true:false):false))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p,fulcro.client.impl.protocols.tx_intercept(p,tx__$2)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x__$1,tx__$2], null));\r\nvar x_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39836,(0),null);\r\nvar tx__$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39836,(1),null);\r\nvar G__39845 = fulcro.client.primitives.parent(p);\r\nvar G__39846 = x_SINGLEQUOTE_;\r\nvar G__39847 = tx__$3;\r\np = G__39845;\r\nx__$1 = G__39846;\r\ntx__$2 = G__39847;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n\r\n}\r\n}\r\n});\r\n\r\nfulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (r,ref,tx){\r\nreturn fulcro.client.primitives.transact_STAR_(r,null,ref,tx);\r\n});\r\n\r\nfulcro.client.primitives.transact_BANG_.cljs$lang$maxFixedArity = 3;\r\n\r\n/**\r\n * Identical to `transact!`, but marks the history edge as compressible. This means that if more than one\r\n *   adjacent history transition edge is compressible, only the more recent of the sequence of them is kept. This\r\n *   is useful for things like form input fields, where storing every keystoke in history is undesirable.\r\n * \r\n *   NOTE: history events that trigger remote interactions are not compressible, since they may be needed for\r\n *   automatic network error recovery handling..\r\n */\r\nfulcro.client.primitives.compressible_transact_BANG_ = (function fulcro$client$primitives$compressible_transact_BANG_(comp_or_reconciler,tx){\r\nreturn fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2(comp_or_reconciler,fulcro.history.compressible_tx(tx));\r\n});\r\n/**\r\n * Shallow merge new-state into the state of this component. This is asynchronous and will NOT be reflected by\r\n *   `get-state` immediately, since the underlying React setState and will trigger an refresh\r\n *   according to React rules (see React dos for the version you're using).\r\n * \r\n *   This function manages a cljs map within React props, and does the shallow merge by key, so setting state:\r\n * \r\n *   {:x 1}\r\n * \r\n *   against an existing state of {:y 2} will yield:\r\n * \r\n *   {:x 1 :y 2}\r\n * \r\n *   The callback is as described in the React docs (it is invoked after the state is updated).\r\n * \r\n *   If you want to control the update function itself, use `update-state!`.\r\n * \r\n *   If you're wanting low-level js interop to affect low-level js props: use React's `setState`.\r\n */\r\nfulcro.client.primitives.set_state_BANG_ = (function fulcro$client$primitives$set_state_BANG_(var_args){\r\nvar G__39855 = arguments.length;\r\nswitch (G__39855) {\r\ncase 3:\r\nreturn fulcro.client.primitives.set_state_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn fulcro.client.primitives.set_state_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (component,new_state,callback){\r\nif(fulcro.client.primitives.component_QMARK_(component)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (component? component)\"));\r\n}\r\n\r\nreturn component.setState((function (prev_state,props){\r\nreturn ({\"fulcro$state\": cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([goog.object.get(prev_state,\"fulcro$state\"),new_state], 0))});\r\n}),callback);\r\n});\r\n\r\nfulcro.client.primitives.set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (component,new_state){\r\nif(fulcro.client.primitives.component_QMARK_(component)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (component? component)\"));\r\n}\r\n\r\nreturn fulcro.client.primitives.set_state_BANG_.cljs$core$IFn$_invoke$arity$3(component,new_state,null);\r\n});\r\n\r\nfulcro.client.primitives.set_state_BANG_.cljs$lang$maxFixedArity = 3;\r\n\r\n/**\r\n * DEPRECATED: Use set-state! which *is* a React-level primitive now.\r\n */\r\nfulcro.client.primitives.react_set_state_BANG_ = (function fulcro$client$primitives$react_set_state_BANG_(var_args){\r\nvar G__39863 = arguments.length;\r\nswitch (G__39863) {\r\ncase 2:\r\nreturn fulcro.client.primitives.react_set_state_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn fulcro.client.primitives.react_set_state_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.react_set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (component,new_state){\r\nreturn fulcro.client.primitives.react_set_state_BANG_.cljs$core$IFn$_invoke$arity$3(component,new_state,null);\r\n});\r\n\r\nfulcro.client.primitives.react_set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (component,new_state,cb){\r\nreturn fulcro.client.primitives.set_state_BANG_.cljs$core$IFn$_invoke$arity$3(component,new_state,cb);\r\n});\r\n\r\nfulcro.client.primitives.react_set_state_BANG_.cljs$lang$maxFixedArity = 3;\r\n\r\nvar update_fn_39876 = (function (component,f,args){\r\nreturn component.setState((function (prev_state,props){\r\nreturn ({\"fulcro$state\": cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,goog.object.get(prev_state,\"fulcro$state\"),args)});\r\n}));\r\n});\r\n/**\r\n * Update a component's local state. Similar to Clojure(Script)'s swap!\r\n * \r\n *  This function affects a managed cljs map maintained in React state.  If you want to affect the low-level\r\n *  js state itself use React's own `.setState` on the component.\r\n */\r\nfulcro.client.primitives.update_state_BANG_ = ((function (update_fn_39876){\r\nreturn (function fulcro$client$primitives$update_state_BANG_(var_args){\r\nvar G__39873 = arguments.length;\r\nswitch (G__39873) {\r\ncase 2:\r\nreturn fulcro.client.primitives.update_state_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4546__auto__ = [];\r\nvar len__4531__auto___39879 = arguments.length;\r\nvar i__4532__auto___39880 = (0);\r\nwhile(true){\r\nif((i__4532__auto___39880 < len__4531__auto___39879)){\r\nargs_arr__4546__auto__.push((arguments[i__4532__auto___39880]));\r\n\r\nvar G__39881 = (i__4532__auto___39880 + (1));\r\ni__4532__auto___39880 = G__39881;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4547__auto__ = (new cljs.core.IndexedSeq(args_arr__4546__auto__.slice((2)),(0),null));\r\nreturn fulcro.client.primitives.update_state_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4547__auto__);\r\n\r\n}\r\n});})(update_fn_39876))\r\n;\r\n\r\nfulcro.client.primitives.update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = ((function (update_fn_39876){\r\nreturn (function (component,f){\r\nreturn update_fn_39876(component,f,cljs.core.PersistentVector.EMPTY);\r\n});})(update_fn_39876))\r\n;\r\n\r\nfulcro.client.primitives.update_state_BANG_.cljs$core$IFn$_invoke$arity$variadic = ((function (update_fn_39876){\r\nreturn (function (component,f,args){\r\nreturn update_fn_39876(component,f,args);\r\n});})(update_fn_39876))\r\n;\r\n\r\n/** @this {Function} */\r\nfulcro.client.primitives.update_state_BANG_.cljs$lang$applyTo = ((function (update_fn_39876){\r\nreturn (function (seq39870){\r\nvar G__39871 = cljs.core.first(seq39870);\r\nvar seq39870__$1 = cljs.core.next(seq39870);\r\nvar G__39872 = cljs.core.first(seq39870__$1);\r\nvar seq39870__$2 = cljs.core.next(seq39870__$1);\r\nvar self__4518__auto__ = this;\r\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__39871,G__39872,seq39870__$2);\r\n});})(update_fn_39876))\r\n;\r\n\r\nfulcro.client.primitives.update_state_BANG_.cljs$lang$maxFixedArity = (2);\r\n\r\n/**\r\n * Return the reconciler's application state atom. Useful when the reconciler\r\n * was initialized via denormalized data.\r\n */\r\nfulcro.client.primitives.app_state = (function fulcro$client$primitives$app_state(reconciler){\r\nif(fulcro.client.primitives.reconciler_QMARK_(reconciler)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (reconciler? reconciler)\"));\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"config\",\"config\",994861415).cljs$core$IFn$_invoke$arity$1(reconciler));\r\n});\r\n/**\r\n * Get the normalized database state as a map. Requires a mounted component instance.\r\n */\r\nfulcro.client.primitives.component__GT_state_map = (function fulcro$client$primitives$component__GT_state_map(component){\r\nvar G__39885 = component;\r\nvar G__39885__$1 = (((G__39885 == null))?null:fulcro.client.primitives.get_reconciler(G__39885));\r\nvar G__39885__$2 = (((G__39885__$1 == null))?null:new cljs.core.Keyword(null,\"config\",\"config\",994861415).cljs$core$IFn$_invoke$arity$1(G__39885__$1));\r\nvar G__39885__$3 = (((G__39885__$2 == null))?null:new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(G__39885__$2));\r\nif((G__39885__$3 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.deref(G__39885__$3);\r\n}\r\n});\r\n/**\r\n * Return the application's root component.\r\n */\r\nfulcro.client.primitives.app_root = (function fulcro$client$primitives$app_root(reconciler){\r\nif(fulcro.client.primitives.reconciler_QMARK_(reconciler)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (reconciler? reconciler)\"));\r\n}\r\n\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(reconciler)),new cljs.core.Keyword(null,\"root\",\"root\",-448657453));\r\n});\r\n/**\r\n * Given a query expression convert it into an AST.\r\n */\r\nfulcro.client.primitives.query__GT_ast = (function fulcro$client$primitives$query__GT_ast(query_expr){\r\nreturn fulcro.client.impl.parser.query__GT_ast(query_expr);\r\n});\r\n/**\r\n * Call query->ast and return the first children.\r\n */\r\nfulcro.client.primitives.query__GT_ast1 = (function fulcro$client$primitives$query__GT_ast1(query_expr){\r\nreturn cljs.core.first(new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(fulcro.client.primitives.query__GT_ast(query_expr)));\r\n});\r\nfulcro.client.primitives.ast__GT_query = (function fulcro$client$primitives$ast__GT_query(query_ast){\r\n\r\nreturn fulcro.client.impl.parser.ast__GT_expr.cljs$core$IFn$_invoke$arity$2(query_ast,true);\r\n});\r\n/**\r\n * Force a re-render of the root. Runs a root query, disables shouldComponentUpdate, and renders the root component.\r\n * This effectively forces React to do a full VDOM diff. Useful for things like changing locales where there are no\r\n * real data changes, but the UI still needs to refresh.\r\n * recomputing :shared.\r\n */\r\nfulcro.client.primitives.force_root_render_BANG_ = (function fulcro$client$primitives$force_root_render_BANG_(reconciler){\r\nif(fulcro.client.primitives.reconciler_QMARK_(reconciler)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (reconciler? reconciler)\"));\r\n}\r\n\r\nvar temp__5457__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(reconciler)),new cljs.core.Keyword(null,\"render\",\"render\",-1408033454));\r\nif(cljs.core.truth_(temp__5457__auto__)){\r\nvar render = temp__5457__auto__;\r\nvar _STAR_blindly_render_STAR_39895 = fulcro.client.primitives._STAR_blindly_render_STAR_;\r\nfulcro.client.primitives._STAR_blindly_render_STAR_ = true;\r\n\r\ntry{return (render.cljs$core$IFn$_invoke$arity$0 ? render.cljs$core$IFn$_invoke$arity$0() : render.call(null));\r\n}finally {fulcro.client.primitives._STAR_blindly_render_STAR_ = _STAR_blindly_render_STAR_39895;\r\n}} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Return a temporary id.\r\n */\r\nfulcro.client.primitives.tempid = (function fulcro$client$primitives$tempid(var_args){\r\nvar G__39897 = arguments.length;\r\nswitch (G__39897) {\r\ncase 0:\r\nreturn fulcro.client.primitives.tempid.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn fulcro.client.primitives.tempid.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.tempid.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn fulcro.tempid.tempid.cljs$core$IFn$_invoke$arity$0();\r\n});\r\n\r\nfulcro.client.primitives.tempid.cljs$core$IFn$_invoke$arity$1 = (function (id){\r\nreturn fulcro.tempid.tempid.cljs$core$IFn$_invoke$arity$1(id);\r\n});\r\n\r\nfulcro.client.primitives.tempid.cljs$lang$maxFixedArity = 1;\r\n\r\n/**\r\n * Return true if x is a tempid, false otherwise\r\n */\r\nfulcro.client.primitives.tempid_QMARK_ = (function fulcro$client$primitives$tempid_QMARK_(x){\r\nreturn fulcro.tempid.tempid_QMARK_(x);\r\n});\r\n/**\r\n * Create a transit reader. This reader can handler the tempid type.\r\n *    Can pass transit reader customization opts map.\r\n */\r\nfulcro.client.primitives.reader = (function fulcro$client$primitives$reader(var_args){\r\nvar G__39903 = arguments.length;\r\nswitch (G__39903) {\r\ncase 0:\r\nreturn fulcro.client.primitives.reader.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn fulcro.client.primitives.reader.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.reader.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn fulcro.transit.reader.cljs$core$IFn$_invoke$arity$0();\r\n});\r\n\r\nfulcro.client.primitives.reader.cljs$core$IFn$_invoke$arity$1 = (function (opts){\r\nreturn fulcro.transit.reader.cljs$core$IFn$_invoke$arity$1(opts);\r\n});\r\n\r\nfulcro.client.primitives.reader.cljs$lang$maxFixedArity = 1;\r\n\r\n/**\r\n * Create a transit writer. This writer can handler the tempid type.\r\n * Can pass transit writer customization opts map.\r\n */\r\nfulcro.client.primitives.writer = (function fulcro$client$primitives$writer(var_args){\r\nvar G__39909 = arguments.length;\r\nswitch (G__39909) {\r\ncase 0:\r\nreturn fulcro.client.primitives.writer.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn fulcro.client.primitives.writer.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.writer.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn fulcro.transit.writer.cljs$core$IFn$_invoke$arity$0();\r\n});\r\n\r\nfulcro.client.primitives.writer.cljs$core$IFn$_invoke$arity$1 = (function (opts){\r\nreturn fulcro.transit.writer.cljs$core$IFn$_invoke$arity$1(opts);\r\n});\r\n\r\nfulcro.client.primitives.writer.cljs$lang$maxFixedArity = 1;\r\n\r\n/**\r\n * Helper function for implementing :read and :mutate as multimethods. Use this\r\n * as the dispatch-fn.\r\n */\r\nfulcro.client.primitives.dispatch = (function fulcro$client$primitives$dispatch(_,key,___$1){\r\nreturn key;\r\n});\r\n/**\r\n * Create a parser. The argument is a map of two keys, :read and :mutate. Both\r\n * functions should have the signature (Env -> Key -> Params -> ParseResult).\r\n * \r\n * The mutation functions return a map keyed by:\r\n * \r\n * `:action` - The lambda to run to do the local optimistic version of that mutation\r\n * any-keyword-matching-a-remote - A boolean true or AST expression of the thing to run on the named remote.\r\n * :refresh - A vector of namespaced keywords of data that was/will be changed by this mutation\r\n * \r\n * When the parser runs on mutations it collects the `:refresh` list into the metadata of the results\r\n * under the :fulcro.client.primitives/refresh key.\r\n */\r\nfulcro.client.primitives.parser = (function fulcro$client$primitives$parser(p__39917){\r\nvar map__39918 = p__39917;\r\nvar map__39918__$1 = ((((!((map__39918 == null)))?(((((map__39918.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39918.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39918):map__39918);\r\nvar opts = map__39918__$1;\r\nvar read = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39918__$1,new cljs.core.Keyword(null,\"read\",\"read\",1140058661));\r\nvar mutate = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39918__$1,new cljs.core.Keyword(null,\"mutate\",\"mutate\",1422419038));\r\nif(cljs.core.map_QMARK_(opts)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (map? opts)\"));\r\n}\r\n\r\nreturn fulcro.client.impl.parser.parser(opts);\r\n});\r\n/**\r\n * Given a root component class and a target root DOM node, instantiate and\r\n * render the root class using the reconciler's :state property. The reconciler\r\n * will continue to observe changes to :state and keep the target node in sync.\r\n * Note a reconciler may have only one root. If invoked on a reconciler with an\r\n * existing root, the new root will replace the old one.\r\n */\r\nfulcro.client.primitives.add_root_BANG_ = (function fulcro$client$primitives$add_root_BANG_(var_args){\r\nvar G__39924 = arguments.length;\r\nswitch (G__39924) {\r\ncase 3:\r\nreturn fulcro.client.primitives.add_root_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn fulcro.client.primitives.add_root_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.add_root_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (reconciler,root_class,target){\r\nreturn fulcro.client.primitives.add_root_BANG_.cljs$core$IFn$_invoke$arity$4(reconciler,root_class,target,null);\r\n});\r\n\r\nfulcro.client.primitives.add_root_BANG_.cljs$core$IFn$_invoke$arity$4 = (function (reconciler,root_class,target,options){\r\nif(fulcro.client.primitives.reconciler_QMARK_(reconciler)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (reconciler? reconciler)\"));\r\n}\r\n\r\nif(cljs.core.fn_QMARK_(root_class)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (fn? root-class)\"));\r\n}\r\n\r\nvar temp__5457__auto___39929 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(fulcro.client.primitives.roots),target);\r\nif(cljs.core.truth_(temp__5457__auto___39929)){\r\nvar old_reconciler_39930 = temp__5457__auto___39929;\r\n(fulcro.client.primitives.remove_root_BANG_.cljs$core$IFn$_invoke$arity$2 ? fulcro.client.primitives.remove_root_BANG_.cljs$core$IFn$_invoke$arity$2(old_reconciler_39930,target) : fulcro.client.primitives.remove_root_BANG_.call(null,old_reconciler_39930,target));\r\n} else {\r\n}\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(fulcro.client.primitives.roots,cljs.core.assoc,target,reconciler);\r\n\r\nreturn fulcro.client.impl.protocols.add_root_BANG_(reconciler,root_class,target,options);\r\n});\r\n\r\nfulcro.client.primitives.add_root_BANG_.cljs$lang$maxFixedArity = 4;\r\n\r\n/**\r\n * Remove a root target (a DOM element) from a reconciler. The reconciler will\r\n * no longer attempt to reconcile application state with the specified root.\r\n */\r\nfulcro.client.primitives.remove_root_BANG_ = (function fulcro$client$primitives$remove_root_BANG_(reconciler,target){\r\nreturn fulcro.client.impl.protocols.remove_root_BANG_(reconciler,target);\r\n});\r\n/**\r\n * Return the global shared properties of the root. See :shared and\r\n * :shared-fn reconciler options.\r\n */\r\nfulcro.client.primitives.shared = (function fulcro$client$primitives$shared(var_args){\r\nvar G__39935 = arguments.length;\r\nswitch (G__39935) {\r\ncase 1:\r\nreturn fulcro.client.primitives.shared.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn fulcro.client.primitives.shared.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.shared.cljs$core$IFn$_invoke$arity$1 = (function (component){\r\nreturn fulcro.client.primitives.shared.cljs$core$IFn$_invoke$arity$2(component,cljs.core.PersistentVector.EMPTY);\r\n});\r\n\r\nfulcro.client.primitives.shared.cljs$core$IFn$_invoke$arity$2 = (function (component,k_or_ks){\r\nif(fulcro.client.primitives.component_QMARK_(component)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (component? component)\"));\r\n}\r\n\r\nvar shared = (function (){var G__39936 = component.props;\r\nvar G__39937 = \"fulcro$shared\";\r\nreturn goog.object.get(G__39936,G__39937);\r\n})();\r\nvar ks = (function (){var G__39938 = k_or_ks;\r\nif(!(cljs.core.sequential_QMARK_(k_or_ks))){\r\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[G__39938],null));\r\n} else {\r\nreturn G__39938;\r\n}\r\n})();\r\nvar G__39939 = shared;\r\nif(!(cljs.core.empty_QMARK_(ks))){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(G__39939,ks);\r\n} else {\r\nreturn G__39939;\r\n}\r\n});\r\n\r\nfulcro.client.primitives.shared.cljs$lang$maxFixedArity = 2;\r\n\r\nfulcro.client.primitives.instrument = (function fulcro$client$primitives$instrument(component){\r\nif(fulcro.client.primitives.component_QMARK_(component)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (component? component)\"));\r\n}\r\n\r\nreturn fulcro.client.primitives.get_raw_react_prop(component,\"fulcro$instrument\");\r\n});\r\nfulcro.client.primitives.merge_pending_state_BANG_ = (function fulcro$client$primitives$merge_pending_state_BANG_(c){\r\nvar temp__5457__auto__ = (function (){var G__39944 = c;\r\nvar G__39944__$1 = (((G__39944 == null))?null:G__39944.state);\r\nif((G__39944__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn goog.object.get(G__39944__$1,\"fulcro$pendingState\");\r\n}\r\n})();\r\nif(cljs.core.truth_(temp__5457__auto__)){\r\nvar pending = temp__5457__auto__;\r\nvar state = c.state;\r\nvar previous = goog.object.get(state,\"fulcro$state\");\r\ngoog.object.remove(state,\"fulcro$pendingState\");\r\n\r\ngoog.object.set(state,\"fulcro$previousState\",previous);\r\n\r\nreturn goog.object.set(state,\"fulcro$state\",pending);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Get any component from the indexer that matches the component class.\r\n */\r\nfulcro.client.primitives.class__GT_any = (function fulcro$client$primitives$class__GT_any(x,class$){\r\nvar indexer = ((fulcro.client.primitives.reconciler_QMARK_(x))?fulcro.client.primitives.get_indexer(x):x);\r\nreturn cljs.core.first(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(indexer),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919),class$], null)));\r\n});\r\n/**\r\n * Get any component from the indexer that matches the component class.\r\n */\r\nfulcro.client.primitives.class__GT_all = (function fulcro$client$primitives$class__GT_all(x,class$){\r\nvar indexer = ((fulcro.client.primitives.reconciler_QMARK_(x))?fulcro.client.primitives.get_indexer(x):x);\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(indexer),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919),class$], null));\r\n});\r\n/**\r\n * Return all components for a given ref.\r\n */\r\nfulcro.client.primitives.ref__GT_components = (function fulcro$client$primitives$ref__GT_components(x,ref){\r\nif((ref == null)){\r\nreturn null;\r\n} else {\r\nvar indexer = ((fulcro.client.primitives.reconciler_QMARK_(x))?fulcro.client.primitives.get_indexer(x):x);\r\nreturn fulcro.client.impl.protocols.key__GT_components(indexer,ref);\r\n}\r\n});\r\n/**\r\n * Get the rendered state of component. fulcro.client.primitives/get-state always returns the\r\n * up-to-date state.\r\n */\r\nfulcro.client.primitives.get_rendered_state = (function fulcro$client$primitives$get_rendered_state(var_args){\r\nvar G__39955 = arguments.length;\r\nswitch (G__39955) {\r\ncase 1:\r\nreturn fulcro.client.primitives.get_rendered_state.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn fulcro.client.primitives.get_rendered_state.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.get_rendered_state.cljs$core$IFn$_invoke$arity$1 = (function (component){\r\nreturn fulcro.client.primitives.get_rendered_state.cljs$core$IFn$_invoke$arity$2(component,cljs.core.PersistentVector.EMPTY);\r\n});\r\n\r\nfulcro.client.primitives.get_rendered_state.cljs$core$IFn$_invoke$arity$2 = (function (component,k_or_ks){\r\nif(fulcro.client.primitives.component_QMARK_(component)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (component? component)\"));\r\n}\r\n\r\nvar cst = (function (){var G__39956 = component;\r\nvar G__39956__$1 = (((G__39956 == null))?null:G__39956.state);\r\nif((G__39956__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn goog.object.get(G__39956__$1,\"fulcro$state\");\r\n}\r\n})();\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cst,((cljs.core.sequential_QMARK_(k_or_ks))?k_or_ks:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k_or_ks], null)));\r\n});\r\n\r\nfulcro.client.primitives.get_rendered_state.cljs$lang$maxFixedArity = 2;\r\n\r\nfulcro.client.primitives.nil_or_map_QMARK_ = (function fulcro$client$primitives$nil_or_map_QMARK_(x){\r\nreturn (((x == null)) || (cljs.core.map_QMARK_(x)));\r\n});\r\n/**\r\n * Returns the component associated with a component's React ref.\r\n */\r\nfulcro.client.primitives.react_ref = (function fulcro$client$primitives$react_ref(component,name){\r\nvar G__39964 = component.refs;\r\nif((G__39964 == null)){\r\nreturn null;\r\n} else {\r\nreturn goog.object.get(G__39964,name);\r\n}\r\n});\r\n/**\r\n * Set a dynamic query. ALters the query, and then rebuilds internal indexes.\r\n */\r\nfulcro.client.primitives.set_query_BANG_ = (function fulcro$client$primitives$set_query_BANG_(component_or_reconciler,ui_factory_or_queryid,p__39968){\r\nvar map__39969 = p__39968;\r\nvar map__39969__$1 = ((((!((map__39969 == null)))?(((((map__39969.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39969.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39969):map__39969);\r\nvar opts = map__39969__$1;\r\nvar query = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39969__$1,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\r\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39969__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\r\nvar follow_on_reads = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39969__$1,new cljs.core.Keyword(null,\"follow-on-reads\",\"follow-on-reads\",-2113573300));\r\nvar reconciler = ((fulcro.client.primitives.reconciler_QMARK_(component_or_reconciler))?component_or_reconciler:fulcro.client.primitives.get_reconciler(component_or_reconciler));\r\nvar queryid = ((typeof ui_factory_or_queryid === 'string')?ui_factory_or_queryid:(cljs.core.truth_((function (){var G__39971 = ui_factory_or_queryid;\r\nvar G__39971__$1 = (((G__39971 == null))?null:cljs.core.meta(G__39971));\r\nif((G__39971__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.contains_QMARK_(G__39971__$1,new cljs.core.Keyword(null,\"queryid\",\"queryid\",-271432056));\r\n}\r\n})())?(function (){var G__39972 = ui_factory_or_queryid;\r\nvar G__39972__$1 = (((G__39972 == null))?null:cljs.core.meta(G__39972));\r\nif((G__39972__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"queryid\",\"queryid\",-271432056).cljs$core$IFn$_invoke$arity$1(G__39972__$1);\r\n}\r\n})():fulcro.client.primitives.query_id(ui_factory_or_queryid,null)\r\n));\r\nvar tx = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.mutations\",\"set-query!\",\"fulcro.client.mutations/set-query!\",1750034612,null),null,(1),null)),(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Keyword(null,\"queryid\",\"queryid\",-271432056),null,(1),null)),(new cljs.core.List(null,queryid,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510),null,(1),null)),(new cljs.core.List(null,query,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,(1),null)),(new cljs.core.List(null,params,null,(1),null))], 0))))),null,(1),null))))),null,(1),null)))))),follow_on_reads);\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = typeof queryid === 'string';\r\nif(and__3938__auto__){\r\nvar or__3949__auto__ = query;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn params;\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nfulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2(reconciler,tx);\r\n\r\nreturn fulcro.client.impl.protocols.reindex_BANG_(reconciler);\r\n} else {\r\ntry{return fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2660], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Unable to set query. Invalid arguments.\"], 0));\r\n}catch (e39976){if((e39976 instanceof Error)){\r\nvar e__31518__auto__ = e39976;\r\nreturn fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2660], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto__], 0));\r\n} else {\r\nthrow e39976;\r\n\r\n}\r\n}}\r\n});\r\n/**\r\n * Converts a sequence of calls as if each call should run in sequence (deferring even the optimistic side until\r\n *   the prior calls have completed in a full-stack manner), and returns a tx that can be submitted via the normal\r\n *   `transact!`.\r\n * \r\n *   The options map can contain:\r\n *   `valid-remotes` is a set of remote names in your application. Defaults to `#{:remote}`\r\n *   `env` is a map that is merged into the deferred transaction's `env`\r\n * \r\n *   WARNING: If a mutation tries to interact with more than one simultaneous remote, the current implementation will wait\r\n *   until the *first* one of them completes (selected in a non-deterministic fashion), not all.\r\n */\r\nfulcro.client.primitives.pessimistic_transaction__GT_transaction = (function fulcro$client$primitives$pessimistic_transaction__GT_transaction(var_args){\r\nvar G__39986 = arguments.length;\r\nswitch (G__39986) {\r\ncase 1:\r\nreturn fulcro.client.primitives.pessimistic_transaction__GT_transaction.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn fulcro.client.primitives.pessimistic_transaction__GT_transaction.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.pessimistic_transaction__GT_transaction.cljs$core$IFn$_invoke$arity$1 = (function (tx){\r\nreturn fulcro.client.primitives.pessimistic_transaction__GT_transaction.cljs$core$IFn$_invoke$arity$2(tx,null);\r\n});\r\n\r\nfulcro.client.primitives.pessimistic_transaction__GT_transaction.cljs$core$IFn$_invoke$arity$2 = (function (tx,p__39987){\r\nvar map__39988 = p__39987;\r\nvar map__39988__$1 = ((((!((map__39988 == null)))?(((((map__39988.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39988.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39988):map__39988);\r\nvar options = map__39988__$1;\r\nvar valid_remotes = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__39988__$1,new cljs.core.Keyword(null,\"valid-remotes\",\"valid-remotes\",-1188757845),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576),null], null), null));\r\nvar env = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__39988__$1,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),cljs.core.PersistentArrayMap.EMPTY);\r\nvar state_map = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__39988__$1,new cljs.core.Keyword(null,\"state-map\",\"state-map\",-1313872128),cljs.core.PersistentArrayMap.EMPTY);\r\nvar ast_nodes = new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(fulcro.client.primitives.query__GT_ast(tx));\r\nvar map__39993 = cljs.core.group_by(((function (ast_nodes,map__39988,map__39988__$1,options,valid_remotes,env,state_map){\r\nreturn (function (p1__39983_SHARP_){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"call\",\"call\",-519999866),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(p1__39983_SHARP_));\r\n});})(ast_nodes,map__39988,map__39988__$1,options,valid_remotes,env,state_map))\r\n,ast_nodes);\r\nvar map__39993__$1 = ((((!((map__39993 == null)))?(((((map__39993.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39993.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39993):map__39993);\r\nvar ast_calls = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39993__$1,true);\r\nvar ast_reads = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39993__$1,false);\r\nvar ast_follow_on_reads = fulcro.client.primitives.ast__GT_query(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"root\",\"root\",-448657453),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),ast_reads], null));\r\nvar remote_for_ast_call = ((function (ast_nodes,map__39993,map__39993__$1,ast_calls,ast_reads,ast_follow_on_reads,map__39988,map__39988__$1,options,valid_remotes,env,state_map){\r\nreturn (function (c){\r\nvar dispatch_key = new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510).cljs$core$IFn$_invoke$arity$1(c);\r\nvar get_remotes = (function (){var or__3949__auto__ = (function (){var G__40003 = (((typeof fulcro !== 'undefined') && (typeof fulcro.client !== 'undefined') && (typeof fulcro.client.data_fetch !== 'undefined') && (typeof fulcro.client.data_fetch.get_remotes !== 'undefined'))?(new cljs.core.Var(((function (dispatch_key,ast_nodes,map__39993,map__39993__$1,ast_calls,ast_reads,ast_follow_on_reads,map__39988,map__39988__$1,options,valid_remotes,env,state_map){\r\nreturn (function (){\r\nreturn fulcro.client.data_fetch.get_remotes;\r\n});})(dispatch_key,ast_nodes,map__39993,map__39993__$1,ast_calls,ast_reads,ast_follow_on_reads,map__39988,map__39988__$1,options,valid_remotes,env,state_map))\r\n,cljs.core.with_meta(new cljs.core.Symbol(\"fulcro.client.data-fetch\",\"get-remotes\",\"fulcro.client.data-fetch/get-remotes\",-1426481225,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017),true], null)),null)):null);\r\nif((G__40003 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.deref(G__40003);\r\n}\r\n})();\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn ((function (or__3949__auto__,dispatch_key,ast_nodes,map__39993,map__39993__$1,ast_calls,ast_reads,ast_follow_on_reads,map__39988,map__39988__$1,options,valid_remotes,env,state_map){\r\nreturn (function (state_map__$1,sym){\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2683], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"FAILED TO FIND get-remotes. CANNOT DERIVE REMOTES FOR ptransact! Assuming :remote\"], 0));\r\n}catch (e40007){if((e40007 instanceof Error)){\r\nvar e__31518__auto___40021 = e40007;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),2683], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___40021], 0));\r\n} else {\r\nthrow e40007;\r\n\r\n}\r\n}\r\nreturn new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576),null], null), null);\r\n});\r\n;})(or__3949__auto__,dispatch_key,ast_nodes,map__39993,map__39993__$1,ast_calls,ast_reads,ast_follow_on_reads,map__39988,map__39988__$1,options,valid_remotes,env,state_map))\r\n}\r\n})();\r\nvar remotes = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"fallback\",cljs.core.name(dispatch_key)))?cljs.core.PersistentHashSet.EMPTY:(get_remotes.cljs$core$IFn$_invoke$arity$2 ? get_remotes.cljs$core$IFn$_invoke$arity$2(state_map,dispatch_key) : get_remotes.call(null,state_map,dispatch_key)));\r\nif(cljs.core.seq(remotes)){\r\nreturn cljs.core.first(remotes);\r\n} else {\r\nreturn null;\r\n}\r\n});})(ast_nodes,map__39993,map__39993__$1,ast_calls,ast_reads,ast_follow_on_reads,map__39988,map__39988__$1,options,valid_remotes,env,state_map))\r\n;\r\nvar is_local_QMARK_ = ((function (ast_nodes,map__39993,map__39993__$1,ast_calls,ast_reads,ast_follow_on_reads,remote_for_ast_call,map__39988,map__39988__$1,options,valid_remotes,env,state_map){\r\nreturn (function (c){\r\nreturn cljs.core.not(remote_for_ast_call(c));\r\n});})(ast_nodes,map__39993,map__39993__$1,ast_calls,ast_reads,ast_follow_on_reads,remote_for_ast_call,map__39988,map__39988__$1,options,valid_remotes,env,state_map))\r\n;\r\nvar vec__39994 = cljs.core.split_with(is_local_QMARK_,ast_calls);\r\nvar ast_local_calls = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39994,(0),null);\r\nvar ast_remaining_calls = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39994,(1),null);\r\nvar ast_first_remote_call = (function (){var G__40008 = ast_remaining_calls;\r\nif((G__40008 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.first(G__40008);\r\n}\r\n})();\r\nvar remote = (function (){var G__40009 = ast_first_remote_call;\r\nif((G__40009 == null)){\r\nreturn null;\r\n} else {\r\nreturn remote_for_ast_call(G__40009);\r\n}\r\n})();\r\nvar unprocessed_call_asts = cljs.core.vec(cljs.core.rest(ast_remaining_calls));\r\nvar vec__39997 = cljs.core.split_with(is_local_QMARK_,unprocessed_call_asts);\r\nvar possible_fallback_asts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39997,(0),null);\r\nvar distant_call_asts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39997,(1),null);\r\nvar map__40000 = cljs.core.group_by(((function (ast_nodes,map__39993,map__39993__$1,ast_calls,ast_reads,ast_follow_on_reads,remote_for_ast_call,is_local_QMARK_,vec__39994,ast_local_calls,ast_remaining_calls,ast_first_remote_call,remote,unprocessed_call_asts,vec__39997,possible_fallback_asts,distant_call_asts,map__39988,map__39988__$1,options,valid_remotes,env,state_map){\r\nreturn (function (p1__39984_SHARP_){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"fallback\",cljs.core.name(new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510).cljs$core$IFn$_invoke$arity$1(p1__39984_SHARP_)));\r\n});})(ast_nodes,map__39993,map__39993__$1,ast_calls,ast_reads,ast_follow_on_reads,remote_for_ast_call,is_local_QMARK_,vec__39994,ast_local_calls,ast_remaining_calls,ast_first_remote_call,remote,unprocessed_call_asts,vec__39997,possible_fallback_asts,distant_call_asts,map__39988,map__39988__$1,options,valid_remotes,env,state_map))\r\n,possible_fallback_asts);\r\nvar map__40000__$1 = ((((!((map__40000 == null)))?(((((map__40000.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40000.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40000):map__40000);\r\nvar fallback_asts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40000__$1,true);\r\nvar following_call_asts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40000__$1,false);\r\nvar unprocessed_tx = fulcro.client.primitives.ast__GT_query(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"root\",\"root\",-448657453),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(following_call_asts,distant_call_asts)], null));\r\nvar calls_to_run_now = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(ast_local_calls,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ast_first_remote_call], null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fallback_asts], 0)));\r\nvar tx_for_calls = fulcro.client.primitives.ast__GT_query(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"root\",\"root\",-448657453),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),calls_to_run_now], null));\r\nvar tx_to_run_now = cljs.core.into.cljs$core$IFn$_invoke$arity$2(tx_for_calls,ast_follow_on_reads);\r\nvar tx_to_defer = cljs.core.into.cljs$core$IFn$_invoke$arity$2(unprocessed_tx,ast_follow_on_reads);\r\nvar defer_QMARK_ = cljs.core.seq(unprocessed_call_asts);\r\nvar deferred_params = ((defer_QMARK_)?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.get.cljs$core$IFn$_invoke$arity$3(options,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),cljs.core.PersistentArrayMap.EMPTY),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576),remote,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418),fulcro.client.primitives.pessimistic_transaction__GT_transaction.cljs$core$IFn$_invoke$arity$2(tx_to_defer,options)], null)], 0)):null);\r\nif(defer_QMARK_){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(tx_to_run_now,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.client.data-fetch\",\"deferred-transaction\",\"fulcro.client.data-fetch/deferred-transaction\",574929731,null),null,(1),null)),(new cljs.core.List(null,deferred_params,null,(1),null))))),null,(1),null)))))));\r\n} else {\r\nreturn tx_to_run_now;\r\n}\r\n});\r\n\r\nfulcro.client.primitives.pessimistic_transaction__GT_transaction.cljs$lang$maxFixedArity = 2;\r\n\r\n/**\r\n * Like `transact!`, but ensures each call completes (in a full-stack, pessimistic manner) before the next call starts\r\n *   in any way. Note that two calls of this function have no guaranteed relationship to each other. They could end up\r\n *   intermingled at runtime. The only guarantee is that for *a single call* to `ptransact!`, the calls in the given tx will run\r\n *   pessimistically (one at a time) in the order given. Follow-on reads in the given transaction will be repeated after each remote\r\n *   interaction.\r\n * \r\n *   `comp-or-reconciler` a mounted component or reconciler\r\n *   `tx` the tx to run\r\n *   `ref` the ident (ref context) in which to run the transaction (including all deferrals)\r\n * \r\n *   NOTE: `ptransact!` *is* safe to use from within mutations (e.g. for retry behavior).\r\n *   WARNINGS: Mutations that interact with more than one remote *at the same time* will only wait for one of the remotes to finish.\r\n *   Also, mutations that just issue loads should *not* be used. This function defers pessimistic *writes*, not reads.\r\n */\r\nfulcro.client.primitives.ptransact_BANG_ = (function fulcro$client$primitives$ptransact_BANG_(var_args){\r\nvar G__40029 = arguments.length;\r\nswitch (G__40029) {\r\ncase 2:\r\nreturn fulcro.client.primitives.ptransact_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn fulcro.client.primitives.ptransact_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.ptransact_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (comp_or_reconciler,tx){\r\nvar ref = ((((fulcro.client.primitives.component_QMARK_(comp_or_reconciler)) && (fulcro.client.primitives.has_ident_QMARK_(comp_or_reconciler))))?fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$1(comp_or_reconciler):null);\r\nreturn fulcro.client.primitives.ptransact_BANG_.cljs$core$IFn$_invoke$arity$3(comp_or_reconciler,ref,tx);\r\n});\r\n\r\nfulcro.client.primitives.ptransact_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (comp_or_reconciler,ref,tx){\r\nvar reconciler = ((fulcro.client.primitives.reconciler_QMARK_(comp_or_reconciler))?comp_or_reconciler:fulcro.client.primitives.get_reconciler(comp_or_reconciler));\r\nvar state_map = cljs.core.deref(fulcro.client.primitives.app_state(reconciler));\r\nvar remotes = (function (){var G__40033 = reconciler;\r\nvar G__40033__$1 = (((G__40033 == null))?null:new cljs.core.Keyword(null,\"config\",\"config\",994861415).cljs$core$IFn$_invoke$arity$1(G__40033));\r\nvar G__40033__$2 = (((G__40033__$1 == null))?null:new cljs.core.Keyword(null,\"remotes\",\"remotes\",1132366312).cljs$core$IFn$_invoke$arity$1(G__40033__$1));\r\nif((G__40033__$2 == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.set(G__40033__$2);\r\n}\r\n})();\r\nvar ptx = fulcro.client.primitives.pessimistic_transaction__GT_transaction.cljs$core$IFn$_invoke$arity$2(tx,(function (){var G__40034 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid-remotes\",\"valid-remotes\",-1188757845),remotes,new cljs.core.Keyword(null,\"state-map\",\"state-map\",-1313872128),state_map], null);\r\nif(cljs.core.truth_(ref)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__40034,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),ref], null));\r\n} else {\r\nreturn G__40034;\r\n}\r\n})());\r\nreturn setTimeout(((function (reconciler,state_map,remotes,ptx){\r\nreturn (function (){\r\nreturn fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2(comp_or_reconciler,ptx);\r\n});})(reconciler,state_map,remotes,ptx))\r\n,(0));\r\n});\r\n\r\nfulcro.client.primitives.ptransact_BANG_.cljs$lang$maxFixedArity = 3;\r\n\r\n/**\r\n * Replace the first sym in a list (the function name) with the given symbol.\r\n * \r\n *   sym - The symbol that the lambda should have\r\n *   external-args - A sequence of argmuments that the user should not include, but that you want to be inserted in the external-args by this function.\r\n *   user-arity - The number of external-args the user should supply (resulting user-arity is (count external-args) + user-arity).\r\n *   fn-form - The form to rewrite\r\n *   sym - The symbol to report in the error message (in case the rewrite uses a different target that the user knows).\r\n */\r\nfulcro.client.primitives.replace_and_validate_fn = (function fulcro$client$primitives$replace_and_validate_fn(var_args){\r\nvar G__40044 = arguments.length;\r\nswitch (G__40044) {\r\ncase 4:\r\nreturn fulcro.client.primitives.replace_and_validate_fn.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn fulcro.client.primitives.replace_and_validate_fn.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nfulcro.client.primitives.replace_and_validate_fn.cljs$core$IFn$_invoke$arity$4 = (function (sym,external_args,user_arity,fn_form){\r\nreturn fulcro.client.primitives.replace_and_validate_fn.cljs$core$IFn$_invoke$arity$5(sym,external_args,user_arity,fn_form,sym);\r\n});\r\n\r\nfulcro.client.primitives.replace_and_validate_fn.cljs$core$IFn$_invoke$arity$5 = (function (sym,external_args,user_arity,fn_form,user_known_sym){\r\nif((user_arity <= cljs.core.count(cljs.core.second(fn_form)))){\r\n} else {\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Invalid arity for \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(user_known_sym)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(user_arity),\" or more\"].join(''),new cljs.core.Keyword(null,\"got\",\"got\",-1674745710),cljs.core.count(cljs.core.second(fn_form))], null));\r\n}\r\n\r\nvar user_args = cljs.core.second(fn_form);\r\nvar updated_args = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec((function (){var or__3949__auto__ = external_args;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}\r\n})()),user_args);\r\nvar body_forms = cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),fn_form);\r\nreturn cljs.core.cons(sym,cljs.core.cons(updated_args,body_forms));\r\n});\r\n\r\nfulcro.client.primitives.replace_and_validate_fn.cljs$lang$maxFixedArity = 5;\r\n\r\n/**\r\n * Build a component's initial state using the defsc initial-state-data from\r\n *   options, the children from options, and the params from the invocation of get-initial-state.\r\n */\r\nfulcro.client.primitives.make_state_map = (function fulcro$client$primitives$make_state_map(initial_state,children_by_query_key,params){\r\nvar join_keys = cljs.core.set(cljs.core.keys(children_by_query_key));\r\nvar init_keys = cljs.core.set(cljs.core.keys(initial_state));\r\nvar is_child_QMARK_ = ((function (join_keys,init_keys){\r\nreturn (function (k){\r\nreturn cljs.core.contains_QMARK_(join_keys,k);\r\n});})(join_keys,init_keys))\r\n;\r\nvar value_of = ((function (join_keys,init_keys,is_child_QMARK_){\r\nreturn (function fulcro$client$primitives$make_state_map_$_value_of_STAR_(p__40063){\r\nvar vec__40064 = p__40063;\r\nvar isk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40064,(0),null);\r\nvar isv = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40064,(1),null);\r\nvar param_name = ((function (vec__40064,isk,isv,join_keys,init_keys,is_child_QMARK_){\r\nreturn (function (v){\r\nvar and__3938__auto__ = (v instanceof cljs.core.Keyword);\r\nif(and__3938__auto__){\r\nvar and__3938__auto____$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"param\",cljs.core.namespace(v));\r\nif(and__3938__auto____$1){\r\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core.name(v));\r\n} else {\r\nreturn and__3938__auto____$1;\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n});})(vec__40064,isk,isv,join_keys,init_keys,is_child_QMARK_))\r\n;\r\nvar substitute = ((function (param_name,vec__40064,isk,isv,join_keys,init_keys,is_child_QMARK_){\r\nreturn (function (ele){\r\nvar temp__5455__auto__ = param_name(ele);\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar k = temp__5455__auto__;\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,k);\r\n} else {\r\nreturn ele;\r\n}\r\n});})(param_name,vec__40064,isk,isv,join_keys,init_keys,is_child_QMARK_))\r\n;\r\nvar param_key = param_name(isv);\r\nvar param_exists_QMARK_ = cljs.core.contains_QMARK_(params,param_key);\r\nvar param_value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,param_key);\r\nvar child_class = cljs.core.get.cljs$core$IFn$_invoke$arity$2(children_by_query_key,isk);\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = param_key;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nreturn !(param_exists_QMARK_);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn null;\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = cljs.core.map_QMARK_(isv);\r\nif(and__3938__auto__){\r\nreturn is_child_QMARK_(isk);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [isk,fulcro.client.primitives.get_initial_state(child_class,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(fulcro$client$primitives$make_state_map_$_value_of_STAR_,isv)))], null);\r\n} else {\r\nif(cljs.core.map_QMARK_(isv)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [isk,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(fulcro$client$primitives$make_state_map_$_value_of_STAR_,isv))], null);\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = cljs.core.vector_QMARK_(isv);\r\nif(and__3938__auto__){\r\nreturn is_child_QMARK_(isk);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [isk,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (param_name,substitute,param_key,param_exists_QMARK_,param_value,child_class,vec__40064,isk,isv,join_keys,init_keys,is_child_QMARK_){\r\nreturn (function (m){\r\nreturn fulcro.client.primitives.get_initial_state(child_class,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(fulcro$client$primitives$make_state_map_$_value_of_STAR_,m)));\r\n});})(param_name,substitute,param_key,param_exists_QMARK_,param_value,child_class,vec__40064,isk,isv,join_keys,init_keys,is_child_QMARK_))\r\n,isv)], null);\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = cljs.core.vector_QMARK_(param_value);\r\nif(and__3938__auto__){\r\nreturn is_child_QMARK_(isk);\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [isk,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (param_name,substitute,param_key,param_exists_QMARK_,param_value,child_class,vec__40064,isk,isv,join_keys,init_keys,is_child_QMARK_){\r\nreturn (function (params__$1){\r\nif(cljs.core.truth_(fulcro.client.primitives.computed_initial_state_QMARK_(params__$1))){\r\nreturn params__$1;\r\n} else {\r\nreturn fulcro.client.primitives.get_initial_state(child_class,params__$1);\r\n}\r\n});})(param_name,substitute,param_key,param_exists_QMARK_,param_value,child_class,vec__40064,isk,isv,join_keys,init_keys,is_child_QMARK_))\r\n,param_value)], null);\r\n} else {\r\nif(cljs.core.vector_QMARK_(isv)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [isk,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (param_name,substitute,param_key,param_exists_QMARK_,param_value,child_class,vec__40064,isk,isv,join_keys,init_keys,is_child_QMARK_){\r\nreturn (function (ele){\r\nreturn substitute(ele);\r\n});})(param_name,substitute,param_key,param_exists_QMARK_,param_value,child_class,vec__40064,isk,isv,join_keys,init_keys,is_child_QMARK_))\r\n,isv)], null);\r\n} else {\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = param_key;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nvar and__3938__auto____$1 = is_child_QMARK_(isk);\r\nif(cljs.core.truth_(and__3938__auto____$1)){\r\nreturn param_exists_QMARK_;\r\n} else {\r\nreturn and__3938__auto____$1;\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [isk,(cljs.core.truth_(fulcro.client.primitives.computed_initial_state_QMARK_(param_value))?param_value:fulcro.client.primitives.get_initial_state(child_class,param_value))], null);\r\n} else {\r\nif(cljs.core.truth_(param_key)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [isk,param_value], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [isk,isv], null);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});})(join_keys,init_keys,is_child_QMARK_))\r\n;\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(value_of,initial_state));\r\n});\r\n/**\r\n * DEPRECATED: Use fulcro.client.mutations/integrate-ident* in your mutations instead.\r\n */\r\nfulcro.client.primitives.integrate_ident = (function fulcro$client$primitives$integrate_ident(var_args){\r\nvar args__4534__auto__ = [];\r\nvar len__4531__auto___40092 = arguments.length;\r\nvar i__4532__auto___40093 = (0);\r\nwhile(true){\r\nif((i__4532__auto___40093 < len__4531__auto___40092)){\r\nargs__4534__auto__.push((arguments[i__4532__auto___40093]));\r\n\r\nvar G__40094 = (i__4532__auto___40093 + (1));\r\ni__4532__auto___40093 = G__40094;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4535__auto__ = ((((2) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((2)),(0),null)):null);\r\nreturn fulcro.client.primitives.integrate_ident.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4535__auto__);\r\n});\r\n\r\nfulcro.client.primitives.integrate_ident.cljs$core$IFn$_invoke$arity$variadic = (function (state,ident,named_parameters){\r\nif(cljs.core.map_QMARK_(state)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (map? state)\"));\r\n}\r\n\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),3182], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"integrate-ident is deprecated and will be removed in the future.\",\"Please use fulcro.client.mutations/integrate-ident* in your mutations instead.\"], 0));\r\n}catch (e40088){if((e40088 instanceof Error)){\r\nvar e__31518__auto___40095 = e40088;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),3182], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___40095], 0));\r\n} else {\r\nthrow e40088;\r\n\r\n}\r\n}\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(fulcro.util.__integrate_ident_impl__,state,ident,named_parameters);\r\n});\r\n\r\nfulcro.client.primitives.integrate_ident.cljs$lang$maxFixedArity = (2);\r\n\r\n/** @this {Function} */\r\nfulcro.client.primitives.integrate_ident.cljs$lang$applyTo = (function (seq40085){\r\nvar G__40086 = cljs.core.first(seq40085);\r\nvar seq40085__$1 = cljs.core.next(seq40085);\r\nvar G__40087 = cljs.core.first(seq40085__$1);\r\nvar seq40085__$2 = cljs.core.next(seq40085__$1);\r\nvar self__4518__auto__ = this;\r\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__40086,G__40087,seq40085__$2);\r\n});\r\n\r\n/**\r\n * Calculates the query that can be used to pull (or merge) a component with an ident\r\n *   to/from a normalized app database. Requires a tree of data that represents the instance of\r\n *   the component in question (e.g. ident will work on it)\r\n */\r\nfulcro.client.primitives.component_merge_query = (function fulcro$client$primitives$component_merge_query(component,object_data){\r\nvar ident = fulcro.client.primitives.ident(component,object_data);\r\nvar object_query = fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$1(component);\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([ident,object_query])], null);\r\n});\r\n/**\r\n * Does the steps necessary to honor the data merge technique defined by Fulcro with respect\r\n *   to data overwrites in the app database.\r\n */\r\nfulcro.client.primitives.preprocess_merge = (function fulcro$client$primitives$preprocess_merge(state_atom,component,object_data){\r\nvar ident = fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2(component,object_data);\r\nvar object_query = fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$1(component);\r\nvar object_query__$1 = ((cljs.core.map_QMARK_(object_query))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [object_query], null):object_query);\r\nvar base_query = fulcro.client.primitives.component_merge_query(component,object_data);\r\nvar merge_query = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"fulcro\",\"merge\",\"fulcro/merge\",-1037375858),base_query], null)], null);\r\nvar existing_data = cljs.core.get.cljs$core$IFn$_invoke$arity$3(fulcro.client.primitives.db__GT_tree.cljs$core$IFn$_invoke$arity$3(base_query,cljs.core.deref(state_atom),cljs.core.deref(state_atom)),ident,cljs.core.PersistentArrayMap.EMPTY);\r\nvar marked_data = fulcro.client.primitives.mark_missing(object_data,object_query__$1);\r\nvar merge_data = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"fulcro\",\"merge\",\"fulcro/merge\",-1037375858),cljs.core.PersistentArrayMap.createAsIfByAssoc([ident,fulcro.util.deep_merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([existing_data,marked_data], 0))])], null);\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"merge-query\",\"merge-query\",610171663),merge_query,new cljs.core.Keyword(null,\"merge-data\",\"merge-data\",1760143734),merge_data], null);\r\n});\r\n/**\r\n * Returns TRUE when x is an atom.\r\n */\r\nfulcro.client.primitives.is_atom_QMARK_ = (function fulcro$client$primitives$is_atom_QMARK_(x){\r\nreturn (x instanceof cljs.core.Atom);\r\n});\r\n/**\r\n * DEPRECATED: Use fulcro.client.mutations/integrate-ident* in your mutations instead.\r\n */\r\nfulcro.client.primitives.integrate_ident_BANG_ = (function fulcro$client$primitives$integrate_ident_BANG_(var_args){\r\nvar args__4534__auto__ = [];\r\nvar len__4531__auto___40112 = arguments.length;\r\nvar i__4532__auto___40113 = (0);\r\nwhile(true){\r\nif((i__4532__auto___40113 < len__4531__auto___40112)){\r\nargs__4534__auto__.push((arguments[i__4532__auto___40113]));\r\n\r\nvar G__40114 = (i__4532__auto___40113 + (1));\r\ni__4532__auto___40113 = G__40114;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4535__auto__ = ((((2) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((2)),(0),null)):null);\r\nreturn fulcro.client.primitives.integrate_ident_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4535__auto__);\r\n});\r\n\r\nfulcro.client.primitives.integrate_ident_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (state,ident,named_parameters){\r\ntry{fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),3220], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"integrate-ident! is deprecated and will be removed in the future.\",\"Please use fulcro.client.mutations/integrate-ident* in your mutations instead.\"], 0));\r\n}catch (e40108){if((e40108 instanceof Error)){\r\nvar e__31518__auto___40115 = e40108;\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),3220], null),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto___40115], 0));\r\n} else {\r\nthrow e40108;\r\n\r\n}\r\n}\r\nif(cljs.core.truth_(fulcro.client.primitives.is_atom_QMARK_(state))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"The state has to be an atom. Use 'integrate-ident' instead.\",\"\\n\",\"(is-atom? state)\"].join('')));\r\n}\r\n\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.swap_BANG_,state,fulcro.util.__integrate_ident_impl__,ident,named_parameters);\r\n});\r\n\r\nfulcro.client.primitives.integrate_ident_BANG_.cljs$lang$maxFixedArity = (2);\r\n\r\n/** @this {Function} */\r\nfulcro.client.primitives.integrate_ident_BANG_.cljs$lang$applyTo = (function (seq40105){\r\nvar G__40106 = cljs.core.first(seq40105);\r\nvar seq40105__$1 = cljs.core.next(seq40105);\r\nvar G__40107 = cljs.core.first(seq40105__$1);\r\nvar seq40105__$2 = cljs.core.next(seq40105__$1);\r\nvar self__4518__auto__ = this;\r\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__40106,G__40107,seq40105__$2);\r\n});\r\n\r\n/**\r\n * Given a state map of the application database, a component, and a tree of component-data: normalizes\r\n * the tree of data and merges the component table entries into the state, returning a new state map.\r\n * Since there is not an implied root, the component itself won't be linked into your graph (though it will\r\n * remain correctly linked for its own consistency).\r\n * Therefore, this function is just for dropping normalized things into tables\r\n * when they themselves have a recursive nature. This function is useful when you want to create a new component instance\r\n * and put it in the database, but the component instance has recursive normalized state. This is a basically a\r\n * thin wrapper around `prim/tree->db`.\r\n * \r\n * See also integrate-ident, integrate-ident!, and merge-component!\r\n */\r\nfulcro.client.primitives.merge_component = (function fulcro$client$primitives$merge_component(state_map,component,component_data){\r\nvar temp__5455__auto__ = fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2(component,component_data);\r\nif(cljs.core.truth_(temp__5455__auto__)){\r\nvar top_ident = temp__5455__auto__;\r\nvar query = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([top_ident,fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$1(component)])], null);\r\nvar state_to_merge = cljs.core.PersistentArrayMap.createAsIfByAssoc([top_ident,component_data]);\r\nvar table_entries = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3(query,state_to_merge,true),new cljs.core.Keyword(\"fulcro.client.primitives\",\"tables\",\"fulcro.client.primitives/tables\",-1418944816),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([top_ident], 0));\r\nreturn fulcro.util.deep_merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([state_map,table_entries], 0));\r\n} else {\r\nreturn state_map;\r\n}\r\n});\r\n/**\r\n * Normalize and merge a (sub)tree of application state into the application using a known UI component's query and ident.\r\n * \r\n *   This utility function obtains the ident of the incoming object-data using the UI component's ident function. Once obtained,\r\n *   it uses the component's query and ident to normalize the data and place the resulting objects in the correct tables.\r\n *   It is also quite common to want those new objects to be linked into lists in other spot in app state, so this function\r\n *   supports optional named parameters for doing this. These named parameters can be repeated as many times as you like in order\r\n *   to place the ident of the new object into other data structures of app state.\r\n * \r\n *   This function honors the data merge story for Fulcro: attributes that are queried for but do not appear in the\r\n *   data will be removed from the application. This function also uses the initial state for the component as a base\r\n *   for merge if there was no state for the object already in the database.\r\n * \r\n *   This function will also trigger re-renders of components that directly render object merged, as well as any components\r\n *   into which you integrate that data via the named-parameters.\r\n * \r\n *   This function is primarily meant to be used from things like server push and setTimeout/setInterval, where you're outside\r\n *   of the normal mutation story. Do not use this function within abstract mutations.\r\n * \r\n *   - reconciler: A reconciler\r\n *   - component: The class of the component that corresponsds to the data. Must have an ident.\r\n *   - object-data: A map (tree) of data to merge. Will be normalized for you.\r\n *   - named-parameter: Post-processing ident integration steps. see integrate-ident!\r\n * \r\n *   Any keywords that appear in ident integration steps will be added to the re-render queue.\r\n * \r\n *   See also `fulcro.client.primitives/merge!`.\r\n *   \r\n */\r\nfulcro.client.primitives.merge_component_BANG_ = (function fulcro$client$primitives$merge_component_BANG_(var_args){\r\nvar args__4534__auto__ = [];\r\nvar len__4531__auto___40134 = arguments.length;\r\nvar i__4532__auto___40135 = (0);\r\nwhile(true){\r\nif((i__4532__auto___40135 < len__4531__auto___40134)){\r\nargs__4534__auto__.push((arguments[i__4532__auto___40135]));\r\n\r\nvar G__40137 = (i__4532__auto___40135 + (1));\r\ni__4532__auto___40135 = G__40137;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4535__auto__ = ((((3) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((3)),(0),null)):null);\r\nreturn fulcro.client.primitives.merge_component_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4535__auto__);\r\n});\r\n\r\nfulcro.client.primitives.merge_component_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (reconciler,component,object_data,named_parameters){\r\nif(!(fulcro.client.primitives.has_ident_QMARK_(component))){\r\ntry{return fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),3276], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"merge-component!: component must implement Ident. Merge skipped.\"], 0));\r\n}catch (e40129){if((e40129 instanceof Error)){\r\nvar e__31518__auto__ = e40129;\r\nreturn fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),\"fulcro.client.primitives\",new cljs.core.Keyword(null,\"line\",\"line\",212345235),3276], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Log statement failed (arguments did not evaluate).\",e__31518__auto__], 0));\r\n} else {\r\nthrow e40129;\r\n\r\n}\r\n}} else {\r\nvar ident = fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2(component,object_data);\r\nvar reconciler__$1 = ((cljs.core.contains_QMARK_(reconciler,new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966)))?new cljs.core.Keyword(null,\"reconciler\",\"reconciler\",-1832826966).cljs$core$IFn$_invoke$arity$1(reconciler):reconciler);\r\nvar state = fulcro.client.primitives.app_state(reconciler__$1);\r\nvar data_path_keys = cljs.core.vec(cljs.core.set(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword_QMARK_,cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.second,cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),named_parameters))))));\r\nvar map__40130 = fulcro.client.primitives.preprocess_merge(state,component,object_data);\r\nvar map__40130__$1 = ((((!((map__40130 == null)))?(((((map__40130.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40130.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40130):map__40130);\r\nvar merge_data = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40130__$1,new cljs.core.Keyword(null,\"merge-data\",\"merge-data\",1760143734));\r\nvar merge_query = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40130__$1,new cljs.core.Keyword(null,\"merge-query\",\"merge-query\",610171663));\r\nfulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$3(reconciler__$1,merge_data,merge_query);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state,((function (ident,reconciler__$1,state,data_path_keys,map__40130,map__40130__$1,merge_data,merge_query){\r\nreturn (function (s){\r\nvar st = s;\r\nvar st__$1 = cljs.core.apply.cljs$core$IFn$_invoke$arity$4(fulcro.util.__integrate_ident_impl__,st,ident,named_parameters);\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(st__$1,new cljs.core.Keyword(\"fulcro\",\"merge\",\"fulcro/merge\",-1037375858));\r\n});})(ident,reconciler__$1,state,data_path_keys,map__40130,map__40130__$1,merge_data,merge_query))\r\n);\r\n\r\nfulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$2(reconciler__$1,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(data_path_keys,ident));\r\n\r\nreturn cljs.core.deref(state);\r\n}\r\n});\r\n\r\nfulcro.client.primitives.merge_component_BANG_.cljs$lang$maxFixedArity = (3);\r\n\r\n/** @this {Function} */\r\nfulcro.client.primitives.merge_component_BANG_.cljs$lang$applyTo = (function (seq40122){\r\nvar G__40123 = cljs.core.first(seq40122);\r\nvar seq40122__$1 = cljs.core.next(seq40122);\r\nvar G__40124 = cljs.core.first(seq40122__$1);\r\nvar seq40122__$2 = cljs.core.next(seq40122__$1);\r\nvar G__40125 = cljs.core.first(seq40122__$2);\r\nvar seq40122__$3 = cljs.core.next(seq40122__$2);\r\nvar self__4518__auto__ = this;\r\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__40123,G__40124,G__40125,seq40122__$3);\r\n});\r\n\r\n/**\r\n * Walks the given query and calls (merge-fn parent-union-component union-child-initial-state) for each non-default element of a union that has initial app state.\r\n *   You probably want to use merge-alternate-union-elements[!] on a state map or app.\r\n */\r\nfulcro.client.primitives.merge_alternate_unions = (function fulcro$client$primitives$merge_alternate_unions(merge_fn,root_component){\r\nvar walk_ast = (function() {\r\nvar fulcro$client$primitives$merge_alternate_unions_$_walk_ast = null;\r\nvar fulcro$client$primitives$merge_alternate_unions_$_walk_ast__2 = (function (ast,visitor){\r\nreturn fulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3(ast,visitor,null);\r\n});\r\nvar fulcro$client$primitives$merge_alternate_unions_$_walk_ast__3 = (function (p__40154,visitor,parent_union){\r\nvar map__40155 = p__40154;\r\nvar map__40155__$1 = ((((!((map__40155 == null)))?(((((map__40155.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40155.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40155):map__40155);\r\nvar parent_ast = map__40155__$1;\r\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40155__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\r\nvar component = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40155__$1,new cljs.core.Keyword(null,\"component\",\"component\",1555936782));\r\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40155__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\r\nvar dispatch_key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40155__$1,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510));\r\nvar union_key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40155__$1,new cljs.core.Keyword(null,\"union-key\",\"union-key\",1529707234));\r\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40155__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = component;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nvar and__3938__auto____$1 = parent_union;\r\nif(cljs.core.truth_(and__3938__auto____$1)){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"union-entry\",\"union-entry\",223335750),type);\r\n} else {\r\nreturn and__3938__auto____$1;\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\n(visitor.cljs$core$IFn$_invoke$arity$2 ? visitor.cljs$core$IFn$_invoke$arity$2(component,parent_union) : visitor.call(null,component,parent_union));\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(children)){\r\nvar seq__40160 = cljs.core.seq(children);\r\nvar chunk__40161 = null;\r\nvar count__40162 = (0);\r\nvar i__40163 = (0);\r\nwhile(true){\r\nif((i__40163 < count__40162)){\r\nvar ast = chunk__40161.cljs$core$IIndexed$_nth$arity$2(null,i__40163);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(ast),new cljs.core.Keyword(null,\"union\",\"union\",2142937499))){\r\nfulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3(ast,visitor,component);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(ast),new cljs.core.Keyword(null,\"union-entry\",\"union-entry\",223335750))){\r\nfulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3(ast,visitor,parent_union);\r\n} else {\r\nif(cljs.core.truth_(ast)){\r\nfulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3(ast,visitor,null);\r\n} else {\r\n}\r\n}\r\n}\r\n\r\n\r\nvar G__40170 = seq__40160;\r\nvar G__40171 = chunk__40161;\r\nvar G__40172 = count__40162;\r\nvar G__40173 = (i__40163 + (1));\r\nseq__40160 = G__40170;\r\nchunk__40161 = G__40171;\r\ncount__40162 = G__40172;\r\ni__40163 = G__40173;\r\ncontinue;\r\n} else {\r\nvar temp__5457__auto__ = cljs.core.seq(seq__40160);\r\nif(temp__5457__auto__){\r\nvar seq__40160__$1 = temp__5457__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__40160__$1)){\r\nvar c__4351__auto__ = cljs.core.chunk_first(seq__40160__$1);\r\nvar G__40174 = cljs.core.chunk_rest(seq__40160__$1);\r\nvar G__40175 = c__4351__auto__;\r\nvar G__40176 = cljs.core.count(c__4351__auto__);\r\nvar G__40177 = (0);\r\nseq__40160 = G__40174;\r\nchunk__40161 = G__40175;\r\ncount__40162 = G__40176;\r\ni__40163 = G__40177;\r\ncontinue;\r\n} else {\r\nvar ast = cljs.core.first(seq__40160__$1);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(ast),new cljs.core.Keyword(null,\"union\",\"union\",2142937499))){\r\nfulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3(ast,visitor,component);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(ast),new cljs.core.Keyword(null,\"union-entry\",\"union-entry\",223335750))){\r\nfulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3(ast,visitor,parent_union);\r\n} else {\r\nif(cljs.core.truth_(ast)){\r\nfulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3(ast,visitor,null);\r\n} else {\r\n}\r\n}\r\n}\r\n\r\n\r\nvar G__40179 = cljs.core.next(seq__40160__$1);\r\nvar G__40180 = null;\r\nvar G__40181 = (0);\r\nvar G__40182 = (0);\r\nseq__40160 = G__40179;\r\nchunk__40161 = G__40180;\r\ncount__40162 = G__40181;\r\ni__40163 = G__40182;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nfulcro$client$primitives$merge_alternate_unions_$_walk_ast = function(p__40154,visitor,parent_union){\r\nswitch(arguments.length){\r\ncase 2:\r\nreturn fulcro$client$primitives$merge_alternate_unions_$_walk_ast__2.call(this,p__40154,visitor);\r\ncase 3:\r\nreturn fulcro$client$primitives$merge_alternate_unions_$_walk_ast__3.call(this,p__40154,visitor,parent_union);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nfulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$2 = fulcro$client$primitives$merge_alternate_unions_$_walk_ast__2;\r\nfulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3 = fulcro$client$primitives$merge_alternate_unions_$_walk_ast__3;\r\nreturn fulcro$client$primitives$merge_alternate_unions_$_walk_ast;\r\n})()\r\n;\r\nvar merge_union = (function fulcro$client$primitives$merge_alternate_unions_$_merge_union(component,parent_union){\r\nvar default_initial_state = (function (){var and__3938__auto__ = parent_union;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nvar and__3938__auto____$1 = fulcro.client.primitives.has_initial_app_state_QMARK_(parent_union);\r\nif(and__3938__auto____$1){\r\nreturn fulcro.client.primitives.get_initial_state(parent_union,cljs.core.PersistentArrayMap.EMPTY);\r\n} else {\r\nreturn and__3938__auto____$1;\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})();\r\nvar to_many_QMARK_ = cljs.core.vector_QMARK_(default_initial_state);\r\nvar component_initial_state = (function (){var and__3938__auto__ = component;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nvar and__3938__auto____$1 = fulcro.client.primitives.has_initial_app_state_QMARK_(component);\r\nif(and__3938__auto____$1){\r\nreturn fulcro.client.primitives.get_initial_state(component,cljs.core.PersistentArrayMap.EMPTY);\r\n} else {\r\nreturn and__3938__auto____$1;\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})();\r\nif(cljs.core.truth_((function (){var and__3938__auto__ = component;\r\nif(cljs.core.truth_(and__3938__auto__)){\r\nvar and__3938__auto____$1 = component_initial_state;\r\nif(cljs.core.truth_(and__3938__auto____$1)){\r\nvar and__3938__auto____$2 = parent_union;\r\nif(cljs.core.truth_(and__3938__auto____$2)){\r\nreturn ((!(to_many_QMARK_)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(default_initial_state,component_initial_state)));\r\n} else {\r\nreturn and__3938__auto____$2;\r\n}\r\n} else {\r\nreturn and__3938__auto____$1;\r\n}\r\n} else {\r\nreturn and__3938__auto__;\r\n}\r\n})())){\r\nreturn (merge_fn.cljs$core$IFn$_invoke$arity$2 ? merge_fn.cljs$core$IFn$_invoke$arity$2(parent_union,component_initial_state) : merge_fn.call(null,parent_union,component_initial_state));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreturn walk_ast.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.query__GT_ast(fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$1(root_component)),merge_union);\r\n});\r\n/**\r\n * Walks the query and initial state of root-component and merges the alternate sides of unions with initial state into\r\n *   the application state database. See also `merge-alternate-union-elements`, which can be used on a state map and\r\n *   is handy for server-side rendering. This function side-effects on your app, and returns nothing.\r\n */\r\nfulcro.client.primitives.merge_alternate_union_elements_BANG_ = (function fulcro$client$primitives$merge_alternate_union_elements_BANG_(app,root_component){\r\nreturn fulcro.client.primitives.merge_alternate_unions(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(fulcro.client.primitives.merge_component_BANG_,app),root_component);\r\n});\r\n/**\r\n * Just like merge-alternate-union-elements!, but usable from within mutations and on server-side rendering. Ensures\r\n *   that when a component has initial state it will end up in the state map, even if it isn't currently in the\r\n *   initial state of the union component (which can only point to one at a time).\r\n */\r\nfulcro.client.primitives.merge_alternate_union_elements = (function fulcro$client$primitives$merge_alternate_union_elements(state_map,root_component){\r\nvar initial_state = fulcro.client.primitives.get_initial_state(root_component,null);\r\nvar state_map_atom = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(state_map);\r\nvar merge_to_state = ((function (initial_state,state_map_atom){\r\nreturn (function (comp,tree){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state_map_atom,fulcro.client.primitives.merge_component,comp,tree);\r\n});})(initial_state,state_map_atom))\r\n;\r\nvar _ = fulcro.client.primitives.merge_alternate_unions(merge_to_state,root_component);\r\nvar new_state = cljs.core.deref(state_map_atom);\r\nreturn new_state;\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","fulcro/client/primitives.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",29],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$clojure.stacktrace","~$cljs.stacktrace","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$var?","~$key","~$replace","~$force"]],"~:macros",["^ ","~$defsc",["^ ","~:doc","Define a stateful component. This macro emits a React UI class with a query,\n   optional ident (if :ident is specified in options), optional initial state, optional css, lifecycle methods,\n   and a render method. It can also cause the class to implement additional protocols that you specify. Destructuring is\n   supported in the argument list.\n\n   The template (data-only) versions do not have any arguments in scope\n   The lambda versions have arguments in scope that make sense for those lambdas, as listed below:\n\n   ```\n   (defsc Component [this {:keys [db/id x] :as props} {:keys [onSelect] :as computed} css-classmap]\n     {\n      ;; stateful component options\n      ;; query template is literal. Use the lambda if you have ident-joins or unions.\n      :query [:db/id :x] ; OR (fn [] [:db/id :x]) ; this in scope\n      ;; ident template is table name and ID property name\n      :ident [:table/by-id :id] ; OR (fn [] [:table/by-id id]) ; this and props in scope\n      ;; initial-state template is magic..see dev guide. Lambda version is normal.\n      :initial-state {:x :param/x} ; OR (fn [params] {:x (:x params)}) ; this in scope\n      :css [] ; garden css rules\n      :css-include [] ; list of components that have CSS to compose towards root.\n\n      ; React Lifecycle Methods (this in scope)\n      :initLocalState            (fn [] ...) ; CAN BE used to call things as you might in a constructor. Return value is initial state.\n      :shouldComponentUpdate     (fn [next-props next-state] ...)\n\n      :componentDidUpdate        (fn [prev-props prev-state snapshot] ...) ; snapshot is optional, and is 16+. Is context for 15\n      :componentDidMount         (fn [] ...)\n      :componentWillUnmount      (fn [] ...)\n\n      ;; DEPRECATED IN REACT 16 (to be removed in 17):\n      :componentWillReceiveProps        (fn [next-props] ...)\n      :componentWillUpdate              (fn [next-props next-state] ...)\n      :componentWillMount               (fn [] ...)\n\n      ;; Replacements for deprecated methods in React 16.3+\n      :UNSAFE_componentWillReceiveProps (fn [next-props] ...)\n      :UNSAFE_componentWillUpdate       (fn [next-props next-state] ...)\n      :UNSAFE_componentWillMount        (fn [] ...)\n\n      ;; ADDED for React 16:\n      :componentDidCatch         (fn [error info] ...)\n      :getSnapshotBeforeUpdate   (fn [prevProps prevState] ...)\n      :getDerivedStateFromProps  (fn [props state] ...)\n\n      NOTE: shouldComponentUpdate should generally not be overridden other than to force it false so\n      that other libraries can control the sub-dom. If you do want to implement it, then old props can\n      be obtained from (prim/props this), and old state via (gobj/get (. this -state) \"fulcro$state\").\n\n      ; Custom literal protocols (Object ok, too, to add arbitrary methods. Nothing automatically in scope.)\n      :protocols [YourProtocol\n                  (method [this] ...)]} ; nothing is automatically in scope\n      ; BODY forms. May be omitted IFF there is an options map, in order to generate a component that is used only for queries/normalization.\n      (dom/div #js {:onClick onSelect} x))\n   ```\n\n   See the Developer's Guide at book.fulcrologic.com for more details.\n   ","~:arglists",["~#list",[["~$&","~$args"]]],"^7",3100,"^8",4,"^6","fulcro/client/primitives.cljc","~:name","~$fulcro.client.primitives/defsc","~:ns","~$fulcro.client.primitives","~:macro",true],"~$with-parent-context",["^ ","^L",["^M",[["~$outer-parent","~$&","~$body"]]],"^K","Wraps the given body with the correct internal bindings of the parent so that Fulcro internals\n  will work when that body is embedded in unusual ways (e.g. as the body in a child-as-a-function\n  React pattern).","^7",3341,"^8",1,"^6","fulcro/client/primitives.cljc","^O","~$fulcro.client.primitives/with-parent-context","^Q","^R","^S",true],"~$defui",["^ ","^L",["^M",[["~$name","~$&","~$forms"]]],"^7",553,"^8",1,"^6","fulcro/client/primitives.cljc","^O","~$fulcro.client.primitives/defui","^Q","^R","^S",true],"~$ui",["^ ","^L",["^M",[["~$&","^Z"]]],"^K","Declare an anonymous UI component.  If the first argument is a keyword, then it is treated\n  as the React version (defaults to :v15).","^7",558,"^8",1,"^6","fulcro/client/primitives.cljc","^O","~$fulcro.client.primitives/ui","^Q","^R","^S",true],"~$sc",["^ ","^L",["^M",[["~$&","^N"]]],"^K","Just like defsc, but returns the component instead. The arguments are the same, except do not supply a symbol:\n\n  ```\n  (let [C (prim/sc [this props] ...)] ...)\n  ```\n  ","^7",3167,"^8",1,"^6","fulcro/client/primitives.cljc","^O","~$fulcro.client.primitives/sc","^Q","^R","^S",true]],"^O","^R","~:op","^Q","~:imports",null,"~:requires",["^ ","~$t","~$cognitect.transit","~$set","~$clojure.set","^@","^A","~$gstring","~$goog.string","~$log","~$fulcro.logging","~$targeting","~$fulcro.client.impl.data-targeting","~$fulcro.transit","^1@","~$clojure.zip","^1A","~$p","~$fulcro.client.impl.protocols","~$fulcro.client.impl.parser","^1C","^1=","^1=","^1;","^1;","~$async","^=","~$cljs.core","^1E","~$gobj","~$goog.object","~$goog","^1H","^1G","^1G","~$fulcro.tempid","^1I","~$cljsjs.react","^1J","^=","^=","~$fulcro-css.css-implementation","^1K","~$fulcro.util","^1L","^17","^17","~$hist","~$fulcro.history","^19","^19","^<","^=","~$util","^1L","~$s","^A","~$parser","^1C","~$fulcro-css.css-protocols","^1Q","~$transit","^1@","~$str","~$clojure.string","~$zip","^1A","^1T","^1T","^A","^A","~$clojure.walk","^1V","~$tempid","^1I","^1?","^1?","^1N","^1N","^1B","^1B"],"~:seen",["^D",["~:require","~:require-macros"]],"~:uses",["^ ","~$prewalk","^1V"],"^1Z",["^ ","^@","^A","^1<","^1=","^1=","^1=","^1D","^=","^1E","^1E","^R","^R","^=","^=","^<","^=","~$s","^A","^A","^A"],"~:form",["^M",["~$ns","^R",["^M",["^1Z","^R"]],["^M",["~:refer-clojure","~:exclude",["^E","^F","^G","^H"]]],["^M",["^1Y",["^1;","~:as","^1:"],["^1J"],["^1G","^25","^1F"],"^1Q","^1K",["^<","^25","^1D"],["^19","^25","^18"],["^1N","^25","^1M"],["^1=","^25","^1<"],["^1I","^25","^1W"],["^1@","^25","^1R"],["^1A","^25","^1U"],["^1?","^25","^1>"],["^1B","^25","~$p"],["^1C","^25","^1P"],["^1L","^25","^1O"],["^1V","~:refer",["^20"]],["^1T","^25","^1S"],["^@","^25","~$s"],["^17","^25","~$t"]]]]],"~:flags",["^ ","^1Z",["^D",[]],"^1Y",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^1H","^1E","^1;","^1J","^1G","^1Q","^1K","^=","^19","^1N","^1=","^1I","^1@","^1A","^1?","^1B","^1C","^1L","^1V","^1T","^A","^17"]],"^Q","^R","~:resource-id",["~:shadow.build.classpath/resource","fulcro/client/primitives.cljc"],"~:compiled-at",1537360513945,"~:resource-name","fulcro/client/primitives.cljc","~:warnings",[],"~:source","(ns fulcro.client.primitives\n  #?(:cljs (:require-macros fulcro.client.primitives))\n  (:refer-clojure :exclude #?(:clj  [deftype replace var? force]\n                              :cljs [var? key replace force]))\n  (:require\n    #?@(:clj  [clojure.main\n               [cljs.core :refer [deftype specify! this-as js-arguments]]\n               [clojure.reflect :as reflect]\n               [cljs.util]]\n        :cljs [[goog.string :as gstring]\n               [cljsjs.react]\n               [goog.object :as gobj]])\n    fulcro-css.css-protocols\n    fulcro-css.css-implementation\n    [clojure.core.async :as async]\n    [clojure.set :as set]\n    [fulcro.history :as hist]\n    [fulcro.logging :as log]\n    [fulcro.tempid :as tempid]\n    [fulcro.transit :as transit]\n    [clojure.zip :as zip]\n    [fulcro.client.impl.data-targeting :as targeting]\n    [fulcro.client.impl.protocols :as p]\n    [fulcro.client.impl.parser :as parser]\n    [fulcro.util :as util]\n    [clojure.walk :refer [prewalk]]\n    [clojure.string :as str]\n    [clojure.spec.alpha :as s]\n    #?(:clj\n       [clojure.future :refer :all])\n    [cognitect.transit :as t])\n  #?(:clj\n     (:import [java.io Writer])))\n\n(declare app-state app-root tempid? normalize-query focus-query* ast->query query->ast transact! remove-root! component?\n  integrate-ident)\n\n(defprotocol Ident\n  (ident [this props] \"Return the ident for this component\"))\n\n(defprotocol IQuery\n  (query [this] \"Return the component's unbound static query\"))\n\n(defprotocol InitialAppState\n  (initial-state [clz params] \"Get the initial state to be used for this component in app state. You are responsible for composing these together.\"))\n\n(defn has-initial-app-state?\n  #?(:cljs {:tag boolean})\n  [component]\n  #?(:clj  (if (fn? component)\n             (some? (-> component meta :initial-state))\n             (let [class (cond-> component (component? component) class)]\n               (extends? InitialAppState class)))\n     :cljs (implements? InitialAppState component)))\n\n(defn has-ident?\n  #?(:cljs {:tag boolean})\n  [component]\n  #?(:clj  (if (fn? component)\n             (some? (-> component meta :ident))\n             (let [class (cond-> component (component? component) class)]\n               (extends? Ident class)))\n     :cljs (implements? Ident component)))\n\n(defn has-query?\n  #?(:cljs {:tag boolean})\n  [component]\n  #?(:clj  (if (fn? component)\n             (some? (-> component meta :query))\n             (let [class (cond-> component (component? component) class)]\n               (extends? IQuery class)))\n     :cljs (implements? IQuery component)))\n\n(defn get-initial-state\n  \"Get the initial state of a component. Needed because calling the protocol method from a defui component in clj will not work as expected.\"\n  [class params]\n  (some->\n    #?(:clj  (when-let [initial-state (-> class meta :initial-state)]\n               (initial-state class params))\n       :cljs (when (implements? InitialAppState class)\n               (initial-state class params)))\n    (with-meta {:computed true})))\n\n(defn computed-initial-state?\n  \"Returns true if the given initial state was computed from a call to get-initial-state.\"\n  [s]\n  (and (map? s) (some-> s meta :computed)))\n\n(s/def ::remote keyword?)\n(s/def ::ident (s/or :missing nil? :ident util/ident?))\n(s/def ::query vector?)\n(s/def ::transaction (s/every #(or (keyword? %) (util/mutation? %))\n                       :kind vector?))\n(s/def ::pessimistic? boolean?)\n(s/def ::tempids (s/map-of tempid? any?))\n\n(defn get-history\n  \"pass-through function for getting history, that enables testing (cannot mock protocols easily)\"\n  [reconciler]\n  (when reconciler\n    (p/get-history reconciler)))\n\n(defn add-basis-time* [{:keys [children]} props time]\n  (if (map? props)\n    (if (seq children)\n      (let [children (if (= :union (-> children first :type))\n                       (apply concat (->> children first :children (map :children)))\n                       children)]\n        (-> (into props\n              (comp\n                (filter #(contains? props (:key %)))\n                (map (fn [{:keys [key query] :as ast}]\n                       (let [x   (get props key)\n                             ast (cond-> ast\n\n                                   (= '... query)\n                                   (assoc :children children)\n\n                                   (pos-int? query)\n                                   (assoc :children (mapv #(cond-> %\n                                                             (pos-int? (:query %))\n                                                             (update :query dec))\n                                                      children)))]\n                         [key\n                          (if (sequential? x)\n                            (mapv #(add-basis-time* ast % time) x)\n                            (add-basis-time* ast x time))]))))\n              children)\n          (vary-meta assoc ::time time)))\n      (vary-meta props assoc ::time time))\n    props))\n\n(defn add-basis-time\n  \"Recursively add the given basis time to all of the maps in the props. This is part of the UI refresh optimization\n  algorithm. Children that refresh in isolation could be mis-drawn if a parent subsequently does a re-render without\n  a query (e.g. local state change). The basis times allow us to detect and avoid that.\"\n  ([props time]\n   (prewalk (fn [ele]\n              (if (map? ele)\n                (vary-meta ele assoc ::time time)\n                ele)) props))\n  ([q props time]\n   (add-basis-time* (query->ast q) props time)))\n\n(defn get-basis-time\n  \"Returns the basis time from the given props, or ::unset if not available.\"\n  [props] (or (-> props meta ::time) :unset))\n\n(defn get-current-time\n  \"get the current basis time from the reconciler. Used instead of calling the protocol method `basis-t` to facilitate testing.\"\n  [reconciler] (p/basis-t reconciler))\n\n(defn collect-statics\n  \"Collect the static declarations from the defui.\"\n  [dt]\n  (letfn [(split-on-static [forms]\n            (split-with (complement '#{static}) forms))\n          (split-on-symbol [forms]\n            (split-with (complement symbol?) forms))]\n    (loop [dt (seq dt) dt' [] statics {:fields {} :protocols []}]\n      (if dt\n        (let [[pre [_ sym & remaining :as post]] (split-on-static dt)\n              dt' (into dt' pre)]\n          (if (seq post)\n            (cond\n              (= sym 'field)\n              (let [[field-info dt] (split-at 2 remaining)]\n                (recur (seq dt) dt'\n                  (update-in statics [:fields] conj (vec field-info))))\n              (symbol? sym)\n              (let [[protocol-info dt] (split-on-symbol remaining)]\n                (recur (seq dt) dt'\n                  (update-in statics [:protocols]\n                    into (concat [sym] protocol-info))))\n              :else (throw #?(:clj  (IllegalArgumentException. \"Malformed static\")\n                              :cljs (js/Error. \"Malformed static\"))))\n            (recur nil dt' statics)))\n        {:dt dt' :statics statics}))))\n\n(defn validate-statics [dt]\n  (when-let [invalid (some #{\"Ident\" \"IQuery\"}\n                       (map #(-> % str (str/split #\"/\") last)\n                         (filter symbol? dt)))]\n    (throw\n      #?(:clj  (IllegalArgumentException.\n                 (str invalid \" protocol declaration must appear with `static`.\"))\n         :cljs (js/Error.\n                 (str invalid \" protocol declaration must appear with `static`.\"))))))\n\n(def lifecycle-sigs\n  '{initLocalState                   [this]\n    shouldComponentUpdate            [this next-props next-state]\n    componentWillReceiveProps        [this next-props]\n    componentWillUpdate              [this next-props next-state]\n    ;; TODO: snapshot\n    componentDidUpdate               [this prev-props prev-state]\n    componentWillMount               [this]\n    componentDidMount                [this]\n    componentWillUnmount             [this]\n    render                           [this]\n    ;; react 16\n    componentDidCatch                [this error info]\n    UNSAFE_componentWillReceiveProps [this next-props]\n    UNSAFE_componentWillUpdate       [this next-props next-state]\n    UNSAFE_componentWillMount        [this]\n    getSnapshotBeforeUpdate          [this prev-props prev-state]})\n\n(defn- validate-sig [[name sig :as method]]\n  (let [required-signature (get lifecycle-sigs name)]\n    (assert\n      (<= (count required-signature) (count sig))           ; allow additional arg (context or snapshot)\n      (str \"Invalid signature for \" name \" got \" sig \", need \" required-signature))))\n\n#?(:clj\n   (def reshape-map-clj\n     {:reshape\n      {'render\n       (fn [[name [this :as args] & body]]\n         `(~name [this#]\n            (let [~this this#]\n              (binding [fulcro.client.primitives/*reconciler* (fulcro.client.primitives/get-reconciler this#)\n                        fulcro.client.primitives/*depth*      (inc (fulcro.client.primitives/depth this#))\n                        fulcro.client.primitives/*shared*     (fulcro.client.primitives/shared this#)\n                        fulcro.client.primitives/*instrument* (fulcro.client.primitives/instrument this#)\n                        fulcro.client.primitives/*parent*     this#]\n                (let [ret#   (do ~@body)\n                      props# (:props this#)]\n                  (when-not @(:fulcro$mounted? props#)\n                    (swap! (:fulcro$mounted? props#) not))\n                  ret#)))))\n       'componentDidMount\n       (fn [[name [this :as args] & body]]\n         `(~name [this#]\n            (let [~this this#\n                  reconciler# (fulcro.client.primitives/get-reconciler this#)\n                  indexer# (get-in reconciler# [:config :indexer])]\n              (when-not (nil? indexer#)\n                (fulcro.client.impl.protocols/index-component! indexer# this#))\n              ~@body)))}\n      :defaults\n      `{~'initLocalState\n        ([this#])\n        ~'componentWillMount\n        ([this#]\n          (let [reconciler# (fulcro.client.primitives/get-reconciler this#)\n                lifecycle#  (get-in reconciler# [:config :lifecycle])\n                indexer#    (get-in reconciler# [:config :indexer])]\n            (when-not (nil? lifecycle#)\n              (lifecycle# this# :mount))\n            (when-not (nil? indexer#)\n              (fulcro.client.impl.protocols/index-component! indexer# this#))))\n        ~'render\n        ([this#])}}))\n\n(let [will-receive-props (fn [[name [this next-props :as args] & body]]\n                           `(~name [this# next-props#]\n                              (let [~this this#\n                                    ~next-props (goog.object/get next-props# \"fulcro$value\")]\n                                ~@body)))\n      will-update        (fn [[name [this next-props next-state :as args] & body]]\n                           `(~name [this# next-props# next-state#]\n                              (let [~this this#\n                                    ~next-props (goog.object/get next-props# \"fulcro$value\")\n                                    ~next-state (goog.object/get next-state# \"fulcro$state\")]\n                                ~@body)))]\n  (def reshape-map\n    {:reshape\n     {'initLocalState\n                                        (fn [[name [this :as args] & body]]\n                                          `(~name ~args\n                                             (let [ret# (do ~@body)]\n                                               (cljs.core/js-obj \"fulcro$state\" ret#))))\n      'componentWillReceiveProps        will-receive-props\n      'UNSAFE_componentWillReceiveProps will-receive-props\n      'componentWillUpdate              will-update\n      'UNSAFE_componentWillUpdate       will-update\n      'componentDidUpdate               (fn [[name [this prev-props prev-state & optional :as args] & body]]\n                                          (let [snapshot-sym (if (symbol? (first optional)) (first optional) (gensym \"snapshot\"))]\n                                            `(~name [this# prev-props# prev-state# snapshot#]\n                                               (let [~this this#\n                                                     ~snapshot-sym snapshot#\n                                                     ~prev-props (goog.object/get prev-props# \"fulcro$value\")\n                                                     ~prev-state (goog.object/get prev-state# \"fulcro$state\")]\n                                                 (when (cljs.core/implements? fulcro.client.primitives/Ident this#)\n                                                   (let [ident#      (fulcro.client.primitives/ident this# ~prev-props)\n                                                         next-ident# (fulcro.client.primitives/ident this# (fulcro.client.primitives/props this#))]\n                                                     (when (not= ident# next-ident#)\n                                                       (let [idxr# (get-in (fulcro.client.primitives/get-reconciler this#) [:config :indexer])]\n                                                         (when-not (nil? idxr#)\n                                                           (swap! (:indexes idxr#)\n                                                             (fn [indexes#]\n                                                               (-> indexes#\n                                                                 (update-in [:ref->components ident#] disj this#)\n                                                                 (update-in [:ref->components next-ident#] (fnil conj #{}) this#)))))))))\n                                                 ~@body))))\n      'componentDidMount                (fn [[name [this :as args] & body]]\n                                          `(~name [this#]\n                                             (let [~this this#\n                                                   reconciler# (fulcro.client.primitives/get-reconciler this#)\n                                                   lifecycle# (get-in reconciler# [:config :lifecycle])\n                                                   indexer# (get-in reconciler# [:config :indexer])]\n                                               (goog.object/set this# \"fulcro$mounted\" true)\n                                               (when-not (nil? indexer#)\n                                                 (fulcro.client.impl.protocols/index-component! indexer# this#))\n                                               (when lifecycle#\n                                                 (lifecycle# this# :mount))\n                                               ~@body)))\n      'componentWillUnmount             (fn [[name [this :as args] & body]]\n                                          `(~name [this#]\n                                             (let [~this this#\n                                                   reconciler# (fulcro.client.primitives/get-reconciler this#)\n                                                   lifecycle# (get-in reconciler# [:config :lifecycle])\n                                                   cfg# (:config reconciler#)\n                                                   st# (:state cfg#)\n                                                   indexer# (:indexer cfg#)]\n                                               (goog.object/set this# \"fulcro$mounted\" false)\n                                               (when (and (not (nil? st#))\n                                                       (get-in @st# [:fulcro.client.primitives/queries this#]))\n                                                 (swap! st# update-in [:fulcro.client.primitives/queries] dissoc this#))\n                                               (when lifecycle#\n                                                 (lifecycle# this# :unmount))\n                                               (when indexer#\n                                                 (fulcro.client.impl.protocols/drop-component! indexer# this#))\n                                               ~@body)))\n      'shouldComponentUpdate            (fn [[name [this next-props next-state :as args] & body]]\n                                          `(~name [this# next-props# next-state#]\n                                             (let [~this this#\n                                                   ~next-props (goog.object/get next-props# \"fulcro$value\")\n                                                   ~next-state (goog.object/get next-state# \"fulcro$state\")]\n                                               ~@body)))\n      'getSnapshotBeforeUpdate          (fn [[name [this prev-props prev-state :as args] & body]]\n                                          `(~name [this# prev-props# prev-state#]\n                                             (let [~this this#\n                                                   ~prev-props (goog.object/get prev-props# \"fulcro$value\")\n                                                   ~prev-state (goog.object/get prev-state# \"fulcro$state\")]\n                                               ~@body)))\n      'render\n                                        (fn [[name [this :as args] & body]]\n                                          `(~name [this#]\n                                             (let [~this this#]\n                                               (binding [fulcro.client.primitives/*reconciler* (fulcro.client.primitives/get-reconciler this#)\n                                                         fulcro.client.primitives/*depth*      (inc (fulcro.client.primitives/depth this#))\n                                                         fulcro.client.primitives/*shared*     (fulcro.client.primitives/shared this#)\n                                                         fulcro.client.primitives/*instrument* (fulcro.client.primitives/instrument this#)\n                                                         fulcro.client.primitives/*parent*     this#]\n                                                 ~@body))))}\n     :defaults\n     `{~'shouldComponentUpdate\n       ;; Detect if props/state or children changed\n       ([this# next-props# next-state#]\n         (if fulcro.client.primitives/*blindly-render*\n           true\n           (let [next-children#     (. next-props# -children)\n                 next-props#        (goog.object/get next-props# \"fulcro$value\")\n                 current-props#     (fulcro.client.primitives/props this#)\n                 props-changed?#    (not= current-props# next-props#)\n                 next-state#        (goog.object/get next-state# \"fulcro$state\")\n                 state-changed?#    (and (.. this# ~'-state)\n                                      (not= (goog.object/get (. this# ~'-state) \"fulcro$state\")\n                                        next-state#))\n                 children-changed?# (not= (.. this# -props -children) next-children#)]\n             (or props-changed?# state-changed?# children-changed?#))))\n\n       ~'componentDidUpdate\n       ;; Update index of component when its ident changes\n       ([this# prev-props# prev-state#]\n         (let [prev-props# (goog.object/get prev-props# \"fulcro$value\")]\n           (when (cljs.core/implements? fulcro.client.primitives/Ident this#)\n             (let [ident#      (fulcro.client.primitives/ident this# prev-props#)\n                   next-ident# (fulcro.client.primitives/ident this# (fulcro.client.primitives/props this#))]\n               (when (not= ident# next-ident#)\n                 (let [idxr# (get-in (fulcro.client.primitives/get-reconciler this#) [:config :indexer])]\n                   (when-not (nil? idxr#)\n                     (swap! (:indexes idxr#)\n                       (fn [indexes#]\n                         (-> indexes#\n                           (update-in [:ref->components ident#] disj this#)\n                           (update-in [:ref->components next-ident#] (fnil conj #{}) this#)))))))))))\n       ~'componentDidMount\n       ;; Add the component to the indexer when it mounts\n       ([this#]\n         (goog.object/set this# \"fulcro$mounted\" true)\n         (let [indexer# (get-in (fulcro.client.primitives/get-reconciler this#) [:config :indexer])]\n           (when-not (nil? indexer#)\n             (fulcro.client.impl.protocols/index-component! indexer# this#))))\n       ~'componentWillUnmount\n       ;; Remove the component from the indexer, and remove any dynamic queries for it\n       ([this#]\n         (let [r#       (fulcro.client.primitives/get-reconciler this#)\n               cfg#     (:config r#)\n               st#      (:state cfg#)\n               indexer# (:indexer cfg#)]\n           (goog.object/set this# \"fulcro$mounted\" false)\n           ;; FIXME: WRONG...queries are not keyed by instance anymore (small possible memory leak)\n           (when (and (not (nil? st#))\n                   (get-in @st# [:fulcro.client.primitives/queries this#]))\n             (swap! st# update-in [:fulcro.client.primitives/queries] dissoc this#))\n           (when-not (nil? indexer#)\n             (fulcro.client.impl.protocols/drop-component! indexer# this#))))}}))\n\n(defn reshape [dt {:keys [reshape defaults]}]\n  (letfn [(reshape* [x]\n            (if (and (sequential? x)\n                  (contains? reshape (first x)))\n              (let [reshapef (get reshape (first x))]\n                (validate-sig x)\n                (reshapef x))\n              x))\n          (add-defaults-step [ret [name impl]]\n            (if-not (some #{name} (map first (filter seq? ret)))\n              (let [[before [p & after]] (split-with (complement '#{Object}) ret)]\n                (into (conj (vec before) p (cons name impl)) after))\n              ret))\n          (add-defaults [dt]\n            (reduce add-defaults-step dt defaults))\n          (add-object-protocol [dt]\n            (if-not (some '#{Object} dt)\n              (conj dt 'Object)\n              dt))]\n    (->> dt (map reshape*) vec add-object-protocol add-defaults)))\n\n#?(:clj (defn extract-static-methods [protocols]\n          (letfn [(add-protocol-method [existing-methods method]\n                    (let [nm              (first method)\n                          new-arity       (rest method)\n                          k               (keyword nm)\n                          existing-method (get existing-methods k)]\n                      (if existing-method\n                        (let [single-arity?    (vector? (second existing-method))\n                              existing-arities (if single-arity?\n                                                 (list (rest existing-method))\n                                                 (rest existing-method))]\n                          (assoc existing-methods k (conj existing-arities new-arity 'fn)))\n                        (assoc existing-methods k (list 'fn new-arity)))))]\n            (when-not (empty? protocols)\n              (let [result (->> protocols\n                             (filter #(not (symbol? %)))\n                             (reduce\n                               (fn [r impl] (add-protocol-method r impl))\n                               {}))]\n                (if (contains? result :params)\n                  result\n                  (assoc result :params '(fn [this]))))))))\n\n#?(:clj\n   (defn defui*-clj [name forms]\n     (let [docstring              (when (string? (first forms))\n                                    (first forms))\n           forms                  (cond-> forms\n                                    docstring rest)\n           {:keys [dt statics]} (collect-statics forms)\n           [other-protocols obj-dt] (split-with (complement '#{Object}) dt)\n           klass-name             (symbol (str name \"_klass\"))\n           lifecycle-method-names (set (keys lifecycle-sigs))\n           {obj-dt false non-lifecycle-dt true} (group-by\n                                                  (fn [x]\n                                                    (and (sequential? x)\n                                                      (not (lifecycle-method-names (first x)))))\n                                                  obj-dt)\n           class-methods          (extract-static-methods (:protocols statics))]\n       `(do\n          ~(when-not (empty? non-lifecycle-dt)\n             `(defprotocol ~(symbol (str name \"_proto\"))\n                ~@(map (fn [[m-name args]] (list m-name args)) non-lifecycle-dt)))\n          (declare ~name)\n          (defrecord ~klass-name [~'state ~'refs ~'props ~'children]\n            ;; TODO: non-lifecycle methods defined in the JS prototype - António\n            fulcro.client.impl.protocols/IReactLifecycle\n            ~@(rest (reshape obj-dt reshape-map-clj))\n\n            ~@other-protocols\n\n            ~@(:protocols statics)\n\n            ~@(when-not (empty? non-lifecycle-dt)\n                (list* (symbol (str name \"_proto\"))\n                  non-lifecycle-dt))\n\n            fulcro.client.impl.protocols/IReactComponent\n            (~'-render [this#]\n              (p/componentWillMount this#)\n              (p/render this#)))\n          (defmethod clojure.core/print-method ~(symbol (str (munge *ns*) \".\" klass-name))\n            [o# ^Writer w#]\n            (.write w# (str \"#object[\" (ns-name *ns*) \"/\" ~(str name) \"]\")))\n          (let [c# (fn ~name [state# refs# props# children#]\n                     (~(symbol (str (munge *ns*) \".\" klass-name \".\")) state# refs# props# children#))]\n            (def ~(with-meta name\n                    (merge (meta name)\n                      (when docstring\n                        {:doc docstring})))\n              (with-meta c#\n                (merge {:component      c#\n                        :component-ns   (ns-name *ns*)\n                        :component-name ~(str name)}\n                  ~class-methods))))))))\n\n(defn defui*\n  ([name form] (defui* name form nil))\n  ([name forms env]\n   (letfn [(field-set! [obj [field value]]\n             `(set! (. ^js ~obj ~(symbol (str \"-\" field))) ~value))]\n     (let [docstring        (when (string? (first forms))\n                              (first forms))\n           forms            (cond-> forms\n                              docstring rest)\n           {:keys [dt statics]} (collect-statics forms)\n           _                (validate-statics dt)\n           fqn              (if env\n                              (symbol (-> env :ns :name str) (str name))\n                              name)\n           ctor             `(defn ~(with-meta name\n                                      (merge {:jsdoc [\"@constructor\" \"@nocollapse\"]}\n                                        (meta name)\n                                        (when docstring\n                                          {:doc docstring})))\n                               []\n                               (this-as this#\n                                 (.apply js/React.Component this# (js-arguments))\n                                 (if-not (nil? (.-initLocalState ^js this#))\n                                   (set! (.-state this#) (.initLocalState ^js this#))\n                                   (set! (.-state this#) (cljs.core/js-obj)))\n                                 this#))\n           set-react-proto! `(set! (.-prototype ~name)\n                               (goog.object/clone js/React.Component.prototype))\n           ctor             (if (-> name meta :once)\n                              `(when-not (cljs.core/exists? ~name)\n                                 ~ctor\n                                 ~set-react-proto!)\n                              `(do\n                                 ~ctor\n                                 ~set-react-proto!))\n           display-name     (if env\n                              (str (-> env :ns :name) \"/\" name)\n                              'js/undefined)]\n       `(do\n          ~ctor\n          (specify! (.-prototype ~name) ~@(reshape dt reshape-map))\n          (set! (.. ~name -prototype -constructor) ~name)\n          (set! (.. ~name -prototype -constructor -displayName) ~display-name)\n          (set! (.-fulcro$isComponent ^js (.-prototype ^js ~name)) true)\n          ~@(map #(field-set! name %) (:fields statics))\n          (specify! ~name\n            ~@(mapv #(cond-> %\n                       (symbol? %) (vary-meta assoc :static true)) (:protocols statics)))\n          (specify! (. ~name ~'-prototype) ~@(:protocols statics))\n          (set! (.-cljs$lang$type ~name) true)\n          (set! (.-cljs$lang$ctorStr ~name) ~(str fqn))\n          (set! (.-cljs$lang$ctorPrWriter ~name)\n            (fn [this# writer# opt#]\n              (cljs.core/-write writer# ~(str fqn)))))))))\n\n(defmacro defui [name & forms]\n  (if (boolean (:ns &env))\n    (defui* name forms &env)\n    #?(:clj (defui*-clj name forms))))\n\n(defmacro ui\n  \"Declare an anonymous UI component.  If the first argument is a keyword, then it is treated\n  as the React version (defaults to :v15).\"\n  [& forms]\n  (let [t (with-meta (gensym \"ui_\") {:anonymous true})]\n    `(do (defui ~t ~@forms) ~t)))\n\n;; =============================================================================\n;; Globals & Dynamics\n\n(def roots (atom {}))\n(def ^{:dynamic true} *raf* nil)\n(def ^{:dynamic true} *reconciler* nil)\n(def ^{:dynamic true} *parent* nil)\n(def ^{:dynamic true} *blindly-render* false)               ; when true: shouldComponentUpdate will return true even if their data/state hasn't changed\n(def ^{:dynamic true} *shared* nil)\n(def ^{:dynamic true} *instrument* nil)\n(def ^{:dynamic true} *depth* 0)\n\n#?(:clj\n   (defn- munge-component-name [x]\n     (let [ns-name (-> x meta :component-ns)\n           cl-name (-> x meta :component-name)]\n       (munge\n         (str (str/replace (str ns-name) \".\" \"$\") \"$\" cl-name)))))\n\n#?(:clj\n   (defn- compute-react-key [cl props]\n     (when-let [idx (-> props meta ::parser/data-path)]\n       (str (munge-component-name cl) \"_\" idx))))\n\n#?(:cljs\n   (defn- compute-react-key [cl props]\n     (if-let [rk (:react-key props)]\n       rk\n       (if-let [idx (-> props meta ::parser/data-path)]\n         (str (. cl -name) \"_\" idx)\n         js/undefined))))\n\n\n(defn component?\n  \"Returns true if the argument is a component.\"\n  #?(:cljs {:tag boolean})\n  [x]\n  (if-not (nil? x)\n    #?(:clj  (or (instance? fulcro.client.impl.protocols.IReactComponent x)\n               (satisfies? p/IReactComponent x))\n       :cljs (true? (.-fulcro$isComponent ^js x)))\n    false))\n\n#?(:clj\n   (defn react-type\n     \"Returns the component type, regardless of whether the component has been\n      mounted\"\n     [component]\n     {:pre [(component? component)]}\n     (let [[klass-name] (str/split (reflect/typename (type component)) #\"_klass\")\n           last-idx-dot (.lastIndexOf klass-name \".\")\n           ns           (clojure.main/demunge (subs klass-name 0 last-idx-dot))\n           c            (subs klass-name (inc last-idx-dot))]\n       @(or (find-var (symbol ns c))\n          (find-var (symbol ns (clojure.main/demunge c)))))))\n\n#?(:cljs\n   (defn react-type\n     \"Returns the component type, regardless of whether the component has been\n      mounted\"\n     [x]\n     (or (gobj/get x \"type\") (type x))))\n\n(defn- state [c]\n  {:pre [(component? c)]}\n  (.-state c))\n\n(defn- get-raw-react-prop\n  \"PRIVATE: Do not use. GET a RAW react prop\"\n  [c k]\n  #?(:clj  (get (:props c) k)\n     :cljs (gobj/get (.-props c) k)))\n\n(defn reconciler?\n  \"Returns true if x is a reconciler.\"\n  #?(:cljs {:tag boolean})\n  [x]\n  #?(:cljs (implements? p/IReconciler x)\n     :clj  (or (instance? p/IReconciler x)\n             (satisfies? p/IReconciler x))))\n\n(defn get-indexer\n  \"PRIVATE: Get the indexer associated with the reconciler.\"\n  [reconciler]\n  {:pre [(reconciler? reconciler)]}\n  (-> reconciler :config :indexer))\n\n(defn- sift-idents [res]\n  (let [{idents true rest false} (group-by #(vector? (first %)) res)]\n    [(into {} idents) (into {} rest)]))\n\n(defn get-reconciler\n  [c]\n  {:pre [(component? c)]}\n  (get-raw-react-prop c #?(:clj  :fulcro$reconciler\n                           :cljs \"fulcro$reconciler\")))\n\n(defn- parent\n  \"Returns the parent component.\"\n  [component]\n  (get-raw-react-prop component #?(:clj  :fulcro$parent\n                                   :cljs \"fulcro$parent\")))\n\n(defn depth\n  \"PRIVATE: Returns the render depth (a integer) of the component relative to\n   the mount root.\"\n  [component]\n  (when (component? component)\n    (get-raw-react-prop component #?(:clj  :fulcro$depth\n                                     :cljs \"fulcro$depth\"))))\n\n(defn react-key\n  \"Returns the components React key.\"\n  [component]\n  (get-raw-react-prop component #?(:clj  :fulcro$reactKey\n                                   :cljs \"fulcro$reactKey\")))\n\n#?(:clj\n   (defn props [component]\n     {:pre [(component? component)]}\n     (:fulcro$value (:props component))))\n\n#?(:cljs\n   (defn props\n     \"Return a components props.\"\n     [component]\n     {:pre [(component? component)]}\n     (gobj/get (.-props component) \"fulcro$value\")))\n\n#?(:clj\n   (defn init-local-state [component]\n     (reset! (:state component) (.initLocalState component))))\n\n(defn get-state\n  \"Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state.\"\n  ([component]\n   (get-state component []))\n  ([component k-or-ks]\n   {:pre [(component? component)]}\n   (let [cst #?(:clj @(:state component)\n                :cljs (when-let [state (. component -state)] (gobj/get state \"fulcro$state\")))]\n     (get-in cst (if (sequential? k-or-ks) k-or-ks [k-or-ks])))))\n\n(defn- get-static-query\n  \"Get the statically-declared query of IQuery from a given class.\"\n  [c]\n  {:pre (has-query? c)}\n  #?(:clj ((-> c meta :query) c) :cljs (query c)))\n\n(defn some-hasquery?\n  \"Returns true if the given component or one of its parents has a query.\"\n  [c]\n  (loop [c c]\n    (cond\n      (nil? c) false\n      (has-query? c) true\n      :else (recur (parent c)))))\n\n(defn get-ident\n  \"Get the ident for a mounted component OR using a component class.\n\n  That arity-2 will return the ident using the supplied props map.\n\n  The single-arity version should only be used with a mounted component (e.g. `this` from `render`), and will derive the\n  props that were sent to it most recently.\"\n  ([x]\n   {:pre [(component? x)]}\n   (if-let [m (props x)]\n     (ident x m)\n     (log/warn \"get-ident was invoked on component with nil props (this could mean it wasn't yet mounted): \" x)))\n  ([class props]\n    #?(:clj  (if-let [ident (if (component? class)\n                              ident\n                              (-> class meta :ident))]\n               (let [id (ident class props)]\n                 (if-not (util/ident? id)\n                   (log/warn \"get-ident returned an invalid ident for class:\" class))\n                 (if (= ::not-found (second id)) [(first id) nil] id))\n               (log/warn \"get-ident called with something that is either not a class or does not implement ident: \" class))\n       :cljs (if (implements? Ident class)\n               (let [id (ident class props)]\n                 (if-not (util/ident? id)\n                   (log/warn \"get-ident returned an invalid ident for class:\" class))\n                 (if (= ::not-found (second id)) [(first id) nil] id))\n               (log/warn \"get-ident called with something that is either not a class or does not implement ident: \" class)))))\n\n(defn component-name\n  \"Returns a string version of the given react component's name.\"\n  [class]\n  #?(:clj  (str (-> class meta :component-ns) \"/\" (-> class meta :component-name))\n     :cljs (.-displayName class)))\n\n(defn query-id\n  \"Returns a string ID for the query of the given class with qualifier\"\n  [class qualifier]\n  (if (nil? class)\n    (log/error \"Query ID received no class (if you see this warning, it probably means metadata was lost on your query)\" (ex-info \"\" {}))\n    (when-let [classname (component-name class)]\n      (str classname (when qualifier (str \"$\" qualifier))))))\n\n#?(:clj\n   (defn- is-element? [e]\n     (or\n       (instance? fulcro.client.impl.protocols.IReactComponent e)\n       (instance? fulcro.client.impl.protocols.IReactDOMElement e)\n       (satisfies? p/IReactComponent e)\n       (satisfies? p/IReactDOMElement e))))\n\n#?(:clj\n   (defn fragment [& args]\n     (let [children (if (is-element? (first args)) args (rest args))]\n       (vec children))))\n\n#?(:cljs\n   (defn fragment\n     \"Wraps children in a React.Fragment. Props are optional, like normal DOM elements.\"\n     [& args]\n     (let [[props children] (if (map? (first args))\n                              [(first args) (rest args)]\n                              [#js {} args])]\n       (apply js/React.createElement js/React.Fragment (clj->js props) children))))\n\n#?(:clj\n   (defn factory\n     \"Create a factory constructor from a component class created with\n      fulcro.client.primitives/defui.\"\n     ([class]\n      (factory class nil))\n     ([class {:keys [validator keyfn instrument? qualifier]\n              :or   {instrument? true} :as opts}]\n      {:pre [(fn? class)]}\n      (with-meta\n        (fn element-factory\n          ([] (element-factory nil))\n          ([props & children]\n           (when-not (nil? validator)\n             (assert (validator props)))\n           (if (and *instrument* (var-get *instrument*) instrument?)\n             (*instrument*\n               {:props    props\n                :children children\n                :class    class\n                :factory  (factory class (assoc opts :instrument? false))})\n             (let [react-key (cond\n                               (some? keyfn) (keyfn props)\n                               (some? (:react-key props)) (:react-key props)\n                               :else (compute-react-key class props))\n                   ctor      class\n                   ref       (:ref props)\n                   props     {:fulcro$reactRef   ref\n                              :fulcro$reactKey   react-key\n                              :fulcro$value      (cond-> props\n                                                   (map? props) (dissoc :ref))\n                              :fulcro$queryid    (query-id class qualifier)\n                              :fulcro$mounted?   (atom false)\n                              :fulcro$reconciler *reconciler*\n                              :fulcro$parent     *parent*\n                              :fulcro$shared     *shared*\n                              :fulcro$instrument *instrument*\n                              :fulcro$depth      *depth*}\n                   component (ctor (atom nil) (atom nil) props children)]\n               (when ref\n                 (assert (some? *parent*))\n                 (swap! (:refs *parent*) assoc ref component))\n               (init-local-state component)\n               component))))\n        {:class     class\n         :queryid   (query-id class qualifier)\n         :qualifier qualifier}))))\n\n#?(:cljs\n   (defn create-element [class props children]\n     (apply js/React.createElement class props children)))\n\n#?(:cljs\n   (defn factory\n     \"Create a factory constructor from a component class created with\n      defui.\"\n     ([class] (factory class nil))\n     ([class {:keys [validator keyfn instrument? qualifier]\n              :or   {instrument? true} :as opts}]\n      {:pre [(fn? class)]}\n      (with-meta\n        (fn element-factory [props & children]\n          (when-not (nil? validator)\n            (assert (validator props)))\n          (if (and *instrument* instrument?)\n            (*instrument*\n              {:props    props\n               :children children\n               :class    class\n               :factory  (factory class (assoc opts :instrument? false))})\n            (let [key (if-not (nil? keyfn)\n                        (keyfn props)\n                        (compute-react-key class props))\n                  ref (:ref props)\n                  ref (cond-> ref (keyword? ref) str)]\n              (create-element class\n                #js {:key               key\n                     :ref               ref\n                     :fulcro$reactKey   key\n                     :fulcro$value      props\n                     :fulcro$queryid    (query-id class qualifier)\n                     :fulcro$reconciler *reconciler*\n                     :fulcro$parent     *parent*\n                     :fulcro$shared     *shared*\n                     :fulcro$instrument *instrument*\n                     :fulcro$depth      *depth*}\n                (or (util/force-children children) [])))))\n        {:class     class\n         :queryid   (query-id class qualifier)\n         :qualifier qualifier}))))\n\n(defn computed-factory\n  \"Similar to factory, but returns a function with the signature\n  [props computed] instead of default [props & children]. This makes easier to send\n  computed but will not accept children params.\"\n  ([class] (computed-factory class {}))\n  ([class options]\n   (let [factory (factory class options)]\n     (fn real-factory\n       ([props] (real-factory props {}))\n       ([props computed]\n        (factory (computed props computed)))))))\n\n(defn denormalize-query\n  \"Takes a state map that may contain normalized queries and a query ID. Returns the stored query or nil.\"\n  [state-map ID]\n  (let [get-stored-query (fn [id] (get-in state-map [::queries id :query]))]\n    (when-let [normalized-query (get-stored-query ID)]\n      (prewalk (fn [ele]\n                 (if-let [q (and (string? ele) (get-stored-query ele))]\n                   q\n                   ele)) normalized-query))))\n\n(defn get-query-by-id [state-map class queryid]\n  (let [query (or (denormalize-query state-map queryid) (get-static-query class))]\n    (with-meta query {:component class\n                      :queryid   queryid})))\n\n(defn is-factory?\n  [class-or-factory]\n  (and (fn? class-or-factory)\n    (-> class-or-factory meta (contains? :qualifier))))\n\n(def ^{:dynamic true :private true} *query-state* {})\n\n(defn- get-query-id\n  \"Get the query id that is cached in the component's props.\"\n  [component]\n  {:pre [(component? component)]}\n  (get-raw-react-prop component #?(:clj  :fulcro$queryid\n                                   :cljs \"fulcro$queryid\")))\n\n(defn get-query\n  \"Get the query for the given class or factory. If called without a state map, then you'll get the declared static\n  query of the class. If a state map is supplied, then the dynamically set queries in that state will result in\n  the current dynamically-set query according to that state.\"\n  ([class-or-factory] (get-query class-or-factory *query-state*))\n  ([class-or-factory state-map]\n   (binding [*query-state* state-map]\n     (let [class     (cond\n                       (is-factory? class-or-factory) (-> class-or-factory meta :class)\n                       (component? class-or-factory) (react-type class-or-factory)\n                       :else class-or-factory)\n           qualifier (if (is-factory? class-or-factory)\n                       (-> class-or-factory meta :qualifier)\n                       nil)\n           queryid   (if (component? class-or-factory)\n                       (get-query-id class-or-factory)\n                       (query-id class qualifier))]\n       (when (and class (has-query? class))\n         (get-query-by-id state-map class queryid))))))\n\n(defn link-element [element]\n  (prewalk (fn link-element-helper [ele]\n             (let [{:keys [queryid]} (meta ele)]\n               (if queryid queryid ele))) element))\n\n(defn deep-merge [& xs]\n  \"Merges nested maps without overwriting existing keys.\"\n  (if (every? map? xs)\n    (apply merge-with deep-merge xs)\n    (last xs)))\n\n(defn normalize-query-elements\n  \"Determines if there are query elements in the present query that need to be normalized as well. If so, it does so.\n  Returns the new state map.\"\n  [state-map query]\n  (reduce (fn normalize-query-elements-reducer [state ele]\n            (let [parameterized? (seq? ele)                 ; not using list? because it could show up as a lazyseq\n                  raw-element    (if parameterized? (first ele) ele)]\n              (cond\n                (util/union? raw-element) (let [union-alternates            (first (vals raw-element))\n                                                normalized-union-alternates (into {} (map link-element union-alternates))\n                                                union-query-id              (-> union-alternates meta :queryid)]\n                                            (assert union-query-id \"Union query has an ID. Did you use extended get-query?\")\n                                            (deep-merge\n                                              {::queries {union-query-id {:query normalized-union-alternates\n                                                                          :id    union-query-id}}}\n                                              (reduce (fn normalize-union-reducer [s [_ subquery]]\n                                                        (normalize-query s subquery)) state union-alternates)))\n                (util/join? raw-element) (normalize-query state (util/join-value raw-element))\n                :else state)))\n    state-map query))\n\n(defn link-query\n  \"Find all of the elements (only at the top level) of the given query and replace them\n  with their query ID\"\n  [query]\n  (mapv link-element query))\n\n(defn normalize-query\n  \"Given a state map and a query, returns a state map with the query normalized into the database. Query fragments\n  that already appear in the state will not be added. \"\n  [state-map query]\n  (let [new-state (normalize-query-elements state-map query)\n        new-state (if (nil? (::queries new-state))\n                    (assoc new-state ::queries {})\n                    new-state)\n        top-query (link-query query)]\n    (if-let [queryid (some-> query meta :queryid)]\n      (deep-merge {::queries {queryid {:query top-query :id queryid}}} new-state)\n      new-state)))\n\n(defn set-query*\n  \"Put a query in app state.\n  NOTE: Indexes must be rebuilt after setting a query, so this function should primarily be used to build\n  up an initial app state.\"\n  [state-map ui-factory-class-or-queryid {:keys [query] :as args}]\n  (let [queryid (cond\n                  (nil? ui-factory-class-or-queryid) nil\n                  (string? ui-factory-class-or-queryid) ui-factory-class-or-queryid\n                  (some-> ui-factory-class-or-queryid meta (contains? :queryid)) (some-> ui-factory-class-or-queryid meta :queryid)\n                  :otherwise (query-id ui-factory-class-or-queryid nil))\n        setq*   (fn [state] (normalize-query (update state ::queries dissoc queryid) (vary-meta query assoc :queryid queryid)))]\n    (if (string? queryid)\n      (cond-> state-map\n        (contains? args :query) (setq*))\n      (do\n        (log/error \"Set query failed. There was no query ID.\")\n        state-map))))\n\n(defn gather-keys\n  \"Gather the keys that would be considered part of the refresh set for the given query.\n\n  E.g. [:a {:j [:b]} {:u {:x [:l] :y [:k]}}] ==> #{:a :j :u}\"\n  [query]\n  (cond\n    (vector? query) (reduce (fn gather-keys-reducer [rv e]\n                              (cond\n                                (keyword? e) (conj rv e)\n                                (and (util/ident? e) (= '_ (second e))) (conj rv (first e))\n                                (and (list? e) (keyword? (first e))) (conj rv (first e))\n                                (and (util/join? e) (util/ident? (util/join-key e)) (= '_ (-> e util/join-key second))) (conj rv (first (util/join-key e)))\n                                (and (util/join? e) (keyword? (util/join-key e))) (conj rv (util/join-key e))\n                                :else rv))\n                      #{} query)\n    (map? query) (-> query keys set)                        ; a union component, which has a map for a query\n    :else #{}))\n\n(defn- normalize* [query data refs union-seen]\n  (cond\n    (= '[*] query) data\n\n    ;; union case\n    (map? query)\n    (let [class         (-> query meta :component)\n          ident #?(:clj (when-let [ident (-> class meta :ident)]\n                          (ident class data))\n                   :cljs (when (implements? Ident class)\n                           (get-ident class data)))]\n      (if-not (nil? ident)\n        (vary-meta (normalize* (get query (first ident)) data refs union-seen)\n          assoc ::tag (first ident))                        ; FIXME: What is tag for?\n        (throw #?(:clj  (IllegalArgumentException. \"Union components must implement Ident\")\n                  :cljs (js/Error. \"Union components must implement Ident\")))))\n\n    (vector? data) data                                     ;; already normalized\n\n    :else\n    (loop [q (seq query) ret data]\n      (if-not (nil? q)\n        (let [expr (first q)]\n          (if (util/join? expr)\n            (let [[k sel] (util/join-entry expr)\n                  recursive?  (util/recursion? sel)\n                  union-entry (if (util/union? expr) sel union-seen)\n                  sel         (if recursive?\n                                (if-not (nil? union-seen)\n                                  union-seen\n                                  query)\n                                sel)\n                  class       (-> sel meta :component)\n                  v           (get data k)]\n              (cond\n                ;; graph loop: db->tree leaves ident in place\n                (and recursive? (util/ident? v)) (recur (next q) ret)\n                ;; normalize one\n                (map? v)\n                (let [x (normalize* sel v refs union-entry)]\n                  (if-not (or (nil? class) (not #?(:clj  (-> class meta :ident)\n                                                   :cljs (implements? Ident class))))\n                    (let [i #?(:clj ((-> class meta :ident) class v)\n                               :cljs (get-ident class v))]\n                      (swap! refs update-in [(first i) (second i)] merge x)\n                      (recur (next q) (assoc ret k i)))\n                    (recur (next q) (assoc ret k x))))\n\n                ;; normalize many\n                (vector? v)\n                (let [xs (into [] (map #(normalize* sel % refs union-entry)) v)]\n                  (if-not (or (nil? class) (not #?(:clj  (-> class meta :ident)\n                                                   :cljs (implements? Ident class))))\n                    (let [is (into [] (map #?(:clj  #((-> class meta :ident) class %)\n                                              :cljs #(get-ident class %))) xs)]\n                      (if (vector? sel)\n                        (when-not (empty? is)\n                          (swap! refs\n                            (fn [refs]\n                              (reduce (fn [m [i x]]\n                                        (update-in m i merge x))\n                                refs (zipmap is xs)))))\n                        ;; union case\n                        (swap! refs\n                          (fn [refs']\n                            (reduce\n                              (fn [ret [i x]]\n                                (update-in ret i merge x))\n                              refs' (map vector is xs)))))\n                      (recur (next q) (assoc ret k is)))\n                    (recur (next q) (assoc ret k xs))))\n\n                ;; missing key\n                (nil? v)\n                (recur (next q) ret)\n\n                ;; can't handle\n                :else (recur (next q) (assoc ret k v))))\n            (let [k (if (seq? expr) (first expr) expr)\n                  v (get data k)]\n              (if (nil? v)\n                (recur (next q) ret)\n                (recur (next q) (assoc ret k v))))))\n        ret))))\n\n(defn tree->db\n  \"Given a component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-idents\n   option is true, will return these tables in the result instead of as metadata.\"\n  ([x data]\n   (tree->db x data false))\n  ([x data #?(:clj merge-idents :cljs ^boolean merge-idents)]\n   (let [refs (atom {})\n         x    (if (vector? x) x (get-query x data))\n         ret  (normalize* x data refs nil)]\n     (if merge-idents\n       (let [refs' @refs] (merge ret refs'))\n       (with-meta ret @refs)))))\n\n\n(defn- focused-join [expr ks full-expr union-expr]\n  (let [expr-meta (meta expr)\n        expr'     (cond\n                    (map? expr)\n                    (let [join-value (-> expr first second)\n                          join-value (if (and (util/recursion? join-value)\n                                           (seq ks))\n                                       (if-not (nil? union-expr)\n                                         union-expr\n                                         full-expr)\n                                       join-value)]\n                      {(ffirst expr) (focus-query* join-value ks nil)})\n\n                    (seq? expr) (list (focused-join (first expr) ks nil nil) (second expr))\n                    :else expr)]\n    (cond-> expr'\n      (some? expr-meta) (with-meta expr-meta))))\n\n(defn- focus-query*\n  [query path union-expr]\n  (if (empty? path)\n    query\n    (let [[k & ks] path]\n      (letfn [(match [x]\n                (= k (util/join-key x)))\n              (value [x]\n                (focused-join x ks query union-expr))]\n        (if (map? query)                                    ;; UNION\n          {k (focus-query* (get query k) ks query)}\n          (into [] (comp (filter match) (map value) (take 1)) query))))))\n\n(defn focus-query\n  \"Given a query, focus it along the specified path.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [:foo :bar])\n    => [{:foo [:bar]}]\"\n  [query path]\n  (focus-query* query path nil))\n\n(declare focus-subquery*)\n\n(defn- focus-subquery-union*\n  [query-ast sub-ast]\n  (let [s-index (into {} (map #(vector (:union-key %) %)) (:children sub-ast))]\n    (assoc query-ast\n      :children\n      (reduce\n        (fn [children {:keys [union-key] :as union-entry}]\n          (if-let [sub (get s-index union-key)]\n            (conj children (focus-subquery* union-entry sub))\n            (conj children union-entry)))\n        []\n        (:children query-ast)))))\n\n(defn- focus-subquery*\n  [query-ast sub-ast]\n  (let [q-index (into {} (map #(vector (:key %) %)) (:children query-ast))]\n    (assoc query-ast\n      :children\n      (reduce\n        (fn [children {:keys [key type] :as focus}]\n          (if-let [source (get q-index key)]\n            (cond\n              (= :join type (:type source))\n              (conj children (focus-subquery* source focus))\n\n              (= :union type (:type source))\n              (conj children (focus-subquery-union* source focus))\n\n              :else\n              (conj children source))\n            children))\n        []\n        (:children sub-ast)))))\n\n(defn focus-subquery\n  \"Given a query, focus it along the specified query expression.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n    => [{:foo [:bar]} :woz]\"\n  [query sub-query]\n  (let [query-ast (query->ast query)\n        sub-ast   (query->ast sub-query)]\n    (ast->query (focus-subquery* query-ast sub-ast))))\n\n(defn- expr->key\n  \"Given a query expression return its key.\"\n  [expr]\n  (cond\n    (keyword? expr) expr\n    (map? expr) (ffirst expr)\n    (seq? expr) (let [expr' (first expr)]\n                  (when (map? expr')\n                    (ffirst expr')))\n    (util/ident? expr) (cond-> expr (= '_ (second expr)) first)\n    :else\n    (throw\n      (ex-info (str \"Invalid query expr \" expr)\n        {:type :error/invalid-expression}))))\n\n\n(defn- query-zip\n  \"Return a zipper on a query expression.\"\n  [root]\n  (zip/zipper\n    #(or (vector? %) (map? %) (seq? %))\n    seq\n    (fn [node children]\n      (let [ret (cond\n                  (vector? node) (vec children)\n                  (map? node) (into {} children)\n                  (seq? node) children)]\n        (with-meta ret (meta node))))\n    root))\n\n(defn- move-to-key\n  \"Move from the current zipper location to the specified key. loc must be a\n   hash map node.\"\n  [loc k]\n  (loop [loc (zip/down loc)]\n    (let [node (zip/node loc)]\n      (if (= k (first node))\n        (-> loc zip/down zip/right)\n        (recur (zip/right loc))))))\n\n(defn- query-template\n  \"Given a query and a path into a query return a zipper focused at the location\n   specified by the path. This location can be replaced to customize / alter\n   the query.\"\n  [query path]\n  (letfn [(query-template* [loc path]\n            (if (empty? path)\n              loc\n              (let [node (zip/node loc)]\n                (if (vector? node)                          ;; SUBQUERY\n                  (recur (zip/down loc) path)\n                  (let [[k & ks] path\n                        k' (expr->key node)]\n                    (if (= k k')\n                      (if (or (map? node)\n                            (and (seq? node) (map? (first node))))\n                        (let [loc'  (move-to-key (cond-> loc (seq? node) zip/down) k)\n                              node' (zip/node loc')]\n                          (if (map? node')                  ;; UNION\n                            (if (seq ks)\n                              (recur\n                                (zip/replace loc'\n                                  (zip/node (move-to-key loc' (first ks))))\n                                (next ks))\n                              loc')\n                            (recur loc' ks)))               ;; JOIN\n                        (recur (-> loc zip/down zip/down zip/down zip/right) ks)) ;; CALL\n                      (recur (zip/right loc) path)))))))]\n    (query-template* (query-zip query) path)))\n\n(defn- replace [template new-query]\n  (-> template (zip/replace new-query) zip/root))\n\n(defn reduce-query-depth\n  \"Changes a join on key k with depth limit from [:a {:k n}] to [:a {:k (dec n)}]\"\n  [q k]\n  (if-not (empty? (focus-query q [k]))\n    (let [pos   (query-template q [k])\n          node  (zip/node pos)\n          node' (cond-> node (number? node) dec)]\n      (replace pos node'))\n    q))\n\n(defn- reduce-union-recursion-depth\n  \"Given a union expression decrement each of the query roots by one if it\n   is recursive.\"\n  [union-expr recursion-key]\n  (->> union-expr\n    (map (fn [[k q]] [k (reduce-query-depth q recursion-key)]))\n    (into {})))\n\n(defn- mappable-ident? [refs ident]\n  (and (util/ident? ident)\n    (contains? refs (first ident))))\n\n(defn- denormalize*\n  \"Denormalize a data based on query. refs is a data structure which maps idents\n   to their values. map-ident is a function taking a ident to another ident,\n   used during tempid transition. idents-seen is the set of idents encountered,\n   used to limit recursion. union-expr is the current union expression being\n   evaluated. recurse-key is key representing the current recursive query being\n   evaluted.\"\n  [query data refs map-ident idents-seen union-expr recurse-key]\n  ;; support taking ident for data param\n  (let [union-recur? (and union-expr recurse-key)\n        recur-ident  (when union-recur?\n                       data)\n        data         (loop [data data]\n                       (if (mappable-ident? refs data)\n                         (recur (get-in refs (map-ident data)))\n                         data))]\n    (cond\n      (vector? data)\n      ;; join\n      (let [step (fn [ident]\n                   (if-not (mappable-ident? refs ident)\n                     (if (= query '[*])\n                       ident\n                       (let [{props false joins true} (group-by util/join? query)\n                             props (mapv #(cond-> % (seq? %) first) props)]\n                         (loop [joins (seq joins) ret {}]\n                           (if-not (nil? joins)\n                             (let [join (first joins)\n                                   [key sel] (util/join-entry join)\n                                   v    (get ident key)]\n                               (recur (next joins)\n                                 (assoc ret\n                                   key (denormalize* sel v refs map-ident\n                                         idents-seen union-expr recurse-key))))\n                             (merge (select-keys ident props) ret)))))\n                     (let [ident'      (get-in refs (map-ident ident))\n                           query       (cond-> query\n                                         union-recur? (reduce-union-recursion-depth recurse-key))\n                           ;; also reduce query depth of union-seen, there can\n                           ;; be more union recursions inside\n                           union-seen' (cond-> union-expr\n                                         union-recur? (reduce-union-recursion-depth recurse-key))\n                           query'      (cond-> query\n                                         (map? query) (get (first ident)))] ;; UNION\n                       (denormalize* query' ident' refs map-ident idents-seen union-seen' nil))))]\n        (into [] (map step) data))\n\n      (and (map? query) union-recur?)\n      (denormalize* (get query (first recur-ident)) data refs map-ident\n        idents-seen union-expr recurse-key)\n\n      :else\n      ;; map case\n      (if (= '[*] query)\n        data\n        (let [{props false joins true} (group-by #(or (util/join? %) (util/ident? %)\n                                                    (and (seq? %) (util/ident? (first %))))\n                                         query)\n              props (mapv #(cond-> % (seq? %) first) props)]\n          (loop [joins (seq joins) ret {}]\n            (if-not (nil? joins)\n              (let [join        (first joins)\n                    join        (cond-> join\n                                  (seq? join) first)\n                    join        (cond-> join\n                                  (util/ident? join) (hash-map '[*]))\n                    [key sel] (util/join-entry join)\n                    recurse?    (util/recursion? sel)\n                    recurse-key (when recurse? key)\n                    v           (if (util/ident? key)\n                                  (if (= '_ (second key))\n                                    (get refs (first key))\n                                    (get-in refs (map-ident key)))\n                                  (get data key))\n                    key         (cond-> key (util/unique-ident? key) first)\n                    v           (if (mappable-ident? refs v)\n                                  (loop [v v]\n                                    (let [next (get-in refs (map-ident v))]\n                                      (if (mappable-ident? refs next)\n                                        (recur next)\n                                        (map-ident v))))\n                                  v)\n                    limit       (if (number? sel) sel :none)\n                    union-entry (if (util/union? join)\n                                  sel\n                                  (when recurse?\n                                    union-expr))\n                    sel         (cond\n                                  recurse?\n                                  (if-not (nil? union-expr)\n                                    union-entry\n                                    (reduce-query-depth query key))\n\n                                  (and (mappable-ident? refs v)\n                                    (util/union? join))\n                                  (get sel (first v))\n\n                                  (and (util/ident? key)\n                                    (util/union? join))\n                                  (get sel (first key))\n\n                                  :else sel)\n                    graph-loop? (and recurse?\n                                  (contains? (set (get idents-seen key)) v)\n                                  (= :none limit))\n                    idents-seen (if (and (mappable-ident? refs v) recurse?)\n                                  (-> idents-seen\n                                    (update-in [key] (fnil conj #{}) v)\n                                    (assoc-in [:last-ident key] v)) idents-seen)]\n                (cond\n                  (= 0 limit) (recur (next joins) ret)\n                  graph-loop? (recur (next joins) ret)\n                  (nil? v) (recur (next joins) ret)\n                  :else (recur (next joins)\n                          (assoc ret\n                            key (denormalize* sel v refs map-ident\n                                  idents-seen union-entry recurse-key)))))\n              (if-let [looped-key (some\n                                    (fn [[k identset]]\n                                      (if (contains? identset (get data k))\n                                        (get-in idents-seen [:last-ident k])\n                                        nil))\n                                    (dissoc idents-seen :last-ident))]\n                looped-key\n                (merge (select-keys data props) ret)))))))))\n\n(defn db->tree\n  \"Given a query, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values.\"\n  ([query data refs]\n   {:pre [(map? refs)]}\n   (denormalize* query data refs identity {} nil nil))\n  ([query data refs map-ident]\n   {:pre [(map? refs)]}\n   (denormalize* query data refs map-ident {} nil nil)))\n\n\n(defn ref->any\n  \"Get any component from the indexer that matches the ref.\"\n  [x ref]\n  (let [indexer (if (reconciler? x) (get-indexer x) x)]\n    (first (p/key->components indexer ref))))\n\n(defn resolve-tempids\n  \"Replaces all tempids in app-state with the ids returned by the server.\"\n  [state tid->rid]\n  (if (empty? tid->rid)\n    state\n    (prewalk #(if (tempid? %) (get tid->rid % %) %) state)))\n\n(defn rewrite-tempids-in-request-queue\n  \"Rewrite any pending requests in the request queue to account for the fact that a response might have\n  changed ids that are expressed in the mutations of that queue. tempid-map MUST be a map from om\n  tempid to real ids, not idents.\"\n  [queue tempid-map]\n  (loop [entry (async/poll! queue) entries []]\n    (cond\n      entry (recur (async/poll! queue) (conj entries (resolve-tempids entry tempid-map)))\n      (seq entries) (doseq [e entries] (when-not (async/offer! queue e)\n                                         (log/error \"Unable to put request back on network queue during tempid rewrite!\"))))))\n\n\n(defn remove-loads-and-fallbacks\n  \"Removes all fulcro/load and tx/fallback mutations from the query\"\n  [query]\n  (let [symbols-to-filter #{'fulcro/load `fulcro.client.data-fetch/load 'tx/fallback `fulcro.client.data-fetch/fallback}\n        ast               (query->ast query)\n        children          (:children ast)\n        new-children      (filter (fn [child] (not (contains? symbols-to-filter (:dispatch-key child)))) children)\n        new-ast           (assoc ast :children new-children)]\n    (ast->query new-ast)))\n\n(defn fallback-tx [tx resp]\n  \"Filters out everything from the tx that is not a fallback mutation, and adds the given server\n  response to the parameters of the remaining fallbacks.\n\n  Returns the fallback tx, or nil if the resulting expression is empty.\n\n  tx is the original transaction.\n  resp is the response from the server.\"\n  (let [symbols-to-find #{'tx/fallback 'fulcro.client.data-fetch/fallback}\n        ast             (query->ast tx)\n        children        (:children ast)\n        new-children    (->> children\n                          (filter (fn [child] (contains? symbols-to-find (:dispatch-key child))))\n                          (map (fn [ast] (update ast :params assoc :execute true :error resp))))\n        new-ast         (assoc ast :children new-children)\n        fallback-tx     (ast->query new-ast)]\n    (when (not-empty fallback-tx)\n      fallback-tx)))\n\n(defn- is-ui-query-fragment?\n  \"Check the given keyword to see if it is in the :ui namespace.\"\n  [kw]\n  (let [kw (if (map? kw) (-> kw keys first) kw)]\n    (when (keyword? kw) (some->> kw namespace (re-find #\"^ui(?:\\.|$)\")))))\n\n(defn strip-ui\n  \"Returns a new query with fragments that are in the `ui` namespace removed.\"\n  [query]\n  (let [ast              (query->ast query)\n        drop-ui-children (fn drop-ui-children [ast-node]\n                           (let [children (reduce (fn [acc n]\n                                                    (if (is-ui-query-fragment? (:dispatch-key n))\n                                                      acc\n                                                      (conj acc (drop-ui-children n))))\n                                            [] (:children ast-node))]\n                             (if (seq children)\n                               (assoc ast-node :children children)\n                               (dissoc ast-node :children))))]\n    (ast->query (drop-ui-children ast))))\n\n(def nf ::not-found)\n\n(defn as-leaf\n  \"Returns data with meta-data marking it as a leaf in the result.\"\n  [data]\n  (if (coll? data)\n    (with-meta data {:fulcro/leaf true})\n    data))\n\n(defn leaf?\n  \"Returns true iff the given data is marked as a leaf in the result (according to the query). Requires pre-marking.\"\n  [data]\n  (or\n    (not (coll? data))\n    (empty? data)\n    (and (coll? data)\n      (-> data meta :fulcro/leaf boolean))))\n\n(defn union->query\n  \"Turn a union query into a query that attempts to encompass all possible things that might be queried\"\n  [union-query]\n  (->> union-query vals flatten set vec))\n\n(defn mark-missing\n  \"Recursively walk the query and response marking anything that was *asked for* in the query but is *not* in the response as missing.\n  The merge process (which happens later in the plumbing) looks for these markers as indicators to remove any existing\n  data in the database (which has provably disappeared).\n\n  The naive approach to data merging (even recursive) would fail to remove such data.\n\n  Returns the result with missing markers in place (which are then used/removed in a later stage).\"\n  [result query]\n  (let [missing-entity {:ui/fetch-state {:fulcro.client.impl.data-fetch/type :not-found}}]\n    (reduce (fn [result element]\n              (let [element      (cond\n                                   (list? element) (first element)\n                                   :else element)\n                    result-key   (cond\n                                   (keyword? element) element\n                                   (util/join? element) (util/join-key element)\n                                   :else nil)\n                    result-value (get result result-key)]\n                (cond\n                  (or (and (util/ident? result-key) (= '_ (second result-key)))\n                    (and (util/ident? element) (= '_ (second element))))\n                  result\n\n                  (is-ui-query-fragment? result-key)\n                  result\n\n                  ; plain missing prop\n                  (and (keyword? element) (nil? (get result element)))\n                  (assoc result element ::not-found)\n\n                  ; recursion\n                  (and (util/join? element) (or (number? (util/join-value element)) (= '... (util/join-value element))))\n                  (let [k       (util/join-key element)\n                        result' (get result k)]\n                    (cond\n                      (nil? result') (assoc result k ::not-found) ; TODO: Is this right? Or, should it just be `result`?\n                      (vector? result') (assoc result k (mapv (fn [item] (mark-missing item query)) result'))\n                      :otherwise (assoc result k (mark-missing result' query))))\n\n                  ; pure ident query\n                  (and (util/ident? element) (nil? (get result element)))\n                  (assoc result element missing-entity)\n\n                  ; union (a join with a map as a target query)\n                  (util/union? element)\n                  (let [v          (get result result-key ::not-found)\n                        to-one?    (map? v)\n                        to-many?   (vector? v)\n                        wide-query (union->query (util/join-value element))]\n                    (cond\n                      to-one? (assoc result result-key (mark-missing v wide-query))\n                      to-many? (assoc result result-key (mapv (fn [i] (mark-missing i wide-query)) v))\n                      (= ::not-found v) (assoc result result-key ::not-found)\n                      :else result))\n\n                  ; ident-based join to nothing (removing table entries)\n                  (and (util/join? element) (util/ident? (util/join-key element)) (nil? (get result (util/join-key element))))\n                  (let [mock-missing-object (mark-missing {} (util/join-value element))]\n                    (assoc result (util/join-key element) (merge mock-missing-object missing-entity)))\n\n                  ; join to nothing\n                  (and (util/join? element) (= ::not-found (get result (util/join-key element) ::not-found)))\n                  (assoc result (util/join-key element) ::not-found)\n\n                  ; to-many join\n                  (and (util/join? element) (vector? (get result (util/join-key element))))\n                  (assoc result (util/join-key element) (mapv (fn [item] (mark-missing item (util/join-value element))) (get result (util/join-key element))))\n\n                  ; to-one join\n                  (and (util/join? element) (map? (get result (util/join-key element))))\n                  (assoc result (util/join-key element) (mark-missing (get result (util/join-key element)) (util/join-value element)))\n\n                  ; join, but with a broken result (scalar instead of a map or vector)\n                  (and (util/join? element) (vector? (util/join-value element)) (not (or (map? result-value) (vector? result-value))))\n                  (assoc result result-key (mark-missing {} (util/join-value element)))\n\n                  ; prop we found, but not a further join...mark it as a leaf so sweep can stop early on it\n                  result-key\n                  (update result result-key as-leaf)\n\n                  :else result))) result query)))\n\n(defn sweep-one \"Remove not-found keys from m (non-recursive)\" [m]\n  (cond\n    (map? m) (reduce (fn [acc [k v]]\n                       (if (or (= ::not-found k) (= ::not-found v) (= ::tempids k) (= :tempids k))\n                         acc\n                         (assoc acc k v)))\n               (with-meta {} (meta m)) m)\n    (vector? m) (with-meta (mapv sweep-one m) (meta m))\n    :else m))\n\n(defn sweep \"Remove all of the not-found keys (recursively) from v, stopping at marked leaves (if present)\"\n  [m]\n  (cond\n    (leaf? m) (sweep-one m)\n    (map? m) (reduce (fn [acc [k v]]\n                       (cond\n                         (or (= ::not-found k) (= ::not-found v) (= ::tempids k) (= :tempids k)) acc\n                         (and (util/ident? v) (= ::not-found (second v))) acc\n                         :otherwise (assoc acc k (sweep v))))\n               (with-meta {} (meta m))\n               m)\n    (vector? m) (with-meta (mapv sweep m) (meta m))\n    :else m))\n\n(defn sweep-merge\n  \"Do a recursive merge of source into target, but remove any target data that is marked as missing in the response. The\n  missing marker is generated in the source when something has been asked for in the query, but had no value in the\n  response. This allows us to correctly remove 'empty' data from the database without accidentally removing something\n  that may still exist on the server (in truth we don't know its status, since it wasn't asked for, but we leave\n  it as our 'best guess')\"\n  [target source]\n  (reduce\n    (fn [acc [key new-value]]\n      (let [existing-value (get acc key)]\n        (cond\n          (or (= key ::tempids) (= key :tempids) (= key ::not-found)) acc\n          (= new-value ::not-found) (dissoc acc key)\n          (and (util/ident? new-value) (= ::not-found (second new-value))) acc\n          (leaf? new-value) (assoc acc key (sweep-one new-value))\n          (and (map? existing-value) (map? new-value)) (update acc key sweep-merge new-value)\n          :else (assoc acc key (sweep new-value)))))\n    target\n    source))\n\n(defn merge-handler\n  \"Handle merging incoming data, but be sure to sweep it of values that are marked missing. Also triggers the given mutation-merge\n  if available.\"\n  [mutation-merge target source]\n  (let [source-to-merge (->> source\n                          (filter (fn [[k _]] (not (symbol? k))))\n                          (into {}))\n        merged-state    (sweep-merge target source-to-merge)]\n    (reduce (fn [acc [k v]]\n              (if (and mutation-merge (symbol? k))\n                (if-let [updated-state (mutation-merge acc k (dissoc v :tempids ::tempids))]\n                  updated-state\n                  (do\n                    (log/info \"Return value handler for\" k \"returned nil. Ignored.\")\n                    acc))\n                acc)) merged-state source)))\n\n(defn merge-mutation-joins\n  \"Merge all of the mutations that were joined with a query\"\n  [state query data-tree]\n  (if (map? data-tree)\n    (reduce (fn [updated-state query-element]\n              (let [k       (and (util/mutation-join? query-element) (util/join-key query-element))\n                    subtree (get data-tree k)]\n                (if (and k subtree)\n                  (let [subquery         (util/join-value query-element)\n                        target           (-> (meta subquery) :fulcro.client.impl.data-fetch/target)\n                        idnt             ::temporary-key\n                        norm-query       [{idnt subquery}]\n                        norm-tree        {idnt subtree}\n                        norm-tree-marked (mark-missing norm-tree norm-query)\n                        db               (tree->db norm-query norm-tree-marked true)]\n                    (cond-> (sweep-merge updated-state db)\n                      target (targeting/process-target idnt target)\n                      (not target) (dissoc db idnt)))\n                  updated-state))) state query)\n    state))\n\n(defn- merge-idents [tree config refs query]\n  (let [{:keys [merge-ident indexer]} config\n        ident-joins (into {} (comp\n                               (map #(cond-> % (seq? %) first))\n                               (filter #(and (util/join? %)\n                                          (util/ident? (util/join-key %)))))\n                      query)]\n    (letfn [(step [tree' [ident props]]\n              (if (:normalize config)\n                (let [c-or-q (or (get ident-joins ident) (ref->any indexer ident))\n                      props' (tree->db c-or-q props)\n                      refs   (meta props')]\n                  ((:merge-tree config)\n                    (merge-ident config tree' ident props') refs))\n                (merge-ident config tree' ident props)))]\n      (reduce step tree refs))))\n\n(defn- merge-novelty\n  ([reconciler state-map result-tree query tempids]\n   (let [state (if-let [migrate (-> reconciler :config :migrate)]\n                 (let [root-component (app-root reconciler)\n                       root-query     (when-not query (get-query root-component state-map))]\n                   (migrate state-map (or query root-query) tempids))\n                 state-map)]\n     (merge-novelty reconciler state result-tree query)))\n  ([reconciler state-map result-tree query]\n   (let [config            (:config reconciler)\n         [idts result-tree] (sift-idents result-tree)\n         normalized-result (if (:normalize config)\n                             (tree->db\n                               (or query (:root @(:state reconciler)))\n                               result-tree true)\n                             result-tree)]\n     (-> state-map\n       (merge-mutation-joins query result-tree)\n       (merge-idents config idts query)\n       ((:merge-tree config) normalized-result)))))\n\n(defn get-tempids [m] (or (get m :tempids) (get m ::tempids)))\n\n(defn merge*\n  \"Internal implementation of merge. Given a reconciler, state (map), result, and query returns a map of the:\n\n  `:keys` to refresh\n  `:next` state\n  and `::tempids` that need to be migrated\"\n  [reconciler state res query]\n  (let [tempids (->> (filter (comp symbol? first) res)\n                  (map (comp get-tempids second))\n                  (reduce merge {}))]\n    {:keys     (into [] (remove symbol?) (keys res))\n     :next     (merge-novelty reconciler state res query tempids)\n     ::tempids tempids}))\n\n(defn merge!\n  \"Merge an arbitrary data-tree that conforms to the shape of the given query.\n\n  query - A query, derived from defui components, that can be used to normalized a tree of data.\n  data-tree - A tree of data that matches the nested shape of query\n  remote - No longer used. May be passed, but is ignored.\"\n  ([reconciler data-tree]\n   (merge! reconciler data-tree nil))\n  ([reconciler data-tree query]\n   (merge! reconciler data-tree query nil))\n  ([reconciler data-tree query remote]\n   (let [tx `[(fulcro.client.mutations/merge! ~{:data-tree data-tree :query query :remote remote})]]\n     (transact! reconciler tx))))\n\n(defn build-prop->class-index!\n  \"Build an index from property to class using the (annotated) query.\"\n  [prop->classes query]\n  (prewalk (fn index-walk-helper [ele]\n             (when-let [component (some-> ele meta :component)]\n               (let [ks (gather-keys ele)]\n                 (doseq [k ks]\n                   (swap! prop->classes update k (fnil conj #{}) component))))\n             ele) query))\n\n(defrecord Indexer [indexes]\n  #?(:clj  clojure.lang.IDeref\n     :cljs IDeref)\n  #?(:clj  (deref [_] @indexes)\n     :cljs (-deref [_] @indexes))\n\n  p/IIndexer\n  (indexes [this] (:indexes this))\n  (index-root [this root-class]\n    (assert (:state this) \"State map is in `this` for indexing root\")\n    (let [prop->classes (atom {})\n          state-map     (get this :state)\n          rootq         (get-query (factory root-class nil) state-map)]\n      (build-prop->class-index! prop->classes rootq)\n      (swap! indexes merge {:prop->classes @prop->classes})))\n\n  (index-component! [_ c]\n    (swap! indexes\n      (fn component-indexer [indexes]\n        (let [indexes (update-in indexes\n                        [:class->components (react-type c)]\n                        (fnil conj #{}) c)\n              ident   (when #?(:clj  (satisfies? Ident c)\n                               :cljs (implements? Ident c))\n                        (let [ident (ident c (props c))]\n                          (when-not (util/ident? ident)\n                            (log/info\n                              \"malformed Ident. An ident must be a vector of \"\n                              \"two elements (a keyword and an EDN value). Check \"\n                              \"the Ident implementation of component `\"\n                              (.. c -constructor -displayName) \"`.\"))\n                          (when-not (some? (second ident))\n                            (log/info\n                              (str \"component \" (.. c -constructor -displayName)\n                                \"'s ident (\" ident \") has a `nil` second element.\"\n                                \" This warning can be safely ignored if that is intended.\")))\n                          ident))]\n          (if-not (nil? ident)\n            (cond-> indexes\n              ident (update-in [:ref->components ident] (fnil conj #{}) c))\n            indexes)))))\n\n  (drop-component! [_ c]\n    (swap! indexes\n      (fn drop-component-helper [indexes]\n        (let [indexes (update-in indexes [:class->components (react-type c)] disj c)\n              ident   (when #?(:clj  (satisfies? Ident c)\n                               :cljs (implements? Ident c))\n                        (ident c (props c)))]\n          (if-not (nil? ident)\n            (cond-> indexes\n              ident (update-in [:ref->components ident] disj c))\n            indexes)))))\n\n  (key->components [_ k]\n    (let [indexes @indexes]\n      (if (component? k)\n        #{k}\n        (transduce (map #(get-in indexes [:class->components %]))\n          (completing into)\n          (get-in indexes [:ref->components k] #{})\n          (get-in indexes [:prop->classes k]))))))\n\n\n(defn- to-env [x]\n  (let [config (if (reconciler? x) (:config x) x)]\n    (select-keys config [:state :shared :parser])))\n\n(defn gather-sends\n  \"Given an environment, a query and a set of remotes return a hash map of remotes\n   mapped to the query specific to that remote.\"\n  [{:keys [parser] :as env} q remotes tx-time]\n  (into {}\n    (comp\n      (map #(vector % (some-> (parser env q %) (vary-meta assoc ::hist/tx-time tx-time))))\n      (filter (fn [[_ v]] (pos? (count v)))))\n    remotes))\n\n(defn schedule-sends! [reconciler]\n  (when (p/schedule-sends! reconciler)\n    #?(:clj  (p/send! reconciler)\n       :cljs (js/setTimeout #(p/send! reconciler) 0))))\n\n#?(:cljs\n   (defn- queue-render! [f]\n     (cond\n       (fn? *raf*) (*raf* f)\n\n       (not (exists? js/requestAnimationFrame))\n       (js/setTimeout f 16)\n\n       :else\n       (js/requestAnimationFrame f))))\n\n#?(:cljs\n   (defn schedule-render! [reconciler]\n     (when (p/schedule-render! reconciler)\n       (queue-render! #(p/reconcile! reconciler)))))\n\n(defn mounted?\n  \"Returns true if the component is mounted.\"\n  #?(:cljs {:tag boolean})\n  [x]\n  #?(:clj  (and (component? x) @(get-raw-react-prop x :fulcro$mounted?))\n     :cljs (and (component? x) ^boolean (boolean (goog.object/get x \"fulcro$mounted\")))))\n\n(defn fulcro-ui->props\n  \"Finds props for a given component. Returns ::no-ident if the component has\n  no ident (which prevents localized update). This eliminates the need for\n  path data.\"\n  [{:keys [parser state] :as env} c]\n  (let [ui (when #?(:clj  (satisfies? Ident c)\n                    :cljs (implements? Ident c))\n             (let [id          (ident c (props c))\n                   has-tempid? (tempid? (second id))\n                   query       [{id (get-query c @state)}]\n                   data-path   (-> (props c) meta ::parser/data-path)\n                   result      (parser (assoc env :replacement-root-path data-path) query)\n                   value       (get result id)]\n               (if (and has-tempid? (or (nil? value) (empty? value)))\n                 ::no-ident                                 ; tempid remap happened...cannot do targeted props until full re-render\n                 value)))]\n    (or ui ::no-ident)))\n\n(defn computed\n  \"Add computed properties to props. Note will replace any pre-existing\n   computed properties.\"\n  [props computed-map]\n  (when-not (nil? props)\n    (if (vector? props)\n      (cond-> props\n        (not (empty? computed-map)) (vary-meta assoc :fulcro.client.primitives/computed computed-map))\n      (cond-> props\n        (not (empty? computed-map)) (assoc :fulcro.client.primitives/computed computed-map)))))\n\n(defn get-computed\n  \"Return the computed properties on a component or its props.\"\n  ([x]\n   (get-computed x []))\n  ([x k-or-ks]\n   (when-not (nil? x)\n     (let [props (cond-> x (component? x) props)\n           ks    (into [:fulcro.client.primitives/computed]\n                   (cond-> k-or-ks\n                     (not (sequential? k-or-ks)) vector))]\n       (if (vector? props)\n         (-> props meta (get-in ks))\n         (get-in props ks))))))\n\n(defn children\n  \"Returns the component's children.\"\n  [component]\n  (let [cs #?(:clj (:children component)\n              :cljs (.. component -props -children))]\n    (if (or (coll? cs) #?(:cljs (array? cs))) cs [cs])))\n\n#?(:cljs\n   (defn force-update\n     \"An exception-protected React .forceUpdate\"\n     ([c cb]\n      (try\n        (.forceUpdate c cb)\n        (catch :default e\n          (log/error \"Component\" c \"threw an exception while rendering \")\n          (when goog.DEBUG\n            (js/console.error e)))))\n     ([c]\n      (force-update c nil))))\n\n(defn dedup-components-by-path\n  \"Remove components from the given list by removing those whose paths are encompassed by others. In other words,\n   remove components from the list when there is a parent of that component also in the list.\"\n  [components]\n  (let [get-path     #(some-> % props meta ::parser/data-path)\n        sorted-comps (sort-by get-path components)]\n    (reduce (fn [acc c]\n              (let [last-component (last acc)\n                    prev-path      (get-path last-component)\n                    path           (get-path c)\n                    path-prefix    (take (count prev-path) path)]\n                (if (or (= last-component c) (and prev-path (= prev-path path-prefix)))\n                  acc\n                  (conj acc c))))\n      [] sorted-comps)))\n\n(declare class->any)\n\n(defn- optimal-render\n  \"Run an optimal render of the given `refresh-queue` (a list of idents and data query keywords). This function attempts\n   to refresh the minimum number of components according to the UI depth and state. If it cannot do targeted updates then\n   it will call `render-root` to render the entire UI. Other optimizations may apply in render-root.\"\n  [reconciler refresh-queue render-root]\n  (let [reconciler-state       (:state reconciler)\n        {:keys [root render-props]} @reconciler-state\n        root                   (if (component? root) root (class->any reconciler root))\n        config                 (:config reconciler)\n        queued-components      (transduce\n                                 (map #(p/key->components (:indexer config) %))\n                                 #(into %1 %2) #{} refresh-queue)\n        mounted-components     (filter mounted? queued-components)\n        data-path              (fn [c] (some-> c props meta ::parser/data-path))\n        parent-with-path       (fn pwp [c]\n                                 (loop [p (parent c)]\n                                   (cond\n                                     (and p (data-path p)) p\n                                     p (recur (parent p))\n                                     :else root)))\n        refreshable-components (reduce\n                                 (fn [result c]\n                                   (if (data-path c)\n                                     (conj result c)\n                                     (conj result (parent-with-path c))))\n                                 []\n                                 mounted-components)\n        env                    (assoc (to-env config) :reconciler reconciler)]\n    #?(:cljs\n       (when root\n         (let [old-tree     (props root)\n               components   (dedup-components-by-path refreshable-components)\n               updated-tree (reduce\n                              (fn [tree c]\n                                (let [component-props (props c)\n                                      computed        (get-computed component-props)\n                                      target-path     (data-path c)\n                                      next-raw-props  (fulcro-ui->props env c)\n                                      force-root?     (or (not target-path) (= ::no-ident next-raw-props)) ; can't do optimized query\n                                      next-props      (when-not force-root? (fulcro.client.primitives/computed next-raw-props computed))]\n                                  (if force-root?\n                                    (do\n                                      (when (not target-path)\n                                        (log/warn \"Optimal render skipping optimizations because component does not have a target path\" c))\n                                      (reduced nil))\n                                    (let []\n                                      (assoc-in tree target-path next-props)))))\n                              old-tree\n                              components)]\n           (if updated-tree\n             (render-props updated-tree)\n             (let [start (inst-ms (js/Date.))\n                   _     (render-root)\n                   end   (inst-ms (js/Date.))]\n               (if (> (- end start) 20) (log/warn \"Root render took \" (- end start) \"ms\")))))))))\n\n(defrecord Reconciler [config state history]\n  #?(:clj  clojure.lang.IDeref\n     :cljs IDeref)\n  #?(:clj  (deref [this] @(:state config))\n     :cljs (-deref [_] @(:state config)))\n\n  p/IReconciler\n  (tick! [_] (swap! state update :t inc))\n  (get-id [_] (:id @state))\n  (basis-t [_] (:t @state))\n  (get-history [_] history)\n\n  (add-root! [this root-class target options]\n    (let [ret   (atom nil)\n          rctor (factory root-class)\n          guid  (or (p/get-id this) (util/unique-key))]\n      (when-not (p/get-id this)\n        (swap! state assoc :id guid))\n      (when (has-query? root-class)\n        (p/index-root (assoc (:indexer config) :state (-> config :state deref)) root-class))\n      (when (and (:normalize config)\n              (not (:normalized @state)))\n        (let [new-state (tree->db root-class @(:state config))\n              refs      (meta new-state)]\n          (reset! (:state config) (merge new-state refs))\n          (swap! state assoc :normalized true)))\n      (let [renderf (fn render-fn [data]\n                      (binding [*reconciler* this\n                                *shared*     (merge\n                                               (:shared config)\n                                               (when (:shared-fn config)\n                                                 ((:shared-fn config) data)))\n                                *instrument* (:instrument config)]\n                        (let [c (cond\n                                  #?@(:cljs [(not (nil? target)) ((:root-render config) (rctor data) target)])\n                                  (nil? @ret) (rctor data)\n                                  :else (when-let [c' @ret]\n                                          #?(:clj  (do\n                                                     (reset! ret nil)\n                                                     (rctor data))\n                                             :cljs (when (mounted? c')\n                                                     (force-update c' data)))))]\n                          (when (and (nil? @ret) (not (nil? c)))\n                            (swap! state assoc :root c)\n                            (reset! ret c)))))\n            parsef  (fn parse-fn []\n                      (let [root-query (get-query rctor (-> config :state deref))]\n                        (assert (or (nil? root-query) (vector? root-query)) \"Application root query must be a vector\")\n                        (if-not (nil? root-query)\n                          (let [env        (to-env config)\n                                root-props ((:parser config) env root-query)]\n                            (when (empty? root-props)\n                              (log/warn \"WARNING: Root props were empty. Your root query returned no data!\"))\n                            (renderf root-props))\n                          (renderf @(:state config)))))]\n        (swap! state merge\n          {:target target :render parsef :root root-class :render-props renderf\n           :remove (fn remove-fn []\n                     (remove-watch (:state config) (p/get-id this))\n                     (swap! state\n                       #(-> %\n                          (dissoc :target) (dissoc :render) (dissoc :root)\n                          (dissoc :remove)))\n                     (when-not (nil? target)\n                       ((:root-unmount config) target)))})\n        (add-watch (:state config) (p/get-id this)\n          (fn add-fn [_ _ _ _]\n            #?(:cljs\n               (if-not (has-query? root-class)\n                 (queue-render! parsef)\n                 (do\n                   (p/tick! this)\n                   (schedule-render! this))))))\n        (parsef)\n        @ret)))\n\n  (remove-root! [_ target]\n    (when-let [remove (:remove @state)]\n      (remove)))\n\n  (reindex! [this]\n    (let [root       (get @state :root)\n          root-class (react-type root)]\n      (when (has-query? root)\n        (let [indexer (:indexer config)]\n          (p/index-root (assoc indexer :state (-> config :state deref)) root-class)))))\n\n  (queue! [this ks]\n    (p/queue! this ks nil))\n  (queue! [_ ks remote]\n    (if-not (nil? remote)\n      (swap! state update-in [:remote-queue remote] into ks)\n      (swap! state update-in [:queue] into ks)))\n\n  (queue-sends! [_ sends]\n    (swap! state update-in [:queued-sends]\n      (:merge-sends config) sends))\n\n  (schedule-render! [_]\n    (if-not (:queued @state)\n      (do\n        (swap! state assoc :queued true)\n        true)\n      false))\n\n  (schedule-sends! [_]\n    (if-not (:sends-queued @state)\n      (do\n        (swap! state assoc :sends-queued true)\n        true)\n      false))\n\n  (reconcile! [this]\n    (p/reconcile! this nil))\n  (reconcile! [this remote]\n    (let [reconciler-state      @state\n          components-to-refresh (if-not (nil? remote)\n                                  (get-in reconciler-state [:remote-queue remote])\n                                  (:queue reconciler-state))\n          render-mode           (:render-mode config)\n          force-root?           (or (empty? components-to-refresh) (contains? #{:keyframe :brutal} render-mode) *blindly-render*)\n          blind-refresh?        (or (contains? #{:brutal} render-mode) *blindly-render*)\n          rendered-root?        (atom false)\n          render-root           (fn []\n                                  (if-let [do-render (:render reconciler-state)]\n                                    (when-not @rendered-root? ; make sure we only render root once per reconcile\n                                      (reset! rendered-root? true)\n                                      (do-render))\n                                    (log/error \"Render skipped. Renderer was nil. Possibly a hot code reload?\")))]\n      ;; IMPORTANT: Unfortunate naming that would require careful refactoring. `state` here is the RECONCILER's state, NOT\n      ;; the application's state. That is in (:state config).\n      (swap! state update-in [:queued] not)\n      (if (not (nil? remote))\n        (swap! state assoc-in [:remote-queue remote] [])\n        (swap! state assoc :queue []))\n      (binding [*blindly-render* blind-refresh?]\n        (if force-root?\n          (render-root)\n          (optimal-render this components-to-refresh render-root)))))\n\n  (send! [this]\n    (let [sends (:queued-sends @state)]\n      (when-not (empty? sends)\n        (swap! state\n          (fn clear-queue-fn [state]\n            (-> state\n              (assoc :queued-sends {})\n              (assoc :sends-queued false))))\n        ((:send config) sends\n          (fn send-cb\n            ([resp]\n             (merge! this resp nil))\n            ([resp query]\n             (merge! this resp query))\n            ([resp query remote]\n             (when-not (nil? remote)\n               (p/queue! this (keys resp) remote))\n             (merge! this resp query remote)\n             (p/reconcile! this remote))))))))\n\n(defn reconciler\n  \"Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :id           - a unique ID that this reconciler will be known as. Used to resolve global variable usage when more than one app is on a page. If\n                     left unspecified it will default to a random UUID.\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired. The callback should take the response as the\n                     first argument and the the query that was sent as the second\n                     argument.\n     :history      - A positive integer. The number of history steps to keep in memory.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :render-mode  - :normal - fastest, and the default. Components with idents can refresh in isolation.\n                               shouldComponentUpdate returns false if state/data are unchanged. Follow-on reads are\n                               required to refresh non-local concerns.\n                     :keyframe - Every data change runs a root-level query and re-renders from root.\n                                 shouldComponentUpdate is the same as :default. Follow-on reads are *not* needed for\n                                 non-local UI refresh.\n                     :brutal - Every data change runs a root-level query, and re-renders from root. shouldComponentUpdate\n                               always returns true, forcing full React diff. Not really useful for anything but benchmarking.\n     :lifecycle    - A function (fn [component event]) that is called when react components either :mount or :unmount. Useful for debugging tools.\n     :tx-listen    - a function of 2 arguments that will listen to transactions.\n                     The first argument is the parser's env map also containing\n                     the old and new state. The second argument is a history-step (see history). It also contains\n                     a couple of legacy fields for bw compatibility with 1.0.\"\n  [{:keys [id state shared shared-fn\n           parser normalize\n           send merge-sends remotes\n           merge-tree merge-ident\n           lifecycle\n           root-render root-unmount\n           migrate render-mode\n           instrument tx-listen\n           history]\n    :or   {merge-sends  #(merge-with into %1 %2)\n           remotes      [:remote]\n           render-mode  :normal\n           history      200\n           lifecycle    nil\n           root-render  #?(:clj  (fn clj-root-render [c target] c)\n                           :cljs #(js/ReactDOM.render %1 %2))\n           root-unmount #?(:clj  (fn clj-unmount [x])\n                           :cljs #(js/ReactDOM.unmountComponentAtNode %))}\n    :as   config}]\n  {:pre [(map? config)]}\n  (let [idxr          (map->Indexer {:indexes (atom {})})\n        norm? #?(:clj (instance? clojure.lang.Atom state)\n                 :cljs (satisfies? IAtom state))\n        state'        (if norm? state (atom state))\n        ret           (Reconciler.\n                        {:state       state' :shared shared :shared-fn shared-fn\n                         :parser      parser :indexer idxr\n                         :send        send :merge-sends merge-sends :remotes remotes\n                         :merge-tree  merge-tree :merge-ident merge-ident\n                         :normalize   (or (not norm?) normalize)\n                         :root-render root-render :root-unmount root-unmount\n                         :render-mode render-mode\n                         :pathopt     true\n                         :migrate     migrate\n                         :lifecycle   lifecycle\n                         :instrument  instrument :tx-listen tx-listen}\n                        (atom {:queue        []\n                               :remote-queue {}\n                               :id           id\n                               :queued       false :queued-sends {}\n                               :sends-queued false\n                               :target       nil :root nil :render nil :remove nil\n                               :t            0 :normalized norm?})\n                        (atom (hist/new-history history)))]\n    ret))\n\n(defn transact*\n  \"Internal implementation detail of transact!. Call that function instead.\"\n  [reconciler c ref tx]\n  (when reconciler\n    (p/tick! reconciler)                                    ; ensure time moves forward. A tx that doesn't swap would fail to do so\n    (let [cfg                (:config reconciler)\n          ref                (if (and c #?(:clj  (satisfies? Ident c)\n                                           :cljs (implements? Ident c)) (not ref))\n                               (ident c (props c))\n                               ref)\n          env                (merge\n                               (to-env cfg)\n                               {:reconciler reconciler :component c}\n                               (when ref\n                                 {:ref ref}))\n          old-state          @(:state cfg)\n          history            (get-history reconciler)\n          v                  ((:parser cfg) env tx)\n          declared-refreshes (or (some-> v meta ::refresh vec) [])\n          follow-on-reads    (concat declared-refreshes (filter keyword? tx))\n          tx-time            (get-current-time reconciler)\n          snds               (gather-sends env tx (:remotes cfg) tx-time)\n          new-state          @(:state cfg)\n          xs                 (cond-> follow-on-reads\n                               (not (nil? c)) (conj c)\n                               (not (nil? ref)) (conj ref))\n          history-step       {::hist/tx            tx\n                              ::hist/client-time   #?(:cljs (js/Date.) :clj (java.util.Date.))\n                              ::hist/network-sends snds\n                              ::hist/db-before     old-state\n                              ::hist/db-after      new-state}]\n      ; TODO: transact! should have access to some kind of UI hook on the reconciler that user's install to block UI when history is too full (due to network queue)\n      (when history\n        (swap! history hist/record-history-step tx-time history-step))\n      (p/queue! reconciler (into xs (remove symbol?) (keys v)))\n      (when-not (empty? snds)\n        (doseq [[remote _] snds]\n          (p/queue! reconciler xs remote))\n        (p/queue-sends! reconciler snds)\n        (schedule-sends! reconciler))\n      (when-let [f (:tx-listen cfg)]\n        (let [tx-data (merge env\n                        {:old-state old-state\n                         :new-state new-state})]\n          (f tx-data (assoc history-step :tx tx :ret v))))\n      v)))\n\n(defn annotate-mutations\n  \"Given a query expression annotate all mutations by adding a :mutator -> ident\n   entry to the metadata of each mutation expression in the query.\"\n  [tx ident]\n  (letfn [(annotate [expr ident]\n            (cond-> expr\n              (util/mutation? expr) (vary-meta assoc :mutator ident)))]\n    (with-meta\n      (into [] (map #(annotate % ident)) tx)\n      (meta tx))))\n\n(defn transact!\n  \"Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering.\n\n   Example:\n\n     (transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])\n\n    NOTE: transact! is not safe to call from within mutations unless you defer it inside of a setTimeout. This is\n    because otherwise you could potentially nest calls of swap! that will cause unexpected results. In general it\n    the model of Fulcro is such that a call transact! within a mutation is technically just bad design. If you\n    need pessimistic UI control, see ptransact! instead.\"\n  ([x tx]\n   {:pre [(or (component? x)\n            (reconciler? x))\n          (vector? tx)]}\n   (let [tx (cond-> tx\n              (and (component? x) (satisfies? Ident x))\n              (annotate-mutations (get-ident x)))]\n     (cond\n       (reconciler? x) (transact* x nil nil tx)\n       (not (some-hasquery? x)) (do\n                                  (log/error\n                                    (str \"transact! should be called on a component\"\n                                      \"that implements IQuery or has a parent that\"\n                                      \"implements IQuery\"))\n                                  (transact* (get-reconciler x) nil nil tx))\n       :else (do\n               (loop [p (parent x) x x tx tx]\n                 (if (nil? p)\n                   (let [r (get-reconciler x)]\n                     (transact* r x nil tx))\n                   (let [[x' tx] (if #?(:clj  (satisfies? p/ITxIntercept p)\n                                        :cljs (implements? p/ITxIntercept p))\n                                   [p (p/tx-intercept p tx)]\n                                   [x tx])]\n                     (recur (parent p) x' tx))))))))\n  ([r ref tx]\n   (transact* r nil ref tx)))\n\n(defn compressible-transact!\n  \"Identical to `transact!`, but marks the history edge as compressible. This means that if more than one\n  adjacent history transition edge is compressible, only the more recent of the sequence of them is kept. This\n  is useful for things like form input fields, where storing every keystoke in history is undesirable.\n\n  NOTE: history events that trigger remote interactions are not compressible, since they may be needed for\n  automatic network error recovery handling..\"\n  [comp-or-reconciler tx]\n  (transact! comp-or-reconciler (hist/compressible-tx tx)))\n\n#?(:clj\n   (defn set-state!\n     ([component new-state cb]\n      (reset! (:state component) new-state)\n      (when cb (cb)))\n     ([component new-state]\n      (reset! (:state component) new-state))))\n\n#?(:cljs\n   (defn set-state!\n     \"Shallow merge new-state into the state of this component. This is asynchronous and will NOT be reflected by\n     `get-state` immediately, since the underlying React setState and will trigger an refresh\n     according to React rules (see React dos for the version you're using).\n\n     This function manages a cljs map within React props, and does the shallow merge by key, so setting state:\n\n     {:x 1}\n\n     against an existing state of {:y 2} will yield:\n\n     {:x 1 :y 2}\n\n     The callback is as described in the React docs (it is invoked after the state is updated).\n\n     If you want to control the update function itself, use `update-state!`.\n\n     If you're wanting low-level js interop to affect low-level js props: use React's `setState`.\"\n     ([component new-state callback]\n      {:pre [(component? component)]}\n      (.setState component\n        (fn [prev-state props]\n          #js {\"fulcro$state\" (merge (gobj/get prev-state \"fulcro$state\") new-state)})\n        callback))\n     ([component new-state]\n      {:pre [(component? component)]}\n      (set-state! component new-state nil))))\n\n(defn react-set-state!\n  \"DEPRECATED: Use set-state! which *is* a React-level primitive now.\"\n  ([component new-state]\n   (react-set-state! component new-state nil))\n  ([component new-state cb]\n   (set-state! component new-state cb)))\n\n(let [update-fn (fn [component f args]\n                  #?(:cljs (.setState component\n                             (fn [prev-state props]\n                               #js {\"fulcro$state\" (apply f (gobj/get prev-state \"fulcro$state\") args)}))))]\n  (defn update-state!\n    \"Update a component's local state. Similar to Clojure(Script)'s swap!\n\n    This function affects a managed cljs map maintained in React state.  If you want to affect the low-level\n    js state itself use React's own `.setState` on the component.\"\n    ([component f]\n     (update-fn component f []))\n    ([component f & args]\n     (update-fn component f args))))\n\n(defn app-state\n  \"Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data.\"\n  [reconciler]\n  {:pre [(reconciler? reconciler)]}\n  (-> reconciler :config :state))\n\n(defn component->state-map\n  \"Get the normalized database state as a map. Requires a mounted component instance.\"\n  [component]\n  (some-> component get-reconciler :config :state deref))\n\n(defn app-root\n  \"Return the application's root component.\"\n  [reconciler]\n  {:pre [(reconciler? reconciler)]}\n  (get @(:state reconciler) :root))\n\n(defn query->ast\n  \"Given a query expression convert it into an AST.\"\n  [query-expr]\n  (parser/query->ast query-expr))\n\n(defn query->ast1\n  \"Call query->ast and return the first children.\"\n  [query-expr]\n  (-> (query->ast query-expr) :children first))\n\n(defn ast->query [query-ast]\n  \"Given an AST convert it back into a query expression.\"\n  (parser/ast->expr query-ast true))\n\n(defn force-root-render!\n  \"Force a re-render of the root. Runs a root query, disables shouldComponentUpdate, and renders the root component.\n   This effectively forces React to do a full VDOM diff. Useful for things like changing locales where there are no\n   real data changes, but the UI still needs to refresh.\n   recomputing :shared.\"\n  [reconciler]\n  {:pre [(reconciler? reconciler)]}\n  (when-let [render (get @(:state reconciler) :render)]     ; hot code reload can cause this to be nil\n    (binding [*blindly-render* true]\n      (render))))\n\n(defn tempid\n  \"Return a temporary id.\"\n  ([] (tempid/tempid))\n  ([id] (tempid/tempid id)))\n\n(defn tempid?\n  \"Return true if x is a tempid, false otherwise\"\n  #?(:cljs {:tag boolean})\n  [x]\n  (tempid/tempid? x))\n\n#?(:cljs\n   (defn reader\n     \"Create a transit reader. This reader can handler the tempid type.\n      Can pass transit reader customization opts map.\"\n     ([] (transit/reader))\n     ([opts] (transit/reader opts)))\n   :clj\n   (defn reader\n     \"Create a transit reader. This reader can handler the tempid type.\n      Can pass transit reader customization opts map.\"\n     ([in] (transit/reader in))\n     ([in opts] (transit/reader in opts))))\n\n(defn writer\n  \"Create a transit writer. This writer can handler the tempid type.\n   Can pass transit writer customization opts map.\"\n  ([] (transit/writer))\n  ([opts] (transit/writer opts)))\n\n(defn dispatch\n  \"Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn.\"\n  [_ key _] key)\n\n(defn parser\n  \"Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult).\n\n   The mutation functions return a map keyed by:\n\n   `:action` - The lambda to run to do the local optimistic version of that mutation\n   any-keyword-matching-a-remote - A boolean true or AST expression of the thing to run on the named remote.\n   :refresh - A vector of namespaced keywords of data that was/will be changed by this mutation\n\n   When the parser runs on mutations it collects the `:refresh` list into the metadata of the results\n   under the :fulcro.client.primitives/refresh key.\"\n  [{:keys [read mutate] :as opts}]\n  {:pre [(map? opts)]}\n  (parser/parser opts))\n\n(defn add-root!\n  \"Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one.\"\n  ([reconciler root-class target]\n   (add-root! reconciler root-class target nil))\n  ([reconciler root-class target options]\n   {:pre [(reconciler? reconciler) (fn? root-class)]}\n   (when-let [old-reconciler (get @roots target)]\n     (remove-root! old-reconciler target))\n   (swap! roots assoc target reconciler)\n   (p/add-root! reconciler root-class target options)))\n\n(defn remove-root!\n  \"Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root.\"\n  [reconciler target]\n  (p/remove-root! reconciler target))\n\n(defn shared\n  \"Return the global shared properties of the root. See :shared and\n   :shared-fn reconciler options.\"\n  ([component]\n   (shared component []))\n  ([component k-or-ks]\n   {:pre [(component? component)]}\n   (let [shared #?(:clj (get-raw-react-prop component :fulcro$shared)\n                   :cljs (gobj/get (. component -props) \"fulcro$shared\"))\n         ks             (cond-> k-or-ks\n                          (not (sequential? k-or-ks)) vector)]\n     (cond-> shared\n       (not (empty? ks)) (get-in ks)))))\n\n(defn instrument [component]\n  {:pre [(component? component)]}\n  (get-raw-react-prop component #?(:clj  :fulcro$instrument\n                                   :cljs \"fulcro$instrument\")))\n\n#?(:cljs\n   (defn- merge-pending-state! [c]\n     (when-let [pending (some-> c .-state (gobj/get \"fulcro$pendingState\"))]\n       (let [state    (.-state c)\n             previous (gobj/get state \"fulcro$state\")]\n         (gobj/remove state \"fulcro$pendingState\")\n         (gobj/set state \"fulcro$previousState\" previous)\n         (gobj/set state \"fulcro$state\" pending)))))\n\n(defn class->any\n  \"Get any component from the indexer that matches the component class.\"\n  [x class]\n  (let [indexer (if (reconciler? x) (get-indexer x) x)]\n    (first (get-in @indexer [:class->components class]))))\n\n(defn class->all\n  \"Get any component from the indexer that matches the component class.\"\n  [x class]\n  (let [indexer (if (reconciler? x) (get-indexer x) x)]\n    (get-in @indexer [:class->components class])))\n\n(defn ref->components\n  \"Return all components for a given ref.\"\n  [x ref]\n  (when-not (nil? ref)\n    (let [indexer (if (reconciler? x) (get-indexer x) x)]\n      (p/key->components indexer ref))))\n\n(defn get-rendered-state\n  \"Get the rendered state of component. fulcro.client.primitives/get-state always returns the\n   up-to-date state.\"\n  ([component]\n   (get-rendered-state component []))\n  ([component k-or-ks]\n   {:pre [(component? component)]}\n   (let [cst #?(:clj (get-state component)\n                :cljs (some-> component .-state (gobj/get \"fulcro$state\")))]\n     (get-in cst (if (sequential? k-or-ks) k-or-ks [k-or-ks])))))\n\n(defn nil-or-map?\n  #?(:cljs {:tag boolean})\n  [x]\n  (or (nil? x) (map? x)))\n\n(defn react-ref\n  \"Returns the component associated with a component's React ref.\"\n  [component name]\n  #?(:clj  (some-> @(:refs component) (get name))\n     :cljs (some-> (.-refs component) (gobj/get name))))\n\n(defn set-query!\n  \"Set a dynamic query. ALters the query, and then rebuilds internal indexes.\"\n  [component-or-reconciler ui-factory-or-queryid {:keys [query params follow-on-reads] :as opts}]\n  (let [reconciler (if (reconciler? component-or-reconciler)\n                     component-or-reconciler\n                     (get-reconciler component-or-reconciler))\n        queryid    (cond\n                     (string? ui-factory-or-queryid) ui-factory-or-queryid\n                     (some-> ui-factory-or-queryid meta (contains? :queryid)) (some-> ui-factory-or-queryid meta :queryid)\n                     :otherwise (query-id ui-factory-or-queryid nil))\n        tx         (into `[(fulcro.client.mutations/set-query! {:queryid ~queryid :query ~query :params ~params})] follow-on-reads)]\n    (if (and (string? queryid) (or query params))\n      (do\n        (transact! reconciler tx)                           ; against reconciler, because we need to re-render from root\n        (p/reindex! reconciler))\n      (log/error \"Unable to set query. Invalid arguments.\"))))\n\n(defn pessimistic-transaction->transaction\n  \"Converts a sequence of calls as if each call should run in sequence (deferring even the optimistic side until\n  the prior calls have completed in a full-stack manner), and returns a tx that can be submitted via the normal\n  `transact!`.\n\n  The options map can contain:\n  `valid-remotes` is a set of remote names in your application. Defaults to `#{:remote}`\n  `env` is a map that is merged into the deferred transaction's `env`\n\n  WARNING: If a mutation tries to interact with more than one simultaneous remote, the current implementation will wait\n  until the *first* one of them completes (selected in a non-deterministic fashion), not all.\"\n  ([tx] (pessimistic-transaction->transaction tx nil))\n  ([tx {:keys [valid-remotes env state-map]\n        :or   {valid-remotes #{:remote} env {} state-map {}}\n        :as   options}]\n   (let [ast-nodes             (:children (query->ast tx))\n         {ast-calls true ast-reads false} (group-by #(= :call (:type %)) ast-nodes)\n         ast-follow-on-reads   (ast->query {:type :root :children ast-reads})\n         remote-for-ast-call   (fn [c] (let [dispatch-key (:dispatch-key c)\n                                             get-remotes  (or (some-> (resolve 'fulcro.client.data-fetch/get-remotes) deref)\n                                                            (fn [state-map sym]\n                                                              (log/error \"FAILED TO FIND get-remotes. CANNOT DERIVE REMOTES FOR ptransact! Assuming :remote\")\n                                                              #{:remote}))\n                                             remotes      (if (= \"fallback\" (name dispatch-key)) ; fallbacks are a special case\n                                                            #{}\n                                                            (get-remotes state-map dispatch-key))]\n                                         (when (seq remotes)\n                                           (first remotes))))\n         is-local?             (fn [c] (not (remote-for-ast-call c)))\n         [ast-local-calls ast-remaining-calls] (split-with is-local? ast-calls)\n         ast-first-remote-call (some-> ast-remaining-calls (first))\n         remote                (some-> ast-first-remote-call remote-for-ast-call)\n         unprocessed-call-asts (vec (rest ast-remaining-calls))\n         [possible-fallback-asts distant-call-asts] (split-with is-local? unprocessed-call-asts)\n         {fallback-asts true following-call-asts false} (group-by #(= \"fallback\" (-> % :dispatch-key (name))) possible-fallback-asts)\n         unprocessed-tx        (ast->query {:type :root :children (concat following-call-asts distant-call-asts)})\n         calls-to-run-now      (keep identity (concat ast-local-calls [ast-first-remote-call] fallback-asts))\n         tx-for-calls          (ast->query {:type :root :children calls-to-run-now})\n         tx-to-run-now         (into tx-for-calls ast-follow-on-reads)\n         tx-to-defer           (into unprocessed-tx ast-follow-on-reads)\n         defer?                (seq unprocessed-call-asts)\n         deferred-params       (when defer?\n                                 (merge (get options :env {})\n                                   {:remote remote :tx (pessimistic-transaction->transaction tx-to-defer options)}))]\n     (if defer?\n       (into tx-to-run-now `[(fulcro.client.data-fetch/deferred-transaction ~deferred-params)])\n       tx-to-run-now))))\n\n(defn ptransact!\n  \"Like `transact!`, but ensures each call completes (in a full-stack, pessimistic manner) before the next call starts\n  in any way. Note that two calls of this function have no guaranteed relationship to each other. They could end up\n  intermingled at runtime. The only guarantee is that for *a single call* to `ptransact!`, the calls in the given tx will run\n  pessimistically (one at a time) in the order given. Follow-on reads in the given transaction will be repeated after each remote\n  interaction.\n\n  `comp-or-reconciler` a mounted component or reconciler\n  `tx` the tx to run\n  `ref` the ident (ref context) in which to run the transaction (including all deferrals)\n\n  NOTE: `ptransact!` *is* safe to use from within mutations (e.g. for retry behavior).\n  WARNINGS: Mutations that interact with more than one remote *at the same time* will only wait for one of the remotes to finish.\n  Also, mutations that just issue loads should *not* be used. This function defers pessimistic *writes*, not reads.\"\n  ([comp-or-reconciler tx]\n   (let [ref (when (and (component? comp-or-reconciler) (has-ident? comp-or-reconciler)) (get-ident comp-or-reconciler))]\n     (ptransact! comp-or-reconciler ref tx)))\n  ([comp-or-reconciler ref tx]\n   (let [reconciler (if (reconciler? comp-or-reconciler) comp-or-reconciler (get-reconciler comp-or-reconciler))\n         state-map  @(app-state reconciler)\n         remotes    (some-> reconciler :config :remotes set)\n         ptx        (pessimistic-transaction->transaction tx (cond-> {:valid-remotes remotes :state-map state-map}\n                                                               ref (assoc :env {:ref ref})))]\n     #?(:clj  (transact! comp-or-reconciler ptx)\n        :cljs (js/setTimeout (fn [] (transact! comp-or-reconciler ptx)) 0)))))\n\n#?(:clj\n   (defn- is-link? [query-element] (and (vector? query-element)\n                                     (keyword? (first query-element))\n                                     ; need the double-quote because when in a macro we'll get the literal quote.\n                                     (#{''_ '_} (second query-element)))))\n\n#?(:clj\n   (defn- legal-keys\n     \"Find the legal keys in a query. NOTE: This is at compile time, so the get-query calls are still embedded (thus cannot\n     use the AST)\"\n     [query]\n     (letfn [(keeper [ele]\n               (cond\n                 (list? ele) (recur (first ele))\n                 (keyword? ele) ele\n                 (is-link? ele) (first ele)\n                 (and (map? ele) (keyword? (ffirst ele))) (ffirst ele)\n                 (and (map? ele) (is-link? (ffirst ele))) (first (ffirst ele))\n                 :else nil))]\n       (set (keep keeper query)))))\n\n#?(:clj\n   (defn- children-by-prop [query]\n     (into {}\n       (keep #(if (and (map? %) (or (is-link? (ffirst %)) (keyword? (ffirst %))))\n                (let [k   (if (vector? (ffirst %))\n                            (first (ffirst %))\n                            (ffirst %))\n                      cls (-> % first second second)]\n                  [k cls])\n                nil) query))))\n\n(defn- replace-and-validate-fn\n  \"Replace the first sym in a list (the function name) with the given symbol.\n\n  sym - The symbol that the lambda should have\n  external-args - A sequence of argmuments that the user should not include, but that you want to be inserted in the external-args by this function.\n  user-arity - The number of external-args the user should supply (resulting user-arity is (count external-args) + user-arity).\n  fn-form - The form to rewrite\n  sym - The symbol to report in the error message (in case the rewrite uses a different target that the user knows).\"\n  ([sym external-args user-arity fn-form] (replace-and-validate-fn sym external-args user-arity fn-form sym))\n  ([sym external-args user-arity fn-form user-known-sym]\n   (when-not (<= user-arity (count (second fn-form)))\n     (throw (ex-info (str \"Invalid arity for \" user-known-sym) {:expected (str user-arity \" or more\") :got (count (second fn-form))})))\n   (let [user-args    (second fn-form)\n         updated-args (into (vec (or external-args [])) user-args)\n         body-forms   (drop 2 fn-form)]\n     (->> body-forms\n       (cons updated-args)\n       (cons sym)))))\n\n#?(:clj\n   (defn- build-query-forms\n     \"Validate that the property destructuring and query make sense with each other.\"\n     [class thissym propargs {:keys [template method]}]\n     (cond\n       template\n       (do\n         (assert (or (symbol? propargs) (map? propargs)) \"Property args must be a symbol or destructuring expression.\")\n         (let [to-keyword        (fn [s] (cond\n                                           (nil? s) nil\n                                           (keyword? s) s\n                                           :otherwise (let [nspc (namespace s)\n                                                            nm   (name s)]\n                                                        (keyword nspc nm))))\n               destructured-keys (when (map? propargs) (->> (:keys propargs) (map to-keyword) set))\n               queried-keywords  (legal-keys template)\n               has-wildcard?     (some #{'*} template)\n               to-sym            (fn [k] (symbol (namespace k) (name k)))\n               illegal-syms      (mapv to-sym (set/difference destructured-keys queried-keywords))]\n           (when (and (not has-wildcard?) (seq illegal-syms))\n             (throw (ex-info (str \"defsc \" class \": \" illegal-syms \" destructured in props but do(es) not appear in your query!\") {:offending-symbols illegal-syms})))\n           `(~'static fulcro.client.primitives/IQuery (~'query [~thissym] ~template))))\n       method\n       `(~'static fulcro.client.primitives/IQuery ~(replace-and-validate-fn 'query [thissym] 0 method)))))\n\n#?(:clj\n   (defn- build-ident\n     \"Builds the ident form. If ident is a vector, then it generates the function and validates that the ID is\n     in the query. Otherwise, if ident is of the form (ident [this props] ...) it simply generates the correct\n     entry in defui without error checking.\"\n     [thissym propsarg {:keys [:method :template]} is-legal-key?]\n     (cond\n       method `(~'static fulcro.client.primitives/Ident ~(replace-and-validate-fn 'ident [thissym propsarg] 0 method))\n       template (let [table   (first template)\n                      id-prop (or (second template) :db/id)]\n                  (cond\n                    (nil? table) (throw (ex-info \"TABLE part of ident template was nil\" {}))\n                    (not (is-legal-key? id-prop)) (throw (ex-info \"ID property of :ident does not appear in your :query\" {:id-property id-prop}))\n                    :otherwise `(~'static fulcro.client.primitives/Ident (~'ident [~'this ~'props] [~table (~id-prop ~'props)])))))))\n\n#?(:clj\n   (defn- build-render [classsym thissym propsym compsym csssym body]\n     (let [css-bindings      (when csssym `[~csssym (fulcro-css.css-implementation/get-classnames ~classsym)])\n           computed-bindings (when compsym `[~compsym (fulcro.client.primitives/get-computed ~thissym)])]\n       `(~'Object\n          (~'render [~thissym]\n            (let [~propsym (fulcro.client.primitives/props ~thissym)\n                  ~@computed-bindings\n                  ~@css-bindings]\n              ~@body))))))\n\n#?(:clj\n   (defn- make-lifecycle [thissym options]\n     (let [possible-methods  (-> options keys set)\n           lifecycle-kws     (->> lifecycle-sigs keys (map (comp keyword name)) set)\n           methods-to-define (set/intersection lifecycle-kws possible-methods)\n           get-signature     (fn [sym] (drop 1 (get lifecycle-sigs sym)))]\n       (mapv (fn [method-kw]\n               (let [sym       (symbol (name method-kw))\n                     lambda    (get options method-kw)\n                     signature (get-signature sym)\n                     arity     (count signature)\n                     method    (replace-and-validate-fn sym [thissym] arity lambda)]\n                 method))\n         methods-to-define))))\n\n#?(:clj\n   (defn- make-static-lifecycle [options]\n     (when (contains? options :getDerivedStateFromProps)\n       (let [lambda (get options :getDerivedStateFromProps)]\n         ['static 'field 'getDerivedStateFromProps `(fn [p# s#]\n                                                      (let [fp#        (goog.object/get p# \"fulcro$value\")\n                                                            fs#        (goog.object/get s# \"fulcro$state\")\n                                                            new-state# (merge fs# (~lambda fp# fs#))]\n                                                        (cljs.core/js-obj \"fulcro$state\" new-state#)))]))))\n\n(defn make-state-map\n  \"Build a component's initial state using the defsc initial-state-data from\n  options, the children from options, and the params from the invocation of get-initial-state.\"\n  [initial-state children-by-query-key params]\n  (let [join-keys (set (keys children-by-query-key))\n        init-keys (set (keys initial-state))\n        is-child? (fn [k] (contains? join-keys k))\n        value-of  (fn value-of* [[isk isv]]\n                    (let [param-name    (fn [v] (and (keyword? v) (= \"param\" (namespace v)) (keyword (name v))))\n                          substitute    (fn [ele] (if-let [k (param-name ele)]\n                                                    (get params k)\n                                                    ele))\n                          param-key     (param-name isv)\n                          param-exists? (contains? params param-key)\n                          param-value   (get params param-key)\n                          child-class   (get children-by-query-key isk)]\n                      (cond\n                        ; parameterized lookup with no value\n                        (and param-key (not param-exists?)) nil\n\n                        ; to-one join, where initial state is a map to be used as child initial state *parameters* (enforced by defsc macro)\n                        ; and which may *contain* parameters\n                        (and (map? isv) (is-child? isk)) [isk (get-initial-state child-class (into {} (keep value-of* isv)))]\n\n                        ; not a join. Map is literal initial value.\n                        (map? isv) [isk (into {} (keep value-of* isv))]\n\n                        ; to-many join. elements MUST be parameters (enforced by defsc macro)\n                        (and (vector? isv) (is-child? isk)) [isk (mapv (fn [m] (get-initial-state child-class (into {} (keep value-of* m)))) isv)]\n\n                        ; to-many join. elements might be parameter maps or already-obtained initial-state\n                        (and (vector? param-value) (is-child? isk)) [isk (mapv (fn [params]\n                                                                                 (if (computed-initial-state? params)\n                                                                                   params\n                                                                                   (get-initial-state child-class params))) param-value)]\n\n                        ; vector of non-children\n                        (vector? isv) [isk (mapv (fn [ele] (substitute ele)) isv)]\n\n                        ; to-one join with parameter. value might be params, or an already-obtained initial-state\n                        (and param-key (is-child? isk) param-exists?) [isk (if (computed-initial-state? param-value)\n                                                                             param-value\n                                                                             (get-initial-state child-class param-value))]\n                        param-key [isk param-value]\n                        :else [isk isv])))]\n    (into {} (keep value-of initial-state))))\n\n#?(:clj\n   (defn- build-and-validate-initial-state-map [sym initial-state legal-keys children-by-query-key is-a-form?]\n     (let [join-keys     (set (keys children-by-query-key))\n           init-keys     (set (keys initial-state))\n           illegal-keys  (if (set? legal-keys) (set/difference init-keys legal-keys) #{})\n           is-child?     (fn [k] (contains? join-keys k))\n           param-expr    (fn [v]\n                           (if-let [kw (and (keyword? v) (= \"param\" (namespace v))\n                                         (keyword (name v)))]\n                             `(~kw ~'params)\n                             v))\n           parameterized (fn [init-map] (into {} (map (fn [[k v]] (if-let [expr (param-expr v)] [k expr] [k v])) init-map)))\n           child-state   (fn [k]\n                           (let [state-params    (get initial-state k)\n                                 to-one?         (map? state-params)\n                                 to-many?        (and (vector? state-params) (every? map? state-params))\n                                 code?           (list? state-params)\n                                 from-parameter? (and (keyword? state-params) (= \"param\" (namespace state-params)))\n                                 child-class     (get children-by-query-key k)]\n                             (when code?\n                               (throw (ex-info (str \"defsc \" sym \": Illegal call \" state-params \". Use a lambda to write code for initial state. Template mode for initial state requires simple maps (or vectors of maps) as parameters to children. See Developer's Guide.\")\n                                        {})))\n                             (cond\n                               (not (or from-parameter? to-many? to-one?)) (throw (ex-info \"Initial value for a child must be a map or vector of maps!\" {:offending-child k}))\n                               to-one? `(fulcro.client.primitives/get-initial-state ~child-class ~(parameterized state-params))\n                               to-many? (mapv (fn [params]\n                                                `(fulcro.client.primitives/get-initial-state ~child-class ~(parameterized params)))\n                                          state-params)\n                               from-parameter? `(fulcro.client.primitives/get-initial-state ~child-class ~(param-expr state-params))\n                               :otherwise nil)))\n           kv-pairs      (map (fn [k]\n                                [k (if (is-child? k)\n                                     (child-state k)\n                                     (param-expr (get initial-state k)))]) init-keys)\n           state-map     (into {} kv-pairs)]\n       (when (seq illegal-keys)\n         (throw (ex-info \"Initial state includes keys that are not in your query.\" {:offending-keys illegal-keys})))\n       (if is-a-form?\n         `(~'static fulcro.client.primitives/InitialAppState\n            (~'initial-state [~'c ~'params] (fulcro.ui.forms/build-form ~sym (fulcro.client.primitives/make-state-map ~initial-state ~children-by-query-key ~'params))))\n         `(~'static fulcro.client.primitives/InitialAppState\n            (~'initial-state [~'c ~'params] (fulcro.client.primitives/make-state-map ~initial-state ~children-by-query-key ~'params)))))))\n\n#?(:clj\n   (defn- build-raw-initial-state\n     \"Given an initial state form that is a list (function-form), simple copy it into the form needed by defui.\"\n     [thissym method]\n     `(~'static fulcro.client.primitives/InitialAppState\n        ~(replace-and-validate-fn 'initial-state [thissym] 1 method))))\n\n#?(:clj\n   (defn- build-initial-state [sym thissym {:keys [template method]} legal-keys query-template-or-method is-a-form?]\n     (when (and template (contains? query-template-or-method :method))\n       (throw (ex-info \"When query is a method, initial state MUST be as well.\" {:component sym})))\n     (cond\n       method (build-raw-initial-state thissym method)\n       template (let [query    (:template query-template-or-method)\n                      children (or (children-by-prop query) {})]\n                  (build-and-validate-initial-state-map sym template legal-keys children is-a-form?)))))\n\n#?(:clj (s/def :fulcro.client.primitives.defsc/ident (s/or :template (s/and vector? #(= 2 (count %))) :method list?)))\n#?(:clj (s/def :fulcro.client.primitives.defsc/query (s/or :template vector? :method list?)))\n#?(:clj (s/def :fulcro.client.primitives.defsc/initial-state (s/or :template map? :method list?)))\n#?(:clj (s/def :fulcro.client.primitives.defsc/css (s/or :template vector? :method list?)))\n#?(:clj (s/def :fulcro.client.primitives.defsc/css-include (s/or :template (s/coll-of symbol? :kind vector?) :method list?)))\n#?(:clj (s/def :fulcro.client.primitives.defsc/form-fields (s/or\n                                                             :form-field-set (s/coll-of keyword? :kind set?)\n                                                             :form-field-specs vector?)))\n\n#?(:clj (s/def :fulcro.client.primitives.defsc/options (s/keys :opt-un [:fulcro.client.primitives.defsc/query\n                                                                        :fulcro.client.primitives.defsc/ident\n                                                                        :fulcro.client.primitives.defsc/initial-state\n                                                                        :fulcro.client.primitives.defsc/css\n                                                                        :fulcro.client.primitives.defsc/form-fields\n                                                                        :fulcro.client.primitives.defsc/css-include])))\n\n#?(:clj (s/def :fulcro.client.primitives.defsc/args (s/cat\n                                                      :sym symbol?\n                                                      :doc (s/? string?)\n                                                      :arglist (s/and vector? #(<= 2 (count %) 5))\n                                                      :options (s/? :fulcro.client.primitives.defsc/options)\n                                                      :body (s/* any?))))\n#?(:clj (s/def :fulcro.client.primitives.defsc/static #{'static}))\n#?(:clj (s/def :fulcro.client.primitives.defsc/protocol-method list?))\n\n#?(:clj (s/def :fulcro.client.primitives.defsc/protocols (s/* (s/cat\n                                                                :static (s/? :fulcro.client.primitives.defsc/static)\n                                                                :protocol symbol?\n                                                                :methods (s/+ :fulcro.client.primitives.defsc/protocol-method)))))\n\n#?(:clj\n   (defn- build-form [form-fields query]\n     (cond\n       (nil? form-fields) nil\n       (set? form-fields) (let [valid-key?           (if (vector? query)\n                                                       (legal-keys query)\n                                                       (constantly true))\n                                missing-form-config? (and (vector? query)\n                                                       (not (some #(= \"form-config-join\" (if (symbol? %) (name %))) query)))]\n                            (when-not (every? valid-key? form-fields)\n                              (throw (ex-info \":form-fields include keywords that are not in the query\" {})))\n                            (when missing-form-config?\n                              (throw (ex-info \"Form fields are declared, but the query does not contain form-config-join\" {})))\n                            `(~'static fulcro.ui.form-state/IFormFields\n                               (~'form-fields [~'this] ~form-fields)))\n       (vector? form-fields) `(~'static fulcro.ui.forms/IForm\n                                (~'form-spec [~'this] ~form-fields))\n       :otherwise (throw (ex-info \"Form fields must be a literal vector (if using forms) or a set (if using form-state).\" {})))))\n\n#?(:clj\n   (defn build-css [thissym {css-method :method css-template :template} {include-method :method include-template :template}]\n     (when (or css-method css-template include-method include-template)\n       (let [local-form   (cond\n                            css-template (if-not (vector? css-template)\n                                           (throw (ex-info \"css MUST be a vector of garden-syntax rules\" {}))\n                                           `(~'local-rules [~'_] ~css-template))\n                            css-method (replace-and-validate-fn 'local-rules [thissym] 0 css-method 'css)\n                            :else '(local-rules [_] []))\n             include-form (cond\n                            include-template (if-not (and (vector? include-template) (every? symbol? include-template))\n                                               (throw (ex-info \"css-include must be a vector of component symbols\" {}))\n                                               `(~'include-children [~'_] ~include-template))\n                            include-method (replace-and-validate-fn 'include-children [thissym] 0 include-method 'css-include)\n                            :else '(include-children [_] []))]\n         `(~'static fulcro-css.css-protocols/CSS\n            ~local-form\n            ~include-form)))))\n\n#?(:clj\n   (defn defsc*\n     [args]\n     (if-not (s/valid? :fulcro.client.primitives.defsc/args args)\n       (throw (ex-info \"Invalid arguments\"\n                {:reason (str (-> (s/explain-data :fulcro.client.primitives.defsc/args args)\n                                ::s/problems\n                                first\n                                :path) \" is invalid.\")})))\n     (let [{:keys [sym doc arglist options body]} (s/conform :fulcro.client.primitives.defsc/args args)\n           [thissym propsym computedsym csssym] arglist\n           {:keys [ident query initial-state protocols form-fields css css-include]} options\n           body                             (or body ['nil])\n           ident-template-or-method         (into {} [ident]) ;clojure spec returns a map entry as a vector\n           initial-state-template-or-method (into {} [initial-state])\n           query-template-or-method         (into {} [query])\n           css-template-or-method           (into {} [css])\n           css-include-template-or-method   (into {} [css-include])\n           has-css?                         (or css css-include)\n           ; TODO: validate-css?                    (and (map? csssym) (:template css))\n           validate-query?                  (and (:template query-template-or-method) (not (some #{'*} (:template query-template-or-method))))\n           legal-key-checker                (if validate-query?\n                                              (or (legal-keys (:template query-template-or-method)) #{})\n                                              (complement #{}))\n           parsed-protocols                 (when protocols (group-by :protocol (s/conform :fulcro.client.primitives.defsc/protocols protocols)))\n           object-methods                   (when (contains? parsed-protocols 'Object) (get-in parsed-protocols ['Object 0 :methods]))\n           lifecycle-methods                (make-lifecycle thissym options)\n           static-lifecycle                 (make-static-lifecycle options)\n           addl-protocols                   (some->> (dissoc parsed-protocols 'Object)\n                                              vals\n                                              (map (fn [[v]]\n                                                     (if (contains? v :static)\n                                                       (concat ['static (:protocol v)] (:methods v))\n                                                       (concat [(:protocol v)] (:methods v)))))\n                                              (mapcat identity))\n           ident-forms                      (build-ident thissym propsym ident-template-or-method legal-key-checker)\n           state-forms                      (build-initial-state sym thissym initial-state-template-or-method legal-key-checker query-template-or-method false #_(vector? form-fields))\n           query-forms                      (build-query-forms sym thissym propsym query-template-or-method)\n           form-forms                       (build-form (some-> form-fields second) (:template query-template-or-method))\n           css-forms                        (build-css thissym css-template-or-method css-include-template-or-method)\n           render-forms                     (build-render sym thissym propsym computedsym csssym body)]\n       (assert (or (nil? protocols) (s/valid? :fulcro.client.primitives.defsc/protocols protocols)) \"Protocols must be valid protocol declarations\")\n       (when (and csssym (not (seq css-forms)))\n         (throw (ex-info \"You included a CSS argument, but there is no CSS localized to the component.\" {})))\n       ;; TODO: Add CSS destructuring validation here? Must use dynamic loading of fulcro CSS IFF css is used, so that we\n       ; don't have a hard dependency on it.\n       ; You're at *compile time* in *Clojure*...you *cannot rely on components* that are defined because they might be only\n       ; cljs artifacts.\n       ; (when validate-css? (validate-css-destructuring csssym (:template css)))\n       `(fulcro.client.primitives/defui ~(vary-meta sym assoc :once true)\n          ~@static-lifecycle\n          ~@addl-protocols\n          ~@css-forms\n          ~@state-forms\n          ~@ident-forms\n          ~@query-forms\n          ~@form-forms\n          ~@render-forms\n          ~@lifecycle-methods\n          ~@object-methods))))\n\n#?(:clj\n   (defmacro ^{:doc      \"Define a stateful component. This macro emits a React UI class with a query,\n   optional ident (if :ident is specified in options), optional initial state, optional css, lifecycle methods,\n   and a render method. It can also cause the class to implement additional protocols that you specify. Destructuring is\n   supported in the argument list.\n\n   The template (data-only) versions do not have any arguments in scope\n   The lambda versions have arguments in scope that make sense for those lambdas, as listed below:\n\n   ```\n   (defsc Component [this {:keys [db/id x] :as props} {:keys [onSelect] :as computed} css-classmap]\n     {\n      ;; stateful component options\n      ;; query template is literal. Use the lambda if you have ident-joins or unions.\n      :query [:db/id :x] ; OR (fn [] [:db/id :x]) ; this in scope\n      ;; ident template is table name and ID property name\n      :ident [:table/by-id :id] ; OR (fn [] [:table/by-id id]) ; this and props in scope\n      ;; initial-state template is magic..see dev guide. Lambda version is normal.\n      :initial-state {:x :param/x} ; OR (fn [params] {:x (:x params)}) ; this in scope\n      :css [] ; garden css rules\n      :css-include [] ; list of components that have CSS to compose towards root.\n\n      ; React Lifecycle Methods (this in scope)\n      :initLocalState            (fn [] ...) ; CAN BE used to call things as you might in a constructor. Return value is initial state.\n      :shouldComponentUpdate     (fn [next-props next-state] ...)\n\n      :componentDidUpdate        (fn [prev-props prev-state snapshot] ...) ; snapshot is optional, and is 16+. Is context for 15\n      :componentDidMount         (fn [] ...)\n      :componentWillUnmount      (fn [] ...)\n\n      ;; DEPRECATED IN REACT 16 (to be removed in 17):\n      :componentWillReceiveProps        (fn [next-props] ...)\n      :componentWillUpdate              (fn [next-props next-state] ...)\n      :componentWillMount               (fn [] ...)\n\n      ;; Replacements for deprecated methods in React 16.3+\n      :UNSAFE_componentWillReceiveProps (fn [next-props] ...)\n      :UNSAFE_componentWillUpdate       (fn [next-props next-state] ...)\n      :UNSAFE_componentWillMount        (fn [] ...)\n\n      ;; ADDED for React 16:\n      :componentDidCatch         (fn [error info] ...)\n      :getSnapshotBeforeUpdate   (fn [prevProps prevState] ...)\n      :getDerivedStateFromProps  (fn [props state] ...)\n\n      NOTE: shouldComponentUpdate should generally not be overridden other than to force it false so\n      that other libraries can control the sub-dom. If you do want to implement it, then old props can\n      be obtained from (prim/props this), and old state via (gobj/get (. this -state) \\\"fulcro$state\\\").\n\n      ; Custom literal protocols (Object ok, too, to add arbitrary methods. Nothing automatically in scope.)\n      :protocols [YourProtocol\n                  (method [this] ...)]} ; nothing is automatically in scope\n      ; BODY forms. May be omitted IFF there is an options map, in order to generate a component that is used only for queries/normalization.\n      (dom/div #js {:onClick onSelect} x))\n   ```\n\n   See the Developer's Guide at book.fulcrologic.com for more details.\n   \"\n               :arglists '([this dbprops computedprops]\n                            [this dbprops computedprops local-css-classes])}\n   defsc\n     [& args]\n     (let [location (str *ns* \":\" (:line (meta &form)))]\n       (try\n         (defsc* args)\n         (catch Exception e\n           (throw (ex-info (str \"Syntax Error at \" location) {:cause e})))))))\n\n(defmacro sc\n  \"Just like defsc, but returns the component instead. The arguments are the same, except do not supply a symbol:\n\n  ```\n  (let [C (prim/sc [this props] ...)] ...)\n  ```\n  \"\n  [& args]\n  (let [t (with-meta (gensym \"sc_\") {:anonymous true})]\n    `(do (defsc ~t ~@args) ~t)))\n\n(defn integrate-ident\n  \"DEPRECATED: Use fulcro.client.mutations/integrate-ident* in your mutations instead.\"\n  [state ident & named-parameters]\n  {:pre [(map? state)]}\n  (log/warn \"integrate-ident is deprecated and will be removed in the future.\"\n    \"Please use fulcro.client.mutations/integrate-ident* in your mutations instead.\")\n  (apply util/__integrate-ident-impl__ state ident named-parameters))\n\n(defn component-merge-query\n  \"Calculates the query that can be used to pull (or merge) a component with an ident\n  to/from a normalized app database. Requires a tree of data that represents the instance of\n  the component in question (e.g. ident will work on it)\"\n  [component object-data]\n  (let [ident        (ident component object-data)\n        object-query (get-query component)]\n    [{ident object-query}]))\n\n(defn- preprocess-merge\n  \"Does the steps necessary to honor the data merge technique defined by Fulcro with respect\n  to data overwrites in the app database.\"\n  [state-atom component object-data]\n  (let [ident         (get-ident component object-data)\n        object-query  (get-query component)\n        object-query  (if (map? object-query) [object-query] object-query)\n        base-query    (component-merge-query component object-data)\n        ;; :fulcro/merge is way to make unions merge properly when joined by idents\n        merge-query   [{:fulcro/merge base-query}]\n        existing-data (get (db->tree base-query @state-atom @state-atom) ident {})\n        marked-data   (mark-missing object-data object-query)\n        merge-data    {:fulcro/merge {ident (util/deep-merge existing-data marked-data)}}]\n    {:merge-query merge-query\n     :merge-data  merge-data}))\n\n(defn- is-atom?\n  \"Returns TRUE when x is an atom.\"\n  [x]\n  (instance? #?(:cljs cljs.core.Atom\n                :clj  clojure.lang.Atom) x))\n\n(defn integrate-ident!\n  \"DEPRECATED: Use fulcro.client.mutations/integrate-ident* in your mutations instead.\"\n  [state ident & named-parameters]\n  (log/warn \"integrate-ident! is deprecated and will be removed in the future.\"\n    \"Please use fulcro.client.mutations/integrate-ident* in your mutations instead.\")\n  (assert (is-atom? state)\n    \"The state has to be an atom. Use 'integrate-ident' instead.\")\n  (apply swap! state util/__integrate-ident-impl__ ident named-parameters))\n\n(defn merge-component\n  \"Given a state map of the application database, a component, and a tree of component-data: normalizes\n   the tree of data and merges the component table entries into the state, returning a new state map.\n   Since there is not an implied root, the component itself won't be linked into your graph (though it will\n   remain correctly linked for its own consistency).\n   Therefore, this function is just for dropping normalized things into tables\n   when they themselves have a recursive nature. This function is useful when you want to create a new component instance\n   and put it in the database, but the component instance has recursive normalized state. This is a basically a\n   thin wrapper around `prim/tree->db`.\n\n   See also integrate-ident, integrate-ident!, and merge-component!\"\n  [state-map component component-data]\n  (if-let [top-ident (get-ident component component-data)]\n    (let [query          [{top-ident (get-query component)}]\n          state-to-merge {top-ident component-data}\n          table-entries  (-> (tree->db query state-to-merge true)\n                           (dissoc ::tables top-ident))]\n      (util/deep-merge state-map table-entries))\n    state-map))\n\n(defn merge-component!\n  \"Normalize and merge a (sub)tree of application state into the application using a known UI component's query and ident.\n\n  This utility function obtains the ident of the incoming object-data using the UI component's ident function. Once obtained,\n  it uses the component's query and ident to normalize the data and place the resulting objects in the correct tables.\n  It is also quite common to want those new objects to be linked into lists in other spot in app state, so this function\n  supports optional named parameters for doing this. These named parameters can be repeated as many times as you like in order\n  to place the ident of the new object into other data structures of app state.\n\n  This function honors the data merge story for Fulcro: attributes that are queried for but do not appear in the\n  data will be removed from the application. This function also uses the initial state for the component as a base\n  for merge if there was no state for the object already in the database.\n\n  This function will also trigger re-renders of components that directly render object merged, as well as any components\n  into which you integrate that data via the named-parameters.\n\n  This function is primarily meant to be used from things like server push and setTimeout/setInterval, where you're outside\n  of the normal mutation story. Do not use this function within abstract mutations.\n\n  - reconciler: A reconciler\n  - component: The class of the component that corresponsds to the data. Must have an ident.\n  - object-data: A map (tree) of data to merge. Will be normalized for you.\n  - named-parameter: Post-processing ident integration steps. see integrate-ident!\n\n  Any keywords that appear in ident integration steps will be added to the re-render queue.\n\n  See also `fulcro.client.primitives/merge!`.\n  \"\n  [reconciler component object-data & named-parameters]\n  (if-not (has-ident? component)\n    (log/error \"merge-component!: component must implement Ident. Merge skipped.\")\n    (let [ident          (get-ident component object-data)\n          reconciler     (if (contains? reconciler :reconciler) (:reconciler reconciler) reconciler)\n          state          (app-state reconciler)\n          data-path-keys (->> named-parameters (partition 2) (map second) flatten (filter keyword?) set vec)\n          {:keys [merge-data merge-query]} (preprocess-merge state component object-data)]\n      (merge! reconciler merge-data merge-query)\n      (swap! state (fn [s]\n                     (as-> s st\n                       ;; Use utils until we make smaller namespaces, requiring mutations would\n                       ;; cause circular dependency.\n                       (apply util/__integrate-ident-impl__ st ident named-parameters)\n                       (dissoc st :fulcro/merge))))\n      (p/queue! reconciler (conj data-path-keys ident))\n      @state)))\n\n(defn merge-alternate-unions\n  \"Walks the given query and calls (merge-fn parent-union-component union-child-initial-state) for each non-default element of a union that has initial app state.\n  You probably want to use merge-alternate-union-elements[!] on a state map or app.\"\n  [merge-fn root-component]\n  (letfn [(walk-ast\n            ([ast visitor]\n             (walk-ast ast visitor nil))\n            ([{:keys [children component type dispatch-key union-key key] :as parent-ast} visitor parent-union]\n             (when (and component parent-union (= :union-entry type))\n               (visitor component parent-union))\n             (when children\n               (doseq [ast children]\n                 (cond\n                   (= (:type ast) :union) (walk-ast ast visitor component) ; the union's component is on the parent join\n                   (= (:type ast) :union-entry) (walk-ast ast visitor parent-union)\n                   ast (walk-ast ast visitor nil))))))\n          (merge-union [component parent-union]\n            (let [default-initial-state   (and parent-union (has-initial-app-state? parent-union) (get-initial-state parent-union {}))\n                  to-many?                (vector? default-initial-state)\n                  component-initial-state (and component (has-initial-app-state? component) (get-initial-state component {}))]\n              (when (and component component-initial-state parent-union (not to-many?) (not= default-initial-state component-initial-state))\n                (merge-fn parent-union component-initial-state))))]\n    (walk-ast\n      (query->ast (get-query root-component))\n      merge-union)))\n\n;q: {:a (gq A) :b (gq B)\n;is: (is A)  <-- default branch\n;state:   { kw { id [:page :a]  }}\n(defn merge-alternate-union-elements!\n  \"Walks the query and initial state of root-component and merges the alternate sides of unions with initial state into\n  the application state database. See also `merge-alternate-union-elements`, which can be used on a state map and\n  is handy for server-side rendering. This function side-effects on your app, and returns nothing.\"\n  [app root-component]\n  (merge-alternate-unions (partial merge-component! app) root-component))\n\n(defn merge-alternate-union-elements\n  \"Just like merge-alternate-union-elements!, but usable from within mutations and on server-side rendering. Ensures\n  that when a component has initial state it will end up in the state map, even if it isn't currently in the\n  initial state of the union component (which can only point to one at a time).\"\n  [state-map root-component]\n  (let [initial-state  (get-initial-state root-component nil)\n        state-map-atom (atom state-map)\n        merge-to-state (fn [comp tree] (swap! state-map-atom merge-component comp tree))\n        _              (merge-alternate-unions merge-to-state root-component)\n        new-state      @state-map-atom]\n    new-state))\n\n\n(defmacro with-parent-context\n  \"Wraps the given body with the correct internal bindings of the parent so that Fulcro internals\n  will work when that body is embedded in unusual ways (e.g. as the body in a child-as-a-function\n  React pattern).\"\n  [outer-parent & body]\n  (if-not (:ns &env)\n    `(do ~@body)\n    `(let [parent# ~outer-parent\n           r#      (or fulcro.client.primitives/*reconciler* (fulcro.client.primitives/get-reconciler parent#))\n           d#      (or fulcro.client.primitives/*depth* (inc (fulcro.client.primitives/depth parent#)))\n           s#      (or fulcro.client.primitives/*shared* (fulcro.client.primitives/shared parent#))\n           i#      (or fulcro.client.primitives/*instrument* (fulcro.client.primitives/instrument parent#))\n           p#      (or fulcro.client.primitives/*parent* parent#)]\n       (binding [fulcro.client.primitives/*reconciler* r#\n                 fulcro.client.primitives/*depth*      d#\n                 fulcro.client.primitives/*shared*     s#\n                 fulcro.client.primitives/*instrument* i#\n                 fulcro.client.primitives/*parent*     p#]\n         ~@body))))\n","~:reader-features",["^D",["~:cljs"]],"~:source-map",["^ ","~i34",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",22],["^ ","^2D",0,"^2E",22],["^ ","^2D",0,"^2E",23],["^ ","^2D",0,"^2E",24],["^ ","^2D",0,"^2E",25],["^ ","^2D",0,"^2E",26],["^ ","^2D",0,"^2E",27],["^ ","^2D",0,"^2E",28],["^ ","^2D",0,"^2E",29],["^ ","^2D",0,"^2E",30],["^ ","^2D",0,"^2E",31],["^ ","^2D",0,"^2E",32]]],"~i37",["^ ","~i0",[["^ ","^2D",0,"^2E",32],["^ ","^2D",0,"^2E",32],["^ ","^2D",0,"^2E",33],["^ ","^2D",33,"^2E",36],["^ ","^2D",0,"^2E",38],["^ ","^2D",33,"^2E",41],["^ ","^2D",0,"^2E",42],["^ ","^2D",0,"^2E",42],["^ ","^2D",3,"^2E",42],["^ ","^2D",5,"^2E",42],["^ ","^2D",7,"^2E",42],["^ ","^2D",17,"^2E",42],["^ ","^2D",29,"^2E",42],["^ ","^2D",31,"^2E",42],["^ ","^2D",32,"^2E",42],["^ ","^2D",86,"^2E",42],["^ ","^2D",0,"^2E",43],["^ ","^2D",0,"^2E",45],["^ ","^2D",4,"^2E",45,"^O","x__4243__auto__"],["^ ","^2D",22,"^2E",45],["^ ","^2D",24,"^2E",45],["^ ","^2D",34,"^2E",45],["^ ","^2D",41,"^2E",45],["^ ","^2D",4,"^2E",46,"^O","m__4244__auto__"],["^ ","^2D",22,"^2E",46],["^ ","^2D",23,"^2E",46,"^O","fulcro/client.primitives.ident"],["^ ","^2D",54,"^2E",46],["^ ","^2D",54,"^2E",46,"^O","goog/typeOf"],["^ ","^2D",66,"^2E",46,"^O","x__4243__auto__"],["^ ","^2D",0,"^2E",47],["^ ","^2D",0,"^2E",47],["^ ","^2D",3,"^2E",47],["^ ","^2D",5,"^2E",47],["^ ","^2D",6,"^2E",47,"^O","m__4244__auto__"],["^ ","^2D",25,"^2E",47],["^ ","^2D",0,"^2E",48],["^ ","^2D",8,"^2E",48,"^O","m__4244__auto__"],["^ ","^2D",56,"^2E",48,"^O","m__4244__auto__"],["^ ","^2D",117,"^2E",48,"^O","m__4244__auto__"],["^ ","^2D",0,"^2E",50],["^ ","^2D",4,"^2E",50,"^O","m__4244__auto__"],["^ ","^2D",26,"^2E",50],["^ ","^2D",27,"^2E",50,"^O","fulcro/client.primitives.ident"],["^ ","^2D",58,"^2E",50],["^ ","^2D",0,"^2E",51],["^ ","^2D",0,"^2E",51],["^ ","^2D",3,"^2E",51],["^ ","^2D",5,"^2E",51],["^ ","^2D",6,"^2E",51,"^O","m__4244__auto__"],["^ ","^2D",29,"^2E",51],["^ ","^2D",0,"^2E",52],["^ ","^2D",8,"^2E",52,"^O","m__4244__auto__"],["^ ","^2D",60,"^2E",52,"^O","m__4244__auto__"],["^ ","^2D",125,"^2E",52,"^O","m__4244__auto__"],["^ ","^2D",0,"^2E",54],["^ ","^2D",6,"^2E",54],["^ ","^2D",6,"^2E",54,"^O","cljs.core/missing-protocol"],["^ ","^2D",33,"^2E",54],["^ ","^2D",0,"^2E",60]],"~i13",[["^ ","^2D",0,"^2E",36,"^O","fulcro.client.primitives/Ident"]]],"~i38",["^ ","~i3",[["^ ","^2D",0,"^2E",41,"^O","fulcro.client.primitives/ident"]],"~i10",[["^ ","^2D",74,"^2E",41,"^O","this"],["^ ","^2D",8,"^2E",42,"^O","this"],["^ ","^2D",32,"^2E",42,"^O","this"],["^ ","^2D",7,"^2E",43,"^O","this"],["^ ","^2D",58,"^2E",43,"^O","this"],["^ ","^2D",25,"^2E",45,"^O","this"],["^ ","^2D",46,"^2E",45,"^O","this"],["^ ","^2D",102,"^2E",48,"^O","this"],["^ ","^2D",143,"^2E",48,"^O","this"],["^ ","^2D",110,"^2E",52,"^O","this"],["^ ","^2D",155,"^2E",52,"^O","this"],["^ ","^2D",47,"^2E",54,"^O","this"]],"~i15",[["^ ","^2D",80,"^2E",41,"^O","props"],["^ ","^2D",64,"^2E",43,"^O","props"],["^ ","^2D",108,"^2E",48,"^O","props"],["^ ","^2D",149,"^2E",48,"^O","props"],["^ ","^2D",116,"^2E",52,"^O","props"],["^ ","^2D",161,"^2E",52,"^O","props"]]],"~i40",["^ ","~i0",[["^ ","^2D",0,"^2E",60],["^ ","^2D",0,"^2E",60],["^ ","^2D",0,"^2E",61],["^ ","^2D",34,"^2E",64],["^ ","^2D",0,"^2E",66],["^ ","^2D",33,"^2E",69],["^ ","^2D",0,"^2E",70],["^ ","^2D",0,"^2E",70],["^ ","^2D",3,"^2E",70],["^ ","^2D",5,"^2E",70],["^ ","^2D",7,"^2E",70],["^ ","^2D",17,"^2E",70],["^ ","^2D",29,"^2E",70],["^ ","^2D",31,"^2E",70],["^ ","^2D",32,"^2E",70],["^ ","^2D",87,"^2E",70],["^ ","^2D",0,"^2E",71],["^ ","^2D",0,"^2E",73],["^ ","^2D",4,"^2E",73,"^O","x__4243__auto__"],["^ ","^2D",22,"^2E",73],["^ ","^2D",24,"^2E",73],["^ ","^2D",34,"^2E",73],["^ ","^2D",41,"^2E",73],["^ ","^2D",4,"^2E",74,"^O","m__4244__auto__"],["^ ","^2D",22,"^2E",74],["^ ","^2D",23,"^2E",74,"^O","fulcro/client.primitives.query"],["^ ","^2D",54,"^2E",74],["^ ","^2D",54,"^2E",74,"^O","goog/typeOf"],["^ ","^2D",66,"^2E",74,"^O","x__4243__auto__"],["^ ","^2D",0,"^2E",75],["^ ","^2D",0,"^2E",75],["^ ","^2D",3,"^2E",75],["^ ","^2D",5,"^2E",75],["^ ","^2D",6,"^2E",75,"^O","m__4244__auto__"],["^ ","^2D",25,"^2E",75],["^ ","^2D",0,"^2E",76],["^ ","^2D",8,"^2E",76,"^O","m__4244__auto__"],["^ ","^2D",56,"^2E",76,"^O","m__4244__auto__"],["^ ","^2D",111,"^2E",76,"^O","m__4244__auto__"],["^ ","^2D",0,"^2E",78],["^ ","^2D",4,"^2E",78,"^O","m__4244__auto__"],["^ ","^2D",26,"^2E",78],["^ ","^2D",27,"^2E",78,"^O","fulcro/client.primitives.query"],["^ ","^2D",58,"^2E",78],["^ ","^2D",0,"^2E",79],["^ ","^2D",0,"^2E",79],["^ ","^2D",3,"^2E",79],["^ ","^2D",5,"^2E",79],["^ ","^2D",6,"^2E",79,"^O","m__4244__auto__"],["^ ","^2D",29,"^2E",79],["^ ","^2D",0,"^2E",80],["^ ","^2D",8,"^2E",80,"^O","m__4244__auto__"],["^ ","^2D",60,"^2E",80,"^O","m__4244__auto__"],["^ ","^2D",119,"^2E",80,"^O","m__4244__auto__"],["^ ","^2D",0,"^2E",82],["^ ","^2D",6,"^2E",82],["^ ","^2D",6,"^2E",82,"^O","cljs.core/missing-protocol"],["^ ","^2D",33,"^2E",82],["^ ","^2D",0,"^2E",88]],"^2G",[["^ ","^2D",0,"^2E",64,"^O","fulcro.client.primitives/IQuery"]]],"~i41",["^ ","~i3",[["^ ","^2D",0,"^2E",69,"^O","fulcro.client.primitives/query"]],"^2I",[["^ ","^2D",74,"^2E",69,"^O","this"],["^ ","^2D",8,"^2E",70,"^O","this"],["^ ","^2D",32,"^2E",70,"^O","this"],["^ ","^2D",7,"^2E",71,"^O","this"],["^ ","^2D",59,"^2E",71,"^O","this"],["^ ","^2D",25,"^2E",73,"^O","this"],["^ ","^2D",46,"^2E",73,"^O","this"],["^ ","^2D",102,"^2E",76,"^O","this"],["^ ","^2D",137,"^2E",76,"^O","this"],["^ ","^2D",110,"^2E",80,"^O","this"],["^ ","^2D",149,"^2E",80,"^O","this"],["^ ","^2D",48,"^2E",82,"^O","this"]]],"~i43",["^ ","~i0",[["^ ","^2D",0,"^2E",88],["^ ","^2D",0,"^2E",88],["^ ","^2D",0,"^2E",89],["^ ","^2D",43,"^2E",92],["^ ","^2D",0,"^2E",94],["^ ","^2D",41,"^2E",97],["^ ","^2D",0,"^2E",98],["^ ","^2D",0,"^2E",98],["^ ","^2D",3,"^2E",98],["^ ","^2D",5,"^2E",98],["^ ","^2D",7,"^2E",98],["^ ","^2D",15,"^2E",98],["^ ","^2D",27,"^2E",98],["^ ","^2D",29,"^2E",98],["^ ","^2D",30,"^2E",98],["^ ","^2D",100,"^2E",98],["^ ","^2D",0,"^2E",99],["^ ","^2D",0,"^2E",101],["^ ","^2D",4,"^2E",101,"^O","x__4243__auto__"],["^ ","^2D",22,"^2E",101],["^ ","^2D",24,"^2E",101],["^ ","^2D",32,"^2E",101],["^ ","^2D",39,"^2E",101],["^ ","^2D",4,"^2E",102,"^O","m__4244__auto__"],["^ ","^2D",22,"^2E",102],["^ ","^2D",23,"^2E",102,"^O","fulcro/client.primitives.initial-state"],["^ ","^2D",62,"^2E",102],["^ ","^2D",62,"^2E",102,"^O","goog/typeOf"],["^ ","^2D",74,"^2E",102,"^O","x__4243__auto__"],["^ ","^2D",0,"^2E",103],["^ ","^2D",0,"^2E",103],["^ ","^2D",3,"^2E",103],["^ ","^2D",5,"^2E",103],["^ ","^2D",6,"^2E",103,"^O","m__4244__auto__"],["^ ","^2D",25,"^2E",103],["^ ","^2D",0,"^2E",104],["^ ","^2D",8,"^2E",104,"^O","m__4244__auto__"],["^ ","^2D",56,"^2E",104,"^O","m__4244__auto__"],["^ ","^2D",116,"^2E",104,"^O","m__4244__auto__"],["^ ","^2D",0,"^2E",106],["^ ","^2D",4,"^2E",106,"^O","m__4244__auto__"],["^ ","^2D",26,"^2E",106],["^ ","^2D",27,"^2E",106,"^O","fulcro/client.primitives.initial-state"],["^ ","^2D",66,"^2E",106],["^ ","^2D",0,"^2E",107],["^ ","^2D",0,"^2E",107],["^ ","^2D",3,"^2E",107],["^ ","^2D",5,"^2E",107],["^ ","^2D",6,"^2E",107,"^O","m__4244__auto__"],["^ ","^2D",29,"^2E",107],["^ ","^2D",0,"^2E",108],["^ ","^2D",8,"^2E",108,"^O","m__4244__auto__"],["^ ","^2D",60,"^2E",108,"^O","m__4244__auto__"],["^ ","^2D",124,"^2E",108,"^O","m__4244__auto__"],["^ ","^2D",0,"^2E",110],["^ ","^2D",6,"^2E",110],["^ ","^2D",6,"^2E",110,"^O","cljs.core/missing-protocol"],["^ ","^2D",33,"^2E",110],["^ ","^2D",0,"^2E",116]],"^2G",[["^ ","^2D",0,"^2E",92,"^O","fulcro.client.primitives/InitialAppState"]]],"~i44",["^ ","~i3",[["^ ","^2D",0,"^2E",97,"^O","fulcro.client.primitives/initial-state"]],"~i18",[["^ ","^2D",90,"^2E",97,"^O","clz"],["^ ","^2D",8,"^2E",98,"^O","clz"],["^ ","^2D",30,"^2E",98,"^O","clz"],["^ ","^2D",7,"^2E",99,"^O","clz"],["^ ","^2D",74,"^2E",99,"^O","clz"],["^ ","^2D",25,"^2E",101,"^O","clz"],["^ ","^2D",44,"^2E",101,"^O","clz"],["^ ","^2D",102,"^2E",104,"^O","clz"],["^ ","^2D",142,"^2E",104,"^O","clz"],["^ ","^2D",110,"^2E",108,"^O","clz"],["^ ","^2D",154,"^2E",108,"^O","clz"],["^ ","^2D",65,"^2E",110,"^O","clz"]],"~i22",[["^ ","^2D",94,"^2E",97,"^O","params"],["^ ","^2D",78,"^2E",99,"^O","params"],["^ ","^2D",106,"^2E",104,"^O","params"],["^ ","^2D",146,"^2E",104,"^O","params"],["^ ","^2D",114,"^2E",108,"^O","params"],["^ ","^2D",158,"^2E",108,"^O","params"]]],"~i46",["^ ","~i0",[["^ ","^2D",0,"^2E",116],["^ ","^2D",56,"^2E",116],["^ ","^2D",0,"^2E",117]],"~i6",[["^ ","^2D",0,"^2E",116,"^O","fulcro.client.primitives/has-initial-app-state?"]]],"~i48",["^ ","~i3",[["^ ","^2D",120,"^2E",116,"^O","component"]]],"~i53",["^ ","~i11",[["^ ","^2D",0,"^2E",117],["^ ","^2D",3,"^2E",117],["^ ","^2D",5,"^2E",117],["^ ","^2D",19,"^2E",117],["^ ","^2D",0,"^2E",118],["^ ","^2D",3,"^2E",118],["^ ","^2D",5,"^2E",118],["^ ","^2D",16,"^2E",118],["^ ","^2D",17,"^2E",118,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",49,"^2E",118],["^ ","^2D",0,"^2E",119],["^ ","^2D",0,"^2E",121],["^ ","^2D",0,"^2E",124]],"^2K",[["^ ","^2D",6,"^2E",117,"^O","component"],["^ ","^2D",49,"^2E",118,"^O","component"]]],"~i55",["^ ","~i0",[["^ ","^2D",0,"^2E",127],["^ ","^2D",44,"^2E",127],["^ ","^2D",0,"^2E",128]],"~i6",[["^ ","^2D",0,"^2E",127,"^O","fulcro.client.primitives/has-ident?"]]],"~i57",["^ ","~i3",[["^ ","^2D",96,"^2E",127,"^O","component"]]],"~i62",["^ ","^2T",[["^ ","^2D",0,"^2E",128],["^ ","^2D",3,"^2E",128],["^ ","^2D",5,"^2E",128],["^ ","^2D",19,"^2E",128],["^ ","^2D",0,"^2E",129],["^ ","^2D",3,"^2E",129],["^ ","^2D",5,"^2E",129],["^ ","^2D",16,"^2E",129],["^ ","^2D",17,"^2E",129,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",49,"^2E",129],["^ ","^2D",0,"^2E",130],["^ ","^2D",0,"^2E",132],["^ ","^2D",0,"^2E",135]],"~i30",[["^ ","^2D",6,"^2E",128,"^O","component"],["^ ","^2D",49,"^2E",129,"^O","component"]]],"~i64",["^ ","~i0",[["^ ","^2D",0,"^2E",138],["^ ","^2D",44,"^2E",138],["^ ","^2D",0,"^2E",139]],"~i6",[["^ ","^2D",0,"^2E",138,"^O","fulcro.client.primitives/has-query?"]]],"~i66",["^ ","~i3",[["^ ","^2D",96,"^2E",138,"^O","component"]]],"~i71",["^ ","^2T",[["^ ","^2D",0,"^2E",139],["^ ","^2D",3,"^2E",139],["^ ","^2D",5,"^2E",139],["^ ","^2D",19,"^2E",139],["^ ","^2D",0,"^2E",140],["^ ","^2D",3,"^2E",140],["^ ","^2D",5,"^2E",140],["^ ","^2D",16,"^2E",140],["^ ","^2D",17,"^2E",140,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",49,"^2E",140],["^ ","^2D",0,"^2E",141],["^ ","^2D",0,"^2E",143],["^ ","^2D",0,"^2E",146]],"~i31",[["^ ","^2D",6,"^2E",139,"^O","component"],["^ ","^2D",49,"^2E",140,"^O","component"]]],"~i73",["^ ","~i0",[["^ ","^2D",0,"^2E",149],["^ ","^2D",45,"^2E",152],["^ ","^2D",0,"^2E",153]],"~i6",[["^ ","^2D",0,"^2E",152,"^O","fulcro.client.primitives/get-initial-state"]]],"~i75",["^ ","~i3",[["^ ","^2D",98,"^2E",152,"^O","class"]],"~i9",[["^ ","^2D",105,"^2E",152,"^O","params"]]],"~i76",["^ ","~i2",[["^ ","^2D",0,"^2E",153],["^ ","^2D",4,"^2E",153,"^O","G__37651"],["^ ","^2D",0,"^2E",154],["^ ","^2D",0,"^2E",154],["^ ","^2D",3,"^2E",154],["^ ","^2D",4,"^2E",154,"^O","G__37651"],["^ ","^2D",16,"^2E",154],["^ ","^2D",0,"^2E",155]]],"~i79",["^ ","^2G",[["^ ","^2D",15,"^2E",153],["^ ","^2D",161,"^2E",153],["^ ","^2D",215,"^2E",153]],"~i19",[["^ ","^2D",17,"^2E",153],["^ ","^2D",19,"^2E",153],["^ ","^2D",21,"^2E",153],["^ ","^2D",32,"^2E",153],["^ ","^2D",40,"^2E",153],["^ ","^2D",42,"^2E",153],["^ ","^2D",44,"^2E",153],["^ ","^2D",55,"^2E",153],["^ ","^2D",56,"^2E",153,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",88,"^2E",153],["^ ","^2D",141,"^2E",153],["^ ","^2D",146,"^2E",153],["^ ","^2D",153,"^2E",153]],"^2R",[["^ ","^2D",22,"^2E",153,"^O","class"],["^ ","^2D",88,"^2E",153,"^O","class"]]],"~i80",["^ ","^2J",[["^ ","^2D",161,"^2E",153]],"~i16",[["^ ","^2D",161,"^2E",153,"^O","fulcro.client.primitives/initial-state"]],"^2X",[["^ ","^2D",200,"^2E",153,"^O","class"]],"~i36",[["^ ","^2D",207,"^2E",153,"^O","params"]]],"~i81",["^ ","~i4",[["^ ","^2D",0,"^2E",157],["^ ","^2D",27,"^2E",157,"^O","G__37651"],["^ ","^2D",36,"^2E",157],["^ ","^2D",79,"^2E",157],["^ ","^2D",141,"^2E",157]],"~i5",[["^ ","^2D",7,"^2E",157,"^O","cljs.core/with-meta"]]],"~i83",["^ ","~i0",[["^ ","^2D",0,"^2E",160],["^ ","^2D",57,"^2E",163],["^ ","^2D",0,"^2E",164]],"~i6",[["^ ","^2D",0,"^2E",163,"^O","fulcro.client.primitives/computed-initial-state?"]]],"~i85",["^ ","~i3",[["^ ","^2D",122,"^2E",163,"^O","s"]]],"~i86",["^ ","~i2",[["^ ","^2D",0,"^2E",164],["^ ","^2D",4,"^2E",164,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",165],["^ ","^2D",0,"^2E",165],["^ ","^2D",3,"^2E",165,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",174,"^O","and__3938__auto__"]],"~i7",[["^ ","^2D",24,"^2E",164]],"~i8",[["^ ","^2D",24,"^2E",164,"^O","cljs.core/map?"]],"^2G",[["^ ","^2D",45,"^2E",164,"^O","s"]],"^37",[["^ ","^2D",0,"^2E",166],["^ ","^2D",4,"^2E",166,"^O","G__37659"],["^ ","^2D",4,"^2E",167,"^O","G__37659"],["^ ","^2D",19,"^2E",167],["^ ","^2D",21,"^2E",167],["^ ","^2D",22,"^2E",167,"^O","G__37659"],["^ ","^2D",34,"^2E",167],["^ ","^2D",41,"^2E",167],["^ ","^2D",46,"^2E",167],["^ ","^2D",61,"^2E",167,"^O","G__37659"],["^ ","^2D",0,"^2E",168],["^ ","^2D",0,"^2E",168],["^ ","^2D",3,"^2E",168],["^ ","^2D",4,"^2E",168,"^O","G__37659"],["^ ","^2D",20,"^2E",168],["^ ","^2D",0,"^2E",169],["^ ","^2D",0,"^2E",171],["^ ","^2D",7,"^2E",171],["^ ","^2D",99,"^2E",171,"^O","G__37659"]],"~i24",[["^ ","^2D",15,"^2E",166,"^O","s"]],"~i26",[["^ ","^2D",46,"^2E",167,"^O","cljs.core/meta"]]],"~i88",["^ ","~i0",[["^ ","^2D",0,"^2E",177],["^ ","^2D",0,"^2E",177,"^O","cljs.spec.alpha/def-impl"],["^ ","^2D",25,"^2E",177],["^ ","^2D",127,"^2E",177]],"^37",[["^ ","^2D",208,"^2E",177,"^O","cljs.core/keyword?"]]],"~i89",["^ ","~i0",[["^ ","^2D",0,"^2E",178],["^ ","^2D",0,"^2E",178,"^O","cljs.spec.alpha/def-impl"],["^ ","^2D",25,"^2E",178],["^ ","^2D",128,"^2E",178],["^ ","^2D",143,"^2E",178],["^ ","^2D",225,"^2E",178],["^ ","^2D",283,"^2E",178],["^ ","^2D",356,"^2E",178],["^ ","^2D",408,"^2E",178]],"^2J",[["^ ","^2D",492,"^2E",178],["^ ","^2D",492,"^2E",178,"^O","cljs.spec.alpha/or-spec-impl"],["^ ","^2D",521,"^2E",178],["^ ","^2D",604,"^2E",178],["^ ","^2D",662,"^2E",178],["^ ","^2D",722,"^2E",178],["^ ","^2D",805,"^2E",178],["^ ","^2D",878,"^2E",178],["^ ","^2D",969,"^2E",178],["^ ","^2D",1106,"^2E",178]],"^2X",[["^ ","^2D",1052,"^2E",178,"^O","cljs.core/nil?"]],"~i42",[["^ ","^2D",1073,"^2E",178,"^O","fulcro.util/ident?"]]],"~i90",["^ ","~i0",[["^ ","^2D",0,"^2E",179],["^ ","^2D",0,"^2E",179,"^O","cljs.spec.alpha/def-impl"],["^ ","^2D",25,"^2E",179],["^ ","^2D",126,"^2E",179]],"^2J",[["^ ","^2D",207,"^2E",179,"^O","cljs.core/vector?"]]],"~i91",["^ ","~i0",[["^ ","^2D",0,"^2E",180],["^ ","^2D",0,"^2E",180,"^O","cljs.spec.alpha/def-impl"],["^ ","^2D",25,"^2E",180],["^ ","^2D",139,"^2E",180],["^ ","^2D",154,"^2E",180],["^ ","^2D",241,"^2E",180],["^ ","^2D",256,"^2E",180],["^ ","^2D",311,"^2E",180],["^ ","^2D",394,"^2E",180],["^ ","^2D",472,"^2E",180],["^ ","^2D",487,"^2E",180],["^ ","^2D",557,"^2E",180],["^ ","^2D",572,"^2E",180],["^ ","^2D",653,"^2E",180],["^ ","^2D",724,"^2E",180],["^ ","^2D",739,"^2E",180],["^ ","^2D",828,"^2E",180],["^ ","^2D",901,"^2E",180],["^ ","^2D",954,"^2E",180]],"~i21",[["^ ","^2D",1036,"^2E",180],["^ ","^2D",1036,"^2E",180,"^O","cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^2D",1093,"^2E",180],["^ ","^2D",1108,"^2E",180],["^ ","^2D",1163,"^2E",180],["^ ","^2D",1246,"^2E",180],["^ ","^2D",1324,"^2E",180],["^ ","^2D",1339,"^2E",180],["^ ","^2D",1392,"^2E",180],["^ ","^2D",1407,"^2E",180],["^ ","^2D",1472,"^2E",180],["^ ","^2D",1543,"^2E",180],["^ ","^2D",1558,"^2E",180],["^ ","^2D",1633,"^2E",180],["^ ","^2D",1706,"^2E",180],["^ ","^2D",1717,"^2E",180,"^O","p1__37669#"],["^ ","^2D",0,"^2E",181],["^ ","^2D",3,"^2E",182],["^ ","^2D",46,"^2E",182],["^ ","^2D",139,"^2E",182],["^ ","^2D",220,"^2E",182],["^ ","^2D",304,"^2E",182],["^ ","^2D",315,"^2E",182,"^O","G__37675"],["^ ","^2D",0,"^2E",183],["^ ","^2D",0,"^2E",183],["^ ","^2D",31,"^2E",183,"^O","G__37675"],["^ ","^2D",3,"^2E",184],["^ ","^2D",80,"^2E",184],["^ ","^2D",170,"^2E",184],["^ ","^2D",185,"^2E",184],["^ ","^2D",272,"^2E",184],["^ ","^2D",287,"^2E",184],["^ ","^2D",358,"^2E",184],["^ ","^2D",441,"^2E",184],["^ ","^2D",500,"^2E",184],["^ ","^2D",515,"^2E",184],["^ ","^2D",585,"^2E",184],["^ ","^2D",600,"^2E",184],["^ ","^2D",681,"^2E",184],["^ ","^2D",733,"^2E",184],["^ ","^2D",748,"^2E",184],["^ ","^2D",837,"^2E",184],["^ ","^2D",891,"^2E",184],["^ ","^2D",944,"^2E",184],["^ ","^2D",1034,"^2E",184]],"^30",[["^ ","^2D",0,"^2E",181]],"~i35",[["^ ","^2D",9,"^2E",181],["^ ","^2D",10,"^2E",181,"^O","p1__37669#"],["^ ","^2D",38,"^2E",181,"^O","cljs.core/Keyword"]],"^2R",[["^ ","^2D",62,"^2E",181],["^ ","^2D",90,"^2E",181,"^O","p1__37669#"]],"~i49",[["^ ","^2D",62,"^2E",181,"^O","fulcro.util/mutation?"]]],"~i92",["^ ","~i29",[["^ ","^2D",7,"^2E",183,"^O","cljs.core/vector?"],["^ ","^2D",56,"^2E",184,"^O","cljs.core/vector?"]]],"~i93",["^ ","~i0",[["^ ","^2D",0,"^2E",185],["^ ","^2D",0,"^2E",185,"^O","cljs.spec.alpha/def-impl"],["^ ","^2D",25,"^2E",185],["^ ","^2D",141,"^2E",185]],"^2P",[["^ ","^2D",223,"^2E",185,"^O","cljs.core/boolean?"]]],"~i94",["^ ","~i0",[["^ ","^2D",0,"^2E",186],["^ ","^2D",0,"^2E",186,"^O","cljs.spec.alpha/def-impl"],["^ ","^2D",25,"^2E",186],["^ ","^2D",131,"^2E",186],["^ ","^2D",146,"^2E",186],["^ ","^2D",235,"^2E",186],["^ ","^2D",346,"^2E",186]],"~i17",[["^ ","^2D",422,"^2E",186],["^ ","^2D",422,"^2E",186,"^O","cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4"],["^ ","^2D",479,"^2E",186],["^ ","^2D",494,"^2E",186],["^ ","^2D",582,"^2E",186],["^ ","^2D",645,"^2E",186],["^ ","^2D",703,"^2E",186],["^ ","^2D",703,"^2E",186,"^O","cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",760,"^2E",186],["^ ","^2D",843,"^2E",186],["^ ","^2D",954,"^2E",186],["^ ","^2D",1037,"^2E",186],["^ ","^2D",1189,"^2E",186],["^ ","^2D",1232,"^2E",186],["^ ","^2D",1285,"^2E",186],["^ ","^2D",1320,"^2E",186],["^ ","^2D",1413,"^2E",186],["^ ","^2D",1488,"^2E",186],["^ ","^2D",1572,"^2E",186],["^ ","^2D",1583,"^2E",186,"^O","G__37700"],["^ ","^2D",0,"^2E",187],["^ ","^2D",0,"^2E",187],["^ ","^2D",7,"^2E",187,"^O","cljs.core/map?"],["^ ","^2D",28,"^2E",187,"^O","G__37700"],["^ ","^2D",3,"^2E",188],["^ ","^2D",56,"^2E",188,"^O","cljs.core/map?"],["^ ","^2D",77,"^2E",188],["^ ","^2D",156,"^2E",188],["^ ","^2D",167,"^2E",188,"^O","i__15438__auto__"],["^ ","^2D",184,"^2E",188,"^O","v__15439__auto__"],["^ ","^2D",0,"^2E",189],["^ ","^2D",0,"^2E",189],["^ ","^2D",7,"^2E",189,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",51,"^2E",189,"^O","v__15439__auto__"],["^ ","^2D",68,"^2E",189],["^ ","^2D",3,"^2E",190],["^ ","^2D",97,"^2E",190],["^ ","^2D",102,"^2E",190],["^ ","^2D",192,"^2E",190],["^ ","^2D",207,"^2E",190],["^ ","^2D",296,"^2E",190],["^ ","^2D",407,"^2E",190],["^ ","^2D",491,"^2E",190]],"~i27",[["^ ","^2D",1120,"^2E",186,"^O","fulcro.client.primitives/tempid?"]],"^3E",[["^ ","^2D",1159,"^2E",186,"^O","cljs.core/any?"]]],"~i96",["^ ","~i0",[["^ ","^2D",0,"^2E",191],["^ ","^2D",39,"^2E",194],["^ ","^2D",0,"^2E",195]],"~i6",[["^ ","^2D",0,"^2E",194,"^O","fulcro.client.primitives/get-history"]]],"~i98",["^ ","~i3",[["^ ","^2D",86,"^2E",194,"^O","reconciler"]]],"~i99",["^ ","~i2",[["^ ","^2D",0,"^2E",195],["^ ","^2D",0,"^2E",196],["^ ","^2D",0,"^2E",198]],"~i8",[["^ ","^2D",20,"^2E",195,"^O","reconciler"]]],"~i100",["^ ","~i4",[["^ ","^2D",0,"^2E",196]],"~i5",[["^ ","^2D",7,"^2E",196,"^O","fulcro.client.impl.protocols/get-history"]],"^35",[["^ ","^2D",48,"^2E",196,"^O","reconciler"]]],"~i102",["^ ","~i0",[["^ ","^2D",0,"^2E",201],["^ ","^2D",48,"^2E",201],["^ ","^2D",104,"^2E",201,"^O","p__37713"],["^ ","^2D",0,"^2E",202],["^ ","^2D",0,"^2E",202],["^ ","^2D",4,"^2E",202,"^O","map__37714"],["^ ","^2D",17,"^2E",202,"^O","p__37713"],["^ ","^2D",4,"^2E",203,"^O","map__37714"],["^ ","^2D",21,"^2E",203],["^ ","^2D",23,"^2E",203],["^ ","^2D",25,"^2E",203],["^ ","^2D",27,"^2E",203],["^ ","^2D",28,"^2E",203,"^O","map__37714"],["^ ","^2D",42,"^2E",203],["^ ","^2D",50,"^2E",203],["^ ","^2D",52,"^2E",203],["^ ","^2D",54,"^2E",203],["^ ","^2D",55,"^2E",203],["^ ","^2D",55,"^2E",203,"^O","map__37714"],["^ ","^2D",104,"^2E",203],["^ ","^2D",115,"^2E",203],["^ ","^2D",116,"^2E",203,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",203],["^ ","^2D",148,"^2E",203,"^O","map__37714"],["^ ","^2D",179,"^2E",203],["^ ","^2D",184,"^2E",203],["^ ","^2D",191,"^2E",203],["^ ","^2D",199,"^2E",203],["^ ","^2D",199,"^2E",203,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",203,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",203,"^O","map__37714"],["^ ","^2D",276,"^2E",203,"^O","map__37714"],["^ ","^2D",15,"^2E",204],["^ ","^2D",15,"^2E",204,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",59,"^2E",204,"^O","map__37714"],["^ ","^2D",74,"^2E",204],["^ ","^2D",0,"^2E",205]],"~i6",[["^ ","^2D",0,"^2E",201,"^O","fulcro.client.primitives/add-basis-time*"]],"^30",[["^ ","^2D",4,"^2E",204,"^O","children"]],"^3A",[["^ ","^2D",113,"^2E",201,"^O","props"]],"^2R",[["^ ","^2D",119,"^2E",201,"^O","time"]]],"~i103",["^ ","~i2",[["^ ","^2D",0,"^2E",205]],"~i6",[["^ ","^2D",3,"^2E",205]],"~i7",[["^ ","^2D",3,"^2E",205,"^O","cljs.core/map?"]],"~i12",[["^ ","^2D",24,"^2E",205,"^O","props"]]],"~i104",["^ ","~i4",[["^ ","^2D",0,"^2E",206]],"~i8",[["^ ","^2D",3,"^2E",206]],"~i9",[["^ ","^2D",3,"^2E",206,"^O","cljs.core/seq"]],"^2G",[["^ ","^2D",17,"^2E",206,"^O","children"]]],"~i105",["^ ","~i6",[["^ ","^2D",0,"^2E",207],["^ ","^2D",0,"^2E",208]],"^3S",[["^ ","^2D",4,"^2E",207,"^O","children"]],"^3D",[["^ ","^2D",19,"^2E",207]],"~i25",[["^ ","^2D",21,"^2E",207],["^ ","^2D",66,"^2E",207]],"^3>",[["^ ","^2D",21,"^2E",207,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3E",[["^ ","^2D",121,"^2E",207],["^ ","^2D",121,"^2E",207],["^ ","^2D",204,"^2E",207]],"~i39",[["^ ","^2D",220,"^2E",207,"^O","children"]],"^2R",[["^ ","^2D",204,"^2E",207,"^O","cljs.core/first"]]],"~i106",["^ ","~i23",[["^ ","^2D",233,"^2E",207]],"^3=",[["^ ","^2D",233,"^2E",207,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^2X",[["^ ","^2D",279,"^2E",207,"^O","cljs.core/concat"]],"^3A",[["^ ","^2D",508,"^2E",207,"^O","children"]],"~i51",[["^ ","^2D",492,"^2E",207,"^O","cljs.core/first"]],"~i67",[["^ ","^2D",296,"^2E",207],["^ ","^2D",340,"^2E",207],["^ ","^2D",401,"^2E",207],["^ ","^2D",401,"^2E",207],["^ ","^2D",492,"^2E",207]],"~i68",[["^ ","^2D",296,"^2E",207,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]]],"~i107",["^ ","^3Y",[["^ ","^2D",521,"^2E",207,"^O","children"]]],"~i108",["^ ","^3S",[["^ ","^2D",57,"^2E",208]],"^2G",[["^ ","^2D",57,"^2E",208,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"^2O",[["^ ","^2D",102,"^2E",208,"^O","props"]]],"~i109",["^ ","~i14",[["^ ","^2D",108,"^2E",208]],"^2J",[["^ ","^2D",108,"^2E",208,"^O","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i110",["^ ","^37",[["^ ","^2D",153,"^2E",208],["^ ","^2D",200,"^2E",208],["^ ","^2D",18,"^2E",209,"^O","p1__37703#"],["^ ","^2D",0,"^2E",210]],"^3K",[["^ ","^2D",153,"^2E",208,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^3V",[["^ ","^2D",0,"^2E",210]],"^3>",[["^ ","^2D",7,"^2E",210,"^O","cljs.core/contains?"]],"^38",[["^ ","^2D",33,"^2E",210,"^O","props"]],"^3A",[["^ ","^2D",39,"^2E",210],["^ ","^2D",39,"^2E",210],["^ ","^2D",121,"^2E",210,"^O","p1__37703#"]]],"~i111",["^ ","^37",[["^ ","^2D",2,"^2E",212]],"^3K",[["^ ","^2D",2,"^2E",212,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^3D",[["^ ","^2D",46,"^2E",212],["^ ","^2D",18,"^2E",213,"^O","p__37718"],["^ ","^2D",0,"^2E",214],["^ ","^2D",0,"^2E",214],["^ ","^2D",4,"^2E",214,"^O","map__37719"],["^ ","^2D",17,"^2E",214,"^O","p__37718"],["^ ","^2D",4,"^2E",215,"^O","map__37719"],["^ ","^2D",21,"^2E",215],["^ ","^2D",23,"^2E",215],["^ ","^2D",25,"^2E",215],["^ ","^2D",27,"^2E",215],["^ ","^2D",28,"^2E",215,"^O","map__37719"],["^ ","^2D",42,"^2E",215],["^ ","^2D",50,"^2E",215],["^ ","^2D",52,"^2E",215],["^ ","^2D",54,"^2E",215],["^ ","^2D",55,"^2E",215],["^ ","^2D",55,"^2E",215,"^O","map__37719"],["^ ","^2D",104,"^2E",215],["^ ","^2D",115,"^2E",215],["^ ","^2D",116,"^2E",215,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",215],["^ ","^2D",148,"^2E",215,"^O","map__37719"],["^ ","^2D",179,"^2E",215],["^ ","^2D",184,"^2E",215],["^ ","^2D",191,"^2E",215],["^ ","^2D",199,"^2E",215],["^ ","^2D",199,"^2E",215,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",215,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",215,"^O","map__37719"],["^ ","^2D",276,"^2E",215,"^O","map__37719"],["^ ","^2D",10,"^2E",216,"^O","map__37719"],["^ ","^2D",10,"^2E",217],["^ ","^2D",10,"^2E",217,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",54,"^2E",217,"^O","map__37719"],["^ ","^2D",69,"^2E",217],["^ ","^2D",12,"^2E",218],["^ ","^2D",12,"^2E",218,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",56,"^2E",218,"^O","map__37719"],["^ ","^2D",71,"^2E",218],["^ ","^2D",0,"^2E",219]],"^2C",[["^ ","^2D",4,"^2E",217,"^O","key"]],"^2H",[["^ ","^2D",4,"^2E",218,"^O","query"]],"^3F",[["^ ","^2D",4,"^2E",216,"^O","ast"]]],"~i112",["^ ","^3Y",[["^ ","^2D",0,"^2E",219],["^ ","^2D",0,"^2E",237],["^ ","^2D",0,"^2E",237]],"^3H",[["^ ","^2D",4,"^2E",219,"^O","x"]],"~i33",[["^ ","^2D",8,"^2E",219]],"^2C",[["^ ","^2D",8,"^2E",219,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2H",[["^ ","^2D",52,"^2E",219,"^O","props"]],"^2N",[["^ ","^2D",58,"^2E",219,"^O","key"]]],"~i113",["^ ","^3H",[["^ ","^2D",4,"^2E",220,"^O","ast"]],"^48",[["^ ","^2D",14,"^2E",220],["^ ","^2D",31,"^2E",220,"^O","G__37725"],["^ ","^2D",4,"^2E",221,"^O","G__37725"],["^ ","^2D",19,"^2E",221],["^ ","^2D",260,"^2E",221,"^O","G__37725"],["^ ","^2D",0,"^2E",222],["^ ","^2D",0,"^2E",222],["^ ","^2D",0,"^2E",234,"^O","G__37725"]],"^2L",[["^ ","^2D",42,"^2E",220,"^O","ast"]]],"~i115",["^ ","^3E",[["^ ","^2D",21,"^2E",221],["^ ","^2D",66,"^2E",221]],"^38",[["^ ","^2D",21,"^2E",221,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2M",[["^ ","^2D",122,"^2E",221,"^O","query"]]],"~i116",["^ ","^3E",[["^ ","^2D",130,"^2E",221],["^ ","^2D",176,"^2E",221,"^O","G__37725"],["^ ","^2D",185,"^2E",221]],"^38",[["^ ","^2D",130,"^2E",221,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"~i52",[["^ ","^2D",246,"^2E",221,"^O","children"]]],"~i118",["^ ","^3E",[["^ ","^2D",3,"^2E",222]],"^38",[["^ ","^2D",3,"^2E",222,"^O","cljs.core/pos-int?"]],"~i45",[["^ ","^2D",28,"^2E",222,"^O","query"]]],"~i119",["^ ","^3E",[["^ ","^2D",0,"^2E",223],["^ ","^2D",53,"^2E",223,"^O","G__37725"],["^ ","^2D",66,"^2E",223]],"^38",[["^ ","^2D",7,"^2E",223,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^4<",[["^ ","^2D",127,"^2E",223],["^ ","^2D",172,"^2E",223],["^ ","^2D",18,"^2E",224,"^O","p1__37706#"],["^ ","^2D",0,"^2E",225]],"^2S",[["^ ","^2D",127,"^2E",223,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"~i59",[["^ ","^2D",0,"^2E",225],["^ ","^2D",4,"^2E",225,"^O","G__37726"],["^ ","^2D",15,"^2E",225,"^O","p1__37706#"],["^ ","^2D",0,"^2E",226],["^ ","^2D",0,"^2E",226],["^ ","^2D",0,"^2E",229,"^O","G__37726"]]],"~i120",["^ ","~i61",[["^ ","^2D",3,"^2E",226]],"^2W",[["^ ","^2D",3,"^2E",226,"^O","cljs.core/pos-int?"]],"^2[",[["^ ","^2D",28,"^2E",226],["^ ","^2D",28,"^2E",226],["^ ","^2D",114,"^2E",226,"^O","p1__37706#"]]],"~i121",["^ ","^4B",[["^ ","^2D",0,"^2E",227],["^ ","^2D",54,"^2E",227,"^O","G__37726"],["^ ","^2D",63,"^2E",227]],"^2W",[["^ ","^2D",7,"^2E",227,"^O","cljs.core.update.cljs$core$IFn$_invoke$arity$3"]],"^33",[["^ ","^2D",119,"^2E",227,"^O","cljs.core/dec"]]],"~i122",["^ ","~i54",[["^ ","^2D",1,"^2E",232,"^O","children"]]],"~i123",["^ ","^3>",[["^ ","^2D",90,"^2E",237,"^O","key"]]],"~i124",["^ ","^3>",[["^ ","^2D",94,"^2E",237]],"^2X",[["^ ","^2D",96,"^2E",237]],"^30",[["^ ","^2D",96,"^2E",237,"^O","cljs.core/sequential?"]],"^2M",[["^ ","^2D",124,"^2E",237,"^O","x"]]],"~i125",["^ ","~i28",[["^ ","^2D",128,"^2E",237],["^ ","^2D",173,"^2E",237],["^ ","^2D",18,"^2E",238,"^O","p1__37707#"],["^ ","^2D",0,"^2E",239]],"^3H",[["^ ","^2D",128,"^2E",237,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^3E",[["^ ","^2D",0,"^2E",239],["^ ","^2D",170,"^2E",239,"^O","p1__37707#"],["^ ","^2D",259,"^2E",239,"^O","p1__37707#"]],"^38",[["^ ","^2D",8,"^2E",239,"^O","fulcro.client.primitives/add-basis-time*"],["^ ","^2D",86,"^2E",239,"^O","fulcro.client.primitives/add-basis-time*"],["^ ","^2D",195,"^2E",239,"^O","fulcro.client.primitives/add-basis-time*"]],"^4<",[["^ ","^2D",162,"^2E",239,"^O","ast"],["^ ","^2D",251,"^2E",239,"^O","ast"]],"~i58",[["^ ","^2D",187,"^2E",239,"^O","time"],["^ ","^2D",276,"^2E",239,"^O","time"]],"^2Y",[["^ ","^2D",1,"^2E",241,"^O","x"]]],"~i126",["^ ","^4I",[["^ ","^2D",4,"^2E",241]],"^3H",[["^ ","^2D",5,"^2E",241,"^O","fulcro.client.primitives/add-basis-time*"],["^ ","^2D",83,"^2E",241,"^O","fulcro.client.primitives/add-basis-time*"],["^ ","^2D",177,"^2E",241,"^O","fulcro.client.primitives/add-basis-time*"]],"^4>",[["^ ","^2D",159,"^2E",241,"^O","ast"],["^ ","^2D",233,"^2E",241,"^O","ast"]],"^3F",[["^ ","^2D",167,"^2E",241,"^O","x"],["^ ","^2D",241,"^2E",241,"^O","x"]],"^3Z",[["^ ","^2D",169,"^2E",241,"^O","time"],["^ ","^2D",243,"^2E",241,"^O","time"]]],"~i127",["^ ","^44",[["^ ","^2D",3,"^2E",243,"^O","children"]]],"~i128",["^ ","^2I",[["^ ","^2D",0,"^2E",208],["^ ","^2D",33,"^2E",243]],"^2T",[["^ ","^2D",7,"^2E",208,"^O","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4"]],"^3D",[["^ ","^2D",17,"^2E",243,"^O","cljs.core/assoc"]],"^2C",[["^ ","^2D",133,"^2E",243,"^O","time"]]],"~i129",["^ ","~i6",[["^ ","^2D",0,"^2E",245],["^ ","^2D",79,"^2E",245]],"~i7",[["^ ","^2D",7,"^2E",245,"^O","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4"]],"^3K",[["^ ","^2D",57,"^2E",245,"^O","props"]],"^3Y",[["^ ","^2D",63,"^2E",245,"^O","cljs.core/assoc"]],"^38",[["^ ","^2D",179,"^2E",245,"^O","time"]]],"~i130",["^ ","~i4",[["^ ","^2D",0,"^2E",248,"^O","props"]]],"~i132",["^ ","~i0",[["^ ","^2D",0,"^2E",251],["^ ","^2D",0,"^2E",251],["^ ","^2D",42,"^2E",256],["^ ","^2D",92,"^2E",256,"^O","var_args"],["^ ","^2D",0,"^2E",257],["^ ","^2D",0,"^2E",257],["^ ","^2D",4,"^2E",257,"^O","G__37749"],["^ ","^2D",15,"^2E",257],["^ ","^2D",15,"^2E",257],["^ ","^2D",0,"^2E",258],["^ ","^2D",0,"^2E",258],["^ ","^2D",8,"^2E",258,"^O","G__37749"],["^ ","^2D",5,"^2E",259],["^ ","^2D",0,"^2E",260],["^ ","^2D",7,"^2E",260,"^O","fulcro.client.primitives/add-basis-time"],["^ ","^2D",77,"^2E",260],["^ ","^2D",78,"^2E",260],["^ ","^2D",88,"^2E",260],["^ ","^2D",94,"^2E",260],["^ ","^2D",95,"^2E",260],["^ ","^2D",105,"^2E",260],["^ ","^2D",5,"^2E",263],["^ ","^2D",0,"^2E",264],["^ ","^2D",7,"^2E",264,"^O","fulcro.client.primitives/add-basis-time"],["^ ","^2D",77,"^2E",264],["^ ","^2D",78,"^2E",264],["^ ","^2D",88,"^2E",264],["^ ","^2D",94,"^2E",264],["^ ","^2D",95,"^2E",264],["^ ","^2D",105,"^2E",264],["^ ","^2D",111,"^2E",264],["^ ","^2D",112,"^2E",264],["^ ","^2D",122,"^2E",264],["^ ","^2D",0,"^2E",268],["^ ","^2D",6,"^2E",268],["^ ","^2D",11,"^2E",268,"^O","js/Error"],["^ ","^2D",17,"^2E",268],["^ ","^2D",18,"^2E",268],["^ ","^2D",80,"^2E",268],["^ ","^2D",80,"^2E",268],["^ ","^2D",0,"^2E",273],["^ ","^2D",0,"^2E",273],["^ ","^2D",72,"^2E",273],["^ ","^2D",0,"^2E",274],["^ ","^2D",0,"^2E",283],["^ ","^2D",0,"^2E",283],["^ ","^2D",72,"^2E",283],["^ ","^2D",0,"^2E",284],["^ ","^2D",0,"^2E",287],["^ ","^2D",0,"^2E",287],["^ ","^2D",66,"^2E",287],["^ ","^2D",0,"^2E",289]],"~i6",[["^ ","^2D",0,"^2E",256,"^O","fulcro.client.primitives/add-basis-time"],["^ ","^2D",0,"^2E",273,"^O","fulcro.client.primitives/add-basis-time"],["^ ","^2D",0,"^2E",283,"^O","fulcro.client.primitives/add-basis-time"],["^ ","^2D",0,"^2E",287,"^O","fulcro.client.primitives/add-basis-time"]]],"~i136",["^ ","~i4",[["^ ","^2D",83,"^2E",273,"^O","props"]],"^2I",[["^ ","^2D",89,"^2E",273,"^O","time"]]],"~i137",["^ ","~i3",[["^ ","^2D",0,"^2E",274]],"~i4",[["^ ","^2D",7,"^2E",274,"^O","clojure.walk/prewalk"]],"^3S",[["^ ","^2D",28,"^2E",274],["^ ","^2D",0,"^2E",275]],"^3K",[["^ ","^2D",39,"^2E",274,"^O","ele"]]],"~i138",["^ ","^44",[["^ ","^2D",0,"^2E",275]],"^2O",[["^ ","^2D",3,"^2E",275]],"^35",[["^ ","^2D",3,"^2E",275,"^O","cljs.core/map?"]],"^3=",[["^ ","^2D",24,"^2E",275,"^O","ele"]]],"~i139",["^ ","^37",[["^ ","^2D",0,"^2E",276],["^ ","^2D",77,"^2E",276]],"^3K",[["^ ","^2D",7,"^2E",276,"^O","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4"]],"^3L",[["^ ","^2D",57,"^2E",276,"^O","ele"]],"^30",[["^ ","^2D",61,"^2E",276,"^O","cljs.core/assoc"]],"^2N",[["^ ","^2D",177,"^2E",276,"^O","time"]]],"~i140",["^ ","^37",[["^ ","^2D",0,"^2E",278,"^O","ele"]],"^2P",[["^ ","^2D",3,"^2E",280,"^O","props"]]],"~i141",["^ ","~i4",[["^ ","^2D",83,"^2E",283,"^O","q"]],"~i6",[["^ ","^2D",85,"^2E",283,"^O","props"]],"^3S",[["^ ","^2D",91,"^2E",283,"^O","time"]]],"~i142",["^ ","~i3",[["^ ","^2D",0,"^2E",284]],"~i4",[["^ ","^2D",7,"^2E",284,"^O","fulcro.client.primitives/add-basis-time*"]],"~i20",[["^ ","^2D",53,"^2E",284]],"^3D",[["^ ","^2D",54,"^2E",284,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",125,"^2E",284,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",199,"^2E",284,"^O","fulcro.client.primitives/query->ast"]],"~i32",[["^ ","^2D",194,"^2E",284,"^O","q"],["^ ","^2D",248,"^2E",284,"^O","q"]],"^3E",[["^ ","^2D",252,"^2E",284,"^O","props"]],"^2L",[["^ ","^2D",258,"^2E",284,"^O","time"]]],"~i144",["^ ","~i0",[["^ ","^2D",0,"^2E",289],["^ ","^2D",42,"^2E",292],["^ ","^2D",0,"^2E",293]],"~i6",[["^ ","^2D",0,"^2E",292,"^O","fulcro.client.primitives/get-basis-time"]]],"~i146",["^ ","~i3",[["^ ","^2D",92,"^2E",292,"^O","props"]],"^2I",[["^ ","^2D",0,"^2E",293],["^ ","^2D",4,"^2E",293,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",294],["^ ","^2D",0,"^2E",294],["^ ","^2D",20,"^2E",294,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",295,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",297]],"^44",[["^ ","^2D",23,"^2E",293],["^ ","^2D",23,"^2E",293],["^ ","^2D",153,"^2E",293]],"^2O",[["^ ","^2D",168,"^2E",293,"^O","props"]],"^3=",[["^ ","^2D",153,"^2E",293,"^O","cljs.core/meta"]]],"~i148",["^ ","~i0",[["^ ","^2D",0,"^2E",300],["^ ","^2D",44,"^2E",303],["^ ","^2D",0,"^2E",304]],"~i6",[["^ ","^2D",0,"^2E",303,"^O","fulcro.client.primitives/get-current-time"]]],"~i150",["^ ","~i3",[["^ ","^2D",96,"^2E",303,"^O","reconciler"]],"^2J",[["^ ","^2D",0,"^2E",304]],"^37",[["^ ","^2D",7,"^2E",304,"^O","fulcro.client.impl.protocols/basis-t"]],"^3>",[["^ ","^2D",44,"^2E",304,"^O","reconciler"]]],"~i152",["^ ","~i0",[["^ ","^2D",0,"^2E",306],["^ ","^2D",43,"^2E",309],["^ ","^2D",0,"^2E",310]],"~i6",[["^ ","^2D",0,"^2E",309,"^O","fulcro.client.primitives/collect-statics"]]],"~i154",["^ ","~i3",[["^ ","^2D",94,"^2E",309,"^O","dt"]]],"~i155",["^ ","~i2",[["^ ","^2D",0,"^2E",310],["^ ","^2D",22,"^2E",310],["^ ","^2D",0,"^2E",311],["^ ","^2D",22,"^2E",313],["^ ","^2D",0,"^2E",314],["^ ","^2D",0,"^2E",316]],"^4I",[["^ ","^2D",91,"^2E",310,"^O","forms"]]],"~i156",["^ ","^3S",[["^ ","^2D",0,"^2E",311]],"^2G",[["^ ","^2D",7,"^2E",311,"^O","cljs.core/split-with"]],"^3=",[["^ ","^2D",28,"^2E",311],["^ ","^2D",49,"^2E",311],["^ ","^2D",130,"^2E",311]],"^3V",[["^ ","^2D",28,"^2E",311,"^O","cljs.core/complement"]],"^2R",[["^ ","^2D",213,"^2E",311,"^O","forms"]]],"~i157",["^ ","^4I",[["^ ","^2D",91,"^2E",313,"^O","forms"]]],"~i158",["^ ","^3S",[["^ ","^2D",0,"^2E",314]],"^2G",[["^ ","^2D",7,"^2E",314,"^O","cljs.core/split-with"]],"^3=",[["^ ","^2D",28,"^2E",314]],"^3V",[["^ ","^2D",28,"^2E",314,"^O","cljs.core/complement"]],"^38",[["^ ","^2D",49,"^2E",314,"^O","cljs.core/symbol?"]],"^4>",[["^ ","^2D",74,"^2E",314,"^O","forms"]]],"~i159",["^ ","~i4",[["^ ","^2D",0,"^2E",316],["^ ","^2D",22,"^2E",317],["^ ","^2D",14,"^2E",318],["^ ","^2D",57,"^2E",318],["^ ","^2D",115,"^2E",318],["^ ","^2D",150,"^2E",318],["^ ","^2D",211,"^2E",318],["^ ","^2D",0,"^2E",320]],"^2T",[["^ ","^2D",4,"^2E",316,"^O","dt"]],"^44",[["^ ","^2D",13,"^2E",316]],"^2J",[["^ ","^2D",13,"^2E",316,"^O","cljs.core/seq"]],"^35",[["^ ","^2D",27,"^2E",316,"^O","dt"]],"^3Y",[["^ ","^2D",4,"^2E",317,"^O","dt'"]],"^2X",[["^ ","^2D",4,"^2E",318,"^O","statics"]]],"~i160",["^ ","~i6",[["^ ","^2D",0,"^2E",320],["^ ","^2D",0,"^2E",373],["^ ","^2D",50,"^2E",373],["^ ","^2D",115,"^2E",373]],"^2I",[["^ ","^2D",3,"^2E",320,"^O","dt"]]],"~i161",["^ ","~i8",[["^ ","^2D",0,"^2E",321],["^ ","^2D",4,"^2E",321,"^O","vec__37775"],["^ ","^2D",10,"^2E",322],["^ ","^2D",10,"^2E",322,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",322,"^O","vec__37775"],["^ ","^2D",65,"^2E",322],["^ ","^2D",69,"^2E",322],["^ ","^2D",4,"^2E",323,"^O","vec__37778"],["^ ","^2D",17,"^2E",323],["^ ","^2D",17,"^2E",323,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",61,"^2E",323,"^O","vec__37775"],["^ ","^2D",72,"^2E",323],["^ ","^2D",76,"^2E",323],["^ ","^2D",4,"^2E",324,"^O","seq__37779"],["^ ","^2D",17,"^2E",324],["^ ","^2D",17,"^2E",324,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",324,"^O","vec__37778"],["^ ","^2D",4,"^2E",325,"^O","first__37780"],["^ ","^2D",19,"^2E",325],["^ ","^2D",19,"^2E",325,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",325,"^O","seq__37779"],["^ ","^2D",4,"^2E",326,"^O","seq__37779"],["^ ","^2D",21,"^2E",326],["^ ","^2D",21,"^2E",326,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",326,"^O","seq__37779"],["^ ","^2D",8,"^2E",327,"^O","first__37780"],["^ ","^2D",4,"^2E",328,"^O","first__37780"],["^ ","^2D",23,"^2E",328],["^ ","^2D",23,"^2E",328,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",328,"^O","seq__37779"],["^ ","^2D",4,"^2E",329,"^O","seq__37779"],["^ ","^2D",21,"^2E",329],["^ ","^2D",21,"^2E",329,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",329,"^O","seq__37779"],["^ ","^2D",10,"^2E",330,"^O","first__37780"],["^ ","^2D",16,"^2E",331,"^O","seq__37779"],["^ ","^2D",11,"^2E",332,"^O","vec__37778"],["^ ","^2D",0,"^2E",334]],"^2J",[["^ ","^2D",4,"^2E",322,"^O","pre"]],"^4X",[["^ ","^2D",4,"^2E",327,"^O","_"]],"^2P",[["^ ","^2D",4,"^2E",330,"^O","sym"]],"^4I",[["^ ","^2D",4,"^2E",331,"^O","remaining"]],"^3A",[["^ ","^2D",4,"^2E",332,"^O","post"]],"^3F",[["^ ","^2D",17,"^2E",321]],"~i50",[["^ ","^2D",17,"^2E",321,"^O","split-on-static"]],"^2Z",[["^ ","^2D",33,"^2E",321,"^O","dt"]]],"~i162",["^ ","^44",[["^ ","^2D",4,"^2E",333,"^O","dt'"]],"^2O",[["^ ","^2D",26,"^2E",333]],"^35",[["^ ","^2D",26,"^2E",333,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^3=",[["^ ","^2D",71,"^2E",333,"^O","dt'"]],"^4I",[["^ ","^2D",87,"^2E",333,"^O","pre"]]],"~i163",["^ ","^2I",[["^ ","^2D",0,"^2E",334]],"^44",[["^ ","^2D",3,"^2E",334]],"^2J",[["^ ","^2D",3,"^2E",334,"^O","cljs.core/seq"]],"^35",[["^ ","^2D",17,"^2E",334,"^O","post"]]],"~i164",["^ ","^3S",[["^ ","^2D",0,"^2E",335],["^ ","^2D",0,"^2E",347],["^ ","^2D",0,"^2E",359]]],"~i165",["^ ","^44",[["^ ","^2D",3,"^2E",335],["^ ","^2D",52,"^2E",335]],"^2J",[["^ ","^2D",3,"^2E",335,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3K",[["^ ","^2D",48,"^2E",335,"^O","sym"]]],"~i166",["^ ","^44",[["^ ","^2D",0,"^2E",336],["^ ","^2D",4,"^2E",336,"^O","vec__37782"],["^ ","^2D",17,"^2E",337],["^ ","^2D",17,"^2E",337,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",61,"^2E",337,"^O","vec__37782"],["^ ","^2D",72,"^2E",337],["^ ","^2D",76,"^2E",337],["^ ","^2D",13,"^2E",338],["^ ","^2D",13,"^2E",338,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",57,"^2E",338,"^O","vec__37782"],["^ ","^2D",68,"^2E",338],["^ ","^2D",72,"^2E",338],["^ ","^2D",0,"^2E",339]],"^3D",[["^ ","^2D",4,"^2E",337,"^O","field-info"]],"^4Y",[["^ ","^2D",4,"^2E",338,"^O","dt"]],"^38",[["^ ","^2D",17,"^2E",336],["^ ","^2D",36,"^2E",336]],"^2F",[["^ ","^2D",17,"^2E",336,"^O","cljs.core/split-at"]],"^2R",[["^ ","^2D",40,"^2E",336,"^O","remaining"]]],"~i167",["^ ","^37",[["^ ","^2D",0,"^2E",339]],"^3Y",[["^ ","^2D",15,"^2E",339]],"^3=",[["^ ","^2D",15,"^2E",339,"^O","cljs.core/seq"]],"^4I",[["^ ","^2D",29,"^2E",339,"^O","dt"]],"^4Y",[["^ ","^2D",15,"^2E",340,"^O","dt'"]]],"~i168",["^ ","^2O",[["^ ","^2D",15,"^2E",341],["^ ","^2D",73,"^2E",341],["^ ","^2D",156,"^2E",341]],"^35",[["^ ","^2D",15,"^2E",341,"^O","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^3H",[["^ ","^2D",65,"^2E",341,"^O","statics"]],"~i47",[["^ ","^2D",222,"^2E",341,"^O","cljs.core/conj"]],"^4<",[["^ ","^2D",237,"^2E",341]],"^2S",[["^ ","^2D",237,"^2E",341,"^O","cljs.core/vec"]],"^2V",[["^ ","^2D",251,"^2E",341,"^O","field-info"]]],"~i169",["^ ","^44",[["^ ","^2D",3,"^2E",347],["^ ","^2D",19,"^2E",347,"^O","cljs.core/Symbol"]],"^3Y",[["^ ","^2D",4,"^2E",347,"^O","sym"]]],"~i170",["^ ","^44",[["^ ","^2D",0,"^2E",348],["^ ","^2D",4,"^2E",348,"^O","vec__37786"],["^ ","^2D",20,"^2E",349],["^ ","^2D",20,"^2E",349,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",64,"^2E",349,"^O","vec__37786"],["^ ","^2D",75,"^2E",349],["^ ","^2D",79,"^2E",349],["^ ","^2D",13,"^2E",350],["^ ","^2D",13,"^2E",350,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",57,"^2E",350,"^O","vec__37786"],["^ ","^2D",68,"^2E",350],["^ ","^2D",72,"^2E",350],["^ ","^2D",0,"^2E",351]],"^3D",[["^ ","^2D",4,"^2E",349,"^O","protocol-info"]],"^3E",[["^ ","^2D",4,"^2E",350,"^O","dt"]],"^3W",[["^ ","^2D",17,"^2E",348]],"^2K",[["^ ","^2D",17,"^2E",348,"^O","split-on-symbol"]],"~i56",[["^ ","^2D",33,"^2E",348,"^O","remaining"]]],"~i171",["^ ","^37",[["^ ","^2D",0,"^2E",351]],"^3Y",[["^ ","^2D",15,"^2E",351]],"^3=",[["^ ","^2D",15,"^2E",351,"^O","cljs.core/seq"]],"^4I",[["^ ","^2D",29,"^2E",351,"^O","dt"]],"^4Y",[["^ ","^2D",15,"^2E",352,"^O","dt'"]]],"~i172",["^ ","^2O",[["^ ","^2D",15,"^2E",353],["^ ","^2D",73,"^2E",353],["^ ","^2D",156,"^2E",353]],"^35",[["^ ","^2D",15,"^2E",353,"^O","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^3H",[["^ ","^2D",65,"^2E",353,"^O","statics"]]],"~i173",["^ ","^4X",[["^ ","^2D",225,"^2E",353,"^O","cljs.core/into"]],"^3V",[["^ ","^2D",240,"^2E",353],["^ ","^2D",287,"^2E",353]],"^3>",[["^ ","^2D",240,"^2E",353,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"^2C",[["^ ","^2D",370,"^2E",353,"^O","sym"]],"^3W",[["^ ","^2D",382,"^2E",353,"^O","protocol-info"]]],"~i174",["^ ","^4X",[["^ ","^2D",0,"^2E",359]]],"~i175",["^ ","^38",[["^ ","^2D",6,"^2E",359],["^ ","^2D",11,"^2E",359,"^O","js/Error"],["^ ","^2D",17,"^2E",359]]],"~i176",["^ ","^3S",[["^ ","^2D",0,"^2E",364],["^ ","^2D",15,"^2E",364]],"^3Y",[["^ ","^2D",15,"^2E",365,"^O","dt'"]],"^3L",[["^ ","^2D",15,"^2E",366,"^O","statics"]]],"~i177",["^ ","^2G",[["^ ","^2D",99,"^2E",373,"^O","dt'"]],"^3>",[["^ ","^2D",175,"^2E",373,"^O","statics"]]],"~i179",["^ ","~i0",[["^ ","^2D",0,"^2E",378],["^ ","^2D",44,"^2E",378],["^ ","^2D",0,"^2E",379]],"~i6",[["^ ","^2D",0,"^2E",378,"^O","fulcro.client.primitives/validate-statics"]],"^3=",[["^ ","^2D",96,"^2E",378,"^O","dt"]]],"~i180",["^ ","~i2",[["^ ","^2D",0,"^2E",379],["^ ","^2D",4,"^2E",379,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",382],["^ ","^2D",0,"^2E",382],["^ ","^2D",20,"^2E",382,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",383],["^ ","^2D",0,"^2E",383],["^ ","^2D",14,"^2E",383,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",384],["^ ","^2D",0,"^2E",386]],"^2G",[["^ ","^2D",4,"^2E",383,"^O","invalid"]],"^3D",[["^ ","^2D",25,"^2E",379],["^ ","^2D",40,"^2E",379],["^ ","^2D",121,"^2E",379],["^ ","^2D",135,"^2E",379]],"^2P",[["^ ","^2D",25,"^2E",379,"^O","cljs.core/some"]]],"~i181",["^ ","^3Y",[["^ ","^2D",163,"^2E",379],["^ ","^2D",207,"^2E",379],["^ ","^2D",218,"^2E",379,"^O","p1__37820#"],["^ ","^2D",0,"^2E",380]],"^3=",[["^ ","^2D",163,"^2E",379,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^3H",[["^ ","^2D",0,"^2E",380]],"^3W",[["^ ","^2D",22,"^2E",380],["^ ","^2D",73,"^2E",380],["^ ","^2D",118,"^2E",380,"^O","p1__37820#"],["^ ","^2D",146,"^2E",380]],"^2K",[["^ ","^2D",22,"^2E",380,"^O","clojure.string.split.cljs$core$IFn$_invoke$arity$2"]],"^5F",[["^ ","^2D",7,"^2E",380,"^O","cljs.core/last"]]],"~i182",["^ ","^3V",[["^ ","^2D",3,"^2E",381]],"^3>",[["^ ","^2D",3,"^2E",381,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^48",[["^ ","^2D",50,"^2E",381,"^O","cljs.core/symbol?"]],"^2L",[["^ ","^2D",74,"^2E",381,"^O","dt"]]],"~i183",["^ ","~i4",[["^ ","^2D",0,"^2E",384]]],"~i186",["^ ","^2J",[["^ ","^2D",6,"^2E",384],["^ ","^2D",11,"^2E",384,"^O","js/Error"]]],"~i187",["^ ","^3K",[["^ ","^2D",17,"^2E",384],["^ ","^2D",71,"^2E",384]],"^2P",[["^ ","^2D",62,"^2E",384,"^O","invalid"]]],"~i189",["^ ","~i0",[["^ ","^2D",0,"^2E",389],["^ ","^2D",42,"^2E",389],["^ ","^2D",82,"^2E",389],["^ ","^2D",159,"^2E",389],["^ ","^2D",244,"^2E",389],["^ ","^2D",329,"^2E",389],["^ ","^2D",413,"^2E",389],["^ ","^2D",512,"^2E",389],["^ ","^2D",608,"^2E",389],["^ ","^2D",709,"^2E",389],["^ ","^2D",799,"^2E",389],["^ ","^2D",899,"^2E",389],["^ ","^2D",990,"^2E",389],["^ ","^2D",1050,"^2E",389],["^ ","^2D",1138,"^2E",389],["^ ","^2D",1251,"^2E",389],["^ ","^2D",1337,"^2E",389],["^ ","^2D",1420,"^2E",389],["^ ","^2D",1485,"^2E",389],["^ ","^2D",1568,"^2E",389],["^ ","^2D",1633,"^2E",389],["^ ","^2D",1716,"^2E",389],["^ ","^2D",1773,"^2E",389],["^ ","^2D",1842,"^2E",389],["^ ","^2D",1919,"^2E",389],["^ ","^2D",2002,"^2E",389],["^ ","^2D",2059,"^2E",389],["^ ","^2D",2117,"^2E",389],["^ ","^2D",2182,"^2E",389],["^ ","^2D",2265,"^2E",389],["^ ","^2D",2330,"^2E",389],["^ ","^2D",2413,"^2E",389],["^ ","^2D",2470,"^2E",389],["^ ","^2D",2539,"^2E",389],["^ ","^2D",2616,"^2E",389],["^ ","^2D",2699,"^2E",389],["^ ","^2D",2756,"^2E",389],["^ ","^2D",2825,"^2E",389],["^ ","^2D",2901,"^2E",389],["^ ","^2D",2984,"^2E",389],["^ ","^2D",3049,"^2E",389],["^ ","^2D",3132,"^2E",389],["^ ","^2D",3189,"^2E",389],["^ ","^2D",3266,"^2E",389],["^ ","^2D",3349,"^2E",389],["^ ","^2D",3406,"^2E",389],["^ ","^2D",3475,"^2E",389],["^ ","^2D",3551,"^2E",389],["^ ","^2D",3634,"^2E",389],["^ ","^2D",3699,"^2E",389],["^ ","^2D",3782,"^2E",389],["^ ","^2D",3839,"^2E",389],["^ ","^2D",3908,"^2E",389],["^ ","^2D",3984,"^2E",389],["^ ","^2D",4067,"^2E",389],["^ ","^2D",4124,"^2E",389],["^ ","^2D",4201,"^2E",389],["^ ","^2D",4284,"^2E",389]],"~i5",[["^ ","^2D",0,"^2E",389,"^O","fulcro.client.primitives/lifecycle-sigs"]]],"~i207",["^ ","~i0",[["^ ","^2D",0,"^2E",390],["^ ","^2D",40,"^2E",390],["^ ","^2D",88,"^2E",390,"^O","p__37835"],["^ ","^2D",0,"^2E",391],["^ ","^2D",0,"^2E",391],["^ ","^2D",4,"^2E",391,"^O","vec__37838"],["^ ","^2D",17,"^2E",391,"^O","p__37835"],["^ ","^2D",11,"^2E",392],["^ ","^2D",11,"^2E",392,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",55,"^2E",392,"^O","vec__37838"],["^ ","^2D",66,"^2E",392],["^ ","^2D",70,"^2E",392],["^ ","^2D",10,"^2E",393],["^ ","^2D",10,"^2E",393,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",393,"^O","vec__37838"],["^ ","^2D",65,"^2E",393],["^ ","^2D",69,"^2E",393],["^ ","^2D",13,"^2E",394,"^O","vec__37838"],["^ ","^2D",0,"^2E",395]],"~i7",[["^ ","^2D",0,"^2E",390,"^O","fulcro.client.primitives/validate-sig"]],"^2P",[["^ ","^2D",4,"^2E",392,"^O","name"]],"^3L",[["^ ","^2D",4,"^2E",393,"^O","sig"]],"^3E",[["^ ","^2D",4,"^2E",394,"^O","method"]]],"~i208",["^ ","~i2",[["^ ","^2D",0,"^2E",395],["^ ","^2D",0,"^2E",396]],"~i8",[["^ ","^2D",4,"^2E",395,"^O","required-signature"]],"^3L",[["^ ","^2D",25,"^2E",395]],"^4I",[["^ ","^2D",25,"^2E",395,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^4Y",[["^ ","^2D",69,"^2E",395,"^O","fulcro.client.primitives/lifecycle-sigs"]],"^5C",[["^ ","^2D",109,"^2E",395,"^O","name"]]],"~i209",["^ ","~i4",[["^ ","^2D",0,"^2E",396],["^ ","^2D",0,"^2E",397],["^ ","^2D",0,"^2E",399],["^ ","^2D",0,"^2E",399],["^ ","^2D",6,"^2E",399],["^ ","^2D",11,"^2E",399,"^O","js/Error"],["^ ","^2D",17,"^2E",399],["^ ","^2D",18,"^2E",399],["^ ","^2D",298,"^2E",399],["^ ","^2D",303,"^2E",399]]],"~i210",["^ ","~i6",[["^ ","^2D",3,"^2E",396]],"^2I",[["^ ","^2D",4,"^2E",396]],"^2T",[["^ ","^2D",4,"^2E",396,"^O","cljs.core/count"]],"^3K",[["^ ","^2D",20,"^2E",396,"^O","required-signature"]],"^2F",[["^ ","^2D",43,"^2E",396]],"^2H",[["^ ","^2D",43,"^2E",396,"^O","cljs.core/count"]],"^2N",[["^ ","^2D",59,"^2E",396,"^O","sig"]]],"~i211",["^ ","~i6",[["^ ","^2D",80,"^2E",399],["^ ","^2D",81,"^2E",399],["^ ","^2D",156,"^2E",399],["^ ","^2D",213,"^2E",399]],"^38",[["^ ","^2D",150,"^2E",399,"^O","name"]],"^3F",[["^ ","^2D",208,"^2E",399,"^O","sig"]],"~i63",[["^ ","^2D",267,"^2E",399,"^O","required-signature"]]],"~i254",["^ ","~i0",[["^ ","^2D",0,"^2E",402],["^ ","^2D",0,"^2E",435]],"~i6",[["^ ","^2D",4,"^2E",402,"^O","will-receive-props"]],"^3V",[["^ ","^2D",31,"^2E",402],["^ ","^2D",42,"^2E",402,"^O","p__37938"],["^ ","^2D",0,"^2E",403],["^ ","^2D",0,"^2E",403],["^ ","^2D",4,"^2E",403,"^O","vec__37939"],["^ ","^2D",17,"^2E",403,"^O","p__37938"],["^ ","^2D",4,"^2E",404,"^O","seq__37940"],["^ ","^2D",17,"^2E",404],["^ ","^2D",17,"^2E",404,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",404,"^O","vec__37939"],["^ ","^2D",4,"^2E",405,"^O","first__37941"],["^ ","^2D",19,"^2E",405],["^ ","^2D",19,"^2E",405,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",405,"^O","seq__37940"],["^ ","^2D",4,"^2E",406,"^O","seq__37940"],["^ ","^2D",21,"^2E",406],["^ ","^2D",21,"^2E",406,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",406,"^O","seq__37940"],["^ ","^2D",11,"^2E",407,"^O","first__37941"],["^ ","^2D",4,"^2E",408,"^O","first__37941"],["^ ","^2D",23,"^2E",408],["^ ","^2D",23,"^2E",408,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",408,"^O","seq__37940"],["^ ","^2D",4,"^2E",409,"^O","seq__37940"],["^ ","^2D",21,"^2E",409],["^ ","^2D",21,"^2E",409,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",409,"^O","seq__37940"],["^ ","^2D",4,"^2E",410,"^O","vec__37942"],["^ ","^2D",17,"^2E",410,"^O","first__37941"],["^ ","^2D",12,"^2E",411],["^ ","^2D",12,"^2E",411,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",411,"^O","vec__37942"],["^ ","^2D",67,"^2E",411],["^ ","^2D",71,"^2E",411],["^ ","^2D",17,"^2E",412],["^ ","^2D",17,"^2E",412,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",61,"^2E",412,"^O","vec__37942"],["^ ","^2D",72,"^2E",412],["^ ","^2D",76,"^2E",412],["^ ","^2D",11,"^2E",413,"^O","vec__37942"],["^ ","^2D",11,"^2E",414,"^O","seq__37940"],["^ ","^2D",0,"^2E",415],["^ ","^2D",0,"^2E",415],["^ ","^2D",7,"^2E",415,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",56,"^2E",415],["^ ","^2D",56,"^2E",415,"^O","cljs.core/seq"],["^ ","^2D",70,"^2E",415],["^ ","^2D",70,"^2E",415,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",124,"^2E",415],["^ ","^2D",129,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",144,"^2E",415],["^ ","^2D",154,"^2E",415],["^ ","^2D",159,"^2E",415],["^ ","^2D",163,"^2E",415],["^ ","^2D",170,"^2E",415],["^ ","^2D",175,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",190,"^2E",415],["^ ","^2D",195,"^2E",415],["^ ","^2D",195,"^2E",415,"^O","cljs.core/vec"],["^ ","^2D",209,"^2E",415],["^ ","^2D",209,"^2E",415,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",258,"^2E",415],["^ ","^2D",258,"^2E",415,"^O","cljs.core/seq"],["^ ","^2D",272,"^2E",415],["^ ","^2D",272,"^2E",415,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",319,"^2E",415],["^ ","^2D",324,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",339,"^2E",415],["^ ","^2D",344,"^2E",415],["^ ","^2D",432,"^2E",415],["^ ","^2D",437,"^2E",415],["^ ","^2D",441,"^2E",415],["^ ","^2D",448,"^2E",415],["^ ","^2D",453,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",468,"^2E",415],["^ ","^2D",473,"^2E",415],["^ ","^2D",572,"^2E",415],["^ ","^2D",577,"^2E",415],["^ ","^2D",581,"^2E",415],["^ ","^2D",592,"^2E",415],["^ ","^2D",597,"^2E",415],["^ ","^2D",601,"^2E",415],["^ ","^2D",658,"^2E",415],["^ ","^2D",663,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",678,"^2E",415],["^ ","^2D",683,"^2E",415],["^ ","^2D",683,"^2E",415,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",732,"^2E",415],["^ ","^2D",732,"^2E",415,"^O","cljs.core/seq"],["^ ","^2D",746,"^2E",415],["^ ","^2D",746,"^2E",415,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",800,"^2E",415],["^ ","^2D",805,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",820,"^2E",415],["^ ","^2D",825,"^2E",415],["^ ","^2D",903,"^2E",415],["^ ","^2D",908,"^2E",415],["^ ","^2D",912,"^2E",415],["^ ","^2D",919,"^2E",415],["^ ","^2D",924,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",939,"^2E",415],["^ ","^2D",944,"^2E",415],["^ ","^2D",944,"^2E",415,"^O","cljs.core/vec"],["^ ","^2D",958,"^2E",415],["^ ","^2D",958,"^2E",415,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1007,"^2E",415],["^ ","^2D",1007,"^2E",415,"^O","cljs.core/seq"],["^ ","^2D",1021,"^2E",415],["^ ","^2D",1021,"^2E",415,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1075,"^2E",415],["^ ","^2D",1080,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",1095,"^2E",415],["^ ","^2D",1106,"^2E",415],["^ ","^2D",1111,"^2E",415],["^ ","^2D",1115,"^2E",415],["^ ","^2D",1122,"^2E",415],["^ ","^2D",1127,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",1142,"^2E",415],["^ ","^2D",1147,"^2E",415],["^ ","^2D",1235,"^2E",415],["^ ","^2D",1240,"^2E",415],["^ ","^2D",1244,"^2E",415],["^ ","^2D",1301,"^2E",415],["^ ","^2D",1306,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",1321,"^2E",415],["^ ","^2D",1337,"^2E",415],["^ ","^2D",1342,"^2E",415],["^ ","^2D",1346,"^2E",415],["^ ","^2D",1353,"^2E",415],["^ ","^2D",1358,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",1373,"^2E",415],["^ ","^2D",1378,"^2E",415],["^ ","^2D",1378,"^2E",415,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1427,"^2E",415],["^ ","^2D",1427,"^2E",415,"^O","cljs.core/seq"],["^ ","^2D",1441,"^2E",415],["^ ","^2D",1441,"^2E",415,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1495,"^2E",415],["^ ","^2D",1500,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",1515,"^2E",415],["^ ","^2D",1520,"^2E",415],["^ ","^2D",1597,"^2E",415],["^ ","^2D",1602,"^2E",415],["^ ","^2D",1606,"^2E",415],["^ ","^2D",1613,"^2E",415],["^ ","^2D",1618,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",1633,"^2E",415],["^ ","^2D",1638,"^2E",415],["^ ","^2D",1737,"^2E",415],["^ ","^2D",1742,"^2E",415],["^ ","^2D",1746,"^2E",415],["^ ","^2D",1803,"^2E",415],["^ ","^2D",1808,"^2E",415,"^O","cljs.core/List"],["^ ","^2D",1823,"^2E",415],["^ ","^2D",1828,"^2E",415],["^ ","^2D",1843,"^2E",415],["^ ","^2D",1848,"^2E",415],["^ ","^2D",1852,"^2E",415],["^ ","^2D",1867,"^2E",415],["^ ","^2D",1872,"^2E",415],["^ ","^2D",1876,"^2E",415],["^ ","^2D",1892,"^2E",415],["^ ","^2D",1897,"^2E",415],["^ ","^2D",1901,"^2E",415],["^ ","^2D",1971,"^2E",415],["^ ","^2D",1976,"^2E",415],["^ ","^2D",1980,"^2E",415]],"^30",[["^ ","^2D",4,"^2E",407,"^O","name"]],"^2F",[["^ ","^2D",4,"^2E",411,"^O","this"]],"^3A",[["^ ","^2D",4,"^2E",412,"^O","next-props"]],"^2V",[["^ ","^2D",4,"^2E",413,"^O","args"]],"~i65",[["^ ","^2D",4,"^2E",414,"^O","body"]]],"~i255",["^ ","^2X",[["^ ","^2D",149,"^2E",415,"^O","name"]]],"~i256",["^ ","^2F",[["^ ","^2D",1100,"^2E",415,"^O","this"]]],"~i257",["^ ","^2F",[["^ ","^2D",1326,"^2E",415,"^O","next-props"]]],"~i258",["^ ","^2C",[["^ ","^2D",1958,"^2E",415,"^O","body"]]],"~i259",["^ ","~i6",[["^ ","^2D",4,"^2E",417,"^O","will-update"]],"^3V",[["^ ","^2D",24,"^2E",417],["^ ","^2D",18,"^2E",418,"^O","p__37951"],["^ ","^2D",0,"^2E",419],["^ ","^2D",0,"^2E",419],["^ ","^2D",4,"^2E",419,"^O","vec__37952"],["^ ","^2D",17,"^2E",419,"^O","p__37951"],["^ ","^2D",4,"^2E",420,"^O","seq__37953"],["^ ","^2D",17,"^2E",420],["^ ","^2D",17,"^2E",420,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",420,"^O","vec__37952"],["^ ","^2D",4,"^2E",421,"^O","first__37954"],["^ ","^2D",19,"^2E",421],["^ ","^2D",19,"^2E",421,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",421,"^O","seq__37953"],["^ ","^2D",4,"^2E",422,"^O","seq__37953"],["^ ","^2D",21,"^2E",422],["^ ","^2D",21,"^2E",422,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",422,"^O","seq__37953"],["^ ","^2D",11,"^2E",423,"^O","first__37954"],["^ ","^2D",4,"^2E",424,"^O","first__37954"],["^ ","^2D",23,"^2E",424],["^ ","^2D",23,"^2E",424,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",424,"^O","seq__37953"],["^ ","^2D",4,"^2E",425,"^O","seq__37953"],["^ ","^2D",21,"^2E",425],["^ ","^2D",21,"^2E",425,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",425,"^O","seq__37953"],["^ ","^2D",4,"^2E",426,"^O","vec__37955"],["^ ","^2D",17,"^2E",426,"^O","first__37954"],["^ ","^2D",12,"^2E",427],["^ ","^2D",12,"^2E",427,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",427,"^O","vec__37955"],["^ ","^2D",67,"^2E",427],["^ ","^2D",71,"^2E",427],["^ ","^2D",17,"^2E",428],["^ ","^2D",17,"^2E",428,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",61,"^2E",428,"^O","vec__37955"],["^ ","^2D",72,"^2E",428],["^ ","^2D",76,"^2E",428],["^ ","^2D",17,"^2E",429],["^ ","^2D",17,"^2E",429,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",61,"^2E",429,"^O","vec__37955"],["^ ","^2D",72,"^2E",429],["^ ","^2D",76,"^2E",429],["^ ","^2D",11,"^2E",430,"^O","vec__37955"],["^ ","^2D",11,"^2E",431,"^O","seq__37953"],["^ ","^2D",0,"^2E",432],["^ ","^2D",0,"^2E",432],["^ ","^2D",7,"^2E",432,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",56,"^2E",432],["^ ","^2D",56,"^2E",432,"^O","cljs.core/seq"],["^ ","^2D",70,"^2E",432],["^ ","^2D",70,"^2E",432,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",124,"^2E",432],["^ ","^2D",129,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",144,"^2E",432],["^ ","^2D",154,"^2E",432],["^ ","^2D",159,"^2E",432],["^ ","^2D",163,"^2E",432],["^ ","^2D",170,"^2E",432],["^ ","^2D",175,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",190,"^2E",432],["^ ","^2D",195,"^2E",432],["^ ","^2D",195,"^2E",432,"^O","cljs.core/vec"],["^ ","^2D",209,"^2E",432],["^ ","^2D",209,"^2E",432,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",258,"^2E",432],["^ ","^2D",258,"^2E",432,"^O","cljs.core/seq"],["^ ","^2D",272,"^2E",432],["^ ","^2D",272,"^2E",432,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",326,"^2E",432],["^ ","^2D",331,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",346,"^2E",432],["^ ","^2D",351,"^2E",432],["^ ","^2D",438,"^2E",432],["^ ","^2D",443,"^2E",432],["^ ","^2D",447,"^2E",432],["^ ","^2D",454,"^2E",432],["^ ","^2D",459,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",474,"^2E",432],["^ ","^2D",479,"^2E",432],["^ ","^2D",578,"^2E",432],["^ ","^2D",583,"^2E",432],["^ ","^2D",587,"^2E",432],["^ ","^2D",644,"^2E",432],["^ ","^2D",649,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",664,"^2E",432],["^ ","^2D",669,"^2E",432],["^ ","^2D",768,"^2E",432],["^ ","^2D",773,"^2E",432],["^ ","^2D",777,"^2E",432],["^ ","^2D",793,"^2E",432],["^ ","^2D",798,"^2E",432],["^ ","^2D",802,"^2E",432],["^ ","^2D",859,"^2E",432],["^ ","^2D",864,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",879,"^2E",432],["^ ","^2D",884,"^2E",432],["^ ","^2D",884,"^2E",432,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",933,"^2E",432],["^ ","^2D",933,"^2E",432,"^O","cljs.core/seq"],["^ ","^2D",947,"^2E",432],["^ ","^2D",947,"^2E",432,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1001,"^2E",432],["^ ","^2D",1006,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",1021,"^2E",432],["^ ","^2D",1026,"^2E",432],["^ ","^2D",1104,"^2E",432],["^ ","^2D",1109,"^2E",432],["^ ","^2D",1113,"^2E",432],["^ ","^2D",1120,"^2E",432],["^ ","^2D",1125,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",1140,"^2E",432],["^ ","^2D",1145,"^2E",432],["^ ","^2D",1145,"^2E",432,"^O","cljs.core/vec"],["^ ","^2D",1159,"^2E",432],["^ ","^2D",1159,"^2E",432,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1208,"^2E",432],["^ ","^2D",1208,"^2E",432,"^O","cljs.core/seq"],["^ ","^2D",1222,"^2E",432],["^ ","^2D",1222,"^2E",432,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1276,"^2E",432],["^ ","^2D",1281,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",1296,"^2E",432],["^ ","^2D",1307,"^2E",432],["^ ","^2D",1312,"^2E",432],["^ ","^2D",1316,"^2E",432],["^ ","^2D",1323,"^2E",432],["^ ","^2D",1328,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",1343,"^2E",432],["^ ","^2D",1348,"^2E",432],["^ ","^2D",1435,"^2E",432],["^ ","^2D",1440,"^2E",432],["^ ","^2D",1444,"^2E",432],["^ ","^2D",1501,"^2E",432],["^ ","^2D",1506,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",1521,"^2E",432],["^ ","^2D",1537,"^2E",432],["^ ","^2D",1542,"^2E",432],["^ ","^2D",1546,"^2E",432],["^ ","^2D",1553,"^2E",432],["^ ","^2D",1558,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",1573,"^2E",432],["^ ","^2D",1578,"^2E",432],["^ ","^2D",1578,"^2E",432,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1627,"^2E",432],["^ ","^2D",1627,"^2E",432,"^O","cljs.core/seq"],["^ ","^2D",1641,"^2E",432],["^ ","^2D",1641,"^2E",432,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1695,"^2E",432],["^ ","^2D",1700,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",1715,"^2E",432],["^ ","^2D",1720,"^2E",432],["^ ","^2D",1797,"^2E",432],["^ ","^2D",1802,"^2E",432],["^ ","^2D",1806,"^2E",432],["^ ","^2D",1813,"^2E",432],["^ ","^2D",1818,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",1833,"^2E",432],["^ ","^2D",1838,"^2E",432],["^ ","^2D",1937,"^2E",432],["^ ","^2D",1942,"^2E",432],["^ ","^2D",1946,"^2E",432],["^ ","^2D",2003,"^2E",432],["^ ","^2D",2008,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",2023,"^2E",432],["^ ","^2D",2028,"^2E",432],["^ ","^2D",2043,"^2E",432],["^ ","^2D",2048,"^2E",432],["^ ","^2D",2052,"^2E",432],["^ ","^2D",2067,"^2E",432],["^ ","^2D",2072,"^2E",432],["^ ","^2D",2076,"^2E",432],["^ ","^2D",2083,"^2E",432],["^ ","^2D",2088,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",2103,"^2E",432],["^ ","^2D",2119,"^2E",432],["^ ","^2D",2124,"^2E",432],["^ ","^2D",2128,"^2E",432],["^ ","^2D",2135,"^2E",432],["^ ","^2D",2140,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",2155,"^2E",432],["^ ","^2D",2160,"^2E",432],["^ ","^2D",2160,"^2E",432,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2209,"^2E",432],["^ ","^2D",2209,"^2E",432,"^O","cljs.core/seq"],["^ ","^2D",2223,"^2E",432],["^ ","^2D",2223,"^2E",432,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2277,"^2E",432],["^ ","^2D",2282,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",2297,"^2E",432],["^ ","^2D",2302,"^2E",432],["^ ","^2D",2379,"^2E",432],["^ ","^2D",2384,"^2E",432],["^ ","^2D",2388,"^2E",432],["^ ","^2D",2395,"^2E",432],["^ ","^2D",2400,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",2415,"^2E",432],["^ ","^2D",2420,"^2E",432],["^ ","^2D",2519,"^2E",432],["^ ","^2D",2524,"^2E",432],["^ ","^2D",2528,"^2E",432],["^ ","^2D",2585,"^2E",432],["^ ","^2D",2590,"^2E",432,"^O","cljs.core/List"],["^ ","^2D",2605,"^2E",432],["^ ","^2D",2610,"^2E",432],["^ ","^2D",2625,"^2E",432],["^ ","^2D",2630,"^2E",432],["^ ","^2D",2634,"^2E",432],["^ ","^2D",2649,"^2E",432],["^ ","^2D",2654,"^2E",432],["^ ","^2D",2658,"^2E",432],["^ ","^2D",2674,"^2E",432],["^ ","^2D",2679,"^2E",432],["^ ","^2D",2683,"^2E",432],["^ ","^2D",2753,"^2E",432],["^ ","^2D",2758,"^2E",432],["^ ","^2D",2762,"^2E",432]],"^30",[["^ ","^2D",4,"^2E",423,"^O","name"]],"^2F",[["^ ","^2D",4,"^2E",427,"^O","this"]],"^3A",[["^ ","^2D",4,"^2E",428,"^O","next-props"]],"^2S",[["^ ","^2D",4,"^2E",429,"^O","next-state"]],"^40",[["^ ","^2D",4,"^2E",430,"^O","args"]],"^33",[["^ ","^2D",4,"^2E",431,"^O","body"]]],"~i260",["^ ","^2X",[["^ ","^2D",149,"^2E",432,"^O","name"]]],"~i261",["^ ","^2F",[["^ ","^2D",1301,"^2E",432,"^O","this"]]],"~i262",["^ ","^2F",[["^ ","^2D",1526,"^2E",432,"^O","next-props"]]],"~i263",["^ ","^2F",[["^ ","^2D",2108,"^2E",432,"^O","next-state"]]],"~i264",["^ ","^2C",[["^ ","^2D",2740,"^2E",432,"^O","body"]]],"~i265",["^ ","~i2",[["^ ","^2D",0,"^2E",435],["^ ","^2D",39,"^2E",435],["^ ","^2D",82,"^2E",435],["^ ","^2D",141,"^2E",435],["^ ","^2D",181,"^2E",435],["^ ","^2D",241,"^2E",435],["^ ","^2D",341,"^2E",435],["^ ","^2D",426,"^2E",435],["^ ","^2D",510,"^2E",435],["^ ","^2D",598,"^2E",435],["^ ","^2D",694,"^2E",435],["^ ","^2D",784,"^2E",435],["^ ","^2D",875,"^2E",435],["^ ","^2D",976,"^2E",435],["^ ","^2D",1089,"^2E",435],["^ ","^2D",3,"^2E",555],["^ ","^2D",63,"^2E",555],["^ ","^2D",63,"^2E",555,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",109,"^2E",555,"^O","cljs.core/array-map"],["^ ","^2D",129,"^2E",555],["^ ","^2D",129,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",178,"^2E",555],["^ ","^2D",178,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",192,"^2E",555],["^ ","^2D",192,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",246,"^2E",555],["^ ","^2D",251,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",266,"^2E",555],["^ ","^2D",271,"^2E",555],["^ ","^2D",362,"^2E",555],["^ ","^2D",367,"^2E",555],["^ ","^2D",371,"^2E",555],["^ ","^2D",378,"^2E",555],["^ ","^2D",383,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",398,"^2E",555],["^ ","^2D",403,"^2E",555],["^ ","^2D",403,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",452,"^2E",555],["^ ","^2D",452,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",466,"^2E",555],["^ ","^2D",466,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",513,"^2E",555],["^ ","^2D",518,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",533,"^2E",555],["^ ","^2D",538,"^2E",555],["^ ","^2D",538,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",552,"^2E",555],["^ ","^2D",552,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",601,"^2E",555],["^ ","^2D",601,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",615,"^2E",555],["^ ","^2D",615,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",669,"^2E",555],["^ ","^2D",674,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",689,"^2E",555],["^ ","^2D",694,"^2E",555],["^ ","^2D",782,"^2E",555],["^ ","^2D",787,"^2E",555],["^ ","^2D",791,"^2E",555],["^ ","^2D",798,"^2E",555],["^ ","^2D",803,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",818,"^2E",555],["^ ","^2D",823,"^2E",555],["^ ","^2D",923,"^2E",555],["^ ","^2D",928,"^2E",555],["^ ","^2D",932,"^2E",555],["^ ","^2D",989,"^2E",555],["^ ","^2D",994,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",1009,"^2E",555],["^ ","^2D",1014,"^2E",555],["^ ","^2D",1113,"^2E",555],["^ ","^2D",1118,"^2E",555],["^ ","^2D",1122,"^2E",555],["^ ","^2D",1138,"^2E",555],["^ ","^2D",1143,"^2E",555],["^ ","^2D",1147,"^2E",555],["^ ","^2D",1154,"^2E",555],["^ ","^2D",1159,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",1174,"^2E",555],["^ ","^2D",1179,"^2E",555],["^ ","^2D",1179,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1228,"^2E",555],["^ ","^2D",1228,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",1242,"^2E",555],["^ ","^2D",1242,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1296,"^2E",555],["^ ","^2D",1301,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",1316,"^2E",555],["^ ","^2D",1321,"^2E",555],["^ ","^2D",1374,"^2E",555],["^ ","^2D",1379,"^2E",555],["^ ","^2D",1383,"^2E",555],["^ ","^2D",1390,"^2E",555],["^ ","^2D",1395,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",1410,"^2E",555],["^ ","^2D",1415,"^2E",555],["^ ","^2D",1542,"^2E",555],["^ ","^2D",1547,"^2E",555],["^ ","^2D",1551,"^2E",555],["^ ","^2D",1608,"^2E",555],["^ ","^2D",1613,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",1628,"^2E",555],["^ ","^2D",1633,"^2E",555],["^ ","^2D",1638,"^2E",555],["^ ","^2D",1643,"^2E",555],["^ ","^2D",1647,"^2E",555],["^ ","^2D",1654,"^2E",555],["^ ","^2D",1659,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",1674,"^2E",555],["^ ","^2D",1679,"^2E",555],["^ ","^2D",1679,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1728,"^2E",555],["^ ","^2D",1728,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",1742,"^2E",555],["^ ","^2D",1742,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1796,"^2E",555],["^ ","^2D",1801,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",1816,"^2E",555],["^ ","^2D",1821,"^2E",555],["^ ","^2D",1899,"^2E",555],["^ ","^2D",1904,"^2E",555],["^ ","^2D",1908,"^2E",555],["^ ","^2D",1915,"^2E",555],["^ ","^2D",1920,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",1935,"^2E",555],["^ ","^2D",1940,"^2E",555],["^ ","^2D",1940,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",1954,"^2E",555],["^ ","^2D",1954,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2003,"^2E",555],["^ ","^2D",2003,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",2017,"^2E",555],["^ ","^2D",2017,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2071,"^2E",555],["^ ","^2D",2076,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",2091,"^2E",555],["^ ","^2D",2096,"^2E",555],["^ ","^2D",2200,"^2E",555],["^ ","^2D",2205,"^2E",555],["^ ","^2D",2209,"^2E",555],["^ ","^2D",2216,"^2E",555],["^ ","^2D",2221,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",2236,"^2E",555],["^ ","^2D",2241,"^2E",555],["^ ","^2D",2241,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2290,"^2E",555],["^ ","^2D",2290,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",2304,"^2E",555],["^ ","^2D",2304,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2358,"^2E",555],["^ ","^2D",2363,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",2378,"^2E",555],["^ ","^2D",2383,"^2E",555],["^ ","^2D",2434,"^2E",555],["^ ","^2D",2439,"^2E",555],["^ ","^2D",2443,"^2E",555],["^ ","^2D",2450,"^2E",555],["^ ","^2D",2455,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",2470,"^2E",555],["^ ","^2D",2475,"^2E",555],["^ ","^2D",2575,"^2E",555],["^ ","^2D",2580,"^2E",555],["^ ","^2D",2584,"^2E",555],["^ ","^2D",2641,"^2E",555],["^ ","^2D",2646,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",2661,"^2E",555],["^ ","^2D",2666,"^2E",555],["^ ","^2D",2781,"^2E",555],["^ ","^2D",2786,"^2E",555],["^ ","^2D",2790,"^2E",555],["^ ","^2D",2805,"^2E",555],["^ ","^2D",2810,"^2E",555],["^ ","^2D",2814,"^2E",555],["^ ","^2D",2871,"^2E",555],["^ ","^2D",2876,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",2891,"^2E",555],["^ ","^2D",2896,"^2E",555],["^ ","^2D",2996,"^2E",555],["^ ","^2D",3001,"^2E",555],["^ ","^2D",3005,"^2E",555],["^ ","^2D",3012,"^2E",555],["^ ","^2D",3017,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",3032,"^2E",555],["^ ","^2D",3037,"^2E",555],["^ ","^2D",3037,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3086,"^2E",555],["^ ","^2D",3086,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",3100,"^2E",555],["^ ","^2D",3100,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",3154,"^2E",555],["^ ","^2D",3159,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",3174,"^2E",555],["^ ","^2D",3179,"^2E",555],["^ ","^2D",3256,"^2E",555],["^ ","^2D",3261,"^2E",555],["^ ","^2D",3265,"^2E",555],["^ ","^2D",3272,"^2E",555],["^ ","^2D",3277,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",3292,"^2E",555],["^ ","^2D",3297,"^2E",555],["^ ","^2D",3397,"^2E",555],["^ ","^2D",3402,"^2E",555],["^ ","^2D",3406,"^2E",555],["^ ","^2D",3463,"^2E",555],["^ ","^2D",3468,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",3483,"^2E",555],["^ ","^2D",3488,"^2E",555],["^ ","^2D",3503,"^2E",555],["^ ","^2D",3508,"^2E",555],["^ ","^2D",3512,"^2E",555],["^ ","^2D",3527,"^2E",555],["^ ","^2D",3532,"^2E",555],["^ ","^2D",3536,"^2E",555],["^ ","^2D",3543,"^2E",555],["^ ","^2D",3548,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",3563,"^2E",555],["^ ","^2D",3568,"^2E",555],["^ ","^2D",3674,"^2E",555],["^ ","^2D",3679,"^2E",555],["^ ","^2D",3683,"^2E",555],["^ ","^2D",3690,"^2E",555],["^ ","^2D",3695,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",3710,"^2E",555],["^ ","^2D",3715,"^2E",555],["^ ","^2D",3715,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3764,"^2E",555],["^ ","^2D",3764,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",3778,"^2E",555],["^ ","^2D",3778,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",3825,"^2E",555],["^ ","^2D",3830,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",3845,"^2E",555],["^ ","^2D",3850,"^2E",555],["^ ","^2D",3956,"^2E",555],["^ ","^2D",3961,"^2E",555],["^ ","^2D",3965,"^2E",555],["^ ","^2D",3972,"^2E",555],["^ ","^2D",3977,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",3992,"^2E",555],["^ ","^2D",3997,"^2E",555],["^ ","^2D",4085,"^2E",555],["^ ","^2D",4090,"^2E",555],["^ ","^2D",4094,"^2E",555],["^ ","^2D",4104,"^2E",555],["^ ","^2D",4109,"^2E",555],["^ ","^2D",4113,"^2E",555],["^ ","^2D",4120,"^2E",555],["^ ","^2D",4125,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",4140,"^2E",555],["^ ","^2D",4145,"^2E",555],["^ ","^2D",4251,"^2E",555],["^ ","^2D",4256,"^2E",555],["^ ","^2D",4260,"^2E",555],["^ ","^2D",4267,"^2E",555],["^ ","^2D",4272,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",4287,"^2E",555],["^ ","^2D",4292,"^2E",555],["^ ","^2D",4292,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4341,"^2E",555],["^ ","^2D",4341,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",4355,"^2E",555],["^ ","^2D",4355,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",4409,"^2E",555],["^ ","^2D",4414,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",4429,"^2E",555],["^ ","^2D",4434,"^2E",555],["^ ","^2D",4513,"^2E",555],["^ ","^2D",4518,"^2E",555],["^ ","^2D",4522,"^2E",555],["^ ","^2D",4529,"^2E",555],["^ ","^2D",4534,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",4549,"^2E",555],["^ ","^2D",4554,"^2E",555],["^ ","^2D",4660,"^2E",555],["^ ","^2D",4665,"^2E",555],["^ ","^2D",4669,"^2E",555],["^ ","^2D",4726,"^2E",555],["^ ","^2D",4731,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",4746,"^2E",555],["^ ","^2D",4751,"^2E",555],["^ ","^2D",4851,"^2E",555],["^ ","^2D",4856,"^2E",555],["^ ","^2D",4860,"^2E",555],["^ ","^2D",4875,"^2E",555],["^ ","^2D",4880,"^2E",555],["^ ","^2D",4884,"^2E",555],["^ ","^2D",4891,"^2E",555],["^ ","^2D",4896,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",4911,"^2E",555],["^ ","^2D",4916,"^2E",555],["^ ","^2D",5015,"^2E",555],["^ ","^2D",5020,"^2E",555],["^ ","^2D",5024,"^2E",555],["^ ","^2D",5031,"^2E",555],["^ ","^2D",5036,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",5051,"^2E",555],["^ ","^2D",5056,"^2E",555],["^ ","^2D",5056,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",5105,"^2E",555],["^ ","^2D",5105,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",5119,"^2E",555],["^ ","^2D",5119,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",5173,"^2E",555],["^ ","^2D",5178,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",5193,"^2E",555],["^ ","^2D",5198,"^2E",555],["^ ","^2D",5275,"^2E",555],["^ ","^2D",5280,"^2E",555],["^ ","^2D",5284,"^2E",555],["^ ","^2D",5291,"^2E",555],["^ ","^2D",5296,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",5311,"^2E",555],["^ ","^2D",5316,"^2E",555],["^ ","^2D",5415,"^2E",555],["^ ","^2D",5420,"^2E",555],["^ ","^2D",5424,"^2E",555],["^ ","^2D",5481,"^2E",555],["^ ","^2D",5486,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",5501,"^2E",555],["^ ","^2D",5506,"^2E",555],["^ ","^2D",5521,"^2E",555],["^ ","^2D",5526,"^2E",555],["^ ","^2D",5530,"^2E",555],["^ ","^2D",5545,"^2E",555],["^ ","^2D",5550,"^2E",555],["^ ","^2D",5554,"^2E",555],["^ ","^2D",5561,"^2E",555],["^ ","^2D",5566,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",5581,"^2E",555],["^ ","^2D",5586,"^2E",555],["^ ","^2D",5694,"^2E",555],["^ ","^2D",5699,"^2E",555],["^ ","^2D",5703,"^2E",555],["^ ","^2D",5710,"^2E",555],["^ ","^2D",5715,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",5730,"^2E",555],["^ ","^2D",5735,"^2E",555],["^ ","^2D",5735,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",5784,"^2E",555],["^ ","^2D",5784,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",5798,"^2E",555],["^ ","^2D",5798,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",5852,"^2E",555],["^ ","^2D",5857,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",5872,"^2E",555],["^ ","^2D",5877,"^2E",555],["^ ","^2D",5955,"^2E",555],["^ ","^2D",5960,"^2E",555],["^ ","^2D",5964,"^2E",555],["^ ","^2D",5971,"^2E",555],["^ ","^2D",5976,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",5991,"^2E",555],["^ ","^2D",5996,"^2E",555],["^ ","^2D",5996,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",6045,"^2E",555],["^ ","^2D",6045,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",6059,"^2E",555],["^ ","^2D",6059,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",6113,"^2E",555],["^ ","^2D",6118,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",6133,"^2E",555],["^ ","^2D",6138,"^2E",555],["^ ","^2D",6191,"^2E",555],["^ ","^2D",6196,"^2E",555],["^ ","^2D",6200,"^2E",555],["^ ","^2D",6207,"^2E",555],["^ ","^2D",6212,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",6227,"^2E",555],["^ ","^2D",6232,"^2E",555],["^ ","^2D",6320,"^2E",555],["^ ","^2D",6325,"^2E",555],["^ ","^2D",6329,"^2E",555],["^ ","^2D",6386,"^2E",555],["^ ","^2D",6391,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",6406,"^2E",555],["^ ","^2D",6411,"^2E",555],["^ ","^2D",6472,"^2E",555],["^ ","^2D",6477,"^2E",555],["^ ","^2D",6481,"^2E",555],["^ ","^2D",6496,"^2E",555],["^ ","^2D",6501,"^2E",555],["^ ","^2D",6505,"^2E",555],["^ ","^2D",6562,"^2E",555],["^ ","^2D",6567,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",6582,"^2E",555],["^ ","^2D",6587,"^2E",555],["^ ","^2D",6587,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",6636,"^2E",555],["^ ","^2D",6636,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",6650,"^2E",555],["^ ","^2D",6650,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",6704,"^2E",555],["^ ","^2D",6709,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",6724,"^2E",555],["^ ","^2D",6729,"^2E",555],["^ ","^2D",6808,"^2E",555],["^ ","^2D",6813,"^2E",555],["^ ","^2D",6817,"^2E",555],["^ ","^2D",6824,"^2E",555],["^ ","^2D",6829,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",6844,"^2E",555],["^ ","^2D",6849,"^2E",555],["^ ","^2D",6849,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",6898,"^2E",555],["^ ","^2D",6898,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",6912,"^2E",555],["^ ","^2D",6912,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",6966,"^2E",555],["^ ","^2D",6971,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",6986,"^2E",555],["^ ","^2D",6991,"^2E",555],["^ ","^2D",7068,"^2E",555],["^ ","^2D",7073,"^2E",555],["^ ","^2D",7077,"^2E",555],["^ ","^2D",7084,"^2E",555],["^ ","^2D",7089,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",7104,"^2E",555],["^ ","^2D",7109,"^2E",555],["^ ","^2D",7109,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",7158,"^2E",555],["^ ","^2D",7158,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",7172,"^2E",555],["^ ","^2D",7172,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",7226,"^2E",555],["^ ","^2D",7231,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",7246,"^2E",555],["^ ","^2D",7251,"^2E",555],["^ ","^2D",7302,"^2E",555],["^ ","^2D",7307,"^2E",555],["^ ","^2D",7311,"^2E",555],["^ ","^2D",7318,"^2E",555],["^ ","^2D",7323,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",7338,"^2E",555],["^ ","^2D",7343,"^2E",555],["^ ","^2D",7431,"^2E",555],["^ ","^2D",7436,"^2E",555],["^ ","^2D",7440,"^2E",555],["^ ","^2D",7497,"^2E",555],["^ ","^2D",7502,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",7517,"^2E",555],["^ ","^2D",7522,"^2E",555],["^ ","^2D",7583,"^2E",555],["^ ","^2D",7588,"^2E",555],["^ ","^2D",7592,"^2E",555],["^ ","^2D",7607,"^2E",555],["^ ","^2D",7612,"^2E",555],["^ ","^2D",7616,"^2E",555],["^ ","^2D",7673,"^2E",555],["^ ","^2D",7678,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",7693,"^2E",555],["^ ","^2D",7698,"^2E",555],["^ ","^2D",7713,"^2E",555],["^ ","^2D",7718,"^2E",555],["^ ","^2D",7722,"^2E",555],["^ ","^2D",7737,"^2E",555],["^ ","^2D",7742,"^2E",555],["^ ","^2D",7746,"^2E",555],["^ ","^2D",7803,"^2E",555],["^ ","^2D",7808,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",7823,"^2E",555],["^ ","^2D",7828,"^2E",555],["^ ","^2D",7927,"^2E",555],["^ ","^2D",7932,"^2E",555],["^ ","^2D",7936,"^2E",555],["^ ","^2D",7951,"^2E",555],["^ ","^2D",7956,"^2E",555],["^ ","^2D",7960,"^2E",555],["^ ","^2D",7975,"^2E",555],["^ ","^2D",7980,"^2E",555],["^ ","^2D",7984,"^2E",555],["^ ","^2D",7991,"^2E",555],["^ ","^2D",7996,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",8011,"^2E",555],["^ ","^2D",8016,"^2E",555],["^ ","^2D",8129,"^2E",555],["^ ","^2D",8134,"^2E",555],["^ ","^2D",8138,"^2E",555],["^ ","^2D",8145,"^2E",555],["^ ","^2D",8150,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",8165,"^2E",555],["^ ","^2D",8170,"^2E",555],["^ ","^2D",8170,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",8219,"^2E",555],["^ ","^2D",8219,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",8233,"^2E",555],["^ ","^2D",8233,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",8287,"^2E",555],["^ ","^2D",8292,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",8307,"^2E",555],["^ ","^2D",8312,"^2E",555],["^ ","^2D",8391,"^2E",555],["^ ","^2D",8396,"^2E",555],["^ ","^2D",8400,"^2E",555],["^ ","^2D",8407,"^2E",555],["^ ","^2D",8412,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",8427,"^2E",555],["^ ","^2D",8432,"^2E",555],["^ ","^2D",8432,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",8481,"^2E",555],["^ ","^2D",8481,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",8495,"^2E",555],["^ ","^2D",8495,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",8549,"^2E",555],["^ ","^2D",8554,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",8569,"^2E",555],["^ ","^2D",8574,"^2E",555],["^ ","^2D",8627,"^2E",555],["^ ","^2D",8632,"^2E",555],["^ ","^2D",8636,"^2E",555],["^ ","^2D",8643,"^2E",555],["^ ","^2D",8648,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",8663,"^2E",555],["^ ","^2D",8668,"^2E",555],["^ ","^2D",8756,"^2E",555],["^ ","^2D",8761,"^2E",555],["^ ","^2D",8765,"^2E",555],["^ ","^2D",8822,"^2E",555],["^ ","^2D",8827,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",8842,"^2E",555],["^ ","^2D",8847,"^2E",555],["^ ","^2D",8955,"^2E",555],["^ ","^2D",8960,"^2E",555],["^ ","^2D",8964,"^2E",555],["^ ","^2D",8971,"^2E",555],["^ ","^2D",8976,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",8991,"^2E",555],["^ ","^2D",8996,"^2E",555],["^ ","^2D",9111,"^2E",555],["^ ","^2D",9116,"^2E",555],["^ ","^2D",9120,"^2E",555],["^ ","^2D",9135,"^2E",555],["^ ","^2D",9140,"^2E",555],["^ ","^2D",9144,"^2E",555],["^ ","^2D",9201,"^2E",555],["^ ","^2D",9206,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",9221,"^2E",555],["^ ","^2D",9226,"^2E",555],["^ ","^2D",9330,"^2E",555],["^ ","^2D",9335,"^2E",555],["^ ","^2D",9339,"^2E",555],["^ ","^2D",9354,"^2E",555],["^ ","^2D",9359,"^2E",555],["^ ","^2D",9363,"^2E",555],["^ ","^2D",9379,"^2E",555],["^ ","^2D",9384,"^2E",555],["^ ","^2D",9388,"^2E",555],["^ ","^2D",9445,"^2E",555],["^ ","^2D",9450,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",9465,"^2E",555],["^ ","^2D",9470,"^2E",555],["^ ","^2D",9470,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",9519,"^2E",555],["^ ","^2D",9519,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",9533,"^2E",555],["^ ","^2D",9533,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",9587,"^2E",555],["^ ","^2D",9592,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",9607,"^2E",555],["^ ","^2D",9612,"^2E",555],["^ ","^2D",9688,"^2E",555],["^ ","^2D",9693,"^2E",555],["^ ","^2D",9697,"^2E",555],["^ ","^2D",9704,"^2E",555],["^ ","^2D",9709,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",9724,"^2E",555],["^ ","^2D",9729,"^2E",555],["^ ","^2D",9835,"^2E",555],["^ ","^2D",9840,"^2E",555],["^ ","^2D",9844,"^2E",555],["^ ","^2D",9901,"^2E",555],["^ ","^2D",9906,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",9921,"^2E",555],["^ ","^2D",9926,"^2E",555],["^ ","^2D",10034,"^2E",555],["^ ","^2D",10039,"^2E",555],["^ ","^2D",10043,"^2E",555],["^ ","^2D",10050,"^2E",555],["^ ","^2D",10055,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",10070,"^2E",555],["^ ","^2D",10075,"^2E",555],["^ ","^2D",10188,"^2E",555],["^ ","^2D",10193,"^2E",555],["^ ","^2D",10197,"^2E",555],["^ ","^2D",10212,"^2E",555],["^ ","^2D",10217,"^2E",555],["^ ","^2D",10221,"^2E",555],["^ ","^2D",10236,"^2E",555],["^ ","^2D",10241,"^2E",555],["^ ","^2D",10245,"^2E",555],["^ ","^2D",10260,"^2E",555],["^ ","^2D",10265,"^2E",555],["^ ","^2D",10269,"^2E",555],["^ ","^2D",10279,"^2E",555],["^ ","^2D",10284,"^2E",555],["^ ","^2D",10288,"^2E",555],["^ ","^2D",10345,"^2E",555],["^ ","^2D",10350,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",10365,"^2E",555],["^ ","^2D",10370,"^2E",555],["^ ","^2D",10455,"^2E",555],["^ ","^2D",10460,"^2E",555],["^ ","^2D",10464,"^2E",555],["^ ","^2D",10471,"^2E",555],["^ ","^2D",10476,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",10491,"^2E",555],["^ ","^2D",10496,"^2E",555],["^ ","^2D",10496,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",10545,"^2E",555],["^ ","^2D",10545,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",10559,"^2E",555],["^ ","^2D",10559,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",10606,"^2E",555],["^ ","^2D",10611,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",10626,"^2E",555],["^ ","^2D",10631,"^2E",555],["^ ","^2D",10631,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",10645,"^2E",555],["^ ","^2D",10645,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",10694,"^2E",555],["^ ","^2D",10694,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",10708,"^2E",555],["^ ","^2D",10708,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",10762,"^2E",555],["^ ","^2D",10767,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",10782,"^2E",555],["^ ","^2D",10787,"^2E",555],["^ ","^2D",10875,"^2E",555],["^ ","^2D",10880,"^2E",555],["^ ","^2D",10884,"^2E",555],["^ ","^2D",10891,"^2E",555],["^ ","^2D",10896,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",10911,"^2E",555],["^ ","^2D",10916,"^2E",555],["^ ","^2D",11016,"^2E",555],["^ ","^2D",11021,"^2E",555],["^ ","^2D",11025,"^2E",555],["^ ","^2D",11082,"^2E",555],["^ ","^2D",11087,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",11102,"^2E",555],["^ ","^2D",11107,"^2E",555],["^ ","^2D",11207,"^2E",555],["^ ","^2D",11212,"^2E",555],["^ ","^2D",11216,"^2E",555],["^ ","^2D",11232,"^2E",555],["^ ","^2D",11237,"^2E",555],["^ ","^2D",11241,"^2E",555],["^ ","^2D",11248,"^2E",555],["^ ","^2D",11253,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",11268,"^2E",555],["^ ","^2D",11273,"^2E",555],["^ ","^2D",11273,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",11322,"^2E",555],["^ ","^2D",11322,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",11336,"^2E",555],["^ ","^2D",11336,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",11390,"^2E",555],["^ ","^2D",11395,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",11410,"^2E",555],["^ ","^2D",11415,"^2E",555],["^ ","^2D",11493,"^2E",555],["^ ","^2D",11498,"^2E",555],["^ ","^2D",11502,"^2E",555],["^ ","^2D",11509,"^2E",555],["^ ","^2D",11514,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",11529,"^2E",555],["^ ","^2D",11534,"^2E",555],["^ ","^2D",11534,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",11548,"^2E",555],["^ ","^2D",11548,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",11597,"^2E",555],["^ ","^2D",11597,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",11611,"^2E",555],["^ ","^2D",11611,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",11658,"^2E",555],["^ ","^2D",11663,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",11678,"^2E",555],["^ ","^2D",11683,"^2E",555],["^ ","^2D",11783,"^2E",555],["^ ","^2D",11788,"^2E",555],["^ ","^2D",11792,"^2E",555],["^ ","^2D",11799,"^2E",555],["^ ","^2D",11804,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",11819,"^2E",555],["^ ","^2D",11824,"^2E",555],["^ ","^2D",11824,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",11873,"^2E",555],["^ ","^2D",11873,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",11887,"^2E",555],["^ ","^2D",11887,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",11941,"^2E",555],["^ ","^2D",11946,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",11961,"^2E",555],["^ ","^2D",11966,"^2E",555],["^ ","^2D",12043,"^2E",555],["^ ","^2D",12048,"^2E",555],["^ ","^2D",12052,"^2E",555],["^ ","^2D",12059,"^2E",555],["^ ","^2D",12064,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",12079,"^2E",555],["^ ","^2D",12084,"^2E",555],["^ ","^2D",12184,"^2E",555],["^ ","^2D",12189,"^2E",555],["^ ","^2D",12193,"^2E",555],["^ ","^2D",12250,"^2E",555],["^ ","^2D",12255,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",12270,"^2E",555],["^ ","^2D",12275,"^2E",555],["^ ","^2D",12290,"^2E",555],["^ ","^2D",12295,"^2E",555],["^ ","^2D",12299,"^2E",555],["^ ","^2D",12314,"^2E",555],["^ ","^2D",12319,"^2E",555],["^ ","^2D",12323,"^2E",555],["^ ","^2D",12334,"^2E",555],["^ ","^2D",12339,"^2E",555],["^ ","^2D",12343,"^2E",555],["^ ","^2D",12400,"^2E",555],["^ ","^2D",12405,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",12420,"^2E",555],["^ ","^2D",12425,"^2E",555],["^ ","^2D",12425,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",12474,"^2E",555],["^ ","^2D",12474,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",12488,"^2E",555],["^ ","^2D",12488,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",12542,"^2E",555],["^ ","^2D",12547,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",12562,"^2E",555],["^ ","^2D",12567,"^2E",555],["^ ","^2D",12645,"^2E",555],["^ ","^2D",12650,"^2E",555],["^ ","^2D",12654,"^2E",555],["^ ","^2D",12661,"^2E",555],["^ ","^2D",12666,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",12681,"^2E",555],["^ ","^2D",12686,"^2E",555],["^ ","^2D",12686,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",12735,"^2E",555],["^ ","^2D",12735,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",12749,"^2E",555],["^ ","^2D",12749,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",12803,"^2E",555],["^ ","^2D",12808,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",12823,"^2E",555],["^ ","^2D",12828,"^2E",555],["^ ","^2D",12916,"^2E",555],["^ ","^2D",12921,"^2E",555],["^ ","^2D",12925,"^2E",555],["^ ","^2D",12932,"^2E",555],["^ ","^2D",12937,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",12952,"^2E",555],["^ ","^2D",12957,"^2E",555],["^ ","^2D",13064,"^2E",555],["^ ","^2D",13069,"^2E",555],["^ ","^2D",13073,"^2E",555],["^ ","^2D",13130,"^2E",555],["^ ","^2D",13135,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",13150,"^2E",555],["^ ","^2D",13155,"^2E",555],["^ ","^2D",13243,"^2E",555],["^ ","^2D",13248,"^2E",555],["^ ","^2D",13252,"^2E",555],["^ ","^2D",13267,"^2E",555],["^ ","^2D",13272,"^2E",555],["^ ","^2D",13276,"^2E",555],["^ ","^2D",13333,"^2E",555],["^ ","^2D",13338,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",13353,"^2E",555],["^ ","^2D",13358,"^2E",555],["^ ","^2D",13358,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",13407,"^2E",555],["^ ","^2D",13407,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",13421,"^2E",555],["^ ","^2D",13421,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",13475,"^2E",555],["^ ","^2D",13480,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",13495,"^2E",555],["^ ","^2D",13500,"^2E",555],["^ ","^2D",13578,"^2E",555],["^ ","^2D",13583,"^2E",555],["^ ","^2D",13587,"^2E",555],["^ ","^2D",13594,"^2E",555],["^ ","^2D",13599,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",13614,"^2E",555],["^ ","^2D",13619,"^2E",555],["^ ","^2D",13619,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",13633,"^2E",555],["^ ","^2D",13633,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",13682,"^2E",555],["^ ","^2D",13682,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",13696,"^2E",555],["^ ","^2D",13696,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",13750,"^2E",555],["^ ","^2D",13755,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",13770,"^2E",555],["^ ","^2D",13775,"^2E",555],["^ ","^2D",13865,"^2E",555],["^ ","^2D",13870,"^2E",555],["^ ","^2D",13874,"^2E",555],["^ ","^2D",13881,"^2E",555],["^ ","^2D",13886,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",13901,"^2E",555],["^ ","^2D",13906,"^2E",555],["^ ","^2D",13906,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",13955,"^2E",555],["^ ","^2D",13955,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",13969,"^2E",555],["^ ","^2D",13969,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",14023,"^2E",555],["^ ","^2D",14028,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",14043,"^2E",555],["^ ","^2D",14048,"^2E",555],["^ ","^2D",14153,"^2E",555],["^ ","^2D",14158,"^2E",555],["^ ","^2D",14162,"^2E",555],["^ ","^2D",14169,"^2E",555],["^ ","^2D",14174,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",14189,"^2E",555],["^ ","^2D",14194,"^2E",555],["^ ","^2D",14282,"^2E",555],["^ ","^2D",14287,"^2E",555],["^ ","^2D",14291,"^2E",555],["^ ","^2D",14348,"^2E",555],["^ ","^2D",14353,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",14368,"^2E",555],["^ ","^2D",14373,"^2E",555],["^ ","^2D",14473,"^2E",555],["^ ","^2D",14478,"^2E",555],["^ ","^2D",14482,"^2E",555],["^ ","^2D",14497,"^2E",555],["^ ","^2D",14502,"^2E",555],["^ ","^2D",14506,"^2E",555],["^ ","^2D",14563,"^2E",555],["^ ","^2D",14568,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",14583,"^2E",555],["^ ","^2D",14588,"^2E",555],["^ ","^2D",14687,"^2E",555],["^ ","^2D",14692,"^2E",555],["^ ","^2D",14696,"^2E",555],["^ ","^2D",14703,"^2E",555],["^ ","^2D",14708,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",14723,"^2E",555],["^ ","^2D",14728,"^2E",555],["^ ","^2D",14728,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",14777,"^2E",555],["^ ","^2D",14777,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",14791,"^2E",555],["^ ","^2D",14791,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",14845,"^2E",555],["^ ","^2D",14850,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",14865,"^2E",555],["^ ","^2D",14870,"^2E",555],["^ ","^2D",14975,"^2E",555],["^ ","^2D",14980,"^2E",555],["^ ","^2D",14984,"^2E",555],["^ ","^2D",14991,"^2E",555],["^ ","^2D",14996,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",15011,"^2E",555],["^ ","^2D",15016,"^2E",555],["^ ","^2D",15104,"^2E",555],["^ ","^2D",15109,"^2E",555],["^ ","^2D",15113,"^2E",555],["^ ","^2D",15170,"^2E",555],["^ ","^2D",15175,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",15190,"^2E",555],["^ ","^2D",15195,"^2E",555],["^ ","^2D",15195,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",15244,"^2E",555],["^ ","^2D",15244,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",15258,"^2E",555],["^ ","^2D",15258,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",15305,"^2E",555],["^ ","^2D",15310,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",15325,"^2E",555],["^ ","^2D",15330,"^2E",555],["^ ","^2D",15436,"^2E",555],["^ ","^2D",15441,"^2E",555],["^ ","^2D",15445,"^2E",555],["^ ","^2D",15452,"^2E",555],["^ ","^2D",15457,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",15472,"^2E",555],["^ ","^2D",15477,"^2E",555],["^ ","^2D",15565,"^2E",555],["^ ","^2D",15570,"^2E",555],["^ ","^2D",15574,"^2E",555],["^ ","^2D",15584,"^2E",555],["^ ","^2D",15589,"^2E",555],["^ ","^2D",15593,"^2E",555],["^ ","^2D",15608,"^2E",555],["^ ","^2D",15613,"^2E",555],["^ ","^2D",15617,"^2E",555],["^ ","^2D",15633,"^2E",555],["^ ","^2D",15638,"^2E",555],["^ ","^2D",15642,"^2E",555],["^ ","^2D",15699,"^2E",555],["^ ","^2D",15704,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",15719,"^2E",555],["^ ","^2D",15724,"^2E",555],["^ ","^2D",15724,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",15773,"^2E",555],["^ ","^2D",15773,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",15787,"^2E",555],["^ ","^2D",15787,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",15841,"^2E",555],["^ ","^2D",15846,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",15861,"^2E",555],["^ ","^2D",15866,"^2E",555],["^ ","^2D",15944,"^2E",555],["^ ","^2D",15949,"^2E",555],["^ ","^2D",15953,"^2E",555],["^ ","^2D",15960,"^2E",555],["^ ","^2D",15965,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",15980,"^2E",555],["^ ","^2D",15985,"^2E",555],["^ ","^2D",15985,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",16034,"^2E",555],["^ ","^2D",16034,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",16048,"^2E",555],["^ ","^2D",16048,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",16102,"^2E",555],["^ ","^2D",16107,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",16122,"^2E",555],["^ ","^2D",16127,"^2E",555],["^ ","^2D",16206,"^2E",555],["^ ","^2D",16211,"^2E",555],["^ ","^2D",16215,"^2E",555],["^ ","^2D",16222,"^2E",555],["^ ","^2D",16227,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",16242,"^2E",555],["^ ","^2D",16247,"^2E",555],["^ ","^2D",16337,"^2E",555],["^ ","^2D",16342,"^2E",555],["^ ","^2D",16346,"^2E",555],["^ ","^2D",16403,"^2E",555],["^ ","^2D",16408,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",16423,"^2E",555],["^ ","^2D",16428,"^2E",555],["^ ","^2D",16527,"^2E",555],["^ ","^2D",16532,"^2E",555],["^ ","^2D",16536,"^2E",555],["^ ","^2D",16551,"^2E",555],["^ ","^2D",16556,"^2E",555],["^ ","^2D",16560,"^2E",555],["^ ","^2D",16617,"^2E",555],["^ ","^2D",16622,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",16637,"^2E",555],["^ ","^2D",16642,"^2E",555],["^ ","^2D",16642,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",16691,"^2E",555],["^ ","^2D",16691,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",16705,"^2E",555],["^ ","^2D",16705,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",16759,"^2E",555],["^ ","^2D",16764,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",16779,"^2E",555],["^ ","^2D",16784,"^2E",555],["^ ","^2D",16862,"^2E",555],["^ ","^2D",16867,"^2E",555],["^ ","^2D",16871,"^2E",555],["^ ","^2D",16878,"^2E",555],["^ ","^2D",16883,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",16898,"^2E",555],["^ ","^2D",16903,"^2E",555],["^ ","^2D",16903,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",16917,"^2E",555],["^ ","^2D",16917,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",16966,"^2E",555],["^ ","^2D",16966,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",16980,"^2E",555],["^ ","^2D",16980,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",17027,"^2E",555],["^ ","^2D",17032,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",17047,"^2E",555],["^ ","^2D",17052,"^2E",555],["^ ","^2D",17139,"^2E",555],["^ ","^2D",17144,"^2E",555],["^ ","^2D",17148,"^2E",555],["^ ","^2D",17155,"^2E",555],["^ ","^2D",17160,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",17175,"^2E",555],["^ ","^2D",17180,"^2E",555],["^ ","^2D",17180,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",17229,"^2E",555],["^ ","^2D",17229,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",17243,"^2E",555],["^ ","^2D",17243,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",17297,"^2E",555],["^ ","^2D",17302,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",17317,"^2E",555],["^ ","^2D",17322,"^2E",555],["^ ","^2D",17407,"^2E",555],["^ ","^2D",17412,"^2E",555],["^ ","^2D",17416,"^2E",555],["^ ","^2D",17423,"^2E",555],["^ ","^2D",17428,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",17443,"^2E",555],["^ ","^2D",17448,"^2E",555],["^ ","^2D",17448,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",17497,"^2E",555],["^ ","^2D",17497,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",17511,"^2E",555],["^ ","^2D",17511,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",17558,"^2E",555],["^ ","^2D",17563,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",17578,"^2E",555],["^ ","^2D",17583,"^2E",555],["^ ","^2D",17706,"^2E",555],["^ ","^2D",17711,"^2E",555],["^ ","^2D",17715,"^2E",555],["^ ","^2D",17722,"^2E",555],["^ ","^2D",17727,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",17742,"^2E",555],["^ ","^2D",17747,"^2E",555],["^ ","^2D",17835,"^2E",555],["^ ","^2D",17840,"^2E",555],["^ ","^2D",17844,"^2E",555],["^ ","^2D",17854,"^2E",555],["^ ","^2D",17859,"^2E",555],["^ ","^2D",17863,"^2E",555],["^ ","^2D",17920,"^2E",555],["^ ","^2D",17925,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",17940,"^2E",555],["^ ","^2D",17945,"^2E",555],["^ ","^2D",17945,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",17959,"^2E",555],["^ ","^2D",17959,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",18008,"^2E",555],["^ ","^2D",18008,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",18022,"^2E",555],["^ ","^2D",18022,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",18069,"^2E",555],["^ ","^2D",18074,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",18089,"^2E",555],["^ ","^2D",18094,"^2E",555],["^ ","^2D",18150,"^2E",555],["^ ","^2D",18155,"^2E",555],["^ ","^2D",18159,"^2E",555],["^ ","^2D",18166,"^2E",555],["^ ","^2D",18171,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",18186,"^2E",555],["^ ","^2D",18191,"^2E",555],["^ ","^2D",18251,"^2E",555],["^ ","^2D",18256,"^2E",555],["^ ","^2D",18260,"^2E",555],["^ ","^2D",18271,"^2E",555],["^ ","^2D",18276,"^2E",555],["^ ","^2D",18280,"^2E",555],["^ ","^2D",18295,"^2E",555],["^ ","^2D",18300,"^2E",555],["^ ","^2D",18304,"^2E",555],["^ ","^2D",18315,"^2E",555],["^ ","^2D",18320,"^2E",555],["^ ","^2D",18324,"^2E",555],["^ ","^2D",18381,"^2E",555],["^ ","^2D",18386,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",18401,"^2E",555],["^ ","^2D",18406,"^2E",555],["^ ","^2D",18406,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",18455,"^2E",555],["^ ","^2D",18455,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",18469,"^2E",555],["^ ","^2D",18469,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",18523,"^2E",555],["^ ","^2D",18528,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",18543,"^2E",555],["^ ","^2D",18548,"^2E",555],["^ ","^2D",18636,"^2E",555],["^ ","^2D",18641,"^2E",555],["^ ","^2D",18645,"^2E",555],["^ ","^2D",18652,"^2E",555],["^ ","^2D",18657,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",18672,"^2E",555],["^ ","^2D",18677,"^2E",555],["^ ","^2D",18677,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",18726,"^2E",555],["^ ","^2D",18726,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",18740,"^2E",555],["^ ","^2D",18740,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",18787,"^2E",555],["^ ","^2D",18792,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",18807,"^2E",555],["^ ","^2D",18812,"^2E",555],["^ ","^2D",18891,"^2E",555],["^ ","^2D",18896,"^2E",555],["^ ","^2D",18900,"^2E",555],["^ ","^2D",18907,"^2E",555],["^ ","^2D",18912,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",18927,"^2E",555],["^ ","^2D",18932,"^2E",555],["^ ","^2D",19019,"^2E",555],["^ ","^2D",19024,"^2E",555],["^ ","^2D",19028,"^2E",555],["^ ","^2D",19038,"^2E",555],["^ ","^2D",19043,"^2E",555],["^ ","^2D",19047,"^2E",555],["^ ","^2D",19104,"^2E",555],["^ ","^2D",19109,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",19124,"^2E",555],["^ ","^2D",19129,"^2E",555],["^ ","^2D",19129,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",19178,"^2E",555],["^ ","^2D",19178,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",19192,"^2E",555],["^ ","^2D",19192,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",19246,"^2E",555],["^ ","^2D",19251,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",19266,"^2E",555],["^ ","^2D",19271,"^2E",555],["^ ","^2D",19354,"^2E",555],["^ ","^2D",19359,"^2E",555],["^ ","^2D",19363,"^2E",555],["^ ","^2D",19370,"^2E",555],["^ ","^2D",19375,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",19390,"^2E",555],["^ ","^2D",19395,"^2E",555],["^ ","^2D",19395,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",19444,"^2E",555],["^ ","^2D",19444,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",19458,"^2E",555],["^ ","^2D",19458,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",19505,"^2E",555],["^ ","^2D",19510,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",19525,"^2E",555],["^ ","^2D",19530,"^2E",555],["^ ","^2D",19589,"^2E",555],["^ ","^2D",19594,"^2E",555],["^ ","^2D",19598,"^2E",555],["^ ","^2D",19605,"^2E",555],["^ ","^2D",19610,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",19625,"^2E",555],["^ ","^2D",19630,"^2E",555],["^ ","^2D",19717,"^2E",555],["^ ","^2D",19722,"^2E",555],["^ ","^2D",19726,"^2E",555],["^ ","^2D",19736,"^2E",555],["^ ","^2D",19741,"^2E",555],["^ ","^2D",19745,"^2E",555],["^ ","^2D",19802,"^2E",555],["^ ","^2D",19807,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",19822,"^2E",555],["^ ","^2D",19827,"^2E",555],["^ ","^2D",19827,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",19876,"^2E",555],["^ ","^2D",19876,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",19890,"^2E",555],["^ ","^2D",19890,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",19944,"^2E",555],["^ ","^2D",19949,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",19964,"^2E",555],["^ ","^2D",19969,"^2E",555],["^ ","^2D",20045,"^2E",555],["^ ","^2D",20050,"^2E",555],["^ ","^2D",20054,"^2E",555],["^ ","^2D",20061,"^2E",555],["^ ","^2D",20066,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",20081,"^2E",555],["^ ","^2D",20086,"^2E",555],["^ ","^2D",20086,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",20100,"^2E",555],["^ ","^2D",20100,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",20149,"^2E",555],["^ ","^2D",20149,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",20163,"^2E",555],["^ ","^2D",20163,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",20210,"^2E",555],["^ ","^2D",20215,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",20230,"^2E",555],["^ ","^2D",20235,"^2E",555],["^ ","^2D",20328,"^2E",555],["^ ","^2D",20333,"^2E",555],["^ ","^2D",20337,"^2E",555],["^ ","^2D",20348,"^2E",555],["^ ","^2D",20353,"^2E",555],["^ ","^2D",20357,"^2E",555],["^ ","^2D",20414,"^2E",555],["^ ","^2D",20419,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",20434,"^2E",555],["^ ","^2D",20439,"^2E",555],["^ ","^2D",20439,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",20488,"^2E",555],["^ ","^2D",20488,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",20502,"^2E",555],["^ ","^2D",20502,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",20556,"^2E",555],["^ ","^2D",20561,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",20576,"^2E",555],["^ ","^2D",20581,"^2E",555],["^ ","^2D",20657,"^2E",555],["^ ","^2D",20662,"^2E",555],["^ ","^2D",20666,"^2E",555],["^ ","^2D",20673,"^2E",555],["^ ","^2D",20678,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",20693,"^2E",555],["^ ","^2D",20698,"^2E",555],["^ ","^2D",20791,"^2E",555],["^ ","^2D",20796,"^2E",555],["^ ","^2D",20800,"^2E",555],["^ ","^2D",20857,"^2E",555],["^ ","^2D",20862,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",20877,"^2E",555],["^ ","^2D",20882,"^2E",555],["^ ","^2D",20882,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",20931,"^2E",555],["^ ","^2D",20931,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",20945,"^2E",555],["^ ","^2D",20945,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",20999,"^2E",555],["^ ","^2D",21004,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",21019,"^2E",555],["^ ","^2D",21024,"^2E",555],["^ ","^2D",21114,"^2E",555],["^ ","^2D",21119,"^2E",555],["^ ","^2D",21123,"^2E",555],["^ ","^2D",21130,"^2E",555],["^ ","^2D",21135,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",21150,"^2E",555],["^ ","^2D",21155,"^2E",555],["^ ","^2D",21155,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",21169,"^2E",555],["^ ","^2D",21169,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",21218,"^2E",555],["^ ","^2D",21218,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",21232,"^2E",555],["^ ","^2D",21232,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",21279,"^2E",555],["^ ","^2D",21284,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",21299,"^2E",555],["^ ","^2D",21304,"^2E",555],["^ ","^2D",21379,"^2E",555],["^ ","^2D",21384,"^2E",555],["^ ","^2D",21388,"^2E",555],["^ ","^2D",21395,"^2E",555],["^ ","^2D",21400,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",21415,"^2E",555],["^ ","^2D",21420,"^2E",555],["^ ","^2D",21510,"^2E",555],["^ ","^2D",21515,"^2E",555],["^ ","^2D",21519,"^2E",555],["^ ","^2D",21530,"^2E",555],["^ ","^2D",21535,"^2E",555],["^ ","^2D",21539,"^2E",555],["^ ","^2D",21596,"^2E",555],["^ ","^2D",21601,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",21616,"^2E",555],["^ ","^2D",21621,"^2E",555],["^ ","^2D",21701,"^2E",555],["^ ","^2D",21706,"^2E",555],["^ ","^2D",21710,"^2E",555],["^ ","^2D",21717,"^2E",555],["^ ","^2D",21722,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",21737,"^2E",555],["^ ","^2D",21742,"^2E",555],["^ ","^2D",21830,"^2E",555],["^ ","^2D",21835,"^2E",555],["^ ","^2D",21839,"^2E",555],["^ ","^2D",21854,"^2E",555],["^ ","^2D",21859,"^2E",555],["^ ","^2D",21863,"^2E",555],["^ ","^2D",21870,"^2E",555],["^ ","^2D",21875,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",21890,"^2E",555],["^ ","^2D",21895,"^2E",555],["^ ","^2D",21895,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",21944,"^2E",555],["^ ","^2D",21944,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",21958,"^2E",555],["^ ","^2D",21958,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",22012,"^2E",555],["^ ","^2D",22017,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",22032,"^2E",555],["^ ","^2D",22037,"^2E",555],["^ ","^2D",22127,"^2E",555],["^ ","^2D",22132,"^2E",555],["^ ","^2D",22136,"^2E",555],["^ ","^2D",22143,"^2E",555],["^ ","^2D",22148,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",22163,"^2E",555],["^ ","^2D",22168,"^2E",555],["^ ","^2D",22168,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",22182,"^2E",555],["^ ","^2D",22182,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",22231,"^2E",555],["^ ","^2D",22231,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",22245,"^2E",555],["^ ","^2D",22245,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",22292,"^2E",555],["^ ","^2D",22297,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",22312,"^2E",555],["^ ","^2D",22317,"^2E",555],["^ ","^2D",22392,"^2E",555],["^ ","^2D",22397,"^2E",555],["^ ","^2D",22401,"^2E",555],["^ ","^2D",22408,"^2E",555],["^ ","^2D",22413,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",22428,"^2E",555],["^ ","^2D",22433,"^2E",555],["^ ","^2D",22532,"^2E",555],["^ ","^2D",22537,"^2E",555],["^ ","^2D",22541,"^2E",555],["^ ","^2D",22552,"^2E",555],["^ ","^2D",22557,"^2E",555],["^ ","^2D",22561,"^2E",555],["^ ","^2D",22618,"^2E",555],["^ ","^2D",22623,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",22638,"^2E",555],["^ ","^2D",22643,"^2E",555],["^ ","^2D",22643,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",22692,"^2E",555],["^ ","^2D",22692,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",22706,"^2E",555],["^ ","^2D",22706,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",22760,"^2E",555],["^ ","^2D",22765,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",22780,"^2E",555],["^ ","^2D",22785,"^2E",555],["^ ","^2D",22864,"^2E",555],["^ ","^2D",22869,"^2E",555],["^ ","^2D",22873,"^2E",555],["^ ","^2D",22880,"^2E",555],["^ ","^2D",22885,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",22900,"^2E",555],["^ ","^2D",22905,"^2E",555],["^ ","^2D",22985,"^2E",555],["^ ","^2D",22990,"^2E",555],["^ ","^2D",22994,"^2E",555],["^ ","^2D",23051,"^2E",555],["^ ","^2D",23056,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",23071,"^2E",555],["^ ","^2D",23076,"^2E",555],["^ ","^2D",23076,"^2E",555,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",23122,"^2E",555,"^O","cljs.core/hash-set"],["^ ","^2D",23141,"^2E",555],["^ ","^2D",23141,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",23190,"^2E",555],["^ ","^2D",23190,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",23204,"^2E",555],["^ ","^2D",23204,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$0"],["^ ","^2D",23256,"^2E",555],["^ ","^2D",23261,"^2E",555],["^ ","^2D",23265,"^2E",555],["^ ","^2D",23280,"^2E",555],["^ ","^2D",23285,"^2E",555],["^ ","^2D",23289,"^2E",555],["^ ","^2D",23296,"^2E",555],["^ ","^2D",23301,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",23316,"^2E",555],["^ ","^2D",23321,"^2E",555],["^ ","^2D",23409,"^2E",555],["^ ","^2D",23414,"^2E",555],["^ ","^2D",23418,"^2E",555],["^ ","^2D",23433,"^2E",555],["^ ","^2D",23438,"^2E",555],["^ ","^2D",23442,"^2E",555],["^ ","^2D",23457,"^2E",555],["^ ","^2D",23462,"^2E",555],["^ ","^2D",23466,"^2E",555],["^ ","^2D",23481,"^2E",555],["^ ","^2D",23486,"^2E",555],["^ ","^2D",23490,"^2E",555],["^ ","^2D",23505,"^2E",555],["^ ","^2D",23510,"^2E",555],["^ ","^2D",23514,"^2E",555],["^ ","^2D",23529,"^2E",555],["^ ","^2D",23534,"^2E",555],["^ ","^2D",23538,"^2E",555],["^ ","^2D",23553,"^2E",555],["^ ","^2D",23558,"^2E",555],["^ ","^2D",23562,"^2E",555],["^ ","^2D",23577,"^2E",555],["^ ","^2D",23582,"^2E",555],["^ ","^2D",23586,"^2E",555],["^ ","^2D",23601,"^2E",555],["^ ","^2D",23606,"^2E",555],["^ ","^2D",23610,"^2E",555],["^ ","^2D",23625,"^2E",555],["^ ","^2D",23630,"^2E",555],["^ ","^2D",23634,"^2E",555],["^ ","^2D",23649,"^2E",555],["^ ","^2D",23654,"^2E",555],["^ ","^2D",23658,"^2E",555],["^ ","^2D",23668,"^2E",555],["^ ","^2D",23673,"^2E",555],["^ ","^2D",23677,"^2E",555],["^ ","^2D",23684,"^2E",555],["^ ","^2D",23689,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",23704,"^2E",555],["^ ","^2D",23709,"^2E",555],["^ ","^2D",23793,"^2E",555],["^ ","^2D",23798,"^2E",555],["^ ","^2D",23802,"^2E",555],["^ ","^2D",23809,"^2E",555],["^ ","^2D",23814,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",23829,"^2E",555],["^ ","^2D",23834,"^2E",555],["^ ","^2D",23834,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",23883,"^2E",555],["^ ","^2D",23883,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",23897,"^2E",555],["^ ","^2D",23897,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",23951,"^2E",555],["^ ","^2D",23956,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",23971,"^2E",555],["^ ","^2D",23976,"^2E",555],["^ ","^2D",23976,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",23990,"^2E",555],["^ ","^2D",23990,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",24039,"^2E",555],["^ ","^2D",24039,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",24053,"^2E",555],["^ ","^2D",24053,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",24100,"^2E",555],["^ ","^2D",24105,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",24120,"^2E",555],["^ ","^2D",24125,"^2E",555],["^ ","^2D",24213,"^2E",555],["^ ","^2D",24218,"^2E",555],["^ ","^2D",24222,"^2E",555],["^ ","^2D",24233,"^2E",555],["^ ","^2D",24238,"^2E",555],["^ ","^2D",24242,"^2E",555],["^ ","^2D",24249,"^2E",555],["^ ","^2D",24254,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",24269,"^2E",555],["^ ","^2D",24274,"^2E",555],["^ ","^2D",24274,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",24323,"^2E",555],["^ ","^2D",24323,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",24337,"^2E",555],["^ ","^2D",24337,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",24391,"^2E",555],["^ ","^2D",24396,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",24411,"^2E",555],["^ ","^2D",24416,"^2E",555],["^ ","^2D",24493,"^2E",555],["^ ","^2D",24498,"^2E",555],["^ ","^2D",24502,"^2E",555],["^ ","^2D",24509,"^2E",555],["^ ","^2D",24514,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",24529,"^2E",555],["^ ","^2D",24534,"^2E",555],["^ ","^2D",24622,"^2E",555],["^ ","^2D",24627,"^2E",555],["^ ","^2D",24631,"^2E",555],["^ ","^2D",24688,"^2E",555],["^ ","^2D",24693,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",24708,"^2E",555],["^ ","^2D",24713,"^2E",555],["^ ","^2D",24730,"^2E",555],["^ ","^2D",24735,"^2E",555],["^ ","^2D",24739,"^2E",555],["^ ","^2D",24746,"^2E",555],["^ ","^2D",24751,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",24766,"^2E",555],["^ ","^2D",24771,"^2E",555],["^ ","^2D",24776,"^2E",555],["^ ","^2D",24781,"^2E",555],["^ ","^2D",24785,"^2E",555],["^ ","^2D",24800,"^2E",555],["^ ","^2D",24805,"^2E",555],["^ ","^2D",24809,"^2E",555],["^ ","^2D",24866,"^2E",555],["^ ","^2D",24871,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",24886,"^2E",555],["^ ","^2D",24891,"^2E",555],["^ ","^2D",24891,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",24940,"^2E",555],["^ ","^2D",24940,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",24954,"^2E",555],["^ ","^2D",24954,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",25008,"^2E",555],["^ ","^2D",25013,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",25028,"^2E",555],["^ ","^2D",25033,"^2E",555],["^ ","^2D",25111,"^2E",555],["^ ","^2D",25116,"^2E",555],["^ ","^2D",25120,"^2E",555],["^ ","^2D",25127,"^2E",555],["^ ","^2D",25132,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",25147,"^2E",555],["^ ","^2D",25152,"^2E",555],["^ ","^2D",25152,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",25166,"^2E",555],["^ ","^2D",25166,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",25215,"^2E",555],["^ ","^2D",25215,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",25229,"^2E",555],["^ ","^2D",25229,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",25276,"^2E",555],["^ ","^2D",25281,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",25296,"^2E",555],["^ ","^2D",25301,"^2E",555],["^ ","^2D",25395,"^2E",555],["^ ","^2D",25400,"^2E",555],["^ ","^2D",25404,"^2E",555],["^ ","^2D",25411,"^2E",555],["^ ","^2D",25416,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",25431,"^2E",555],["^ ","^2D",25436,"^2E",555],["^ ","^2D",25436,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",25485,"^2E",555],["^ ","^2D",25485,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",25499,"^2E",555],["^ ","^2D",25499,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",25553,"^2E",555],["^ ","^2D",25558,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",25573,"^2E",555],["^ ","^2D",25578,"^2E",555],["^ ","^2D",25663,"^2E",555],["^ ","^2D",25668,"^2E",555],["^ ","^2D",25672,"^2E",555],["^ ","^2D",25679,"^2E",555],["^ ","^2D",25684,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",25699,"^2E",555],["^ ","^2D",25704,"^2E",555],["^ ","^2D",25704,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",25753,"^2E",555],["^ ","^2D",25753,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",25767,"^2E",555],["^ ","^2D",25767,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",25814,"^2E",555],["^ ","^2D",25819,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",25834,"^2E",555],["^ ","^2D",25839,"^2E",555],["^ ","^2D",25962,"^2E",555],["^ ","^2D",25967,"^2E",555],["^ ","^2D",25971,"^2E",555],["^ ","^2D",25978,"^2E",555],["^ ","^2D",25983,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",25998,"^2E",555],["^ ","^2D",26003,"^2E",555],["^ ","^2D",26091,"^2E",555],["^ ","^2D",26096,"^2E",555],["^ ","^2D",26100,"^2E",555],["^ ","^2D",26110,"^2E",555],["^ ","^2D",26115,"^2E",555],["^ ","^2D",26119,"^2E",555],["^ ","^2D",26176,"^2E",555],["^ ","^2D",26181,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",26196,"^2E",555],["^ ","^2D",26201,"^2E",555],["^ ","^2D",26201,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",26215,"^2E",555],["^ ","^2D",26215,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",26264,"^2E",555],["^ ","^2D",26264,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",26278,"^2E",555],["^ ","^2D",26278,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",26325,"^2E",555],["^ ","^2D",26330,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",26345,"^2E",555],["^ ","^2D",26350,"^2E",555],["^ ","^2D",26406,"^2E",555],["^ ","^2D",26411,"^2E",555],["^ ","^2D",26415,"^2E",555],["^ ","^2D",26422,"^2E",555],["^ ","^2D",26427,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",26442,"^2E",555],["^ ","^2D",26447,"^2E",555],["^ ","^2D",26507,"^2E",555],["^ ","^2D",26512,"^2E",555],["^ ","^2D",26516,"^2E",555],["^ ","^2D",26527,"^2E",555],["^ ","^2D",26532,"^2E",555],["^ ","^2D",26536,"^2E",555],["^ ","^2D",26551,"^2E",555],["^ ","^2D",26556,"^2E",555],["^ ","^2D",26560,"^2E",555],["^ ","^2D",26571,"^2E",555],["^ ","^2D",26576,"^2E",555],["^ ","^2D",26580,"^2E",555],["^ ","^2D",26637,"^2E",555],["^ ","^2D",26642,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",26657,"^2E",555],["^ ","^2D",26662,"^2E",555],["^ ","^2D",26662,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",26711,"^2E",555],["^ ","^2D",26711,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",26725,"^2E",555],["^ ","^2D",26725,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",26779,"^2E",555],["^ ","^2D",26784,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",26799,"^2E",555],["^ ","^2D",26804,"^2E",555],["^ ","^2D",26892,"^2E",555],["^ ","^2D",26897,"^2E",555],["^ ","^2D",26901,"^2E",555],["^ ","^2D",26908,"^2E",555],["^ ","^2D",26913,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",26928,"^2E",555],["^ ","^2D",26933,"^2E",555],["^ ","^2D",26933,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",26982,"^2E",555],["^ ","^2D",26982,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",26996,"^2E",555],["^ ","^2D",26996,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",27043,"^2E",555],["^ ","^2D",27048,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",27063,"^2E",555],["^ ","^2D",27068,"^2E",555],["^ ","^2D",27147,"^2E",555],["^ ","^2D",27152,"^2E",555],["^ ","^2D",27156,"^2E",555],["^ ","^2D",27163,"^2E",555],["^ ","^2D",27168,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",27183,"^2E",555],["^ ","^2D",27188,"^2E",555],["^ ","^2D",27282,"^2E",555],["^ ","^2D",27287,"^2E",555],["^ ","^2D",27291,"^2E",555],["^ ","^2D",27301,"^2E",555],["^ ","^2D",27306,"^2E",555],["^ ","^2D",27310,"^2E",555],["^ ","^2D",27367,"^2E",555],["^ ","^2D",27372,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",27387,"^2E",555],["^ ","^2D",27392,"^2E",555],["^ ","^2D",27392,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",27441,"^2E",555],["^ ","^2D",27441,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",27455,"^2E",555],["^ ","^2D",27455,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",27509,"^2E",555],["^ ","^2D",27514,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",27529,"^2E",555],["^ ","^2D",27534,"^2E",555],["^ ","^2D",27670,"^2E",555],["^ ","^2D",27675,"^2E",555],["^ ","^2D",27679,"^2E",555],["^ ","^2D",27686,"^2E",555],["^ ","^2D",27691,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",27706,"^2E",555],["^ ","^2D",27711,"^2E",555],["^ ","^2D",27805,"^2E",555],["^ ","^2D",27810,"^2E",555],["^ ","^2D",27814,"^2E",555],["^ ","^2D",27871,"^2E",555],["^ ","^2D",27876,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",27891,"^2E",555],["^ ","^2D",27896,"^2E",555],["^ ","^2D",27984,"^2E",555],["^ ","^2D",27989,"^2E",555],["^ ","^2D",27993,"^2E",555],["^ ","^2D",28008,"^2E",555],["^ ","^2D",28013,"^2E",555],["^ ","^2D",28017,"^2E",555],["^ ","^2D",28032,"^2E",555],["^ ","^2D",28037,"^2E",555],["^ ","^2D",28041,"^2E",555],["^ ","^2D",28056,"^2E",555],["^ ","^2D",28061,"^2E",555],["^ ","^2D",28065,"^2E",555],["^ ","^2D",28080,"^2E",555],["^ ","^2D",28085,"^2E",555],["^ ","^2D",28089,"^2E",555],["^ ","^2D",28096,"^2E",555],["^ ","^2D",28101,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",28116,"^2E",555],["^ ","^2D",28121,"^2E",555],["^ ","^2D",28211,"^2E",555],["^ ","^2D",28216,"^2E",555],["^ ","^2D",28220,"^2E",555],["^ ","^2D",28227,"^2E",555],["^ ","^2D",28232,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",28247,"^2E",555],["^ ","^2D",28252,"^2E",555],["^ ","^2D",28252,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",28301,"^2E",555],["^ ","^2D",28301,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",28315,"^2E",555],["^ ","^2D",28315,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",28362,"^2E",555],["^ ","^2D",28367,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",28382,"^2E",555],["^ ","^2D",28387,"^2E",555],["^ ","^2D",28387,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",28401,"^2E",555],["^ ","^2D",28401,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",28450,"^2E",555],["^ ","^2D",28450,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",28464,"^2E",555],["^ ","^2D",28464,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",28511,"^2E",555],["^ ","^2D",28516,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",28531,"^2E",555],["^ ","^2D",28536,"^2E",555],["^ ","^2D",28624,"^2E",555],["^ ","^2D",28629,"^2E",555],["^ ","^2D",28633,"^2E",555],["^ ","^2D",28644,"^2E",555],["^ ","^2D",28649,"^2E",555],["^ ","^2D",28653,"^2E",555],["^ ","^2D",28660,"^2E",555],["^ ","^2D",28665,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",28680,"^2E",555],["^ ","^2D",28685,"^2E",555],["^ ","^2D",28685,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",28734,"^2E",555],["^ ","^2D",28734,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",28748,"^2E",555],["^ ","^2D",28748,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",28802,"^2E",555],["^ ","^2D",28807,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",28822,"^2E",555],["^ ","^2D",28827,"^2E",555],["^ ","^2D",28905,"^2E",555],["^ ","^2D",28910,"^2E",555],["^ ","^2D",28914,"^2E",555],["^ ","^2D",28921,"^2E",555],["^ ","^2D",28926,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",28941,"^2E",555],["^ ","^2D",28946,"^2E",555],["^ ","^2D",28946,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",28960,"^2E",555],["^ ","^2D",28960,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",29009,"^2E",555],["^ ","^2D",29009,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",29023,"^2E",555],["^ ","^2D",29023,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",29077,"^2E",555],["^ ","^2D",29082,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",29097,"^2E",555],["^ ","^2D",29102,"^2E",555],["^ ","^2D",29183,"^2E",555],["^ ","^2D",29188,"^2E",555],["^ ","^2D",29192,"^2E",555],["^ ","^2D",29199,"^2E",555],["^ ","^2D",29204,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",29219,"^2E",555],["^ ","^2D",29224,"^2E",555],["^ ","^2D",29224,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",29273,"^2E",555],["^ ","^2D",29273,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",29287,"^2E",555],["^ ","^2D",29287,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",29334,"^2E",555],["^ ","^2D",29339,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",29354,"^2E",555],["^ ","^2D",29359,"^2E",555],["^ ","^2D",29482,"^2E",555],["^ ","^2D",29487,"^2E",555],["^ ","^2D",29491,"^2E",555],["^ ","^2D",29498,"^2E",555],["^ ","^2D",29503,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",29518,"^2E",555],["^ ","^2D",29523,"^2E",555],["^ ","^2D",29611,"^2E",555],["^ ","^2D",29616,"^2E",555],["^ ","^2D",29620,"^2E",555],["^ ","^2D",29630,"^2E",555],["^ ","^2D",29635,"^2E",555],["^ ","^2D",29639,"^2E",555],["^ ","^2D",29696,"^2E",555],["^ ","^2D",29701,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",29716,"^2E",555],["^ ","^2D",29721,"^2E",555],["^ ","^2D",29805,"^2E",555],["^ ","^2D",29810,"^2E",555],["^ ","^2D",29814,"^2E",555],["^ ","^2D",29821,"^2E",555],["^ ","^2D",29826,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",29841,"^2E",555],["^ ","^2D",29846,"^2E",555],["^ ","^2D",29846,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",29895,"^2E",555],["^ ","^2D",29895,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",29909,"^2E",555],["^ ","^2D",29909,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",29956,"^2E",555],["^ ","^2D",29961,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",29976,"^2E",555],["^ ","^2D",29981,"^2E",555],["^ ","^2D",30037,"^2E",555],["^ ","^2D",30042,"^2E",555],["^ ","^2D",30046,"^2E",555],["^ ","^2D",30053,"^2E",555],["^ ","^2D",30058,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",30073,"^2E",555],["^ ","^2D",30078,"^2E",555],["^ ","^2D",30159,"^2E",555],["^ ","^2D",30164,"^2E",555],["^ ","^2D",30168,"^2E",555],["^ ","^2D",30178,"^2E",555],["^ ","^2D",30183,"^2E",555],["^ ","^2D",30187,"^2E",555],["^ ","^2D",30194,"^2E",555],["^ ","^2D",30199,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",30214,"^2E",555],["^ ","^2D",30219,"^2E",555],["^ ","^2D",30300,"^2E",555],["^ ","^2D",30305,"^2E",555],["^ ","^2D",30309,"^2E",555],["^ ","^2D",30316,"^2E",555],["^ ","^2D",30321,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",30336,"^2E",555],["^ ","^2D",30341,"^2E",555],["^ ","^2D",30341,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",30390,"^2E",555],["^ ","^2D",30390,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",30404,"^2E",555],["^ ","^2D",30404,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",30451,"^2E",555],["^ ","^2D",30456,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",30471,"^2E",555],["^ ","^2D",30476,"^2E",555],["^ ","^2D",30532,"^2E",555],["^ ","^2D",30537,"^2E",555],["^ ","^2D",30541,"^2E",555],["^ ","^2D",30548,"^2E",555],["^ ","^2D",30553,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",30568,"^2E",555],["^ ","^2D",30573,"^2E",555],["^ ","^2D",30657,"^2E",555],["^ ","^2D",30662,"^2E",555],["^ ","^2D",30666,"^2E",555],["^ ","^2D",30676,"^2E",555],["^ ","^2D",30681,"^2E",555],["^ ","^2D",30685,"^2E",555],["^ ","^2D",30692,"^2E",555],["^ ","^2D",30697,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",30712,"^2E",555],["^ ","^2D",30717,"^2E",555],["^ ","^2D",30811,"^2E",555],["^ ","^2D",30816,"^2E",555],["^ ","^2D",30820,"^2E",555],["^ ","^2D",30827,"^2E",555],["^ ","^2D",30832,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",30847,"^2E",555],["^ ","^2D",30852,"^2E",555],["^ ","^2D",30852,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",30901,"^2E",555],["^ ","^2D",30901,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",30915,"^2E",555],["^ ","^2D",30915,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",30962,"^2E",555],["^ ","^2D",30967,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",30982,"^2E",555],["^ ","^2D",30987,"^2E",555],["^ ","^2D",31047,"^2E",555],["^ ","^2D",31052,"^2E",555],["^ ","^2D",31056,"^2E",555],["^ ","^2D",31063,"^2E",555],["^ ","^2D",31068,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",31083,"^2E",555],["^ ","^2D",31088,"^2E",555],["^ ","^2D",31172,"^2E",555],["^ ","^2D",31177,"^2E",555],["^ ","^2D",31181,"^2E",555],["^ ","^2D",31191,"^2E",555],["^ ","^2D",31196,"^2E",555],["^ ","^2D",31200,"^2E",555],["^ ","^2D",31216,"^2E",555],["^ ","^2D",31221,"^2E",555],["^ ","^2D",31225,"^2E",555],["^ ","^2D",31282,"^2E",555],["^ ","^2D",31287,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",31302,"^2E",555],["^ ","^2D",31307,"^2E",555],["^ ","^2D",31307,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",31356,"^2E",555],["^ ","^2D",31356,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",31370,"^2E",555],["^ ","^2D",31370,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",31424,"^2E",555],["^ ","^2D",31429,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",31444,"^2E",555],["^ ","^2D",31449,"^2E",555],["^ ","^2D",31526,"^2E",555],["^ ","^2D",31531,"^2E",555],["^ ","^2D",31535,"^2E",555],["^ ","^2D",31542,"^2E",555],["^ ","^2D",31547,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",31562,"^2E",555],["^ ","^2D",31567,"^2E",555],["^ ","^2D",31655,"^2E",555],["^ ","^2D",31660,"^2E",555],["^ ","^2D",31664,"^2E",555],["^ ","^2D",31721,"^2E",555],["^ ","^2D",31726,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",31741,"^2E",555],["^ ","^2D",31746,"^2E",555],["^ ","^2D",31763,"^2E",555],["^ ","^2D",31768,"^2E",555],["^ ","^2D",31772,"^2E",555],["^ ","^2D",31779,"^2E",555],["^ ","^2D",31784,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",31799,"^2E",555],["^ ","^2D",31804,"^2E",555],["^ ","^2D",31810,"^2E",555],["^ ","^2D",31815,"^2E",555],["^ ","^2D",31819,"^2E",555],["^ ","^2D",31834,"^2E",555],["^ ","^2D",31839,"^2E",555],["^ ","^2D",31843,"^2E",555],["^ ","^2D",31850,"^2E",555],["^ ","^2D",31855,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",31870,"^2E",555],["^ ","^2D",31875,"^2E",555],["^ ","^2D",31875,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",31924,"^2E",555],["^ ","^2D",31924,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",31938,"^2E",555],["^ ","^2D",31938,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",31992,"^2E",555],["^ ","^2D",31997,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",32012,"^2E",555],["^ ","^2D",32017,"^2E",555],["^ ","^2D",32095,"^2E",555],["^ ","^2D",32100,"^2E",555],["^ ","^2D",32104,"^2E",555],["^ ","^2D",32111,"^2E",555],["^ ","^2D",32116,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",32131,"^2E",555],["^ ","^2D",32136,"^2E",555],["^ ","^2D",32136,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",32185,"^2E",555],["^ ","^2D",32185,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",32199,"^2E",555],["^ ","^2D",32199,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",32253,"^2E",555],["^ ","^2D",32258,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",32273,"^2E",555],["^ ","^2D",32278,"^2E",555],["^ ","^2D",32356,"^2E",555],["^ ","^2D",32361,"^2E",555],["^ ","^2D",32365,"^2E",555],["^ ","^2D",32372,"^2E",555],["^ ","^2D",32377,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",32392,"^2E",555],["^ ","^2D",32397,"^2E",555],["^ ","^2D",32397,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",32446,"^2E",555],["^ ","^2D",32446,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",32460,"^2E",555],["^ ","^2D",32460,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",32507,"^2E",555],["^ ","^2D",32512,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",32527,"^2E",555],["^ ","^2D",32532,"^2E",555],["^ ","^2D",32607,"^2E",555],["^ ","^2D",32612,"^2E",555],["^ ","^2D",32616,"^2E",555],["^ ","^2D",32623,"^2E",555],["^ ","^2D",32628,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",32643,"^2E",555],["^ ","^2D",32648,"^2E",555],["^ ","^2D",32648,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",32697,"^2E",555],["^ ","^2D",32697,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",32711,"^2E",555],["^ ","^2D",32711,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",32758,"^2E",555],["^ ","^2D",32763,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",32778,"^2E",555],["^ ","^2D",32783,"^2E",555],["^ ","^2D",32862,"^2E",555],["^ ","^2D",32867,"^2E",555],["^ ","^2D",32871,"^2E",555],["^ ","^2D",32878,"^2E",555],["^ ","^2D",32883,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",32898,"^2E",555],["^ ","^2D",32903,"^2E",555],["^ ","^2D",32984,"^2E",555],["^ ","^2D",32989,"^2E",555],["^ ","^2D",32993,"^2E",555],["^ ","^2D",33003,"^2E",555],["^ ","^2D",33008,"^2E",555],["^ ","^2D",33012,"^2E",555],["^ ","^2D",33022,"^2E",555],["^ ","^2D",33027,"^2E",555],["^ ","^2D",33031,"^2E",555],["^ ","^2D",33088,"^2E",555],["^ ","^2D",33093,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",33108,"^2E",555],["^ ","^2D",33113,"^2E",555],["^ ","^2D",33113,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",33162,"^2E",555],["^ ","^2D",33162,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",33176,"^2E",555],["^ ","^2D",33176,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",33230,"^2E",555],["^ ","^2D",33235,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",33250,"^2E",555],["^ ","^2D",33255,"^2E",555],["^ ","^2D",33340,"^2E",555],["^ ","^2D",33345,"^2E",555],["^ ","^2D",33349,"^2E",555],["^ ","^2D",33356,"^2E",555],["^ ","^2D",33361,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",33376,"^2E",555],["^ ","^2D",33381,"^2E",555],["^ ","^2D",33381,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",33430,"^2E",555],["^ ","^2D",33430,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",33444,"^2E",555],["^ ","^2D",33444,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",33491,"^2E",555],["^ ","^2D",33496,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",33511,"^2E",555],["^ ","^2D",33516,"^2E",555],["^ ","^2D",33597,"^2E",555],["^ ","^2D",33602,"^2E",555],["^ ","^2D",33606,"^2E",555],["^ ","^2D",33613,"^2E",555],["^ ","^2D",33618,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",33633,"^2E",555],["^ ","^2D",33638,"^2E",555],["^ ","^2D",33719,"^2E",555],["^ ","^2D",33724,"^2E",555],["^ ","^2D",33728,"^2E",555],["^ ","^2D",33738,"^2E",555],["^ ","^2D",33743,"^2E",555],["^ ","^2D",33747,"^2E",555],["^ ","^2D",33804,"^2E",555],["^ ","^2D",33809,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",33824,"^2E",555],["^ ","^2D",33829,"^2E",555],["^ ","^2D",33829,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",33843,"^2E",555],["^ ","^2D",33843,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",33892,"^2E",555],["^ ","^2D",33892,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",33906,"^2E",555],["^ ","^2D",33906,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",33953,"^2E",555],["^ ","^2D",33958,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",33973,"^2E",555],["^ ","^2D",33978,"^2E",555],["^ ","^2D",34084,"^2E",555],["^ ","^2D",34089,"^2E",555],["^ ","^2D",34093,"^2E",555],["^ ","^2D",34100,"^2E",555],["^ ","^2D",34105,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",34120,"^2E",555],["^ ","^2D",34125,"^2E",555],["^ ","^2D",34213,"^2E",555],["^ ","^2D",34218,"^2E",555],["^ ","^2D",34222,"^2E",555],["^ ","^2D",34233,"^2E",555],["^ ","^2D",34238,"^2E",555],["^ ","^2D",34242,"^2E",555],["^ ","^2D",34257,"^2E",555],["^ ","^2D",34262,"^2E",555],["^ ","^2D",34266,"^2E",555],["^ ","^2D",34281,"^2E",555],["^ ","^2D",34286,"^2E",555],["^ ","^2D",34290,"^2E",555],["^ ","^2D",34347,"^2E",555],["^ ","^2D",34352,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",34367,"^2E",555],["^ ","^2D",34372,"^2E",555],["^ ","^2D",34372,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",34421,"^2E",555],["^ ","^2D",34421,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",34435,"^2E",555],["^ ","^2D",34435,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",34489,"^2E",555],["^ ","^2D",34494,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",34509,"^2E",555],["^ ","^2D",34514,"^2E",555],["^ ","^2D",34597,"^2E",555],["^ ","^2D",34602,"^2E",555],["^ ","^2D",34606,"^2E",555],["^ ","^2D",34613,"^2E",555],["^ ","^2D",34618,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",34633,"^2E",555],["^ ","^2D",34638,"^2E",555],["^ ","^2D",34719,"^2E",555],["^ ","^2D",34724,"^2E",555],["^ ","^2D",34728,"^2E",555],["^ ","^2D",34785,"^2E",555],["^ ","^2D",34790,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",34805,"^2E",555],["^ ","^2D",34810,"^2E",555],["^ ","^2D",34900,"^2E",555],["^ ","^2D",34905,"^2E",555],["^ ","^2D",34909,"^2E",555],["^ ","^2D",34916,"^2E",555],["^ ","^2D",34921,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",34936,"^2E",555],["^ ","^2D",34941,"^2E",555],["^ ","^2D",34941,"^2E",555,"^O","cljs.core/vec"],["^ ","^2D",34955,"^2E",555],["^ ","^2D",34955,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",35004,"^2E",555],["^ ","^2D",35004,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",35018,"^2E",555],["^ ","^2D",35018,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",35065,"^2E",555],["^ ","^2D",35070,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",35085,"^2E",555],["^ ","^2D",35090,"^2E",555],["^ ","^2D",35196,"^2E",555],["^ ","^2D",35201,"^2E",555],["^ ","^2D",35205,"^2E",555],["^ ","^2D",35216,"^2E",555],["^ ","^2D",35221,"^2E",555],["^ ","^2D",35225,"^2E",555],["^ ","^2D",35232,"^2E",555],["^ ","^2D",35237,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",35252,"^2E",555],["^ ","^2D",35257,"^2E",555],["^ ","^2D",35341,"^2E",555],["^ ","^2D",35346,"^2E",555],["^ ","^2D",35350,"^2E",555],["^ ","^2D",35357,"^2E",555],["^ ","^2D",35362,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",35377,"^2E",555],["^ ","^2D",35382,"^2E",555],["^ ","^2D",35470,"^2E",555],["^ ","^2D",35475,"^2E",555],["^ ","^2D",35479,"^2E",555],["^ ","^2D",35494,"^2E",555],["^ ","^2D",35499,"^2E",555],["^ ","^2D",35503,"^2E",555],["^ ","^2D",35518,"^2E",555],["^ ","^2D",35523,"^2E",555],["^ ","^2D",35527,"^2E",555],["^ ","^2D",35534,"^2E",555],["^ ","^2D",35539,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",35554,"^2E",555],["^ ","^2D",35559,"^2E",555],["^ ","^2D",35559,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",35608,"^2E",555],["^ ","^2D",35608,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",35622,"^2E",555],["^ ","^2D",35622,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",35676,"^2E",555],["^ ","^2D",35681,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",35696,"^2E",555],["^ ","^2D",35701,"^2E",555],["^ ","^2D",35789,"^2E",555],["^ ","^2D",35794,"^2E",555],["^ ","^2D",35798,"^2E",555],["^ ","^2D",35805,"^2E",555],["^ ","^2D",35810,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",35825,"^2E",555],["^ ","^2D",35830,"^2E",555],["^ ","^2D",35830,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",35879,"^2E",555],["^ ","^2D",35879,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",35893,"^2E",555],["^ ","^2D",35893,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",35940,"^2E",555],["^ ","^2D",35945,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",35960,"^2E",555],["^ ","^2D",35965,"^2E",555],["^ ","^2D",36044,"^2E",555],["^ ","^2D",36049,"^2E",555],["^ ","^2D",36053,"^2E",555],["^ ","^2D",36060,"^2E",555],["^ ","^2D",36065,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",36080,"^2E",555],["^ ","^2D",36085,"^2E",555],["^ ","^2D",36179,"^2E",555],["^ ","^2D",36184,"^2E",555],["^ ","^2D",36188,"^2E",555],["^ ","^2D",36198,"^2E",555],["^ ","^2D",36203,"^2E",555],["^ ","^2D",36207,"^2E",555],["^ ","^2D",36264,"^2E",555],["^ ","^2D",36269,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",36284,"^2E",555],["^ ","^2D",36289,"^2E",555],["^ ","^2D",36289,"^2E",555,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",36338,"^2E",555],["^ ","^2D",36338,"^2E",555,"^O","cljs.core/seq"],["^ ","^2D",36352,"^2E",555],["^ ","^2D",36352,"^2E",555,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",36406,"^2E",555],["^ ","^2D",36411,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",36426,"^2E",555],["^ ","^2D",36431,"^2E",555],["^ ","^2D",36566,"^2E",555],["^ ","^2D",36571,"^2E",555],["^ ","^2D",36575,"^2E",555],["^ ","^2D",36582,"^2E",555],["^ ","^2D",36587,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",36602,"^2E",555],["^ ","^2D",36607,"^2E",555],["^ ","^2D",36701,"^2E",555],["^ ","^2D",36706,"^2E",555],["^ ","^2D",36710,"^2E",555],["^ ","^2D",36767,"^2E",555],["^ ","^2D",36772,"^2E",555,"^O","cljs.core/List"],["^ ","^2D",36787,"^2E",555],["^ ","^2D",36792,"^2E",555],["^ ","^2D",36880,"^2E",555],["^ ","^2D",36885,"^2E",555],["^ ","^2D",36889,"^2E",555],["^ ","^2D",36904,"^2E",555],["^ ","^2D",36909,"^2E",555],["^ ","^2D",36913,"^2E",555],["^ ","^2D",36928,"^2E",555],["^ ","^2D",36933,"^2E",555],["^ ","^2D",36937,"^2E",555],["^ ","^2D",36952,"^2E",555],["^ ","^2D",36957,"^2E",555],["^ ","^2D",36961,"^2E",555],["^ ","^2D",36971,"^2E",555],["^ ","^2D",36976,"^2E",555],["^ ","^2D",36980,"^2E",555]],"~i7",[["^ ","^2D",0,"^2E",435,"^O","fulcro.client.primitives/reshape-map"]]],"~i268",["^ ","^2K",[["^ ","^2D",44,"^2E",540],["^ ","^2D",18,"^2E",541,"^O","p__38108"],["^ ","^2D",0,"^2E",542],["^ ","^2D",0,"^2E",542],["^ ","^2D",4,"^2E",542,"^O","vec__38111"],["^ ","^2D",17,"^2E",542,"^O","p__38108"],["^ ","^2D",4,"^2E",543,"^O","seq__38112"],["^ ","^2D",17,"^2E",543],["^ ","^2D",17,"^2E",543,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",543,"^O","vec__38111"],["^ ","^2D",4,"^2E",544,"^O","first__38113"],["^ ","^2D",19,"^2E",544],["^ ","^2D",19,"^2E",544,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",544,"^O","seq__38112"],["^ ","^2D",4,"^2E",545,"^O","seq__38112"],["^ ","^2D",21,"^2E",545],["^ ","^2D",21,"^2E",545,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",545,"^O","seq__38112"],["^ ","^2D",11,"^2E",546,"^O","first__38113"],["^ ","^2D",4,"^2E",547,"^O","first__38113"],["^ ","^2D",23,"^2E",547],["^ ","^2D",23,"^2E",547,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",547,"^O","seq__38112"],["^ ","^2D",4,"^2E",548,"^O","seq__38112"],["^ ","^2D",21,"^2E",548],["^ ","^2D",21,"^2E",548,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",548,"^O","seq__38112"],["^ ","^2D",4,"^2E",549,"^O","vec__38114"],["^ ","^2D",17,"^2E",549,"^O","first__38113"],["^ ","^2D",12,"^2E",550],["^ ","^2D",12,"^2E",550,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",550,"^O","vec__38114"],["^ ","^2D",67,"^2E",550],["^ ","^2D",71,"^2E",550],["^ ","^2D",11,"^2E",551,"^O","vec__38114"],["^ ","^2D",11,"^2E",552,"^O","seq__38112"],["^ ","^2D",0,"^2E",553],["^ ","^2D",0,"^2E",553],["^ ","^2D",7,"^2E",553,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",56,"^2E",553],["^ ","^2D",56,"^2E",553,"^O","cljs.core/seq"],["^ ","^2D",70,"^2E",553],["^ ","^2D",70,"^2E",553,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",124,"^2E",553],["^ ","^2D",129,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",144,"^2E",553],["^ ","^2D",154,"^2E",553],["^ ","^2D",159,"^2E",553],["^ ","^2D",163,"^2E",553],["^ ","^2D",170,"^2E",553],["^ ","^2D",175,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",190,"^2E",553],["^ ","^2D",200,"^2E",553],["^ ","^2D",205,"^2E",553],["^ ","^2D",209,"^2E",553],["^ ","^2D",266,"^2E",553],["^ ","^2D",271,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",286,"^2E",553],["^ ","^2D",291,"^2E",553],["^ ","^2D",291,"^2E",553,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",340,"^2E",553],["^ ","^2D",340,"^2E",553,"^O","cljs.core/seq"],["^ ","^2D",354,"^2E",553],["^ ","^2D",354,"^2E",553,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",408,"^2E",553],["^ ","^2D",413,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",428,"^2E",553],["^ ","^2D",433,"^2E",553],["^ ","^2D",511,"^2E",553],["^ ","^2D",516,"^2E",553],["^ ","^2D",520,"^2E",553],["^ ","^2D",527,"^2E",553],["^ ","^2D",532,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",547,"^2E",553],["^ ","^2D",552,"^2E",553],["^ ","^2D",552,"^2E",553,"^O","cljs.core/vec"],["^ ","^2D",566,"^2E",553],["^ ","^2D",566,"^2E",553,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",615,"^2E",553],["^ ","^2D",615,"^2E",553,"^O","cljs.core/seq"],["^ ","^2D",629,"^2E",553],["^ ","^2D",629,"^2E",553,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",676,"^2E",553],["^ ","^2D",681,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",696,"^2E",553],["^ ","^2D",701,"^2E",553],["^ ","^2D",785,"^2E",553],["^ ","^2D",790,"^2E",553],["^ ","^2D",794,"^2E",553],["^ ","^2D",801,"^2E",553],["^ ","^2D",806,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",821,"^2E",553],["^ ","^2D",826,"^2E",553],["^ ","^2D",826,"^2E",553,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",875,"^2E",553],["^ ","^2D",875,"^2E",553,"^O","cljs.core/seq"],["^ ","^2D",889,"^2E",553],["^ ","^2D",889,"^2E",553,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",936,"^2E",553],["^ ","^2D",941,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",956,"^2E",553],["^ ","^2D",961,"^2E",553],["^ ","^2D",1014,"^2E",553],["^ ","^2D",1019,"^2E",553],["^ ","^2D",1023,"^2E",553],["^ ","^2D",1038,"^2E",553],["^ ","^2D",1043,"^2E",553],["^ ","^2D",1047,"^2E",553],["^ ","^2D",1058,"^2E",553],["^ ","^2D",1063,"^2E",553],["^ ","^2D",1067,"^2E",553],["^ ","^2D",1124,"^2E",553],["^ ","^2D",1129,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",1144,"^2E",553],["^ ","^2D",1149,"^2E",553],["^ ","^2D",1149,"^2E",553,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1198,"^2E",553],["^ ","^2D",1198,"^2E",553,"^O","cljs.core/seq"],["^ ","^2D",1212,"^2E",553],["^ ","^2D",1212,"^2E",553,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1266,"^2E",553],["^ ","^2D",1271,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",1286,"^2E",553],["^ ","^2D",1291,"^2E",553],["^ ","^2D",1369,"^2E",553],["^ ","^2D",1374,"^2E",553],["^ ","^2D",1378,"^2E",553],["^ ","^2D",1385,"^2E",553],["^ ","^2D",1390,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",1405,"^2E",553],["^ ","^2D",1410,"^2E",553],["^ ","^2D",1425,"^2E",553],["^ ","^2D",1430,"^2E",553],["^ ","^2D",1434,"^2E",553],["^ ","^2D",1491,"^2E",553],["^ ","^2D",1496,"^2E",553,"^O","cljs.core/List"],["^ ","^2D",1511,"^2E",553],["^ ","^2D",1516,"^2E",553],["^ ","^2D",1600,"^2E",553],["^ ","^2D",1605,"^2E",553],["^ ","^2D",1609,"^2E",553],["^ ","^2D",1624,"^2E",553],["^ ","^2D",1629,"^2E",553],["^ ","^2D",1633,"^2E",553],["^ ","^2D",1648,"^2E",553],["^ ","^2D",1653,"^2E",553],["^ ","^2D",1657,"^2E",553]],"^2Q",[["^ ","^2D",4,"^2E",546,"^O","name"]],"^4<",[["^ ","^2D",4,"^2E",550,"^O","this"]],"^4B",[["^ ","^2D",4,"^2E",551,"^O","args"]],"~i69",[["^ ","^2D",4,"^2E",552,"^O","body"]]],"~i269",["^ ","^4>",[["^ ","^2D",149,"^2E",553,"^O","name"]],"^3Z",[["^ ","^2D",195,"^2E",553,"^O","args"]]],"~i270",["^ ","^2W",[["^ ","^2D",1030,"^2E",553,"^O","body"]]],"~i272",["^ ","^2K",[["^ ","^2D",1,"^2E",450,"^O","will-receive-props"]]],"~i273",["^ ","^2K",[["^ ","^2D",19,"^2E",540,"^O","will-receive-props"]]],"~i274",["^ ","^2K",[["^ ","^2D",1,"^2E",491,"^O","will-update"]]],"~i275",["^ ","^2K",[["^ ","^2D",1,"^2E",540,"^O","will-update"]]],"~i276",["^ ","^2K",[["^ ","^2D",26,"^2E",450],["^ ","^2D",18,"^2E",451,"^O","p__37987"],["^ ","^2D",0,"^2E",452],["^ ","^2D",0,"^2E",452],["^ ","^2D",4,"^2E",452,"^O","vec__37988"],["^ ","^2D",17,"^2E",452,"^O","p__37987"],["^ ","^2D",4,"^2E",453,"^O","seq__37989"],["^ ","^2D",17,"^2E",453],["^ ","^2D",17,"^2E",453,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",453,"^O","vec__37988"],["^ ","^2D",4,"^2E",454,"^O","first__37990"],["^ ","^2D",19,"^2E",454],["^ ","^2D",19,"^2E",454,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",454,"^O","seq__37989"],["^ ","^2D",4,"^2E",455,"^O","seq__37989"],["^ ","^2D",21,"^2E",455],["^ ","^2D",21,"^2E",455,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",455,"^O","seq__37989"],["^ ","^2D",11,"^2E",456,"^O","first__37990"],["^ ","^2D",4,"^2E",457,"^O","first__37990"],["^ ","^2D",23,"^2E",457],["^ ","^2D",23,"^2E",457,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",457,"^O","seq__37989"],["^ ","^2D",4,"^2E",458,"^O","seq__37989"],["^ ","^2D",21,"^2E",458],["^ ","^2D",21,"^2E",458,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",458,"^O","seq__37989"],["^ ","^2D",4,"^2E",459,"^O","vec__37991"],["^ ","^2D",17,"^2E",459,"^O","first__37990"],["^ ","^2D",4,"^2E",460,"^O","seq__37992"],["^ ","^2D",17,"^2E",460],["^ ","^2D",17,"^2E",460,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",460,"^O","vec__37991"],["^ ","^2D",4,"^2E",461,"^O","first__37993"],["^ ","^2D",19,"^2E",461],["^ ","^2D",19,"^2E",461,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",461,"^O","seq__37992"],["^ ","^2D",4,"^2E",462,"^O","seq__37992"],["^ ","^2D",21,"^2E",462],["^ ","^2D",21,"^2E",462,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",462,"^O","seq__37992"],["^ ","^2D",12,"^2E",463,"^O","first__37993"],["^ ","^2D",4,"^2E",464,"^O","first__37993"],["^ ","^2D",23,"^2E",464],["^ ","^2D",23,"^2E",464,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",464,"^O","seq__37992"],["^ ","^2D",4,"^2E",465,"^O","seq__37992"],["^ ","^2D",21,"^2E",465],["^ ","^2D",21,"^2E",465,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",465,"^O","seq__37992"],["^ ","^2D",17,"^2E",466,"^O","first__37993"],["^ ","^2D",4,"^2E",467,"^O","first__37993"],["^ ","^2D",23,"^2E",467],["^ ","^2D",23,"^2E",467,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",467,"^O","seq__37992"],["^ ","^2D",4,"^2E",468,"^O","seq__37992"],["^ ","^2D",21,"^2E",468],["^ ","^2D",21,"^2E",468,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",468,"^O","seq__37992"],["^ ","^2D",17,"^2E",469,"^O","first__37993"],["^ ","^2D",15,"^2E",470,"^O","seq__37992"],["^ ","^2D",11,"^2E",471,"^O","vec__37991"],["^ ","^2D",11,"^2E",472,"^O","seq__37989"],["^ ","^2D",0,"^2E",473]],"^2Q",[["^ ","^2D",4,"^2E",456,"^O","name"]],"^4<",[["^ ","^2D",4,"^2E",463,"^O","this"]],"^2V",[["^ ","^2D",4,"^2E",466,"^O","prev-props"]],"^40",[["^ ","^2D",4,"^2E",469,"^O","prev-state"]],"^39",[["^ ","^2D",4,"^2E",470,"^O","optional"]],"^3J",[["^ ","^2D",4,"^2E",471,"^O","args"]],"^3Q",[["^ ","^2D",4,"^2E",472,"^O","body"]]],"~i277",["^ ","^3A",[["^ ","^2D",0,"^2E",473],["^ ","^2D",0,"^2E",474],["^ ","^2D",0,"^2E",474],["^ ","^2D",7,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",56,"^2E",474],["^ ","^2D",56,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",70,"^2E",474],["^ ","^2D",70,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",124,"^2E",474],["^ ","^2D",129,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",144,"^2E",474],["^ ","^2D",154,"^2E",474],["^ ","^2D",159,"^2E",474],["^ ","^2D",163,"^2E",474],["^ ","^2D",170,"^2E",474],["^ ","^2D",175,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",190,"^2E",474],["^ ","^2D",195,"^2E",474],["^ ","^2D",195,"^2E",474,"^O","cljs.core/vec"],["^ ","^2D",209,"^2E",474],["^ ","^2D",209,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",258,"^2E",474],["^ ","^2D",258,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",272,"^2E",474],["^ ","^2D",272,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",326,"^2E",474],["^ ","^2D",331,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",346,"^2E",474],["^ ","^2D",351,"^2E",474],["^ ","^2D",437,"^2E",474],["^ ","^2D",442,"^2E",474],["^ ","^2D",446,"^2E",474],["^ ","^2D",453,"^2E",474],["^ ","^2D",458,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",473,"^2E",474],["^ ","^2D",478,"^2E",474],["^ ","^2D",577,"^2E",474],["^ ","^2D",582,"^2E",474],["^ ","^2D",586,"^2E",474],["^ ","^2D",643,"^2E",474],["^ ","^2D",648,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",663,"^2E",474],["^ ","^2D",668,"^2E",474],["^ ","^2D",768,"^2E",474],["^ ","^2D",773,"^2E",474],["^ ","^2D",777,"^2E",474],["^ ","^2D",784,"^2E",474],["^ ","^2D",789,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",804,"^2E",474],["^ ","^2D",809,"^2E",474],["^ ","^2D",903,"^2E",474],["^ ","^2D",908,"^2E",474],["^ ","^2D",912,"^2E",474],["^ ","^2D",928,"^2E",474],["^ ","^2D",933,"^2E",474],["^ ","^2D",937,"^2E",474],["^ ","^2D",994,"^2E",474],["^ ","^2D",999,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",1014,"^2E",474],["^ ","^2D",1019,"^2E",474],["^ ","^2D",1019,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1068,"^2E",474],["^ ","^2D",1068,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",1082,"^2E",474],["^ ","^2D",1082,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1136,"^2E",474],["^ ","^2D",1141,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",1156,"^2E",474],["^ ","^2D",1161,"^2E",474],["^ ","^2D",1239,"^2E",474],["^ ","^2D",1244,"^2E",474],["^ ","^2D",1248,"^2E",474],["^ ","^2D",1255,"^2E",474],["^ ","^2D",1260,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",1275,"^2E",474],["^ ","^2D",1280,"^2E",474],["^ ","^2D",1280,"^2E",474,"^O","cljs.core/vec"],["^ ","^2D",1294,"^2E",474],["^ ","^2D",1294,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1343,"^2E",474],["^ ","^2D",1343,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",1357,"^2E",474],["^ ","^2D",1357,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1411,"^2E",474],["^ ","^2D",1416,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",1431,"^2E",474],["^ ","^2D",1442,"^2E",474],["^ ","^2D",1447,"^2E",474],["^ ","^2D",1451,"^2E",474],["^ ","^2D",1458,"^2E",474],["^ ","^2D",1463,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",1478,"^2E",474],["^ ","^2D",1483,"^2E",474],["^ ","^2D",1569,"^2E",474],["^ ","^2D",1574,"^2E",474],["^ ","^2D",1578,"^2E",474],["^ ","^2D",1635,"^2E",474],["^ ","^2D",1640,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",1655,"^2E",474],["^ ","^2D",1673,"^2E",474],["^ ","^2D",1678,"^2E",474],["^ ","^2D",1682,"^2E",474],["^ ","^2D",1689,"^2E",474],["^ ","^2D",1694,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",1709,"^2E",474],["^ ","^2D",1714,"^2E",474],["^ ","^2D",1808,"^2E",474],["^ ","^2D",1813,"^2E",474],["^ ","^2D",1817,"^2E",474],["^ ","^2D",1824,"^2E",474],["^ ","^2D",1829,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",1844,"^2E",474],["^ ","^2D",1860,"^2E",474],["^ ","^2D",1865,"^2E",474],["^ ","^2D",1869,"^2E",474],["^ ","^2D",1876,"^2E",474],["^ ","^2D",1881,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",1896,"^2E",474],["^ ","^2D",1901,"^2E",474],["^ ","^2D",1901,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1950,"^2E",474],["^ ","^2D",1950,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",1964,"^2E",474],["^ ","^2D",1964,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2018,"^2E",474],["^ ","^2D",2023,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",2038,"^2E",474],["^ ","^2D",2043,"^2E",474],["^ ","^2D",2120,"^2E",474],["^ ","^2D",2125,"^2E",474],["^ ","^2D",2129,"^2E",474],["^ ","^2D",2136,"^2E",474],["^ ","^2D",2141,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",2156,"^2E",474],["^ ","^2D",2161,"^2E",474],["^ ","^2D",2260,"^2E",474],["^ ","^2D",2265,"^2E",474],["^ ","^2D",2269,"^2E",474],["^ ","^2D",2326,"^2E",474],["^ ","^2D",2331,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",2346,"^2E",474],["^ ","^2D",2351,"^2E",474],["^ ","^2D",2366,"^2E",474],["^ ","^2D",2371,"^2E",474],["^ ","^2D",2375,"^2E",474],["^ ","^2D",2390,"^2E",474],["^ ","^2D",2395,"^2E",474],["^ ","^2D",2399,"^2E",474],["^ ","^2D",2406,"^2E",474],["^ ","^2D",2411,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",2426,"^2E",474],["^ ","^2D",2442,"^2E",474],["^ ","^2D",2447,"^2E",474],["^ ","^2D",2451,"^2E",474],["^ ","^2D",2458,"^2E",474],["^ ","^2D",2463,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",2478,"^2E",474],["^ ","^2D",2483,"^2E",474],["^ ","^2D",2483,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2532,"^2E",474],["^ ","^2D",2532,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",2546,"^2E",474],["^ ","^2D",2546,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2600,"^2E",474],["^ ","^2D",2605,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",2620,"^2E",474],["^ ","^2D",2625,"^2E",474],["^ ","^2D",2702,"^2E",474],["^ ","^2D",2707,"^2E",474],["^ ","^2D",2711,"^2E",474],["^ ","^2D",2718,"^2E",474],["^ ","^2D",2723,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",2738,"^2E",474],["^ ","^2D",2743,"^2E",474],["^ ","^2D",2843,"^2E",474],["^ ","^2D",2848,"^2E",474],["^ ","^2D",2852,"^2E",474],["^ ","^2D",2909,"^2E",474],["^ ","^2D",2914,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",2929,"^2E",474],["^ ","^2D",2934,"^2E",474],["^ ","^2D",2949,"^2E",474],["^ ","^2D",2954,"^2E",474],["^ ","^2D",2958,"^2E",474],["^ ","^2D",2973,"^2E",474],["^ ","^2D",2978,"^2E",474],["^ ","^2D",2982,"^2E",474],["^ ","^2D",2998,"^2E",474],["^ ","^2D",3003,"^2E",474],["^ ","^2D",3007,"^2E",474],["^ ","^2D",3064,"^2E",474],["^ ","^2D",3069,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",3084,"^2E",474],["^ ","^2D",3089,"^2E",474],["^ ","^2D",3089,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3138,"^2E",474],["^ ","^2D",3138,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",3152,"^2E",474],["^ ","^2D",3152,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",3206,"^2E",474],["^ ","^2D",3211,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",3226,"^2E",474],["^ ","^2D",3231,"^2E",474],["^ ","^2D",3309,"^2E",474],["^ ","^2D",3314,"^2E",474],["^ ","^2D",3318,"^2E",474],["^ ","^2D",3325,"^2E",474],["^ ","^2D",3330,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",3345,"^2E",474],["^ ","^2D",3350,"^2E",474],["^ ","^2D",3350,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3399,"^2E",474],["^ ","^2D",3399,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",3413,"^2E",474],["^ ","^2D",3413,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",3467,"^2E",474],["^ ","^2D",3472,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",3487,"^2E",474],["^ ","^2D",3492,"^2E",474],["^ ","^2D",3580,"^2E",474],["^ ","^2D",3585,"^2E",474],["^ ","^2D",3589,"^2E",474],["^ ","^2D",3596,"^2E",474],["^ ","^2D",3601,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",3616,"^2E",474],["^ ","^2D",3621,"^2E",474],["^ ","^2D",3728,"^2E",474],["^ ","^2D",3733,"^2E",474],["^ ","^2D",3737,"^2E",474],["^ ","^2D",3794,"^2E",474],["^ ","^2D",3799,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",3814,"^2E",474],["^ ","^2D",3819,"^2E",474],["^ ","^2D",3905,"^2E",474],["^ ","^2D",3910,"^2E",474],["^ ","^2D",3914,"^2E",474],["^ ","^2D",3929,"^2E",474],["^ ","^2D",3934,"^2E",474],["^ ","^2D",3938,"^2E",474],["^ ","^2D",3995,"^2E",474],["^ ","^2D",4000,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",4015,"^2E",474],["^ ","^2D",4020,"^2E",474],["^ ","^2D",4020,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4069,"^2E",474],["^ ","^2D",4069,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",4083,"^2E",474],["^ ","^2D",4083,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",4137,"^2E",474],["^ ","^2D",4142,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",4157,"^2E",474],["^ ","^2D",4162,"^2E",474],["^ ","^2D",4240,"^2E",474],["^ ","^2D",4245,"^2E",474],["^ ","^2D",4249,"^2E",474],["^ ","^2D",4256,"^2E",474],["^ ","^2D",4261,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",4276,"^2E",474],["^ ","^2D",4281,"^2E",474],["^ ","^2D",4281,"^2E",474,"^O","cljs.core/vec"],["^ ","^2D",4295,"^2E",474],["^ ","^2D",4295,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4344,"^2E",474],["^ ","^2D",4344,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",4358,"^2E",474],["^ ","^2D",4358,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",4412,"^2E",474],["^ ","^2D",4417,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",4432,"^2E",474],["^ ","^2D",4437,"^2E",474],["^ ","^2D",4525,"^2E",474],["^ ","^2D",4530,"^2E",474],["^ ","^2D",4534,"^2E",474],["^ ","^2D",4541,"^2E",474],["^ ","^2D",4546,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",4561,"^2E",474],["^ ","^2D",4566,"^2E",474],["^ ","^2D",4566,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4615,"^2E",474],["^ ","^2D",4615,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",4629,"^2E",474],["^ ","^2D",4629,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",4683,"^2E",474],["^ ","^2D",4688,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",4703,"^2E",474],["^ ","^2D",4708,"^2E",474],["^ ","^2D",4813,"^2E",474],["^ ","^2D",4818,"^2E",474],["^ ","^2D",4822,"^2E",474],["^ ","^2D",4829,"^2E",474],["^ ","^2D",4834,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",4849,"^2E",474],["^ ","^2D",4854,"^2E",474],["^ ","^2D",4940,"^2E",474],["^ ","^2D",4945,"^2E",474],["^ ","^2D",4949,"^2E",474],["^ ","^2D",5006,"^2E",474],["^ ","^2D",5011,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",5026,"^2E",474],["^ ","^2D",5042,"^2E",474],["^ ","^2D",5047,"^2E",474],["^ ","^2D",5051,"^2E",474],["^ ","^2D",5066,"^2E",474],["^ ","^2D",5071,"^2E",474],["^ ","^2D",5075,"^2E",474],["^ ","^2D",5132,"^2E",474],["^ ","^2D",5137,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",5152,"^2E",474],["^ ","^2D",5157,"^2E",474],["^ ","^2D",5257,"^2E",474],["^ ","^2D",5262,"^2E",474],["^ ","^2D",5266,"^2E",474],["^ ","^2D",5273,"^2E",474],["^ ","^2D",5278,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",5293,"^2E",474],["^ ","^2D",5298,"^2E",474],["^ ","^2D",5298,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",5347,"^2E",474],["^ ","^2D",5347,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",5361,"^2E",474],["^ ","^2D",5361,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",5415,"^2E",474],["^ ","^2D",5420,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",5435,"^2E",474],["^ ","^2D",5440,"^2E",474],["^ ","^2D",5545,"^2E",474],["^ ","^2D",5550,"^2E",474],["^ ","^2D",5554,"^2E",474],["^ ","^2D",5561,"^2E",474],["^ ","^2D",5566,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",5581,"^2E",474],["^ ","^2D",5586,"^2E",474],["^ ","^2D",5672,"^2E",474],["^ ","^2D",5677,"^2E",474],["^ ","^2D",5681,"^2E",474],["^ ","^2D",5738,"^2E",474],["^ ","^2D",5743,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",5758,"^2E",474],["^ ","^2D",5763,"^2E",474],["^ ","^2D",5763,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",5812,"^2E",474],["^ ","^2D",5812,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",5826,"^2E",474],["^ ","^2D",5826,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",5873,"^2E",474],["^ ","^2D",5878,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",5893,"^2E",474],["^ ","^2D",5898,"^2E",474],["^ ","^2D",6004,"^2E",474],["^ ","^2D",6009,"^2E",474],["^ ","^2D",6013,"^2E",474],["^ ","^2D",6020,"^2E",474],["^ ","^2D",6025,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",6040,"^2E",474],["^ ","^2D",6045,"^2E",474],["^ ","^2D",6131,"^2E",474],["^ ","^2D",6136,"^2E",474],["^ ","^2D",6140,"^2E",474],["^ ","^2D",6150,"^2E",474],["^ ","^2D",6155,"^2E",474],["^ ","^2D",6159,"^2E",474],["^ ","^2D",6174,"^2E",474],["^ ","^2D",6179,"^2E",474],["^ ","^2D",6183,"^2E",474],["^ ","^2D",6199,"^2E",474],["^ ","^2D",6204,"^2E",474],["^ ","^2D",6208,"^2E",474],["^ ","^2D",6265,"^2E",474],["^ ","^2D",6270,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",6285,"^2E",474],["^ ","^2D",6290,"^2E",474],["^ ","^2D",6290,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",6339,"^2E",474],["^ ","^2D",6339,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",6353,"^2E",474],["^ ","^2D",6353,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",6407,"^2E",474],["^ ","^2D",6412,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",6427,"^2E",474],["^ ","^2D",6432,"^2E",474],["^ ","^2D",6510,"^2E",474],["^ ","^2D",6515,"^2E",474],["^ ","^2D",6519,"^2E",474],["^ ","^2D",6526,"^2E",474],["^ ","^2D",6531,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",6546,"^2E",474],["^ ","^2D",6551,"^2E",474],["^ ","^2D",6551,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",6600,"^2E",474],["^ ","^2D",6600,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",6614,"^2E",474],["^ ","^2D",6614,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",6668,"^2E",474],["^ ","^2D",6673,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",6688,"^2E",474],["^ ","^2D",6693,"^2E",474],["^ ","^2D",6772,"^2E",474],["^ ","^2D",6777,"^2E",474],["^ ","^2D",6781,"^2E",474],["^ ","^2D",6788,"^2E",474],["^ ","^2D",6793,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",6808,"^2E",474],["^ ","^2D",6813,"^2E",474],["^ ","^2D",6901,"^2E",474],["^ ","^2D",6906,"^2E",474],["^ ","^2D",6910,"^2E",474],["^ ","^2D",6967,"^2E",474],["^ ","^2D",6972,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",6987,"^2E",474],["^ ","^2D",6992,"^2E",474],["^ ","^2D",7092,"^2E",474],["^ ","^2D",7097,"^2E",474],["^ ","^2D",7101,"^2E",474],["^ ","^2D",7116,"^2E",474],["^ ","^2D",7121,"^2E",474],["^ ","^2D",7125,"^2E",474],["^ ","^2D",7182,"^2E",474],["^ ","^2D",7187,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",7202,"^2E",474],["^ ","^2D",7207,"^2E",474],["^ ","^2D",7207,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",7256,"^2E",474],["^ ","^2D",7256,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",7270,"^2E",474],["^ ","^2D",7270,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",7324,"^2E",474],["^ ","^2D",7329,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",7344,"^2E",474],["^ ","^2D",7349,"^2E",474],["^ ","^2D",7427,"^2E",474],["^ ","^2D",7432,"^2E",474],["^ ","^2D",7436,"^2E",474],["^ ","^2D",7443,"^2E",474],["^ ","^2D",7448,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",7463,"^2E",474],["^ ","^2D",7468,"^2E",474],["^ ","^2D",7468,"^2E",474,"^O","cljs.core/vec"],["^ ","^2D",7482,"^2E",474],["^ ","^2D",7482,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",7531,"^2E",474],["^ ","^2D",7531,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",7545,"^2E",474],["^ ","^2D",7545,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",7592,"^2E",474],["^ ","^2D",7597,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",7612,"^2E",474],["^ ","^2D",7617,"^2E",474],["^ ","^2D",7705,"^2E",474],["^ ","^2D",7710,"^2E",474],["^ ","^2D",7714,"^2E",474],["^ ","^2D",7721,"^2E",474],["^ ","^2D",7726,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",7741,"^2E",474],["^ ","^2D",7746,"^2E",474],["^ ","^2D",7746,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",7795,"^2E",474],["^ ","^2D",7795,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",7809,"^2E",474],["^ ","^2D",7809,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",7863,"^2E",474],["^ ","^2D",7868,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",7883,"^2E",474],["^ ","^2D",7888,"^2E",474],["^ ","^2D",7973,"^2E",474],["^ ","^2D",7978,"^2E",474],["^ ","^2D",7982,"^2E",474],["^ ","^2D",7989,"^2E",474],["^ ","^2D",7994,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",8009,"^2E",474],["^ ","^2D",8014,"^2E",474],["^ ","^2D",8014,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",8063,"^2E",474],["^ ","^2D",8063,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",8077,"^2E",474],["^ ","^2D",8077,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",8124,"^2E",474],["^ ","^2D",8129,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",8144,"^2E",474],["^ ","^2D",8149,"^2E",474],["^ ","^2D",8272,"^2E",474],["^ ","^2D",8277,"^2E",474],["^ ","^2D",8281,"^2E",474],["^ ","^2D",8288,"^2E",474],["^ ","^2D",8293,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",8308,"^2E",474],["^ ","^2D",8313,"^2E",474],["^ ","^2D",8399,"^2E",474],["^ ","^2D",8404,"^2E",474],["^ ","^2D",8408,"^2E",474],["^ ","^2D",8418,"^2E",474],["^ ","^2D",8423,"^2E",474],["^ ","^2D",8427,"^2E",474],["^ ","^2D",8484,"^2E",474],["^ ","^2D",8489,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",8504,"^2E",474],["^ ","^2D",8509,"^2E",474],["^ ","^2D",8509,"^2E",474,"^O","cljs.core/vec"],["^ ","^2D",8523,"^2E",474],["^ ","^2D",8523,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",8572,"^2E",474],["^ ","^2D",8572,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",8586,"^2E",474],["^ ","^2D",8586,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",8633,"^2E",474],["^ ","^2D",8638,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",8653,"^2E",474],["^ ","^2D",8658,"^2E",474],["^ ","^2D",8714,"^2E",474],["^ ","^2D",8719,"^2E",474],["^ ","^2D",8723,"^2E",474],["^ ","^2D",8730,"^2E",474],["^ ","^2D",8735,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",8750,"^2E",474],["^ ","^2D",8755,"^2E",474],["^ ","^2D",8815,"^2E",474],["^ ","^2D",8820,"^2E",474],["^ ","^2D",8824,"^2E",474],["^ ","^2D",8835,"^2E",474],["^ ","^2D",8840,"^2E",474],["^ ","^2D",8844,"^2E",474],["^ ","^2D",8859,"^2E",474],["^ ","^2D",8864,"^2E",474],["^ ","^2D",8868,"^2E",474],["^ ","^2D",8879,"^2E",474],["^ ","^2D",8884,"^2E",474],["^ ","^2D",8888,"^2E",474],["^ ","^2D",8945,"^2E",474],["^ ","^2D",8950,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",8965,"^2E",474],["^ ","^2D",8970,"^2E",474],["^ ","^2D",8970,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",9019,"^2E",474],["^ ","^2D",9019,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",9033,"^2E",474],["^ ","^2D",9033,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",9087,"^2E",474],["^ ","^2D",9092,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",9107,"^2E",474],["^ ","^2D",9112,"^2E",474],["^ ","^2D",9200,"^2E",474],["^ ","^2D",9205,"^2E",474],["^ ","^2D",9209,"^2E",474],["^ ","^2D",9216,"^2E",474],["^ ","^2D",9221,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",9236,"^2E",474],["^ ","^2D",9241,"^2E",474],["^ ","^2D",9241,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",9290,"^2E",474],["^ ","^2D",9290,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",9304,"^2E",474],["^ ","^2D",9304,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",9351,"^2E",474],["^ ","^2D",9356,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",9371,"^2E",474],["^ ","^2D",9376,"^2E",474],["^ ","^2D",9455,"^2E",474],["^ ","^2D",9460,"^2E",474],["^ ","^2D",9464,"^2E",474],["^ ","^2D",9471,"^2E",474],["^ ","^2D",9476,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",9491,"^2E",474],["^ ","^2D",9496,"^2E",474],["^ ","^2D",9584,"^2E",474],["^ ","^2D",9589,"^2E",474],["^ ","^2D",9593,"^2E",474],["^ ","^2D",9603,"^2E",474],["^ ","^2D",9608,"^2E",474],["^ ","^2D",9612,"^2E",474],["^ ","^2D",9669,"^2E",474],["^ ","^2D",9674,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",9689,"^2E",474],["^ ","^2D",9694,"^2E",474],["^ ","^2D",9694,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",9743,"^2E",474],["^ ","^2D",9743,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",9757,"^2E",474],["^ ","^2D",9757,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",9811,"^2E",474],["^ ","^2D",9816,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",9831,"^2E",474],["^ ","^2D",9836,"^2E",474],["^ ","^2D",9919,"^2E",474],["^ ","^2D",9924,"^2E",474],["^ ","^2D",9928,"^2E",474],["^ ","^2D",9935,"^2E",474],["^ ","^2D",9940,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",9955,"^2E",474],["^ ","^2D",9960,"^2E",474],["^ ","^2D",9960,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",10009,"^2E",474],["^ ","^2D",10009,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",10023,"^2E",474],["^ ","^2D",10023,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",10070,"^2E",474],["^ ","^2D",10075,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",10090,"^2E",474],["^ ","^2D",10095,"^2E",474],["^ ","^2D",10154,"^2E",474],["^ ","^2D",10159,"^2E",474],["^ ","^2D",10163,"^2E",474],["^ ","^2D",10170,"^2E",474],["^ ","^2D",10175,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",10190,"^2E",474],["^ ","^2D",10195,"^2E",474],["^ ","^2D",10283,"^2E",474],["^ ","^2D",10288,"^2E",474],["^ ","^2D",10292,"^2E",474],["^ ","^2D",10302,"^2E",474],["^ ","^2D",10307,"^2E",474],["^ ","^2D",10311,"^2E",474],["^ ","^2D",10368,"^2E",474],["^ ","^2D",10373,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",10388,"^2E",474],["^ ","^2D",10393,"^2E",474],["^ ","^2D",10393,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",10442,"^2E",474],["^ ","^2D",10442,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",10456,"^2E",474],["^ ","^2D",10456,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",10510,"^2E",474],["^ ","^2D",10515,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",10530,"^2E",474],["^ ","^2D",10535,"^2E",474],["^ ","^2D",10611,"^2E",474],["^ ","^2D",10616,"^2E",474],["^ ","^2D",10620,"^2E",474],["^ ","^2D",10627,"^2E",474],["^ ","^2D",10632,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",10647,"^2E",474],["^ ","^2D",10652,"^2E",474],["^ ","^2D",10652,"^2E",474,"^O","cljs.core/vec"],["^ ","^2D",10666,"^2E",474],["^ ","^2D",10666,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",10715,"^2E",474],["^ ","^2D",10715,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",10729,"^2E",474],["^ ","^2D",10729,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",10776,"^2E",474],["^ ","^2D",10781,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",10796,"^2E",474],["^ ","^2D",10801,"^2E",474],["^ ","^2D",10893,"^2E",474],["^ ","^2D",10898,"^2E",474],["^ ","^2D",10902,"^2E",474],["^ ","^2D",10913,"^2E",474],["^ ","^2D",10918,"^2E",474],["^ ","^2D",10922,"^2E",474],["^ ","^2D",10979,"^2E",474],["^ ","^2D",10984,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",10999,"^2E",474],["^ ","^2D",11004,"^2E",474],["^ ","^2D",11004,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",11053,"^2E",474],["^ ","^2D",11053,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",11067,"^2E",474],["^ ","^2D",11067,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",11121,"^2E",474],["^ ","^2D",11126,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",11141,"^2E",474],["^ ","^2D",11146,"^2E",474],["^ ","^2D",11222,"^2E",474],["^ ","^2D",11227,"^2E",474],["^ ","^2D",11231,"^2E",474],["^ ","^2D",11238,"^2E",474],["^ ","^2D",11243,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",11258,"^2E",474],["^ ","^2D",11263,"^2E",474],["^ ","^2D",11355,"^2E",474],["^ ","^2D",11360,"^2E",474],["^ ","^2D",11364,"^2E",474],["^ ","^2D",11421,"^2E",474],["^ ","^2D",11426,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",11441,"^2E",474],["^ ","^2D",11446,"^2E",474],["^ ","^2D",11446,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",11495,"^2E",474],["^ ","^2D",11495,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",11509,"^2E",474],["^ ","^2D",11509,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",11563,"^2E",474],["^ ","^2D",11568,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",11583,"^2E",474],["^ ","^2D",11588,"^2E",474],["^ ","^2D",11678,"^2E",474],["^ ","^2D",11683,"^2E",474],["^ ","^2D",11687,"^2E",474],["^ ","^2D",11694,"^2E",474],["^ ","^2D",11699,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",11714,"^2E",474],["^ ","^2D",11719,"^2E",474],["^ ","^2D",11719,"^2E",474,"^O","cljs.core/vec"],["^ ","^2D",11733,"^2E",474],["^ ","^2D",11733,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",11782,"^2E",474],["^ ","^2D",11782,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",11796,"^2E",474],["^ ","^2D",11796,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",11843,"^2E",474],["^ ","^2D",11848,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",11863,"^2E",474],["^ ","^2D",11868,"^2E",474],["^ ","^2D",11943,"^2E",474],["^ ","^2D",11948,"^2E",474],["^ ","^2D",11952,"^2E",474],["^ ","^2D",11959,"^2E",474],["^ ","^2D",11964,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",11979,"^2E",474],["^ ","^2D",11984,"^2E",474],["^ ","^2D",12072,"^2E",474],["^ ","^2D",12077,"^2E",474],["^ ","^2D",12081,"^2E",474],["^ ","^2D",12092,"^2E",474],["^ ","^2D",12097,"^2E",474],["^ ","^2D",12101,"^2E",474],["^ ","^2D",12158,"^2E",474],["^ ","^2D",12163,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",12178,"^2E",474],["^ ","^2D",12183,"^2E",474],["^ ","^2D",12263,"^2E",474],["^ ","^2D",12268,"^2E",474],["^ ","^2D",12272,"^2E",474],["^ ","^2D",12279,"^2E",474],["^ ","^2D",12284,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",12299,"^2E",474],["^ ","^2D",12304,"^2E",474],["^ ","^2D",12390,"^2E",474],["^ ","^2D",12395,"^2E",474],["^ ","^2D",12399,"^2E",474],["^ ","^2D",12414,"^2E",474],["^ ","^2D",12419,"^2E",474],["^ ","^2D",12423,"^2E",474],["^ ","^2D",12430,"^2E",474],["^ ","^2D",12435,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",12450,"^2E",474],["^ ","^2D",12455,"^2E",474],["^ ","^2D",12455,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",12504,"^2E",474],["^ ","^2D",12504,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",12518,"^2E",474],["^ ","^2D",12518,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",12572,"^2E",474],["^ ","^2D",12577,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",12592,"^2E",474],["^ ","^2D",12597,"^2E",474],["^ ","^2D",12687,"^2E",474],["^ ","^2D",12692,"^2E",474],["^ ","^2D",12696,"^2E",474],["^ ","^2D",12703,"^2E",474],["^ ","^2D",12708,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",12723,"^2E",474],["^ ","^2D",12728,"^2E",474],["^ ","^2D",12728,"^2E",474,"^O","cljs.core/vec"],["^ ","^2D",12742,"^2E",474],["^ ","^2D",12742,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",12791,"^2E",474],["^ ","^2D",12791,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",12805,"^2E",474],["^ ","^2D",12805,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",12852,"^2E",474],["^ ","^2D",12857,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",12872,"^2E",474],["^ ","^2D",12877,"^2E",474],["^ ","^2D",12952,"^2E",474],["^ ","^2D",12957,"^2E",474],["^ ","^2D",12961,"^2E",474],["^ ","^2D",12968,"^2E",474],["^ ","^2D",12973,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",12988,"^2E",474],["^ ","^2D",12993,"^2E",474],["^ ","^2D",13093,"^2E",474],["^ ","^2D",13098,"^2E",474],["^ ","^2D",13102,"^2E",474],["^ ","^2D",13113,"^2E",474],["^ ","^2D",13118,"^2E",474],["^ ","^2D",13122,"^2E",474],["^ ","^2D",13179,"^2E",474],["^ ","^2D",13184,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",13199,"^2E",474],["^ ","^2D",13204,"^2E",474],["^ ","^2D",13204,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",13253,"^2E",474],["^ ","^2D",13253,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",13267,"^2E",474],["^ ","^2D",13267,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",13321,"^2E",474],["^ ","^2D",13326,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",13341,"^2E",474],["^ ","^2D",13346,"^2E",474],["^ ","^2D",13425,"^2E",474],["^ ","^2D",13430,"^2E",474],["^ ","^2D",13434,"^2E",474],["^ ","^2D",13441,"^2E",474],["^ ","^2D",13446,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",13461,"^2E",474],["^ ","^2D",13466,"^2E",474],["^ ","^2D",13546,"^2E",474],["^ ","^2D",13551,"^2E",474],["^ ","^2D",13555,"^2E",474],["^ ","^2D",13612,"^2E",474],["^ ","^2D",13617,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",13632,"^2E",474],["^ ","^2D",13637,"^2E",474],["^ ","^2D",13637,"^2E",474,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",13683,"^2E",474,"^O","cljs.core/hash-set"],["^ ","^2D",13702,"^2E",474],["^ ","^2D",13702,"^2E",474,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",13751,"^2E",474],["^ ","^2D",13751,"^2E",474,"^O","cljs.core/seq"],["^ ","^2D",13765,"^2E",474],["^ ","^2D",13765,"^2E",474,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$0"],["^ ","^2D",13817,"^2E",474],["^ ","^2D",13822,"^2E",474],["^ ","^2D",13826,"^2E",474],["^ ","^2D",13841,"^2E",474],["^ ","^2D",13846,"^2E",474],["^ ","^2D",13850,"^2E",474],["^ ","^2D",13857,"^2E",474],["^ ","^2D",13862,"^2E",474,"^O","cljs.core/List"],["^ ","^2D",13877,"^2E",474],["^ ","^2D",13882,"^2E",474],["^ ","^2D",13968,"^2E",474],["^ ","^2D",13973,"^2E",474],["^ ","^2D",13977,"^2E",474],["^ ","^2D",13992,"^2E",474],["^ ","^2D",13997,"^2E",474],["^ ","^2D",14001,"^2E",474],["^ ","^2D",14016,"^2E",474],["^ ","^2D",14021,"^2E",474],["^ ","^2D",14025,"^2E",474],["^ ","^2D",14040,"^2E",474],["^ ","^2D",14045,"^2E",474],["^ ","^2D",14049,"^2E",474],["^ ","^2D",14064,"^2E",474],["^ ","^2D",14069,"^2E",474],["^ ","^2D",14073,"^2E",474],["^ ","^2D",14088,"^2E",474],["^ ","^2D",14093,"^2E",474],["^ ","^2D",14097,"^2E",474],["^ ","^2D",14112,"^2E",474],["^ ","^2D",14117,"^2E",474],["^ ","^2D",14121,"^2E",474],["^ ","^2D",14136,"^2E",474],["^ ","^2D",14141,"^2E",474],["^ ","^2D",14145,"^2E",474],["^ ","^2D",14160,"^2E",474],["^ ","^2D",14165,"^2E",474],["^ ","^2D",14169,"^2E",474],["^ ","^2D",14184,"^2E",474],["^ ","^2D",14189,"^2E",474],["^ ","^2D",14193,"^2E",474],["^ ","^2D",14213,"^2E",474],["^ ","^2D",14218,"^2E",474],["^ ","^2D",14222,"^2E",474]],"^2R",[["^ ","^2D",4,"^2E",473,"^O","snapshot-sym"]],"^4B",[["^ ","^2D",19,"^2E",473]],"^61",[["^ ","^2D",21,"^2E",473],["^ ","^2D",59,"^2E",473,"^O","cljs.core/Symbol"]],"~i74",[["^ ","^2D",22,"^2E",473]],"^32",[["^ ","^2D",22,"^2E",473,"^O","cljs.core/first"]],"^39",[["^ ","^2D",38,"^2E",473,"^O","optional"]],"^3G",[["^ ","^2D",78,"^2E",473]],"^3I",[["^ ","^2D",78,"^2E",473,"^O","cljs.core/first"]],"^3O",[["^ ","^2D",94,"^2E",473,"^O","optional"]],"^43",[["^ ","^2D",104,"^2E",473],["^ ","^2D",151,"^2E",473]],"^45",[["^ ","^2D",104,"^2E",473,"^O","cljs.core.gensym.cljs$core$IFn$_invoke$arity$1"]]],"~i278",["^ ","^5C",[["^ ","^2D",149,"^2E",474,"^O","name"]]],"~i279",["^ ","^4E",[["^ ","^2D",1436,"^2E",474,"^O","this"]]],"~i280",["^ ","^4E",[["^ ","^2D",1660,"^2E",474,"^O","snapshot-sym"]]],"~i281",["^ ","^4E",[["^ ","^2D",1849,"^2E",474,"^O","prev-props"]]],"~i282",["^ ","^4E",[["^ ","^2D",2431,"^2E",474,"^O","prev-state"]]],"~i284",["^ ","^42",[["^ ","^2D",5031,"^2E",474,"^O","prev-props"]]],"~i294",["^ ","^3Z",[["^ ","^2D",14200,"^2E",474,"^O","body"]]],"~i295",["^ ","^2K",[["^ ","^2D",1,"^2E",476],["^ ","^2D",18,"^2E",477,"^O","p__38020"],["^ ","^2D",0,"^2E",478],["^ ","^2D",0,"^2E",478],["^ ","^2D",4,"^2E",478,"^O","vec__38023"],["^ ","^2D",17,"^2E",478,"^O","p__38020"],["^ ","^2D",4,"^2E",479,"^O","seq__38024"],["^ ","^2D",17,"^2E",479],["^ ","^2D",17,"^2E",479,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",479,"^O","vec__38023"],["^ ","^2D",4,"^2E",480,"^O","first__38025"],["^ ","^2D",19,"^2E",480],["^ ","^2D",19,"^2E",480,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",480,"^O","seq__38024"],["^ ","^2D",4,"^2E",481,"^O","seq__38024"],["^ ","^2D",21,"^2E",481],["^ ","^2D",21,"^2E",481,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",481,"^O","seq__38024"],["^ ","^2D",11,"^2E",482,"^O","first__38025"],["^ ","^2D",4,"^2E",483,"^O","first__38025"],["^ ","^2D",23,"^2E",483],["^ ","^2D",23,"^2E",483,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",483,"^O","seq__38024"],["^ ","^2D",4,"^2E",484,"^O","seq__38024"],["^ ","^2D",21,"^2E",484],["^ ","^2D",21,"^2E",484,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",484,"^O","seq__38024"],["^ ","^2D",4,"^2E",485,"^O","vec__38026"],["^ ","^2D",17,"^2E",485,"^O","first__38025"],["^ ","^2D",12,"^2E",486],["^ ","^2D",12,"^2E",486,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",486,"^O","vec__38026"],["^ ","^2D",67,"^2E",486],["^ ","^2D",71,"^2E",486],["^ ","^2D",11,"^2E",487,"^O","vec__38026"],["^ ","^2D",11,"^2E",488,"^O","seq__38024"],["^ ","^2D",0,"^2E",489],["^ ","^2D",0,"^2E",489],["^ ","^2D",7,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",56,"^2E",489],["^ ","^2D",56,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",70,"^2E",489],["^ ","^2D",70,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",124,"^2E",489],["^ ","^2D",129,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",144,"^2E",489],["^ ","^2D",154,"^2E",489],["^ ","^2D",159,"^2E",489],["^ ","^2D",163,"^2E",489],["^ ","^2D",170,"^2E",489],["^ ","^2D",175,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",190,"^2E",489],["^ ","^2D",195,"^2E",489],["^ ","^2D",195,"^2E",489,"^O","cljs.core/vec"],["^ ","^2D",209,"^2E",489],["^ ","^2D",209,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",258,"^2E",489],["^ ","^2D",258,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",272,"^2E",489],["^ ","^2D",272,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",319,"^2E",489],["^ ","^2D",324,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",339,"^2E",489],["^ ","^2D",344,"^2E",489],["^ ","^2D",431,"^2E",489],["^ ","^2D",436,"^2E",489],["^ ","^2D",440,"^2E",489],["^ ","^2D",451,"^2E",489],["^ ","^2D",456,"^2E",489],["^ ","^2D",460,"^2E",489],["^ ","^2D",517,"^2E",489],["^ ","^2D",522,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",537,"^2E",489],["^ ","^2D",542,"^2E",489],["^ ","^2D",542,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",591,"^2E",489],["^ ","^2D",591,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",605,"^2E",489],["^ ","^2D",605,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",659,"^2E",489],["^ ","^2D",664,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",679,"^2E",489],["^ ","^2D",684,"^2E",489],["^ ","^2D",762,"^2E",489],["^ ","^2D",767,"^2E",489],["^ ","^2D",771,"^2E",489],["^ ","^2D",778,"^2E",489],["^ ","^2D",783,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",798,"^2E",489],["^ ","^2D",803,"^2E",489],["^ ","^2D",803,"^2E",489,"^O","cljs.core/vec"],["^ ","^2D",817,"^2E",489],["^ ","^2D",817,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",866,"^2E",489],["^ ","^2D",866,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",880,"^2E",489],["^ ","^2D",880,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",934,"^2E",489],["^ ","^2D",939,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",954,"^2E",489],["^ ","^2D",965,"^2E",489],["^ ","^2D",970,"^2E",489],["^ ","^2D",974,"^2E",489],["^ ","^2D",981,"^2E",489],["^ ","^2D",986,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",1001,"^2E",489],["^ ","^2D",1006,"^2E",489],["^ ","^2D",1093,"^2E",489],["^ ","^2D",1098,"^2E",489],["^ ","^2D",1102,"^2E",489],["^ ","^2D",1159,"^2E",489],["^ ","^2D",1164,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",1179,"^2E",489],["^ ","^2D",1184,"^2E",489],["^ ","^2D",1284,"^2E",489],["^ ","^2D",1289,"^2E",489],["^ ","^2D",1293,"^2E",489],["^ ","^2D",1300,"^2E",489],["^ ","^2D",1305,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",1320,"^2E",489],["^ ","^2D",1325,"^2E",489],["^ ","^2D",1325,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1374,"^2E",489],["^ ","^2D",1374,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",1388,"^2E",489],["^ ","^2D",1388,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",1435,"^2E",489],["^ ","^2D",1440,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",1455,"^2E",489],["^ ","^2D",1460,"^2E",489],["^ ","^2D",1583,"^2E",489],["^ ","^2D",1588,"^2E",489],["^ ","^2D",1592,"^2E",489],["^ ","^2D",1599,"^2E",489],["^ ","^2D",1604,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",1619,"^2E",489],["^ ","^2D",1624,"^2E",489],["^ ","^2D",1711,"^2E",489],["^ ","^2D",1716,"^2E",489],["^ ","^2D",1720,"^2E",489],["^ ","^2D",1730,"^2E",489],["^ ","^2D",1735,"^2E",489],["^ ","^2D",1739,"^2E",489],["^ ","^2D",1746,"^2E",489],["^ ","^2D",1751,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",1766,"^2E",489],["^ ","^2D",1771,"^2E",489],["^ ","^2D",1868,"^2E",489],["^ ","^2D",1873,"^2E",489],["^ ","^2D",1877,"^2E",489],["^ ","^2D",1884,"^2E",489],["^ ","^2D",1889,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",1904,"^2E",489],["^ ","^2D",1909,"^2E",489],["^ ","^2D",1909,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1958,"^2E",489],["^ ","^2D",1958,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",1972,"^2E",489],["^ ","^2D",1972,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2026,"^2E",489],["^ ","^2D",2031,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",2046,"^2E",489],["^ ","^2D",2051,"^2E",489],["^ ","^2D",2136,"^2E",489],["^ ","^2D",2141,"^2E",489],["^ ","^2D",2145,"^2E",489],["^ ","^2D",2152,"^2E",489],["^ ","^2D",2157,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",2172,"^2E",489],["^ ","^2D",2177,"^2E",489],["^ ","^2D",2277,"^2E",489],["^ ","^2D",2282,"^2E",489],["^ ","^2D",2286,"^2E",489],["^ ","^2D",2343,"^2E",489],["^ ","^2D",2348,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",2363,"^2E",489],["^ ","^2D",2368,"^2E",489],["^ ","^2D",2368,"^2E",489,"^O","cljs.core/vec"],["^ ","^2D",2382,"^2E",489],["^ ","^2D",2382,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2431,"^2E",489],["^ ","^2D",2431,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",2445,"^2E",489],["^ ","^2D",2445,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",2492,"^2E",489],["^ ","^2D",2497,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",2512,"^2E",489],["^ ","^2D",2517,"^2E",489],["^ ","^2D",2573,"^2E",489],["^ ","^2D",2578,"^2E",489],["^ ","^2D",2582,"^2E",489],["^ ","^2D",2589,"^2E",489],["^ ","^2D",2594,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",2609,"^2E",489],["^ ","^2D",2614,"^2E",489],["^ ","^2D",2676,"^2E",489],["^ ","^2D",2681,"^2E",489],["^ ","^2D",2685,"^2E",489],["^ ","^2D",2696,"^2E",489],["^ ","^2D",2701,"^2E",489],["^ ","^2D",2705,"^2E",489],["^ ","^2D",2720,"^2E",489],["^ ","^2D",2725,"^2E",489],["^ ","^2D",2729,"^2E",489],["^ ","^2D",2736,"^2E",489],["^ ","^2D",2741,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",2756,"^2E",489],["^ ","^2D",2761,"^2E",489],["^ ","^2D",2854,"^2E",489],["^ ","^2D",2859,"^2E",489],["^ ","^2D",2863,"^2E",489],["^ ","^2D",2870,"^2E",489],["^ ","^2D",2875,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",2890,"^2E",489],["^ ","^2D",2895,"^2E",489],["^ ","^2D",2895,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2944,"^2E",489],["^ ","^2D",2944,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",2958,"^2E",489],["^ ","^2D",2958,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",3012,"^2E",489],["^ ","^2D",3017,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",3032,"^2E",489],["^ ","^2D",3037,"^2E",489],["^ ","^2D",3122,"^2E",489],["^ ","^2D",3127,"^2E",489],["^ ","^2D",3131,"^2E",489],["^ ","^2D",3138,"^2E",489],["^ ","^2D",3143,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",3158,"^2E",489],["^ ","^2D",3163,"^2E",489],["^ ","^2D",3263,"^2E",489],["^ ","^2D",3268,"^2E",489],["^ ","^2D",3272,"^2E",489],["^ ","^2D",3329,"^2E",489],["^ ","^2D",3334,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",3349,"^2E",489],["^ ","^2D",3354,"^2E",489],["^ ","^2D",3354,"^2E",489,"^O","cljs.core/vec"],["^ ","^2D",3368,"^2E",489],["^ ","^2D",3368,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3417,"^2E",489],["^ ","^2D",3417,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",3431,"^2E",489],["^ ","^2D",3431,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",3478,"^2E",489],["^ ","^2D",3483,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",3498,"^2E",489],["^ ","^2D",3503,"^2E",489],["^ ","^2D",3559,"^2E",489],["^ ","^2D",3564,"^2E",489],["^ ","^2D",3568,"^2E",489],["^ ","^2D",3575,"^2E",489],["^ ","^2D",3580,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",3595,"^2E",489],["^ ","^2D",3600,"^2E",489],["^ ","^2D",3660,"^2E",489],["^ ","^2D",3665,"^2E",489],["^ ","^2D",3669,"^2E",489],["^ ","^2D",3680,"^2E",489],["^ ","^2D",3685,"^2E",489],["^ ","^2D",3689,"^2E",489],["^ ","^2D",3704,"^2E",489],["^ ","^2D",3709,"^2E",489],["^ ","^2D",3713,"^2E",489],["^ ","^2D",3729,"^2E",489],["^ ","^2D",3734,"^2E",489],["^ ","^2D",3738,"^2E",489],["^ ","^2D",3795,"^2E",489],["^ ","^2D",3800,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",3815,"^2E",489],["^ ","^2D",3820,"^2E",489],["^ ","^2D",3820,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3869,"^2E",489],["^ ","^2D",3869,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",3883,"^2E",489],["^ ","^2D",3883,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",3937,"^2E",489],["^ ","^2D",3942,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",3957,"^2E",489],["^ ","^2D",3962,"^2E",489],["^ ","^2D",4039,"^2E",489],["^ ","^2D",4044,"^2E",489],["^ ","^2D",4048,"^2E",489],["^ ","^2D",4055,"^2E",489],["^ ","^2D",4060,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",4075,"^2E",489],["^ ","^2D",4080,"^2E",489],["^ ","^2D",4167,"^2E",489],["^ ","^2D",4172,"^2E",489],["^ ","^2D",4176,"^2E",489],["^ ","^2D",4233,"^2E",489],["^ ","^2D",4238,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",4253,"^2E",489],["^ ","^2D",4258,"^2E",489],["^ ","^2D",4275,"^2E",489],["^ ","^2D",4280,"^2E",489],["^ ","^2D",4284,"^2E",489],["^ ","^2D",4291,"^2E",489],["^ ","^2D",4296,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",4311,"^2E",489],["^ ","^2D",4316,"^2E",489],["^ ","^2D",4321,"^2E",489],["^ ","^2D",4326,"^2E",489],["^ ","^2D",4330,"^2E",489],["^ ","^2D",4345,"^2E",489],["^ ","^2D",4350,"^2E",489],["^ ","^2D",4354,"^2E",489],["^ ","^2D",4361,"^2E",489],["^ ","^2D",4366,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",4381,"^2E",489],["^ ","^2D",4386,"^2E",489],["^ ","^2D",4386,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4435,"^2E",489],["^ ","^2D",4435,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",4449,"^2E",489],["^ ","^2D",4449,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",4503,"^2E",489],["^ ","^2D",4508,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",4523,"^2E",489],["^ ","^2D",4528,"^2E",489],["^ ","^2D",4616,"^2E",489],["^ ","^2D",4621,"^2E",489],["^ ","^2D",4625,"^2E",489],["^ ","^2D",4632,"^2E",489],["^ ","^2D",4637,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",4652,"^2E",489],["^ ","^2D",4657,"^2E",489],["^ ","^2D",4657,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4706,"^2E",489],["^ ","^2D",4706,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",4720,"^2E",489],["^ ","^2D",4720,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",4767,"^2E",489],["^ ","^2D",4772,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",4787,"^2E",489],["^ ","^2D",4792,"^2E",489],["^ ","^2D",4871,"^2E",489],["^ ","^2D",4876,"^2E",489],["^ ","^2D",4880,"^2E",489],["^ ","^2D",4887,"^2E",489],["^ ","^2D",4892,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",4907,"^2E",489],["^ ","^2D",4912,"^2E",489],["^ ","^2D",5005,"^2E",489],["^ ","^2D",5010,"^2E",489],["^ ","^2D",5014,"^2E",489],["^ ","^2D",5024,"^2E",489],["^ ","^2D",5029,"^2E",489],["^ ","^2D",5033,"^2E",489],["^ ","^2D",5090,"^2E",489],["^ ","^2D",5095,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",5110,"^2E",489],["^ ","^2D",5115,"^2E",489],["^ ","^2D",5115,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",5164,"^2E",489],["^ ","^2D",5164,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",5178,"^2E",489],["^ ","^2D",5178,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",5232,"^2E",489],["^ ","^2D",5237,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",5252,"^2E",489],["^ ","^2D",5257,"^2E",489],["^ ","^2D",5393,"^2E",489],["^ ","^2D",5398,"^2E",489],["^ ","^2D",5402,"^2E",489],["^ ","^2D",5409,"^2E",489],["^ ","^2D",5414,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",5429,"^2E",489],["^ ","^2D",5434,"^2E",489],["^ ","^2D",5527,"^2E",489],["^ ","^2D",5532,"^2E",489],["^ ","^2D",5536,"^2E",489],["^ ","^2D",5593,"^2E",489],["^ ","^2D",5598,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",5613,"^2E",489],["^ ","^2D",5618,"^2E",489],["^ ","^2D",5705,"^2E",489],["^ ","^2D",5710,"^2E",489],["^ ","^2D",5714,"^2E",489],["^ ","^2D",5729,"^2E",489],["^ ","^2D",5734,"^2E",489],["^ ","^2D",5738,"^2E",489],["^ ","^2D",5753,"^2E",489],["^ ","^2D",5758,"^2E",489],["^ ","^2D",5762,"^2E",489],["^ ","^2D",5769,"^2E",489],["^ ","^2D",5774,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",5789,"^2E",489],["^ ","^2D",5794,"^2E",489],["^ ","^2D",5794,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",5843,"^2E",489],["^ ","^2D",5843,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",5857,"^2E",489],["^ ","^2D",5857,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",5911,"^2E",489],["^ ","^2D",5916,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",5931,"^2E",489],["^ ","^2D",5936,"^2E",489],["^ ","^2D",6014,"^2E",489],["^ ","^2D",6019,"^2E",489],["^ ","^2D",6023,"^2E",489],["^ ","^2D",6030,"^2E",489],["^ ","^2D",6035,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",6050,"^2E",489],["^ ","^2D",6055,"^2E",489],["^ ","^2D",6152,"^2E",489],["^ ","^2D",6157,"^2E",489],["^ ","^2D",6161,"^2E",489],["^ ","^2D",6218,"^2E",489],["^ ","^2D",6223,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",6238,"^2E",489],["^ ","^2D",6243,"^2E",489],["^ ","^2D",6243,"^2E",489,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",6292,"^2E",489],["^ ","^2D",6292,"^2E",489,"^O","cljs.core/seq"],["^ ","^2D",6306,"^2E",489],["^ ","^2D",6306,"^2E",489,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",6360,"^2E",489],["^ ","^2D",6365,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",6380,"^2E",489],["^ ","^2D",6385,"^2E",489],["^ ","^2D",6482,"^2E",489],["^ ","^2D",6487,"^2E",489],["^ ","^2D",6491,"^2E",489],["^ ","^2D",6498,"^2E",489],["^ ","^2D",6503,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",6518,"^2E",489],["^ ","^2D",6523,"^2E",489],["^ ","^2D",6610,"^2E",489],["^ ","^2D",6615,"^2E",489],["^ ","^2D",6619,"^2E",489],["^ ","^2D",6676,"^2E",489],["^ ","^2D",6681,"^2E",489,"^O","cljs.core/List"],["^ ","^2D",6696,"^2E",489],["^ ","^2D",6701,"^2E",489],["^ ","^2D",6757,"^2E",489],["^ ","^2D",6762,"^2E",489],["^ ","^2D",6766,"^2E",489],["^ ","^2D",6781,"^2E",489],["^ ","^2D",6786,"^2E",489],["^ ","^2D",6790,"^2E",489],["^ ","^2D",6805,"^2E",489],["^ ","^2D",6810,"^2E",489],["^ ","^2D",6814,"^2E",489],["^ ","^2D",6834,"^2E",489],["^ ","^2D",6839,"^2E",489],["^ ","^2D",6843,"^2E",489]],"^2Q",[["^ ","^2D",4,"^2E",482,"^O","name"]],"^4<",[["^ ","^2D",4,"^2E",486,"^O","this"]],"^4B",[["^ ","^2D",4,"^2E",487,"^O","args"]],"^6>",[["^ ","^2D",4,"^2E",488,"^O","body"]]],"~i296",["^ ","^4>",[["^ ","^2D",149,"^2E",489,"^O","name"]]],"~i297",["^ ","^4<",[["^ ","^2D",959,"^2E",489,"^O","this"]]],"~i306",["^ ","^3F",[["^ ","^2D",6821,"^2E",489,"^O","body"]]],"~i307",["^ ","^2K",[["^ ","^2D",1,"^2E",508],["^ ","^2D",18,"^2E",509,"^O","p__38060"],["^ ","^2D",0,"^2E",510],["^ ","^2D",0,"^2E",510],["^ ","^2D",4,"^2E",510,"^O","vec__38061"],["^ ","^2D",17,"^2E",510,"^O","p__38060"],["^ ","^2D",4,"^2E",511,"^O","seq__38062"],["^ ","^2D",17,"^2E",511],["^ ","^2D",17,"^2E",511,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",511,"^O","vec__38061"],["^ ","^2D",4,"^2E",512,"^O","first__38063"],["^ ","^2D",19,"^2E",512],["^ ","^2D",19,"^2E",512,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",512,"^O","seq__38062"],["^ ","^2D",4,"^2E",513,"^O","seq__38062"],["^ ","^2D",21,"^2E",513],["^ ","^2D",21,"^2E",513,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",513,"^O","seq__38062"],["^ ","^2D",11,"^2E",514,"^O","first__38063"],["^ ","^2D",4,"^2E",515,"^O","first__38063"],["^ ","^2D",23,"^2E",515],["^ ","^2D",23,"^2E",515,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",515,"^O","seq__38062"],["^ ","^2D",4,"^2E",516,"^O","seq__38062"],["^ ","^2D",21,"^2E",516],["^ ","^2D",21,"^2E",516,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",516,"^O","seq__38062"],["^ ","^2D",4,"^2E",517,"^O","vec__38064"],["^ ","^2D",17,"^2E",517,"^O","first__38063"],["^ ","^2D",12,"^2E",518],["^ ","^2D",12,"^2E",518,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",518,"^O","vec__38064"],["^ ","^2D",67,"^2E",518],["^ ","^2D",71,"^2E",518],["^ ","^2D",11,"^2E",519,"^O","vec__38064"],["^ ","^2D",11,"^2E",520,"^O","seq__38062"],["^ ","^2D",0,"^2E",521],["^ ","^2D",0,"^2E",521],["^ ","^2D",7,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",56,"^2E",521],["^ ","^2D",56,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",70,"^2E",521],["^ ","^2D",70,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",124,"^2E",521],["^ ","^2D",129,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",144,"^2E",521],["^ ","^2D",154,"^2E",521],["^ ","^2D",159,"^2E",521],["^ ","^2D",163,"^2E",521],["^ ","^2D",170,"^2E",521],["^ ","^2D",175,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",190,"^2E",521],["^ ","^2D",195,"^2E",521],["^ ","^2D",195,"^2E",521,"^O","cljs.core/vec"],["^ ","^2D",209,"^2E",521],["^ ","^2D",209,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",258,"^2E",521],["^ ","^2D",258,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",272,"^2E",521],["^ ","^2D",272,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",319,"^2E",521],["^ ","^2D",324,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",339,"^2E",521],["^ ","^2D",344,"^2E",521],["^ ","^2D",430,"^2E",521],["^ ","^2D",435,"^2E",521],["^ ","^2D",439,"^2E",521],["^ ","^2D",450,"^2E",521],["^ ","^2D",455,"^2E",521],["^ ","^2D",459,"^2E",521],["^ ","^2D",516,"^2E",521],["^ ","^2D",521,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",536,"^2E",521],["^ ","^2D",541,"^2E",521],["^ ","^2D",541,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",590,"^2E",521],["^ ","^2D",590,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",604,"^2E",521],["^ ","^2D",604,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",658,"^2E",521],["^ ","^2D",663,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",678,"^2E",521],["^ ","^2D",683,"^2E",521],["^ ","^2D",761,"^2E",521],["^ ","^2D",766,"^2E",521],["^ ","^2D",770,"^2E",521],["^ ","^2D",777,"^2E",521],["^ ","^2D",782,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",797,"^2E",521],["^ ","^2D",802,"^2E",521],["^ ","^2D",802,"^2E",521,"^O","cljs.core/vec"],["^ ","^2D",816,"^2E",521],["^ ","^2D",816,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",865,"^2E",521],["^ ","^2D",865,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",879,"^2E",521],["^ ","^2D",879,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",933,"^2E",521],["^ ","^2D",938,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",953,"^2E",521],["^ ","^2D",964,"^2E",521],["^ ","^2D",969,"^2E",521],["^ ","^2D",973,"^2E",521],["^ ","^2D",980,"^2E",521],["^ ","^2D",985,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",1000,"^2E",521],["^ ","^2D",1005,"^2E",521],["^ ","^2D",1091,"^2E",521],["^ ","^2D",1096,"^2E",521],["^ ","^2D",1100,"^2E",521],["^ ","^2D",1157,"^2E",521],["^ ","^2D",1162,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",1177,"^2E",521],["^ ","^2D",1182,"^2E",521],["^ ","^2D",1281,"^2E",521],["^ ","^2D",1286,"^2E",521],["^ ","^2D",1290,"^2E",521],["^ ","^2D",1297,"^2E",521],["^ ","^2D",1302,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",1317,"^2E",521],["^ ","^2D",1322,"^2E",521],["^ ","^2D",1322,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1371,"^2E",521],["^ ","^2D",1371,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",1385,"^2E",521],["^ ","^2D",1385,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",1432,"^2E",521],["^ ","^2D",1437,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",1452,"^2E",521],["^ ","^2D",1457,"^2E",521],["^ ","^2D",1580,"^2E",521],["^ ","^2D",1585,"^2E",521],["^ ","^2D",1589,"^2E",521],["^ ","^2D",1596,"^2E",521],["^ ","^2D",1601,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",1616,"^2E",521],["^ ","^2D",1621,"^2E",521],["^ ","^2D",1707,"^2E",521],["^ ","^2D",1712,"^2E",521],["^ ","^2D",1716,"^2E",521],["^ ","^2D",1726,"^2E",521],["^ ","^2D",1731,"^2E",521],["^ ","^2D",1735,"^2E",521],["^ ","^2D",1742,"^2E",521],["^ ","^2D",1747,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",1762,"^2E",521],["^ ","^2D",1767,"^2E",521],["^ ","^2D",1865,"^2E",521],["^ ","^2D",1870,"^2E",521],["^ ","^2D",1874,"^2E",521],["^ ","^2D",1881,"^2E",521],["^ ","^2D",1886,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",1901,"^2E",521],["^ ","^2D",1906,"^2E",521],["^ ","^2D",1906,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1955,"^2E",521],["^ ","^2D",1955,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",1969,"^2E",521],["^ ","^2D",1969,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2023,"^2E",521],["^ ","^2D",2028,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",2043,"^2E",521],["^ ","^2D",2048,"^2E",521],["^ ","^2D",2133,"^2E",521],["^ ","^2D",2138,"^2E",521],["^ ","^2D",2142,"^2E",521],["^ ","^2D",2149,"^2E",521],["^ ","^2D",2154,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",2169,"^2E",521],["^ ","^2D",2174,"^2E",521],["^ ","^2D",2273,"^2E",521],["^ ","^2D",2278,"^2E",521],["^ ","^2D",2282,"^2E",521],["^ ","^2D",2339,"^2E",521],["^ ","^2D",2344,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",2359,"^2E",521],["^ ","^2D",2364,"^2E",521],["^ ","^2D",2364,"^2E",521,"^O","cljs.core/vec"],["^ ","^2D",2378,"^2E",521],["^ ","^2D",2378,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2427,"^2E",521],["^ ","^2D",2427,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",2441,"^2E",521],["^ ","^2D",2441,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",2488,"^2E",521],["^ ","^2D",2493,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",2508,"^2E",521],["^ ","^2D",2513,"^2E",521],["^ ","^2D",2569,"^2E",521],["^ ","^2D",2574,"^2E",521],["^ ","^2D",2578,"^2E",521],["^ ","^2D",2585,"^2E",521],["^ ","^2D",2590,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",2605,"^2E",521],["^ ","^2D",2610,"^2E",521],["^ ","^2D",2672,"^2E",521],["^ ","^2D",2677,"^2E",521],["^ ","^2D",2681,"^2E",521],["^ ","^2D",2692,"^2E",521],["^ ","^2D",2697,"^2E",521],["^ ","^2D",2701,"^2E",521],["^ ","^2D",2716,"^2E",521],["^ ","^2D",2721,"^2E",521],["^ ","^2D",2725,"^2E",521],["^ ","^2D",2732,"^2E",521],["^ ","^2D",2737,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",2752,"^2E",521],["^ ","^2D",2757,"^2E",521],["^ ","^2D",2841,"^2E",521],["^ ","^2D",2846,"^2E",521],["^ ","^2D",2850,"^2E",521],["^ ","^2D",2857,"^2E",521],["^ ","^2D",2862,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",2877,"^2E",521],["^ ","^2D",2882,"^2E",521],["^ ","^2D",2882,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2931,"^2E",521],["^ ","^2D",2931,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",2945,"^2E",521],["^ ","^2D",2945,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",2992,"^2E",521],["^ ","^2D",2997,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",3012,"^2E",521],["^ ","^2D",3017,"^2E",521],["^ ","^2D",3073,"^2E",521],["^ ","^2D",3078,"^2E",521],["^ ","^2D",3082,"^2E",521],["^ ","^2D",3089,"^2E",521],["^ ","^2D",3094,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",3109,"^2E",521],["^ ","^2D",3114,"^2E",521],["^ ","^2D",3213,"^2E",521],["^ ","^2D",3218,"^2E",521],["^ ","^2D",3222,"^2E",521],["^ ","^2D",3232,"^2E",521],["^ ","^2D",3237,"^2E",521],["^ ","^2D",3241,"^2E",521],["^ ","^2D",3248,"^2E",521],["^ ","^2D",3253,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",3268,"^2E",521],["^ ","^2D",3273,"^2E",521],["^ ","^2D",3356,"^2E",521],["^ ","^2D",3361,"^2E",521],["^ ","^2D",3365,"^2E",521],["^ ","^2D",3372,"^2E",521],["^ ","^2D",3377,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",3392,"^2E",521],["^ ","^2D",3397,"^2E",521],["^ ","^2D",3397,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3446,"^2E",521],["^ ","^2D",3446,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",3460,"^2E",521],["^ ","^2D",3460,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",3507,"^2E",521],["^ ","^2D",3512,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",3527,"^2E",521],["^ ","^2D",3532,"^2E",521],["^ ","^2D",3588,"^2E",521],["^ ","^2D",3593,"^2E",521],["^ ","^2D",3597,"^2E",521],["^ ","^2D",3604,"^2E",521],["^ ","^2D",3609,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",3624,"^2E",521],["^ ","^2D",3629,"^2E",521],["^ ","^2D",3713,"^2E",521],["^ ","^2D",3718,"^2E",521],["^ ","^2D",3722,"^2E",521],["^ ","^2D",3732,"^2E",521],["^ ","^2D",3737,"^2E",521],["^ ","^2D",3741,"^2E",521],["^ ","^2D",3748,"^2E",521],["^ ","^2D",3753,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",3768,"^2E",521],["^ ","^2D",3773,"^2E",521],["^ ","^2D",3866,"^2E",521],["^ ","^2D",3871,"^2E",521],["^ ","^2D",3875,"^2E",521],["^ ","^2D",3882,"^2E",521],["^ ","^2D",3887,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",3902,"^2E",521],["^ ","^2D",3907,"^2E",521],["^ ","^2D",3907,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3956,"^2E",521],["^ ","^2D",3956,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",3970,"^2E",521],["^ ","^2D",3970,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",4017,"^2E",521],["^ ","^2D",4022,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",4037,"^2E",521],["^ ","^2D",4042,"^2E",521],["^ ","^2D",4102,"^2E",521],["^ ","^2D",4107,"^2E",521],["^ ","^2D",4111,"^2E",521],["^ ","^2D",4118,"^2E",521],["^ ","^2D",4123,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",4138,"^2E",521],["^ ","^2D",4143,"^2E",521],["^ ","^2D",4227,"^2E",521],["^ ","^2D",4232,"^2E",521],["^ ","^2D",4236,"^2E",521],["^ ","^2D",4246,"^2E",521],["^ ","^2D",4251,"^2E",521],["^ ","^2D",4255,"^2E",521],["^ ","^2D",4271,"^2E",521],["^ ","^2D",4276,"^2E",521],["^ ","^2D",4280,"^2E",521],["^ ","^2D",4337,"^2E",521],["^ ","^2D",4342,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",4357,"^2E",521],["^ ","^2D",4362,"^2E",521],["^ ","^2D",4362,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4411,"^2E",521],["^ ","^2D",4411,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",4425,"^2E",521],["^ ","^2D",4425,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",4479,"^2E",521],["^ ","^2D",4484,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",4499,"^2E",521],["^ ","^2D",4504,"^2E",521],["^ ","^2D",4581,"^2E",521],["^ ","^2D",4586,"^2E",521],["^ ","^2D",4590,"^2E",521],["^ ","^2D",4597,"^2E",521],["^ ","^2D",4602,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",4617,"^2E",521],["^ ","^2D",4622,"^2E",521],["^ ","^2D",4708,"^2E",521],["^ ","^2D",4713,"^2E",521],["^ ","^2D",4717,"^2E",521],["^ ","^2D",4774,"^2E",521],["^ ","^2D",4779,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",4794,"^2E",521],["^ ","^2D",4799,"^2E",521],["^ ","^2D",4816,"^2E",521],["^ ","^2D",4821,"^2E",521],["^ ","^2D",4825,"^2E",521],["^ ","^2D",4832,"^2E",521],["^ ","^2D",4837,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",4852,"^2E",521],["^ ","^2D",4857,"^2E",521],["^ ","^2D",4863,"^2E",521],["^ ","^2D",4868,"^2E",521],["^ ","^2D",4872,"^2E",521],["^ ","^2D",4887,"^2E",521],["^ ","^2D",4892,"^2E",521],["^ ","^2D",4896,"^2E",521],["^ ","^2D",4903,"^2E",521],["^ ","^2D",4908,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",4923,"^2E",521],["^ ","^2D",4928,"^2E",521],["^ ","^2D",4928,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4977,"^2E",521],["^ ","^2D",4977,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",4991,"^2E",521],["^ ","^2D",4991,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",5045,"^2E",521],["^ ","^2D",5050,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",5065,"^2E",521],["^ ","^2D",5070,"^2E",521],["^ ","^2D",5148,"^2E",521],["^ ","^2D",5153,"^2E",521],["^ ","^2D",5157,"^2E",521],["^ ","^2D",5164,"^2E",521],["^ ","^2D",5169,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",5184,"^2E",521],["^ ","^2D",5189,"^2E",521],["^ ","^2D",5189,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",5238,"^2E",521],["^ ","^2D",5238,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",5252,"^2E",521],["^ ","^2D",5252,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",5306,"^2E",521],["^ ","^2D",5311,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",5326,"^2E",521],["^ ","^2D",5331,"^2E",521],["^ ","^2D",5409,"^2E",521],["^ ","^2D",5414,"^2E",521],["^ ","^2D",5418,"^2E",521],["^ ","^2D",5425,"^2E",521],["^ ","^2D",5430,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",5445,"^2E",521],["^ ","^2D",5450,"^2E",521],["^ ","^2D",5450,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",5499,"^2E",521],["^ ","^2D",5499,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",5513,"^2E",521],["^ ","^2D",5513,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",5560,"^2E",521],["^ ","^2D",5565,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",5580,"^2E",521],["^ ","^2D",5585,"^2E",521],["^ ","^2D",5660,"^2E",521],["^ ","^2D",5665,"^2E",521],["^ ","^2D",5669,"^2E",521],["^ ","^2D",5676,"^2E",521],["^ ","^2D",5681,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",5696,"^2E",521],["^ ","^2D",5701,"^2E",521],["^ ","^2D",5701,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",5750,"^2E",521],["^ ","^2D",5750,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",5764,"^2E",521],["^ ","^2D",5764,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",5811,"^2E",521],["^ ","^2D",5816,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",5831,"^2E",521],["^ ","^2D",5836,"^2E",521],["^ ","^2D",5915,"^2E",521],["^ ","^2D",5920,"^2E",521],["^ ","^2D",5924,"^2E",521],["^ ","^2D",5931,"^2E",521],["^ ","^2D",5936,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",5951,"^2E",521],["^ ","^2D",5956,"^2E",521],["^ ","^2D",6039,"^2E",521],["^ ","^2D",6044,"^2E",521],["^ ","^2D",6048,"^2E",521],["^ ","^2D",6058,"^2E",521],["^ ","^2D",6063,"^2E",521],["^ ","^2D",6067,"^2E",521],["^ ","^2D",6077,"^2E",521],["^ ","^2D",6082,"^2E",521],["^ ","^2D",6086,"^2E",521],["^ ","^2D",6143,"^2E",521],["^ ","^2D",6148,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",6163,"^2E",521],["^ ","^2D",6168,"^2E",521],["^ ","^2D",6168,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",6217,"^2E",521],["^ ","^2D",6217,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",6231,"^2E",521],["^ ","^2D",6231,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",6285,"^2E",521],["^ ","^2D",6290,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",6305,"^2E",521],["^ ","^2D",6310,"^2E",521],["^ ","^2D",6395,"^2E",521],["^ ","^2D",6400,"^2E",521],["^ ","^2D",6404,"^2E",521],["^ ","^2D",6411,"^2E",521],["^ ","^2D",6416,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",6431,"^2E",521],["^ ","^2D",6436,"^2E",521],["^ ","^2D",6436,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",6485,"^2E",521],["^ ","^2D",6485,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",6499,"^2E",521],["^ ","^2D",6499,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",6546,"^2E",521],["^ ","^2D",6551,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",6566,"^2E",521],["^ ","^2D",6571,"^2E",521],["^ ","^2D",6652,"^2E",521],["^ ","^2D",6657,"^2E",521],["^ ","^2D",6661,"^2E",521],["^ ","^2D",6668,"^2E",521],["^ ","^2D",6673,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",6688,"^2E",521],["^ ","^2D",6693,"^2E",521],["^ ","^2D",6776,"^2E",521],["^ ","^2D",6781,"^2E",521],["^ ","^2D",6785,"^2E",521],["^ ","^2D",6795,"^2E",521],["^ ","^2D",6800,"^2E",521],["^ ","^2D",6804,"^2E",521],["^ ","^2D",6861,"^2E",521],["^ ","^2D",6866,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",6881,"^2E",521],["^ ","^2D",6886,"^2E",521],["^ ","^2D",6886,"^2E",521,"^O","cljs.core/vec"],["^ ","^2D",6900,"^2E",521],["^ ","^2D",6900,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",6949,"^2E",521],["^ ","^2D",6949,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",6963,"^2E",521],["^ ","^2D",6963,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",7010,"^2E",521],["^ ","^2D",7015,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",7030,"^2E",521],["^ ","^2D",7035,"^2E",521],["^ ","^2D",7141,"^2E",521],["^ ","^2D",7146,"^2E",521],["^ ","^2D",7150,"^2E",521],["^ ","^2D",7157,"^2E",521],["^ ","^2D",7162,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",7177,"^2E",521],["^ ","^2D",7182,"^2E",521],["^ ","^2D",7268,"^2E",521],["^ ","^2D",7273,"^2E",521],["^ ","^2D",7277,"^2E",521],["^ ","^2D",7288,"^2E",521],["^ ","^2D",7293,"^2E",521],["^ ","^2D",7297,"^2E",521],["^ ","^2D",7312,"^2E",521],["^ ","^2D",7317,"^2E",521],["^ ","^2D",7321,"^2E",521],["^ ","^2D",7336,"^2E",521],["^ ","^2D",7341,"^2E",521],["^ ","^2D",7345,"^2E",521],["^ ","^2D",7402,"^2E",521],["^ ","^2D",7407,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",7422,"^2E",521],["^ ","^2D",7427,"^2E",521],["^ ","^2D",7427,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",7476,"^2E",521],["^ ","^2D",7476,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",7490,"^2E",521],["^ ","^2D",7490,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",7544,"^2E",521],["^ ","^2D",7549,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",7564,"^2E",521],["^ ","^2D",7569,"^2E",521],["^ ","^2D",7652,"^2E",521],["^ ","^2D",7657,"^2E",521],["^ ","^2D",7661,"^2E",521],["^ ","^2D",7668,"^2E",521],["^ ","^2D",7673,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",7688,"^2E",521],["^ ","^2D",7693,"^2E",521],["^ ","^2D",7776,"^2E",521],["^ ","^2D",7781,"^2E",521],["^ ","^2D",7785,"^2E",521],["^ ","^2D",7842,"^2E",521],["^ ","^2D",7847,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",7862,"^2E",521],["^ ","^2D",7867,"^2E",521],["^ ","^2D",7957,"^2E",521],["^ ","^2D",7962,"^2E",521],["^ ","^2D",7966,"^2E",521],["^ ","^2D",7973,"^2E",521],["^ ","^2D",7978,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",7993,"^2E",521],["^ ","^2D",7998,"^2E",521],["^ ","^2D",7998,"^2E",521,"^O","cljs.core/vec"],["^ ","^2D",8012,"^2E",521],["^ ","^2D",8012,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",8061,"^2E",521],["^ ","^2D",8061,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",8075,"^2E",521],["^ ","^2D",8075,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",8122,"^2E",521],["^ ","^2D",8127,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",8142,"^2E",521],["^ ","^2D",8147,"^2E",521],["^ ","^2D",8253,"^2E",521],["^ ","^2D",8258,"^2E",521],["^ ","^2D",8262,"^2E",521],["^ ","^2D",8273,"^2E",521],["^ ","^2D",8278,"^2E",521],["^ ","^2D",8282,"^2E",521],["^ ","^2D",8289,"^2E",521],["^ ","^2D",8294,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",8309,"^2E",521],["^ ","^2D",8314,"^2E",521],["^ ","^2D",8398,"^2E",521],["^ ","^2D",8403,"^2E",521],["^ ","^2D",8407,"^2E",521],["^ ","^2D",8414,"^2E",521],["^ ","^2D",8419,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",8434,"^2E",521],["^ ","^2D",8439,"^2E",521],["^ ","^2D",8525,"^2E",521],["^ ","^2D",8530,"^2E",521],["^ ","^2D",8534,"^2E",521],["^ ","^2D",8549,"^2E",521],["^ ","^2D",8554,"^2E",521],["^ ","^2D",8558,"^2E",521],["^ ","^2D",8573,"^2E",521],["^ ","^2D",8578,"^2E",521],["^ ","^2D",8582,"^2E",521],["^ ","^2D",8589,"^2E",521],["^ ","^2D",8594,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",8609,"^2E",521],["^ ","^2D",8614,"^2E",521],["^ ","^2D",8614,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",8663,"^2E",521],["^ ","^2D",8663,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",8677,"^2E",521],["^ ","^2D",8677,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",8731,"^2E",521],["^ ","^2D",8736,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",8751,"^2E",521],["^ ","^2D",8756,"^2E",521],["^ ","^2D",8834,"^2E",521],["^ ","^2D",8839,"^2E",521],["^ ","^2D",8843,"^2E",521],["^ ","^2D",8850,"^2E",521],["^ ","^2D",8855,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",8870,"^2E",521],["^ ","^2D",8875,"^2E",521],["^ ","^2D",8973,"^2E",521],["^ ","^2D",8978,"^2E",521],["^ ","^2D",8982,"^2E",521],["^ ","^2D",9039,"^2E",521],["^ ","^2D",9044,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",9059,"^2E",521],["^ ","^2D",9064,"^2E",521],["^ ","^2D",9064,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",9113,"^2E",521],["^ ","^2D",9113,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",9127,"^2E",521],["^ ","^2D",9127,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",9181,"^2E",521],["^ ","^2D",9186,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",9201,"^2E",521],["^ ","^2D",9206,"^2E",521],["^ ","^2D",9304,"^2E",521],["^ ","^2D",9309,"^2E",521],["^ ","^2D",9313,"^2E",521],["^ ","^2D",9320,"^2E",521],["^ ","^2D",9325,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",9340,"^2E",521],["^ ","^2D",9345,"^2E",521],["^ ","^2D",9431,"^2E",521],["^ ","^2D",9436,"^2E",521],["^ ","^2D",9440,"^2E",521],["^ ","^2D",9497,"^2E",521],["^ ","^2D",9502,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",9517,"^2E",521],["^ ","^2D",9522,"^2E",521],["^ ","^2D",9582,"^2E",521],["^ ","^2D",9587,"^2E",521],["^ ","^2D",9591,"^2E",521],["^ ","^2D",9606,"^2E",521],["^ ","^2D",9611,"^2E",521],["^ ","^2D",9615,"^2E",521],["^ ","^2D",9630,"^2E",521],["^ ","^2D",9635,"^2E",521],["^ ","^2D",9639,"^2E",521],["^ ","^2D",9646,"^2E",521],["^ ","^2D",9651,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",9666,"^2E",521],["^ ","^2D",9671,"^2E",521],["^ ","^2D",9671,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",9720,"^2E",521],["^ ","^2D",9720,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",9734,"^2E",521],["^ ","^2D",9734,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",9788,"^2E",521],["^ ","^2D",9793,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",9808,"^2E",521],["^ ","^2D",9813,"^2E",521],["^ ","^2D",9891,"^2E",521],["^ ","^2D",9896,"^2E",521],["^ ","^2D",9900,"^2E",521],["^ ","^2D",9907,"^2E",521],["^ ","^2D",9912,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",9927,"^2E",521],["^ ","^2D",9932,"^2E",521],["^ ","^2D",10025,"^2E",521],["^ ","^2D",10030,"^2E",521],["^ ","^2D",10034,"^2E",521],["^ ","^2D",10091,"^2E",521],["^ ","^2D",10096,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",10111,"^2E",521],["^ ","^2D",10116,"^2E",521],["^ ","^2D",10116,"^2E",521,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",10165,"^2E",521],["^ ","^2D",10165,"^2E",521,"^O","cljs.core/seq"],["^ ","^2D",10179,"^2E",521],["^ ","^2D",10179,"^2E",521,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",10233,"^2E",521],["^ ","^2D",10238,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",10253,"^2E",521],["^ ","^2D",10258,"^2E",521],["^ ","^2D",10393,"^2E",521],["^ ","^2D",10398,"^2E",521],["^ ","^2D",10402,"^2E",521],["^ ","^2D",10409,"^2E",521],["^ ","^2D",10414,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",10429,"^2E",521],["^ ","^2D",10434,"^2E",521],["^ ","^2D",10527,"^2E",521],["^ ","^2D",10532,"^2E",521],["^ ","^2D",10536,"^2E",521],["^ ","^2D",10593,"^2E",521],["^ ","^2D",10598,"^2E",521,"^O","cljs.core/List"],["^ ","^2D",10613,"^2E",521],["^ ","^2D",10618,"^2E",521],["^ ","^2D",10704,"^2E",521],["^ ","^2D",10709,"^2E",521],["^ ","^2D",10713,"^2E",521],["^ ","^2D",10728,"^2E",521],["^ ","^2D",10733,"^2E",521],["^ ","^2D",10737,"^2E",521],["^ ","^2D",10752,"^2E",521],["^ ","^2D",10757,"^2E",521],["^ ","^2D",10761,"^2E",521],["^ ","^2D",10781,"^2E",521],["^ ","^2D",10786,"^2E",521],["^ ","^2D",10790,"^2E",521]],"^2Q",[["^ ","^2D",4,"^2E",514,"^O","name"]],"^4<",[["^ ","^2D",4,"^2E",518,"^O","this"]],"^4B",[["^ ","^2D",4,"^2E",519,"^O","args"]],"^6>",[["^ ","^2D",4,"^2E",520,"^O","body"]]],"~i308",["^ ","^4>",[["^ ","^2D",149,"^2E",521,"^O","name"]]],"~i309",["^ ","^4<",[["^ ","^2D",958,"^2E",521,"^O","this"]]],"~i323",["^ ","^3F",[["^ ","^2D",10768,"^2E",521,"^O","body"]]],"~i324",["^ ","^2K",[["^ ","^2D",1,"^2E",523],["^ ","^2D",18,"^2E",524,"^O","p__38091"],["^ ","^2D",0,"^2E",525],["^ ","^2D",0,"^2E",525],["^ ","^2D",4,"^2E",525,"^O","vec__38094"],["^ ","^2D",17,"^2E",525,"^O","p__38091"],["^ ","^2D",4,"^2E",526,"^O","seq__38095"],["^ ","^2D",17,"^2E",526],["^ ","^2D",17,"^2E",526,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",526,"^O","vec__38094"],["^ ","^2D",4,"^2E",527,"^O","first__38096"],["^ ","^2D",19,"^2E",527],["^ ","^2D",19,"^2E",527,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",527,"^O","seq__38095"],["^ ","^2D",4,"^2E",528,"^O","seq__38095"],["^ ","^2D",21,"^2E",528],["^ ","^2D",21,"^2E",528,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",528,"^O","seq__38095"],["^ ","^2D",11,"^2E",529,"^O","first__38096"],["^ ","^2D",4,"^2E",530,"^O","first__38096"],["^ ","^2D",23,"^2E",530],["^ ","^2D",23,"^2E",530,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",530,"^O","seq__38095"],["^ ","^2D",4,"^2E",531,"^O","seq__38095"],["^ ","^2D",21,"^2E",531],["^ ","^2D",21,"^2E",531,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",531,"^O","seq__38095"],["^ ","^2D",4,"^2E",532,"^O","vec__38097"],["^ ","^2D",17,"^2E",532,"^O","first__38096"],["^ ","^2D",12,"^2E",533],["^ ","^2D",12,"^2E",533,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",533,"^O","vec__38097"],["^ ","^2D",67,"^2E",533],["^ ","^2D",71,"^2E",533],["^ ","^2D",17,"^2E",534],["^ ","^2D",17,"^2E",534,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",61,"^2E",534,"^O","vec__38097"],["^ ","^2D",72,"^2E",534],["^ ","^2D",76,"^2E",534],["^ ","^2D",17,"^2E",535],["^ ","^2D",17,"^2E",535,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",61,"^2E",535,"^O","vec__38097"],["^ ","^2D",72,"^2E",535],["^ ","^2D",76,"^2E",535],["^ ","^2D",11,"^2E",536,"^O","vec__38097"],["^ ","^2D",11,"^2E",537,"^O","seq__38095"],["^ ","^2D",0,"^2E",538],["^ ","^2D",0,"^2E",538],["^ ","^2D",7,"^2E",538,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",56,"^2E",538],["^ ","^2D",56,"^2E",538,"^O","cljs.core/seq"],["^ ","^2D",70,"^2E",538],["^ ","^2D",70,"^2E",538,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",124,"^2E",538],["^ ","^2D",129,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",144,"^2E",538],["^ ","^2D",154,"^2E",538],["^ ","^2D",159,"^2E",538],["^ ","^2D",163,"^2E",538],["^ ","^2D",170,"^2E",538],["^ ","^2D",175,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",190,"^2E",538],["^ ","^2D",195,"^2E",538],["^ ","^2D",195,"^2E",538,"^O","cljs.core/vec"],["^ ","^2D",209,"^2E",538],["^ ","^2D",209,"^2E",538,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",258,"^2E",538],["^ ","^2D",258,"^2E",538,"^O","cljs.core/seq"],["^ ","^2D",272,"^2E",538],["^ ","^2D",272,"^2E",538,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",326,"^2E",538],["^ ","^2D",331,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",346,"^2E",538],["^ ","^2D",351,"^2E",538],["^ ","^2D",439,"^2E",538],["^ ","^2D",444,"^2E",538],["^ ","^2D",448,"^2E",538],["^ ","^2D",455,"^2E",538],["^ ","^2D",460,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",475,"^2E",538],["^ ","^2D",480,"^2E",538],["^ ","^2D",579,"^2E",538],["^ ","^2D",584,"^2E",538],["^ ","^2D",588,"^2E",538],["^ ","^2D",645,"^2E",538],["^ ","^2D",650,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",665,"^2E",538],["^ ","^2D",670,"^2E",538],["^ ","^2D",769,"^2E",538],["^ ","^2D",774,"^2E",538],["^ ","^2D",778,"^2E",538],["^ ","^2D",794,"^2E",538],["^ ","^2D",799,"^2E",538],["^ ","^2D",803,"^2E",538],["^ ","^2D",860,"^2E",538],["^ ","^2D",865,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",880,"^2E",538],["^ ","^2D",885,"^2E",538],["^ ","^2D",885,"^2E",538,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",934,"^2E",538],["^ ","^2D",934,"^2E",538,"^O","cljs.core/seq"],["^ ","^2D",948,"^2E",538],["^ ","^2D",948,"^2E",538,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1002,"^2E",538],["^ ","^2D",1007,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",1022,"^2E",538],["^ ","^2D",1027,"^2E",538],["^ ","^2D",1105,"^2E",538],["^ ","^2D",1110,"^2E",538],["^ ","^2D",1114,"^2E",538],["^ ","^2D",1121,"^2E",538],["^ ","^2D",1126,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",1141,"^2E",538],["^ ","^2D",1146,"^2E",538],["^ ","^2D",1146,"^2E",538,"^O","cljs.core/vec"],["^ ","^2D",1160,"^2E",538],["^ ","^2D",1160,"^2E",538,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1209,"^2E",538],["^ ","^2D",1209,"^2E",538,"^O","cljs.core/seq"],["^ ","^2D",1223,"^2E",538],["^ ","^2D",1223,"^2E",538,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1277,"^2E",538],["^ ","^2D",1282,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",1297,"^2E",538],["^ ","^2D",1308,"^2E",538],["^ ","^2D",1313,"^2E",538],["^ ","^2D",1317,"^2E",538],["^ ","^2D",1324,"^2E",538],["^ ","^2D",1329,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",1344,"^2E",538],["^ ","^2D",1349,"^2E",538],["^ ","^2D",1437,"^2E",538],["^ ","^2D",1442,"^2E",538],["^ ","^2D",1446,"^2E",538],["^ ","^2D",1503,"^2E",538],["^ ","^2D",1508,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",1523,"^2E",538],["^ ","^2D",1539,"^2E",538],["^ ","^2D",1544,"^2E",538],["^ ","^2D",1548,"^2E",538],["^ ","^2D",1555,"^2E",538],["^ ","^2D",1560,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",1575,"^2E",538],["^ ","^2D",1580,"^2E",538],["^ ","^2D",1580,"^2E",538,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1629,"^2E",538],["^ ","^2D",1629,"^2E",538,"^O","cljs.core/seq"],["^ ","^2D",1643,"^2E",538],["^ ","^2D",1643,"^2E",538,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1697,"^2E",538],["^ ","^2D",1702,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",1717,"^2E",538],["^ ","^2D",1722,"^2E",538],["^ ","^2D",1799,"^2E",538],["^ ","^2D",1804,"^2E",538],["^ ","^2D",1808,"^2E",538],["^ ","^2D",1815,"^2E",538],["^ ","^2D",1820,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",1835,"^2E",538],["^ ","^2D",1840,"^2E",538],["^ ","^2D",1939,"^2E",538],["^ ","^2D",1944,"^2E",538],["^ ","^2D",1948,"^2E",538],["^ ","^2D",2005,"^2E",538],["^ ","^2D",2010,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",2025,"^2E",538],["^ ","^2D",2030,"^2E",538],["^ ","^2D",2045,"^2E",538],["^ ","^2D",2050,"^2E",538],["^ ","^2D",2054,"^2E",538],["^ ","^2D",2069,"^2E",538],["^ ","^2D",2074,"^2E",538],["^ ","^2D",2078,"^2E",538],["^ ","^2D",2085,"^2E",538],["^ ","^2D",2090,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",2105,"^2E",538],["^ ","^2D",2121,"^2E",538],["^ ","^2D",2126,"^2E",538],["^ ","^2D",2130,"^2E",538],["^ ","^2D",2137,"^2E",538],["^ ","^2D",2142,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",2157,"^2E",538],["^ ","^2D",2162,"^2E",538],["^ ","^2D",2162,"^2E",538,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2211,"^2E",538],["^ ","^2D",2211,"^2E",538,"^O","cljs.core/seq"],["^ ","^2D",2225,"^2E",538],["^ ","^2D",2225,"^2E",538,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2279,"^2E",538],["^ ","^2D",2284,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",2299,"^2E",538],["^ ","^2D",2304,"^2E",538],["^ ","^2D",2381,"^2E",538],["^ ","^2D",2386,"^2E",538],["^ ","^2D",2390,"^2E",538],["^ ","^2D",2397,"^2E",538],["^ ","^2D",2402,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",2417,"^2E",538],["^ ","^2D",2422,"^2E",538],["^ ","^2D",2521,"^2E",538],["^ ","^2D",2526,"^2E",538],["^ ","^2D",2530,"^2E",538],["^ ","^2D",2587,"^2E",538],["^ ","^2D",2592,"^2E",538,"^O","cljs.core/List"],["^ ","^2D",2607,"^2E",538],["^ ","^2D",2612,"^2E",538],["^ ","^2D",2627,"^2E",538],["^ ","^2D",2632,"^2E",538],["^ ","^2D",2636,"^2E",538],["^ ","^2D",2651,"^2E",538],["^ ","^2D",2656,"^2E",538],["^ ","^2D",2660,"^2E",538],["^ ","^2D",2676,"^2E",538],["^ ","^2D",2681,"^2E",538],["^ ","^2D",2685,"^2E",538],["^ ","^2D",2755,"^2E",538],["^ ","^2D",2760,"^2E",538],["^ ","^2D",2764,"^2E",538]],"^2Q",[["^ ","^2D",4,"^2E",529,"^O","name"]],"^4<",[["^ ","^2D",4,"^2E",533,"^O","this"]],"^2V",[["^ ","^2D",4,"^2E",534,"^O","next-props"]],"^40",[["^ ","^2D",4,"^2E",535,"^O","next-state"]],"^3:",[["^ ","^2D",4,"^2E",536,"^O","args"]],"^3C",[["^ ","^2D",4,"^2E",537,"^O","body"]]],"~i325",["^ ","^4>",[["^ ","^2D",149,"^2E",538,"^O","name"]]],"~i326",["^ ","^4<",[["^ ","^2D",1302,"^2E",538,"^O","this"]]],"~i327",["^ ","^4<",[["^ ","^2D",1528,"^2E",538,"^O","next-props"]]],"~i328",["^ ","^4<",[["^ ","^2D",2110,"^2E",538,"^O","next-state"]]],"~i329",["^ ","^3F",[["^ ","^2D",2742,"^2E",538,"^O","body"]]],"~i330",["^ ","^2K",[["^ ","^2D",19,"^2E",491],["^ ","^2D",18,"^2E",492,"^O","p__38045"],["^ ","^2D",0,"^2E",493],["^ ","^2D",0,"^2E",493],["^ ","^2D",4,"^2E",493,"^O","vec__38046"],["^ ","^2D",17,"^2E",493,"^O","p__38045"],["^ ","^2D",4,"^2E",494,"^O","seq__38047"],["^ ","^2D",17,"^2E",494],["^ ","^2D",17,"^2E",494,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",494,"^O","vec__38046"],["^ ","^2D",4,"^2E",495,"^O","first__38048"],["^ ","^2D",19,"^2E",495],["^ ","^2D",19,"^2E",495,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",495,"^O","seq__38047"],["^ ","^2D",4,"^2E",496,"^O","seq__38047"],["^ ","^2D",21,"^2E",496],["^ ","^2D",21,"^2E",496,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",496,"^O","seq__38047"],["^ ","^2D",11,"^2E",497,"^O","first__38048"],["^ ","^2D",4,"^2E",498,"^O","first__38048"],["^ ","^2D",23,"^2E",498],["^ ","^2D",23,"^2E",498,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",498,"^O","seq__38047"],["^ ","^2D",4,"^2E",499,"^O","seq__38047"],["^ ","^2D",21,"^2E",499],["^ ","^2D",21,"^2E",499,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",499,"^O","seq__38047"],["^ ","^2D",4,"^2E",500,"^O","vec__38049"],["^ ","^2D",17,"^2E",500,"^O","first__38048"],["^ ","^2D",12,"^2E",501],["^ ","^2D",12,"^2E",501,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",501,"^O","vec__38049"],["^ ","^2D",67,"^2E",501],["^ ","^2D",71,"^2E",501],["^ ","^2D",17,"^2E",502],["^ ","^2D",17,"^2E",502,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",61,"^2E",502,"^O","vec__38049"],["^ ","^2D",72,"^2E",502],["^ ","^2D",76,"^2E",502],["^ ","^2D",17,"^2E",503],["^ ","^2D",17,"^2E",503,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",61,"^2E",503,"^O","vec__38049"],["^ ","^2D",72,"^2E",503],["^ ","^2D",76,"^2E",503],["^ ","^2D",11,"^2E",504,"^O","vec__38049"],["^ ","^2D",11,"^2E",505,"^O","seq__38047"],["^ ","^2D",0,"^2E",506],["^ ","^2D",0,"^2E",506],["^ ","^2D",7,"^2E",506,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",56,"^2E",506],["^ ","^2D",56,"^2E",506,"^O","cljs.core/seq"],["^ ","^2D",70,"^2E",506],["^ ","^2D",70,"^2E",506,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",124,"^2E",506],["^ ","^2D",129,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",144,"^2E",506],["^ ","^2D",154,"^2E",506],["^ ","^2D",159,"^2E",506],["^ ","^2D",163,"^2E",506],["^ ","^2D",170,"^2E",506],["^ ","^2D",175,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",190,"^2E",506],["^ ","^2D",195,"^2E",506],["^ ","^2D",195,"^2E",506,"^O","cljs.core/vec"],["^ ","^2D",209,"^2E",506],["^ ","^2D",209,"^2E",506,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",258,"^2E",506],["^ ","^2D",258,"^2E",506,"^O","cljs.core/seq"],["^ ","^2D",272,"^2E",506],["^ ","^2D",272,"^2E",506,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",326,"^2E",506],["^ ","^2D",331,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",346,"^2E",506],["^ ","^2D",351,"^2E",506],["^ ","^2D",439,"^2E",506],["^ ","^2D",444,"^2E",506],["^ ","^2D",448,"^2E",506],["^ ","^2D",455,"^2E",506],["^ ","^2D",460,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",475,"^2E",506],["^ ","^2D",480,"^2E",506],["^ ","^2D",579,"^2E",506],["^ ","^2D",584,"^2E",506],["^ ","^2D",588,"^2E",506],["^ ","^2D",645,"^2E",506],["^ ","^2D",650,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",665,"^2E",506],["^ ","^2D",670,"^2E",506],["^ ","^2D",770,"^2E",506],["^ ","^2D",775,"^2E",506],["^ ","^2D",779,"^2E",506],["^ ","^2D",795,"^2E",506],["^ ","^2D",800,"^2E",506],["^ ","^2D",804,"^2E",506],["^ ","^2D",861,"^2E",506],["^ ","^2D",866,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",881,"^2E",506],["^ ","^2D",886,"^2E",506],["^ ","^2D",886,"^2E",506,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",935,"^2E",506],["^ ","^2D",935,"^2E",506,"^O","cljs.core/seq"],["^ ","^2D",949,"^2E",506],["^ ","^2D",949,"^2E",506,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1003,"^2E",506],["^ ","^2D",1008,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",1023,"^2E",506],["^ ","^2D",1028,"^2E",506],["^ ","^2D",1106,"^2E",506],["^ ","^2D",1111,"^2E",506],["^ ","^2D",1115,"^2E",506],["^ ","^2D",1122,"^2E",506],["^ ","^2D",1127,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",1142,"^2E",506],["^ ","^2D",1147,"^2E",506],["^ ","^2D",1147,"^2E",506,"^O","cljs.core/vec"],["^ ","^2D",1161,"^2E",506],["^ ","^2D",1161,"^2E",506,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1210,"^2E",506],["^ ","^2D",1210,"^2E",506,"^O","cljs.core/seq"],["^ ","^2D",1224,"^2E",506],["^ ","^2D",1224,"^2E",506,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1278,"^2E",506],["^ ","^2D",1283,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",1298,"^2E",506],["^ ","^2D",1309,"^2E",506],["^ ","^2D",1314,"^2E",506],["^ ","^2D",1318,"^2E",506],["^ ","^2D",1325,"^2E",506],["^ ","^2D",1330,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",1345,"^2E",506],["^ ","^2D",1350,"^2E",506],["^ ","^2D",1438,"^2E",506],["^ ","^2D",1443,"^2E",506],["^ ","^2D",1447,"^2E",506],["^ ","^2D",1504,"^2E",506],["^ ","^2D",1509,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",1524,"^2E",506],["^ ","^2D",1540,"^2E",506],["^ ","^2D",1545,"^2E",506],["^ ","^2D",1549,"^2E",506],["^ ","^2D",1556,"^2E",506],["^ ","^2D",1561,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",1576,"^2E",506],["^ ","^2D",1581,"^2E",506],["^ ","^2D",1581,"^2E",506,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1630,"^2E",506],["^ ","^2D",1630,"^2E",506,"^O","cljs.core/seq"],["^ ","^2D",1644,"^2E",506],["^ ","^2D",1644,"^2E",506,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1698,"^2E",506],["^ ","^2D",1703,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",1718,"^2E",506],["^ ","^2D",1723,"^2E",506],["^ ","^2D",1800,"^2E",506],["^ ","^2D",1805,"^2E",506],["^ ","^2D",1809,"^2E",506],["^ ","^2D",1816,"^2E",506],["^ ","^2D",1821,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",1836,"^2E",506],["^ ","^2D",1841,"^2E",506],["^ ","^2D",1940,"^2E",506],["^ ","^2D",1945,"^2E",506],["^ ","^2D",1949,"^2E",506],["^ ","^2D",2006,"^2E",506],["^ ","^2D",2011,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",2026,"^2E",506],["^ ","^2D",2031,"^2E",506],["^ ","^2D",2046,"^2E",506],["^ ","^2D",2051,"^2E",506],["^ ","^2D",2055,"^2E",506],["^ ","^2D",2070,"^2E",506],["^ ","^2D",2075,"^2E",506],["^ ","^2D",2079,"^2E",506],["^ ","^2D",2086,"^2E",506],["^ ","^2D",2091,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",2106,"^2E",506],["^ ","^2D",2122,"^2E",506],["^ ","^2D",2127,"^2E",506],["^ ","^2D",2131,"^2E",506],["^ ","^2D",2138,"^2E",506],["^ ","^2D",2143,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",2158,"^2E",506],["^ ","^2D",2163,"^2E",506],["^ ","^2D",2163,"^2E",506,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2212,"^2E",506],["^ ","^2D",2212,"^2E",506,"^O","cljs.core/seq"],["^ ","^2D",2226,"^2E",506],["^ ","^2D",2226,"^2E",506,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2280,"^2E",506],["^ ","^2D",2285,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",2300,"^2E",506],["^ ","^2D",2305,"^2E",506],["^ ","^2D",2382,"^2E",506],["^ ","^2D",2387,"^2E",506],["^ ","^2D",2391,"^2E",506],["^ ","^2D",2398,"^2E",506],["^ ","^2D",2403,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",2418,"^2E",506],["^ ","^2D",2423,"^2E",506],["^ ","^2D",2523,"^2E",506],["^ ","^2D",2528,"^2E",506],["^ ","^2D",2532,"^2E",506],["^ ","^2D",2589,"^2E",506],["^ ","^2D",2594,"^2E",506,"^O","cljs.core/List"],["^ ","^2D",2609,"^2E",506],["^ ","^2D",2614,"^2E",506],["^ ","^2D",2629,"^2E",506],["^ ","^2D",2634,"^2E",506],["^ ","^2D",2638,"^2E",506],["^ ","^2D",2653,"^2E",506],["^ ","^2D",2658,"^2E",506],["^ ","^2D",2662,"^2E",506],["^ ","^2D",2678,"^2E",506],["^ ","^2D",2683,"^2E",506],["^ ","^2D",2687,"^2E",506],["^ ","^2D",2757,"^2E",506],["^ ","^2D",2762,"^2E",506],["^ ","^2D",2766,"^2E",506]],"^2Q",[["^ ","^2D",4,"^2E",497,"^O","name"]],"^4<",[["^ ","^2D",4,"^2E",501,"^O","this"]],"^2V",[["^ ","^2D",4,"^2E",502,"^O","prev-props"]],"^40",[["^ ","^2D",4,"^2E",503,"^O","prev-state"]],"^3:",[["^ ","^2D",4,"^2E",504,"^O","args"]],"^3C",[["^ ","^2D",4,"^2E",505,"^O","body"]]],"~i331",["^ ","^4>",[["^ ","^2D",149,"^2E",506,"^O","name"]]],"~i332",["^ ","^4<",[["^ ","^2D",1303,"^2E",506,"^O","this"]]],"~i333",["^ ","^4<",[["^ ","^2D",1529,"^2E",506,"^O","prev-props"]]],"~i334",["^ ","^4<",[["^ ","^2D",2111,"^2E",506,"^O","prev-state"]]],"~i335",["^ ","^3F",[["^ ","^2D",2744,"^2E",506,"^O","body"]]],"~i337",["^ ","^2K",[["^ ","^2D",1168,"^2E",435],["^ ","^2D",18,"^2E",436,"^O","p__37970"],["^ ","^2D",0,"^2E",437],["^ ","^2D",0,"^2E",437],["^ ","^2D",4,"^2E",437,"^O","vec__37971"],["^ ","^2D",17,"^2E",437,"^O","p__37970"],["^ ","^2D",4,"^2E",438,"^O","seq__37972"],["^ ","^2D",17,"^2E",438],["^ ","^2D",17,"^2E",438,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",438,"^O","vec__37971"],["^ ","^2D",4,"^2E",439,"^O","first__37973"],["^ ","^2D",19,"^2E",439],["^ ","^2D",19,"^2E",439,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",439,"^O","seq__37972"],["^ ","^2D",4,"^2E",440,"^O","seq__37972"],["^ ","^2D",21,"^2E",440],["^ ","^2D",21,"^2E",440,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",440,"^O","seq__37972"],["^ ","^2D",11,"^2E",441,"^O","first__37973"],["^ ","^2D",4,"^2E",442,"^O","first__37973"],["^ ","^2D",23,"^2E",442],["^ ","^2D",23,"^2E",442,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",442,"^O","seq__37972"],["^ ","^2D",4,"^2E",443,"^O","seq__37972"],["^ ","^2D",21,"^2E",443],["^ ","^2D",21,"^2E",443,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",443,"^O","seq__37972"],["^ ","^2D",4,"^2E",444,"^O","vec__37974"],["^ ","^2D",17,"^2E",444,"^O","first__37973"],["^ ","^2D",12,"^2E",445],["^ ","^2D",12,"^2E",445,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",445,"^O","vec__37974"],["^ ","^2D",67,"^2E",445],["^ ","^2D",71,"^2E",445],["^ ","^2D",11,"^2E",446,"^O","vec__37974"],["^ ","^2D",11,"^2E",447,"^O","seq__37972"],["^ ","^2D",0,"^2E",448],["^ ","^2D",0,"^2E",448],["^ ","^2D",7,"^2E",448,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",56,"^2E",448],["^ ","^2D",56,"^2E",448,"^O","cljs.core/seq"],["^ ","^2D",70,"^2E",448],["^ ","^2D",70,"^2E",448,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",124,"^2E",448],["^ ","^2D",129,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",144,"^2E",448],["^ ","^2D",154,"^2E",448],["^ ","^2D",159,"^2E",448],["^ ","^2D",163,"^2E",448],["^ ","^2D",170,"^2E",448],["^ ","^2D",175,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",190,"^2E",448],["^ ","^2D",195,"^2E",448],["^ ","^2D",195,"^2E",448,"^O","cljs.core/vec"],["^ ","^2D",209,"^2E",448],["^ ","^2D",209,"^2E",448,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",258,"^2E",448],["^ ","^2D",258,"^2E",448,"^O","cljs.core/seq"],["^ ","^2D",272,"^2E",448],["^ ","^2D",272,"^2E",448,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",319,"^2E",448],["^ ","^2D",324,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",339,"^2E",448],["^ ","^2D",344,"^2E",448],["^ ","^2D",431,"^2E",448],["^ ","^2D",436,"^2E",448],["^ ","^2D",440,"^2E",448],["^ ","^2D",451,"^2E",448],["^ ","^2D",456,"^2E",448],["^ ","^2D",460,"^2E",448],["^ ","^2D",517,"^2E",448],["^ ","^2D",522,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",537,"^2E",448],["^ ","^2D",542,"^2E",448],["^ ","^2D",542,"^2E",448,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",591,"^2E",448],["^ ","^2D",591,"^2E",448,"^O","cljs.core/seq"],["^ ","^2D",605,"^2E",448],["^ ","^2D",605,"^2E",448,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",659,"^2E",448],["^ ","^2D",664,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",679,"^2E",448],["^ ","^2D",684,"^2E",448],["^ ","^2D",762,"^2E",448],["^ ","^2D",767,"^2E",448],["^ ","^2D",771,"^2E",448],["^ ","^2D",778,"^2E",448],["^ ","^2D",783,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",798,"^2E",448],["^ ","^2D",803,"^2E",448],["^ ","^2D",803,"^2E",448,"^O","cljs.core/vec"],["^ ","^2D",817,"^2E",448],["^ ","^2D",817,"^2E",448,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",866,"^2E",448],["^ ","^2D",866,"^2E",448,"^O","cljs.core/seq"],["^ ","^2D",880,"^2E",448],["^ ","^2D",880,"^2E",448,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",927,"^2E",448],["^ ","^2D",932,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",947,"^2E",448],["^ ","^2D",958,"^2E",448],["^ ","^2D",963,"^2E",448],["^ ","^2D",967,"^2E",448],["^ ","^2D",974,"^2E",448],["^ ","^2D",979,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",994,"^2E",448],["^ ","^2D",999,"^2E",448],["^ ","^2D",1086,"^2E",448],["^ ","^2D",1091,"^2E",448],["^ ","^2D",1095,"^2E",448],["^ ","^2D",1106,"^2E",448],["^ ","^2D",1111,"^2E",448],["^ ","^2D",1115,"^2E",448],["^ ","^2D",1172,"^2E",448],["^ ","^2D",1177,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",1192,"^2E",448],["^ ","^2D",1197,"^2E",448],["^ ","^2D",1197,"^2E",448,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1246,"^2E",448],["^ ","^2D",1246,"^2E",448,"^O","cljs.core/seq"],["^ ","^2D",1260,"^2E",448],["^ ","^2D",1260,"^2E",448,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1314,"^2E",448],["^ ","^2D",1319,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",1334,"^2E",448],["^ ","^2D",1339,"^2E",448],["^ ","^2D",1425,"^2E",448],["^ ","^2D",1430,"^2E",448],["^ ","^2D",1434,"^2E",448],["^ ","^2D",1441,"^2E",448],["^ ","^2D",1446,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",1461,"^2E",448],["^ ","^2D",1466,"^2E",448],["^ ","^2D",1466,"^2E",448,"^O","cljs.core/vec"],["^ ","^2D",1480,"^2E",448],["^ ","^2D",1480,"^2E",448,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1529,"^2E",448],["^ ","^2D",1529,"^2E",448,"^O","cljs.core/seq"],["^ ","^2D",1543,"^2E",448],["^ ","^2D",1543,"^2E",448,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1597,"^2E",448],["^ ","^2D",1602,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",1617,"^2E",448],["^ ","^2D",1622,"^2E",448],["^ ","^2D",1743,"^2E",448],["^ ","^2D",1748,"^2E",448],["^ ","^2D",1752,"^2E",448],["^ ","^2D",1759,"^2E",448],["^ ","^2D",1764,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",1779,"^2E",448],["^ ","^2D",1784,"^2E",448],["^ ","^2D",1784,"^2E",448,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1833,"^2E",448],["^ ","^2D",1833,"^2E",448,"^O","cljs.core/seq"],["^ ","^2D",1847,"^2E",448],["^ ","^2D",1847,"^2E",448,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",1894,"^2E",448],["^ ","^2D",1899,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",1914,"^2E",448],["^ ","^2D",1919,"^2E",448],["^ ","^2D",2042,"^2E",448],["^ ","^2D",2047,"^2E",448],["^ ","^2D",2051,"^2E",448],["^ ","^2D",2058,"^2E",448],["^ ","^2D",2063,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",2078,"^2E",448],["^ ","^2D",2083,"^2E",448],["^ ","^2D",2170,"^2E",448],["^ ","^2D",2175,"^2E",448],["^ ","^2D",2179,"^2E",448],["^ ","^2D",2189,"^2E",448],["^ ","^2D",2194,"^2E",448],["^ ","^2D",2198,"^2E",448],["^ ","^2D",2255,"^2E",448],["^ ","^2D",2260,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",2275,"^2E",448],["^ ","^2D",2280,"^2E",448],["^ ","^2D",2391,"^2E",448],["^ ","^2D",2396,"^2E",448],["^ ","^2D",2400,"^2E",448],["^ ","^2D",2407,"^2E",448],["^ ","^2D",2412,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",2427,"^2E",448],["^ ","^2D",2432,"^2E",448],["^ ","^2D",2432,"^2E",448,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2481,"^2E",448],["^ ","^2D",2481,"^2E",448,"^O","cljs.core/seq"],["^ ","^2D",2495,"^2E",448],["^ ","^2D",2495,"^2E",448,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",2542,"^2E",448],["^ ","^2D",2547,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",2562,"^2E",448],["^ ","^2D",2567,"^2E",448],["^ ","^2D",2645,"^2E",448],["^ ","^2D",2650,"^2E",448],["^ ","^2D",2654,"^2E",448],["^ ","^2D",2661,"^2E",448],["^ ","^2D",2666,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",2681,"^2E",448],["^ ","^2D",2686,"^2E",448],["^ ","^2D",2686,"^2E",448,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2735,"^2E",448],["^ ","^2D",2735,"^2E",448,"^O","cljs.core/seq"],["^ ","^2D",2749,"^2E",448],["^ ","^2D",2749,"^2E",448,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",2796,"^2E",448],["^ ","^2D",2801,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",2816,"^2E",448],["^ ","^2D",2821,"^2E",448],["^ ","^2D",2926,"^2E",448],["^ ","^2D",2931,"^2E",448],["^ ","^2D",2935,"^2E",448],["^ ","^2D",2942,"^2E",448],["^ ","^2D",2947,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",2962,"^2E",448],["^ ","^2D",2967,"^2E",448],["^ ","^2D",3054,"^2E",448],["^ ","^2D",3059,"^2E",448],["^ ","^2D",3063,"^2E",448],["^ ","^2D",3073,"^2E",448],["^ ","^2D",3078,"^2E",448],["^ ","^2D",3082,"^2E",448],["^ ","^2D",3092,"^2E",448],["^ ","^2D",3097,"^2E",448],["^ ","^2D",3101,"^2E",448],["^ ","^2D",3108,"^2E",448],["^ ","^2D",3113,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",3128,"^2E",448],["^ ","^2D",3133,"^2E",448],["^ ","^2D",3244,"^2E",448],["^ ","^2D",3249,"^2E",448],["^ ","^2D",3253,"^2E",448],["^ ","^2D",3260,"^2E",448],["^ ","^2D",3265,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",3280,"^2E",448],["^ ","^2D",3285,"^2E",448],["^ ","^2D",3285,"^2E",448,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3334,"^2E",448],["^ ","^2D",3334,"^2E",448,"^O","cljs.core/seq"],["^ ","^2D",3348,"^2E",448],["^ ","^2D",3348,"^2E",448,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",3395,"^2E",448],["^ ","^2D",3400,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",3415,"^2E",448],["^ ","^2D",3420,"^2E",448],["^ ","^2D",3529,"^2E",448],["^ ","^2D",3534,"^2E",448],["^ ","^2D",3538,"^2E",448],["^ ","^2D",3545,"^2E",448],["^ ","^2D",3550,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",3565,"^2E",448],["^ ","^2D",3570,"^2E",448],["^ ","^2D",3657,"^2E",448],["^ ","^2D",3662,"^2E",448],["^ ","^2D",3666,"^2E",448],["^ ","^2D",3676,"^2E",448],["^ ","^2D",3681,"^2E",448],["^ ","^2D",3685,"^2E",448],["^ ","^2D",3692,"^2E",448],["^ ","^2D",3697,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",3712,"^2E",448],["^ ","^2D",3717,"^2E",448],["^ ","^2D",3837,"^2E",448],["^ ","^2D",3842,"^2E",448],["^ ","^2D",3846,"^2E",448],["^ ","^2D",3853,"^2E",448],["^ ","^2D",3858,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",3873,"^2E",448],["^ ","^2D",3878,"^2E",448],["^ ","^2D",3878,"^2E",448,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3927,"^2E",448],["^ ","^2D",3927,"^2E",448,"^O","cljs.core/seq"],["^ ","^2D",3941,"^2E",448],["^ ","^2D",3941,"^2E",448,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",3988,"^2E",448],["^ ","^2D",3993,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",4008,"^2E",448],["^ ","^2D",4013,"^2E",448],["^ ","^2D",4130,"^2E",448],["^ ","^2D",4135,"^2E",448],["^ ","^2D",4139,"^2E",448],["^ ","^2D",4146,"^2E",448],["^ ","^2D",4151,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",4166,"^2E",448],["^ ","^2D",4171,"^2E",448],["^ ","^2D",4258,"^2E",448],["^ ","^2D",4263,"^2E",448],["^ ","^2D",4267,"^2E",448],["^ ","^2D",4277,"^2E",448],["^ ","^2D",4282,"^2E",448],["^ ","^2D",4286,"^2E",448],["^ ","^2D",4293,"^2E",448],["^ ","^2D",4298,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",4313,"^2E",448],["^ ","^2D",4318,"^2E",448],["^ ","^2D",4431,"^2E",448],["^ ","^2D",4436,"^2E",448],["^ ","^2D",4440,"^2E",448],["^ ","^2D",4447,"^2E",448],["^ ","^2D",4452,"^2E",448,"^O","cljs.core/List"],["^ ","^2D",4467,"^2E",448],["^ ","^2D",4472,"^2E",448],["^ ","^2D",4559,"^2E",448],["^ ","^2D",4564,"^2E",448],["^ ","^2D",4568,"^2E",448],["^ ","^2D",4584,"^2E",448],["^ ","^2D",4589,"^2E",448],["^ ","^2D",4593,"^2E",448],["^ ","^2D",4663,"^2E",448],["^ ","^2D",4668,"^2E",448],["^ ","^2D",4672,"^2E",448],["^ ","^2D",4687,"^2E",448],["^ ","^2D",4692,"^2E",448],["^ ","^2D",4696,"^2E",448]],"^2Q",[["^ ","^2D",4,"^2E",441,"^O","name"]],"^4<",[["^ ","^2D",4,"^2E",445,"^O","this"]],"^4B",[["^ ","^2D",4,"^2E",446,"^O","args"]],"^6>",[["^ ","^2D",4,"^2E",447,"^O","body"]]],"~i338",["^ ","^4>",[["^ ","^2D",149,"^2E",448,"^O","name"]]],"~i339",["^ ","^4<",[["^ ","^2D",952,"^2E",448,"^O","this"]]],"~i345",["^ ","^3Z",[["^ ","^2D",4650,"^2E",448,"^O","body"]]],"~i400",["^ ","~i0",[["^ ","^2D",0,"^2E",556],["^ ","^2D",35,"^2E",556],["^ ","^2D",81,"^2E",556,"^O","p__38579"],["^ ","^2D",0,"^2E",557],["^ ","^2D",0,"^2E",557],["^ ","^2D",4,"^2E",557,"^O","map__38580"],["^ ","^2D",17,"^2E",557,"^O","p__38579"],["^ ","^2D",4,"^2E",558,"^O","map__38580"],["^ ","^2D",21,"^2E",558],["^ ","^2D",23,"^2E",558],["^ ","^2D",25,"^2E",558],["^ ","^2D",27,"^2E",558],["^ ","^2D",28,"^2E",558,"^O","map__38580"],["^ ","^2D",42,"^2E",558],["^ ","^2D",50,"^2E",558],["^ ","^2D",52,"^2E",558],["^ ","^2D",54,"^2E",558],["^ ","^2D",55,"^2E",558],["^ ","^2D",55,"^2E",558,"^O","map__38580"],["^ ","^2D",104,"^2E",558],["^ ","^2D",115,"^2E",558],["^ ","^2D",116,"^2E",558,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",558],["^ ","^2D",148,"^2E",558,"^O","map__38580"],["^ ","^2D",179,"^2E",558],["^ ","^2D",184,"^2E",558],["^ ","^2D",191,"^2E",558],["^ ","^2D",199,"^2E",558],["^ ","^2D",199,"^2E",558,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",558,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",558,"^O","map__38580"],["^ ","^2D",276,"^2E",558,"^O","map__38580"],["^ ","^2D",14,"^2E",559],["^ ","^2D",14,"^2E",559,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",58,"^2E",559,"^O","map__38580"],["^ ","^2D",73,"^2E",559],["^ ","^2D",15,"^2E",560],["^ ","^2D",15,"^2E",560,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",59,"^2E",560,"^O","map__38580"],["^ ","^2D",74,"^2E",560],["^ ","^2D",0,"^2E",561]],"~i6",[["^ ","^2D",0,"^2E",556,"^O","fulcro.client.primitives/reshape"]],"^2J",[["^ ","^2D",78,"^2E",556,"^O","dt"]],"^3>",[["^ ","^2D",4,"^2E",559,"^O","reshape"]],"^2C",[["^ ","^2D",4,"^2E",560,"^O","defaults"]]],"~i401",["^ ","~i2",[["^ ","^2D",0,"^2E",561],["^ ","^2D",20,"^2E",561],["^ ","^2D",0,"^2E",563],["^ ","^2D",24,"^2E",573],["^ ","^2D",74,"^2E",574,"^O","p__38616"],["^ ","^2D",0,"^2E",575],["^ ","^2D",0,"^2E",575],["^ ","^2D",4,"^2E",575,"^O","vec__38617"],["^ ","^2D",17,"^2E",575,"^O","p__38616"],["^ ","^2D",11,"^2E",576],["^ ","^2D",11,"^2E",576,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",55,"^2E",576,"^O","vec__38617"],["^ ","^2D",66,"^2E",576],["^ ","^2D",70,"^2E",576],["^ ","^2D",11,"^2E",577],["^ ","^2D",11,"^2E",577,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",55,"^2E",577,"^O","vec__38617"],["^ ","^2D",66,"^2E",577],["^ ","^2D",70,"^2E",577],["^ ","^2D",0,"^2E",578],["^ ","^2D",19,"^2E",593],["^ ","^2D",0,"^2E",595],["^ ","^2D",26,"^2E",598],["^ ","^2D",0,"^2E",600],["^ ","^2D",0,"^2E",607]],"^3D",[["^ ","^2D",66,"^2E",562,"^O","x"]]],"~i402",["^ ","^3S",[["^ ","^2D",0,"^2E",563]],"^37",[["^ ","^2D",3,"^2E",563]],"^3D",[["^ ","^2D",5,"^2E",563]],"^2P",[["^ ","^2D",5,"^2E",563,"^O","cljs.core/sequential?"]],"^2C",[["^ ","^2D",33,"^2E",563,"^O","x"]]],"~i403",["^ ","^2O",[["^ ","^2D",41,"^2E",563]],"^35",[["^ ","^2D",41,"^2E",563,"^O","cljs.core/contains?"]],"^3H",[["^ ","^2D",67,"^2E",563,"^O","reshape"]],"^2F",[["^ ","^2D",75,"^2E",563]],"^2H",[["^ ","^2D",75,"^2E",563,"^O","cljs.core/first"]],"^2N",[["^ ","^2D",91,"^2E",563,"^O","x"]]],"~i404",["^ ","^44",[["^ ","^2D",0,"^2E",564],["^ ","^2D",0,"^2E",565]],"^4X",[["^ ","^2D",4,"^2E",564,"^O","reshapef"]],"^3H",[["^ ","^2D",15,"^2E",564]],"^2X",[["^ ","^2D",15,"^2E",564,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2C",[["^ ","^2D",59,"^2E",564,"^O","reshape"]],"^3A",[["^ ","^2D",67,"^2E",564]],"^2M",[["^ ","^2D",67,"^2E",564,"^O","cljs.core/first"]],"^3F",[["^ ","^2D",83,"^2E",564,"^O","x"]]],"~i405",["^ ","^37",[["^ ","^2D",0,"^2E",565]],"^3K",[["^ ","^2D",0,"^2E",565,"^O","fulcro.client.primitives/validate-sig"]],"^2X",[["^ ","^2D",38,"^2E",565,"^O","x"]]],"~i406",["^ ","^37",[["^ ","^2D",0,"^2E",567]],"^3K",[["^ ","^2D",8,"^2E",567,"^O","reshapef"],["^ ","^2D",49,"^2E",567,"^O","reshapef"],["^ ","^2D",93,"^2E",567,"^O","reshapef"]],"^3>",[["^ ","^2D",88,"^2E",567,"^O","x"],["^ ","^2D",112,"^2E",567,"^O","x"]]],"~i407",["^ ","^44",[["^ ","^2D",0,"^2E",569,"^O","x"]]],"~i408",["^ ","^2X",[["^ ","^2D",70,"^2E",574,"^O","ret"]],"^3E",[["^ ","^2D",4,"^2E",576,"^O","name"]],"^2K",[["^ ","^2D",4,"^2E",577,"^O","impl"]]],"~i409",["^ ","^3S",[["^ ","^2D",0,"^2E",578],["^ ","^2D",3,"^2E",578],["^ ","^2D",3,"^2E",578,"^O","cljs.core/not"]],"^4X",[["^ ","^2D",17,"^2E",578],["^ ","^2D",32,"^2E",578]],"^3D",[["^ ","^2D",17,"^2E",578,"^O","cljs.core/some"]],"^4I",[["^ ","^2D",79,"^2E",578,"^O","name"]],"^2C",[["^ ","^2D",86,"^2E",578]],"^3E",[["^ ","^2D",86,"^2E",578,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^3W",[["^ ","^2D",130,"^2E",578,"^O","cljs.core/first"]],"^4>",[["^ ","^2D",146,"^2E",578]],"^2Q",[["^ ","^2D",146,"^2E",578,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^2S",[["^ ","^2D",193,"^2E",578,"^O","cljs.core/seq?"]],"^4J",[["^ ","^2D",214,"^2E",578,"^O","ret"]]],"~i410",["^ ","^44",[["^ ","^2D",0,"^2E",579],["^ ","^2D",4,"^2E",579,"^O","vec__38620"],["^ ","^2D",13,"^2E",580],["^ ","^2D",13,"^2E",580,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",57,"^2E",580,"^O","vec__38620"],["^ ","^2D",68,"^2E",580],["^ ","^2D",72,"^2E",580],["^ ","^2D",4,"^2E",581,"^O","vec__38623"],["^ ","^2D",17,"^2E",581],["^ ","^2D",17,"^2E",581,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",61,"^2E",581,"^O","vec__38620"],["^ ","^2D",72,"^2E",581],["^ ","^2D",76,"^2E",581],["^ ","^2D",4,"^2E",582,"^O","seq__38624"],["^ ","^2D",17,"^2E",582],["^ ","^2D",17,"^2E",582,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",582,"^O","vec__38623"],["^ ","^2D",4,"^2E",583,"^O","first__38625"],["^ ","^2D",19,"^2E",583],["^ ","^2D",19,"^2E",583,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",583,"^O","seq__38624"],["^ ","^2D",4,"^2E",584,"^O","seq__38624"],["^ ","^2D",21,"^2E",584],["^ ","^2D",21,"^2E",584,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",584,"^O","seq__38624"],["^ ","^2D",8,"^2E",585,"^O","first__38625"],["^ ","^2D",12,"^2E",586,"^O","seq__38624"],["^ ","^2D",0,"^2E",587]],"^3D",[["^ ","^2D",4,"^2E",580,"^O","before"]],"^3H",[["^ ","^2D",4,"^2E",585,"^O","p"]],"^48",[["^ ","^2D",4,"^2E",586,"^O","after"]],"^2L",[["^ ","^2D",17,"^2E",579]],"^3A",[["^ ","^2D",17,"^2E",579,"^O","cljs.core/split-with"]],"^2S",[["^ ","^2D",38,"^2E",579],["^ ","^2D",59,"^2E",579],["^ ","^2D",140,"^2E",579]],"^4E",[["^ ","^2D",38,"^2E",579,"^O","cljs.core/complement"]],"~i77",[["^ ","^2D",220,"^2E",579,"^O","ret"]]],"~i411",["^ ","^37",[["^ ","^2D",0,"^2E",587]],"^3K",[["^ ","^2D",7,"^2E",587,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^2P",[["^ ","^2D",52,"^2E",587]],"^3Y",[["^ ","^2D",52,"^2E",587,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic"]],"^4I",[["^ ","^2D",104,"^2E",587]],"^3H",[["^ ","^2D",104,"^2E",587,"^O","cljs.core/vec"]],"^48",[["^ ","^2D",118,"^2E",587,"^O","before"]],"^2L",[["^ ","^2D",126,"^2E",587,"^O","p"]],"^2M",[["^ ","^2D",178,"^2E",587]],"^2N",[["^ ","^2D",178,"^2E",587,"^O","cljs.core/cons"]],"^3F",[["^ ","^2D",193,"^2E",587,"^O","name"]],"^4E",[["^ ","^2D",198,"^2E",587,"^O","impl"]],"^4B",[["^ ","^2D",210,"^2E",587,"^O","after"]]],"~i412",["^ ","^44",[["^ ","^2D",0,"^2E",589,"^O","ret"]]],"~i413",["^ ","^3V",[["^ ","^2D",65,"^2E",594,"^O","dt"]]],"~i414",["^ ","^3S",[["^ ","^2D",0,"^2E",595]],"^2G",[["^ ","^2D",7,"^2E",595,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^4X",[["^ ","^2D",54,"^2E",595,"^O","add-defaults-step"]],"^2H",[["^ ","^2D",72,"^2E",595,"^O","dt"]],"^2L",[["^ ","^2D",79,"^2E",595,"^O","defaults"]]],"~i415",["^ ","^4Y",[["^ ","^2D",72,"^2E",599,"^O","dt"]]],"~i416",["^ ","^3S",[["^ ","^2D",0,"^2E",600],["^ ","^2D",3,"^2E",600],["^ ","^2D",3,"^2E",600,"^O","cljs.core/not"]],"^4X",[["^ ","^2D",17,"^2E",600],["^ ","^2D",32,"^2E",600],["^ ","^2D",113,"^2E",600]],"^3D",[["^ ","^2D",17,"^2E",600,"^O","cljs.core/some"]],"^2F",[["^ ","^2D",192,"^2E",600,"^O","dt"]]],"~i417",["^ ","^44",[["^ ","^2D",0,"^2E",601],["^ ","^2D",59,"^2E",601]],"^2J",[["^ ","^2D",7,"^2E",601,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^4X",[["^ ","^2D",52,"^2E",601,"^O","dt"]]],"~i418",["^ ","^44",[["^ ","^2D",0,"^2E",603,"^O","dt"]]],"~i419",["^ ","~i4",[["^ ","^2D",0,"^2E",607],["^ ","^2D",20,"^2E",607],["^ ","^2D",40,"^2E",607]],"~i9",[["^ ","^2D",112,"^2E",607,"^O","dt"]],"^3S",[["^ ","^2D",54,"^2E",607]],"^2G",[["^ ","^2D",54,"^2E",607,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^3K",[["^ ","^2D",98,"^2E",607,"^O","reshape*"]],"^3L",[["^ ","^2D",40,"^2E",607,"^O","cljs.core/vec"]],"^30",[["^ ","^2D",20,"^2E",607,"^O","add-object-protocol"]],"^3Z",[["^ ","^2D",7,"^2E",607,"^O","add-defaults"]]],"~i497",["^ ","~i0",[["^ ","^2D",0,"^2E",609],["^ ","^2D",0,"^2E",609],["^ ","^2D",39,"^2E",609],["^ ","^2D",86,"^2E",609,"^O","var_args"],["^ ","^2D",0,"^2E",610],["^ ","^2D",0,"^2E",610],["^ ","^2D",4,"^2E",610,"^O","G__38690"],["^ ","^2D",15,"^2E",610],["^ ","^2D",15,"^2E",610],["^ ","^2D",0,"^2E",611],["^ ","^2D",0,"^2E",611],["^ ","^2D",8,"^2E",611,"^O","G__38690"],["^ ","^2D",5,"^2E",612],["^ ","^2D",0,"^2E",613],["^ ","^2D",7,"^2E",613,"^O","fulcro.client.primitives/defui*"],["^ ","^2D",74,"^2E",613],["^ ","^2D",75,"^2E",613],["^ ","^2D",85,"^2E",613],["^ ","^2D",91,"^2E",613],["^ ","^2D",92,"^2E",613],["^ ","^2D",102,"^2E",613],["^ ","^2D",5,"^2E",616],["^ ","^2D",0,"^2E",617],["^ ","^2D",7,"^2E",617,"^O","fulcro.client.primitives/defui*"],["^ ","^2D",74,"^2E",617],["^ ","^2D",75,"^2E",617],["^ ","^2D",85,"^2E",617],["^ ","^2D",91,"^2E",617],["^ ","^2D",92,"^2E",617],["^ ","^2D",102,"^2E",617],["^ ","^2D",108,"^2E",617],["^ ","^2D",109,"^2E",617],["^ ","^2D",119,"^2E",617],["^ ","^2D",0,"^2E",621],["^ ","^2D",6,"^2E",621],["^ ","^2D",11,"^2E",621,"^O","js/Error"],["^ ","^2D",17,"^2E",621],["^ ","^2D",18,"^2E",621],["^ ","^2D",80,"^2E",621],["^ ","^2D",80,"^2E",621],["^ ","^2D",0,"^2E",626],["^ ","^2D",0,"^2E",626],["^ ","^2D",69,"^2E",626],["^ ","^2D",0,"^2E",627],["^ ","^2D",0,"^2E",630],["^ ","^2D",0,"^2E",630],["^ ","^2D",69,"^2E",630],["^ ","^2D",0,"^2E",631],["^ ","^2D",0,"^2E",671],["^ ","^2D",0,"^2E",671],["^ ","^2D",63,"^2E",671],["^ ","^2D",0,"^2E",673]],"~i6",[["^ ","^2D",0,"^2E",609,"^O","fulcro.client.primitives/defui*"],["^ ","^2D",0,"^2E",626,"^O","fulcro.client.primitives/defui*"],["^ ","^2D",0,"^2E",630,"^O","fulcro.client.primitives/defui*"],["^ ","^2D",0,"^2E",671,"^O","fulcro.client.primitives/defui*"]]],"~i498",["^ ","~i4",[["^ ","^2D",80,"^2E",626,"^O","name"]],"~i9",[["^ ","^2D",85,"^2E",626,"^O","form"]],"^2J",[["^ ","^2D",0,"^2E",627],["^ ","^2D",84,"^2E",627]],"^37",[["^ ","^2D",7,"^2E",627,"^O","fulcro.client.primitives.defui_STAR_.cljs$core$IFn$_invoke$arity$3"]],"^3Y",[["^ ","^2D",74,"^2E",627,"^O","name"]],"^4I",[["^ ","^2D",79,"^2E",627,"^O","form"]]],"~i499",["^ ","~i4",[["^ ","^2D",80,"^2E",630,"^O","name"]],"~i9",[["^ ","^2D",85,"^2E",630,"^O","forms"]],"^2J",[["^ ","^2D",91,"^2E",630,"^O","env"]]],"~i500",["^ ","~i3",[["^ ","^2D",0,"^2E",631],["^ ","^2D",22,"^2E",631],["^ ","^2D",77,"^2E",631,"^O","p__38703"],["^ ","^2D",0,"^2E",632],["^ ","^2D",0,"^2E",632],["^ ","^2D",4,"^2E",632,"^O","vec__38704"],["^ ","^2D",17,"^2E",632,"^O","p__38703"],["^ ","^2D",12,"^2E",633],["^ ","^2D",12,"^2E",633,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",633,"^O","vec__38704"],["^ ","^2D",67,"^2E",633],["^ ","^2D",71,"^2E",633],["^ ","^2D",12,"^2E",634],["^ ","^2D",12,"^2E",634,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",634,"^O","vec__38704"],["^ ","^2D",67,"^2E",634],["^ ","^2D",71,"^2E",634],["^ ","^2D",0,"^2E",635],["^ ","^2D",0,"^2E",635],["^ ","^2D",7,"^2E",635,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",56,"^2E",635],["^ ","^2D",56,"^2E",635,"^O","cljs.core/seq"],["^ ","^2D",70,"^2E",635],["^ ","^2D",70,"^2E",635,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",124,"^2E",635],["^ ","^2D",129,"^2E",635,"^O","cljs.core/List"],["^ ","^2D",144,"^2E",635],["^ ","^2D",149,"^2E",635],["^ ","^2D",205,"^2E",635],["^ ","^2D",210,"^2E",635],["^ ","^2D",214,"^2E",635],["^ ","^2D",221,"^2E",635],["^ ","^2D",226,"^2E",635,"^O","cljs.core/List"],["^ ","^2D",241,"^2E",635],["^ ","^2D",246,"^2E",635],["^ ","^2D",246,"^2E",635,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",295,"^2E",635],["^ ","^2D",295,"^2E",635,"^O","cljs.core/seq"],["^ ","^2D",309,"^2E",635],["^ ","^2D",309,"^2E",635,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",363,"^2E",635],["^ ","^2D",368,"^2E",635,"^O","cljs.core/List"],["^ ","^2D",383,"^2E",635],["^ ","^2D",388,"^2E",635],["^ ","^2D",439,"^2E",635],["^ ","^2D",444,"^2E",635],["^ ","^2D",448,"^2E",635],["^ ","^2D",455,"^2E",635],["^ ","^2D",460,"^2E",635,"^O","cljs.core/List"],["^ ","^2D",475,"^2E",635],["^ ","^2D",484,"^2E",635],["^ ","^2D",489,"^2E",635],["^ ","^2D",493,"^2E",635],["^ ","^2D",550,"^2E",635],["^ ","^2D",555,"^2E",635,"^O","cljs.core/List"],["^ ","^2D",570,"^2E",635],["^ ","^2D",689,"^2E",635],["^ ","^2D",694,"^2E",635],["^ ","^2D",698,"^2E",635],["^ ","^2D",713,"^2E",635],["^ ","^2D",718,"^2E",635],["^ ","^2D",722,"^2E",635],["^ ","^2D",779,"^2E",635],["^ ","^2D",784,"^2E",635,"^O","cljs.core/List"],["^ ","^2D",799,"^2E",635],["^ ","^2D",810,"^2E",635],["^ ","^2D",815,"^2E",635],["^ ","^2D",819,"^2E",635],["^ ","^2D",0,"^2E",637]],"^3=",[["^ ","^2D",73,"^2E",631,"^O","obj"]],"^3H",[["^ ","^2D",4,"^2E",633,"^O","field"]],"^3E",[["^ ","^2D",4,"^2E",634,"^O","value"]]],"~i501",["^ ","^4I",[["^ ","^2D",480,"^2E",635,"^O","obj"]],"^48",[["^ ","^2D",575,"^2E",635]],"^2C",[["^ ","^2D",575,"^2E",635,"^O","cljs.core.symbol.cljs$core$IFn$_invoke$arity$1"]],"^2L",[["^ ","^2D",622,"^2E",635],["^ ","^2D",623,"^2E",635]],"^5;",[["^ ","^2D",671,"^2E",635,"^O","field"]],"~i60",[["^ ","^2D",804,"^2E",635,"^O","value"]]],"~i502",["^ ","~i5",[["^ ","^2D",0,"^2E",637],["^ ","^2D",4,"^2E",645,"^O","map__38711"],["^ ","^2D",4,"^2E",646,"^O","map__38711"],["^ ","^2D",21,"^2E",646],["^ ","^2D",23,"^2E",646],["^ ","^2D",25,"^2E",646],["^ ","^2D",27,"^2E",646],["^ ","^2D",28,"^2E",646,"^O","map__38711"],["^ ","^2D",42,"^2E",646],["^ ","^2D",50,"^2E",646],["^ ","^2D",52,"^2E",646],["^ ","^2D",54,"^2E",646],["^ ","^2D",55,"^2E",646],["^ ","^2D",55,"^2E",646,"^O","map__38711"],["^ ","^2D",104,"^2E",646],["^ ","^2D",115,"^2E",646],["^ ","^2D",116,"^2E",646,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",646],["^ ","^2D",148,"^2E",646,"^O","map__38711"],["^ ","^2D",179,"^2E",646],["^ ","^2D",184,"^2E",646],["^ ","^2D",191,"^2E",646],["^ ","^2D",199,"^2E",646],["^ ","^2D",199,"^2E",646,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",646,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",646,"^O","map__38711"],["^ ","^2D",276,"^2E",646,"^O","map__38711"],["^ ","^2D",9,"^2E",647],["^ ","^2D",9,"^2E",647,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",53,"^2E",647,"^O","map__38711"],["^ ","^2D",68,"^2E",647],["^ ","^2D",14,"^2E",648],["^ ","^2D",14,"^2E",648,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",58,"^2E",648,"^O","map__38711"],["^ ","^2D",73,"^2E",648],["^ ","^2D",11,"^2E",651],["^ ","^2D",11,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",60,"^2E",651],["^ ","^2D",60,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",74,"^2E",651],["^ ","^2D",74,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",128,"^2E",651],["^ ","^2D",133,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",148,"^2E",651],["^ ","^2D",153,"^2E",651],["^ ","^2D",234,"^2E",651],["^ ","^2D",239,"^2E",651],["^ ","^2D",243,"^2E",651],["^ ","^2D",250,"^2E",651],["^ ","^2D",255,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",270,"^2E",651],["^ ","^2D",804,"^2E",651],["^ ","^2D",809,"^2E",651],["^ ","^2D",813,"^2E",651],["^ ","^2D",870,"^2E",651],["^ ","^2D",875,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",890,"^2E",651],["^ ","^2D",895,"^2E",651],["^ ","^2D",895,"^2E",651,"^O","cljs.core/vec"],["^ ","^2D",909,"^2E",651],["^ ","^2D",909,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",958,"^2E",651],["^ ","^2D",958,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",972,"^2E",651],["^ ","^2D",972,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$0"],["^ ","^2D",1024,"^2E",651],["^ ","^2D",1029,"^2E",651],["^ ","^2D",1033,"^2E",651],["^ ","^2D",1040,"^2E",651],["^ ","^2D",1045,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",1060,"^2E",651],["^ ","^2D",1065,"^2E",651],["^ ","^2D",1065,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1114,"^2E",651],["^ ","^2D",1114,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",1128,"^2E",651],["^ ","^2D",1128,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1182,"^2E",651],["^ ","^2D",1187,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",1202,"^2E",651],["^ ","^2D",1207,"^2E",651],["^ ","^2D",1286,"^2E",651],["^ ","^2D",1291,"^2E",651],["^ ","^2D",1295,"^2E",651],["^ ","^2D",1302,"^2E",651],["^ ","^2D",1307,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",1322,"^2E",651],["^ ","^2D",1327,"^2E",651],["^ ","^2D",1415,"^2E",651],["^ ","^2D",1420,"^2E",651],["^ ","^2D",1424,"^2E",651],["^ ","^2D",1481,"^2E",651],["^ ","^2D",1486,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",1501,"^2E",651],["^ ","^2D",1506,"^2E",651],["^ ","^2D",1506,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1555,"^2E",651],["^ ","^2D",1555,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",1569,"^2E",651],["^ ","^2D",1569,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1623,"^2E",651],["^ ","^2D",1628,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",1643,"^2E",651],["^ ","^2D",1648,"^2E",651],["^ ","^2D",1710,"^2E",651],["^ ","^2D",1715,"^2E",651],["^ ","^2D",1719,"^2E",651],["^ ","^2D",1726,"^2E",651],["^ ","^2D",1731,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",1746,"^2E",651],["^ ","^2D",1751,"^2E",651],["^ ","^2D",1832,"^2E",651],["^ ","^2D",1837,"^2E",651],["^ ","^2D",1841,"^2E",651],["^ ","^2D",1898,"^2E",651],["^ ","^2D",1903,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",1918,"^2E",651],["^ ","^2D",1923,"^2E",651],["^ ","^2D",2011,"^2E",651],["^ ","^2D",2016,"^2E",651],["^ ","^2D",2020,"^2E",651],["^ ","^2D",2027,"^2E",651],["^ ","^2D",2032,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",2047,"^2E",651],["^ ","^2D",2052,"^2E",651],["^ ","^2D",2052,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2101,"^2E",651],["^ ","^2D",2101,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",2115,"^2E",651],["^ ","^2D",2115,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2162,"^2E",651],["^ ","^2D",2167,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",2182,"^2E",651],["^ ","^2D",2187,"^2E",651],["^ ","^2D",2276,"^2E",651],["^ ","^2D",2281,"^2E",651],["^ ","^2D",2285,"^2E",651],["^ ","^2D",2295,"^2E",651],["^ ","^2D",2300,"^2E",651],["^ ","^2D",2304,"^2E",651],["^ ","^2D",2319,"^2E",651],["^ ","^2D",2324,"^2E",651],["^ ","^2D",2328,"^2E",651],["^ ","^2D",2335,"^2E",651],["^ ","^2D",2340,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",2355,"^2E",651],["^ ","^2D",2360,"^2E",651],["^ ","^2D",2360,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2409,"^2E",651],["^ ","^2D",2409,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",2423,"^2E",651],["^ ","^2D",2423,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2477,"^2E",651],["^ ","^2D",2482,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",2497,"^2E",651],["^ ","^2D",2502,"^2E",651],["^ ","^2D",2587,"^2E",651],["^ ","^2D",2592,"^2E",651],["^ ","^2D",2596,"^2E",651],["^ ","^2D",2603,"^2E",651],["^ ","^2D",2608,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",2623,"^2E",651],["^ ","^2D",2628,"^2E",651],["^ ","^2D",2628,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2677,"^2E",651],["^ ","^2D",2677,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",2691,"^2E",651],["^ ","^2D",2691,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",2738,"^2E",651],["^ ","^2D",2743,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",2758,"^2E",651],["^ ","^2D",2763,"^2E",651],["^ ","^2D",2842,"^2E",651],["^ ","^2D",2847,"^2E",651],["^ ","^2D",2851,"^2E",651],["^ ","^2D",2858,"^2E",651],["^ ","^2D",2863,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",2878,"^2E",651],["^ ","^2D",2883,"^2E",651],["^ ","^2D",2883,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2932,"^2E",651],["^ ","^2D",2932,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",2946,"^2E",651],["^ ","^2D",2946,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",2993,"^2E",651],["^ ","^2D",2998,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",3013,"^2E",651],["^ ","^2D",3018,"^2E",651],["^ ","^2D",3100,"^2E",651],["^ ","^2D",3105,"^2E",651],["^ ","^2D",3109,"^2E",651],["^ ","^2D",3116,"^2E",651],["^ ","^2D",3121,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",3136,"^2E",651],["^ ","^2D",3141,"^2E",651],["^ ","^2D",3141,"^2E",651,"^O","cljs.core/with-meta"],["^ ","^2D",3161,"^2E",651],["^ ","^2D",3249,"^2E",651],["^ ","^2D",3249,"^2E",651,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",3295,"^2E",651,"^O","cljs.core/array-map"],["^ ","^2D",3315,"^2E",651],["^ ","^2D",3315,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3364,"^2E",651],["^ ","^2D",3364,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",3378,"^2E",651],["^ ","^2D",3378,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",3432,"^2E",651],["^ ","^2D",3437,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",3452,"^2E",651],["^ ","^2D",3457,"^2E",651],["^ ","^2D",3511,"^2E",651],["^ ","^2D",3516,"^2E",651],["^ ","^2D",3520,"^2E",651],["^ ","^2D",3527,"^2E",651],["^ ","^2D",3532,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",3547,"^2E",651],["^ ","^2D",3552,"^2E",651],["^ ","^2D",3584,"^2E",651],["^ ","^2D",3589,"^2E",651],["^ ","^2D",3593,"^2E",651],["^ ","^2D",3650,"^2E",651],["^ ","^2D",3655,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",3670,"^2E",651],["^ ","^2D",3675,"^2E",651],["^ ","^2D",3727,"^2E",651],["^ ","^2D",3732,"^2E",651],["^ ","^2D",3736,"^2E",651],["^ ","^2D",3743,"^2E",651],["^ ","^2D",3748,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",3763,"^2E",651],["^ ","^2D",3768,"^2E",651],["^ ","^2D",3772,"^2E",651],["^ ","^2D",3777,"^2E",651],["^ ","^2D",3781,"^2E",651],["^ ","^2D",3788,"^2E",651],["^ ","^2D",3793,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",3808,"^2E",651],["^ ","^2D",3813,"^2E",651],["^ ","^2D",3870,"^2E",651],["^ ","^2D",3875,"^2E",651],["^ ","^2D",3879,"^2E",651],["^ ","^2D",3886,"^2E",651],["^ ","^2D",3891,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",3906,"^2E",651],["^ ","^2D",3911,"^2E",651],["^ ","^2D",3914,"^2E",651],["^ ","^2D",3919,"^2E",651],["^ ","^2D",3923,"^2E",651],["^ ","^2D",3930,"^2E",651],["^ ","^2D",3935,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",3950,"^2E",651],["^ ","^2D",3955,"^2E",651],["^ ","^2D",4016,"^2E",651],["^ ","^2D",4021,"^2E",651],["^ ","^2D",4025,"^2E",651],["^ ","^2D",4032,"^2E",651],["^ ","^2D",4037,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",4052,"^2E",651],["^ ","^2D",4057,"^2E",651],["^ ","^2D",4061,"^2E",651],["^ ","^2D",4066,"^2E",651],["^ ","^2D",4070,"^2E",651],["^ ","^2D",4077,"^2E",651],["^ ","^2D",4082,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",4097,"^2E",651],["^ ","^2D",4102,"^2E",651],["^ ","^2D",4167,"^2E",651],["^ ","^2D",4172,"^2E",651],["^ ","^2D",4176,"^2E",651],["^ ","^2D",4183,"^2E",651],["^ ","^2D",4188,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",4203,"^2E",651],["^ ","^2D",4208,"^2E",651],["^ ","^2D",4211,"^2E",651],["^ ","^2D",4216,"^2E",651],["^ ","^2D",4220,"^2E",651],["^ ","^2D",4227,"^2E",651],["^ ","^2D",4232,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",4247,"^2E",651],["^ ","^2D",4252,"^2E",651],["^ ","^2D",4304,"^2E",651],["^ ","^2D",4309,"^2E",651],["^ ","^2D",4313,"^2E",651],["^ ","^2D",4320,"^2E",651],["^ ","^2D",4325,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",4340,"^2E",651],["^ ","^2D",4345,"^2E",651],["^ ","^2D",4445,"^2E",651],["^ ","^2D",4450,"^2E",651],["^ ","^2D",4454,"^2E",651],["^ ","^2D",4471,"^2E",651],["^ ","^2D",4476,"^2E",651],["^ ","^2D",4480,"^2E",651],["^ ","^2D",4490,"^2E",651],["^ ","^2D",4495,"^2E",651],["^ ","^2D",4499,"^2E",651],["^ ","^2D",4509,"^2E",651],["^ ","^2D",4514,"^2E",651],["^ ","^2D",4518,"^2E",651],["^ ","^2D",4575,"^2E",651],["^ ","^2D",4580,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",4595,"^2E",651],["^ ","^2D",4600,"^2E",651],["^ ","^2D",4600,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4649,"^2E",651],["^ ","^2D",4649,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",4663,"^2E",651],["^ ","^2D",4663,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",4717,"^2E",651],["^ ","^2D",4722,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",4737,"^2E",651],["^ ","^2D",4742,"^2E",651],["^ ","^2D",4798,"^2E",651],["^ ","^2D",4803,"^2E",651],["^ ","^2D",4807,"^2E",651],["^ ","^2D",4814,"^2E",651],["^ ","^2D",4819,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",4834,"^2E",651],["^ ","^2D",4839,"^2E",651],["^ ","^2D",4839,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4888,"^2E",651],["^ ","^2D",4888,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",4902,"^2E",651],["^ ","^2D",4902,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",4949,"^2E",651],["^ ","^2D",4954,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",4969,"^2E",651],["^ ","^2D",4974,"^2E",651],["^ ","^2D",5037,"^2E",651],["^ ","^2D",5042,"^2E",651],["^ ","^2D",5046,"^2E",651],["^ ","^2D",5053,"^2E",651],["^ ","^2D",5058,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",5073,"^2E",651],["^ ","^2D",5078,"^2E",651],["^ ","^2D",5166,"^2E",651],["^ ","^2D",5171,"^2E",651],["^ ","^2D",5175,"^2E",651],["^ ","^2D",5185,"^2E",651],["^ ","^2D",5190,"^2E",651],["^ ","^2D",5194,"^2E",651],["^ ","^2D",5251,"^2E",651],["^ ","^2D",5256,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",5271,"^2E",651],["^ ","^2D",5276,"^2E",651],["^ ","^2D",5276,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",5325,"^2E",651],["^ ","^2D",5325,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",5339,"^2E",651],["^ ","^2D",5339,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",5386,"^2E",651],["^ ","^2D",5391,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",5406,"^2E",651],["^ ","^2D",5411,"^2E",651],["^ ","^2D",5490,"^2E",651],["^ ","^2D",5495,"^2E",651],["^ ","^2D",5499,"^2E",651],["^ ","^2D",5506,"^2E",651],["^ ","^2D",5511,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",5526,"^2E",651],["^ ","^2D",5531,"^2E",651],["^ ","^2D",5531,"^2E",651,"^O","cljs.core/with-meta"],["^ ","^2D",5551,"^2E",651],["^ ","^2D",5639,"^2E",651],["^ ","^2D",5639,"^2E",651,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",5685,"^2E",651,"^O","cljs.core/array-map"],["^ ","^2D",5705,"^2E",651],["^ ","^2D",5705,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",5754,"^2E",651],["^ ","^2D",5754,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",5768,"^2E",651],["^ ","^2D",5768,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",5822,"^2E",651],["^ ","^2D",5827,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",5842,"^2E",651],["^ ","^2D",5847,"^2E",651],["^ ","^2D",5901,"^2E",651],["^ ","^2D",5906,"^2E",651],["^ ","^2D",5910,"^2E",651],["^ ","^2D",5917,"^2E",651],["^ ","^2D",5922,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",5937,"^2E",651],["^ ","^2D",5942,"^2E",651],["^ ","^2D",5974,"^2E",651],["^ ","^2D",5979,"^2E",651],["^ ","^2D",5983,"^2E",651],["^ ","^2D",6040,"^2E",651],["^ ","^2D",6045,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",6060,"^2E",651],["^ ","^2D",6065,"^2E",651],["^ ","^2D",6117,"^2E",651],["^ ","^2D",6122,"^2E",651],["^ ","^2D",6126,"^2E",651],["^ ","^2D",6133,"^2E",651],["^ ","^2D",6138,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",6153,"^2E",651],["^ ","^2D",6158,"^2E",651],["^ ","^2D",6162,"^2E",651],["^ ","^2D",6167,"^2E",651],["^ ","^2D",6171,"^2E",651],["^ ","^2D",6178,"^2E",651],["^ ","^2D",6183,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",6198,"^2E",651],["^ ","^2D",6203,"^2E",651],["^ ","^2D",6260,"^2E",651],["^ ","^2D",6265,"^2E",651],["^ ","^2D",6269,"^2E",651],["^ ","^2D",6276,"^2E",651],["^ ","^2D",6281,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",6296,"^2E",651],["^ ","^2D",6301,"^2E",651],["^ ","^2D",6304,"^2E",651],["^ ","^2D",6309,"^2E",651],["^ ","^2D",6313,"^2E",651],["^ ","^2D",6320,"^2E",651],["^ ","^2D",6325,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",6340,"^2E",651],["^ ","^2D",6345,"^2E",651],["^ ","^2D",6406,"^2E",651],["^ ","^2D",6411,"^2E",651],["^ ","^2D",6415,"^2E",651],["^ ","^2D",6422,"^2E",651],["^ ","^2D",6427,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",6442,"^2E",651],["^ ","^2D",6447,"^2E",651],["^ ","^2D",6451,"^2E",651],["^ ","^2D",6456,"^2E",651],["^ ","^2D",6460,"^2E",651],["^ ","^2D",6467,"^2E",651],["^ ","^2D",6472,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",6487,"^2E",651],["^ ","^2D",6492,"^2E",651],["^ ","^2D",6557,"^2E",651],["^ ","^2D",6562,"^2E",651],["^ ","^2D",6566,"^2E",651],["^ ","^2D",6573,"^2E",651],["^ ","^2D",6578,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",6593,"^2E",651],["^ ","^2D",6598,"^2E",651],["^ ","^2D",6601,"^2E",651],["^ ","^2D",6606,"^2E",651],["^ ","^2D",6610,"^2E",651],["^ ","^2D",6617,"^2E",651],["^ ","^2D",6622,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",6637,"^2E",651],["^ ","^2D",6642,"^2E",651],["^ ","^2D",6694,"^2E",651],["^ ","^2D",6699,"^2E",651],["^ ","^2D",6703,"^2E",651],["^ ","^2D",6710,"^2E",651],["^ ","^2D",6715,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",6730,"^2E",651],["^ ","^2D",6735,"^2E",651],["^ ","^2D",6835,"^2E",651],["^ ","^2D",6840,"^2E",651],["^ ","^2D",6844,"^2E",651],["^ ","^2D",6861,"^2E",651],["^ ","^2D",6866,"^2E",651],["^ ","^2D",6870,"^2E",651],["^ ","^2D",6880,"^2E",651],["^ ","^2D",6885,"^2E",651],["^ ","^2D",6889,"^2E",651],["^ ","^2D",6904,"^2E",651],["^ ","^2D",6909,"^2E",651],["^ ","^2D",6913,"^2E",651],["^ ","^2D",6920,"^2E",651],["^ ","^2D",6925,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",6940,"^2E",651],["^ ","^2D",6945,"^2E",651],["^ ","^2D",6945,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",6994,"^2E",651],["^ ","^2D",6994,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",7008,"^2E",651],["^ ","^2D",7008,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",7062,"^2E",651],["^ ","^2D",7067,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",7082,"^2E",651],["^ ","^2D",7087,"^2E",651],["^ ","^2D",7143,"^2E",651],["^ ","^2D",7148,"^2E",651],["^ ","^2D",7152,"^2E",651],["^ ","^2D",7159,"^2E",651],["^ ","^2D",7164,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",7179,"^2E",651],["^ ","^2D",7184,"^2E",651],["^ ","^2D",7184,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",7233,"^2E",651],["^ ","^2D",7233,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",7247,"^2E",651],["^ ","^2D",7247,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",7294,"^2E",651],["^ ","^2D",7299,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",7314,"^2E",651],["^ ","^2D",7319,"^2E",651],["^ ","^2D",7382,"^2E",651],["^ ","^2D",7387,"^2E",651],["^ ","^2D",7391,"^2E",651],["^ ","^2D",7398,"^2E",651],["^ ","^2D",7403,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",7418,"^2E",651],["^ ","^2D",7423,"^2E",651],["^ ","^2D",7511,"^2E",651],["^ ","^2D",7516,"^2E",651],["^ ","^2D",7520,"^2E",651],["^ ","^2D",7530,"^2E",651],["^ ","^2D",7535,"^2E",651],["^ ","^2D",7539,"^2E",651],["^ ","^2D",7596,"^2E",651],["^ ","^2D",7601,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",7616,"^2E",651],["^ ","^2D",7621,"^2E",651],["^ ","^2D",7621,"^2E",651,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",7670,"^2E",651],["^ ","^2D",7670,"^2E",651,"^O","cljs.core/seq"],["^ ","^2D",7684,"^2E",651],["^ ","^2D",7684,"^2E",651,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",7731,"^2E",651],["^ ","^2D",7736,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",7751,"^2E",651],["^ ","^2D",7756,"^2E",651],["^ ","^2D",7834,"^2E",651],["^ ","^2D",7839,"^2E",651],["^ ","^2D",7843,"^2E",651],["^ ","^2D",7853,"^2E",651],["^ ","^2D",7858,"^2E",651],["^ ","^2D",7862,"^2E",651],["^ ","^2D",7877,"^2E",651],["^ ","^2D",7882,"^2E",651],["^ ","^2D",7886,"^2E",651],["^ ","^2D",7901,"^2E",651],["^ ","^2D",7906,"^2E",651],["^ ","^2D",7910,"^2E",651],["^ ","^2D",7917,"^2E",651],["^ ","^2D",7922,"^2E",651,"^O","cljs.core/List"],["^ ","^2D",7937,"^2E",651],["^ ","^2D",7942,"^2E",651],["^ ","^2D",8030,"^2E",651],["^ ","^2D",8035,"^2E",651],["^ ","^2D",8039,"^2E",651],["^ ","^2D",8054,"^2E",651],["^ ","^2D",8059,"^2E",651],["^ ","^2D",8063,"^2E",651],["^ ","^2D",28,"^2E",652],["^ ","^2D",28,"^2E",652,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",77,"^2E",652],["^ ","^2D",77,"^2E",652,"^O","cljs.core/seq"],["^ ","^2D",91,"^2E",652],["^ ","^2D",91,"^2E",652,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",145,"^2E",652],["^ ","^2D",150,"^2E",652,"^O","cljs.core/List"],["^ ","^2D",165,"^2E",652],["^ ","^2D",170,"^2E",652],["^ ","^2D",226,"^2E",652],["^ ","^2D",231,"^2E",652],["^ ","^2D",235,"^2E",652],["^ ","^2D",242,"^2E",652],["^ ","^2D",247,"^2E",652,"^O","cljs.core/List"],["^ ","^2D",262,"^2E",652],["^ ","^2D",267,"^2E",652],["^ ","^2D",267,"^2E",652,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",316,"^2E",652],["^ ","^2D",316,"^2E",652,"^O","cljs.core/seq"],["^ ","^2D",330,"^2E",652],["^ ","^2D",330,"^2E",652,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",377,"^2E",652],["^ ","^2D",382,"^2E",652,"^O","cljs.core/List"],["^ ","^2D",397,"^2E",652],["^ ","^2D",402,"^2E",652],["^ ","^2D",474,"^2E",652],["^ ","^2D",479,"^2E",652],["^ ","^2D",483,"^2E",652],["^ ","^2D",490,"^2E",652],["^ ","^2D",495,"^2E",652,"^O","cljs.core/List"],["^ ","^2D",510,"^2E",652],["^ ","^2D",520,"^2E",652],["^ ","^2D",525,"^2E",652],["^ ","^2D",529,"^2E",652],["^ ","^2D",539,"^2E",652],["^ ","^2D",544,"^2E",652],["^ ","^2D",548,"^2E",652],["^ ","^2D",605,"^2E",652],["^ ","^2D",610,"^2E",652,"^O","cljs.core/List"],["^ ","^2D",625,"^2E",652],["^ ","^2D",630,"^2E",652],["^ ","^2D",630,"^2E",652,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",679,"^2E",652],["^ ","^2D",679,"^2E",652,"^O","cljs.core/seq"],["^ ","^2D",693,"^2E",652],["^ ","^2D",693,"^2E",652,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",740,"^2E",652],["^ ","^2D",745,"^2E",652,"^O","cljs.core/List"],["^ ","^2D",760,"^2E",652],["^ ","^2D",765,"^2E",652],["^ ","^2D",845,"^2E",652],["^ ","^2D",850,"^2E",652],["^ ","^2D",854,"^2E",652],["^ ","^2D",861,"^2E",652],["^ ","^2D",866,"^2E",652,"^O","cljs.core/List"],["^ ","^2D",881,"^2E",652],["^ ","^2D",886,"^2E",652],["^ ","^2D",987,"^2E",652],["^ ","^2D",992,"^2E",652],["^ ","^2D",996,"^2E",652],["^ ","^2D",1006,"^2E",652],["^ ","^2D",1011,"^2E",652],["^ ","^2D",1015,"^2E",652],["^ ","^2D",0,"^2E",655],["^ ","^2D",0,"^2E",655],["^ ","^2D",7,"^2E",655,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",56,"^2E",655],["^ ","^2D",56,"^2E",655,"^O","cljs.core/seq"],["^ ","^2D",70,"^2E",655],["^ ","^2D",70,"^2E",655,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",124,"^2E",655],["^ ","^2D",129,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",144,"^2E",655],["^ ","^2D",149,"^2E",655],["^ ","^2D",202,"^2E",655],["^ ","^2D",207,"^2E",655],["^ ","^2D",211,"^2E",655],["^ ","^2D",218,"^2E",655],["^ ","^2D",223,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",238,"^2E",655],["^ ","^2D",252,"^2E",655],["^ ","^2D",257,"^2E",655],["^ ","^2D",261,"^2E",655],["^ ","^2D",318,"^2E",655],["^ ","^2D",323,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",338,"^2E",655],["^ ","^2D",343,"^2E",655],["^ ","^2D",343,"^2E",655,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",392,"^2E",655],["^ ","^2D",392,"^2E",655,"^O","cljs.core/seq"],["^ ","^2D",406,"^2E",655],["^ ","^2D",406,"^2E",655,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",460,"^2E",655],["^ ","^2D",465,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",480,"^2E",655],["^ ","^2D",485,"^2E",655],["^ ","^2D",567,"^2E",655],["^ ","^2D",572,"^2E",655],["^ ","^2D",576,"^2E",655],["^ ","^2D",583,"^2E",655],["^ ","^2D",588,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",603,"^2E",655],["^ ","^2D",608,"^2E",655],["^ ","^2D",608,"^2E",655,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",657,"^2E",655],["^ ","^2D",657,"^2E",655,"^O","cljs.core/seq"],["^ ","^2D",671,"^2E",655],["^ ","^2D",671,"^2E",655,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",718,"^2E",655],["^ ","^2D",723,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",738,"^2E",655],["^ ","^2D",743,"^2E",655],["^ ","^2D",815,"^2E",655],["^ ","^2D",820,"^2E",655],["^ ","^2D",824,"^2E",655],["^ ","^2D",831,"^2E",655],["^ ","^2D",836,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",851,"^2E",655],["^ ","^2D",861,"^2E",655],["^ ","^2D",866,"^2E",655],["^ ","^2D",870,"^2E",655],["^ ","^2D",880,"^2E",655],["^ ","^2D",885,"^2E",655],["^ ","^2D",889,"^2E",655],["^ ","^2D",1028,"^2E",655],["^ ","^2D",1033,"^2E",655],["^ ","^2D",1037,"^2E",655],["^ ","^2D",1044,"^2E",655],["^ ","^2D",1049,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",1064,"^2E",655],["^ ","^2D",1069,"^2E",655],["^ ","^2D",1069,"^2E",655,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1118,"^2E",655],["^ ","^2D",1118,"^2E",655,"^O","cljs.core/seq"],["^ ","^2D",1132,"^2E",655],["^ ","^2D",1132,"^2E",655,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1186,"^2E",655],["^ ","^2D",1191,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",1206,"^2E",655],["^ ","^2D",1211,"^2E",655],["^ ","^2D",1267,"^2E",655],["^ ","^2D",1272,"^2E",655],["^ ","^2D",1276,"^2E",655],["^ ","^2D",1283,"^2E",655],["^ ","^2D",1288,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",1303,"^2E",655],["^ ","^2D",1308,"^2E",655],["^ ","^2D",1308,"^2E",655,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1357,"^2E",655],["^ ","^2D",1357,"^2E",655,"^O","cljs.core/seq"],["^ ","^2D",1371,"^2E",655],["^ ","^2D",1371,"^2E",655,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1425,"^2E",655],["^ ","^2D",1430,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",1445,"^2E",655],["^ ","^2D",1450,"^2E",655],["^ ","^2D",1503,"^2E",655],["^ ","^2D",1508,"^2E",655],["^ ","^2D",1512,"^2E",655],["^ ","^2D",1519,"^2E",655],["^ ","^2D",1524,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",1539,"^2E",655],["^ ","^2D",1549,"^2E",655],["^ ","^2D",1554,"^2E",655],["^ ","^2D",1558,"^2E",655],["^ ","^2D",1615,"^2E",655],["^ ","^2D",1620,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",1635,"^2E",655],["^ ","^2D",1640,"^2E",655],["^ ","^2D",1757,"^2E",655],["^ ","^2D",1762,"^2E",655],["^ ","^2D",1766,"^2E",655],["^ ","^2D",1773,"^2E",655],["^ ","^2D",1778,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",1793,"^2E",655],["^ ","^2D",1798,"^2E",655],["^ ","^2D",1919,"^2E",655],["^ ","^2D",1924,"^2E",655],["^ ","^2D",1928,"^2E",655],["^ ","^2D",1943,"^2E",655],["^ ","^2D",1948,"^2E",655],["^ ","^2D",1952,"^2E",655],["^ ","^2D",2009,"^2E",655],["^ ","^2D",2014,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",2029,"^2E",655],["^ ","^2D",2039,"^2E",655],["^ ","^2D",2044,"^2E",655],["^ ","^2D",2048,"^2E",655],["^ ","^2D",2063,"^2E",655],["^ ","^2D",2068,"^2E",655],["^ ","^2D",2072,"^2E",655],["^ ","^2D",2079,"^2E",655],["^ ","^2D",2084,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",2099,"^2E",655],["^ ","^2D",2104,"^2E",655],["^ ","^2D",2104,"^2E",655,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2153,"^2E",655],["^ ","^2D",2153,"^2E",655,"^O","cljs.core/seq"],["^ ","^2D",2167,"^2E",655],["^ ","^2D",2167,"^2E",655,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2221,"^2E",655],["^ ","^2D",2226,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",2241,"^2E",655],["^ ","^2D",2246,"^2E",655],["^ ","^2D",2302,"^2E",655],["^ ","^2D",2307,"^2E",655],["^ ","^2D",2311,"^2E",655],["^ ","^2D",2318,"^2E",655],["^ ","^2D",2323,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",2338,"^2E",655],["^ ","^2D",2343,"^2E",655],["^ ","^2D",2343,"^2E",655,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2392,"^2E",655],["^ ","^2D",2392,"^2E",655,"^O","cljs.core/seq"],["^ ","^2D",2406,"^2E",655],["^ ","^2D",2406,"^2E",655,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2460,"^2E",655],["^ ","^2D",2465,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",2480,"^2E",655],["^ ","^2D",2485,"^2E",655],["^ ","^2D",2538,"^2E",655],["^ ","^2D",2543,"^2E",655],["^ ","^2D",2547,"^2E",655],["^ ","^2D",2554,"^2E",655],["^ ","^2D",2559,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",2574,"^2E",655],["^ ","^2D",2584,"^2E",655],["^ ","^2D",2589,"^2E",655],["^ ","^2D",2593,"^2E",655],["^ ","^2D",2650,"^2E",655],["^ ","^2D",2655,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",2670,"^2E",655],["^ ","^2D",2675,"^2E",655],["^ ","^2D",2792,"^2E",655],["^ ","^2D",2797,"^2E",655],["^ ","^2D",2801,"^2E",655],["^ ","^2D",2808,"^2E",655],["^ ","^2D",2813,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",2828,"^2E",655],["^ ","^2D",2833,"^2E",655],["^ ","^2D",2954,"^2E",655],["^ ","^2D",2959,"^2E",655],["^ ","^2D",2963,"^2E",655],["^ ","^2D",2970,"^2E",655],["^ ","^2D",2975,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",2990,"^2E",655],["^ ","^2D",2995,"^2E",655],["^ ","^2D",3115,"^2E",655],["^ ","^2D",3120,"^2E",655],["^ ","^2D",3124,"^2E",655],["^ ","^2D",3139,"^2E",655],["^ ","^2D",3144,"^2E",655],["^ ","^2D",3148,"^2E",655],["^ ","^2D",3205,"^2E",655],["^ ","^2D",3210,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",3225,"^2E",655],["^ ","^2D",3243,"^2E",655],["^ ","^2D",3248,"^2E",655],["^ ","^2D",3252,"^2E",655],["^ ","^2D",3267,"^2E",655],["^ ","^2D",3272,"^2E",655],["^ ","^2D",3276,"^2E",655],["^ ","^2D",3283,"^2E",655],["^ ","^2D",3288,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",3303,"^2E",655],["^ ","^2D",3308,"^2E",655],["^ ","^2D",3308,"^2E",655,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3357,"^2E",655],["^ ","^2D",3357,"^2E",655,"^O","cljs.core/seq"],["^ ","^2D",3371,"^2E",655],["^ ","^2D",3371,"^2E",655,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",3425,"^2E",655],["^ ","^2D",3430,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",3445,"^2E",655],["^ ","^2D",3450,"^2E",655],["^ ","^2D",3506,"^2E",655],["^ ","^2D",3511,"^2E",655],["^ ","^2D",3515,"^2E",655],["^ ","^2D",3522,"^2E",655],["^ ","^2D",3527,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",3542,"^2E",655],["^ ","^2D",3547,"^2E",655],["^ ","^2D",3547,"^2E",655,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3596,"^2E",655],["^ ","^2D",3596,"^2E",655,"^O","cljs.core/seq"],["^ ","^2D",3610,"^2E",655],["^ ","^2D",3610,"^2E",655,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",3657,"^2E",655],["^ ","^2D",3662,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",3677,"^2E",655],["^ ","^2D",3682,"^2E",655],["^ ","^2D",3771,"^2E",655],["^ ","^2D",3776,"^2E",655],["^ ","^2D",3780,"^2E",655],["^ ","^2D",3787,"^2E",655],["^ ","^2D",3792,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",3807,"^2E",655],["^ ","^2D",3812,"^2E",655],["^ ","^2D",3812,"^2E",655,"^O","cljs.core/with-meta"],["^ ","^2D",3832,"^2E",655],["^ ","^2D",3832,"^2E",655,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3881,"^2E",655],["^ ","^2D",3881,"^2E",655,"^O","cljs.core/seq"],["^ ","^2D",3895,"^2E",655],["^ ","^2D",3895,"^2E",655,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",3942,"^2E",655],["^ ","^2D",3947,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",3962,"^2E",655],["^ ","^2D",3967,"^2E",655],["^ ","^2D",4039,"^2E",655],["^ ","^2D",4044,"^2E",655],["^ ","^2D",4048,"^2E",655],["^ ","^2D",4055,"^2E",655],["^ ","^2D",4060,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",4075,"^2E",655],["^ ","^2D",4085,"^2E",655],["^ ","^2D",4090,"^2E",655],["^ ","^2D",4094,"^2E",655],["^ ","^2D",4104,"^2E",655],["^ ","^2D",4104,"^2E",655,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",4150,"^2E",655,"^O","cljs.core/array-map"],["^ ","^2D",4170,"^2E",655],["^ ","^2D",4170,"^2E",655,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4219,"^2E",655],["^ ","^2D",4219,"^2E",655,"^O","cljs.core/seq"],["^ ","^2D",4233,"^2E",655],["^ ","^2D",4233,"^2E",655,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",4287,"^2E",655],["^ ","^2D",4292,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",4307,"^2E",655],["^ ","^2D",4312,"^2E",655],["^ ","^2D",4366,"^2E",655],["^ ","^2D",4371,"^2E",655],["^ ","^2D",4375,"^2E",655],["^ ","^2D",4382,"^2E",655],["^ ","^2D",4387,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",4402,"^2E",655],["^ ","^2D",4407,"^2E",655],["^ ","^2D",4439,"^2E",655],["^ ","^2D",4444,"^2E",655],["^ ","^2D",4448,"^2E",655],["^ ","^2D",4505,"^2E",655],["^ ","^2D",4510,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",4525,"^2E",655],["^ ","^2D",4530,"^2E",655],["^ ","^2D",4582,"^2E",655],["^ ","^2D",4587,"^2E",655],["^ ","^2D",4591,"^2E",655],["^ ","^2D",4598,"^2E",655],["^ ","^2D",4603,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",4618,"^2E",655],["^ ","^2D",4623,"^2E",655],["^ ","^2D",4627,"^2E",655],["^ ","^2D",4632,"^2E",655],["^ ","^2D",4636,"^2E",655],["^ ","^2D",4643,"^2E",655],["^ ","^2D",4648,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",4663,"^2E",655],["^ ","^2D",4668,"^2E",655],["^ ","^2D",4725,"^2E",655],["^ ","^2D",4730,"^2E",655],["^ ","^2D",4734,"^2E",655],["^ ","^2D",4741,"^2E",655],["^ ","^2D",4746,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",4761,"^2E",655],["^ ","^2D",4766,"^2E",655],["^ ","^2D",4769,"^2E",655],["^ ","^2D",4774,"^2E",655],["^ ","^2D",4778,"^2E",655],["^ ","^2D",4785,"^2E",655],["^ ","^2D",4790,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",4805,"^2E",655],["^ ","^2D",4810,"^2E",655],["^ ","^2D",4871,"^2E",655],["^ ","^2D",4876,"^2E",655],["^ ","^2D",4880,"^2E",655],["^ ","^2D",4887,"^2E",655],["^ ","^2D",4892,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",4907,"^2E",655],["^ ","^2D",4912,"^2E",655],["^ ","^2D",4916,"^2E",655],["^ ","^2D",4921,"^2E",655],["^ ","^2D",4925,"^2E",655],["^ ","^2D",4932,"^2E",655],["^ ","^2D",4937,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",4952,"^2E",655],["^ ","^2D",4957,"^2E",655],["^ ","^2D",5022,"^2E",655],["^ ","^2D",5027,"^2E",655],["^ ","^2D",5031,"^2E",655],["^ ","^2D",5038,"^2E",655],["^ ","^2D",5043,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",5058,"^2E",655],["^ ","^2D",5063,"^2E",655],["^ ","^2D",5066,"^2E",655],["^ ","^2D",5071,"^2E",655],["^ ","^2D",5075,"^2E",655],["^ ","^2D",5082,"^2E",655],["^ ","^2D",5087,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",5102,"^2E",655],["^ ","^2D",5107,"^2E",655],["^ ","^2D",5159,"^2E",655],["^ ","^2D",5164,"^2E",655],["^ ","^2D",5168,"^2E",655],["^ ","^2D",5175,"^2E",655],["^ ","^2D",5180,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",5195,"^2E",655],["^ ","^2D",5200,"^2E",655],["^ ","^2D",5300,"^2E",655],["^ ","^2D",5305,"^2E",655],["^ ","^2D",5309,"^2E",655],["^ ","^2D",5326,"^2E",655],["^ ","^2D",5331,"^2E",655],["^ ","^2D",5335,"^2E",655],["^ ","^2D",5345,"^2E",655],["^ ","^2D",5350,"^2E",655],["^ ","^2D",5354,"^2E",655],["^ ","^2D",5411,"^2E",655],["^ ","^2D",5416,"^2E",655,"^O","cljs.core/List"],["^ ","^2D",5431,"^2E",655],["^ ","^2D",5436,"^2E",655],["^ ","^2D",5441,"^2E",655],["^ ","^2D",5446,"^2E",655],["^ ","^2D",5450,"^2E",655],["^ ","^2D",5465,"^2E",655],["^ ","^2D",5470,"^2E",655],["^ ","^2D",5474,"^2E",655],["^ ","^2D",99,"^2E",659],["^ ","^2D",104,"^2E",659,"^O","cljs.core/List"],["^ ","^2D",119,"^2E",659],["^ ","^2D",124,"^2E",659],["^ ","^2D",124,"^2E",659,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",173,"^2E",659],["^ ","^2D",173,"^2E",659,"^O","cljs.core/seq"],["^ ","^2D",187,"^2E",659],["^ ","^2D",187,"^2E",659,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",241,"^2E",659],["^ ","^2D",246,"^2E",659,"^O","cljs.core/List"],["^ ","^2D",261,"^2E",659],["^ ","^2D",266,"^2E",659],["^ ","^2D",348,"^2E",659],["^ ","^2D",353,"^2E",659],["^ ","^2D",357,"^2E",659],["^ ","^2D",364,"^2E",659],["^ ","^2D",369,"^2E",659,"^O","cljs.core/List"],["^ ","^2D",384,"^2E",659],["^ ","^2D",394,"^2E",659],["^ ","^2D",399,"^2E",659],["^ ","^2D",403,"^2E",659],["^ ","^2D",110,"^2E",668],["^ ","^2D",115,"^2E",668],["^ ","^2D",119,"^2E",668],["^ ","^2D",126,"^2E",668],["^ ","^2D",131,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",146,"^2E",668],["^ ","^2D",151,"^2E",668],["^ ","^2D",151,"^2E",668,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",200,"^2E",668],["^ ","^2D",200,"^2E",668,"^O","cljs.core/seq"],["^ ","^2D",214,"^2E",668],["^ ","^2D",214,"^2E",668,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",268,"^2E",668],["^ ","^2D",273,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",288,"^2E",668],["^ ","^2D",293,"^2E",668],["^ ","^2D",375,"^2E",668],["^ ","^2D",380,"^2E",668],["^ ","^2D",384,"^2E",668],["^ ","^2D",391,"^2E",668],["^ ","^2D",396,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",411,"^2E",668],["^ ","^2D",416,"^2E",668],["^ ","^2D",416,"^2E",668,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",465,"^2E",668],["^ ","^2D",465,"^2E",668,"^O","cljs.core/seq"],["^ ","^2D",479,"^2E",668],["^ ","^2D",479,"^2E",668,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",533,"^2E",668],["^ ","^2D",538,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",553,"^2E",668],["^ ","^2D",558,"^2E",668],["^ ","^2D",609,"^2E",668],["^ ","^2D",614,"^2E",668],["^ ","^2D",618,"^2E",668],["^ ","^2D",625,"^2E",668],["^ ","^2D",630,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",645,"^2E",668],["^ ","^2D",655,"^2E",668],["^ ","^2D",660,"^2E",668],["^ ","^2D",664,"^2E",668],["^ ","^2D",721,"^2E",668],["^ ","^2D",726,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",741,"^2E",668],["^ ","^2D",746,"^2E",668],["^ ","^2D",815,"^2E",668],["^ ","^2D",820,"^2E",668],["^ ","^2D",824,"^2E",668],["^ ","^2D",839,"^2E",668],["^ ","^2D",844,"^2E",668],["^ ","^2D",848,"^2E",668],["^ ","^2D",1013,"^2E",668],["^ ","^2D",1018,"^2E",668],["^ ","^2D",1022,"^2E",668],["^ ","^2D",1029,"^2E",668],["^ ","^2D",1034,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",1049,"^2E",668],["^ ","^2D",1054,"^2E",668],["^ ","^2D",1054,"^2E",668,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1103,"^2E",668],["^ ","^2D",1103,"^2E",668,"^O","cljs.core/seq"],["^ ","^2D",1117,"^2E",668],["^ ","^2D",1117,"^2E",668,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1171,"^2E",668],["^ ","^2D",1176,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",1191,"^2E",668],["^ ","^2D",1196,"^2E",668],["^ ","^2D",1252,"^2E",668],["^ ","^2D",1257,"^2E",668],["^ ","^2D",1261,"^2E",668],["^ ","^2D",1268,"^2E",668],["^ ","^2D",1273,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",1288,"^2E",668],["^ ","^2D",1293,"^2E",668],["^ ","^2D",1293,"^2E",668,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1342,"^2E",668],["^ ","^2D",1342,"^2E",668,"^O","cljs.core/seq"],["^ ","^2D",1356,"^2E",668],["^ ","^2D",1356,"^2E",668,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",1403,"^2E",668],["^ ","^2D",1408,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",1423,"^2E",668],["^ ","^2D",1428,"^2E",668],["^ ","^2D",1510,"^2E",668],["^ ","^2D",1515,"^2E",668],["^ ","^2D",1519,"^2E",668],["^ ","^2D",1526,"^2E",668],["^ ","^2D",1531,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",1546,"^2E",668],["^ ","^2D",1556,"^2E",668],["^ ","^2D",1561,"^2E",668],["^ ","^2D",1565,"^2E",668],["^ ","^2D",1575,"^2E",668],["^ ","^2D",1580,"^2E",668],["^ ","^2D",1584,"^2E",668],["^ ","^2D",1641,"^2E",668],["^ ","^2D",1646,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",1661,"^2E",668],["^ ","^2D",1666,"^2E",668],["^ ","^2D",1671,"^2E",668],["^ ","^2D",1676,"^2E",668],["^ ","^2D",1680,"^2E",668],["^ ","^2D",1695,"^2E",668],["^ ","^2D",1700,"^2E",668],["^ ","^2D",1704,"^2E",668],["^ ","^2D",1711,"^2E",668],["^ ","^2D",1716,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",1731,"^2E",668],["^ ","^2D",1736,"^2E",668],["^ ","^2D",1736,"^2E",668,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",1785,"^2E",668],["^ ","^2D",1785,"^2E",668,"^O","cljs.core/seq"],["^ ","^2D",1799,"^2E",668],["^ ","^2D",1799,"^2E",668,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",1853,"^2E",668],["^ ","^2D",1858,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",1873,"^2E",668],["^ ","^2D",1878,"^2E",668],["^ ","^2D",1934,"^2E",668],["^ ","^2D",1939,"^2E",668],["^ ","^2D",1943,"^2E",668],["^ ","^2D",1950,"^2E",668],["^ ","^2D",1955,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",1970,"^2E",668],["^ ","^2D",1975,"^2E",668],["^ ","^2D",1975,"^2E",668,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2024,"^2E",668],["^ ","^2D",2024,"^2E",668,"^O","cljs.core/seq"],["^ ","^2D",2038,"^2E",668],["^ ","^2D",2038,"^2E",668,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",2085,"^2E",668],["^ ","^2D",2090,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",2105,"^2E",668],["^ ","^2D",2110,"^2E",668],["^ ","^2D",2198,"^2E",668],["^ ","^2D",2203,"^2E",668],["^ ","^2D",2207,"^2E",668],["^ ","^2D",2214,"^2E",668],["^ ","^2D",2219,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",2234,"^2E",668],["^ ","^2D",2244,"^2E",668],["^ ","^2D",2249,"^2E",668],["^ ","^2D",2253,"^2E",668],["^ ","^2D",2263,"^2E",668],["^ ","^2D",2268,"^2E",668],["^ ","^2D",2272,"^2E",668],["^ ","^2D",2329,"^2E",668],["^ ","^2D",2334,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",2349,"^2E",668],["^ ","^2D",2414,"^2E",668],["^ ","^2D",2419,"^2E",668],["^ ","^2D",2423,"^2E",668],["^ ","^2D",2438,"^2E",668],["^ ","^2D",2443,"^2E",668],["^ ","^2D",2447,"^2E",668],["^ ","^2D",2454,"^2E",668],["^ ","^2D",2459,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",2474,"^2E",668],["^ ","^2D",2479,"^2E",668],["^ ","^2D",2479,"^2E",668,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2528,"^2E",668],["^ ","^2D",2528,"^2E",668,"^O","cljs.core/seq"],["^ ","^2D",2542,"^2E",668],["^ ","^2D",2542,"^2E",668,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",2596,"^2E",668],["^ ","^2D",2601,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",2616,"^2E",668],["^ ","^2D",2621,"^2E",668],["^ ","^2D",2677,"^2E",668],["^ ","^2D",2682,"^2E",668],["^ ","^2D",2686,"^2E",668],["^ ","^2D",2693,"^2E",668],["^ ","^2D",2698,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",2713,"^2E",668],["^ ","^2D",2718,"^2E",668],["^ ","^2D",2718,"^2E",668,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",2767,"^2E",668],["^ ","^2D",2767,"^2E",668,"^O","cljs.core/seq"],["^ ","^2D",2781,"^2E",668],["^ ","^2D",2781,"^2E",668,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",2828,"^2E",668],["^ ","^2D",2833,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",2848,"^2E",668],["^ ","^2D",2853,"^2E",668],["^ ","^2D",2949,"^2E",668],["^ ","^2D",2954,"^2E",668],["^ ","^2D",2958,"^2E",668],["^ ","^2D",2965,"^2E",668],["^ ","^2D",2970,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",2985,"^2E",668],["^ ","^2D",2995,"^2E",668],["^ ","^2D",3000,"^2E",668],["^ ","^2D",3004,"^2E",668],["^ ","^2D",3014,"^2E",668],["^ ","^2D",3019,"^2E",668],["^ ","^2D",3023,"^2E",668],["^ ","^2D",3080,"^2E",668],["^ ","^2D",3085,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",3100,"^2E",668],["^ ","^2D",3105,"^2E",668],["^ ","^2D",3105,"^2E",668,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3154,"^2E",668],["^ ","^2D",3154,"^2E",668,"^O","cljs.core/seq"],["^ ","^2D",3168,"^2E",668],["^ ","^2D",3168,"^2E",668,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",3222,"^2E",668],["^ ","^2D",3227,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",3242,"^2E",668],["^ ","^2D",3247,"^2E",668],["^ ","^2D",3323,"^2E",668],["^ ","^2D",3328,"^2E",668],["^ ","^2D",3332,"^2E",668],["^ ","^2D",3339,"^2E",668],["^ ","^2D",3344,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",3359,"^2E",668],["^ ","^2D",3364,"^2E",668],["^ ","^2D",3364,"^2E",668,"^O","cljs.core/vec"],["^ ","^2D",3378,"^2E",668],["^ ","^2D",3378,"^2E",668,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",3427,"^2E",668],["^ ","^2D",3427,"^2E",668,"^O","cljs.core/seq"],["^ ","^2D",3441,"^2E",668],["^ ","^2D",3441,"^2E",668,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",3495,"^2E",668],["^ ","^2D",3500,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",3515,"^2E",668],["^ ","^2D",3520,"^2E",668],["^ ","^2D",3608,"^2E",668],["^ ","^2D",3613,"^2E",668],["^ ","^2D",3617,"^2E",668],["^ ","^2D",3624,"^2E",668],["^ ","^2D",3629,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",3644,"^2E",668],["^ ","^2D",3649,"^2E",668],["^ ","^2D",3741,"^2E",668],["^ ","^2D",3746,"^2E",668],["^ ","^2D",3750,"^2E",668],["^ ","^2D",3807,"^2E",668],["^ ","^2D",3812,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",3827,"^2E",668],["^ ","^2D",3832,"^2E",668],["^ ","^2D",3915,"^2E",668],["^ ","^2D",3920,"^2E",668],["^ ","^2D",3924,"^2E",668],["^ ","^2D",3940,"^2E",668],["^ ","^2D",3945,"^2E",668],["^ ","^2D",3949,"^2E",668],["^ ","^2D",4006,"^2E",668],["^ ","^2D",4011,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",4026,"^2E",668],["^ ","^2D",4031,"^2E",668],["^ ","^2D",4031,"^2E",668,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",4080,"^2E",668],["^ ","^2D",4080,"^2E",668,"^O","cljs.core/seq"],["^ ","^2D",4094,"^2E",668],["^ ","^2D",4094,"^2E",668,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",4148,"^2E",668],["^ ","^2D",4153,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",4168,"^2E",668],["^ ","^2D",4173,"^2E",668],["^ ","^2D",4250,"^2E",668],["^ ","^2D",4255,"^2E",668],["^ ","^2D",4259,"^2E",668],["^ ","^2D",4266,"^2E",668],["^ ","^2D",4271,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",4286,"^2E",668],["^ ","^2D",4291,"^2E",668],["^ ","^2D",4383,"^2E",668],["^ ","^2D",4388,"^2E",668],["^ ","^2D",4392,"^2E",668],["^ ","^2D",4449,"^2E",668],["^ ","^2D",4454,"^2E",668,"^O","cljs.core/List"],["^ ","^2D",4469,"^2E",668],["^ ","^2D",4534,"^2E",668],["^ ","^2D",4539,"^2E",668],["^ ","^2D",4543,"^2E",668],["^ ","^2D",4558,"^2E",668],["^ ","^2D",4563,"^2E",668],["^ ","^2D",4567,"^2E",668],["^ ","^2D",4582,"^2E",668],["^ ","^2D",4587,"^2E",668],["^ ","^2D",4591,"^2E",668],["^ ","^2D",4606,"^2E",668],["^ ","^2D",4611,"^2E",668],["^ ","^2D",4615,"^2E",668]],"^2T",[["^ ","^2D",4,"^2E",637,"^O","docstring"]],"^4I",[["^ ","^2D",16,"^2E",637],["^ ","^2D",62,"^2E",637],["^ ","^2D",85,"^2E",637]],"^2C",[["^ ","^2D",18,"^2E",637]],"^2M",[["^ ","^2D",25,"^2E",637]],"^2N",[["^ ","^2D",25,"^2E",637,"^O","cljs.core/first"]],"^5;",[["^ ","^2D",41,"^2E",637,"^O","forms"]]],"~i503",["^ ","^2X",[["^ ","^2D",62,"^2E",637]],"^30",[["^ ","^2D",62,"^2E",637,"^O","cljs.core/first"]],"^2F",[["^ ","^2D",78,"^2E",637,"^O","forms"]]],"~i504",["^ ","^2T",[["^ ","^2D",4,"^2E",638,"^O","forms"]],"^4I",[["^ ","^2D",16,"^2E",638],["^ ","^2D",33,"^2E",638,"^O","G__38712"],["^ ","^2D",0,"^2E",639],["^ ","^2D",0,"^2E",639],["^ ","^2D",0,"^2E",640],["^ ","^2D",22,"^2E",640,"^O","G__38712"],["^ ","^2D",0,"^2E",642,"^O","G__38712"]],"^38",[["^ ","^2D",44,"^2E",638,"^O","forms"]]],"~i505",["^ ","^2X",[["^ ","^2D",20,"^2E",639,"^O","docstring"]],"^2K",[["^ ","^2D",7,"^2E",640,"^O","cljs.core/rest"]]],"~i506",["^ ","^35",[["^ ","^2D",4,"^2E",647,"^O","dt"]],"^2P",[["^ ","^2D",4,"^2E",648,"^O","statics"]],"^4Y",[["^ ","^2D",17,"^2E",645]],"^48",[["^ ","^2D",17,"^2E",645,"^O","fulcro.client.primitives/collect-statics"]],"^3F",[["^ ","^2D",58,"^2E",645,"^O","forms"]]],"~i507",["^ ","^2T",[["^ ","^2D",4,"^2E",649,"^O","_"]],"^4I",[["^ ","^2D",8,"^2E",649]],"^3H",[["^ ","^2D",8,"^2E",649,"^O","fulcro.client.primitives/validate-statics"]],"^2Q",[["^ ","^2D",50,"^2E",649,"^O","dt"]]],"~i508",["^ ","^2T",[["^ ","^2D",4,"^2E",650,"^O","fqn"]],"^4I",[["^ ","^2D",10,"^2E",650]],"^4Y",[["^ ","^2D",28,"^2E",650,"^O","env"]]],"~i509",["^ ","^2X",[["^ ","^2D",33,"^2E",650]],"^30",[["^ ","^2D",33,"^2E",650,"^O","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2"]],"^2H",[["^ ","^2D",80,"^2E",650],["^ ","^2D",125,"^2E",650],["^ ","^2D",125,"^2E",650],["^ ","^2D",208,"^2E",650],["^ ","^2D",208,"^2E",650]],"^3A",[["^ ","^2D",286,"^2E",650,"^O","env"]],"^4B",[["^ ","^2D",303,"^2E",650]],"^2Z",[["^ ","^2D",348,"^2E",650,"^O","name"]]],"~i510",["^ ","^2X",[["^ ","^2D",365,"^2E",650,"^O","name"]]],"~i511",["^ ","^2T",[["^ ","^2D",4,"^2E",651,"^O","ctor"]],"^38",[["^ ","^2D",275,"^2E",651]],"^2F",[["^ ","^2D",275,"^2E",651,"^O","cljs.core/with-meta"]],"^5C",[["^ ","^2D",295,"^2E",651,"^O","name"]]],"~i512",["^ ","^2H",[["^ ","^2D",300,"^2E",651],["^ ","^2D",403,"^2E",651],["^ ","^2D",446,"^2E",651],["^ ","^2D",501,"^2E",651],["^ ","^2D",584,"^2E",651],["^ ","^2D",599,"^2E",651]],"^3W",[["^ ","^2D",300,"^2E",651,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]]],"~i513",["^ ","^2K",[["^ ","^2D",629,"^2E",651]],"^2L",[["^ ","^2D",629,"^2E",651,"^O","cljs.core/meta"]],"^2Q",[["^ ","^2D",644,"^2E",651,"^O","name"]]],"~i514",["^ ","^2K",[["^ ","^2D",650,"^2E",651],["^ ","^2D",679,"^2E",651],["^ ","^2D",679,"^2E",651],["^ ","^2D",722,"^2E",651],["^ ","^2D",791,"^2E",651]],"^2Q",[["^ ","^2D",668,"^2E",651,"^O","docstring"]]],"~i515",["^ ","^2R",[["^ ","^2D",773,"^2E",651,"^O","docstring"]]],"~i523",["^ ","^2T",[["^ ","^2D",4,"^2E",652,"^O","set-react-proto!"]],"^3F",[["^ ","^2D",515,"^2E",652,"^O","name"]]],"~i525",["^ ","^2T",[["^ ","^2D",4,"^2E",653,"^O","ctor"]],"^4I",[["^ ","^2D",15,"^2E",653],["^ ","^2D",139,"^2E",653],["^ ","^2D",139,"^2E",653,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",188,"^2E",653],["^ ","^2D",188,"^2E",653,"^O","cljs.core/seq"],["^ ","^2D",202,"^2E",653],["^ ","^2D",202,"^2E",653,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",256,"^2E",653],["^ ","^2D",261,"^2E",653,"^O","cljs.core/List"],["^ ","^2D",276,"^2E",653],["^ ","^2D",281,"^2E",653],["^ ","^2D",369,"^2E",653],["^ ","^2D",374,"^2E",653],["^ ","^2D",378,"^2E",653],["^ ","^2D",385,"^2E",653],["^ ","^2D",390,"^2E",653,"^O","cljs.core/List"],["^ ","^2D",405,"^2E",653],["^ ","^2D",410,"^2E",653],["^ ","^2D",410,"^2E",653,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",459,"^2E",653],["^ ","^2D",459,"^2E",653,"^O","cljs.core/seq"],["^ ","^2D",473,"^2E",653],["^ ","^2D",473,"^2E",653,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",520,"^2E",653],["^ ","^2D",525,"^2E",653,"^O","cljs.core/List"],["^ ","^2D",540,"^2E",653],["^ ","^2D",545,"^2E",653],["^ ","^2D",625,"^2E",653],["^ ","^2D",630,"^2E",653],["^ ","^2D",634,"^2E",653],["^ ","^2D",641,"^2E",653],["^ ","^2D",646,"^2E",653,"^O","cljs.core/List"],["^ ","^2D",661,"^2E",653],["^ ","^2D",671,"^2E",653],["^ ","^2D",676,"^2E",653],["^ ","^2D",680,"^2E",653],["^ ","^2D",690,"^2E",653],["^ ","^2D",695,"^2E",653],["^ ","^2D",699,"^2E",653],["^ ","^2D",756,"^2E",653],["^ ","^2D",761,"^2E",653,"^O","cljs.core/List"],["^ ","^2D",776,"^2E",653],["^ ","^2D",786,"^2E",653],["^ ","^2D",791,"^2E",653],["^ ","^2D",795,"^2E",653],["^ ","^2D",802,"^2E",653],["^ ","^2D",807,"^2E",653,"^O","cljs.core/List"],["^ ","^2D",822,"^2E",653],["^ ","^2D",849,"^2E",653],["^ ","^2D",854,"^2E",653],["^ ","^2D",858,"^2E",653],["^ ","^2D",873,"^2E",653],["^ ","^2D",873,"^2E",653,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",922,"^2E",653],["^ ","^2D",922,"^2E",653,"^O","cljs.core/seq"],["^ ","^2D",936,"^2E",653],["^ ","^2D",936,"^2E",653,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",990,"^2E",653],["^ ","^2D",995,"^2E",653,"^O","cljs.core/List"],["^ ","^2D",1010,"^2E",653],["^ ","^2D",1015,"^2E",653],["^ ","^2D",1068,"^2E",653],["^ ","^2D",1073,"^2E",653],["^ ","^2D",1077,"^2E",653],["^ ","^2D",1084,"^2E",653],["^ ","^2D",1089,"^2E",653,"^O","cljs.core/List"],["^ ","^2D",1104,"^2E",653],["^ ","^2D",1114,"^2E",653],["^ ","^2D",1119,"^2E",653],["^ ","^2D",1123,"^2E",653],["^ ","^2D",1180,"^2E",653],["^ ","^2D",1185,"^2E",653,"^O","cljs.core/List"],["^ ","^2D",1200,"^2E",653],["^ ","^2D",1227,"^2E",653],["^ ","^2D",1232,"^2E",653],["^ ","^2D",1236,"^2E",653]],"^4Y",[["^ ","^2D",33,"^2E",653],["^ ","^2D",33,"^2E",653],["^ ","^2D",116,"^2E",653]],"^38",[["^ ","^2D",131,"^2E",653,"^O","name"]],"^2L",[["^ ","^2D",116,"^2E",653,"^O","cljs.core/meta"]]],"~i526",["^ ","^4B",[["^ ","^2D",666,"^2E",653,"^O","name"]]],"~i527",["^ ","^2C",[["^ ","^2D",781,"^2E",653,"^O","ctor"]]],"~i528",["^ ","^2C",[["^ ","^2D",827,"^2E",653,"^O","set-react-proto!"]]],"~i530",["^ ","^2C",[["^ ","^2D",1109,"^2E",653,"^O","ctor"]]],"~i531",["^ ","^2C",[["^ ","^2D",1205,"^2E",653,"^O","set-react-proto!"]]],"~i532",["^ ","^2T",[["^ ","^2D",4,"^2E",654,"^O","display-name"]],"^4I",[["^ ","^2D",19,"^2E",654],["^ ","^2D",319,"^2E",654]],"^4Y",[["^ ","^2D",37,"^2E",654,"^O","env"]]],"~i533",["^ ","^2X",[["^ ","^2D",42,"^2E",654],["^ ","^2D",255,"^2E",654]],"^3E",[["^ ","^2D",87,"^2E",654],["^ ","^2D",87,"^2E",654],["^ ","^2D",170,"^2E",654],["^ ","^2D",170,"^2E",654]],"^3W",[["^ ","^2D",248,"^2E",654,"^O","env"]],"^4J",[["^ ","^2D",303,"^2E",654,"^O","name"]]],"~i536",["^ ","^2T",[["^ ","^2D",243,"^2E",655,"^O","ctor"]]],"~i537",["^ ","^2C",[["^ ","^2D",856,"^2E",655,"^O","name"]],"^3A",[["^ ","^2D",946,"^2E",655]],"^2M",[["^ ","^2D",946,"^2E",655,"^O","fulcro.client.primitives/reshape"]],"^3Z",[["^ ","^2D",979,"^2E",655,"^O","dt"]],"^4E",[["^ ","^2D",982,"^2E",655,"^O","fulcro.client.primitives/reshape-map"]]],"~i538",["^ ","^3D",[["^ ","^2D",1544,"^2E",655,"^O","name"]],"^4<",[["^ ","^2D",2034,"^2E",655,"^O","name"]]],"~i539",["^ ","^3D",[["^ ","^2D",2579,"^2E",655,"^O","name"]],"^61",[["^ ","^2D",3230,"^2E",655,"^O","display-name"]]],"~i540",["^ ","^7U",[["^ ","^2D",4080,"^2E",655,"^O","name"]]],"~i541",["^ ","^3S",[["^ ","^2D",5481,"^2E",655],["^ ","^2D",5525,"^2E",655],["^ ","^2D",18,"^2E",656,"^O","p1__38684#"],["^ ","^2D",0,"^2E",657]],"^2G",[["^ ","^2D",5481,"^2E",655,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^2O",[["^ ","^2D",0,"^2E",657],["^ ","^2D",28,"^2E",657,"^O","p1__38684#"]],"^35",[["^ ","^2D",7,"^2E",657,"^O","field-set!"]],"^2X",[["^ ","^2D",23,"^2E",657,"^O","name"]],"^2H",[["^ ","^2D",1,"^2E",659],["^ ","^2D",1,"^2E",659]],"^5C",[["^ ","^2D",89,"^2E",659,"^O","statics"]]],"~i542",["^ ","^3D",[["^ ","^2D",389,"^2E",659,"^O","name"]]],"~i543",["^ ","^44",[["^ ","^2D",460,"^2E",659],["^ ","^2D",505,"^2E",659],["^ ","^2D",18,"^2E",660,"^O","p1__38685#"],["^ ","^2D",0,"^2E",661]],"^2J",[["^ ","^2D",460,"^2E",659,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^3D",[["^ ","^2D",0,"^2E",661],["^ ","^2D",4,"^2E",661,"^O","G__38738"],["^ ","^2D",15,"^2E",661,"^O","p1__38685#"],["^ ","^2D",0,"^2E",662],["^ ","^2D",0,"^2E",662],["^ ","^2D",0,"^2E",665,"^O","G__38738"]]],"~i544",["^ ","^3Y",[["^ ","^2D",3,"^2E",662],["^ ","^2D",4,"^2E",662,"^O","p1__38685#"],["^ ","^2D",32,"^2E",662,"^O","cljs.core/Symbol"]],"^3E",[["^ ","^2D",0,"^2E",663],["^ ","^2D",57,"^2E",663,"^O","G__38738"],["^ ","^2D",82,"^2E",663],["^ ","^2D",139,"^2E",663]],"^38",[["^ ","^2D",7,"^2E",663,"^O","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4"]],"^2Q",[["^ ","^2D",66,"^2E",663,"^O","cljs.core/assoc"]],"^3[",[["^ ","^2D",1,"^2E",668],["^ ","^2D",1,"^2E",668]],"^34",[["^ ","^2D",92,"^2E",668,"^O","statics"]]],"~i545",["^ ","^3=",[["^ ","^2D",650,"^2E",668,"^O","name"]],"^4>",[["^ ","^2D",905,"^2E",668],["^ ","^2D",905,"^2E",668]],"^2V",[["^ ","^2D",996,"^2E",668,"^O","statics"]]],"~i546",["^ ","^3E",[["^ ","^2D",1551,"^2E",668,"^O","name"]]],"~i547",["^ ","^2H",[["^ ","^2D",2239,"^2E",668,"^O","name"]],"^4>",[["^ ","^2D",2354,"^2E",668]],"^5;",[["^ ","^2D",2399,"^2E",668,"^O","fqn"]]],"~i548",["^ ","^2M",[["^ ","^2D",2990,"^2E",668,"^O","name"]]],"~i550",["^ ","^2L",[["^ ","^2D",4474,"^2E",668]],"^2Q",[["^ ","^2D",4519,"^2E",668,"^O","fqn"]]],"~i567",["^ ","~i0",[["^ ","^2D",0,"^2E",673]],"~i5",[["^ ","^2D",0,"^2E",673,"^O","fulcro.client.primitives/roots"]],"^2T",[["^ ","^2D",33,"^2E",673],["^ ","^2D",78,"^2E",673]],"^3S",[["^ ","^2D",33,"^2E",673,"^O","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i568",["^ ","~i0",[["^ ","^2D",0,"^2E",674],["^ ","^2D",43,"^2E",674]],"^2P",[["^ ","^2D",0,"^2E",674,"^O","fulcro.client.primitives/*raf*"]]],"~i569",["^ ","~i0",[["^ ","^2D",0,"^2E",675],["^ ","^2D",50,"^2E",675]],"^2P",[["^ ","^2D",0,"^2E",675,"^O","fulcro.client.primitives/*reconciler*"]]],"~i570",["^ ","~i0",[["^ ","^2D",0,"^2E",676],["^ ","^2D",46,"^2E",676]],"^2P",[["^ ","^2D",0,"^2E",676,"^O","fulcro.client.primitives/*parent*"]]],"~i571",["^ ","~i0",[["^ ","^2D",0,"^2E",677],["^ ","^2D",54,"^2E",677]],"^2P",[["^ ","^2D",0,"^2E",677,"^O","fulcro.client.primitives/*blindly-render*"]]],"~i572",["^ ","~i0",[["^ ","^2D",0,"^2E",678],["^ ","^2D",46,"^2E",678]],"^2P",[["^ ","^2D",0,"^2E",678,"^O","fulcro.client.primitives/*shared*"]]],"~i573",["^ ","~i0",[["^ ","^2D",0,"^2E",679],["^ ","^2D",50,"^2E",679]],"^2P",[["^ ","^2D",0,"^2E",679,"^O","fulcro.client.primitives/*instrument*"]]],"~i574",["^ ","~i0",[["^ ","^2D",0,"^2E",680],["^ ","^2D",45,"^2E",680]],"^2P",[["^ ","^2D",0,"^2E",680,"^O","fulcro.client.primitives/*depth*"]]],"~i589",["^ ","~i3",[["^ ","^2D",0,"^2E",681],["^ ","^2D",45,"^2E",681],["^ ","^2D",0,"^2E",682]],"^2I",[["^ ","^2D",0,"^2E",681,"^O","fulcro.client.primitives/compute-react-key"]],"^3H",[["^ ","^2D",98,"^2E",681,"^O","cl"]],"^4Y",[["^ ","^2D",101,"^2E",681,"^O","props"]]],"~i590",["^ ","~i5",[["^ ","^2D",0,"^2E",682],["^ ","^2D",4,"^2E",682,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",683],["^ ","^2D",0,"^2E",683],["^ ","^2D",20,"^2E",683,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",684],["^ ","^2D",9,"^2E",684,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",685]],"^44",[["^ ","^2D",4,"^2E",684,"^O","rk"]],"^3K",[["^ ","^2D",25,"^2E",682],["^ ","^2D",25,"^2E",682]],"^3H",[["^ ","^2D",118,"^2E",682,"^O","props"]]],"~i591",["^ ","~i7",[["^ ","^2D",0,"^2E",685,"^O","rk"]]],"~i592",["^ ","~i7",[["^ ","^2D",0,"^2E",687],["^ ","^2D",4,"^2E",687,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",688],["^ ","^2D",0,"^2E",688],["^ ","^2D",20,"^2E",688,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",689],["^ ","^2D",10,"^2E",689,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",690]],"^37",[["^ ","^2D",4,"^2E",689,"^O","idx"]],"^4X",[["^ ","^2D",29,"^2E",687],["^ ","^2D",29,"^2E",687],["^ ","^2D",171,"^2E",687]],"^3=",[["^ ","^2D",186,"^2E",687,"^O","props"]],"^2X",[["^ ","^2D",171,"^2E",687,"^O","cljs.core/meta"]]],"~i593",["^ ","~i9",[["^ ","^2D",0,"^2E",690],["^ ","^2D",61,"^2E",690]],"^44",[["^ ","^2D",52,"^2E",690]],"^3K",[["^ ","^2D",52,"^2E",690,"^O","cl"]],"^30",[["^ ","^2D",109,"^2E",690,"^O","idx"]]],"~i594",["^ ","~i9",[["^ ","^2D",0,"^2E",692,"^O","js/undefined"]]],"~i597",["^ ","~i0",[["^ ","^2D",0,"^2E",696],["^ ","^2D",44,"^2E",699],["^ ","^2D",0,"^2E",700]],"~i6",[["^ ","^2D",0,"^2E",699,"^O","fulcro.client.primitives/component?"]]],"~i600",["^ ","~i3",[["^ ","^2D",96,"^2E",699,"^O","x"]]],"~i601",["^ ","~i2",[["^ ","^2D",0,"^2E",700],["^ ","^2D",3,"^2E",700],["^ ","^2D",0,"^2E",703]],"^2I",[["^ ","^2D",5,"^2E",700],["^ ","^2D",11,"^2E",700]],"^37",[["^ ","^2D",6,"^2E",700,"^O","x"]]],"~i604",["^ ","^2G",[["^ ","^2D",0,"^2E",701]],"^4X",[["^ ","^2D",7,"^2E",701]],"^2Q",[["^ ","^2D",7,"^2E",701,"^O","x"]]],"~i621",["^ ","~i3",[["^ ","^2D",0,"^2E",706],["^ ","^2D",38,"^2E",710],["^ ","^2D",0,"^2E",711]],"~i9",[["^ ","^2D",0,"^2E",710,"^O","fulcro.client.primitives/react-type"]]],"~i624",["^ ","~i6",[["^ ","^2D",84,"^2E",710,"^O","x"]]],"~i625",["^ ","~i5",[["^ ","^2D",0,"^2E",711],["^ ","^2D",4,"^2E",711,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",712],["^ ","^2D",0,"^2E",712],["^ ","^2D",20,"^2E",712,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",713,"^O","or__3949__auto__"]],"~i9",[["^ ","^2D",23,"^2E",711],["^ ","^2D",41,"^2E",711]],"^2I",[["^ ","^2D",23,"^2E",711,"^O","goog.object/get"]],"^35",[["^ ","^2D",39,"^2E",711,"^O","x"]],"^3H",[["^ ","^2D",0,"^2E",715]],"^2X",[["^ ","^2D",7,"^2E",715,"^O","cljs.core/type"]],"^3E",[["^ ","^2D",22,"^2E",715,"^O","x"]]],"~i627",["^ ","~i0",[["^ ","^2D",0,"^2E",718],["^ ","^2D",33,"^2E",718],["^ ","^2D",0,"^2E",719],["^ ","^2D",0,"^2E",719],["^ ","^2D",0,"^2E",720],["^ ","^2D",0,"^2E",721],["^ ","^2D",0,"^2E",721],["^ ","^2D",6,"^2E",721],["^ ","^2D",11,"^2E",721,"^O","js/Error"],["^ ","^2D",17,"^2E",721]],"~i7",[["^ ","^2D",0,"^2E",718,"^O","fulcro.client.primitives/state"]],"^44",[["^ ","^2D",74,"^2E",718,"^O","c"]]],"~i628",["^ ","~i9",[["^ ","^2D",3,"^2E",719]],"^2I",[["^ ","^2D",3,"^2E",719,"^O","fulcro.client.primitives/component?"]],"^3D",[["^ ","^2D",45,"^2E",719,"^O","c"]]],"~i629",["^ ","~i2",[["^ ","^2D",0,"^2E",724]],"^2T",[["^ ","^2D",7,"^2E",724,"^O","c"]]],"~i631",["^ ","~i0",[["^ ","^2D",0,"^2E",726],["^ ","^2D",46,"^2E",729],["^ ","^2D",0,"^2E",730]],"~i7",[["^ ","^2D",0,"^2E",729,"^O","fulcro.client.primitives/get-raw-react-prop"]]],"~i633",["^ ","~i3",[["^ ","^2D",100,"^2E",729,"^O","c"]],"~i5",[["^ ","^2D",102,"^2E",729,"^O","k"]]],"~i635",["^ ","^2T",[["^ ","^2D",0,"^2E",730],["^ ","^2D",4,"^2E",730,"^O","G__38776"],["^ ","^2D",4,"^2E",731,"^O","G__38777"],["^ ","^2D",0,"^2E",732],["^ ","^2D",0,"^2E",732],["^ ","^2D",23,"^2E",732,"^O","G__38776"],["^ ","^2D",32,"^2E",732,"^O","G__38777"]],"^3S",[["^ ","^2D",7,"^2E",732,"^O","goog.object/get"]],"^3D",[["^ ","^2D",15,"^2E",730]],"^2X",[["^ ","^2D",15,"^2E",730,"^O","c"]],"^48",[["^ ","^2D",15,"^2E",731,"^O","k"]]],"~i637",["^ ","~i0",[["^ ","^2D",0,"^2E",734],["^ ","^2D",45,"^2E",737],["^ ","^2D",0,"^2E",738]],"~i6",[["^ ","^2D",0,"^2E",737,"^O","fulcro.client.primitives/reconciler?"]]],"~i640",["^ ","~i3",[["^ ","^2D",98,"^2E",737,"^O","x"]]],"~i641",["^ ","^2T",[["^ ","^2D",0,"^2E",738],["^ ","^2D",3,"^2E",738],["^ ","^2D",5,"^2E",738],["^ ","^2D",11,"^2E",738],["^ ","^2D",0,"^2E",739],["^ ","^2D",3,"^2E",739],["^ ","^2D",5,"^2E",739],["^ ","^2D",16,"^2E",739],["^ ","^2D",17,"^2E",739,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",49,"^2E",739],["^ ","^2D",0,"^2E",740],["^ ","^2D",0,"^2E",742],["^ ","^2D",0,"^2E",745]],"^2H",[["^ ","^2D",6,"^2E",738,"^O","x"],["^ ","^2D",49,"^2E",739,"^O","x"]]],"~i645",["^ ","~i0",[["^ ","^2D",0,"^2E",748],["^ ","^2D",39,"^2E",751],["^ ","^2D",0,"^2E",752],["^ ","^2D",0,"^2E",752],["^ ","^2D",0,"^2E",753],["^ ","^2D",0,"^2E",754],["^ ","^2D",0,"^2E",754],["^ ","^2D",6,"^2E",754],["^ ","^2D",11,"^2E",754,"^O","js/Error"],["^ ","^2D",17,"^2E",754]],"~i6",[["^ ","^2D",0,"^2E",751,"^O","fulcro.client.primitives/get-indexer"]]],"~i647",["^ ","~i3",[["^ ","^2D",86,"^2E",751,"^O","reconciler"]]],"~i648",["^ ","~i9",[["^ ","^2D",3,"^2E",752]],"^2I",[["^ ","^2D",3,"^2E",752,"^O","fulcro.client.primitives/reconciler?"]],"^2P",[["^ ","^2D",46,"^2E",752,"^O","reconciler"]]],"~i649",["^ ","~i2",[["^ ","^2D",0,"^2E",757],["^ ","^2D",7,"^2E",757],["^ ","^2D",97,"^2E",757],["^ ","^2D",97,"^2E",757]],"~i6",[["^ ","^2D",183,"^2E",757,"^O","reconciler"]]],"~i651",["^ ","~i0",[["^ ","^2D",0,"^2E",759],["^ ","^2D",39,"^2E",759],["^ ","^2D",0,"^2E",760]],"~i7",[["^ ","^2D",0,"^2E",759,"^O","fulcro.client.primitives/sift-idents"]],"^4X",[["^ ","^2D",86,"^2E",759,"^O","res"]]],"~i652",["^ ","~i2",[["^ ","^2D",0,"^2E",760],["^ ","^2D",4,"^2E",760,"^O","map__38783"],["^ ","^2D",4,"^2E",763,"^O","map__38783"],["^ ","^2D",21,"^2E",763],["^ ","^2D",23,"^2E",763],["^ ","^2D",25,"^2E",763],["^ ","^2D",27,"^2E",763],["^ ","^2D",28,"^2E",763,"^O","map__38783"],["^ ","^2D",42,"^2E",763],["^ ","^2D",50,"^2E",763],["^ ","^2D",52,"^2E",763],["^ ","^2D",54,"^2E",763],["^ ","^2D",55,"^2E",763],["^ ","^2D",55,"^2E",763,"^O","map__38783"],["^ ","^2D",104,"^2E",763],["^ ","^2D",115,"^2E",763],["^ ","^2D",116,"^2E",763,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",763],["^ ","^2D",148,"^2E",763,"^O","map__38783"],["^ ","^2D",179,"^2E",763],["^ ","^2D",184,"^2E",763],["^ ","^2D",191,"^2E",763],["^ ","^2D",199,"^2E",763],["^ ","^2D",199,"^2E",763,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",763,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",763,"^O","map__38783"],["^ ","^2D",276,"^2E",763,"^O","map__38783"],["^ ","^2D",13,"^2E",764],["^ ","^2D",13,"^2E",764,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",57,"^2E",764,"^O","map__38783"],["^ ","^2D",72,"^2E",764],["^ ","^2D",11,"^2E",765],["^ ","^2D",11,"^2E",765,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",55,"^2E",765,"^O","map__38783"],["^ ","^2D",70,"^2E",765],["^ ","^2D",0,"^2E",766],["^ ","^2D",0,"^2E",766]],"~i9",[["^ ","^2D",4,"^2E",764,"^O","idents"]],"^3D",[["^ ","^2D",4,"^2E",765,"^O","rest"]],"^48",[["^ ","^2D",17,"^2E",760],["^ ","^2D",36,"^2E",760],["^ ","^2D",47,"^2E",760,"^O","p1__38782#"],["^ ","^2D",0,"^2E",761]],"^2C",[["^ ","^2D",17,"^2E",760,"^O","cljs.core/group-by"]],"^2N",[["^ ","^2D",0,"^2E",761]],"^4>",[["^ ","^2D",7,"^2E",761,"^O","cljs.core/vector?"]],"^2S",[["^ ","^2D",31,"^2E",761],["^ ","^2D",47,"^2E",761,"^O","p1__38782#"]],"^4E",[["^ ","^2D",31,"^2E",761,"^O","cljs.core/first"]],"^2Y",[["^ ","^2D",3,"^2E",762,"^O","res"]]],"~i653",["^ ","~i5",[["^ ","^2D",90,"^2E",766],["^ ","^2D",135,"^2E",766]],"~i6",[["^ ","^2D",90,"^2E",766,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^44",[["^ ","^2D",170,"^2E",766,"^O","idents"]],"^2P",[["^ ","^2D",178,"^2E",766],["^ ","^2D",223,"^2E",766]],"^3Y",[["^ ","^2D",178,"^2E",766,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^30",[["^ ","^2D",258,"^2E",766,"^O","rest"]]],"~i655",["^ ","~i0",[["^ ","^2D",0,"^2E",768],["^ ","^2D",42,"^2E",768],["^ ","^2D",0,"^2E",769],["^ ","^2D",0,"^2E",769],["^ ","^2D",0,"^2E",770],["^ ","^2D",0,"^2E",771],["^ ","^2D",0,"^2E",771],["^ ","^2D",6,"^2E",771],["^ ","^2D",11,"^2E",771,"^O","js/Error"],["^ ","^2D",17,"^2E",771]],"~i6",[["^ ","^2D",0,"^2E",768,"^O","fulcro.client.primitives/get-reconciler"]]],"~i656",["^ ","~i3",[["^ ","^2D",92,"^2E",768,"^O","c"]]],"~i657",["^ ","~i9",[["^ ","^2D",3,"^2E",769]],"^2I",[["^ ","^2D",3,"^2E",769,"^O","fulcro.client.primitives/component?"]],"^3D",[["^ ","^2D",45,"^2E",769,"^O","c"]]],"~i658",["^ ","~i2",[["^ ","^2D",0,"^2E",774],["^ ","^2D",53,"^2E",774]],"~i3",[["^ ","^2D",7,"^2E",774,"^O","fulcro.client.primitives/get-raw-react-prop"]],"^2P",[["^ ","^2D",51,"^2E",774,"^O","c"]]],"~i660",["^ ","^3A",[["^ ","^2D",62,"^2E",3297],["^ ","^2D",62,"^2E",3297,"^O","G__39496"],["^ ","^2D",62,"^2E",3905],["^ ","^2D",62,"^2E",3905,"^O","G__39643"]]],"~i661",["^ ","~i0",[["^ ","^2D",0,"^2E",776],["^ ","^2D",34,"^2E",779],["^ ","^2D",0,"^2E",780]],"~i7",[["^ ","^2D",0,"^2E",779,"^O","fulcro.client.primitives/parent"]]],"~i663",["^ ","~i3",[["^ ","^2D",76,"^2E",779,"^O","component"]]],"~i664",["^ ","~i2",[["^ ","^2D",0,"^2E",780],["^ ","^2D",61,"^2E",780]],"~i3",[["^ ","^2D",7,"^2E",780,"^O","fulcro.client.primitives/get-raw-react-prop"]],"^2P",[["^ ","^2D",51,"^2E",780,"^O","component"]]],"~i667",["^ ","~i0",[["^ ","^2D",0,"^2E",782],["^ ","^2D",33,"^2E",786],["^ ","^2D",0,"^2E",787]],"~i6",[["^ ","^2D",0,"^2E",786,"^O","fulcro.client.primitives/depth"]]],"~i670",["^ ","~i3",[["^ ","^2D",74,"^2E",786,"^O","component"]]],"~i671",["^ ","~i2",[["^ ","^2D",0,"^2E",787],["^ ","^2D",0,"^2E",788],["^ ","^2D",0,"^2E",790]],"~i8",[["^ ","^2D",3,"^2E",787]],"~i9",[["^ ","^2D",3,"^2E",787,"^O","fulcro.client.primitives/component?"]],"^4X",[["^ ","^2D",45,"^2E",787,"^O","component"]]],"~i672",["^ ","~i4",[["^ ","^2D",0,"^2E",788],["^ ","^2D",61,"^2E",788]],"~i5",[["^ ","^2D",7,"^2E",788,"^O","fulcro.client.primitives/get-raw-react-prop"]],"^3=",[["^ ","^2D",51,"^2E",788,"^O","component"]]],"~i675",["^ ","~i0",[["^ ","^2D",0,"^2E",793],["^ ","^2D",37,"^2E",796],["^ ","^2D",0,"^2E",797]],"~i6",[["^ ","^2D",0,"^2E",796,"^O","fulcro.client.primitives/react-key"]]],"~i677",["^ ","~i3",[["^ ","^2D",82,"^2E",796,"^O","component"]]],"~i678",["^ ","~i2",[["^ ","^2D",0,"^2E",797],["^ ","^2D",61,"^2E",797]],"~i3",[["^ ","^2D",7,"^2E",797,"^O","fulcro.client.primitives/get-raw-react-prop"]],"^2P",[["^ ","^2D",51,"^2E",797,"^O","component"]]],"~i687",["^ ","~i3",[["^ ","^2D",0,"^2E",799],["^ ","^2D",33,"^2E",802],["^ ","^2D",0,"^2E",803],["^ ","^2D",0,"^2E",803],["^ ","^2D",0,"^2E",804],["^ ","^2D",0,"^2E",805],["^ ","^2D",0,"^2E",805],["^ ","^2D",6,"^2E",805],["^ ","^2D",11,"^2E",805,"^O","js/Error"],["^ ","^2D",17,"^2E",805]],"~i9",[["^ ","^2D",0,"^2E",802,"^O","fulcro.client.primitives/props"]]],"~i689",["^ ","~i6",[["^ ","^2D",74,"^2E",802,"^O","component"]]],"~i690",["^ ","^3S",[["^ ","^2D",3,"^2E",803]],"^2G",[["^ ","^2D",3,"^2E",803,"^O","fulcro.client.primitives/component?"]],"^3=",[["^ ","^2D",45,"^2E",803,"^O","component"]]],"~i691",["^ ","~i5",[["^ ","^2D",0,"^2E",808],["^ ","^2D",4,"^2E",808,"^O","G__38787"],["^ ","^2D",4,"^2E",809,"^O","G__38788"],["^ ","^2D",15,"^2E",809],["^ ","^2D",0,"^2E",810],["^ ","^2D",0,"^2E",810],["^ ","^2D",23,"^2E",810,"^O","G__38787"],["^ ","^2D",32,"^2E",810,"^O","G__38788"]],"~i6",[["^ ","^2D",7,"^2E",810,"^O","goog.object/get"]],"^2J",[["^ ","^2D",15,"^2E",808]],"^3=",[["^ ","^2D",15,"^2E",808,"^O","component"]]],"~i697",["^ ","~i0",[["^ ","^2D",0,"^2E",812],["^ ","^2D",0,"^2E",812],["^ ","^2D",37,"^2E",816],["^ ","^2D",82,"^2E",816,"^O","var_args"],["^ ","^2D",0,"^2E",817],["^ ","^2D",0,"^2E",817],["^ ","^2D",4,"^2E",817,"^O","G__38795"],["^ ","^2D",15,"^2E",817],["^ ","^2D",15,"^2E",817],["^ ","^2D",0,"^2E",818],["^ ","^2D",0,"^2E",818],["^ ","^2D",8,"^2E",818,"^O","G__38795"],["^ ","^2D",5,"^2E",819],["^ ","^2D",0,"^2E",820],["^ ","^2D",7,"^2E",820,"^O","fulcro.client.primitives/get-state"],["^ ","^2D",72,"^2E",820],["^ ","^2D",73,"^2E",820],["^ ","^2D",83,"^2E",820],["^ ","^2D",5,"^2E",823],["^ ","^2D",0,"^2E",824],["^ ","^2D",7,"^2E",824,"^O","fulcro.client.primitives/get-state"],["^ ","^2D",72,"^2E",824],["^ ","^2D",73,"^2E",824],["^ ","^2D",83,"^2E",824],["^ ","^2D",89,"^2E",824],["^ ","^2D",90,"^2E",824],["^ ","^2D",100,"^2E",824],["^ ","^2D",0,"^2E",828],["^ ","^2D",6,"^2E",828],["^ ","^2D",11,"^2E",828,"^O","js/Error"],["^ ","^2D",17,"^2E",828],["^ ","^2D",18,"^2E",828],["^ ","^2D",80,"^2E",828],["^ ","^2D",80,"^2E",828],["^ ","^2D",0,"^2E",833],["^ ","^2D",0,"^2E",833],["^ ","^2D",67,"^2E",833],["^ ","^2D",0,"^2E",834],["^ ","^2D",0,"^2E",837],["^ ","^2D",0,"^2E",837],["^ ","^2D",67,"^2E",837],["^ ","^2D",0,"^2E",838],["^ ","^2D",0,"^2E",838],["^ ","^2D",0,"^2E",839],["^ ","^2D",0,"^2E",840],["^ ","^2D",0,"^2E",840],["^ ","^2D",6,"^2E",840],["^ ","^2D",11,"^2E",840,"^O","js/Error"],["^ ","^2D",17,"^2E",840],["^ ","^2D",0,"^2E",854],["^ ","^2D",0,"^2E",854],["^ ","^2D",61,"^2E",854],["^ ","^2D",0,"^2E",856]],"~i6",[["^ ","^2D",0,"^2E",816,"^O","fulcro.client.primitives/get-state"],["^ ","^2D",0,"^2E",833,"^O","fulcro.client.primitives/get-state"],["^ ","^2D",0,"^2E",837,"^O","fulcro.client.primitives/get-state"],["^ ","^2D",0,"^2E",854,"^O","fulcro.client.primitives/get-state"]]],"~i700",["^ ","~i4",[["^ ","^2D",78,"^2E",833,"^O","component"]]],"~i701",["^ ","~i3",[["^ ","^2D",0,"^2E",834],["^ ","^2D",82,"^2E",834]],"~i4",[["^ ","^2D",7,"^2E",834,"^O","fulcro.client.primitives.get_state.cljs$core$IFn$_invoke$arity$2"]],"^44",[["^ ","^2D",72,"^2E",834,"^O","component"]]],"~i702",["^ ","~i4",[["^ ","^2D",78,"^2E",837,"^O","component"]],"^44",[["^ ","^2D",88,"^2E",837,"^O","k-or-ks"]]],"~i703",["^ ","^2I",[["^ ","^2D",3,"^2E",838]],"^2T",[["^ ","^2D",3,"^2E",838,"^O","fulcro.client.primitives/component?"]],"^2P",[["^ ","^2D",45,"^2E",838,"^O","component"]]],"~i704",["^ ","~i3",[["^ ","^2D",0,"^2E",843],["^ ","^2D",0,"^2E",851]],"~i9",[["^ ","^2D",4,"^2E",843,"^O","cst"]]],"~i705",["^ ","^2P",[["^ ","^2D",10,"^2E",843],["^ ","^2D",27,"^2E",843,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",844],["^ ","^2D",0,"^2E",844],["^ ","^2D",20,"^2E",844,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",845],["^ ","^2D",0,"^2E",845],["^ ","^2D",12,"^2E",845,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",846],["^ ","^2D",0,"^2E",848]],"^48",[["^ ","^2D",4,"^2E",845,"^O","state"]],"^3W",[["^ ","^2D",48,"^2E",843]],"^3A",[["^ ","^2D",48,"^2E",843,"^O","component"]],"^4B",[["^ ","^2D",0,"^2E",846],["^ ","^2D",29,"^2E",846]],"^2W",[["^ ","^2D",7,"^2E",846,"^O","goog.object/get"]],"^2[",[["^ ","^2D",23,"^2E",846,"^O","state"]]],"~i706",["^ ","~i5",[["^ ","^2D",0,"^2E",851]],"~i6",[["^ ","^2D",7,"^2E",851,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^2D",54,"^2E",851,"^O","cst"]],"^3K",[["^ ","^2D",58,"^2E",851],["^ ","^2D",106,"^2E",851]],"^3D",[["^ ","^2D",60,"^2E",851]],"^2P",[["^ ","^2D",60,"^2E",851,"^O","cljs.core/sequential?"]],"^2C",[["^ ","^2D",88,"^2E",851,"^O","k-or-ks"]],"^2M",[["^ ","^2D",98,"^2E",851,"^O","k-or-ks"]],"^4<",[["^ ","^2D",189,"^2E",851,"^O","k-or-ks"]]],"~i708",["^ ","~i0",[["^ ","^2D",0,"^2E",856],["^ ","^2D",44,"^2E",859],["^ ","^2D",0,"^2E",860],["^ ","^2D",0,"^2E",860],["^ ","^2D",0,"^2E",861],["^ ","^2D",0,"^2E",862],["^ ","^2D",0,"^2E",862],["^ ","^2D",6,"^2E",862],["^ ","^2D",11,"^2E",862,"^O","js/Error"],["^ ","^2D",17,"^2E",862],["^ ","^2D",0,"^2E",865],["^ ","^2D",0,"^2E",866],["^ ","^2D",0,"^2E",867],["^ ","^2D",0,"^2E",867],["^ ","^2D",6,"^2E",867],["^ ","^2D",11,"^2E",867,"^O","js/Error"],["^ ","^2D",17,"^2E",867]],"~i7",[["^ ","^2D",0,"^2E",859,"^O","fulcro.client.primitives/get-static-query"]]],"~i710",["^ ","~i3",[["^ ","^2D",96,"^2E",859,"^O","c"]]],"~i711",["^ ","~i9",[["^ ","^2D",3,"^2E",860,"^O","fulcro.client.primitives/has-query?"]],"^4X",[["^ ","^2D",20,"^2E",865,"^O","c"]]],"~i712",["^ ","^3W",[["^ ","^2D",0,"^2E",870]],"^2K",[["^ ","^2D",7,"^2E",870,"^O","fulcro.client.primitives/query"]],"^2Q",[["^ ","^2D",38,"^2E",870,"^O","c"]]],"~i714",["^ ","~i0",[["^ ","^2D",0,"^2E",872],["^ ","^2D",48,"^2E",875],["^ ","^2D",0,"^2E",876]],"~i6",[["^ ","^2D",0,"^2E",875,"^O","fulcro.client.primitives/some-hasquery?"]]],"~i716",["^ ","~i3",[["^ ","^2D",104,"^2E",875,"^O","c"]]],"~i717",["^ ","~i2",[["^ ","^2D",0,"^2E",876],["^ ","^2D",0,"^2E",878]],"~i9",[["^ ","^2D",4,"^2E",876,"^O","c"]],"^2T",[["^ ","^2D",12,"^2E",876,"^O","c"]]],"~i718",["^ ","~i4",[["^ ","^2D",0,"^2E",878],["^ ","^2D",0,"^2E",879],["^ ","^2D",0,"^2E",881],["^ ","^2D",0,"^2E",882],["^ ","^2D",0,"^2E",884]]],"~i719",["^ ","~i6",[["^ ","^2D",3,"^2E",878],["^ ","^2D",13,"^2E",878]],"^3S",[["^ ","^2D",4,"^2E",878,"^O","c"]]],"~i720",["^ ","~i6",[["^ ","^2D",3,"^2E",881]],"~i7",[["^ ","^2D",3,"^2E",881,"^O","fulcro.client.primitives/has-query?"]],"^2O",[["^ ","^2D",45,"^2E",881,"^O","c"]]],"~i721",["^ ","^3S",[["^ ","^2D",0,"^2E",884]],"^35",[["^ ","^2D",15,"^2E",884]],"^4X",[["^ ","^2D",15,"^2E",884,"^O","fulcro.client.primitives/parent"]],"^3L",[["^ ","^2D",47,"^2E",884,"^O","c"]]],"~i723",["^ ","~i0",[["^ ","^2D",0,"^2E",893],["^ ","^2D",0,"^2E",893],["^ ","^2D",37,"^2E",901],["^ ","^2D",82,"^2E",901,"^O","var_args"],["^ ","^2D",0,"^2E",902],["^ ","^2D",0,"^2E",902],["^ ","^2D",4,"^2E",902,"^O","G__38810"],["^ ","^2D",15,"^2E",902],["^ ","^2D",15,"^2E",902],["^ ","^2D",0,"^2E",903],["^ ","^2D",0,"^2E",903],["^ ","^2D",8,"^2E",903,"^O","G__38810"],["^ ","^2D",5,"^2E",904],["^ ","^2D",0,"^2E",905],["^ ","^2D",7,"^2E",905,"^O","fulcro.client.primitives/get-ident"],["^ ","^2D",72,"^2E",905],["^ ","^2D",73,"^2E",905],["^ ","^2D",83,"^2E",905],["^ ","^2D",5,"^2E",908],["^ ","^2D",0,"^2E",909],["^ ","^2D",7,"^2E",909,"^O","fulcro.client.primitives/get-ident"],["^ ","^2D",72,"^2E",909],["^ ","^2D",73,"^2E",909],["^ ","^2D",83,"^2E",909],["^ ","^2D",89,"^2E",909],["^ ","^2D",90,"^2E",909],["^ ","^2D",100,"^2E",909],["^ ","^2D",0,"^2E",913],["^ ","^2D",6,"^2E",913],["^ ","^2D",11,"^2E",913,"^O","js/Error"],["^ ","^2D",17,"^2E",913],["^ ","^2D",18,"^2E",913],["^ ","^2D",80,"^2E",913],["^ ","^2D",80,"^2E",913],["^ ","^2D",0,"^2E",918],["^ ","^2D",0,"^2E",918],["^ ","^2D",67,"^2E",918],["^ ","^2D",0,"^2E",919],["^ ","^2D",0,"^2E",919],["^ ","^2D",0,"^2E",920],["^ ","^2D",0,"^2E",921],["^ ","^2D",0,"^2E",921],["^ ","^2D",6,"^2E",921],["^ ","^2D",11,"^2E",921,"^O","js/Error"],["^ ","^2D",17,"^2E",921],["^ ","^2D",0,"^2E",940],["^ ","^2D",0,"^2E",940],["^ ","^2D",67,"^2E",940],["^ ","^2D",0,"^2E",941],["^ ","^2D",0,"^2E",972],["^ ","^2D",0,"^2E",972],["^ ","^2D",61,"^2E",972],["^ ","^2D",0,"^2E",974]],"~i6",[["^ ","^2D",0,"^2E",901,"^O","fulcro.client.primitives/get-ident"],["^ ","^2D",0,"^2E",918,"^O","fulcro.client.primitives/get-ident"],["^ ","^2D",0,"^2E",940,"^O","fulcro.client.primitives/get-ident"],["^ ","^2D",0,"^2E",972,"^O","fulcro.client.primitives/get-ident"]]],"~i730",["^ ","~i4",[["^ ","^2D",78,"^2E",918,"^O","x"]]],"~i731",["^ ","^2I",[["^ ","^2D",3,"^2E",919]],"^2T",[["^ ","^2D",3,"^2E",919,"^O","fulcro.client.primitives/component?"]],"^2P",[["^ ","^2D",45,"^2E",919,"^O","x"]]],"~i732",["^ ","~i3",[["^ ","^2D",0,"^2E",924],["^ ","^2D",4,"^2E",924,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",925],["^ ","^2D",0,"^2E",925],["^ ","^2D",20,"^2E",925,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",926],["^ ","^2D",8,"^2E",926,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",927]],"^3S",[["^ ","^2D",4,"^2E",926,"^O","m"]],"^44",[["^ ","^2D",25,"^2E",924]],"^2J",[["^ ","^2D",25,"^2E",924,"^O","fulcro.client.primitives/props"]],"^3D",[["^ ","^2D",56,"^2E",924,"^O","x"]]],"~i733",["^ ","~i5",[["^ ","^2D",0,"^2E",927]],"~i6",[["^ ","^2D",7,"^2E",927,"^O","fulcro.client.primitives/ident"]],"^3S",[["^ ","^2D",38,"^2E",927,"^O","x"]],"^44",[["^ ","^2D",40,"^2E",927,"^O","m"]]],"~i734",["^ ","~i5",[["^ ","^2D",0,"^2E",929],["^ ","^2D",4,"^2E",929],["^ ","^2D",4,"^2E",929],["^ ","^2D",11,"^2E",929,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",68,"^2E",929],["^ ","^2D",111,"^2E",929],["^ ","^2D",165,"^2E",929],["^ ","^2D",192,"^2E",929],["^ ","^2D",244,"^2E",929],["^ ","^2D",256,"^2E",929],["^ ","^2D",359,"^2E",929],["^ ","^2D",16,"^2E",930],["^ ","^2D",19,"^2E",930],["^ ","^2D",20,"^2E",930,"^O","e38811"],["^ ","^2D",38,"^2E",930,"^O","js/Error"],["^ ","^2D",0,"^2E",931],["^ ","^2D",4,"^2E",931,"^O","e__31518__auto__"],["^ ","^2D",23,"^2E",931,"^O","e38811"],["^ ","^2D",0,"^2E",932],["^ ","^2D",0,"^2E",932],["^ ","^2D",7,"^2E",932,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",64,"^2E",932],["^ ","^2D",107,"^2E",932],["^ ","^2D",161,"^2E",932],["^ ","^2D",188,"^2E",932],["^ ","^2D",240,"^2E",932],["^ ","^2D",252,"^2E",932],["^ ","^2D",355,"^2E",932],["^ ","^2D",408,"^2E",932,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",934],["^ ","^2D",0,"^2E",934],["^ ","^2D",6,"^2E",934,"^O","e38811"]],"^43",[["^ ","^2D",453,"^2E",929,"^O","x"]]],"~i735",["^ ","~i4",[["^ ","^2D",78,"^2E",940,"^O","class"]],"^2I",[["^ ","^2D",85,"^2E",940,"^O","props"]]],"~i744",["^ ","^2G",[["^ ","^2D",0,"^2E",941]],"^3K",[["^ ","^2D",3,"^2E",941],["^ ","^2D",5,"^2E",941],["^ ","^2D",7,"^2E",941],["^ ","^2D",18,"^2E",941],["^ ","^2D",26,"^2E",941],["^ ","^2D",28,"^2E",941],["^ ","^2D",30,"^2E",941],["^ ","^2D",41,"^2E",941],["^ ","^2D",42,"^2E",941,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",74,"^2E",941],["^ ","^2D",117,"^2E",941],["^ ","^2D",122,"^2E",941],["^ ","^2D",129,"^2E",941]],"^38",[["^ ","^2D",8,"^2E",941,"^O","class"],["^ ","^2D",74,"^2E",941,"^O","class"]]],"~i745",["^ ","^2J",[["^ ","^2D",0,"^2E",942],["^ ","^2D",0,"^2E",943]],"^3D",[["^ ","^2D",4,"^2E",942,"^O","id"]],"^3=",[["^ ","^2D",9,"^2E",942]],"^3V",[["^ ","^2D",9,"^2E",942,"^O","fulcro.client.primitives/ident"]],"^30",[["^ ","^2D",40,"^2E",942,"^O","class"]],"^2F",[["^ ","^2D",47,"^2E",942,"^O","props"]]],"~i746",["^ ","^3K",[["^ ","^2D",0,"^2E",943],["^ ","^2D",3,"^2E",943],["^ ","^2D",0,"^2E",953]],"^3V",[["^ ","^2D",5,"^2E",943]],"^3>",[["^ ","^2D",5,"^2E",943,"^O","fulcro.util/ident?"]],"^2H",[["^ ","^2D",30,"^2E",943,"^O","id"]]],"~i747",["^ ","^35",[["^ ","^2D",0,"^2E",944],["^ ","^2D",4,"^2E",944],["^ ","^2D",4,"^2E",944],["^ ","^2D",4,"^2E",944,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",944],["^ ","^2D",104,"^2E",944],["^ ","^2D",158,"^2E",944],["^ ","^2D",185,"^2E",944],["^ ","^2D",237,"^2E",944],["^ ","^2D",249,"^2E",944],["^ ","^2D",352,"^2E",944],["^ ","^2D",16,"^2E",945],["^ ","^2D",19,"^2E",945],["^ ","^2D",20,"^2E",945,"^O","e38814"],["^ ","^2D",38,"^2E",945,"^O","js/Error"],["^ ","^2D",0,"^2E",946],["^ ","^2D",4,"^2E",946,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",946,"^O","e38814"],["^ ","^2D",0,"^2E",947],["^ ","^2D",0,"^2E",947],["^ ","^2D",0,"^2E",947,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",947],["^ ","^2D",100,"^2E",947],["^ ","^2D",154,"^2E",947],["^ ","^2D",181,"^2E",947],["^ ","^2D",233,"^2E",947],["^ ","^2D",245,"^2E",947],["^ ","^2D",348,"^2E",947],["^ ","^2D",401,"^2E",947,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",949],["^ ","^2D",0,"^2E",949],["^ ","^2D",6,"^2E",949,"^O","e38814"]],"~i78",[["^ ","^2D",401,"^2E",944,"^O","class"]]],"~i748",["^ ","^3K",[["^ ","^2D",0,"^2E",955],["^ ","^2D",0,"^2E",956],["^ ","^2D",110,"^2E",956]],"^3D",[["^ ","^2D",3,"^2E",955],["^ ","^2D",48,"^2E",955]],"^2P",[["^ ","^2D",3,"^2E",955,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^38",[["^ ","^2D",157,"^2E",955]],"^2F",[["^ ","^2D",157,"^2E",955,"^O","cljs.core/second"]],"^2N",[["^ ","^2D",174,"^2E",955,"^O","id"]],"^5;",[["^ ","^2D",90,"^2E",956]],"^3Z",[["^ ","^2D",90,"^2E",956,"^O","cljs.core/first"]],"^2V",[["^ ","^2D",106,"^2E",956,"^O","id"]],"^2Z",[["^ ","^2D",0,"^2E",958,"^O","id"]]],"~i749",["^ ","^2J",[["^ ","^2D",0,"^2E",961],["^ ","^2D",4,"^2E",961],["^ ","^2D",4,"^2E",961],["^ ","^2D",11,"^2E",961,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",68,"^2E",961],["^ ","^2D",111,"^2E",961],["^ ","^2D",165,"^2E",961],["^ ","^2D",192,"^2E",961],["^ ","^2D",244,"^2E",961],["^ ","^2D",256,"^2E",961],["^ ","^2D",359,"^2E",961],["^ ","^2D",16,"^2E",962],["^ ","^2D",19,"^2E",962],["^ ","^2D",20,"^2E",962,"^O","e38815"],["^ ","^2D",38,"^2E",962,"^O","js/Error"],["^ ","^2D",0,"^2E",963],["^ ","^2D",4,"^2E",963,"^O","e__31518__auto__"],["^ ","^2D",23,"^2E",963,"^O","e38815"],["^ ","^2D",0,"^2E",964],["^ ","^2D",0,"^2E",964],["^ ","^2D",7,"^2E",964,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",64,"^2E",964],["^ ","^2D",107,"^2E",964],["^ ","^2D",161,"^2E",964],["^ ","^2D",188,"^2E",964],["^ ","^2D",240,"^2E",964],["^ ","^2D",252,"^2E",964],["^ ","^2D",355,"^2E",964],["^ ","^2D",408,"^2E",964,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",966],["^ ","^2D",0,"^2E",966],["^ ","^2D",6,"^2E",966,"^O","e38815"]],"^4;",[["^ ","^2D",450,"^2E",961,"^O","class"]]],"~i751",["^ ","~i0",[["^ ","^2D",0,"^2E",974],["^ ","^2D",42,"^2E",977],["^ ","^2D",0,"^2E",978]],"~i6",[["^ ","^2D",0,"^2E",977,"^O","fulcro.client.primitives/component-name"]]],"~i753",["^ ","~i3",[["^ ","^2D",92,"^2E",977,"^O","class"]]],"~i755",["^ ","^2T",[["^ ","^2D",0,"^2E",978]],"^3>",[["^ ","^2D",7,"^2E",978,"^O","class"]]],"~i757",["^ ","~i0",[["^ ","^2D",0,"^2E",980],["^ ","^2D",36,"^2E",983],["^ ","^2D",0,"^2E",984]],"~i6",[["^ ","^2D",0,"^2E",983,"^O","fulcro.client.primitives/query-id"]]],"~i759",["^ ","~i3",[["^ ","^2D",80,"^2E",983,"^O","class"]],"~i9",[["^ ","^2D",87,"^2E",983,"^O","qualifier"]]],"~i760",["^ ","~i2",[["^ ","^2D",0,"^2E",984]],"~i6",[["^ ","^2D",3,"^2E",984],["^ ","^2D",14,"^2E",984]],"^3S",[["^ ","^2D",4,"^2E",984,"^O","class"]]],"~i761",["^ ","~i4",[["^ ","^2D",0,"^2E",985],["^ ","^2D",4,"^2E",985],["^ ","^2D",4,"^2E",985],["^ ","^2D",11,"^2E",985,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",68,"^2E",985],["^ ","^2D",111,"^2E",985],["^ ","^2D",165,"^2E",985],["^ ","^2D",192,"^2E",985],["^ ","^2D",244,"^2E",985],["^ ","^2D",256,"^2E",985],["^ ","^2D",361,"^2E",985],["^ ","^2D",16,"^2E",986],["^ ","^2D",19,"^2E",986],["^ ","^2D",20,"^2E",986,"^O","e38827"],["^ ","^2D",38,"^2E",986,"^O","js/Error"],["^ ","^2D",0,"^2E",987],["^ ","^2D",4,"^2E",987,"^O","e__31518__auto__"],["^ ","^2D",23,"^2E",987,"^O","e38827"],["^ ","^2D",0,"^2E",988],["^ ","^2D",0,"^2E",988],["^ ","^2D",7,"^2E",988,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",64,"^2E",988],["^ ","^2D",107,"^2E",988],["^ ","^2D",161,"^2E",988],["^ ","^2D",188,"^2E",988],["^ ","^2D",240,"^2E",988],["^ ","^2D",252,"^2E",988],["^ ","^2D",357,"^2E",988],["^ ","^2D",410,"^2E",988,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",990],["^ ","^2D",0,"^2E",990],["^ ","^2D",6,"^2E",990,"^O","e38827"]],"^4C",[["^ ","^2D",467,"^2E",985],["^ ","^2D",515,"^2E",985],["^ ","^2D",518,"^2E",985]],"^4D",[["^ ","^2D",467,"^2E",985,"^O","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"]]],"~i762",["^ ","~i4",[["^ ","^2D",0,"^2E",994],["^ ","^2D",4,"^2E",994,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",995],["^ ","^2D",0,"^2E",995],["^ ","^2D",20,"^2E",995,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",996],["^ ","^2D",0,"^2E",996],["^ ","^2D",16,"^2E",996,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",997],["^ ","^2D",0,"^2E",999]],"^2J",[["^ ","^2D",4,"^2E",996,"^O","classname"]],"^3V",[["^ ","^2D",25,"^2E",994]],"^3>",[["^ ","^2D",25,"^2E",994,"^O","fulcro.client.primitives/component-name"]],"^2L",[["^ ","^2D",65,"^2E",994,"^O","class"]]],"~i763",["^ ","~i6",[["^ ","^2D",0,"^2E",997]],"^2T",[["^ ","^2D",52,"^2E",997,"^O","classname"]],"^3D",[["^ ","^2D",107,"^2E",997],["^ ","^2D",136,"^2E",997],["^ ","^2D",206,"^2E",997]],"^3L",[["^ ","^2D",125,"^2E",997,"^O","qualifier"]],"^2F",[["^ ","^2D",136,"^2E",997],["^ ","^2D",137,"^2E",997]],"^2Q",[["^ ","^2D",185,"^2E",997,"^O","qualifier"]]],"~i779",["^ ","~i3",[["^ ","^2D",0,"^2E",1003],["^ ","^2D",0,"^2E",1003],["^ ","^2D",36,"^2E",1006],["^ ","^2D",80,"^2E",1006,"^O","var_args"],["^ ","^2D",0,"^2E",1007],["^ ","^2D",0,"^2E",1007],["^ ","^2D",4,"^2E",1007,"^O","args__4534__auto__"],["^ ","^2D",25,"^2E",1007],["^ ","^2D",0,"^2E",1008],["^ ","^2D",0,"^2E",1008],["^ ","^2D",4,"^2E",1008,"^O","len__4531__auto__"],["^ ","^2D",30,"^2E",1008],["^ ","^2D",30,"^2E",1008],["^ ","^2D",0,"^2E",1009],["^ ","^2D",0,"^2E",1009],["^ ","^2D",4,"^2E",1009,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",1009],["^ ","^2D",0,"^2E",1011],["^ ","^2D",0,"^2E",1011],["^ ","^2D",3,"^2E",1011],["^ ","^2D",4,"^2E",1011,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",1011,"^O","len__4531__auto__"],["^ ","^2D",0,"^2E",1012],["^ ","^2D",0,"^2E",1012],["^ ","^2D",0,"^2E",1012,"^O","args__4534__auto__"],["^ ","^2D",24,"^2E",1012],["^ ","^2D",25,"^2E",1012],["^ ","^2D",35,"^2E",1012,"^O","i__4532__auto__"],["^ ","^2D",0,"^2E",1014],["^ ","^2D",15,"^2E",1014],["^ ","^2D",16,"^2E",1014,"^O","i__4532__auto__"],["^ ","^2D",40,"^2E",1014],["^ ","^2D",0,"^2E",1018],["^ ","^2D",0,"^2E",1022],["^ ","^2D",4,"^2E",1022,"^O","argseq__4535__auto__"],["^ ","^2D",27,"^2E",1022],["^ ","^2D",29,"^2E",1022],["^ ","^2D",30,"^2E",1022],["^ ","^2D",36,"^2E",1022],["^ ","^2D",36,"^2E",1022,"^O","args__4534__auto__"],["^ ","^2D",64,"^2E",1022],["^ ","^2D",64,"^2E",1022],["^ ","^2D",69,"^2E",1022,"^O","cljs.core/IndexedSeq"],["^ ","^2D",90,"^2E",1022],["^ ","^2D",90,"^2E",1022,"^O","args__4534__auto__"],["^ ","^2D",115,"^2E",1022],["^ ","^2D",120,"^2E",1022],["^ ","^2D",124,"^2E",1022],["^ ","^2D",131,"^2E",1022],["^ ","^2D",0,"^2E",1023],["^ ","^2D",0,"^2E",1023],["^ ","^2D",7,"^2E",1023,"^O","fulcro.client.primitives/fragment"],["^ ","^2D",78,"^2E",1023,"^O","argseq__4535__auto__"],["^ ","^2D",0,"^2E",1026],["^ ","^2D",0,"^2E",1026],["^ ","^2D",0,"^2E",1026],["^ ","^2D",0,"^2E",1026,"^O","fulcro.client.primitives/fragment"],["^ ","^2D",73,"^2E",1026],["^ ","^2D",0,"^2E",1027],["^ ","^2D",0,"^2E",1033],["^ ","^2D",0,"^2E",1033],["^ ","^2D",0,"^2E",1033,"^O","fulcro.client.primitives/fragment"],["^ ","^2D",60,"^2E",1033],["^ ","^2D",0,"^2E",1035],["^ ","^2D",0,"^2E",1036],["^ ","^2D",0,"^2E",1036],["^ ","^2D",0,"^2E",1036,"^O","fulcro.client.primitives/fragment"],["^ ","^2D",54,"^2E",1036],["^ ","^2D",65,"^2E",1036,"^O","seq38832"],["^ ","^2D",0,"^2E",1037],["^ ","^2D",0,"^2E",1037],["^ ","^2D",4,"^2E",1037,"^O","self__4519__auto__"],["^ ","^2D",25,"^2E",1037],["^ ","^2D",0,"^2E",1038],["^ ","^2D",0,"^2E",1038],["^ ","^2D",7,"^2E",1038,"^O","self__4519__auto__"],["^ ","^2D",63,"^2E",1038],["^ ","^2D",63,"^2E",1038,"^O","cljs.core/seq"],["^ ","^2D",77,"^2E",1038,"^O","seq38832"],["^ ","^2D",0,"^2E",1041]],"~i9",[["^ ","^2D",0,"^2E",1006,"^O","fulcro.client.primitives/fragment"]]],"~i781",["^ ","~i8",[["^ ","^2D",84,"^2E",1026,"^O","args"]]],"~i782",["^ ","~i5",[["^ ","^2D",0,"^2E",1027],["^ ","^2D",4,"^2E",1027,"^O","vec__38834"],["^ ","^2D",12,"^2E",1028],["^ ","^2D",12,"^2E",1028,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",1028,"^O","vec__38834"],["^ ","^2D",67,"^2E",1028],["^ ","^2D",71,"^2E",1028],["^ ","^2D",15,"^2E",1029],["^ ","^2D",15,"^2E",1029,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",59,"^2E",1029,"^O","vec__38834"],["^ ","^2D",70,"^2E",1029],["^ ","^2D",74,"^2E",1029],["^ ","^2D",0,"^2E",1030]],"^3S",[["^ ","^2D",4,"^2E",1028,"^O","props"]],"^2O",[["^ ","^2D",4,"^2E",1029,"^O","children"]],"^4I",[["^ ","^2D",17,"^2E",1027],["^ ","^2D",64,"^2E",1027],["^ ","^2D",198,"^2E",1027],["^ ","^2D",281,"^2E",1027]],"^4Y",[["^ ","^2D",19,"^2E",1027]],"^48",[["^ ","^2D",19,"^2E",1027,"^O","cljs.core/map?"]],"^2H",[["^ ","^2D",40,"^2E",1027]],"^3W",[["^ ","^2D",40,"^2E",1027,"^O","cljs.core/first"]],"^4>",[["^ ","^2D",56,"^2E",1027,"^O","args"]]],"~i783",["^ ","^30",[["^ ","^2D",147,"^2E",1027]],"^4Y",[["^ ","^2D",147,"^2E",1027,"^O","cljs.core/first"]],"^2H",[["^ ","^2D",163,"^2E",1027,"^O","args"]],"^2N",[["^ ","^2D",169,"^2E",1027]],"^4>",[["^ ","^2D",169,"^2E",1027,"^O","cljs.core/rest"]],"^5;",[["^ ","^2D",184,"^2E",1027,"^O","args"]]],"~i784",["^ ","^2H",[["^ ","^2D",286,"^2E",1027,"^O","args"]]],"~i785",["^ ","~i7",[["^ ","^2D",0,"^2E",1030]],"~i8",[["^ ","^2D",7,"^2E",1030,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$4"]],"^44",[["^ ","^2D",53,"^2E",1030,"^O","js/React.createElement"]],"^2F",[["^ ","^2D",73,"^2E",1030,"^O","js/React.Fragment"]],"^2U",[["^ ","^2D",88,"^2E",1030]],"^5F",[["^ ","^2D",88,"^2E",1030,"^O","cljs.core/clj->js"]],"^2Y",[["^ ","^2D",109,"^2E",1030,"^O","props"]],"^2[",[["^ ","^2D",116,"^2E",1030,"^O","children"]]],"~i836",["^ ","~i3",[["^ ","^2D",0,"^2E",1041],["^ ","^2D",42,"^2E",1041],["^ ","^2D",0,"^2E",1042]],"~i9",[["^ ","^2D",0,"^2E",1041,"^O","fulcro.client.primitives/create-element"]],"^3V",[["^ ","^2D",92,"^2E",1041,"^O","class"]],"^30",[["^ ","^2D",99,"^2E",1041,"^O","props"]],"^2F",[["^ ","^2D",105,"^2E",1041,"^O","children"]]],"~i837",["^ ","~i5",[["^ ","^2D",0,"^2E",1042]],"~i6",[["^ ","^2D",7,"^2E",1042,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$4"]],"^3S",[["^ ","^2D",53,"^2E",1042,"^O","js/React.createElement"]],"^3E",[["^ ","^2D",73,"^2E",1042,"^O","class"]],"^2L",[["^ ","^2D",80,"^2E",1042,"^O","props"]],"^5C",[["^ ","^2D",86,"^2E",1042,"^O","children"]]],"~i840",["^ ","~i3",[["^ ","^2D",0,"^2E",1044],["^ ","^2D",0,"^2E",1044],["^ ","^2D",35,"^2E",1048],["^ ","^2D",78,"^2E",1048,"^O","var_args"],["^ ","^2D",0,"^2E",1049],["^ ","^2D",0,"^2E",1049],["^ ","^2D",4,"^2E",1049,"^O","G__38846"],["^ ","^2D",15,"^2E",1049],["^ ","^2D",15,"^2E",1049],["^ ","^2D",0,"^2E",1050],["^ ","^2D",0,"^2E",1050],["^ ","^2D",8,"^2E",1050,"^O","G__38846"],["^ ","^2D",5,"^2E",1051],["^ ","^2D",0,"^2E",1052],["^ ","^2D",7,"^2E",1052,"^O","fulcro.client.primitives/factory"],["^ ","^2D",70,"^2E",1052],["^ ","^2D",71,"^2E",1052],["^ ","^2D",81,"^2E",1052],["^ ","^2D",5,"^2E",1055],["^ ","^2D",0,"^2E",1056],["^ ","^2D",7,"^2E",1056,"^O","fulcro.client.primitives/factory"],["^ ","^2D",70,"^2E",1056],["^ ","^2D",71,"^2E",1056],["^ ","^2D",81,"^2E",1056],["^ ","^2D",87,"^2E",1056],["^ ","^2D",88,"^2E",1056],["^ ","^2D",98,"^2E",1056],["^ ","^2D",0,"^2E",1060],["^ ","^2D",6,"^2E",1060],["^ ","^2D",11,"^2E",1060,"^O","js/Error"],["^ ","^2D",17,"^2E",1060],["^ ","^2D",18,"^2E",1060],["^ ","^2D",80,"^2E",1060],["^ ","^2D",80,"^2E",1060],["^ ","^2D",0,"^2E",1065],["^ ","^2D",0,"^2E",1065],["^ ","^2D",65,"^2E",1065],["^ ","^2D",0,"^2E",1066],["^ ","^2D",0,"^2E",1069],["^ ","^2D",0,"^2E",1069],["^ ","^2D",65,"^2E",1069],["^ ","^2D",83,"^2E",1069,"^O","p__38848"],["^ ","^2D",0,"^2E",1070],["^ ","^2D",0,"^2E",1070],["^ ","^2D",4,"^2E",1070,"^O","map__38849"],["^ ","^2D",17,"^2E",1070,"^O","p__38848"],["^ ","^2D",4,"^2E",1071,"^O","map__38849"],["^ ","^2D",21,"^2E",1071],["^ ","^2D",23,"^2E",1071],["^ ","^2D",25,"^2E",1071],["^ ","^2D",27,"^2E",1071],["^ ","^2D",28,"^2E",1071,"^O","map__38849"],["^ ","^2D",42,"^2E",1071],["^ ","^2D",50,"^2E",1071],["^ ","^2D",52,"^2E",1071],["^ ","^2D",54,"^2E",1071],["^ ","^2D",55,"^2E",1071],["^ ","^2D",55,"^2E",1071,"^O","map__38849"],["^ ","^2D",104,"^2E",1071],["^ ","^2D",115,"^2E",1071],["^ ","^2D",116,"^2E",1071,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",1071],["^ ","^2D",148,"^2E",1071,"^O","map__38849"],["^ ","^2D",179,"^2E",1071],["^ ","^2D",184,"^2E",1071],["^ ","^2D",191,"^2E",1071],["^ ","^2D",199,"^2E",1071],["^ ","^2D",199,"^2E",1071,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",1071,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",1071,"^O","map__38849"],["^ ","^2D",276,"^2E",1071,"^O","map__38849"],["^ ","^2D",11,"^2E",1072,"^O","map__38849"],["^ ","^2D",16,"^2E",1073],["^ ","^2D",16,"^2E",1073,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",60,"^2E",1073,"^O","map__38849"],["^ ","^2D",75,"^2E",1073],["^ ","^2D",12,"^2E",1074],["^ ","^2D",12,"^2E",1074,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",56,"^2E",1074,"^O","map__38849"],["^ ","^2D",71,"^2E",1074],["^ ","^2D",24,"^2E",1075],["^ ","^2D",24,"^2E",1075,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",68,"^2E",1075,"^O","map__38849"],["^ ","^2D",83,"^2E",1075],["^ ","^2D",151,"^2E",1075],["^ ","^2D",16,"^2E",1076],["^ ","^2D",16,"^2E",1076,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",60,"^2E",1076,"^O","map__38849"],["^ ","^2D",75,"^2E",1076],["^ ","^2D",0,"^2E",1077],["^ ","^2D",0,"^2E",1077],["^ ","^2D",0,"^2E",1078],["^ ","^2D",0,"^2E",1079],["^ ","^2D",0,"^2E",1079],["^ ","^2D",6,"^2E",1079],["^ ","^2D",11,"^2E",1079,"^O","js/Error"],["^ ","^2D",17,"^2E",1079],["^ ","^2D",0,"^2E",1142],["^ ","^2D",0,"^2E",1142],["^ ","^2D",59,"^2E",1142],["^ ","^2D",0,"^2E",1144]],"~i9",[["^ ","^2D",0,"^2E",1048,"^O","fulcro.client.primitives/factory"],["^ ","^2D",0,"^2E",1065,"^O","fulcro.client.primitives/factory"],["^ ","^2D",0,"^2E",1069,"^O","fulcro.client.primitives/factory"],["^ ","^2D",0,"^2E",1142,"^O","fulcro.client.primitives/factory"]]],"~i843",["^ ","~i7",[["^ ","^2D",76,"^2E",1065,"^O","class"]],"^44",[["^ ","^2D",0,"^2E",1066],["^ ","^2D",77,"^2E",1066]],"^2J",[["^ ","^2D",7,"^2E",1066,"^O","fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$2"]],"^3Y",[["^ ","^2D",70,"^2E",1066,"^O","class"]]],"~i844",["^ ","~i7",[["^ ","^2D",76,"^2E",1069,"^O","class"]],"^3D",[["^ ","^2D",4,"^2E",1073,"^O","validator"]],"^30",[["^ ","^2D",4,"^2E",1074,"^O","keyfn"]],"^2F",[["^ ","^2D",4,"^2E",1075,"^O","instrument?"]],"^3F",[["^ ","^2D",4,"^2E",1076,"^O","qualifier"]]],"~i845",["^ ","^2M",[["^ ","^2D",4,"^2E",1072,"^O","opts"]]],"~i846",["^ ","^2G",[["^ ","^2D",3,"^2E",1077]],"^44",[["^ ","^2D",3,"^2E",1077,"^O","cljs.core/fn?"]],"^2O",[["^ ","^2D",23,"^2E",1077,"^O","class"]]],"~i847",["^ ","~i6",[["^ ","^2D",0,"^2E",1082],["^ ","^2D",1,"^2E",1139],["^ ","^2D",44,"^2E",1139],["^ ","^2D",107,"^2E",1139],["^ ","^2D",218,"^2E",1139]],"~i7",[["^ ","^2D",7,"^2E",1082,"^O","cljs.core/with-meta"]]],"~i848",["^ ","~i8",[["^ ","^2D",27,"^2E",1082],["^ ","^2D",0,"^2E",1085]],"^3H",[["^ ","^2D",67,"^2E",1084,"^O","props"],["^ ","^2D",57,"^2E",1121,"^O","props"],["^ ","^2D",68,"^2E",1128,"^O","props"],["^ ","^2D",4,"^2E",1131,"^O","props"],["^ ","^2D",58,"^2E",1133,"^O","props"]],"^2F",[["^ ","^2D",73,"^2E",1084,"^O","children"],["^ ","^2D",4,"^2E",1122,"^O","children"],["^ ","^2D",2,"^2E",1126,"^O","children"],["^ ","^2D",74,"^2E",1128,"^O","children"],["^ ","^2D",4,"^2E",1132,"^O","children"],["^ ","^2D",64,"^2E",1133,"^O","children"]]],"~i849",["^ ","^2I",[["^ ","^2D",0,"^2E",1085],["^ ","^2D",0,"^2E",1086],["^ ","^2D",0,"^2E",1087]],"^4X",[["^ ","^2D",3,"^2E",1085],["^ ","^2D",17,"^2E",1085]],"^3>",[["^ ","^2D",4,"^2E",1085,"^O","validator"]]],"~i850",["^ ","^3S",[["^ ","^2D",0,"^2E",1087],["^ ","^2D",0,"^2E",1088],["^ ","^2D",0,"^2E",1089],["^ ","^2D",0,"^2E",1089],["^ ","^2D",6,"^2E",1089],["^ ","^2D",11,"^2E",1089,"^O","js/Error"],["^ ","^2D",17,"^2E",1089]],"^4X",[["^ ","^2D",20,"^2E",1087]],"^3D",[["^ ","^2D",21,"^2E",1087,"^O","validator"],["^ ","^2D",63,"^2E",1087,"^O","validator"],["^ ","^2D",112,"^2E",1087,"^O","validator"]],"^30",[["^ ","^2D",103,"^2E",1087,"^O","props"],["^ ","^2D",132,"^2E",1087,"^O","props"]]],"~i851",["^ ","^2I",[["^ ","^2D",0,"^2E",1093]],"^44",[["^ ","^2D",20,"^2E",1093],["^ ","^2D",37,"^2E",1093,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",1094],["^ ","^2D",0,"^2E",1094],["^ ","^2D",20,"^2E",1094,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",1097,"^O","and__3938__auto__"]],"^35",[["^ ","^2D",57,"^2E",1093,"^O","fulcro.client.primitives/*instrument*"]],"^4Y",[["^ ","^2D",0,"^2E",1095,"^O","instrument?"]]],"~i852",["^ ","^3S",[["^ ","^2D",0,"^2E",1100],["^ ","^2D",4,"^2E",1100,"^O","G__38852"],["^ ","^2D",15,"^2E",1100],["^ ","^2D",58,"^2E",1100],["^ ","^2D",118,"^2E",1100],["^ ","^2D",188,"^2E",1100],["^ ","^2D",251,"^2E",1100],["^ ","^2D",0,"^2E",1101],["^ ","^2D",0,"^2E",1101],["^ ","^2D",166,"^2E",1101,"^O","G__38852"],["^ ","^2D",236,"^2E",1101,"^O","G__38852"]],"^2G",[["^ ","^2D",8,"^2E",1101,"^O","fulcro.client.primitives/*instrument*"],["^ ","^2D",88,"^2E",1101,"^O","fulcro.client.primitives/*instrument*"],["^ ","^2D",178,"^2E",1101,"^O","fulcro.client.primitives/*instrument*"]]],"~i853",["^ ","^3V",[["^ ","^2D",112,"^2E",1100,"^O","props"]]],"~i854",["^ ","^3V",[["^ ","^2D",179,"^2E",1100,"^O","children"]]],"~i855",["^ ","^3V",[["^ ","^2D",244,"^2E",1100,"^O","class"]]],"~i856",["^ ","^3V",[["^ ","^2D",308,"^2E",1100]],"^3>",[["^ ","^2D",308,"^2E",1100,"^O","fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$2"]],"^2C",[["^ ","^2D",371,"^2E",1100,"^O","class"]],"^2K",[["^ ","^2D",378,"^2E",1100],["^ ","^2D",429,"^2E",1100],["^ ","^2D",497,"^2E",1100]],"^2L",[["^ ","^2D",378,"^2E",1100,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^5C",[["^ ","^2D",424,"^2E",1100,"^O","opts"]]],"~i857",["^ ","^3S",[["^ ","^2D",0,"^2E",1103],["^ ","^2D",0,"^2E",1112]],"^2O",[["^ ","^2D",4,"^2E",1103,"^O","key"]],"^2P",[["^ ","^2D",10,"^2E",1103],["^ ","^2D",12,"^2E",1103]],"^2X",[["^ ","^2D",14,"^2E",1103],["^ ","^2D",24,"^2E",1103]],"^38",[["^ ","^2D",15,"^2E",1103,"^O","keyfn"]]],"~i858",["^ ","^3=",[["^ ","^2D",32,"^2E",1103]],"^3V",[["^ ","^2D",33,"^2E",1103,"^O","keyfn"],["^ ","^2D",71,"^2E",1103,"^O","keyfn"],["^ ","^2D",116,"^2E",1103,"^O","keyfn"]],"^30",[["^ ","^2D",107,"^2E",1103,"^O","props"],["^ ","^2D",132,"^2E",1103,"^O","props"]]],"~i859",["^ ","^3=",[["^ ","^2D",140,"^2E",1103]],"^3V",[["^ ","^2D",140,"^2E",1103,"^O","fulcro.client.primitives/compute-react-key"]],"^2M",[["^ ","^2D",183,"^2E",1103,"^O","class"]],"^3F",[["^ ","^2D",190,"^2E",1103,"^O","props"]]],"~i860",["^ ","^2O",[["^ ","^2D",4,"^2E",1104,"^O","ref"]],"^2P",[["^ ","^2D",10,"^2E",1104],["^ ","^2D",10,"^2E",1104]],"^4I",[["^ ","^2D",91,"^2E",1104,"^O","props"]]],"~i861",["^ ","^2O",[["^ ","^2D",4,"^2E",1105,"^O","ref"]],"^2P",[["^ ","^2D",14,"^2E",1105],["^ ","^2D",31,"^2E",1105,"^O","G__38853"],["^ ","^2D",0,"^2E",1106],["^ ","^2D",0,"^2E",1106],["^ ","^2D",0,"^2E",1107],["^ ","^2D",52,"^2E",1107,"^O","G__38853"],["^ ","^2D",0,"^2E",1109,"^O","G__38853"]],"^2X",[["^ ","^2D",42,"^2E",1105,"^O","ref"]],"^2C",[["^ ","^2D",3,"^2E",1106],["^ ","^2D",19,"^2E",1106,"^O","cljs.core/Keyword"]],"^2N",[["^ ","^2D",4,"^2E",1106,"^O","ref"]]],"~i862",["^ ","^44",[["^ ","^2D",0,"^2E",1112],["^ ","^2D",54,"^2E",1112]],"^2J",[["^ ","^2D",7,"^2E",1112,"^O","fulcro.client.primitives/create-element"]],"^2X",[["^ ","^2D",47,"^2E",1112,"^O","class"]]],"~i863",["^ ","^2K",[["^ ","^2D",158,"^2E",1112,"^O","key"]]],"~i864",["^ ","^2K",[["^ ","^2D",170,"^2E",1112,"^O","ref"]]],"~i865",["^ ","^2K",[["^ ","^2D",75,"^2E",1112,"^O","key"]]],"~i866",["^ ","^2K",[["^ ","^2D",457,"^2E",1112,"^O","props"]]],"~i867",["^ ","^2K",[["^ ","^2D",98,"^2E",1112]],"^2L",[["^ ","^2D",98,"^2E",1112,"^O","fulcro.client.primitives/query-id"]],"^5;",[["^ ","^2D",132,"^2E",1112,"^O","class"]],"^5F",[["^ ","^2D",139,"^2E",1112,"^O","qualifier"]]],"~i868",["^ ","^2K",[["^ ","^2D",200,"^2E",1112,"^O","fulcro.client.primitives/*reconciler*"]]],"~i869",["^ ","^2K",[["^ ","^2D",336,"^2E",1112,"^O","fulcro.client.primitives/*parent*"]]],"~i870",["^ ","^2K",[["^ ","^2D",481,"^2E",1112,"^O","fulcro.client.primitives/*shared*"]]],"~i871",["^ ","^2K",[["^ ","^2D",270,"^2E",1112,"^O","fulcro.client.primitives/*instrument*"]]],"~i872",["^ ","^2K",[["^ ","^2D",397,"^2E",1112,"^O","fulcro.client.primitives/*depth*"]]],"~i873",["^ ","^37",[["^ ","^2D",527,"^2E",1112],["^ ","^2D",544,"^2E",1112,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",1113],["^ ","^2D",0,"^2E",1113],["^ ","^2D",20,"^2E",1113,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",1114,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",1116]],"^4X",[["^ ","^2D",563,"^2E",1112]],"^3D",[["^ ","^2D",563,"^2E",1112,"^O","fulcro.util/force-children"]],"^2L",[["^ ","^2D",590,"^2E",1112,"^O","children"]]],"~i874",["^ ","^4X",[["^ ","^2D",100,"^2E",1139,"^O","class"]]],"~i875",["^ ","^4X",[["^ ","^2D",166,"^2E",1139]],"^3D",[["^ ","^2D",166,"^2E",1139,"^O","fulcro.client.primitives/query-id"]],"^2X",[["^ ","^2D",200,"^2E",1139,"^O","class"]],"^38",[["^ ","^2D",207,"^2E",1139,"^O","qualifier"]]],"~i876",["^ ","^4X",[["^ ","^2D",280,"^2E",1139,"^O","qualifier"]]],"~i878",["^ ","~i0",[["^ ","^2D",0,"^2E",1144],["^ ","^2D",0,"^2E",1144],["^ ","^2D",44,"^2E",1149],["^ ","^2D",96,"^2E",1149,"^O","var_args"],["^ ","^2D",0,"^2E",1150],["^ ","^2D",0,"^2E",1150],["^ ","^2D",4,"^2E",1150,"^O","G__38867"],["^ ","^2D",15,"^2E",1150],["^ ","^2D",15,"^2E",1150],["^ ","^2D",0,"^2E",1151],["^ ","^2D",0,"^2E",1151],["^ ","^2D",8,"^2E",1151,"^O","G__38867"],["^ ","^2D",5,"^2E",1152],["^ ","^2D",0,"^2E",1153],["^ ","^2D",7,"^2E",1153,"^O","fulcro.client.primitives/computed-factory"],["^ ","^2D",79,"^2E",1153],["^ ","^2D",80,"^2E",1153],["^ ","^2D",90,"^2E",1153],["^ ","^2D",5,"^2E",1156],["^ ","^2D",0,"^2E",1157],["^ ","^2D",7,"^2E",1157,"^O","fulcro.client.primitives/computed-factory"],["^ ","^2D",79,"^2E",1157],["^ ","^2D",80,"^2E",1157],["^ ","^2D",90,"^2E",1157],["^ ","^2D",96,"^2E",1157],["^ ","^2D",97,"^2E",1157],["^ ","^2D",107,"^2E",1157],["^ ","^2D",0,"^2E",1161],["^ ","^2D",6,"^2E",1161],["^ ","^2D",11,"^2E",1161,"^O","js/Error"],["^ ","^2D",17,"^2E",1161],["^ ","^2D",18,"^2E",1161],["^ ","^2D",80,"^2E",1161],["^ ","^2D",80,"^2E",1161],["^ ","^2D",0,"^2E",1166],["^ ","^2D",0,"^2E",1166],["^ ","^2D",74,"^2E",1166],["^ ","^2D",0,"^2E",1167],["^ ","^2D",0,"^2E",1170],["^ ","^2D",0,"^2E",1170],["^ ","^2D",74,"^2E",1170],["^ ","^2D",0,"^2E",1171],["^ ","^2D",0,"^2E",1198],["^ ","^2D",0,"^2E",1198],["^ ","^2D",68,"^2E",1198],["^ ","^2D",0,"^2E",1200]],"~i6",[["^ ","^2D",0,"^2E",1149,"^O","fulcro.client.primitives/computed-factory"],["^ ","^2D",0,"^2E",1166,"^O","fulcro.client.primitives/computed-factory"],["^ ","^2D",0,"^2E",1170,"^O","fulcro.client.primitives/computed-factory"],["^ ","^2D",0,"^2E",1198,"^O","fulcro.client.primitives/computed-factory"]]],"~i882",["^ ","~i4",[["^ ","^2D",85,"^2E",1166,"^O","class"]],"^2T",[["^ ","^2D",0,"^2E",1167],["^ ","^2D",86,"^2E",1167]],"^3S",[["^ ","^2D",7,"^2E",1167,"^O","fulcro.client.primitives.computed_factory.cljs$core$IFn$_invoke$arity$2"]],"^3H",[["^ ","^2D",79,"^2E",1167,"^O","class"]]],"~i883",["^ ","~i4",[["^ ","^2D",85,"^2E",1170,"^O","class"]],"^2I",[["^ ","^2D",92,"^2E",1170,"^O","options"]]],"~i884",["^ ","~i3",[["^ ","^2D",0,"^2E",1171],["^ ","^2D",0,"^2E",1172]],"~i9",[["^ ","^2D",4,"^2E",1171,"^O","factory"]],"^3K",[["^ ","^2D",14,"^2E",1171]],"^2O",[["^ ","^2D",14,"^2E",1171,"^O","fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$2"]],"^3>",[["^ ","^2D",77,"^2E",1171,"^O","class"]],"^4Y",[["^ ","^2D",84,"^2E",1171,"^O","options"]]],"~i885",["^ ","~i5",[["^ ","^2D",0,"^2E",1172],["^ ","^2D",0,"^2E",1176],["^ ","^2D",0,"^2E",1179]]],"~i886",["^ ","~i9",[["^ ","^2D",58,"^2E",1175,"^O","props"]],"^37",[["^ ","^2D",0,"^2E",1176],["^ ","^2D",81,"^2E",1176]],"^3K",[["^ ","^2D",7,"^2E",1176,"^O","fulcro$client$primitives$real_factory.cljs$core$IFn$_invoke$arity$2"]],"^2X",[["^ ","^2D",75,"^2E",1176,"^O","props"]]],"~i887",["^ ","~i9",[["^ ","^2D",58,"^2E",1178,"^O","props"],["^ ","^2D",49,"^2E",1182,"^O","props"],["^ ","^2D",58,"^2E",1185,"^O","props"],["^ ","^2D",58,"^2E",1187,"^O","props"]],"^2J",[["^ ","^2D",64,"^2E",1178,"^O","computed"],["^ ","^2D",55,"^2E",1182,"^O","computed"],["^ ","^2D",64,"^2E",1187,"^O","computed"]]],"~i888",["^ ","~i8",[["^ ","^2D",0,"^2E",1179],["^ ","^2D",4,"^2E",1179,"^O","G__38870"],["^ ","^2D",0,"^2E",1180],["^ ","^2D",0,"^2E",1180],["^ ","^2D",86,"^2E",1180,"^O","G__38870"],["^ ","^2D",116,"^2E",1180,"^O","G__38870"]],"~i9",[["^ ","^2D",8,"^2E",1180,"^O","factory"],["^ ","^2D",48,"^2E",1180,"^O","factory"],["^ ","^2D",98,"^2E",1180,"^O","factory"]],"^3K",[["^ ","^2D",15,"^2E",1179]],"^2O",[["^ ","^2D",16,"^2E",1179,"^O","computed"],["^ ","^2D",57,"^2E",1179,"^O","computed"],["^ ","^2D",114,"^2E",1179,"^O","computed"]],"^3L",[["^ ","^2D",96,"^2E",1179,"^O","props"],["^ ","^2D",133,"^2E",1179,"^O","props"]],"^48",[["^ ","^2D",102,"^2E",1179,"^O","computed"],["^ ","^2D",139,"^2E",1179,"^O","computed"]]],"~i890",["^ ","~i0",[["^ ","^2D",0,"^2E",1200],["^ ","^2D",45,"^2E",1203],["^ ","^2D",0,"^2E",1204]],"~i6",[["^ ","^2D",0,"^2E",1203,"^O","fulcro.client.primitives/denormalize-query"]]],"~i892",["^ ","~i3",[["^ ","^2D",98,"^2E",1203,"^O","state-map"]],"^2G",[["^ ","^2D",108,"^2E",1203,"^O","ID"]]],"~i893",["^ ","~i2",[["^ ","^2D",0,"^2E",1204],["^ ","^2D",0,"^2E",1207]],"~i8",[["^ ","^2D",4,"^2E",1204,"^O","get-stored-query"]],"^3V",[["^ ","^2D",23,"^2E",1204],["^ ","^2D",0,"^2E",1205]],"^2X",[["^ ","^2D",34,"^2E",1204,"^O","id"]],"^2C",[["^ ","^2D",0,"^2E",1205],["^ ","^2D",64,"^2E",1205],["^ ","^2D",147,"^2E",1205],["^ ","^2D",256,"^2E",1205]],"^3E",[["^ ","^2D",7,"^2E",1205,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^3A",[["^ ","^2D",54,"^2E",1205,"^O","state-map"]],"^5[",[["^ ","^2D",253,"^2E",1205,"^O","id"]]],"~i894",["^ ","~i4",[["^ ","^2D",0,"^2E",1207],["^ ","^2D",4,"^2E",1207,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",1208],["^ ","^2D",0,"^2E",1208],["^ ","^2D",20,"^2E",1208,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",1209],["^ ","^2D",0,"^2E",1209],["^ ","^2D",23,"^2E",1209,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",1210],["^ ","^2D",0,"^2E",1228]],"^2J",[["^ ","^2D",4,"^2E",1209,"^O","normalized-query"]],"^4Y",[["^ ","^2D",25,"^2E",1207]],"^48",[["^ ","^2D",25,"^2E",1207,"^O","get-stored-query"]],"^5;",[["^ ","^2D",42,"^2E",1207,"^O","ID"]]],"~i895",["^ ","~i6",[["^ ","^2D",0,"^2E",1210]],"~i7",[["^ ","^2D",7,"^2E",1210,"^O","clojure.walk/prewalk"]],"^2J",[["^ ","^2D",28,"^2E",1210],["^ ","^2D",0,"^2E",1212]],"^4X",[["^ ","^2D",18,"^2E",1211,"^O","ele"]]],"~i896",["^ ","^3K",[["^ ","^2D",0,"^2E",1212],["^ ","^2D",4,"^2E",1212,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1219],["^ ","^2D",0,"^2E",1219],["^ ","^2D",20,"^2E",1219,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1220],["^ ","^2D",8,"^2E",1220,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1221]],"^3>",[["^ ","^2D",4,"^2E",1220,"^O","q"]],"^4I",[["^ ","^2D",25,"^2E",1212],["^ ","^2D",42,"^2E",1212,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",1213],["^ ","^2D",0,"^2E",1213],["^ ","^2D",3,"^2E",1213,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",1216,"^O","and__3938__auto__"]],"^48",[["^ ","^2D",62,"^2E",1212]],"^3A",[["^ ","^2D",69,"^2E",1212,"^O","ele"]],"^5C",[["^ ","^2D",0,"^2E",1214]],"^2R",[["^ ","^2D",7,"^2E",1214,"^O","get-stored-query"]],"^61",[["^ ","^2D",24,"^2E",1214,"^O","ele"]]],"~i897",["^ ","^35",[["^ ","^2D",0,"^2E",1221,"^O","q"]]],"~i898",["^ ","^35",[["^ ","^2D",0,"^2E",1223,"^O","ele"]],"^3V",[["^ ","^2D",1,"^2E",1226,"^O","normalized-query"]]],"~i900",["^ ","~i0",[["^ ","^2D",0,"^2E",1231],["^ ","^2D",43,"^2E",1231],["^ ","^2D",0,"^2E",1232]],"~i6",[["^ ","^2D",0,"^2E",1231,"^O","fulcro.client.primitives/get-query-by-id"]],"^3Y",[["^ ","^2D",94,"^2E",1231,"^O","state-map"]],"^48",[["^ ","^2D",104,"^2E",1231,"^O","class"]],"^3W",[["^ ","^2D",111,"^2E",1231,"^O","queryid"]]],"~i901",["^ ","~i2",[["^ ","^2D",0,"^2E",1232],["^ ","^2D",0,"^2E",1239]],"~i8",[["^ ","^2D",4,"^2E",1232,"^O","query"]],"^44",[["^ ","^2D",12,"^2E",1232],["^ ","^2D",29,"^2E",1232,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",1233],["^ ","^2D",0,"^2E",1233],["^ ","^2D",20,"^2E",1233,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",1234,"^O","or__3949__auto__"]],"^2O",[["^ ","^2D",48,"^2E",1232]],"^35",[["^ ","^2D",48,"^2E",1232,"^O","fulcro.client.primitives/denormalize-query"]],"^2F",[["^ ","^2D",91,"^2E",1232,"^O","state-map"]],"^5C",[["^ ","^2D",101,"^2E",1232,"^O","queryid"]],"^5F",[["^ ","^2D",0,"^2E",1236]],"^2V",[["^ ","^2D",7,"^2E",1236,"^O","fulcro.client.primitives/get-static-query"]],"^6G",[["^ ","^2D",49,"^2E",1236,"^O","class"]]],"~i902",["^ ","~i4",[["^ ","^2D",0,"^2E",1239],["^ ","^2D",33,"^2E",1239],["^ ","^2D",76,"^2E",1239],["^ ","^2D",146,"^2E",1239]],"~i5",[["^ ","^2D",7,"^2E",1239,"^O","cljs.core/with-meta"]],"^2J",[["^ ","^2D",27,"^2E",1239,"^O","query"]],"^48",[["^ ","^2D",139,"^2E",1239,"^O","class"]]],"~i903",["^ ","^48",[["^ ","^2D",205,"^2E",1239,"^O","queryid"]]],"~i905",["^ ","~i0",[["^ ","^2D",0,"^2E",1241],["^ ","^2D",45,"^2E",1241],["^ ","^2D",0,"^2E",1242]],"~i6",[["^ ","^2D",0,"^2E",1241,"^O","fulcro.client.primitives/is-factory?"]]],"~i906",["^ ","~i3",[["^ ","^2D",98,"^2E",1241,"^O","class-or-factory"]]],"~i907",["^ ","~i2",[["^ ","^2D",0,"^2E",1242]],"~i7",[["^ ","^2D",9,"^2E",1242]],"~i8",[["^ ","^2D",9,"^2E",1242,"^O","cljs.core/fn?"]],"^3S",[["^ ","^2D",29,"^2E",1242,"^O","class-or-factory"]]],"~i908",["^ ","~i8",[["^ ","^2D",93,"^2E",1242,"^O","class-or-factory"]],"^3V",[["^ ","^2D",78,"^2E",1242,"^O","cljs.core/meta"]],"^2X",[["^ ","^2D",52,"^2E",1242],["^ ","^2D",78,"^2E",1242],["^ ","^2D",111,"^2E",1242]],"^30",[["^ ","^2D",52,"^2E",1242,"^O","cljs.core/contains?"]]],"~i910",["^ ","~i0",[["^ ","^2D",0,"^2E",1244],["^ ","^2D",51,"^2E",1244]],"^38",[["^ ","^2D",0,"^2E",1244,"^O","fulcro.client.primitives/*query-state*"]]],"~i912",["^ ","~i0",[["^ ","^2D",0,"^2E",1245],["^ ","^2D",40,"^2E",1248],["^ ","^2D",0,"^2E",1249],["^ ","^2D",0,"^2E",1249],["^ ","^2D",0,"^2E",1250],["^ ","^2D",0,"^2E",1251],["^ ","^2D",0,"^2E",1251],["^ ","^2D",6,"^2E",1251],["^ ","^2D",11,"^2E",1251,"^O","js/Error"],["^ ","^2D",17,"^2E",1251]],"~i7",[["^ ","^2D",0,"^2E",1248,"^O","fulcro.client.primitives/get-query-id"]]],"~i914",["^ ","~i3",[["^ ","^2D",88,"^2E",1248,"^O","component"]]],"~i915",["^ ","~i9",[["^ ","^2D",3,"^2E",1249]],"^2I",[["^ ","^2D",3,"^2E",1249,"^O","fulcro.client.primitives/component?"]],"^3D",[["^ ","^2D",45,"^2E",1249,"^O","component"]]],"~i916",["^ ","~i2",[["^ ","^2D",0,"^2E",1254],["^ ","^2D",61,"^2E",1254]],"~i3",[["^ ","^2D",7,"^2E",1254,"^O","fulcro.client.primitives/get-raw-react-prop"]],"^2P",[["^ ","^2D",51,"^2E",1254,"^O","component"]]],"~i919",["^ ","~i0",[["^ ","^2D",0,"^2E",1256],["^ ","^2D",0,"^2E",1256],["^ ","^2D",37,"^2E",1261],["^ ","^2D",82,"^2E",1261,"^O","var_args"],["^ ","^2D",0,"^2E",1262],["^ ","^2D",0,"^2E",1262],["^ ","^2D",4,"^2E",1262,"^O","G__38885"],["^ ","^2D",15,"^2E",1262],["^ ","^2D",15,"^2E",1262],["^ ","^2D",0,"^2E",1263],["^ ","^2D",0,"^2E",1263],["^ ","^2D",8,"^2E",1263,"^O","G__38885"],["^ ","^2D",5,"^2E",1264],["^ ","^2D",0,"^2E",1265],["^ ","^2D",7,"^2E",1265,"^O","fulcro.client.primitives/get-query"],["^ ","^2D",72,"^2E",1265],["^ ","^2D",73,"^2E",1265],["^ ","^2D",83,"^2E",1265],["^ ","^2D",5,"^2E",1268],["^ ","^2D",0,"^2E",1269],["^ ","^2D",7,"^2E",1269,"^O","fulcro.client.primitives/get-query"],["^ ","^2D",72,"^2E",1269],["^ ","^2D",73,"^2E",1269],["^ ","^2D",83,"^2E",1269],["^ ","^2D",89,"^2E",1269],["^ ","^2D",90,"^2E",1269],["^ ","^2D",100,"^2E",1269],["^ ","^2D",0,"^2E",1273],["^ ","^2D",6,"^2E",1273],["^ ","^2D",11,"^2E",1273,"^O","js/Error"],["^ ","^2D",17,"^2E",1273],["^ ","^2D",18,"^2E",1273],["^ ","^2D",80,"^2E",1273],["^ ","^2D",80,"^2E",1273],["^ ","^2D",0,"^2E",1278],["^ ","^2D",0,"^2E",1278],["^ ","^2D",67,"^2E",1278],["^ ","^2D",0,"^2E",1279],["^ ","^2D",0,"^2E",1282],["^ ","^2D",0,"^2E",1282],["^ ","^2D",67,"^2E",1282],["^ ","^2D",0,"^2E",1283],["^ ","^2D",0,"^2E",1304],["^ ","^2D",0,"^2E",1304],["^ ","^2D",61,"^2E",1304],["^ ","^2D",0,"^2E",1306]],"~i6",[["^ ","^2D",0,"^2E",1261,"^O","fulcro.client.primitives/get-query"],["^ ","^2D",0,"^2E",1278,"^O","fulcro.client.primitives/get-query"],["^ ","^2D",0,"^2E",1282,"^O","fulcro.client.primitives/get-query"],["^ ","^2D",0,"^2E",1304,"^O","fulcro.client.primitives/get-query"]]],"~i923",["^ ","~i4",[["^ ","^2D",78,"^2E",1278,"^O","class-or-factory"]],"^2P",[["^ ","^2D",0,"^2E",1279]],"^3Y",[["^ ","^2D",7,"^2E",1279,"^O","fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2"]],"^48",[["^ ","^2D",72,"^2E",1279,"^O","class-or-factory"]],"^5;",[["^ ","^2D",89,"^2E",1279,"^O","fulcro.client.primitives/*query-state*"]]],"~i924",["^ ","~i4",[["^ ","^2D",78,"^2E",1282,"^O","class-or-factory"]],"^3D",[["^ ","^2D",95,"^2E",1282,"^O","state-map"]]],"~i925",["^ ","~i3",[["^ ","^2D",0,"^2E",1283],["^ ","^2D",4,"^2E",1283,"^O","*query-state*38886"],["^ ","^2D",0,"^2E",1284],["^ ","^2D",0,"^2E",1284],["^ ","^2D",0,"^2E",1286],["^ ","^2D",4,"^2E",1286],["^ ","^2D",10,"^2E",1301],["^ ","^2D",10,"^2E",1301],["^ ","^2D",61,"^2E",1301,"^O","*query-state*38886"]],"^2G",[["^ ","^2D",35,"^2E",1283,"^O","fulcro.client.primitives/*query-state*"],["^ ","^2D",0,"^2E",1284,"^O","fulcro.client.primitives/*query-state*"],["^ ","^2D",10,"^2E",1301,"^O","fulcro.client.primitives/*query-state*"]],"^3L",[["^ ","^2D",51,"^2E",1284,"^O","state-map"]]],"~i926",["^ ","~i5",[["^ ","^2D",4,"^2E",1286],["^ ","^2D",0,"^2E",1290]],"^2T",[["^ ","^2D",8,"^2E",1286,"^O","class"]],"^3D",[["^ ","^2D",17,"^2E",1286],["^ ","^2D",217,"^2E",1286],["^ ","^2D",334,"^2E",1286]]],"~i927",["^ ","^3Y",[["^ ","^2D",35,"^2E",1286]],"^3=",[["^ ","^2D",35,"^2E",1286,"^O","fulcro.client.primitives/is-factory?"]],"^38",[["^ ","^2D",78,"^2E",1286,"^O","class-or-factory"]],"^4E",[["^ ","^2D",97,"^2E",1286],["^ ","^2D",97,"^2E",1286],["^ ","^2D",183,"^2E",1286]],"^4J",[["^ ","^2D",198,"^2E",1286,"^O","class-or-factory"]],"^32",[["^ ","^2D",183,"^2E",1286,"^O","cljs.core/meta"]]],"~i928",["^ ","^3Y",[["^ ","^2D",219,"^2E",1286]],"^3=",[["^ ","^2D",219,"^2E",1286,"^O","fulcro.client.primitives/component?"]],"^3E",[["^ ","^2D",261,"^2E",1286,"^O","class-or-factory"]],"^2S",[["^ ","^2D",280,"^2E",1286]],"^4E",[["^ ","^2D",280,"^2E",1286,"^O","fulcro.client.primitives/react-type"]],"^61",[["^ ","^2D",316,"^2E",1286,"^O","class-or-factory"]]],"~i929",["^ ","^3H",[["^ ","^2D",334,"^2E",1286,"^O","class-or-factory"]]],"~i930",["^ ","^2T",[["^ ","^2D",4,"^2E",1288,"^O","qualifier"]],"^3D",[["^ ","^2D",16,"^2E",1288],["^ ","^2D",222,"^2E",1288]],"^3V",[["^ ","^2D",34,"^2E",1288]],"^3>",[["^ ","^2D",34,"^2E",1288,"^O","fulcro.client.primitives/is-factory?"]],"^2H",[["^ ","^2D",77,"^2E",1288,"^O","class-or-factory"]]],"~i931",["^ ","^3Y",[["^ ","^2D",96,"^2E",1288],["^ ","^2D",96,"^2E",1288],["^ ","^2D",188,"^2E",1288]],"^3L",[["^ ","^2D",203,"^2E",1288,"^O","class-or-factory"]],"^2N",[["^ ","^2D",188,"^2E",1288,"^O","cljs.core/meta"]]],"~i933",["^ ","^2T",[["^ ","^2D",4,"^2E",1289,"^O","queryid"]],"^3D",[["^ ","^2D",14,"^2E",1289]],"^3V",[["^ ","^2D",16,"^2E",1289]],"^3>",[["^ ","^2D",16,"^2E",1289,"^O","fulcro.client.primitives/component?"]],"^2F",[["^ ","^2D",58,"^2E",1289,"^O","class-or-factory"]]],"~i934",["^ ","^3Y",[["^ ","^2D",77,"^2E",1289]],"^3=",[["^ ","^2D",77,"^2E",1289,"^O","fulcro.client.primitives/get-query-id"]],"^2F",[["^ ","^2D",115,"^2E",1289,"^O","class-or-factory"]]],"~i935",["^ ","^3Y",[["^ ","^2D",133,"^2E",1289]],"^3=",[["^ ","^2D",133,"^2E",1289,"^O","fulcro.client.primitives/query-id"]],"^48",[["^ ","^2D",167,"^2E",1289,"^O","class"]],"^3W",[["^ ","^2D",174,"^2E",1289,"^O","qualifier"]]],"~i936",["^ ","~i7",[["^ ","^2D",0,"^2E",1290],["^ ","^2D",0,"^2E",1297],["^ ","^2D",0,"^2E",1299]],"^2G",[["^ ","^2D",20,"^2E",1290],["^ ","^2D",37,"^2E",1290,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",1291],["^ ","^2D",0,"^2E",1291],["^ ","^2D",20,"^2E",1291,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",1294,"^O","and__3938__auto__"]],"^2O",[["^ ","^2D",57,"^2E",1290,"^O","class"]],"^3=",[["^ ","^2D",0,"^2E",1292]],"^3V",[["^ ","^2D",7,"^2E",1292,"^O","fulcro.client.primitives/has-query?"]],"^38",[["^ ","^2D",49,"^2E",1292,"^O","class"]]],"~i937",["^ ","~i9",[["^ ","^2D",0,"^2E",1297]],"^2I",[["^ ","^2D",7,"^2E",1297,"^O","fulcro.client.primitives/get-query-by-id"]],"^3>",[["^ ","^2D",48,"^2E",1297,"^O","state-map"]],"^38",[["^ ","^2D",58,"^2E",1297,"^O","class"]],"^3A",[["^ ","^2D",65,"^2E",1297,"^O","queryid"]]],"~i939",["^ ","~i0",[["^ ","^2D",0,"^2E",1306],["^ ","^2D",40,"^2E",1306],["^ ","^2D",0,"^2E",1307]],"~i6",[["^ ","^2D",0,"^2E",1306,"^O","fulcro.client.primitives/link-element"]],"^4X",[["^ ","^2D",88,"^2E",1306,"^O","element"]]],"~i940",["^ ","~i2",[["^ ","^2D",0,"^2E",1307]],"~i3",[["^ ","^2D",7,"^2E",1307,"^O","clojure.walk/prewalk"]],"^2T",[["^ ","^2D",28,"^2E",1307],["^ ","^2D",0,"^2E",1308]],"^38",[["^ ","^2D",98,"^2E",1307,"^O","ele"]]],"~i941",["^ ","^2G",[["^ ","^2D",0,"^2E",1308],["^ ","^2D",4,"^2E",1308,"^O","map__38895"],["^ ","^2D",4,"^2E",1309,"^O","map__38895"],["^ ","^2D",21,"^2E",1309],["^ ","^2D",23,"^2E",1309],["^ ","^2D",25,"^2E",1309],["^ ","^2D",27,"^2E",1309],["^ ","^2D",28,"^2E",1309,"^O","map__38895"],["^ ","^2D",42,"^2E",1309],["^ ","^2D",50,"^2E",1309],["^ ","^2D",52,"^2E",1309],["^ ","^2D",54,"^2E",1309],["^ ","^2D",55,"^2E",1309],["^ ","^2D",55,"^2E",1309,"^O","map__38895"],["^ ","^2D",104,"^2E",1309],["^ ","^2D",115,"^2E",1309],["^ ","^2D",116,"^2E",1309,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",1309],["^ ","^2D",148,"^2E",1309,"^O","map__38895"],["^ ","^2D",179,"^2E",1309],["^ ","^2D",184,"^2E",1309],["^ ","^2D",191,"^2E",1309],["^ ","^2D",199,"^2E",1309],["^ ","^2D",199,"^2E",1309,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",1309,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",1309,"^O","map__38895"],["^ ","^2D",276,"^2E",1309,"^O","map__38895"],["^ ","^2D",14,"^2E",1310],["^ ","^2D",14,"^2E",1310,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",58,"^2E",1310,"^O","map__38895"],["^ ","^2D",73,"^2E",1310],["^ ","^2D",0,"^2E",1311]],"^3L",[["^ ","^2D",4,"^2E",1310,"^O","queryid"]],"^2F",[["^ ","^2D",17,"^2E",1308]],"^2H",[["^ ","^2D",17,"^2E",1308,"^O","cljs.core/meta"]],"^2M",[["^ ","^2D",32,"^2E",1308,"^O","ele"]]],"~i942",["^ ","^2J",[["^ ","^2D",0,"^2E",1311]],"^35",[["^ ","^2D",20,"^2E",1311,"^O","queryid"]],"^3L",[["^ ","^2D",0,"^2E",1312,"^O","queryid"]],"^3E",[["^ ","^2D",0,"^2E",1314,"^O","ele"]],"^3A",[["^ ","^2D",3,"^2E",1316,"^O","element"]]],"~i944",["^ ","~i0",[["^ ","^2D",0,"^2E",1318],["^ ","^2D",0,"^2E",1318],["^ ","^2D",38,"^2E",1318],["^ ","^2D",84,"^2E",1318,"^O","var_args"],["^ ","^2D",0,"^2E",1319],["^ ","^2D",0,"^2E",1319],["^ ","^2D",4,"^2E",1319,"^O","args__4534__auto__"],["^ ","^2D",25,"^2E",1319],["^ ","^2D",0,"^2E",1320],["^ ","^2D",0,"^2E",1320],["^ ","^2D",4,"^2E",1320,"^O","len__4531__auto__"],["^ ","^2D",30,"^2E",1320],["^ ","^2D",30,"^2E",1320],["^ ","^2D",0,"^2E",1321],["^ ","^2D",0,"^2E",1321],["^ ","^2D",4,"^2E",1321,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",1321],["^ ","^2D",0,"^2E",1323],["^ ","^2D",0,"^2E",1323],["^ ","^2D",3,"^2E",1323],["^ ","^2D",4,"^2E",1323,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",1323,"^O","len__4531__auto__"],["^ ","^2D",0,"^2E",1324],["^ ","^2D",0,"^2E",1324],["^ ","^2D",0,"^2E",1324,"^O","args__4534__auto__"],["^ ","^2D",24,"^2E",1324],["^ ","^2D",25,"^2E",1324],["^ ","^2D",35,"^2E",1324,"^O","i__4532__auto__"],["^ ","^2D",0,"^2E",1326],["^ ","^2D",15,"^2E",1326],["^ ","^2D",16,"^2E",1326,"^O","i__4532__auto__"],["^ ","^2D",40,"^2E",1326],["^ ","^2D",0,"^2E",1330],["^ ","^2D",0,"^2E",1334],["^ ","^2D",4,"^2E",1334,"^O","argseq__4535__auto__"],["^ ","^2D",27,"^2E",1334],["^ ","^2D",29,"^2E",1334],["^ ","^2D",30,"^2E",1334],["^ ","^2D",36,"^2E",1334],["^ ","^2D",36,"^2E",1334,"^O","args__4534__auto__"],["^ ","^2D",64,"^2E",1334],["^ ","^2D",64,"^2E",1334],["^ ","^2D",69,"^2E",1334,"^O","cljs.core/IndexedSeq"],["^ ","^2D",90,"^2E",1334],["^ ","^2D",90,"^2E",1334,"^O","args__4534__auto__"],["^ ","^2D",115,"^2E",1334],["^ ","^2D",120,"^2E",1334],["^ ","^2D",124,"^2E",1334],["^ ","^2D",131,"^2E",1334],["^ ","^2D",0,"^2E",1335],["^ ","^2D",0,"^2E",1335],["^ ","^2D",7,"^2E",1335,"^O","fulcro.client.primitives/deep-merge"],["^ ","^2D",80,"^2E",1335,"^O","argseq__4535__auto__"],["^ ","^2D",0,"^2E",1338],["^ ","^2D",0,"^2E",1338],["^ ","^2D",0,"^2E",1338],["^ ","^2D",0,"^2E",1338,"^O","fulcro.client.primitives/deep-merge"],["^ ","^2D",75,"^2E",1338],["^ ","^2D",0,"^2E",1339],["^ ","^2D",0,"^2E",1339],["^ ","^2D",0,"^2E",1347],["^ ","^2D",0,"^2E",1347],["^ ","^2D",0,"^2E",1347,"^O","fulcro.client.primitives/deep-merge"],["^ ","^2D",62,"^2E",1347],["^ ","^2D",0,"^2E",1349],["^ ","^2D",0,"^2E",1350],["^ ","^2D",0,"^2E",1350],["^ ","^2D",0,"^2E",1350,"^O","fulcro.client.primitives/deep-merge"],["^ ","^2D",56,"^2E",1350],["^ ","^2D",67,"^2E",1350,"^O","seq38900"],["^ ","^2D",0,"^2E",1351],["^ ","^2D",0,"^2E",1351],["^ ","^2D",4,"^2E",1351,"^O","self__4519__auto__"],["^ ","^2D",25,"^2E",1351],["^ ","^2D",0,"^2E",1352],["^ ","^2D",0,"^2E",1352],["^ ","^2D",7,"^2E",1352,"^O","self__4519__auto__"],["^ ","^2D",63,"^2E",1352],["^ ","^2D",63,"^2E",1352,"^O","cljs.core/seq"],["^ ","^2D",77,"^2E",1352,"^O","seq38900"],["^ ","^2D",0,"^2E",1355]],"~i6",[["^ ","^2D",0,"^2E",1318,"^O","fulcro.client.primitives/deep-merge"]],"^4X",[["^ ","^2D",86,"^2E",1338,"^O","xs"]]],"~i946",["^ ","~i2",[["^ ","^2D",0,"^2E",1340]],"~i6",[["^ ","^2D",3,"^2E",1340]],"~i7",[["^ ","^2D",3,"^2E",1340,"^O","cljs.core/every?"]],"^44",[["^ ","^2D",26,"^2E",1340,"^O","cljs.core/map?"]],"^35",[["^ ","^2D",47,"^2E",1340,"^O","xs"]]],"~i947",["^ ","~i4",[["^ ","^2D",0,"^2E",1341]],"~i5",[["^ ","^2D",7,"^2E",1341,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$3"]],"^2T",[["^ ","^2D",53,"^2E",1341,"^O","cljs.core/merge-with"]],"^2P",[["^ ","^2D",74,"^2E",1341,"^O","fulcro.client.primitives/deep-merge"]],"^48",[["^ ","^2D",110,"^2E",1341,"^O","xs"]]],"~i948",["^ ","~i4",[["^ ","^2D",0,"^2E",1343]],"~i5",[["^ ","^2D",7,"^2E",1343,"^O","cljs.core/last"]],"^2I",[["^ ","^2D",22,"^2E",1343,"^O","xs"]]],"~i950",["^ ","~i0",[["^ ","^2D",0,"^2E",1355],["^ ","^2D",52,"^2E",1359],["^ ","^2D",0,"^2E",1360]],"~i6",[["^ ","^2D",0,"^2E",1359,"^O","fulcro.client.primitives/normalize-query-elements"]]],"~i953",["^ ","~i3",[["^ ","^2D",112,"^2E",1359,"^O","state-map"]],"^2G",[["^ ","^2D",122,"^2E",1359,"^O","query"]]],"~i954",["^ ","~i2",[["^ ","^2D",0,"^2E",1360]],"~i3",[["^ ","^2D",7,"^2E",1360,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^2I",[["^ ","^2D",54,"^2E",1360],["^ ","^2D",0,"^2E",1361]],"^2R",[["^ ","^2D",149,"^2E",1360,"^O","state"]],"^4E",[["^ ","^2D",155,"^2E",1360,"^O","ele"]]],"~i955",["^ ","^3S",[["^ ","^2D",0,"^2E",1361],["^ ","^2D",0,"^2E",1363]],"^2O",[["^ ","^2D",4,"^2E",1361,"^O","parameterized?"]],"^48",[["^ ","^2D",27,"^2E",1361]],"^2C",[["^ ","^2D",27,"^2E",1361,"^O","cljs.core/seq?"]],"^3W",[["^ ","^2D",48,"^2E",1361,"^O","ele"]]],"~i956",["^ ","^2O",[["^ ","^2D",4,"^2E",1362,"^O","raw-element"]],"^48",[["^ ","^2D",18,"^2E",1362]],"^2F",[["^ ","^2D",20,"^2E",1362,"^O","parameterized?"]],"^4<",[["^ ","^2D",42,"^2E",1362]],"^2S",[["^ ","^2D",42,"^2E",1362,"^O","cljs.core/first"]],"^4@",[["^ ","^2D",58,"^2E",1362,"^O","ele"]],"^2Y",[["^ ","^2D",63,"^2E",1362,"^O","ele"]]],"~i957",["^ ","^44",[["^ ","^2D",0,"^2E",1363],["^ ","^2D",0,"^2E",1381],["^ ","^2D",0,"^2E",1386]]],"~i958",["^ ","^37",[["^ ","^2D",3,"^2E",1363]],"^3K",[["^ ","^2D",3,"^2E",1363,"^O","fulcro.util/union?"]],"^3H",[["^ ","^2D",28,"^2E",1363,"^O","raw-element"]],"^3A",[["^ ","^2D",0,"^2E",1364],["^ ","^2D",0,"^2E",1367]],"^2R",[["^ ","^2D",4,"^2E",1364,"^O","union-alternates"]],"^33",[["^ ","^2D",23,"^2E",1364]],"^7F",[["^ ","^2D",23,"^2E",1364,"^O","cljs.core/first"]],"^3:",[["^ ","^2D",39,"^2E",1364]],"~i84",[["^ ","^2D",39,"^2E",1364,"^O","cljs.core/vals"]],"^3@",[["^ ","^2D",54,"^2E",1364,"^O","raw-element"]]],"~i959",["^ ","^2R",[["^ ","^2D",4,"^2E",1365,"^O","normalized-union-alternates"]],"^33",[["^ ","^2D",34,"^2E",1365],["^ ","^2D",79,"^2E",1365]],"^7F",[["^ ","^2D",34,"^2E",1365,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^3;",[["^ ","^2D",114,"^2E",1365]],"^3<",[["^ ","^2D",114,"^2E",1365,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^3B",[["^ ","^2D",158,"^2E",1365,"^O","fulcro.client.primitives/link-element"]],"^3R",[["^ ","^2D",196,"^2E",1365,"^O","union-alternates"]]],"~i960",["^ ","^2R",[["^ ","^2D",4,"^2E",1366,"^O","union-query-id"]],"^33",[["^ ","^2D",21,"^2E",1366],["^ ","^2D",21,"^2E",1366],["^ ","^2D",110,"^2E",1366]],"^36",[["^ ","^2D",125,"^2E",1366,"^O","union-alternates"]],"~i97",[["^ ","^2D",110,"^2E",1366,"^O","cljs.core/meta"]]],"~i961",["^ ","^2N",[["^ ","^2D",0,"^2E",1367],["^ ","^2D",0,"^2E",1368],["^ ","^2D",0,"^2E",1369],["^ ","^2D",0,"^2E",1369],["^ ","^2D",6,"^2E",1369],["^ ","^2D",11,"^2E",1369,"^O","js/Error"],["^ ","^2D",17,"^2E",1369],["^ ","^2D",18,"^2E",1369],["^ ","^2D",36,"^2E",1369],["^ ","^2D",93,"^2E",1369],["^ ","^2D",98,"^2E",1369]],"^4<",[["^ ","^2D",20,"^2E",1367,"^O","union-query-id"]]],"~i962",["^ ","^2N",[["^ ","^2D",0,"^2E",1372],["^ ","^2D",130,"^2E",1372],["^ ","^2D",173,"^2E",1372],["^ ","^2D",279,"^2E",1372],["^ ","^2D",342,"^2E",1372],["^ ","^2D",385,"^2E",1372],["^ ","^2D",469,"^2E",1372]],"^4>",[["^ ","^2D",7,"^2E",1372,"^O","fulcro.client.primitives.deep_merge.cljs$core$IFn$_invoke$arity$variadic"]]],"~i963",["^ ","^4J",[["^ ","^2D",327,"^2E",1372,"^O","union-query-id"]],"^39",[["^ ","^2D",441,"^2E",1372,"^O","normalized-union-alternates"]]],"~i964",["^ ","^39",[["^ ","^2D",519,"^2E",1372,"^O","union-query-id"]]],"~i965",["^ ","^2Q",[["^ ","^2D",552,"^2E",1372]],"^5C",[["^ ","^2D",552,"^2E",1372,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^4E",[["^ ","^2D",599,"^2E",1372],["^ ","^2D",130,"^2E",1373,"^O","p__38910"],["^ ","^2D",0,"^2E",1374],["^ ","^2D",0,"^2E",1374],["^ ","^2D",4,"^2E",1374,"^O","vec__38911"],["^ ","^2D",17,"^2E",1374,"^O","p__38910"],["^ ","^2D",8,"^2E",1375],["^ ","^2D",8,"^2E",1375,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",1375,"^O","vec__38911"],["^ ","^2D",63,"^2E",1375],["^ ","^2D",67,"^2E",1375],["^ ","^2D",15,"^2E",1376],["^ ","^2D",15,"^2E",1376,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",59,"^2E",1376,"^O","vec__38911"],["^ ","^2D",70,"^2E",1376],["^ ","^2D",74,"^2E",1376],["^ ","^2D",0,"^2E",1377]],"^3:",[["^ ","^2D",128,"^2E",1373,"^O","s"]],"^3<",[["^ ","^2D",4,"^2E",1375,"^O","_"]],"^3?",[["^ ","^2D",4,"^2E",1376,"^O","subquery"]]],"~i966",["^ ","^5F",[["^ ","^2D",0,"^2E",1377]],"^2V",[["^ ","^2D",8,"^2E",1377,"^O","fulcro.client.primitives/normalize-query"],["^ ","^2D",81,"^2E",1377,"^O","fulcro.client.primitives/normalize-query"],["^ ","^2D",166,"^2E",1377,"^O","fulcro.client.primitives/normalize-query"]],"^31",[["^ ","^2D",152,"^2E",1377,"^O","s"],["^ ","^2D",217,"^2E",1377,"^O","s"]],"^32",[["^ ","^2D",154,"^2E",1377,"^O","subquery"],["^ ","^2D",219,"^2E",1377,"^O","subquery"]],"^3<",[["^ ","^2D",1,"^2E",1379,"^O","state"]],"^3G",[["^ ","^2D",7,"^2E",1379,"^O","union-alternates"]]],"~i967",["^ ","^37",[["^ ","^2D",20,"^2E",1381]],"^3K",[["^ ","^2D",20,"^2E",1381,"^O","fulcro.util/join?"]],"^4I",[["^ ","^2D",44,"^2E",1381,"^O","raw-element"]],"^2L",[["^ ","^2D",0,"^2E",1382],["^ ","^2D",4,"^2E",1382,"^O","G__38916"],["^ ","^2D",4,"^2E",1383,"^O","G__38917"],["^ ","^2D",0,"^2E",1384],["^ ","^2D",0,"^2E",1384],["^ ","^2D",152,"^2E",1384,"^O","G__38916"],["^ ","^2D",161,"^2E",1384,"^O","G__38917"],["^ ","^2D",224,"^2E",1384,"^O","G__38916"],["^ ","^2D",233,"^2E",1384,"^O","G__38917"]],"^3A",[["^ ","^2D",8,"^2E",1384,"^O","fulcro.client.primitives/normalize-query"],["^ ","^2D",81,"^2E",1384,"^O","fulcro.client.primitives/normalize-query"],["^ ","^2D",173,"^2E",1384,"^O","fulcro.client.primitives/normalize-query"]],"^4J",[["^ ","^2D",15,"^2E",1382,"^O","state"]],"^2Y",[["^ ","^2D",15,"^2E",1383]],"^61",[["^ ","^2D",15,"^2E",1383,"^O","fulcro.util/join-value"]],"^39",[["^ ","^2D",38,"^2E",1383,"^O","raw-element"]]],"~i968",["^ ","^2P",[["^ ","^2D",0,"^2E",1386,"^O","state"]]],"~i969",["^ ","~i4",[["^ ","^2D",3,"^2E",1390,"^O","state-map"]],"^44",[["^ ","^2D",13,"^2E",1390,"^O","query"]]],"~i971",["^ ","~i0",[["^ ","^2D",0,"^2E",1392],["^ ","^2D",38,"^2E",1396],["^ ","^2D",0,"^2E",1397]],"~i6",[["^ ","^2D",0,"^2E",1396,"^O","fulcro.client.primitives/link-query"]]],"~i974",["^ ","~i3",[["^ ","^2D",84,"^2E",1396,"^O","query"]]],"~i975",["^ ","~i2",[["^ ","^2D",0,"^2E",1397]],"~i3",[["^ ","^2D",7,"^2E",1397,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"~i8",[["^ ","^2D",52,"^2E",1397,"^O","fulcro.client.primitives/link-element"]],"^3D",[["^ ","^2D",90,"^2E",1397,"^O","query"]]],"~i977",["^ ","~i0",[["^ ","^2D",0,"^2E",1399],["^ ","^2D",43,"^2E",1403],["^ ","^2D",0,"^2E",1404]],"~i6",[["^ ","^2D",0,"^2E",1403,"^O","fulcro.client.primitives/normalize-query"]]],"~i980",["^ ","~i3",[["^ ","^2D",94,"^2E",1403,"^O","state-map"]],"^2G",[["^ ","^2D",104,"^2E",1403,"^O","query"]]],"~i981",["^ ","~i2",[["^ ","^2D",0,"^2E",1404],["^ ","^2D",0,"^2E",1407]],"~i8",[["^ ","^2D",4,"^2E",1404,"^O","new-state"]],"^2O",[["^ ","^2D",16,"^2E",1404]],"^35",[["^ ","^2D",16,"^2E",1404,"^O","fulcro.client.primitives/normalize-query-elements"]],"^2N",[["^ ","^2D",66,"^2E",1404,"^O","state-map"]],"^4E",[["^ ","^2D",76,"^2E",1404,"^O","query"]]],"~i982",["^ ","~i8",[["^ ","^2D",4,"^2E",1405,"^O","new-state"]],"^2O",[["^ ","^2D",20,"^2E",1405]],"^2P",[["^ ","^2D",22,"^2E",1405],["^ ","^2D",173,"^2E",1405]],"^4I",[["^ ","^2D",23,"^2E",1405],["^ ","^2D",23,"^2E",1405]],"^3W",[["^ ","^2D",159,"^2E",1405,"^O","new-state"]]],"~i983",["^ ","^4X",[["^ ","^2D",180,"^2E",1405],["^ ","^2D",236,"^2E",1405],["^ ","^2D",342,"^2E",1405]],"^3D",[["^ ","^2D",180,"^2E",1405,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3L",[["^ ","^2D",226,"^2E",1405,"^O","new-state"]]],"~i984",["^ ","^4X",[["^ ","^2D",378,"^2E",1405,"^O","new-state"]]],"~i985",["^ ","~i8",[["^ ","^2D",4,"^2E",1406,"^O","top-query"]],"^2O",[["^ ","^2D",16,"^2E",1406]],"^35",[["^ ","^2D",16,"^2E",1406,"^O","fulcro.client.primitives/link-query"]],"^2X",[["^ ","^2D",52,"^2E",1406,"^O","query"]]],"~i986",["^ ","~i4",[["^ ","^2D",0,"^2E",1407],["^ ","^2D",4,"^2E",1407,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1415],["^ ","^2D",0,"^2E",1415],["^ ","^2D",20,"^2E",1415,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1416],["^ ","^2D",14,"^2E",1416,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1417]],"^2G",[["^ ","^2D",4,"^2E",1416,"^O","queryid"]],"^3D",[["^ ","^2D",25,"^2E",1407],["^ ","^2D",42,"^2E",1407,"^O","G__38925"],["^ ","^2D",4,"^2E",1408,"^O","G__38925"],["^ ","^2D",19,"^2E",1408],["^ ","^2D",21,"^2E",1408],["^ ","^2D",22,"^2E",1408,"^O","G__38925"],["^ ","^2D",34,"^2E",1408],["^ ","^2D",41,"^2E",1408],["^ ","^2D",46,"^2E",1408],["^ ","^2D",61,"^2E",1408,"^O","G__38925"],["^ ","^2D",0,"^2E",1409],["^ ","^2D",0,"^2E",1409],["^ ","^2D",3,"^2E",1409],["^ ","^2D",4,"^2E",1409,"^O","G__38925"],["^ ","^2D",20,"^2E",1409],["^ ","^2D",0,"^2E",1410],["^ ","^2D",0,"^2E",1412],["^ ","^2D",7,"^2E",1412],["^ ","^2D",96,"^2E",1412,"^O","G__38925"]],"^3H",[["^ ","^2D",53,"^2E",1407,"^O","query"]],"^3E",[["^ ","^2D",46,"^2E",1408,"^O","cljs.core/meta"]]],"~i987",["^ ","~i6",[["^ ","^2D",0,"^2E",1417],["^ ","^2D",130,"^2E",1417],["^ ","^2D",173,"^2E",1417],["^ ","^2D",279,"^2E",1417],["^ ","^2D",335,"^2E",1417],["^ ","^2D",378,"^2E",1417],["^ ","^2D",444,"^2E",1417]],"~i7",[["^ ","^2D",7,"^2E",1417,"^O","fulcro.client.primitives.deep_merge.cljs$core$IFn$_invoke$arity$variadic"]],"^2X",[["^ ","^2D",327,"^2E",1417,"^O","queryid"]],"^2Q",[["^ ","^2D",434,"^2E",1417,"^O","top-query"]],"^7U",[["^ ","^2D",494,"^2E",1417,"^O","queryid"]],"^2[",[["^ ","^2D",520,"^2E",1417,"^O","new-state"]]],"~i988",["^ ","~i6",[["^ ","^2D",0,"^2E",1419,"^O","new-state"]]],"~i990",["^ ","~i0",[["^ ","^2D",0,"^2E",1422],["^ ","^2D",43,"^2E",1427],["^ ","^2D",132,"^2E",1427,"^O","p__38931"],["^ ","^2D",0,"^2E",1428],["^ ","^2D",0,"^2E",1428],["^ ","^2D",4,"^2E",1428,"^O","map__38932"],["^ ","^2D",17,"^2E",1428,"^O","p__38931"],["^ ","^2D",4,"^2E",1429,"^O","map__38932"],["^ ","^2D",21,"^2E",1429],["^ ","^2D",23,"^2E",1429],["^ ","^2D",25,"^2E",1429],["^ ","^2D",27,"^2E",1429],["^ ","^2D",28,"^2E",1429,"^O","map__38932"],["^ ","^2D",42,"^2E",1429],["^ ","^2D",50,"^2E",1429],["^ ","^2D",52,"^2E",1429],["^ ","^2D",54,"^2E",1429],["^ ","^2D",55,"^2E",1429],["^ ","^2D",55,"^2E",1429,"^O","map__38932"],["^ ","^2D",104,"^2E",1429],["^ ","^2D",115,"^2E",1429],["^ ","^2D",116,"^2E",1429,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",1429],["^ ","^2D",148,"^2E",1429,"^O","map__38932"],["^ ","^2D",179,"^2E",1429],["^ ","^2D",184,"^2E",1429],["^ ","^2D",191,"^2E",1429],["^ ","^2D",199,"^2E",1429],["^ ","^2D",199,"^2E",1429,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",1429,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",1429,"^O","map__38932"],["^ ","^2D",276,"^2E",1429,"^O","map__38932"],["^ ","^2D",11,"^2E",1430,"^O","map__38932"],["^ ","^2D",12,"^2E",1431],["^ ","^2D",12,"^2E",1431,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",56,"^2E",1431,"^O","map__38932"],["^ ","^2D",71,"^2E",1431],["^ ","^2D",0,"^2E",1432]],"~i6",[["^ ","^2D",0,"^2E",1427,"^O","fulcro.client.primitives/set-query*"]]],"~i994",["^ ","~i3",[["^ ","^2D",94,"^2E",1427,"^O","state-map"]],"^2G",[["^ ","^2D",104,"^2E",1427,"^O","ui-factory-class-or-queryid"]],"^3F",[["^ ","^2D",4,"^2E",1431,"^O","query"]],"^7U",[["^ ","^2D",4,"^2E",1430,"^O","args"]]],"~i995",["^ ","~i2",[["^ ","^2D",0,"^2E",1432],["^ ","^2D",0,"^2E",1453]],"~i8",[["^ ","^2D",4,"^2E",1432,"^O","queryid"]],"^37",[["^ ","^2D",14,"^2E",1432],["^ ","^2D",55,"^2E",1432],["^ ","^2D",60,"^2E",1432],["^ ","^2D",139,"^2E",1432],["^ ","^2D",5,"^2E",1446]]],"~i996",["^ ","^2O",[["^ ","^2D",16,"^2E",1432],["^ ","^2D",48,"^2E",1432]],"^3=",[["^ ","^2D",17,"^2E",1432,"^O","ui-factory-class-or-queryid"]]],"~i997",["^ ","^2O",[["^ ","^2D",62,"^2E",1432]],"^3L",[["^ ","^2D",69,"^2E",1432,"^O","ui-factory-class-or-queryid"]],"^5F",[["^ ","^2D",111,"^2E",1432,"^O","ui-factory-class-or-queryid"]]],"~i998",["^ ","^2O",[["^ ","^2D",157,"^2E",1432],["^ ","^2D",174,"^2E",1432,"^O","G__38934"],["^ ","^2D",4,"^2E",1433,"^O","G__38934"],["^ ","^2D",19,"^2E",1433],["^ ","^2D",21,"^2E",1433],["^ ","^2D",22,"^2E",1433,"^O","G__38934"],["^ ","^2D",34,"^2E",1433],["^ ","^2D",41,"^2E",1433],["^ ","^2D",46,"^2E",1433],["^ ","^2D",61,"^2E",1433,"^O","G__38934"],["^ ","^2D",0,"^2E",1434],["^ ","^2D",0,"^2E",1434],["^ ","^2D",3,"^2E",1434],["^ ","^2D",4,"^2E",1434,"^O","G__38934"],["^ ","^2D",20,"^2E",1434],["^ ","^2D",0,"^2E",1435]],"^3>",[["^ ","^2D",185,"^2E",1432,"^O","ui-factory-class-or-queryid"]],"^4E",[["^ ","^2D",46,"^2E",1433,"^O","cljs.core/meta"]],"^4@",[["^ ","^2D",0,"^2E",1437],["^ ","^2D",33,"^2E",1437,"^O","G__38934"],["^ ","^2D",46,"^2E",1437]],"^7U",[["^ ","^2D",7,"^2E",1437,"^O","cljs.core/contains?"]],"^39",[["^ ","^2D",6,"^2E",1439],["^ ","^2D",23,"^2E",1439,"^O","G__38935"],["^ ","^2D",4,"^2E",1440,"^O","G__38935"],["^ ","^2D",19,"^2E",1440],["^ ","^2D",21,"^2E",1440],["^ ","^2D",22,"^2E",1440,"^O","G__38935"],["^ ","^2D",34,"^2E",1440],["^ ","^2D",41,"^2E",1440],["^ ","^2D",46,"^2E",1440],["^ ","^2D",61,"^2E",1440,"^O","G__38935"],["^ ","^2D",0,"^2E",1441],["^ ","^2D",0,"^2E",1441],["^ ","^2D",3,"^2E",1441],["^ ","^2D",4,"^2E",1441,"^O","G__38935"],["^ ","^2D",20,"^2E",1441],["^ ","^2D",0,"^2E",1442],["^ ","^2D",0,"^2E",1444],["^ ","^2D",7,"^2E",1444],["^ ","^2D",96,"^2E",1444,"^O","G__38935"]],"^3@",[["^ ","^2D",34,"^2E",1439,"^O","ui-factory-class-or-queryid"]],"~i117",[["^ ","^2D",46,"^2E",1440,"^O","cljs.core/meta"]]],"~i999",["^ ","^3H",[["^ ","^2D",5,"^2E",1446],["^ ","^2D",67,"^2E",1446]],"^2X",[["^ ","^2D",5,"^2E",1446,"^O","fulcro.client.primitives/query-id"]],"^3W",[["^ ","^2D",39,"^2E",1446,"^O","ui-factory-class-or-queryid"]]],"~i1000",["^ ","~i8",[["^ ","^2D",4,"^2E",1448,"^O","setq*"]],"^37",[["^ ","^2D",17,"^2E",1448],["^ ","^2D",0,"^2E",1450]],"^3D",[["^ ","^2D",18,"^2E",1449,"^O","state"]],"^4I",[["^ ","^2D",0,"^2E",1450]],"^3H",[["^ ","^2D",7,"^2E",1450,"^O","fulcro.client.primitives/normalize-query"]],"^4>",[["^ ","^2D",48,"^2E",1450],["^ ","^2D",101,"^2E",1450]],"^2Q",[["^ ","^2D",48,"^2E",1450,"^O","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^2S",[["^ ","^2D",95,"^2E",1450,"^O","state"]],"^6>",[["^ ","^2D",207,"^2E",1450,"^O","cljs.core/dissoc"]],"^33",[["^ ","^2D",224,"^2E",1450,"^O","queryid"]],"^3;",[["^ ","^2D",233,"^2E",1450],["^ ","^2D",305,"^2E",1450]],"^3<",[["^ ","^2D",233,"^2E",1450,"^O","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4"]],"^3M",[["^ ","^2D",283,"^2E",1450,"^O","query"]],"^3Q",[["^ ","^2D",289,"^2E",1450,"^O","cljs.core/assoc"]],"^=[",[["^ ","^2D",364,"^2E",1450,"^O","queryid"]]],"~i1001",["^ ","~i4",[["^ ","^2D",0,"^2E",1453]],"~i8",[["^ ","^2D",3,"^2E",1453]],"^3K",[["^ ","^2D",10,"^2E",1453,"^O","queryid"]]],"~i1002",["^ ","~i6",[["^ ","^2D",0,"^2E",1454],["^ ","^2D",4,"^2E",1454,"^O","G__38937"],["^ ","^2D",0,"^2E",1455],["^ ","^2D",0,"^2E",1455],["^ ","^2D",0,"^2E",1458,"^O","G__38937"]],"^44",[["^ ","^2D",15,"^2E",1454,"^O","state-map"]]],"~i1003",["^ ","~i8",[["^ ","^2D",3,"^2E",1455],["^ ","^2D",34,"^2E",1455]],"~i9",[["^ ","^2D",3,"^2E",1455,"^O","cljs.core/contains?"]],"^35",[["^ ","^2D",29,"^2E",1455,"^O","args"]],"^4Y",[["^ ","^2D",0,"^2E",1456],["^ ","^2D",18,"^2E",1456,"^O","G__38937"]],"^48",[["^ ","^2D",7,"^2E",1456,"^O","setq*"]]],"~i1004",["^ ","~i6",[["^ ","^2D",0,"^2E",1461]]],"~i1005",["^ ","~i8",[["^ ","^2D",0,"^2E",1461],["^ ","^2D",4,"^2E",1461],["^ ","^2D",4,"^2E",1461],["^ ","^2D",4,"^2E",1461,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",1461],["^ ","^2D",104,"^2E",1461],["^ ","^2D",158,"^2E",1461],["^ ","^2D",185,"^2E",1461],["^ ","^2D",237,"^2E",1461],["^ ","^2D",250,"^2E",1461],["^ ","^2D",355,"^2E",1461],["^ ","^2D",16,"^2E",1462],["^ ","^2D",19,"^2E",1462],["^ ","^2D",20,"^2E",1462,"^O","e38938"],["^ ","^2D",38,"^2E",1462,"^O","js/Error"],["^ ","^2D",0,"^2E",1463],["^ ","^2D",4,"^2E",1463,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",1463,"^O","e38938"],["^ ","^2D",0,"^2E",1464],["^ ","^2D",0,"^2E",1464],["^ ","^2D",0,"^2E",1464,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",1464],["^ ","^2D",100,"^2E",1464],["^ ","^2D",154,"^2E",1464],["^ ","^2D",181,"^2E",1464],["^ ","^2D",233,"^2E",1464],["^ ","^2D",246,"^2E",1464],["^ ","^2D",351,"^2E",1464],["^ ","^2D",404,"^2E",1464,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",1466],["^ ","^2D",0,"^2E",1466],["^ ","^2D",6,"^2E",1466,"^O","e38938"]]],"~i1006",["^ ","~i8",[["^ ","^2D",0,"^2E",1470,"^O","state-map"]]],"~i1008",["^ ","~i0",[["^ ","^2D",0,"^2E",1473],["^ ","^2D",39,"^2E",1478],["^ ","^2D",0,"^2E",1479]],"~i6",[["^ ","^2D",0,"^2E",1478,"^O","fulcro.client.primitives/gather-keys"]]],"~i1012",["^ ","~i3",[["^ ","^2D",86,"^2E",1478,"^O","query"]]],"~i1013",["^ ","~i2",[["^ ","^2D",0,"^2E",1479],["^ ","^2D",0,"^2E",1517],["^ ","^2D",0,"^2E",1520],["^ ","^2D",0,"^2E",1520]]],"~i1014",["^ ","~i4",[["^ ","^2D",3,"^2E",1479]],"~i5",[["^ ","^2D",3,"^2E",1479,"^O","cljs.core/vector?"]],"^2G",[["^ ","^2D",27,"^2E",1479,"^O","query"]],"^4X",[["^ ","^2D",0,"^2E",1480],["^ ","^2D",3,"^2E",1515]],"^3D",[["^ ","^2D",7,"^2E",1480,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^4I",[["^ ","^2D",54,"^2E",1480],["^ ","^2D",0,"^2E",1481]],"^2S",[["^ ","^2D",123,"^2E",1480,"^O","rv"]],"^5F",[["^ ","^2D",126,"^2E",1480,"^O","e"]]],"~i1015",["^ ","^2X",[["^ ","^2D",0,"^2E",1481],["^ ","^2D",0,"^2E",1484],["^ ","^2D",0,"^2E",1487],["^ ","^2D",0,"^2E",1490],["^ ","^2D",0,"^2E",1499],["^ ","^2D",0,"^2E",1508]]],"~i1016",["^ ","^4Y",[["^ ","^2D",3,"^2E",1481],["^ ","^2D",17,"^2E",1481,"^O","cljs.core/Keyword"]],"^3A",[["^ ","^2D",4,"^2E",1481,"^O","e"]],"^4>",[["^ ","^2D",0,"^2E",1482]],"^2Q",[["^ ","^2D",7,"^2E",1482,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^3Z",[["^ ","^2D",52,"^2E",1482,"^O","rv"]],"^4E",[["^ ","^2D",55,"^2E",1482,"^O","e"]]],"~i1017",["^ ","^4Y",[["^ ","^2D",3,"^2E",1484]],"^2F",[["^ ","^2D",5,"^2E",1484]],"^2H",[["^ ","^2D",5,"^2E",1484,"^O","fulcro.util/ident?"]],"^5;",[["^ ","^2D",30,"^2E",1484,"^O","e"]],"^2S",[["^ ","^2D",38,"^2E",1484],["^ ","^2D",83,"^2E",1484]],"^4E",[["^ ","^2D",38,"^2E",1484,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^4@",[["^ ","^2D",135,"^2E",1484]],"^7U",[["^ ","^2D",135,"^2E",1484,"^O","cljs.core/second"]],"^3[",[["^ ","^2D",152,"^2E",1484,"^O","e"]],"~i72",[["^ ","^2D",0,"^2E",1485]],"^31",[["^ ","^2D",7,"^2E",1485,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^:M",[["^ ","^2D",52,"^2E",1485,"^O","rv"]],"^39",[["^ ","^2D",55,"^2E",1485]],"~i82",[["^ ","^2D",55,"^2E",1485,"^O","cljs.core/first"]],"^3?",[["^ ","^2D",71,"^2E",1485,"^O","e"]]],"~i1018",["^ ","^4Y",[["^ ","^2D",3,"^2E",1487]],"^2F",[["^ ","^2D",5,"^2E",1487]],"^2H",[["^ ","^2D",5,"^2E",1487,"^O","cljs.core/list?"]],"^2N",[["^ ","^2D",27,"^2E",1487,"^O","e"]],"^5C",[["^ ","^2D",35,"^2E",1487],["^ ","^2D",66,"^2E",1487,"^O","cljs.core/Keyword"]],"^2V",[["^ ","^2D",36,"^2E",1487]],"^4J",[["^ ","^2D",36,"^2E",1487,"^O","cljs.core/first"]],"^2Y",[["^ ","^2D",52,"^2E",1487,"^O","e"]],"^6>",[["^ ","^2D",0,"^2E",1488]],"~i70",[["^ ","^2D",7,"^2E",1488,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^32",[["^ ","^2D",52,"^2E",1488,"^O","rv"]],"^:M",[["^ ","^2D",55,"^2E",1488]],"^34",[["^ ","^2D",55,"^2E",1488,"^O","cljs.core/first"]],"^3;",[["^ ","^2D",71,"^2E",1488,"^O","e"]]],"~i1019",["^ ","^4Y",[["^ ","^2D",20,"^2E",1490],["^ ","^2D",37,"^2E",1490,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",1491],["^ ","^2D",0,"^2E",1491],["^ ","^2D",20,"^2E",1491,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",1492],["^ ","^2D",0,"^2E",1494,"^O","and__3938__auto__"]],"^2F",[["^ ","^2D",57,"^2E",1490]],"^2H",[["^ ","^2D",57,"^2E",1490,"^O","fulcro.util/join?"]],"^3F",[["^ ","^2D",81,"^2E",1490,"^O","e"]],"^4<",[["^ ","^2D",9,"^2E",1492]],"^2S",[["^ ","^2D",9,"^2E",1492,"^O","fulcro.util/ident?"]],"^61",[["^ ","^2D",34,"^2E",1492]],"^2Z",[["^ ","^2D",34,"^2E",1492,"^O","fulcro.util/join-key"]],"^36",[["^ ","^2D",55,"^2E",1492,"^O","e"]],"^=;",[["^ ","^2D",64,"^2E",1492],["^ ","^2D",109,"^2E",1492]],"^3;",[["^ ","^2D",64,"^2E",1492,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3B",[["^ ","^2D",161,"^2E",1492],["^ ","^2D",178,"^2E",1492]],"^3J",[["^ ","^2D",199,"^2E",1492,"^O","e"]],"^3M",[["^ ","^2D",178,"^2E",1492,"^O","fulcro.util/join-key"]],"^45",[["^ ","^2D",161,"^2E",1492,"^O","cljs.core/second"]],"^4A",[["^ ","^2D",0,"^2E",1497]],"^4C",[["^ ","^2D",7,"^2E",1497,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^4K",[["^ ","^2D",52,"^2E",1497,"^O","rv"]],"^4N",[["^ ","^2D",55,"^2E",1497]],"^4O",[["^ ","^2D",55,"^2E",1497,"^O","cljs.core/first"]],"^4Q",[["^ ","^2D",71,"^2E",1497]],"^4R",[["^ ","^2D",71,"^2E",1497,"^O","fulcro.util/join-key"]],"~i151",[["^ ","^2D",92,"^2E",1497,"^O","e"]]],"~i1020",["^ ","^4Y",[["^ ","^2D",20,"^2E",1499],["^ ","^2D",37,"^2E",1499,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",1500],["^ ","^2D",0,"^2E",1500],["^ ","^2D",20,"^2E",1500,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",1503,"^O","and__3938__auto__"]],"^2F",[["^ ","^2D",57,"^2E",1499]],"^2H",[["^ ","^2D",57,"^2E",1499,"^O","fulcro.util/join?"]],"^3F",[["^ ","^2D",81,"^2E",1499,"^O","e"]],"^4<",[["^ ","^2D",0,"^2E",1501],["^ ","^2D",43,"^2E",1501,"^O","cljs.core/Keyword"]],"^2W",[["^ ","^2D",8,"^2E",1501]],"^5[",[["^ ","^2D",8,"^2E",1501,"^O","fulcro.util/join-key"]],"^7F",[["^ ","^2D",29,"^2E",1501,"^O","e"]],"^>@",[["^ ","^2D",0,"^2E",1506]],"^3:",[["^ ","^2D",7,"^2E",1506,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^3?",[["^ ","^2D",52,"^2E",1506,"^O","rv"]],"^3C",[["^ ","^2D",55,"^2E",1506]],"^3G",[["^ ","^2D",55,"^2E",1506,"^O","fulcro.util/join-key"]],"^3X",[["^ ","^2D",76,"^2E",1506,"^O","e"]]],"~i1021",["^ ","^2H",[["^ ","^2D",0,"^2E",1508,"^O","rv"]]],"~i1022",["^ ","^3>",[["^ ","^2D",37,"^2E",1515,"^O","query"]]],"~i1023",["^ ","~i4",[["^ ","^2D",3,"^2E",1517]],"~i5",[["^ ","^2D",3,"^2E",1517,"^O","cljs.core/map?"]],"^2I",[["^ ","^2D",24,"^2E",1517,"^O","query"]],"^3K",[["^ ","^2D",0,"^2E",1518],["^ ","^2D",21,"^2E",1518]],"^3D",[["^ ","^2D",36,"^2E",1518,"^O","query"]],"^3L",[["^ ","^2D",21,"^2E",1518,"^O","cljs.core/keys"]],"^4Y",[["^ ","^2D",7,"^2E",1518,"^O","cljs.core/set"]]],"~i1026",["^ ","~i0",[["^ ","^2D",0,"^2E",1525],["^ ","^2D",43,"^2E",1525],["^ ","^2D",0,"^2E",1526]],"~i7",[["^ ","^2D",0,"^2E",1525,"^O","fulcro.client.primitives/normalize*"]],"^35",[["^ ","^2D",94,"^2E",1525,"^O","query"]],"^3V",[["^ ","^2D",100,"^2E",1525,"^O","data"]],"^2X",[["^ ","^2D",105,"^2E",1525,"^O","refs"]],"^3E",[["^ ","^2D",110,"^2E",1525,"^O","union-seen"]]],"~i1027",["^ ","~i2",[["^ ","^2D",0,"^2E",1526],["^ ","^2D",0,"^2E",1529],["^ ","^2D",0,"^2E",1543],["^ ","^2D",0,"^2E",1546]]],"~i1028",["^ ","~i4",[["^ ","^2D",3,"^2E",1526],["^ ","^2D",48,"^2E",1526],["^ ","^2D",131,"^2E",1526]],"~i5",[["^ ","^2D",3,"^2E",1526,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3S",[["^ ","^2D",189,"^2E",1526,"^O","query"]],"^35",[["^ ","^2D",0,"^2E",1527,"^O","data"]]],"~i1031",["^ ","~i4",[["^ ","^2D",3,"^2E",1529]],"~i5",[["^ ","^2D",3,"^2E",1529,"^O","cljs.core/map?"]],"^2I",[["^ ","^2D",24,"^2E",1529,"^O","query"]]],"~i1032",["^ ","~i4",[["^ ","^2D",0,"^2E",1530],["^ ","^2D",0,"^2E",1532]],"^2I",[["^ ","^2D",4,"^2E",1530,"^O","class"]],"^3=",[["^ ","^2D",13,"^2E",1530],["^ ","^2D",13,"^2E",1530],["^ ","^2D",106,"^2E",1530]],"^4I",[["^ ","^2D",121,"^2E",1530,"^O","query"]],"^2C",[["^ ","^2D",106,"^2E",1530,"^O","cljs.core/meta"]]],"~i1033",["^ ","^2I",[["^ ","^2D",4,"^2E",1531,"^O","ident"]]],"~i1035",["^ ","^3V",[["^ ","^2D",12,"^2E",1531],["^ ","^2D",148,"^2E",1531],["^ ","^2D",226,"^2E",1531]],"^30",[["^ ","^2D",14,"^2E",1531],["^ ","^2D",16,"^2E",1531],["^ ","^2D",18,"^2E",1531],["^ ","^2D",29,"^2E",1531],["^ ","^2D",37,"^2E",1531],["^ ","^2D",39,"^2E",1531],["^ ","^2D",41,"^2E",1531],["^ ","^2D",52,"^2E",1531],["^ ","^2D",53,"^2E",1531,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",85,"^2E",1531],["^ ","^2D",128,"^2E",1531],["^ ","^2D",133,"^2E",1531],["^ ","^2D",140,"^2E",1531]],"^5;",[["^ ","^2D",19,"^2E",1531,"^O","class"],["^ ","^2D",85,"^2E",1531,"^O","class"]]],"~i1036",["^ ","^3L",[["^ ","^2D",148,"^2E",1531]],"^4I",[["^ ","^2D",148,"^2E",1531,"^O","fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2"]],"^2H",[["^ ","^2D",213,"^2E",1531,"^O","class"]],"^2N",[["^ ","^2D",220,"^2E",1531,"^O","data"]]],"~i1037",["^ ","~i6",[["^ ","^2D",0,"^2E",1532],["^ ","^2D",3,"^2E",1532]],"^44",[["^ ","^2D",5,"^2E",1532],["^ ","^2D",15,"^2E",1532]],"^4X",[["^ ","^2D",6,"^2E",1532,"^O","ident"]]],"~i1038",["^ ","~i8",[["^ ","^2D",0,"^2E",1533],["^ ","^2D",21,"^2E",1538]],"~i9",[["^ ","^2D",7,"^2E",1533,"^O","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4"]],"^35",[["^ ","^2D",57,"^2E",1533],["^ ","^2D",74,"^2E",1533,"^O","G__38959"],["^ ","^2D",4,"^2E",1534,"^O","G__38960"],["^ ","^2D",4,"^2E",1535,"^O","G__38961"],["^ ","^2D",4,"^2E",1536,"^O","G__38962"],["^ ","^2D",0,"^2E",1537],["^ ","^2D",0,"^2E",1537],["^ ","^2D",152,"^2E",1537,"^O","G__38959"],["^ ","^2D",161,"^2E",1537,"^O","G__38960"],["^ ","^2D",170,"^2E",1537,"^O","G__38961"],["^ ","^2D",179,"^2E",1537,"^O","G__38962"],["^ ","^2D",242,"^2E",1537,"^O","G__38959"],["^ ","^2D",251,"^2E",1537,"^O","G__38960"],["^ ","^2D",260,"^2E",1537,"^O","G__38961"],["^ ","^2D",269,"^2E",1537,"^O","G__38962"]],"^4X",[["^ ","^2D",8,"^2E",1537,"^O","fulcro.client.primitives/normalize*"],["^ ","^2D",81,"^2E",1537,"^O","fulcro.client.primitives/normalize*"],["^ ","^2D",191,"^2E",1537,"^O","fulcro.client.primitives/normalize*"]],"^30",[["^ ","^2D",85,"^2E",1533]],"^4Y",[["^ ","^2D",85,"^2E",1533,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^38",[["^ ","^2D",129,"^2E",1533,"^O","query"]],"^3A",[["^ ","^2D",135,"^2E",1533]],"^2M",[["^ ","^2D",135,"^2E",1533,"^O","cljs.core/first"]],"^3F",[["^ ","^2D",151,"^2E",1533,"^O","ident"]],"^2V",[["^ ","^2D",15,"^2E",1534,"^O","data"]],"^2W",[["^ ","^2D",15,"^2E",1535,"^O","refs"]],"^3[",[["^ ","^2D",15,"^2E",1536,"^O","union-seen"]]],"~i1039",["^ ","^2I",[["^ ","^2D",5,"^2E",1538,"^O","cljs.core/assoc"]],"^2P",[["^ ","^2D",118,"^2E",1538]],"^3Y",[["^ ","^2D",118,"^2E",1538,"^O","cljs.core/first"]],"^3H",[["^ ","^2D",134,"^2E",1538,"^O","ident"]]],"~i1040",["^ ","~i8",[["^ ","^2D",0,"^2E",1540]]],"~i1041",["^ ","^3=",[["^ ","^2D",6,"^2E",1540],["^ ","^2D",11,"^2E",1540,"^O","js/Error"],["^ ","^2D",17,"^2E",1540]]],"~i1043",["^ ","~i4",[["^ ","^2D",3,"^2E",1543]],"~i5",[["^ ","^2D",3,"^2E",1543,"^O","cljs.core/vector?"]],"^2G",[["^ ","^2D",27,"^2E",1543,"^O","data"]],"^35",[["^ ","^2D",0,"^2E",1544,"^O","data"]]],"~i1046",["^ ","~i4",[["^ ","^2D",0,"^2E",1546],["^ ","^2D",0,"^2E",1549]],"^2T",[["^ ","^2D",4,"^2E",1546,"^O","q"]],"^2G",[["^ ","^2D",8,"^2E",1546]],"^44",[["^ ","^2D",8,"^2E",1546,"^O","cljs.core/seq"]],"^2O",[["^ ","^2D",22,"^2E",1546,"^O","query"]],"^3V",[["^ ","^2D",4,"^2E",1547,"^O","ret"]],"^3H",[["^ ","^2D",10,"^2E",1547,"^O","data"]]],"~i1047",["^ ","~i6",[["^ ","^2D",0,"^2E",1549],["^ ","^2D",3,"^2E",1549]],"^44",[["^ ","^2D",5,"^2E",1549],["^ ","^2D",11,"^2E",1549]],"^4X",[["^ ","^2D",6,"^2E",1549,"^O","q"]]],"~i1048",["^ ","~i8",[["^ ","^2D",0,"^2E",1550],["^ ","^2D",0,"^2E",1551]],"^44",[["^ ","^2D",4,"^2E",1550,"^O","expr"]],"^35",[["^ ","^2D",11,"^2E",1550]],"^4X",[["^ ","^2D",11,"^2E",1550,"^O","cljs.core/first"]],"^3>",[["^ ","^2D",27,"^2E",1550,"^O","q"]]],"~i1049",["^ ","^2I",[["^ ","^2D",0,"^2E",1551]],"^44",[["^ ","^2D",20,"^2E",1551]],"^2J",[["^ ","^2D",20,"^2E",1551,"^O","fulcro.util/join?"]],"^3>",[["^ ","^2D",44,"^2E",1551,"^O","expr"]]],"~i1050",["^ ","^3S",[["^ ","^2D",0,"^2E",1552],["^ ","^2D",4,"^2E",1552,"^O","vec__38965"],["^ ","^2D",8,"^2E",1553],["^ ","^2D",8,"^2E",1553,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",1553,"^O","vec__38965"],["^ ","^2D",63,"^2E",1553],["^ ","^2D",67,"^2E",1553],["^ ","^2D",10,"^2E",1554],["^ ","^2D",10,"^2E",1554,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",1554,"^O","vec__38965"],["^ ","^2D",65,"^2E",1554],["^ ","^2D",69,"^2E",1554],["^ ","^2D",0,"^2E",1560]],"^35",[["^ ","^2D",4,"^2E",1553,"^O","k"]],"^3D",[["^ ","^2D",4,"^2E",1554,"^O","sel"]],"^3>",[["^ ","^2D",17,"^2E",1552]],"^3L",[["^ ","^2D",17,"^2E",1552,"^O","fulcro.util/join-entry"]],"^2M",[["^ ","^2D",40,"^2E",1552,"^O","expr"]]],"~i1051",["^ ","^2O",[["^ ","^2D",4,"^2E",1555,"^O","recursive?"]],"^2X",[["^ ","^2D",23,"^2E",1555]],"^30",[["^ ","^2D",23,"^2E",1555,"^O","fulcro.util/recursion?"]],"^5C",[["^ ","^2D",52,"^2E",1555,"^O","sel"]]],"~i1052",["^ ","^2O",[["^ ","^2D",4,"^2E",1556,"^O","union-entry"]],"^2X",[["^ ","^2D",18,"^2E",1556]],"^2C",[["^ ","^2D",20,"^2E",1556]],"^3E",[["^ ","^2D",20,"^2E",1556,"^O","fulcro.util/union?"]],"^5C",[["^ ","^2D",45,"^2E",1556,"^O","expr"]],"^2S",[["^ ","^2D",52,"^2E",1556,"^O","sel"]],"^2V",[["^ ","^2D",56,"^2E",1556,"^O","union-seen"]]],"~i1053",["^ ","^2O",[["^ ","^2D",4,"^2E",1557,"^O","sel"]],"^2X",[["^ ","^2D",14,"^2E",1557]],"^2C",[["^ ","^2D",16,"^2E",1557,"^O","recursive?"]]],"~i1054",["^ ","^4Y",[["^ ","^2D",34,"^2E",1557],["^ ","^2D",36,"^2E",1557]],"^2K",[["^ ","^2D",38,"^2E",1557],["^ ","^2D",53,"^2E",1557]],"^2Q",[["^ ","^2D",39,"^2E",1557,"^O","union-seen"]]],"~i1055",["^ ","^2C",[["^ ","^2D",61,"^2E",1557,"^O","union-seen"]]],"~i1056",["^ ","^2C",[["^ ","^2D",72,"^2E",1557,"^O","query"]]],"~i1057",["^ ","^4Y",[["^ ","^2D",79,"^2E",1557,"^O","sel"]]],"~i1058",["^ ","^2O",[["^ ","^2D",4,"^2E",1558,"^O","class"]],"^2X",[["^ ","^2D",13,"^2E",1558],["^ ","^2D",13,"^2E",1558],["^ ","^2D",106,"^2E",1558]],"^2C",[["^ ","^2D",121,"^2E",1558,"^O","sel"]],"^2H",[["^ ","^2D",106,"^2E",1558,"^O","cljs.core/meta"]]],"~i1059",["^ ","^2O",[["^ ","^2D",4,"^2E",1559,"^O","v"]],"^2X",[["^ ","^2D",8,"^2E",1559]],"^30",[["^ ","^2D",8,"^2E",1559,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3E",[["^ ","^2D",52,"^2E",1559,"^O","data"]],"^2K",[["^ ","^2D",57,"^2E",1559,"^O","k"]]],"~i1060",["^ ","^44",[["^ ","^2D",0,"^2E",1560],["^ ","^2D",0,"^2E",1567],["^ ","^2D",0,"^2E",1586],["^ ","^2D",0,"^2E",1642],["^ ","^2D",0,"^2E",1649]]],"~i1062",["^ ","^37",[["^ ","^2D",3,"^2E",1560]],"^3D",[["^ ","^2D",5,"^2E",1560,"^O","recursive?"]],"^4Y",[["^ ","^2D",27,"^2E",1560]],"^48",[["^ ","^2D",27,"^2E",1560,"^O","fulcro.util/ident?"]],"^4>",[["^ ","^2D",52,"^2E",1560,"^O","v"]],"^3F",[["^ ","^2D",0,"^2E",1561]],"^5F",[["^ ","^2D",15,"^2E",1561]],"^2V",[["^ ","^2D",15,"^2E",1561,"^O","cljs.core/next"]],"^2W",[["^ ","^2D",30,"^2E",1561,"^O","q"]],"^61",[["^ ","^2D",15,"^2E",1562,"^O","ret"]]],"~i1064",["^ ","^37",[["^ ","^2D",3,"^2E",1567]],"^3K",[["^ ","^2D",3,"^2E",1567,"^O","cljs.core/map?"]],"^2P",[["^ ","^2D",24,"^2E",1567,"^O","v"]]],"~i1065",["^ ","^37",[["^ ","^2D",0,"^2E",1568],["^ ","^2D",0,"^2E",1569]],"^2P",[["^ ","^2D",4,"^2E",1568,"^O","x"]],"^3=",[["^ ","^2D",8,"^2E",1568]],"^3V",[["^ ","^2D",9,"^2E",1568,"^O","fulcro.client.primitives/normalize*"],["^ ","^2D",82,"^2E",1568,"^O","fulcro.client.primitives/normalize*"],["^ ","^2D",183,"^2E",1568,"^O","fulcro.client.primitives/normalize*"]],"^38",[["^ ","^2D",153,"^2E",1568,"^O","sel"],["^ ","^2D",234,"^2E",1568,"^O","sel"]],"^2K",[["^ ","^2D",161,"^2E",1568,"^O","v"],["^ ","^2D",242,"^2E",1568,"^O","v"]],"^3A",[["^ ","^2D",163,"^2E",1568,"^O","refs"],["^ ","^2D",244,"^2E",1568,"^O","refs"]],"^5C",[["^ ","^2D",168,"^2E",1568,"^O","union-entry"],["^ ","^2D",249,"^2E",1568,"^O","union-entry"]]],"~i1066",["^ ","^2O",[["^ ","^2D",0,"^2E",1569],["^ ","^2D",3,"^2E",1569]],"^3>",[["^ ","^2D",5,"^2E",1569]],"^2X",[["^ ","^2D",7,"^2E",1569],["^ ","^2D",18,"^2E",1569]],"^38",[["^ ","^2D",8,"^2E",1569,"^O","class"]],"^2M",[["^ ","^2D",29,"^2E",1569]]],"~i1067",["^ ","^2V",[["^ ","^2D",31,"^2E",1569],["^ ","^2D",33,"^2E",1569],["^ ","^2D",35,"^2E",1569],["^ ","^2D",46,"^2E",1569],["^ ","^2D",54,"^2E",1569],["^ ","^2D",56,"^2E",1569],["^ ","^2D",58,"^2E",1569],["^ ","^2D",69,"^2E",1569],["^ ","^2D",70,"^2E",1569,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",102,"^2E",1569],["^ ","^2D",145,"^2E",1569],["^ ","^2D",150,"^2E",1569],["^ ","^2D",157,"^2E",1569]],"^33",[["^ ","^2D",36,"^2E",1569,"^O","class"],["^ ","^2D",102,"^2E",1569,"^O","class"]]],"~i1068",["^ ","^4X",[["^ ","^2D",0,"^2E",1570],["^ ","^2D",0,"^2E",1571]],"^3>",[["^ ","^2D",4,"^2E",1570,"^O","i"]]],"~i1069",["^ ","^2F",[["^ ","^2D",8,"^2E",1570]],"^2H",[["^ ","^2D",8,"^2E",1570,"^O","fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2"]],"^2R",[["^ ","^2D",73,"^2E",1570,"^O","class"]],"^4E",[["^ ","^2D",80,"^2E",1570,"^O","v"]]],"~i1070",["^ ","^2P",[["^ ","^2D",0,"^2E",1571],["^ ","^2D",83,"^2E",1571]],"^3Y",[["^ ","^2D",0,"^2E",1571,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic"]],"^3H",[["^ ","^2D",58,"^2E",1571,"^O","refs"]],"^2C",[["^ ","^2D",63,"^2E",1571,"^O","cljs.core/update-in"]],"^4>",[["^ ","^2D",166,"^2E",1571]],"^2Q",[["^ ","^2D",166,"^2E",1571,"^O","cljs.core/first"]],"^4<",[["^ ","^2D",182,"^2E",1571,"^O","i"]],"^2U",[["^ ","^2D",185,"^2E",1571]],"^5F",[["^ ","^2D",185,"^2E",1571,"^O","cljs.core/second"]],"^5[",[["^ ","^2D",202,"^2E",1571,"^O","i"]],"^3[",[["^ ","^2D",213,"^2E",1571,"^O","cljs.core/merge"]],"^31",[["^ ","^2D",279,"^2E",1571,"^O","x"]]],"~i1071",["^ ","^2P",[["^ ","^2D",0,"^2E",1573]],"^3H",[["^ ","^2D",15,"^2E",1573]],"^2X",[["^ ","^2D",15,"^2E",1573,"^O","cljs.core/next"]],"^3E",[["^ ","^2D",30,"^2E",1573,"^O","q"]],"^2H",[["^ ","^2D",15,"^2E",1574]],"^3W",[["^ ","^2D",15,"^2E",1574,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^4>",[["^ ","^2D",61,"^2E",1574,"^O","ret"]],"^3F",[["^ ","^2D",65,"^2E",1574,"^O","k"]],"^3Z",[["^ ","^2D",67,"^2E",1574,"^O","i"]]],"~i1072",["^ ","^4X",[["^ ","^2D",0,"^2E",1579]],"^3L",[["^ ","^2D",15,"^2E",1579]],"^4I",[["^ ","^2D",15,"^2E",1579,"^O","cljs.core/next"]],"^48",[["^ ","^2D",30,"^2E",1579,"^O","q"]],"^38",[["^ ","^2D",15,"^2E",1580]],"^2F",[["^ ","^2D",15,"^2E",1580,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2M",[["^ ","^2D",61,"^2E",1580,"^O","ret"]],"^5C",[["^ ","^2D",65,"^2E",1580,"^O","k"]],"^3F",[["^ ","^2D",67,"^2E",1580,"^O","x"]]],"~i1075",["^ ","^37",[["^ ","^2D",3,"^2E",1586]],"^3K",[["^ ","^2D",3,"^2E",1586,"^O","cljs.core/vector?"]],"^3V",[["^ ","^2D",27,"^2E",1586,"^O","v"]]],"~i1076",["^ ","^37",[["^ ","^2D",0,"^2E",1587],["^ ","^2D",0,"^2E",1592]],"^2P",[["^ ","^2D",4,"^2E",1587,"^O","xs"]],"^3V",[["^ ","^2D",9,"^2E",1587],["^ ","^2D",54,"^2E",1587]],"^3>",[["^ ","^2D",9,"^2E",1587,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"^2C",[["^ ","^2D",87,"^2E",1587],["^ ","^2D",131,"^2E",1587],["^ ","^2D",18,"^2E",1588,"^O","p1__38954#"],["^ ","^2D",0,"^2E",1589]],"^3E",[["^ ","^2D",87,"^2E",1587,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^2K",[["^ ","^2D",0,"^2E",1589],["^ ","^2D",160,"^2E",1589,"^O","p1__38954#"],["^ ","^2D",256,"^2E",1589,"^O","p1__38954#"]],"^2L",[["^ ","^2D",8,"^2E",1589,"^O","fulcro.client.primitives/normalize*"],["^ ","^2D",81,"^2E",1589,"^O","fulcro.client.primitives/normalize*"],["^ ","^2D",197,"^2E",1589,"^O","fulcro.client.primitives/normalize*"]],"^4<",[["^ ","^2D",152,"^2E",1589,"^O","sel"],["^ ","^2D",248,"^2E",1589,"^O","sel"]],"^4J",[["^ ","^2D",177,"^2E",1589,"^O","refs"],["^ ","^2D",273,"^2E",1589,"^O","refs"]],"^5[",[["^ ","^2D",182,"^2E",1589,"^O","union-entry"],["^ ","^2D",278,"^2E",1589,"^O","union-entry"]],"^7F",[["^ ","^2D",2,"^2E",1591,"^O","v"]]],"~i1077",["^ ","^2O",[["^ ","^2D",0,"^2E",1592],["^ ","^2D",3,"^2E",1592]],"^3>",[["^ ","^2D",5,"^2E",1592]],"^2X",[["^ ","^2D",7,"^2E",1592],["^ ","^2D",18,"^2E",1592]],"^38",[["^ ","^2D",8,"^2E",1592,"^O","class"]],"^2M",[["^ ","^2D",29,"^2E",1592]]],"~i1078",["^ ","^2V",[["^ ","^2D",31,"^2E",1592],["^ ","^2D",33,"^2E",1592],["^ ","^2D",35,"^2E",1592],["^ ","^2D",46,"^2E",1592],["^ ","^2D",54,"^2E",1592],["^ ","^2D",56,"^2E",1592],["^ ","^2D",58,"^2E",1592],["^ ","^2D",69,"^2E",1592],["^ ","^2D",70,"^2E",1592,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",102,"^2E",1592],["^ ","^2D",145,"^2E",1592],["^ ","^2D",150,"^2E",1592],["^ ","^2D",157,"^2E",1592]],"^33",[["^ ","^2D",36,"^2E",1592,"^O","class"],["^ ","^2D",102,"^2E",1592,"^O","class"]]],"~i1079",["^ ","^4X",[["^ ","^2D",0,"^2E",1593],["^ ","^2D",0,"^2E",1598]],"^3>",[["^ ","^2D",4,"^2E",1593,"^O","is"]],"^3H",[["^ ","^2D",9,"^2E",1593],["^ ","^2D",54,"^2E",1593]],"^2X",[["^ ","^2D",9,"^2E",1593,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"^2H",[["^ ","^2D",87,"^2E",1593],["^ ","^2D",131,"^2E",1593],["^ ","^2D",18,"^2E",1594,"^O","p1__38956#"],["^ ","^2D",0,"^2E",1595]],"^3W",[["^ ","^2D",87,"^2E",1593,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]]],"~i1080",["^ ","^2S",[["^ ","^2D",0,"^2E",1595],["^ ","^2D",79,"^2E",1595,"^O","p1__38956#"]],"^4E",[["^ ","^2D",7,"^2E",1595,"^O","fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2"]],"^2Y",[["^ ","^2D",72,"^2E",1595,"^O","class"]],"^32",[["^ ","^2D",2,"^2E",1597,"^O","xs"]]],"~i1081",["^ ","^2P",[["^ ","^2D",0,"^2E",1598]],"^3>",[["^ ","^2D",3,"^2E",1598]],"^3L",[["^ ","^2D",3,"^2E",1598,"^O","cljs.core/vector?"]],"^3E",[["^ ","^2D",27,"^2E",1598,"^O","sel"]]],"~i1082",["^ ","^3=",[["^ ","^2D",0,"^2E",1599],["^ ","^2D",0,"^2E",1600],["^ ","^2D",0,"^2E",1601]],"^2C",[["^ ","^2D",3,"^2E",1599]],"^3E",[["^ ","^2D",3,"^2E",1599,"^O","cljs.core/empty?"]],"^3A",[["^ ","^2D",26,"^2E",1599,"^O","is"]]],"~i1083",["^ ","^3>",[["^ ","^2D",0,"^2E",1601]],"^3L",[["^ ","^2D",0,"^2E",1601,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^48",[["^ ","^2D",51,"^2E",1601,"^O","refs"]]],"~i1084",["^ ","^4I",[["^ ","^2D",56,"^2E",1601],["^ ","^2D",0,"^2E",1603]],"^48",[["^ ","^2D",18,"^2E",1602,"^O","refs"]]],"~i1085",["^ ","^2X",[["^ ","^2D",0,"^2E",1603]],"^30",[["^ ","^2D",7,"^2E",1603,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^2H",[["^ ","^2D",54,"^2E",1603],["^ ","^2D",20,"^2E",1604,"^O","p__38976"],["^ ","^2D",0,"^2E",1605],["^ ","^2D",0,"^2E",1605],["^ ","^2D",4,"^2E",1605,"^O","vec__38977"],["^ ","^2D",17,"^2E",1605,"^O","p__38976"],["^ ","^2D",8,"^2E",1606],["^ ","^2D",8,"^2E",1606,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",1606,"^O","vec__38977"],["^ ","^2D",63,"^2E",1606],["^ ","^2D",67,"^2E",1606],["^ ","^2D",8,"^2E",1607],["^ ","^2D",8,"^2E",1607,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",1607,"^O","vec__38977"],["^ ","^2D",63,"^2E",1607],["^ ","^2D",67,"^2E",1607],["^ ","^2D",0,"^2E",1608]],"^2M",[["^ ","^2D",18,"^2E",1604,"^O","m"]],"^2Q",[["^ ","^2D",4,"^2E",1606,"^O","i"]],"^2R",[["^ ","^2D",4,"^2E",1607,"^O","x"]]],"~i1086",["^ ","^2K",[["^ ","^2D",0,"^2E",1608]],"^2L",[["^ ","^2D",7,"^2E",1608,"^O","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^3Z",[["^ ","^2D",57,"^2E",1608,"^O","m"]],"^2S",[["^ ","^2D",59,"^2E",1608,"^O","i"]],"^2U",[["^ ","^2D",61,"^2E",1608,"^O","cljs.core/merge"]],"^4B",[["^ ","^2D",77,"^2E",1608,"^O","x"]]],"~i1087",["^ ","^4Y",[["^ ","^2D",1,"^2E",1610,"^O","refs"]],"^2F",[["^ ","^2D",10,"^2E",1610]],"^2H",[["^ ","^2D",10,"^2E",1610,"^O","cljs.core/zipmap"]],"^4>",[["^ ","^2D",27,"^2E",1610,"^O","is"]],"^2R",[["^ ","^2D",30,"^2E",1610,"^O","xs"]]],"~i1089",["^ ","^3=",[["^ ","^2D",0,"^2E",1615]],"^3V",[["^ ","^2D",0,"^2E",1615,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^30",[["^ ","^2D",51,"^2E",1615,"^O","refs"]]],"~i1090",["^ ","^3>",[["^ ","^2D",56,"^2E",1615],["^ ","^2D",0,"^2E",1617]],"^30",[["^ ","^2D",18,"^2E",1616,"^O","refs'"]]],"~i1091",["^ ","^4I",[["^ ","^2D",0,"^2E",1617]],"^3H",[["^ ","^2D",7,"^2E",1617,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]]],"~i1092",["^ ","^2X",[["^ ","^2D",54,"^2E",1617],["^ ","^2D",26,"^2E",1618,"^O","p__38982"],["^ ","^2D",0,"^2E",1619],["^ ","^2D",0,"^2E",1619],["^ ","^2D",4,"^2E",1619,"^O","vec__38983"],["^ ","^2D",17,"^2E",1619,"^O","p__38982"],["^ ","^2D",8,"^2E",1620],["^ ","^2D",8,"^2E",1620,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",1620,"^O","vec__38983"],["^ ","^2D",63,"^2E",1620],["^ ","^2D",67,"^2E",1620],["^ ","^2D",8,"^2E",1621],["^ ","^2D",8,"^2E",1621,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",1621,"^O","vec__38983"],["^ ","^2D",63,"^2E",1621],["^ ","^2D",67,"^2E",1621],["^ ","^2D",0,"^2E",1622]],"^3E",[["^ ","^2D",18,"^2E",1618,"^O","ret"]],"^2K",[["^ ","^2D",4,"^2E",1620,"^O","i"]],"^3A",[["^ ","^2D",4,"^2E",1621,"^O","x"]]],"~i1093",["^ ","^4Y",[["^ ","^2D",0,"^2E",1622]],"^48",[["^ ","^2D",7,"^2E",1622,"^O","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^2M",[["^ ","^2D",57,"^2E",1622,"^O","ret"]],"^5C",[["^ ","^2D",65,"^2E",1622,"^O","i"]],"^3F",[["^ ","^2D",67,"^2E",1622,"^O","cljs.core/merge"]],"^2U",[["^ ","^2D",83,"^2E",1622,"^O","x"]]],"~i1094",["^ ","^2X",[["^ ","^2D",1,"^2E",1624,"^O","refs'"]],"^38",[["^ ","^2D",19,"^2E",1624]],"^2F",[["^ ","^2D",19,"^2E",1624,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$3"]],"^2L",[["^ ","^2D",63,"^2E",1624,"^O","cljs.core/vector"]],"^2R",[["^ ","^2D",80,"^2E",1624,"^O","is"]],"^3Z",[["^ ","^2D",83,"^2E",1624,"^O","xs"]]],"~i1095",["^ ","^2P",[["^ ","^2D",0,"^2E",1629]],"^3H",[["^ ","^2D",15,"^2E",1629]],"^2X",[["^ ","^2D",15,"^2E",1629,"^O","cljs.core/next"]],"^3E",[["^ ","^2D",30,"^2E",1629,"^O","q"]],"^2H",[["^ ","^2D",15,"^2E",1630]],"^3W",[["^ ","^2D",15,"^2E",1630,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^4>",[["^ ","^2D",61,"^2E",1630,"^O","ret"]],"^3F",[["^ ","^2D",65,"^2E",1630,"^O","k"]],"^3Z",[["^ ","^2D",67,"^2E",1630,"^O","is"]]],"~i1096",["^ ","^4X",[["^ ","^2D",0,"^2E",1635]],"^3L",[["^ ","^2D",15,"^2E",1635]],"^4I",[["^ ","^2D",15,"^2E",1635,"^O","cljs.core/next"]],"^48",[["^ ","^2D",30,"^2E",1635,"^O","q"]],"^38",[["^ ","^2D",15,"^2E",1636]],"^2F",[["^ ","^2D",15,"^2E",1636,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2M",[["^ ","^2D",61,"^2E",1636,"^O","ret"]],"^5C",[["^ ","^2D",65,"^2E",1636,"^O","k"]],"^3F",[["^ ","^2D",67,"^2E",1636,"^O","xs"]]],"~i1099",["^ ","^37",[["^ ","^2D",3,"^2E",1642],["^ ","^2D",9,"^2E",1642]],"^2P",[["^ ","^2D",4,"^2E",1642,"^O","v"]]],"~i1100",["^ ","^37",[["^ ","^2D",0,"^2E",1643]],"^3Y",[["^ ","^2D",15,"^2E",1643]],"^3=",[["^ ","^2D",15,"^2E",1643,"^O","cljs.core/next"]],"^3H",[["^ ","^2D",30,"^2E",1643,"^O","q"]],"^4Y",[["^ ","^2D",15,"^2E",1644,"^O","ret"]]],"~i1103",["^ ","^2P",[["^ ","^2D",0,"^2E",1649]],"^3H",[["^ ","^2D",15,"^2E",1649]],"^2X",[["^ ","^2D",15,"^2E",1649,"^O","cljs.core/next"]],"^3E",[["^ ","^2D",30,"^2E",1649,"^O","q"]],"^2H",[["^ ","^2D",15,"^2E",1650]],"^3W",[["^ ","^2D",15,"^2E",1650,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^4>",[["^ ","^2D",61,"^2E",1650,"^O","ret"]],"^3F",[["^ ","^2D",65,"^2E",1650,"^O","k"]],"^3Z",[["^ ","^2D",67,"^2E",1650,"^O","v"]]],"~i1104",["^ ","^3S",[["^ ","^2D",0,"^2E",1660],["^ ","^2D",0,"^2E",1662]],"^2O",[["^ ","^2D",4,"^2E",1660,"^O","k"]],"^4X",[["^ ","^2D",8,"^2E",1660]],"^3=",[["^ ","^2D",10,"^2E",1660]],"^3V",[["^ ","^2D",10,"^2E",1660,"^O","cljs.core/seq?"]],"^2X",[["^ ","^2D",31,"^2E",1660,"^O","expr"]],"^38",[["^ ","^2D",38,"^2E",1660]],"^2F",[["^ ","^2D",38,"^2E",1660,"^O","cljs.core/first"]],"^2M",[["^ ","^2D",54,"^2E",1660,"^O","expr"]],"^3F",[["^ ","^2D",60,"^2E",1660,"^O","expr"]]],"~i1105",["^ ","^2O",[["^ ","^2D",4,"^2E",1661,"^O","v"]],"^4X",[["^ ","^2D",8,"^2E",1661]],"^3D",[["^ ","^2D",8,"^2E",1661,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3V",[["^ ","^2D",52,"^2E",1661,"^O","data"]],"^2X",[["^ ","^2D",57,"^2E",1661,"^O","k"]]],"~i1106",["^ ","^44",[["^ ","^2D",0,"^2E",1662]],"^2O",[["^ ","^2D",3,"^2E",1662],["^ ","^2D",9,"^2E",1662]],"^3=",[["^ ","^2D",4,"^2E",1662,"^O","v"]]],"~i1107",["^ ","^37",[["^ ","^2D",0,"^2E",1663]],"^3Y",[["^ ","^2D",15,"^2E",1663]],"^3=",[["^ ","^2D",15,"^2E",1663,"^O","cljs.core/next"]],"^3H",[["^ ","^2D",30,"^2E",1663,"^O","q"]],"^4Y",[["^ ","^2D",15,"^2E",1664,"^O","ret"]]],"~i1108",["^ ","^37",[["^ ","^2D",0,"^2E",1669]],"^3Y",[["^ ","^2D",15,"^2E",1669]],"^3=",[["^ ","^2D",15,"^2E",1669,"^O","cljs.core/next"]],"^3H",[["^ ","^2D",30,"^2E",1669,"^O","q"]],"^4Y",[["^ ","^2D",15,"^2E",1670]],"^48",[["^ ","^2D",15,"^2E",1670,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3W",[["^ ","^2D",61,"^2E",1670,"^O","ret"]],"^2M",[["^ ","^2D",65,"^2E",1670,"^O","k"]],"^4>",[["^ ","^2D",67,"^2E",1670,"^O","v"]]],"~i1109",["^ ","~i8",[["^ ","^2D",0,"^2E",1677,"^O","ret"]]],"~i1111",["^ ","~i0",[["^ ","^2D",0,"^2E",1686],["^ ","^2D",0,"^2E",1686],["^ ","^2D",39,"^2E",1693],["^ ","^2D",86,"^2E",1693,"^O","var_args"],["^ ","^2D",0,"^2E",1694],["^ ","^2D",0,"^2E",1694],["^ ","^2D",4,"^2E",1694,"^O","G__39023"],["^ ","^2D",15,"^2E",1694],["^ ","^2D",15,"^2E",1694],["^ ","^2D",0,"^2E",1695],["^ ","^2D",0,"^2E",1695],["^ ","^2D",8,"^2E",1695,"^O","G__39023"],["^ ","^2D",5,"^2E",1696],["^ ","^2D",0,"^2E",1697],["^ ","^2D",7,"^2E",1697,"^O","fulcro.client.primitives/tree->db"],["^ ","^2D",74,"^2E",1697],["^ ","^2D",75,"^2E",1697],["^ ","^2D",85,"^2E",1697],["^ ","^2D",91,"^2E",1697],["^ ","^2D",92,"^2E",1697],["^ ","^2D",102,"^2E",1697],["^ ","^2D",5,"^2E",1700],["^ ","^2D",0,"^2E",1701],["^ ","^2D",7,"^2E",1701,"^O","fulcro.client.primitives/tree->db"],["^ ","^2D",74,"^2E",1701],["^ ","^2D",75,"^2E",1701],["^ ","^2D",85,"^2E",1701],["^ ","^2D",91,"^2E",1701],["^ ","^2D",92,"^2E",1701],["^ ","^2D",102,"^2E",1701],["^ ","^2D",108,"^2E",1701],["^ ","^2D",109,"^2E",1701],["^ ","^2D",119,"^2E",1701],["^ ","^2D",0,"^2E",1705],["^ ","^2D",6,"^2E",1705],["^ ","^2D",11,"^2E",1705,"^O","js/Error"],["^ ","^2D",17,"^2E",1705],["^ ","^2D",18,"^2E",1705],["^ ","^2D",80,"^2E",1705],["^ ","^2D",80,"^2E",1705],["^ ","^2D",0,"^2E",1710],["^ ","^2D",0,"^2E",1710],["^ ","^2D",69,"^2E",1710],["^ ","^2D",0,"^2E",1711],["^ ","^2D",0,"^2E",1714],["^ ","^2D",0,"^2E",1714],["^ ","^2D",69,"^2E",1714],["^ ","^2D",0,"^2E",1715],["^ ","^2D",0,"^2E",1726],["^ ","^2D",0,"^2E",1726],["^ ","^2D",63,"^2E",1726],["^ ","^2D",0,"^2E",1728]],"~i6",[["^ ","^2D",0,"^2E",1693,"^O","fulcro.client.primitives/tree->db"],["^ ","^2D",0,"^2E",1710,"^O","fulcro.client.primitives/tree->db"],["^ ","^2D",0,"^2E",1714,"^O","fulcro.client.primitives/tree->db"],["^ ","^2D",0,"^2E",1726,"^O","fulcro.client.primitives/tree->db"]]],"~i1117",["^ ","~i4",[["^ ","^2D",80,"^2E",1710,"^O","x"]],"~i6",[["^ ","^2D",82,"^2E",1710,"^O","data"]]],"~i1118",["^ ","~i3",[["^ ","^2D",0,"^2E",1711],["^ ","^2D",81,"^2E",1711]],"~i4",[["^ ","^2D",7,"^2E",1711,"^O","fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3"]],"^2G",[["^ ","^2D",74,"^2E",1711,"^O","x"]],"^2J",[["^ ","^2D",76,"^2E",1711,"^O","data"]]],"~i1119",["^ ","~i4",[["^ ","^2D",80,"^2E",1714,"^O","x"]],"~i6",[["^ ","^2D",82,"^2E",1714,"^O","data"]],"^5C",[["^ ","^2D",87,"^2E",1714,"^O","merge-idents"]]],"~i1120",["^ ","~i3",[["^ ","^2D",0,"^2E",1715],["^ ","^2D",0,"^2E",1718]],"~i9",[["^ ","^2D",4,"^2E",1715,"^O","refs"]],"^44",[["^ ","^2D",11,"^2E",1715],["^ ","^2D",56,"^2E",1715]],"^2J",[["^ ","^2D",11,"^2E",1715,"^O","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i1121",["^ ","~i9",[["^ ","^2D",4,"^2E",1716,"^O","x"]],"^44",[["^ ","^2D",12,"^2E",1716]],"^2O",[["^ ","^2D",14,"^2E",1716]],"^35",[["^ ","^2D",14,"^2E",1716,"^O","cljs.core/vector?"]],"^3L",[["^ ","^2D",38,"^2E",1716,"^O","x"]],"^2X",[["^ ","^2D",42,"^2E",1716,"^O","x"]],"^4Y",[["^ ","^2D",44,"^2E",1716]],"^48",[["^ ","^2D",44,"^2E",1716,"^O","fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2"]],"^2M",[["^ ","^2D",109,"^2E",1716,"^O","x"]],"^4>",[["^ ","^2D",111,"^2E",1716,"^O","data"]]],"~i1122",["^ ","~i9",[["^ ","^2D",4,"^2E",1717,"^O","ret"]],"^44",[["^ ","^2D",10,"^2E",1717],["^ ","^2D",67,"^2E",1717]],"^2J",[["^ ","^2D",10,"^2E",1717,"^O","fulcro.client.primitives/normalize*"]],"^3>",[["^ ","^2D",51,"^2E",1717,"^O","x"]],"^4I",[["^ ","^2D",57,"^2E",1717,"^O","data"]],"^48",[["^ ","^2D",62,"^2E",1717,"^O","refs"]]],"~i1123",["^ ","~i5",[["^ ","^2D",0,"^2E",1718]],"~i9",[["^ ","^2D",3,"^2E",1718,"^O","merge-idents"]]],"~i1124",["^ ","~i7",[["^ ","^2D",0,"^2E",1719],["^ ","^2D",24,"^2E",1719],["^ ","^2D",24,"^2E",1719,"^O","cljs.core/deref"],["^ ","^2D",0,"^2E",1720]],"^2G",[["^ ","^2D",4,"^2E",1719,"^O","refs'"]],"^4X",[["^ ","^2D",40,"^2E",1719,"^O","refs"]],"^3>",[["^ ","^2D",0,"^2E",1720]],"^3L",[["^ ","^2D",7,"^2E",1720,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]],"^48",[["^ ","^2D",110,"^2E",1720,"^O","ret"]],"^2F",[["^ ","^2D",114,"^2E",1720,"^O","refs'"]]],"~i1125",["^ ","~i7",[["^ ","^2D",0,"^2E",1722],["^ ","^2D",31,"^2E",1722],["^ ","^2D",31,"^2E",1722,"^O","cljs.core/deref"]],"~i8",[["^ ","^2D",7,"^2E",1722,"^O","cljs.core/with-meta"]],"^2O",[["^ ","^2D",27,"^2E",1722,"^O","ret"]],"^3Y",[["^ ","^2D",47,"^2E",1722,"^O","refs"]]],"~i1128",["^ ","~i0",[["^ ","^2D",0,"^2E",1728],["^ ","^2D",40,"^2E",1728],["^ ","^2D",0,"^2E",1729]],"~i7",[["^ ","^2D",0,"^2E",1728,"^O","fulcro.client.primitives/focused-join"]],"^3D",[["^ ","^2D",88,"^2E",1728,"^O","expr"]],"^3>",[["^ ","^2D",93,"^2E",1728,"^O","ks"]],"^3H",[["^ ","^2D",96,"^2E",1728,"^O","full-expr"]],"^3W",[["^ ","^2D",106,"^2E",1728,"^O","union-expr"]]],"~i1129",["^ ","~i2",[["^ ","^2D",0,"^2E",1729],["^ ","^2D",0,"^2E",1740]],"~i8",[["^ ","^2D",4,"^2E",1729,"^O","expr-meta"]],"^2O",[["^ ","^2D",16,"^2E",1729]],"^35",[["^ ","^2D",16,"^2E",1729,"^O","cljs.core/meta"]],"^3=",[["^ ","^2D",31,"^2E",1729,"^O","expr"]]],"~i1130",["^ ","~i8",[["^ ","^2D",4,"^2E",1730,"^O","expr'"]],"^2O",[["^ ","^2D",24,"^2E",1730],["^ ","^2D",5,"^2E",1733],["^ ","^2D",80,"^2E",1738]]],"~i1131",["^ ","^4X",[["^ ","^2D",26,"^2E",1730]],"^3D",[["^ ","^2D",26,"^2E",1730,"^O","cljs.core/map?"]],"^3>",[["^ ","^2D",47,"^2E",1730,"^O","expr"]]],"~i1132",["^ ","^4X",[["^ ","^2D",54,"^2E",1730],["^ ","^2D",0,"^2E",1732],["^ ","^2D",0,"^2E",1732]],"^3>",[["^ ","^2D",71,"^2E",1730,"^O","join-value"]],"^2F",[["^ ","^2D",84,"^2E",1730],["^ ","^2D",101,"^2E",1730]],"^2L",[["^ ","^2D",117,"^2E",1730,"^O","expr"]],"^2Q",[["^ ","^2D",101,"^2E",1730,"^O","cljs.core/first"]],"^4<",[["^ ","^2D",84,"^2E",1730,"^O","cljs.core/second"]]],"~i1133",["^ ","^3>",[["^ ","^2D",4,"^2E",1731,"^O","join-value"]],"^2F",[["^ ","^2D",21,"^2E",1731]],"^2L",[["^ ","^2D",23,"^2E",1731]],"^2Q",[["^ ","^2D",25,"^2E",1731]],"^5C",[["^ ","^2D",25,"^2E",1731,"^O","fulcro.util/recursion?"]],"^5[",[["^ ","^2D",54,"^2E",1731,"^O","join-value"]]],"~i1134",["^ ","^2M",[["^ ","^2D",71,"^2E",1731]],"^2N",[["^ ","^2D",71,"^2E",1731,"^O","cljs.core/seq"]],"^2R",[["^ ","^2D",85,"^2E",1731,"^O","ks"]]],"~i1135",["^ ","^3W",[["^ ","^2D",92,"^2E",1731],["^ ","^2D",94,"^2E",1731]],"^5C",[["^ ","^2D",96,"^2E",1731],["^ ","^2D",111,"^2E",1731]],"^2S",[["^ ","^2D",97,"^2E",1731,"^O","union-expr"]]],"~i1136",["^ ","^2L",[["^ ","^2D",119,"^2E",1731,"^O","union-expr"]]],"~i1137",["^ ","^2L",[["^ ","^2D",130,"^2E",1731,"^O","full-expr"]]],"~i1138",["^ ","^3W",[["^ ","^2D",141,"^2E",1731,"^O","join-value"]]],"~i1139",["^ ","^3Y",[["^ ","^2D",55,"^2E",1732]],"^3=",[["^ ","^2D",55,"^2E",1732,"^O","cljs.core/ffirst"]],"^30",[["^ ","^2D",72,"^2E",1732,"^O","expr"]],"^2F",[["^ ","^2D",78,"^2E",1732],["^ ","^2D",245,"^2E",1732],["^ ","^2D",324,"^2E",1732]],"^2H",[["^ ","^2D",79,"^2E",1732,"^O","fulcro.client.primitives/focus-query*"],["^ ","^2D",154,"^2E",1732,"^O","fulcro.client.primitives/focus-query*"],["^ ","^2D",253,"^2E",1732,"^O","fulcro.client.primitives/focus-query*"]],"^3Z",[["^ ","^2D",227,"^2E",1732,"^O","join-value"],["^ ","^2D",306,"^2E",1732,"^O","join-value"]],"^2W",[["^ ","^2D",242,"^2E",1732,"^O","ks"],["^ ","^2D",321,"^2E",1732,"^O","ks"]]],"~i1141",["^ ","^4X",[["^ ","^2D",7,"^2E",1733]],"^3D",[["^ ","^2D",7,"^2E",1733,"^O","cljs.core/seq?"]],"^3>",[["^ ","^2D",28,"^2E",1733,"^O","expr"]],"^4Y",[["^ ","^2D",35,"^2E",1733],["^ ","^2D",40,"^2E",1733,"^O","cljs.core/List"],["^ ","^2D",55,"^2E",1733],["^ ","^2D",5,"^2E",1738],["^ ","^2D",10,"^2E",1738,"^O","cljs.core/List"],["^ ","^2D",25,"^2E",1738],["^ ","^2D",53,"^2E",1738],["^ ","^2D",58,"^2E",1738],["^ ","^2D",62,"^2E",1738],["^ ","^2D",69,"^2E",1738],["^ ","^2D",73,"^2E",1738]],"^2H",[["^ ","^2D",60,"^2E",1733],["^ ","^2D",77,"^2E",1733,"^O","G__39029"],["^ ","^2D",4,"^2E",1734,"^O","G__39030"],["^ ","^2D",4,"^2E",1735,"^O","G__39031"],["^ ","^2D",15,"^2E",1735],["^ ","^2D",4,"^2E",1736,"^O","G__39032"],["^ ","^2D",15,"^2E",1736],["^ ","^2D",0,"^2E",1737],["^ ","^2D",0,"^2E",1737],["^ ","^2D",146,"^2E",1737,"^O","G__39029"],["^ ","^2D",155,"^2E",1737,"^O","G__39030"],["^ ","^2D",164,"^2E",1737,"^O","G__39031"],["^ ","^2D",173,"^2E",1737,"^O","G__39032"],["^ ","^2D",233,"^2E",1737,"^O","G__39029"],["^ ","^2D",242,"^2E",1737,"^O","G__39030"],["^ ","^2D",251,"^2E",1737,"^O","G__39031"],["^ ","^2D",260,"^2E",1737,"^O","G__39032"]],"^3W",[["^ ","^2D",8,"^2E",1737,"^O","fulcro.client.primitives/focused-join"],["^ ","^2D",78,"^2E",1737,"^O","fulcro.client.primitives/focused-join"],["^ ","^2D",185,"^2E",1737,"^O","fulcro.client.primitives/focused-join"]],"^4<",[["^ ","^2D",88,"^2E",1733]],"^2S",[["^ ","^2D",88,"^2E",1733,"^O","cljs.core/first"]],"^4@",[["^ ","^2D",104,"^2E",1733,"^O","expr"]],"^61",[["^ ","^2D",15,"^2E",1734,"^O","ks"]],"^7F",[["^ ","^2D",30,"^2E",1738]],"^:M",[["^ ","^2D",30,"^2E",1738,"^O","cljs.core/second"]],"^3;",[["^ ","^2D",47,"^2E",1738,"^O","expr"]]],"~i1142",["^ ","^3>",[["^ ","^2D",80,"^2E",1738,"^O","expr"]]],"~i1143",["^ ","~i4",[["^ ","^2D",0,"^2E",1740],["^ ","^2D",4,"^2E",1740,"^O","G__39034"],["^ ","^2D",0,"^2E",1741],["^ ","^2D",0,"^2E",1741],["^ ","^2D",0,"^2E",1744,"^O","G__39034"]],"^3S",[["^ ","^2D",15,"^2E",1740,"^O","expr'"]]],"~i1144",["^ ","~i6",[["^ ","^2D",3,"^2E",1741],["^ ","^2D",5,"^2E",1741],["^ ","^2D",19,"^2E",1741]],"^2G",[["^ ","^2D",6,"^2E",1741,"^O","expr-meta"]],"^3=",[["^ ","^2D",0,"^2E",1742],["^ ","^2D",27,"^2E",1742,"^O","G__39034"]],"^3V",[["^ ","^2D",7,"^2E",1742,"^O","cljs.core/with-meta"]],"^3E",[["^ ","^2D",36,"^2E",1742,"^O","expr-meta"]]],"~i1146",["^ ","~i0",[["^ ","^2D",0,"^2E",1747],["^ ","^2D",45,"^2E",1747],["^ ","^2D",0,"^2E",1748]],"~i7",[["^ ","^2D",0,"^2E",1747,"^O","fulcro.client.primitives/focus-query*"]]],"~i1147",["^ ","~i3",[["^ ","^2D",98,"^2E",1747,"^O","query"]],"~i9",[["^ ","^2D",104,"^2E",1747,"^O","path"]],"^44",[["^ ","^2D",109,"^2E",1747,"^O","union-expr"]]],"~i1148",["^ ","~i2",[["^ ","^2D",0,"^2E",1748]],"~i6",[["^ ","^2D",3,"^2E",1748]],"~i7",[["^ ","^2D",3,"^2E",1748,"^O","cljs.core/empty?"]],"^44",[["^ ","^2D",26,"^2E",1748,"^O","path"]]],"~i1149",["^ ","~i4",[["^ ","^2D",0,"^2E",1749,"^O","query"]]],"~i1150",["^ ","~i4",[["^ ","^2D",0,"^2E",1751],["^ ","^2D",4,"^2E",1751,"^O","vec__39038"],["^ ","^2D",4,"^2E",1752,"^O","seq__39039"],["^ ","^2D",17,"^2E",1752],["^ ","^2D",17,"^2E",1752,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",1752,"^O","vec__39038"],["^ ","^2D",4,"^2E",1753,"^O","first__39040"],["^ ","^2D",19,"^2E",1753],["^ ","^2D",19,"^2E",1753,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",1753,"^O","seq__39039"],["^ ","^2D",4,"^2E",1754,"^O","seq__39039"],["^ ","^2D",21,"^2E",1754],["^ ","^2D",21,"^2E",1754,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",1754,"^O","seq__39039"],["^ ","^2D",8,"^2E",1755,"^O","first__39040"],["^ ","^2D",9,"^2E",1756,"^O","seq__39039"],["^ ","^2D",0,"^2E",1757]],"^2T",[["^ ","^2D",4,"^2E",1755,"^O","k"]],"^2J",[["^ ","^2D",4,"^2E",1756,"^O","ks"]],"^35",[["^ ","^2D",17,"^2E",1751,"^O","path"]]],"~i1151",["^ ","~i6",[["^ ","^2D",0,"^2E",1757],["^ ","^2D",12,"^2E",1757],["^ ","^2D",0,"^2E",1759],["^ ","^2D",12,"^2E",1762],["^ ","^2D",0,"^2E",1764],["^ ","^2D",0,"^2E",1767]],"^2P",[["^ ","^2D",68,"^2E",1758,"^O","x"]]],"~i1152",["^ ","^37",[["^ ","^2D",0,"^2E",1759]],"^3K",[["^ ","^2D",7,"^2E",1759,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^35",[["^ ","^2D",52,"^2E",1759,"^O","k"]],"^3D",[["^ ","^2D",54,"^2E",1759]],"^2P",[["^ ","^2D",54,"^2E",1759,"^O","fulcro.util/join-key"]],"^38",[["^ ","^2D",75,"^2E",1759,"^O","x"]]],"~i1153",["^ ","^2P",[["^ ","^2D",68,"^2E",1763,"^O","x"]]],"~i1154",["^ ","^37",[["^ ","^2D",0,"^2E",1764]],"^3K",[["^ ","^2D",7,"^2E",1764,"^O","fulcro.client.primitives/focused-join"]],"^2X",[["^ ","^2D",45,"^2E",1764,"^O","x"]],"^4Y",[["^ ","^2D",47,"^2E",1764,"^O","ks"]],"^3E",[["^ ","^2D",50,"^2E",1764,"^O","query"]],"^2L",[["^ ","^2D",56,"^2E",1764,"^O","union-expr"]]],"~i1155",["^ ","~i8",[["^ ","^2D",0,"^2E",1767],["^ ","^2D",0,"^2E",1768]],"^3S",[["^ ","^2D",3,"^2E",1767]],"^2G",[["^ ","^2D",3,"^2E",1767,"^O","cljs.core/map?"]],"^2O",[["^ ","^2D",24,"^2E",1767,"^O","query"]]],"~i1156",["^ ","^2T",[["^ ","^2D",55,"^2E",1768,"^O","k"]],"^2G",[["^ ","^2D",57,"^2E",1768],["^ ","^2D",74,"^2E",1768,"^O","G__39043"],["^ ","^2D",4,"^2E",1769,"^O","G__39044"],["^ ","^2D",4,"^2E",1770,"^O","G__39045"],["^ ","^2D",0,"^2E",1771],["^ ","^2D",0,"^2E",1771],["^ ","^2D",156,"^2E",1771,"^O","G__39043"],["^ ","^2D",165,"^2E",1771,"^O","G__39044"],["^ ","^2D",174,"^2E",1771,"^O","G__39045"],["^ ","^2D",239,"^2E",1771,"^O","G__39043"],["^ ","^2D",248,"^2E",1771,"^O","G__39044"],["^ ","^2D",257,"^2E",1771,"^O","G__39045"]],"^44",[["^ ","^2D",8,"^2E",1771,"^O","fulcro.client.primitives/focus-query*"],["^ ","^2D",83,"^2E",1771,"^O","fulcro.client.primitives/focus-query*"],["^ ","^2D",186,"^2E",1771,"^O","fulcro.client.primitives/focus-query*"]],"^3L",[["^ ","^2D",85,"^2E",1768]],"^4I",[["^ ","^2D",85,"^2E",1768,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^4Y",[["^ ","^2D",129,"^2E",1768,"^O","query"]],"^2H",[["^ ","^2D",135,"^2E",1768,"^O","k"]],"^2L",[["^ ","^2D",15,"^2E",1769,"^O","ks"]],"^2N",[["^ ","^2D",15,"^2E",1770,"^O","query"]]],"~i1157",["^ ","^2I",[["^ ","^2D",0,"^2E",1774],["^ ","^2D",52,"^2E",1774]],"^2T",[["^ ","^2D",7,"^2E",1774,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"^35",[["^ ","^2D",85,"^2E",1774]],"^4X",[["^ ","^2D",85,"^2E",1774,"^O","cljs.core.comp.cljs$core$IFn$_invoke$arity$3"]],"^3V",[["^ ","^2D",130,"^2E",1774]],"^3>",[["^ ","^2D",130,"^2E",1774,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^48",[["^ ","^2D",177,"^2E",1774,"^O","match"]],"^2K",[["^ ","^2D",184,"^2E",1774]],"^2L",[["^ ","^2D",184,"^2E",1774,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^4>",[["^ ","^2D",228,"^2E",1774,"^O","value"]],"^4<",[["^ ","^2D",235,"^2E",1774],["^ ","^2D",280,"^2E",1774]],"^2S",[["^ ","^2D",235,"^2E",1774,"^O","cljs.core.take.cljs$core$IFn$_invoke$arity$1"]],"^2W",[["^ ","^2D",286,"^2E",1774,"^O","query"]]],"~i1159",["^ ","~i0",[["^ ","^2D",0,"^2E",1778],["^ ","^2D",39,"^2E",1788],["^ ","^2D",0,"^2E",1789]],"~i6",[["^ ","^2D",0,"^2E",1788,"^O","fulcro.client.primitives/focus-query"]]],"~i1168",["^ ","~i3",[["^ ","^2D",86,"^2E",1788,"^O","query"]],"~i9",[["^ ","^2D",92,"^2E",1788,"^O","path"]]],"~i1169",["^ ","~i2",[["^ ","^2D",0,"^2E",1789],["^ ","^2D",61,"^2E",1789]],"~i3",[["^ ","^2D",7,"^2E",1789,"^O","fulcro.client.primitives/focus-query*"]],"^37",[["^ ","^2D",50,"^2E",1789,"^O","query"]],"^2P",[["^ ","^2D",56,"^2E",1789,"^O","path"]]],"~i1171",["^ ","~i0",[["^ ","^2D",0,"^2E",1791],["^ ","^2D",0,"^2E",1791]]],"~i1173",["^ ","~i0",[["^ ","^2D",0,"^2E",1791],["^ ","^2D",54,"^2E",1791],["^ ","^2D",0,"^2E",1792]],"~i7",[["^ ","^2D",0,"^2E",1791,"^O","fulcro.client.primitives/focus-subquery-union*"]]],"~i1174",["^ ","~i3",[["^ ","^2D",116,"^2E",1791,"^O","query-ast"]],"^2G",[["^ ","^2D",126,"^2E",1791,"^O","sub-ast"]]],"~i1175",["^ ","~i2",[["^ ","^2D",0,"^2E",1792],["^ ","^2D",0,"^2E",1795]],"~i8",[["^ ","^2D",4,"^2E",1792,"^O","s-index"]],"^37",[["^ ","^2D",14,"^2E",1792],["^ ","^2D",59,"^2E",1792]],"^3K",[["^ ","^2D",14,"^2E",1792,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"^3V",[["^ ","^2D",94,"^2E",1792],["^ ","^2D",138,"^2E",1792],["^ ","^2D",149,"^2E",1792,"^O","p1__39051#"],["^ ","^2D",0,"^2E",1793]],"^3>",[["^ ","^2D",94,"^2E",1792,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^30",[["^ ","^2D",0,"^2E",1793],["^ ","^2D",12,"^2E",1793,"^O","cljs.core/PersistentVector"],["^ ","^2D",39,"^2E",1793],["^ ","^2D",44,"^2E",1793],["^ ","^2D",46,"^2E",1793],["^ ","^2D",50,"^2E",1793],["^ ","^2D",50,"^2E",1793,"^O","cljs.core/PersistentVector"],["^ ","^2D",88,"^2E",1793],["^ ","^2D",200,"^2E",1793,"^O","p1__39051#"],["^ ","^2D",218,"^2E",1793]],"^3W",[["^ ","^2D",89,"^2E",1793],["^ ","^2D",89,"^2E",1793],["^ ","^2D",182,"^2E",1793,"^O","p1__39051#"]],"^4J",[["^ ","^2D",4,"^2E",1794],["^ ","^2D",4,"^2E",1794]],"^6>",[["^ ","^2D",95,"^2E",1794,"^O","sub-ast"]]],"~i1176",["^ ","~i4",[["^ ","^2D",0,"^2E",1795],["^ ","^2D",63,"^2E",1795]],"~i5",[["^ ","^2D",7,"^2E",1795,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2T",[["^ ","^2D",53,"^2E",1795,"^O","query-ast"]]],"~i1178",["^ ","~i6",[["^ ","^2D",124,"^2E",1795],["^ ","^2D",1,"^2E",1809]],"~i7",[["^ ","^2D",124,"^2E",1795,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]]],"~i1179",["^ ","~i8",[["^ ","^2D",171,"^2E",1795],["^ ","^2D",27,"^2E",1796,"^O","p__39053"],["^ ","^2D",0,"^2E",1797],["^ ","^2D",0,"^2E",1797],["^ ","^2D",4,"^2E",1797,"^O","map__39054"],["^ ","^2D",17,"^2E",1797,"^O","p__39053"],["^ ","^2D",4,"^2E",1798,"^O","map__39054"],["^ ","^2D",21,"^2E",1798],["^ ","^2D",23,"^2E",1798],["^ ","^2D",25,"^2E",1798],["^ ","^2D",27,"^2E",1798],["^ ","^2D",28,"^2E",1798,"^O","map__39054"],["^ ","^2D",42,"^2E",1798],["^ ","^2D",50,"^2E",1798],["^ ","^2D",52,"^2E",1798],["^ ","^2D",54,"^2E",1798],["^ ","^2D",55,"^2E",1798],["^ ","^2D",55,"^2E",1798,"^O","map__39054"],["^ ","^2D",104,"^2E",1798],["^ ","^2D",115,"^2E",1798],["^ ","^2D",116,"^2E",1798,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",1798],["^ ","^2D",148,"^2E",1798,"^O","map__39054"],["^ ","^2D",179,"^2E",1798],["^ ","^2D",184,"^2E",1798],["^ ","^2D",191,"^2E",1798],["^ ","^2D",199,"^2E",1798],["^ ","^2D",199,"^2E",1798,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",1798,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",1798,"^O","map__39054"],["^ ","^2D",276,"^2E",1798,"^O","map__39054"],["^ ","^2D",18,"^2E",1799,"^O","map__39054"],["^ ","^2D",16,"^2E",1800],["^ ","^2D",16,"^2E",1800,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",60,"^2E",1800,"^O","map__39054"],["^ ","^2D",75,"^2E",1800],["^ ","^2D",0,"^2E",1801]],"^2G",[["^ ","^2D",18,"^2E",1796,"^O","children"]],"^2X",[["^ ","^2D",4,"^2E",1800,"^O","union-key"]],"^4>",[["^ ","^2D",4,"^2E",1799,"^O","union-entry"]]],"~i1180",["^ ","^2I",[["^ ","^2D",0,"^2E",1801],["^ ","^2D",4,"^2E",1801,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1802],["^ ","^2D",0,"^2E",1802],["^ ","^2D",20,"^2E",1802,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1803],["^ ","^2D",10,"^2E",1803,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1804]],"^35",[["^ ","^2D",4,"^2E",1803,"^O","sub"]],"^3Y",[["^ ","^2D",25,"^2E",1801]],"^3=",[["^ ","^2D",25,"^2E",1801,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^4I",[["^ ","^2D",69,"^2E",1801,"^O","s-index"]],"^38",[["^ ","^2D",77,"^2E",1801,"^O","union-key"]]],"~i1181",["^ ","^3S",[["^ ","^2D",0,"^2E",1804]],"^2G",[["^ ","^2D",7,"^2E",1804,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^2O",[["^ ","^2D",52,"^2E",1804,"^O","children"]],"^3L",[["^ ","^2D",61,"^2E",1804]],"^4I",[["^ ","^2D",62,"^2E",1804,"^O","fulcro.client.primitives/focus-subquery*"],["^ ","^2D",140,"^2E",1804,"^O","fulcro.client.primitives/focus-subquery*"],["^ ","^2D",235,"^2E",1804,"^O","fulcro.client.primitives/focus-subquery*"]],"^2N",[["^ ","^2D",216,"^2E",1804,"^O","union-entry"],["^ ","^2D",291,"^2E",1804,"^O","union-entry"]],"^5F",[["^ ","^2D",228,"^2E",1804,"^O","sub"],["^ ","^2D",303,"^2E",1804,"^O","sub"]]],"~i1182",["^ ","^3S",[["^ ","^2D",0,"^2E",1806]],"^2G",[["^ ","^2D",7,"^2E",1806,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^2O",[["^ ","^2D",52,"^2E",1806,"^O","children"]],"^3L",[["^ ","^2D",61,"^2E",1806,"^O","union-entry"]]],"~i1184",["^ ","~i8",[["^ ","^2D",34,"^2E",1809],["^ ","^2D",34,"^2E",1809]],"^35",[["^ ","^2D",125,"^2E",1809,"^O","query-ast"]]],"~i1186",["^ ","~i0",[["^ ","^2D",0,"^2E",1811],["^ ","^2D",48,"^2E",1811],["^ ","^2D",0,"^2E",1812]],"~i7",[["^ ","^2D",0,"^2E",1811,"^O","fulcro.client.primitives/focus-subquery*"]]],"~i1187",["^ ","~i3",[["^ ","^2D",104,"^2E",1811,"^O","query-ast"]],"^2G",[["^ ","^2D",114,"^2E",1811,"^O","sub-ast"]]],"~i1188",["^ ","~i2",[["^ ","^2D",0,"^2E",1812],["^ ","^2D",0,"^2E",1815]],"~i8",[["^ ","^2D",4,"^2E",1812,"^O","q-index"]],"^37",[["^ ","^2D",14,"^2E",1812],["^ ","^2D",59,"^2E",1812]],"^3K",[["^ ","^2D",14,"^2E",1812,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"^3V",[["^ ","^2D",94,"^2E",1812],["^ ","^2D",138,"^2E",1812],["^ ","^2D",149,"^2E",1812,"^O","p1__39061#"],["^ ","^2D",0,"^2E",1813]],"^3>",[["^ ","^2D",94,"^2E",1812,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^30",[["^ ","^2D",0,"^2E",1813],["^ ","^2D",12,"^2E",1813,"^O","cljs.core/PersistentVector"],["^ ","^2D",39,"^2E",1813],["^ ","^2D",44,"^2E",1813],["^ ","^2D",46,"^2E",1813],["^ ","^2D",50,"^2E",1813],["^ ","^2D",50,"^2E",1813,"^O","cljs.core/PersistentVector"],["^ ","^2D",88,"^2E",1813],["^ ","^2D",189,"^2E",1813,"^O","p1__39061#"],["^ ","^2D",207,"^2E",1813]],"^3W",[["^ ","^2D",89,"^2E",1813],["^ ","^2D",89,"^2E",1813],["^ ","^2D",171,"^2E",1813,"^O","p1__39061#"]],"^4<",[["^ ","^2D",4,"^2E",1814],["^ ","^2D",4,"^2E",1814]],"^5[",[["^ ","^2D",95,"^2E",1814,"^O","query-ast"]]],"~i1189",["^ ","~i4",[["^ ","^2D",0,"^2E",1815],["^ ","^2D",63,"^2E",1815]],"~i5",[["^ ","^2D",7,"^2E",1815,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2T",[["^ ","^2D",53,"^2E",1815,"^O","query-ast"]]],"~i1191",["^ ","~i6",[["^ ","^2D",124,"^2E",1815],["^ ","^2D",1,"^2E",1839]],"~i7",[["^ ","^2D",124,"^2E",1815,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]]],"~i1192",["^ ","~i8",[["^ ","^2D",171,"^2E",1815],["^ ","^2D",27,"^2E",1816,"^O","p__39063"],["^ ","^2D",0,"^2E",1817],["^ ","^2D",0,"^2E",1817],["^ ","^2D",4,"^2E",1817,"^O","map__39064"],["^ ","^2D",17,"^2E",1817,"^O","p__39063"],["^ ","^2D",4,"^2E",1818,"^O","map__39064"],["^ ","^2D",21,"^2E",1818],["^ ","^2D",23,"^2E",1818],["^ ","^2D",25,"^2E",1818],["^ ","^2D",27,"^2E",1818],["^ ","^2D",28,"^2E",1818,"^O","map__39064"],["^ ","^2D",42,"^2E",1818],["^ ","^2D",50,"^2E",1818],["^ ","^2D",52,"^2E",1818],["^ ","^2D",54,"^2E",1818],["^ ","^2D",55,"^2E",1818],["^ ","^2D",55,"^2E",1818,"^O","map__39064"],["^ ","^2D",104,"^2E",1818],["^ ","^2D",115,"^2E",1818],["^ ","^2D",116,"^2E",1818,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",1818],["^ ","^2D",148,"^2E",1818,"^O","map__39064"],["^ ","^2D",179,"^2E",1818],["^ ","^2D",184,"^2E",1818],["^ ","^2D",191,"^2E",1818],["^ ","^2D",199,"^2E",1818],["^ ","^2D",199,"^2E",1818,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",1818,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",1818,"^O","map__39064"],["^ ","^2D",276,"^2E",1818,"^O","map__39064"],["^ ","^2D",12,"^2E",1819,"^O","map__39064"],["^ ","^2D",10,"^2E",1820],["^ ","^2D",10,"^2E",1820,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",54,"^2E",1820,"^O","map__39064"],["^ ","^2D",69,"^2E",1820],["^ ","^2D",11,"^2E",1821],["^ ","^2D",11,"^2E",1821,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",55,"^2E",1821,"^O","map__39064"],["^ ","^2D",70,"^2E",1821],["^ ","^2D",0,"^2E",1822]],"^2G",[["^ ","^2D",18,"^2E",1816,"^O","children"]],"^2X",[["^ ","^2D",4,"^2E",1820,"^O","key"]],"^2C",[["^ ","^2D",4,"^2E",1821,"^O","type"]],"^2N",[["^ ","^2D",4,"^2E",1819,"^O","focus"]]],"~i1193",["^ ","^2I",[["^ ","^2D",0,"^2E",1822],["^ ","^2D",4,"^2E",1822,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1823],["^ ","^2D",0,"^2E",1823],["^ ","^2D",20,"^2E",1823,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1824],["^ ","^2D",13,"^2E",1824,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",1825]],"^35",[["^ ","^2D",4,"^2E",1824,"^O","source"]],"^3>",[["^ ","^2D",25,"^2E",1822]],"^3L",[["^ ","^2D",25,"^2E",1822,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^30",[["^ ","^2D",69,"^2E",1822,"^O","q-index"]],"^3W",[["^ ","^2D",77,"^2E",1822,"^O","key"]]],"~i1194",["^ ","^3S",[["^ ","^2D",0,"^2E",1825],["^ ","^2D",0,"^2E",1828],["^ ","^2D",0,"^2E",1831]]],"~i1195",["^ ","^44",[["^ ","^2D",3,"^2E",1825],["^ ","^2D",55,"^2E",1825]],"^2J",[["^ ","^2D",3,"^2E",1825,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic"]],"^3Y",[["^ ","^2D",108,"^2E",1825,"^O","type"]],"^4I",[["^ ","^2D",163,"^2E",1825],["^ ","^2D",163,"^2E",1825]],"^3E",[["^ ","^2D",246,"^2E",1825,"^O","source"]]],"~i1196",["^ ","^44",[["^ ","^2D",0,"^2E",1826]],"^2J",[["^ ","^2D",7,"^2E",1826,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^4X",[["^ ","^2D",52,"^2E",1826,"^O","children"]],"^3H",[["^ ","^2D",61,"^2E",1826]],"^2X",[["^ ","^2D",62,"^2E",1826,"^O","fulcro.client.primitives/focus-subquery*"],["^ ","^2D",140,"^2E",1826,"^O","fulcro.client.primitives/focus-subquery*"],["^ ","^2D",232,"^2E",1826,"^O","fulcro.client.primitives/focus-subquery*"]],"^2Q",[["^ ","^2D",216,"^2E",1826,"^O","source"],["^ ","^2D",288,"^2E",1826,"^O","source"]],"^2S",[["^ ","^2D",223,"^2E",1826,"^O","focus"],["^ ","^2D",295,"^2E",1826,"^O","focus"]]],"~i1198",["^ ","^44",[["^ ","^2D",3,"^2E",1828],["^ ","^2D",55,"^2E",1828]],"^2J",[["^ ","^2D",3,"^2E",1828,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic"]],"^3=",[["^ ","^2D",110,"^2E",1828,"^O","type"]],"^3H",[["^ ","^2D",165,"^2E",1828],["^ ","^2D",165,"^2E",1828]],"^38",[["^ ","^2D",248,"^2E",1828,"^O","source"]]],"~i1199",["^ ","^44",[["^ ","^2D",0,"^2E",1829]],"^2J",[["^ ","^2D",7,"^2E",1829,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^4X",[["^ ","^2D",52,"^2E",1829,"^O","children"]],"^3H",[["^ ","^2D",61,"^2E",1829]],"^2X",[["^ ","^2D",61,"^2E",1829,"^O","fulcro.client.primitives/focus-subquery-union*"]],"^4<",[["^ ","^2D",113,"^2E",1829,"^O","source"]],"^4@",[["^ ","^2D",120,"^2E",1829,"^O","focus"]]],"~i1202",["^ ","^44",[["^ ","^2D",0,"^2E",1831]],"^2J",[["^ ","^2D",7,"^2E",1831,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^4X",[["^ ","^2D",52,"^2E",1831,"^O","children"]],"^3H",[["^ ","^2D",61,"^2E",1831,"^O","source"]]],"~i1203",["^ ","^3S",[["^ ","^2D",0,"^2E",1836,"^O","children"]]],"~i1205",["^ ","~i8",[["^ ","^2D",34,"^2E",1839],["^ ","^2D",34,"^2E",1839]],"^35",[["^ ","^2D",125,"^2E",1839,"^O","sub-ast"]]],"~i1207",["^ ","~i0",[["^ ","^2D",0,"^2E",1841],["^ ","^2D",42,"^2E",1851],["^ ","^2D",0,"^2E",1852]],"~i6",[["^ ","^2D",0,"^2E",1851,"^O","fulcro.client.primitives/focus-subquery"]]],"~i1216",["^ ","~i3",[["^ ","^2D",92,"^2E",1851,"^O","query"]],"~i9",[["^ ","^2D",98,"^2E",1851,"^O","sub-query"]]],"~i1217",["^ ","~i2",[["^ ","^2D",0,"^2E",1852],["^ ","^2D",0,"^2E",1854]],"~i8",[["^ ","^2D",4,"^2E",1852,"^O","query-ast"]],"^2O",[["^ ","^2D",16,"^2E",1852]],"^35",[["^ ","^2D",17,"^2E",1852,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",88,"^2E",1852,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",166,"^2E",1852,"^O","fulcro.client.primitives/query->ast"]],"^2X",[["^ ","^2D",157,"^2E",1852,"^O","query"],["^ ","^2D",215,"^2E",1852,"^O","query"]]],"~i1218",["^ ","~i8",[["^ ","^2D",4,"^2E",1853,"^O","sub-ast"]],"^2O",[["^ ","^2D",14,"^2E",1853]],"^35",[["^ ","^2D",15,"^2E",1853,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",86,"^2E",1853,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",168,"^2E",1853,"^O","fulcro.client.primitives/query->ast"]],"^2X",[["^ ","^2D",155,"^2E",1853,"^O","sub-query"],["^ ","^2D",217,"^2E",1853,"^O","sub-query"]]],"~i1219",["^ ","~i4",[["^ ","^2D",0,"^2E",1854],["^ ","^2D",4,"^2E",1854,"^O","G__39071"],["^ ","^2D",0,"^2E",1855],["^ ","^2D",0,"^2E",1855],["^ ","^2D",148,"^2E",1855,"^O","G__39071"],["^ ","^2D",209,"^2E",1855,"^O","G__39071"]],"~i5",[["^ ","^2D",8,"^2E",1855,"^O","fulcro.client.primitives/ast->query"],["^ ","^2D",79,"^2E",1855,"^O","fulcro.client.primitives/ast->query"],["^ ","^2D",160,"^2E",1855,"^O","fulcro.client.primitives/ast->query"]],"^37",[["^ ","^2D",15,"^2E",1854]],"^3K",[["^ ","^2D",15,"^2E",1854,"^O","fulcro.client.primitives/focus-subquery*"]],"^48",[["^ ","^2D",61,"^2E",1854,"^O","query-ast"]],"^2M",[["^ ","^2D",71,"^2E",1854,"^O","sub-ast"]]],"~i1221",["^ ","~i0",[["^ ","^2D",0,"^2E",1857],["^ ","^2D",40,"^2E",1860],["^ ","^2D",0,"^2E",1861]],"~i7",[["^ ","^2D",0,"^2E",1860,"^O","fulcro.client.primitives/expr->key"]]],"~i1223",["^ ","~i3",[["^ ","^2D",88,"^2E",1860,"^O","expr"]]],"~i1224",["^ ","~i2",[["^ ","^2D",0,"^2E",1861],["^ ","^2D",0,"^2E",1864],["^ ","^2D",0,"^2E",1867],["^ ","^2D",0,"^2E",1875],["^ ","^2D",0,"^2E",1883]]],"~i1225",["^ ","~i4",[["^ ","^2D",3,"^2E",1861],["^ ","^2D",20,"^2E",1861,"^O","cljs.core/Keyword"]],"^44",[["^ ","^2D",4,"^2E",1861,"^O","expr"]],"^4X",[["^ ","^2D",0,"^2E",1862,"^O","expr"]]],"~i1226",["^ ","~i4",[["^ ","^2D",3,"^2E",1864]],"~i5",[["^ ","^2D",3,"^2E",1864,"^O","cljs.core/map?"]],"^2I",[["^ ","^2D",24,"^2E",1864,"^O","expr"]],"^37",[["^ ","^2D",0,"^2E",1865]],"^3K",[["^ ","^2D",7,"^2E",1865,"^O","cljs.core/ffirst"]],"^3=",[["^ ","^2D",24,"^2E",1865,"^O","expr"]]],"~i1227",["^ ","~i4",[["^ ","^2D",3,"^2E",1867]],"~i5",[["^ ","^2D",3,"^2E",1867,"^O","cljs.core/seq?"]],"^2I",[["^ ","^2D",24,"^2E",1867,"^O","expr"]],"^37",[["^ ","^2D",0,"^2E",1868],["^ ","^2D",0,"^2E",1869]],"^2P",[["^ ","^2D",4,"^2E",1868,"^O","expr'"]],"^4I",[["^ ","^2D",24,"^2E",1868]],"^3H",[["^ ","^2D",24,"^2E",1868,"^O","cljs.core/first"]],"^3E",[["^ ","^2D",40,"^2E",1868,"^O","expr"]]],"~i1228",["^ ","^2O",[["^ ","^2D",0,"^2E",1869],["^ ","^2D",0,"^2E",1870],["^ ","^2D",0,"^2E",1872]],"^3=",[["^ ","^2D",3,"^2E",1869]],"^3V",[["^ ","^2D",3,"^2E",1869,"^O","cljs.core/map?"]],"^2X",[["^ ","^2D",24,"^2E",1869,"^O","expr'"]]],"~i1229",["^ ","^4X",[["^ ","^2D",0,"^2E",1870]],"^3D",[["^ ","^2D",7,"^2E",1870,"^O","cljs.core/ffirst"]],"^4I",[["^ ","^2D",24,"^2E",1870,"^O","expr'"]]],"~i1230",["^ ","~i4",[["^ ","^2D",3,"^2E",1875]],"~i5",[["^ ","^2D",3,"^2E",1875,"^O","fulcro.util/ident?"]],"^3K",[["^ ","^2D",28,"^2E",1875,"^O","expr"]],"^3Y",[["^ ","^2D",0,"^2E",1876],["^ ","^2D",4,"^2E",1876,"^O","G__39075"],["^ ","^2D",0,"^2E",1877],["^ ","^2D",0,"^2E",1877],["^ ","^2D",0,"^2E",1878],["^ ","^2D",23,"^2E",1878,"^O","G__39075"],["^ ","^2D",0,"^2E",1880,"^O","G__39075"]],"^30",[["^ ","^2D",15,"^2E",1876,"^O","expr"]],"^38",[["^ ","^2D",3,"^2E",1877],["^ ","^2D",48,"^2E",1877]],"^2F",[["^ ","^2D",3,"^2E",1877,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3A",[["^ ","^2D",100,"^2E",1877]],"^2M",[["^ ","^2D",100,"^2E",1877,"^O","cljs.core/second"]],"^5;",[["^ ","^2D",117,"^2E",1877,"^O","expr"]],"^2V",[["^ ","^2D",7,"^2E",1878,"^O","cljs.core/first"]]],"~i1232",["^ ","~i4",[["^ ","^2D",0,"^2E",1883]]],"~i1233",["^ ","~i6",[["^ ","^2D",6,"^2E",1883],["^ ","^2D",137,"^2E",1883],["^ ","^2D",180,"^2E",1883],["^ ","^2D",233,"^2E",1883]],"~i7",[["^ ","^2D",6,"^2E",1883,"^O","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"]],"^2J",[["^ ","^2D",54,"^2E",1883],["^ ","^2D",55,"^2E",1883]],"^3A",[["^ ","^2D",121,"^2E",1883,"^O","expr"]]],"~i1237",["^ ","~i0",[["^ ","^2D",0,"^2E",1890],["^ ","^2D",37,"^2E",1893],["^ ","^2D",0,"^2E",1894]],"~i7",[["^ ","^2D",0,"^2E",1893,"^O","fulcro.client.primitives/query-zip"]]],"~i1239",["^ ","~i3",[["^ ","^2D",82,"^2E",1893,"^O","root"]]],"~i1240",["^ ","~i2",[["^ ","^2D",0,"^2E",1894],["^ ","^2D",26,"^2E",1894],["^ ","^2D",37,"^2E",1894,"^O","p1__39079#"],["^ ","^2D",0,"^2E",1895]],"~i3",[["^ ","^2D",7,"^2E",1894,"^O","clojure.zip/zipper"]]],"~i1241",["^ ","~i5",[["^ ","^2D",0,"^2E",1895]],"~i9",[["^ ","^2D",9,"^2E",1895],["^ ","^2D",33,"^2E",1895,"^O","p1__39079#"]],"^2I",[["^ ","^2D",9,"^2E",1895,"^O","cljs.core/vector?"]],"^3D",[["^ ","^2D",56,"^2E",1895],["^ ","^2D",77,"^2E",1895,"^O","p1__39079#"]],"^2P",[["^ ","^2D",56,"^2E",1895,"^O","cljs.core/map?"]],"^2X",[["^ ","^2D",100,"^2E",1895],["^ ","^2D",121,"^2E",1895,"^O","p1__39079#"]],"^30",[["^ ","^2D",100,"^2E",1895,"^O","cljs.core/seq?"]]],"~i1242",["^ ","~i4",[["^ ","^2D",3,"^2E",1896,"^O","cljs.core/seq"]]],"~i1243",["^ ","~i4",[["^ ","^2D",17,"^2E",1896],["^ ","^2D",0,"^2E",1897]],"~i9",[["^ ","^2D",28,"^2E",1896,"^O","node"]],"^44",[["^ ","^2D",33,"^2E",1896,"^O","children"]]],"~i1244",["^ ","~i6",[["^ ","^2D",0,"^2E",1897],["^ ","^2D",0,"^2E",1898]],"^3S",[["^ ","^2D",4,"^2E",1897,"^O","ret"]],"^37",[["^ ","^2D",10,"^2E",1897],["^ ","^2D",67,"^2E",1897],["^ ","^2D",187,"^2E",1897],["^ ","^2D",226,"^2E",1897]]],"~i1245",["^ ","^2O",[["^ ","^2D",12,"^2E",1897]],"^35",[["^ ","^2D",12,"^2E",1897,"^O","cljs.core/vector?"]],"^3L",[["^ ","^2D",36,"^2E",1897,"^O","node"]],"^48",[["^ ","^2D",43,"^2E",1897]],"^2C",[["^ ","^2D",43,"^2E",1897,"^O","cljs.core/vec"]],"^2H",[["^ ","^2D",57,"^2E",1897,"^O","children"]]],"~i1246",["^ ","^2O",[["^ ","^2D",69,"^2E",1897]],"^35",[["^ ","^2D",69,"^2E",1897,"^O","cljs.core/map?"]],"^3=",[["^ ","^2D",90,"^2E",1897,"^O","node"]],"^2X",[["^ ","^2D",97,"^2E",1897],["^ ","^2D",142,"^2E",1897]],"^30",[["^ ","^2D",97,"^2E",1897,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^3W",[["^ ","^2D",177,"^2E",1897,"^O","children"]]],"~i1247",["^ ","^2O",[["^ ","^2D",189,"^2E",1897]],"^35",[["^ ","^2D",189,"^2E",1897,"^O","cljs.core/seq?"]],"^3=",[["^ ","^2D",210,"^2E",1897,"^O","node"]],"^2X",[["^ ","^2D",217,"^2E",1897,"^O","children"]]],"~i1248",["^ ","~i8",[["^ ","^2D",0,"^2E",1898]],"~i9",[["^ ","^2D",7,"^2E",1898,"^O","cljs.core/with-meta"]],"^35",[["^ ","^2D",27,"^2E",1898,"^O","ret"]],"^3Y",[["^ ","^2D",31,"^2E",1898]],"^3=",[["^ ","^2D",31,"^2E",1898,"^O","cljs.core/meta"]],"^3H",[["^ ","^2D",46,"^2E",1898,"^O","node"]]],"~i1249",["^ ","~i4",[["^ ","^2D",3,"^2E",1899,"^O","root"]]],"~i1251",["^ ","~i0",[["^ ","^2D",0,"^2E",1901],["^ ","^2D",39,"^2E",1905],["^ ","^2D",0,"^2E",1906]],"~i7",[["^ ","^2D",0,"^2E",1905,"^O","fulcro.client.primitives/move-to-key"]]],"~i1254",["^ ","~i3",[["^ ","^2D",86,"^2E",1905,"^O","loc"]],"~i7",[["^ ","^2D",90,"^2E",1905,"^O","k"]]],"~i1255",["^ ","~i2",[["^ ","^2D",0,"^2E",1906],["^ ","^2D",0,"^2E",1908]],"~i9",[["^ ","^2D",4,"^2E",1906,"^O","loc"]],"^2G",[["^ ","^2D",14,"^2E",1906]],"^44",[["^ ","^2D",14,"^2E",1906,"^O","clojure.zip/down"]],"^3Y",[["^ ","^2D",31,"^2E",1906,"^O","loc"]]],"~i1256",["^ ","~i4",[["^ ","^2D",0,"^2E",1908],["^ ","^2D",0,"^2E",1909]],"^2I",[["^ ","^2D",4,"^2E",1908,"^O","node"]],"^2J",[["^ ","^2D",11,"^2E",1908]],"^37",[["^ ","^2D",11,"^2E",1908,"^O","clojure.zip/node"]],"^3V",[["^ ","^2D",28,"^2E",1908,"^O","loc"]]],"~i1257",["^ ","~i6",[["^ ","^2D",0,"^2E",1909]],"^2I",[["^ ","^2D",3,"^2E",1909]],"^2T",[["^ ","^2D",3,"^2E",1909,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^2D",48,"^2E",1909,"^O","k"]],"^2J",[["^ ","^2D",50,"^2E",1909]],"^37",[["^ ","^2D",50,"^2E",1909,"^O","cljs.core/first"]],"^2P",[["^ ","^2D",66,"^2E",1909,"^O","node"]]],"~i1258",["^ ","~i8",[["^ ","^2D",0,"^2E",1910],["^ ","^2D",25,"^2E",1910]],"^3S",[["^ ","^2D",42,"^2E",1910,"^O","loc"]],"^37",[["^ ","^2D",25,"^2E",1910,"^O","clojure.zip/down"]],"^3V",[["^ ","^2D",7,"^2E",1910,"^O","clojure.zip/right"]]],"~i1259",["^ ","~i8",[["^ ","^2D",0,"^2E",1912]],"^2J",[["^ ","^2D",15,"^2E",1912]],"^37",[["^ ","^2D",15,"^2E",1912,"^O","clojure.zip/right"]],"^3>",[["^ ","^2D",33,"^2E",1912,"^O","loc"]]],"~i1261",["^ ","~i0",[["^ ","^2D",0,"^2E",1919],["^ ","^2D",42,"^2E",1924],["^ ","^2D",0,"^2E",1925]],"~i7",[["^ ","^2D",0,"^2E",1924,"^O","fulcro.client.primitives/query-template"]]],"~i1265",["^ ","~i3",[["^ ","^2D",92,"^2E",1924,"^O","query"]],"~i9",[["^ ","^2D",98,"^2E",1924,"^O","path"]]],"~i1266",["^ ","~i2",[["^ ","^2D",0,"^2E",1925],["^ ","^2D",27,"^2E",1925],["^ ","^2D",0,"^2E",1927],["^ ","^2D",0,"^2E",1991]],"^4I",[["^ ","^2D",100,"^2E",1925,"^O","loc"]],"^4Y",[["^ ","^2D",104,"^2E",1925,"^O","path"]]],"~i1267",["^ ","^3S",[["^ ","^2D",0,"^2E",1927]],"^37",[["^ ","^2D",3,"^2E",1927]],"^3K",[["^ ","^2D",3,"^2E",1927,"^O","cljs.core/empty?"]],"^3=",[["^ ","^2D",26,"^2E",1927,"^O","path"]]],"~i1268",["^ ","^44",[["^ ","^2D",0,"^2E",1928,"^O","loc"]]],"~i1269",["^ ","^44",[["^ ","^2D",0,"^2E",1930],["^ ","^2D",0,"^2E",1931]],"^4X",[["^ ","^2D",4,"^2E",1930,"^O","node"]],"^3V",[["^ ","^2D",11,"^2E",1930]],"^3>",[["^ ","^2D",11,"^2E",1930,"^O","clojure.zip/node"]],"^3E",[["^ ","^2D",28,"^2E",1930,"^O","loc"]]],"~i1270",["^ ","^37",[["^ ","^2D",0,"^2E",1931]],"^4X",[["^ ","^2D",3,"^2E",1931]],"^3D",[["^ ","^2D",3,"^2E",1931,"^O","cljs.core/vector?"]],"^3H",[["^ ","^2D",27,"^2E",1931,"^O","node"]]],"~i1271",["^ ","^2O",[["^ ","^2D",0,"^2E",1932]],"^3V",[["^ ","^2D",15,"^2E",1932]],"^3>",[["^ ","^2D",15,"^2E",1932,"^O","clojure.zip/down"]],"^3E",[["^ ","^2D",32,"^2E",1932,"^O","loc"]],"^2K",[["^ ","^2D",15,"^2E",1933,"^O","path"]]],"~i1272",["^ ","^2O",[["^ ","^2D",0,"^2E",1938],["^ ","^2D",4,"^2E",1938,"^O","vec__39095"],["^ ","^2D",4,"^2E",1939,"^O","seq__39096"],["^ ","^2D",17,"^2E",1939],["^ ","^2D",17,"^2E",1939,"^O","cljs.core/seq"],["^ ","^2D",31,"^2E",1939,"^O","vec__39095"],["^ ","^2D",4,"^2E",1940,"^O","first__39097"],["^ ","^2D",19,"^2E",1940],["^ ","^2D",19,"^2E",1940,"^O","cljs.core/first"],["^ ","^2D",35,"^2E",1940,"^O","seq__39096"],["^ ","^2D",4,"^2E",1941,"^O","seq__39096"],["^ ","^2D",21,"^2E",1941],["^ ","^2D",21,"^2E",1941,"^O","cljs.core/next"],["^ ","^2D",36,"^2E",1941,"^O","seq__39096"],["^ ","^2D",8,"^2E",1942,"^O","first__39097"],["^ ","^2D",9,"^2E",1943,"^O","seq__39096"],["^ ","^2D",0,"^2E",1945]],"^3V",[["^ ","^2D",4,"^2E",1942,"^O","k"]],"^3H",[["^ ","^2D",4,"^2E",1943,"^O","ks"]],"^48",[["^ ","^2D",17,"^2E",1938,"^O","path"]]],"~i1273",["^ ","^3=",[["^ ","^2D",4,"^2E",1944,"^O","k'"]],"^3L",[["^ ","^2D",21,"^2E",1944]],"^4I",[["^ ","^2D",21,"^2E",1944,"^O","fulcro.client.primitives/expr->key"]],"^2H",[["^ ","^2D",59,"^2E",1944,"^O","node"]]],"~i1274",["^ ","^4X",[["^ ","^2D",0,"^2E",1945]],"^3=",[["^ ","^2D",3,"^2E",1945]],"^3V",[["^ ","^2D",3,"^2E",1945,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3L",[["^ ","^2D",48,"^2E",1945,"^O","k"]],"^3H",[["^ ","^2D",50,"^2E",1945,"^O","k'"]]],"~i1275",["^ ","^2P",[["^ ","^2D",0,"^2E",1946]],"^3>",[["^ ","^2D",3,"^2E",1946]],"^2X",[["^ ","^2D",5,"^2E",1946]],"^30",[["^ ","^2D",5,"^2E",1946,"^O","cljs.core/map?"]],"^38",[["^ ","^2D",26,"^2E",1946,"^O","node"]]],"~i1276",["^ ","^4I",[["^ ","^2D",37,"^2E",1946]],"^48",[["^ ","^2D",39,"^2E",1946]],"^2C",[["^ ","^2D",39,"^2E",1946,"^O","cljs.core/seq?"]],"^3W",[["^ ","^2D",60,"^2E",1946,"^O","node"]],"^4>",[["^ ","^2D",71,"^2E",1946]],"^2Q",[["^ ","^2D",71,"^2E",1946,"^O","cljs.core/map?"]],"^3Z",[["^ ","^2D",92,"^2E",1946]],"^4<",[["^ ","^2D",92,"^2E",1946,"^O","cljs.core/first"]],"^4J",[["^ ","^2D",108,"^2E",1946,"^O","node"]]],"~i1277",["^ ","^3=",[["^ ","^2D",0,"^2E",1947],["^ ","^2D",0,"^2E",1955]],"^2X",[["^ ","^2D",4,"^2E",1947,"^O","loc'"]],"^38",[["^ ","^2D",23,"^2E",1947]],"^2F",[["^ ","^2D",23,"^2E",1947,"^O","fulcro.client.primitives/move-to-key"]],"^3F",[["^ ","^2D",60,"^2E",1947],["^ ","^2D",77,"^2E",1947,"^O","G__39098"],["^ ","^2D",0,"^2E",1948],["^ ","^2D",0,"^2E",1948],["^ ","^2D",0,"^2E",1949],["^ ","^2D",24,"^2E",1949,"^O","G__39098"],["^ ","^2D",0,"^2E",1951,"^O","G__39098"]],"^2V",[["^ ","^2D",88,"^2E",1947,"^O","loc"]],"^4B",[["^ ","^2D",3,"^2E",1948]],"^2W",[["^ ","^2D",3,"^2E",1948,"^O","cljs.core/seq?"]],"^3[",[["^ ","^2D",24,"^2E",1948,"^O","node"]],"^31",[["^ ","^2D",7,"^2E",1949,"^O","clojure.zip/down"]],"^3:",[["^ ","^2D",5,"^2E",1953,"^O","k"]]],"~i1278",["^ ","^2X",[["^ ","^2D",4,"^2E",1954,"^O","node'"]],"^38",[["^ ","^2D",24,"^2E",1954]],"^2F",[["^ ","^2D",24,"^2E",1954,"^O","clojure.zip/node"]],"^2Q",[["^ ","^2D",41,"^2E",1954,"^O","loc'"]]],"~i1279",["^ ","^3>",[["^ ","^2D",0,"^2E",1955]],"^2X",[["^ ","^2D",3,"^2E",1955]],"^30",[["^ ","^2D",3,"^2E",1955,"^O","cljs.core/map?"]],"^38",[["^ ","^2D",24,"^2E",1955,"^O","node'"]]],"~i1280",["^ ","^4I",[["^ ","^2D",0,"^2E",1956]],"^4Y",[["^ ","^2D",3,"^2E",1956]],"^48",[["^ ","^2D",3,"^2E",1956,"^O","cljs.core/seq"]],"^2F",[["^ ","^2D",17,"^2E",1956,"^O","ks"]]],"~i1281",["^ ","^2X",[["^ ","^2D",0,"^2E",1957]]],"~i1282",["^ ","^4Y",[["^ ","^2D",15,"^2E",1957]],"^48",[["^ ","^2D",15,"^2E",1957,"^O","clojure.zip/replace"]],"^4>",[["^ ","^2D",35,"^2E",1957,"^O","loc'"]]],"~i1283",["^ ","^2C",[["^ ","^2D",52,"^2E",1957]],"^3E",[["^ ","^2D",52,"^2E",1957,"^O","clojure.zip/node"]],"^2N",[["^ ","^2D",69,"^2E",1957]],"^4>",[["^ ","^2D",69,"^2E",1957,"^O","fulcro.client.primitives/move-to-key"]],"^2V",[["^ ","^2D",106,"^2E",1957,"^O","loc'"]],"^2W",[["^ ","^2D",123,"^2E",1957]],"^5[",[["^ ","^2D",123,"^2E",1957,"^O","cljs.core/first"]],"^6>",[["^ ","^2D",139,"^2E",1957,"^O","ks"]]],"~i1284",["^ ","^4Y",[["^ ","^2D",15,"^2E",1958]],"^48",[["^ ","^2D",15,"^2E",1958,"^O","cljs.core/next"]],"^2H",[["^ ","^2D",30,"^2E",1958,"^O","ks"]]],"~i1285",["^ ","^2X",[["^ ","^2D",0,"^2E",1963,"^O","loc'"]]],"~i1286",["^ ","^4I",[["^ ","^2D",0,"^2E",1966]],"^3E",[["^ ","^2D",15,"^2E",1966,"^O","loc'"]],"^2K",[["^ ","^2D",15,"^2E",1967,"^O","ks"]]],"~i1287",["^ ","^3=",[["^ ","^2D",0,"^2E",1973]],"^30",[["^ ","^2D",15,"^2E",1973],["^ ","^2D",33,"^2E",1973],["^ ","^2D",50,"^2E",1973],["^ ","^2D",67,"^2E",1973]],"^3E",[["^ ","^2D",84,"^2E",1973,"^O","loc"]],"^3W",[["^ ","^2D",67,"^2E",1973,"^O","clojure.zip/down"]],"^2R",[["^ ","^2D",50,"^2E",1973,"^O","clojure.zip/down"]],"^2V",[["^ ","^2D",33,"^2E",1973,"^O","clojure.zip/down"]],"^2Z",[["^ ","^2D",15,"^2E",1973,"^O","clojure.zip/right"]],"^7F",[["^ ","^2D",15,"^2E",1974,"^O","ks"]]],"~i1288",["^ ","^2P",[["^ ","^2D",0,"^2E",1980]],"^3H",[["^ ","^2D",15,"^2E",1980]],"^2X",[["^ ","^2D",15,"^2E",1980,"^O","clojure.zip/right"]],"^2K",[["^ ","^2D",33,"^2E",1980,"^O","loc"]],"^4>",[["^ ","^2D",15,"^2E",1981,"^O","path"]]],"~i1289",["^ ","~i4",[["^ ","^2D",0,"^2E",1991]],"~i5",[["^ ","^2D",7,"^2E",1991,"^O","query-template*"]],"^3D",[["^ ","^2D",28,"^2E",1991]],"^2P",[["^ ","^2D",28,"^2E",1991,"^O","fulcro.client.primitives/query-zip"]],"^4Y",[["^ ","^2D",63,"^2E",1991,"^O","query"]],"^3W",[["^ ","^2D",70,"^2E",1991,"^O","path"]]],"~i1291",["^ ","~i0",[["^ ","^2D",0,"^2E",1993],["^ ","^2D",35,"^2E",1993],["^ ","^2D",0,"^2E",1994]],"~i7",[["^ ","^2D",0,"^2E",1993,"^O","fulcro.client.primitives/replace"]],"^37",[["^ ","^2D",78,"^2E",1993,"^O","template"]],"^3V",[["^ ","^2D",87,"^2E",1993,"^O","new-query"]]],"~i1292",["^ ","~i2",[["^ ","^2D",0,"^2E",1994]],"~i6",[["^ ","^2D",44,"^2E",1994,"^O","template"]],"^2J",[["^ ","^2D",24,"^2E",1994]],"^37",[["^ ","^2D",24,"^2E",1994,"^O","clojure.zip/replace"]],"^4I",[["^ ","^2D",53,"^2E",1994,"^O","new-query"]],"^3W",[["^ ","^2D",7,"^2E",1994,"^O","clojure.zip/root"]]],"~i1294",["^ ","~i0",[["^ ","^2D",0,"^2E",1996],["^ ","^2D",46,"^2E",1999],["^ ","^2D",0,"^2E",2000]],"~i6",[["^ ","^2D",0,"^2E",1999,"^O","fulcro.client.primitives/reduce-query-depth"]]],"~i1296",["^ ","~i3",[["^ ","^2D",100,"^2E",1999,"^O","q"]],"~i5",[["^ ","^2D",102,"^2E",1999,"^O","k"]]],"~i1297",["^ ","~i2",[["^ ","^2D",0,"^2E",2000],["^ ","^2D",3,"^2E",2000]],"^2I",[["^ ","^2D",5,"^2E",2000]],"^2T",[["^ ","^2D",5,"^2E",2000,"^O","cljs.core/empty?"]],"^2O",[["^ ","^2D",28,"^2E",2000],["^ ","^2D",67,"^2E",2000]],"^35",[["^ ","^2D",28,"^2E",2000,"^O","fulcro.client.primitives/focus-query"]],"^30",[["^ ","^2D",65,"^2E",2000,"^O","q"]],"^2C",[["^ ","^2D",150,"^2E",2000,"^O","k"]]],"~i1298",["^ ","~i4",[["^ ","^2D",0,"^2E",2001],["^ ","^2D",0,"^2E",2010]],"^2I",[["^ ","^2D",4,"^2E",2001,"^O","pos"]],"^37",[["^ ","^2D",10,"^2E",2001],["^ ","^2D",52,"^2E",2001]],"^3K",[["^ ","^2D",10,"^2E",2001,"^O","fulcro.client.primitives/query-template"]],"^4Y",[["^ ","^2D",50,"^2E",2001,"^O","q"]],"^3E",[["^ ","^2D",135,"^2E",2001,"^O","k"]]],"~i1299",["^ ","^2I",[["^ ","^2D",4,"^2E",2002,"^O","node"]],"^37",[["^ ","^2D",11,"^2E",2002]],"^3K",[["^ ","^2D",11,"^2E",2002,"^O","clojure.zip/node"]],"^3>",[["^ ","^2D",28,"^2E",2002,"^O","pos"]]],"~i1300",["^ ","^2I",[["^ ","^2D",4,"^2E",2003,"^O","node'"]],"^37",[["^ ","^2D",24,"^2E",2003],["^ ","^2D",41,"^2E",2003,"^O","G__39117"],["^ ","^2D",0,"^2E",2004],["^ ","^2D",0,"^2E",2004],["^ ","^2D",0,"^2E",2005],["^ ","^2D",8,"^2E",2005,"^O","G__39117"],["^ ","^2D",19,"^2E",2005],["^ ","^2D",0,"^2E",2007,"^O","G__39117"]],"^3=",[["^ ","^2D",52,"^2E",2003,"^O","node"]],"^3H",[["^ ","^2D",3,"^2E",2004]],"^2H",[["^ ","^2D",10,"^2E",2004,"^O","node"]]],"~i1301",["^ ","~i6",[["^ ","^2D",0,"^2E",2010]],"~i7",[["^ ","^2D",7,"^2E",2010,"^O","fulcro.client.primitives/replace"]],"^2J",[["^ ","^2D",40,"^2E",2010,"^O","pos"]],"^35",[["^ ","^2D",44,"^2E",2010,"^O","node'"]]],"~i1302",["^ ","~i4",[["^ ","^2D",0,"^2E",2012,"^O","q"]]],"~i1304",["^ ","~i0",[["^ ","^2D",0,"^2E",2015],["^ ","^2D",56,"^2E",2019],["^ ","^2D",0,"^2E",2020]],"~i7",[["^ ","^2D",0,"^2E",2019,"^O","fulcro.client.primitives/reduce-union-recursion-depth"]]],"~i1307",["^ ","~i3",[["^ ","^2D",120,"^2E",2019,"^O","union-expr"]],"^44",[["^ ","^2D",131,"^2E",2019,"^O","recursion-key"]]],"~i1308",["^ ","~i7",[["^ ","^2D",3,"^2E",2025,"^O","union-expr"]]],"~i1309",["^ ","~i4",[["^ ","^2D",87,"^2E",2020]],"~i5",[["^ ","^2D",87,"^2E",2020,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"~i9",[["^ ","^2D",131,"^2E",2020],["^ ","^2D",142,"^2E",2020,"^O","p__39119"],["^ ","^2D",0,"^2E",2021],["^ ","^2D",0,"^2E",2021],["^ ","^2D",4,"^2E",2021,"^O","vec__39120"],["^ ","^2D",17,"^2E",2021,"^O","p__39119"],["^ ","^2D",8,"^2E",2022],["^ ","^2D",8,"^2E",2022,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",2022,"^O","vec__39120"],["^ ","^2D",63,"^2E",2022],["^ ","^2D",67,"^2E",2022],["^ ","^2D",8,"^2E",2023],["^ ","^2D",8,"^2E",2023,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",2023,"^O","vec__39120"],["^ ","^2D",63,"^2E",2023],["^ ","^2D",67,"^2E",2023],["^ ","^2D",0,"^2E",2024],["^ ","^2D",0,"^2E",2024]],"^2J",[["^ ","^2D",4,"^2E",2022,"^O","k"]],"^3K",[["^ ","^2D",4,"^2E",2023,"^O","q"]],"^2P",[["^ ","^2D",90,"^2E",2024,"^O","k"]],"^3=",[["^ ","^2D",92,"^2E",2024]],"^3V",[["^ ","^2D",92,"^2E",2024,"^O","fulcro.client.primitives/reduce-query-depth"]],"^2N",[["^ ","^2D",136,"^2E",2024,"^O","q"]],"^2Q",[["^ ","^2D",138,"^2E",2024,"^O","recursion-key"]]],"~i1310",["^ ","~i4",[["^ ","^2D",0,"^2E",2020],["^ ","^2D",52,"^2E",2020]],"~i5",[["^ ","^2D",7,"^2E",2020,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]]],"~i1312",["^ ","~i0",[["^ ","^2D",0,"^2E",2027],["^ ","^2D",49,"^2E",2027],["^ ","^2D",0,"^2E",2028]],"~i7",[["^ ","^2D",0,"^2E",2027,"^O","fulcro.client.primitives/mappable-ident?"]],"^3=",[["^ ","^2D",106,"^2E",2027,"^O","refs"]],"^3H",[["^ ","^2D",111,"^2E",2027,"^O","ident"]]],"~i1313",["^ ","~i2",[["^ ","^2D",0,"^2E",2028]],"~i7",[["^ ","^2D",9,"^2E",2028]],"~i8",[["^ ","^2D",9,"^2E",2028,"^O","fulcro.util/ident?"]],"^4X",[["^ ","^2D",34,"^2E",2028,"^O","ident"]]],"~i1314",["^ ","~i4",[["^ ","^2D",46,"^2E",2028]],"~i5",[["^ ","^2D",46,"^2E",2028,"^O","cljs.core/contains?"]],"^2J",[["^ ","^2D",72,"^2E",2028,"^O","refs"]],"^4X",[["^ ","^2D",77,"^2E",2028]],"^3D",[["^ ","^2D",77,"^2E",2028,"^O","cljs.core/first"]],"^3L",[["^ ","^2D",93,"^2E",2028,"^O","ident"]]],"~i1316",["^ ","~i0",[["^ ","^2D",0,"^2E",2030],["^ ","^2D",45,"^2E",2038],["^ ","^2D",0,"^2E",2039]],"~i7",[["^ ","^2D",0,"^2E",2038,"^O","fulcro.client.primitives/denormalize*"]]],"~i1323",["^ ","~i3",[["^ ","^2D",98,"^2E",2038,"^O","query"]],"~i9",[["^ ","^2D",104,"^2E",2038,"^O","data"]],"^44",[["^ ","^2D",109,"^2E",2038,"^O","refs"]],"^35",[["^ ","^2D",114,"^2E",2038,"^O","map-ident"]],"^3H",[["^ ","^2D",124,"^2E",2038,"^O","idents-seen"]],"^2L",[["^ ","^2D",136,"^2E",2038,"^O","union-expr"]],"^4<",[["^ ","^2D",147,"^2E",2038,"^O","recurse-key"]]],"~i1325",["^ ","~i2",[["^ ","^2D",0,"^2E",2039],["^ ","^2D",0,"^2E",2059]],"~i8",[["^ ","^2D",4,"^2E",2039,"^O","union-recur?"]],"^3D",[["^ ","^2D",25,"^2E",2039],["^ ","^2D",42,"^2E",2039,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2040],["^ ","^2D",0,"^2E",2040],["^ ","^2D",20,"^2E",2040,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2043,"^O","and__3938__auto__"]],"^3>",[["^ ","^2D",62,"^2E",2039,"^O","union-expr"]],"^2F",[["^ ","^2D",0,"^2E",2041,"^O","recurse-key"]]],"~i1326",["^ ","~i8",[["^ ","^2D",4,"^2E",2046,"^O","recur-ident"]],"^3D",[["^ ","^2D",18,"^2E",2046],["^ ","^2D",56,"^2E",2046],["^ ","^2D",61,"^2E",2046]],"^3L",[["^ ","^2D",36,"^2E",2046,"^O","union-recur?"]]],"~i1327",["^ ","^3Y",[["^ ","^2D",56,"^2E",2046,"^O","data"]]],"~i1328",["^ ","~i8",[["^ ","^2D",4,"^2E",2047,"^O","data"]],"^3D",[["^ ","^2D",15,"^2E",2047],["^ ","^2D",0,"^2E",2049]],"^4I",[["^ ","^2D",32,"^2E",2047,"^O","data"]],"^48",[["^ ","^2D",43,"^2E",2047,"^O","data"]]],"~i1329",["^ ","^3Y",[["^ ","^2D",0,"^2E",2049]],"^3L",[["^ ","^2D",20,"^2E",2049]],"^4I",[["^ ","^2D",20,"^2E",2049,"^O","fulcro.client.primitives/mappable-ident?"]],"^2N",[["^ ","^2D",67,"^2E",2049,"^O","refs"]],"^3F",[["^ ","^2D",72,"^2E",2049,"^O","data"]]],"~i1330",["^ ","^3V",[["^ ","^2D",0,"^2E",2050]],"^4Y",[["^ ","^2D",15,"^2E",2050]],"^48",[["^ ","^2D",15,"^2E",2050,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2K",[["^ ","^2D",62,"^2E",2050,"^O","refs"]],"^4>",[["^ ","^2D",67,"^2E",2050]],"^2Q",[["^ ","^2D",68,"^2E",2050,"^O","map-ident"],["^ ","^2D",110,"^2E",2050,"^O","map-ident"],["^ ","^2D",162,"^2E",2050,"^O","map-ident"]],"^5F",[["^ ","^2D",150,"^2E",2050,"^O","data"],["^ ","^2D",182,"^2E",2050,"^O","data"]]],"~i1331",["^ ","^3V",[["^ ","^2D",0,"^2E",2054,"^O","data"]]],"~i1332",["^ ","~i4",[["^ ","^2D",0,"^2E",2059],["^ ","^2D",0,"^2E",2129],["^ ","^2D",0,"^2E",2145]]],"~i1333",["^ ","~i6",[["^ ","^2D",3,"^2E",2059]],"~i7",[["^ ","^2D",3,"^2E",2059,"^O","cljs.core/vector?"]],"^2J",[["^ ","^2D",27,"^2E",2059,"^O","data"]]],"~i1335",["^ ","~i6",[["^ ","^2D",0,"^2E",2060],["^ ","^2D",0,"^2E",2127]],"^3S",[["^ ","^2D",4,"^2E",2060,"^O","step"]],"^3K",[["^ ","^2D",11,"^2E",2060],["^ ","^2D",0,"^2E",2062]],"^2P",[["^ ","^2D",18,"^2E",2061,"^O","ident"]]],"~i1336",["^ ","^35",[["^ ","^2D",0,"^2E",2062],["^ ","^2D",3,"^2E",2062],["^ ","^2D",3,"^2E",2062,"^O","cljs.core/not"]],"^3L",[["^ ","^2D",17,"^2E",2062]],"^4I",[["^ ","^2D",17,"^2E",2062,"^O","fulcro.client.primitives/mappable-ident?"]],"^2N",[["^ ","^2D",64,"^2E",2062,"^O","refs"]],"^3F",[["^ ","^2D",69,"^2E",2062,"^O","ident"]]],"~i1337",["^ ","^3D",[["^ ","^2D",0,"^2E",2063]],"^3V",[["^ ","^2D",3,"^2E",2063],["^ ","^2D",54,"^2E",2063],["^ ","^2D",137,"^2E",2063]],"^3>",[["^ ","^2D",3,"^2E",2063,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^4I",[["^ ","^2D",48,"^2E",2063,"^O","query"]]],"~i1338",["^ ","^3Y",[["^ ","^2D",0,"^2E",2064,"^O","ident"]]],"~i1339",["^ ","^3Y",[["^ ","^2D",0,"^2E",2066],["^ ","^2D",4,"^2E",2066,"^O","map__39134"],["^ ","^2D",4,"^2E",2067,"^O","map__39134"],["^ ","^2D",21,"^2E",2067],["^ ","^2D",23,"^2E",2067],["^ ","^2D",25,"^2E",2067],["^ ","^2D",27,"^2E",2067],["^ ","^2D",28,"^2E",2067,"^O","map__39134"],["^ ","^2D",42,"^2E",2067],["^ ","^2D",50,"^2E",2067],["^ ","^2D",52,"^2E",2067],["^ ","^2D",54,"^2E",2067],["^ ","^2D",55,"^2E",2067],["^ ","^2D",55,"^2E",2067,"^O","map__39134"],["^ ","^2D",104,"^2E",2067],["^ ","^2D",115,"^2E",2067],["^ ","^2D",116,"^2E",2067,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",2067],["^ ","^2D",148,"^2E",2067,"^O","map__39134"],["^ ","^2D",179,"^2E",2067],["^ ","^2D",184,"^2E",2067],["^ ","^2D",191,"^2E",2067],["^ ","^2D",199,"^2E",2067],["^ ","^2D",199,"^2E",2067,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",2067,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",2067,"^O","map__39134"],["^ ","^2D",276,"^2E",2067,"^O","map__39134"],["^ ","^2D",12,"^2E",2068],["^ ","^2D",12,"^2E",2068,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",56,"^2E",2068,"^O","map__39134"],["^ ","^2D",71,"^2E",2068],["^ ","^2D",12,"^2E",2069],["^ ","^2D",12,"^2E",2069,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",56,"^2E",2069,"^O","map__39134"],["^ ","^2D",71,"^2E",2069],["^ ","^2D",0,"^2E",2080]],"^2X",[["^ ","^2D",4,"^2E",2068,"^O","props"]],"^3A",[["^ ","^2D",4,"^2E",2069,"^O","joins"]],"^4E",[["^ ","^2D",17,"^2E",2066]],"^2U",[["^ ","^2D",17,"^2E",2066,"^O","cljs.core/group-by"]],"^2Y",[["^ ","^2D",36,"^2E",2066,"^O","fulcro.util/join?"]],"^32",[["^ ","^2D",60,"^2E",2066,"^O","query"]]],"~i1340",["^ ","^3H",[["^ ","^2D",4,"^2E",2070,"^O","props"]],"^3E",[["^ ","^2D",16,"^2E",2070],["^ ","^2D",61,"^2E",2070],["^ ","^2D",18,"^2E",2071,"^O","p1__39126#"],["^ ","^2D",0,"^2E",2072]],"^38",[["^ ","^2D",16,"^2E",2070,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^3A",[["^ ","^2D",0,"^2E",2072],["^ ","^2D",4,"^2E",2072,"^O","G__39137"],["^ ","^2D",15,"^2E",2072,"^O","p1__39126#"],["^ ","^2D",0,"^2E",2073],["^ ","^2D",0,"^2E",2073],["^ ","^2D",0,"^2E",2074],["^ ","^2D",23,"^2E",2074,"^O","G__39137"],["^ ","^2D",0,"^2E",2076,"^O","G__39137"]],"^4<",[["^ ","^2D",3,"^2E",2073],["^ ","^2D",24,"^2E",2073,"^O","p1__39126#"]],"^2S",[["^ ","^2D",3,"^2E",2073,"^O","cljs.core/seq?"]],"^4B",[["^ ","^2D",7,"^2E",2074,"^O","cljs.core/first"]],"^40",[["^ ","^2D",1,"^2E",2079,"^O","props"]]],"~i1341",["^ ","^3V",[["^ ","^2D",0,"^2E",2080],["^ ","^2D",10,"^2E",2081],["^ ","^2D",0,"^2E",2083]],"^4Y",[["^ ","^2D",4,"^2E",2080,"^O","joins"]],"^2H",[["^ ","^2D",16,"^2E",2080]],"^3W",[["^ ","^2D",16,"^2E",2080,"^O","cljs.core/seq"]],"^2M",[["^ ","^2D",30,"^2E",2080,"^O","joins"]],"^5;",[["^ ","^2D",4,"^2E",2081,"^O","ret"]]],"~i1342",["^ ","^3L",[["^ ","^2D",0,"^2E",2083],["^ ","^2D",3,"^2E",2083]],"^3E",[["^ ","^2D",5,"^2E",2083],["^ ","^2D",19,"^2E",2083]],"^2L",[["^ ","^2D",6,"^2E",2083,"^O","joins"]]],"~i1343",["^ ","^3H",[["^ ","^2D",0,"^2E",2084],["^ ","^2D",4,"^2E",2085,"^O","vec__39139"],["^ ","^2D",10,"^2E",2086],["^ ","^2D",10,"^2E",2086,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",2086,"^O","vec__39139"],["^ ","^2D",65,"^2E",2086],["^ ","^2D",69,"^2E",2086],["^ ","^2D",10,"^2E",2087],["^ ","^2D",10,"^2E",2087,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",2087,"^O","vec__39139"],["^ ","^2D",65,"^2E",2087],["^ ","^2D",69,"^2E",2087],["^ ","^2D",0,"^2E",2089]],"^3E",[["^ ","^2D",4,"^2E",2084,"^O","join"]],"^2K",[["^ ","^2D",11,"^2E",2084]],"^2L",[["^ ","^2D",11,"^2E",2084,"^O","cljs.core/first"]],"^5C",[["^ ","^2D",27,"^2E",2084,"^O","joins"]]],"~i1344",["^ ","^38",[["^ ","^2D",4,"^2E",2086,"^O","key"]],"^2K",[["^ ","^2D",4,"^2E",2087,"^O","sel"]],"^4>",[["^ ","^2D",17,"^2E",2085]],"^2Q",[["^ ","^2D",17,"^2E",2085,"^O","fulcro.util/join-entry"]],"^2W",[["^ ","^2D",40,"^2E",2085,"^O","join"]]],"~i1345",["^ ","^3E",[["^ ","^2D",4,"^2E",2088,"^O","v"]],"^2K",[["^ ","^2D",8,"^2E",2088]],"^2L",[["^ ","^2D",8,"^2E",2088,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^4>",[["^ ","^2D",52,"^2E",2088,"^O","ident"]],"^3Z",[["^ ","^2D",58,"^2E",2088,"^O","key"]]],"~i1346",["^ ","^30",[["^ ","^2D",0,"^2E",2089]],"^2H",[["^ ","^2D",15,"^2E",2089]],"^3W",[["^ ","^2D",15,"^2E",2089,"^O","cljs.core/next"]],"^2N",[["^ ","^2D",30,"^2E",2089,"^O","joins"]]],"~i1347",["^ ","^48",[["^ ","^2D",15,"^2E",2090]],"^2C",[["^ ","^2D",15,"^2E",2090,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2K",[["^ ","^2D",61,"^2E",2090,"^O","ret"]]],"~i1348",["^ ","^3E",[["^ ","^2D",65,"^2E",2090,"^O","key"]],"^3W",[["^ ","^2D",69,"^2E",2090]],"^2K",[["^ ","^2D",70,"^2E",2090,"^O","fulcro.client.primitives/denormalize*"],["^ ","^2D",145,"^2E",2090,"^O","fulcro.client.primitives/denormalize*"],["^ ","^2D",277,"^2E",2090,"^O","fulcro.client.primitives/denormalize*"]],"^2S",[["^ ","^2D",218,"^2E",2090,"^O","sel"],["^ ","^2D",330,"^2E",2090,"^O","sel"]],"^2V",[["^ ","^2D",222,"^2E",2090,"^O","v"],["^ ","^2D",334,"^2E",2090,"^O","v"]],"^4@",[["^ ","^2D",224,"^2E",2090,"^O","refs"],["^ ","^2D",336,"^2E",2090,"^O","refs"]],"^2Y",[["^ ","^2D",229,"^2E",2090,"^O","map-ident"],["^ ","^2D",341,"^2E",2090,"^O","map-ident"]]],"~i1349",["^ ","^2L",[["^ ","^2D",239,"^2E",2090,"^O","idents-seen"],["^ ","^2D",351,"^2E",2090,"^O","idents-seen"]],"^2S",[["^ ","^2D",251,"^2E",2090,"^O","union-expr"],["^ ","^2D",363,"^2E",2090,"^O","union-expr"]],"^2Y",[["^ ","^2D",262,"^2E",2090,"^O","recurse-key"],["^ ","^2D",374,"^2E",2090,"^O","recurse-key"]]],"~i1350",["^ ","^3H",[["^ ","^2D",0,"^2E",2095]],"^2X",[["^ ","^2D",7,"^2E",2095,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]],"^38",[["^ ","^2D",110,"^2E",2095]],"^2F",[["^ ","^2D",110,"^2E",2095,"^O","cljs.core/select-keys"]],"^3F",[["^ ","^2D",132,"^2E",2095,"^O","ident"]],"^2U",[["^ ","^2D",138,"^2E",2095,"^O","props"]],"^2W",[["^ ","^2D",149,"^2E",2095,"^O","ret"]]],"~i1351",["^ ","^3D",[["^ ","^2D",0,"^2E",2101],["^ ","^2D",0,"^2E",2123]],"^3L",[["^ ","^2D",4,"^2E",2101,"^O","ident'"]],"^3W",[["^ ","^2D",25,"^2E",2101]],"^2K",[["^ ","^2D",25,"^2E",2101,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^5C",[["^ ","^2D",72,"^2E",2101,"^O","refs"]],"^4<",[["^ ","^2D",77,"^2E",2101]],"^2S",[["^ ","^2D",78,"^2E",2101,"^O","map-ident"],["^ ","^2D",120,"^2E",2101,"^O","map-ident"],["^ ","^2D",169,"^2E",2101,"^O","map-ident"]],"^5[",[["^ ","^2D",160,"^2E",2101,"^O","ident"],["^ ","^2D",189,"^2E",2101,"^O","ident"]]],"~i1352",["^ ","^3L",[["^ ","^2D",4,"^2E",2102,"^O","query"]],"^3W",[["^ ","^2D",16,"^2E",2102],["^ ","^2D",33,"^2E",2102,"^O","G__39143"],["^ ","^2D",0,"^2E",2103],["^ ","^2D",0,"^2E",2103],["^ ","^2D",0,"^2E",2106,"^O","G__39143"]],"^5C",[["^ ","^2D",44,"^2E",2102,"^O","query"]]],"~i1353",["^ ","^2L",[["^ ","^2D",20,"^2E",2103,"^O","union-recur?"]],"^4E",[["^ ","^2D",0,"^2E",2104],["^ ","^2D",61,"^2E",2104,"^O","G__39143"]],"^2U",[["^ ","^2D",7,"^2E",2104,"^O","fulcro.client.primitives/reduce-union-recursion-depth"]],"^=;",[["^ ","^2D",70,"^2E",2104,"^O","recurse-key"]]],"~i1356",["^ ","^3L",[["^ ","^2D",4,"^2E",2109,"^O","union-seen'"]],"^3W",[["^ ","^2D",30,"^2E",2109],["^ ","^2D",47,"^2E",2109,"^O","G__39144"],["^ ","^2D",0,"^2E",2110],["^ ","^2D",0,"^2E",2110],["^ ","^2D",0,"^2E",2113,"^O","G__39144"]],"^5C",[["^ ","^2D",58,"^2E",2109,"^O","union-expr"]]],"~i1357",["^ ","^2L",[["^ ","^2D",20,"^2E",2110,"^O","union-recur?"]],"^4E",[["^ ","^2D",0,"^2E",2111],["^ ","^2D",61,"^2E",2111,"^O","G__39144"]],"^2U",[["^ ","^2D",7,"^2E",2111,"^O","fulcro.client.primitives/reduce-union-recursion-depth"]],"^=;",[["^ ","^2D",70,"^2E",2111,"^O","recurse-key"]]],"~i1358",["^ ","^3L",[["^ ","^2D",4,"^2E",2116,"^O","query'"]],"^3W",[["^ ","^2D",25,"^2E",2116],["^ ","^2D",42,"^2E",2116,"^O","G__39146"],["^ ","^2D",0,"^2E",2117],["^ ","^2D",0,"^2E",2117],["^ ","^2D",0,"^2E",2120,"^O","G__39146"]],"^5C",[["^ ","^2D",53,"^2E",2116,"^O","query"]]],"~i1359",["^ ","^2L",[["^ ","^2D",3,"^2E",2117]],"^3A",[["^ ","^2D",3,"^2E",2117,"^O","cljs.core/map?"]],"^5C",[["^ ","^2D",24,"^2E",2117,"^O","query"]],"^4E",[["^ ","^2D",0,"^2E",2118],["^ ","^2D",51,"^2E",2118,"^O","G__39146"]],"^2U",[["^ ","^2D",7,"^2E",2118,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^4@",[["^ ","^2D",60,"^2E",2118]],"^7U",[["^ ","^2D",60,"^2E",2118,"^O","cljs.core/first"]],"^2Z",[["^ ","^2D",76,"^2E",2118,"^O","ident"]]],"~i1360",["^ ","^3Y",[["^ ","^2D",0,"^2E",2123],["^ ","^2D",245,"^2E",2123],["^ ","^2D",395,"^2E",2123]],"^3=",[["^ ","^2D",8,"^2E",2123,"^O","fulcro.client.primitives/denormalize*"],["^ ","^2D",83,"^2E",2123,"^O","fulcro.client.primitives/denormalize*"],["^ ","^2D",253,"^2E",2123,"^O","fulcro.client.primitives/denormalize*"]],"^2F",[["^ ","^2D",156,"^2E",2123,"^O","query'"],["^ ","^2D",306,"^2E",2123,"^O","query'"]],"^2N",[["^ ","^2D",175,"^2E",2123,"^O","ident'"],["^ ","^2D",325,"^2E",2123,"^O","ident'"]],"^3Z",[["^ ","^2D",194,"^2E",2123,"^O","refs"],["^ ","^2D",344,"^2E",2123,"^O","refs"]],"^5F",[["^ ","^2D",199,"^2E",2123,"^O","map-ident"],["^ ","^2D",349,"^2E",2123,"^O","map-ident"]],"^2Z",[["^ ","^2D",209,"^2E",2123,"^O","idents-seen"],["^ ","^2D",359,"^2E",2123,"^O","idents-seen"]],"^:M",[["^ ","^2D",221,"^2E",2123,"^O","union-seen'"],["^ ","^2D",371,"^2E",2123,"^O","union-seen'"]]],"~i1361",["^ ","~i8",[["^ ","^2D",0,"^2E",2127],["^ ","^2D",52,"^2E",2127]],"~i9",[["^ ","^2D",7,"^2E",2127,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"^3K",[["^ ","^2D",85,"^2E",2127]],"^2O",[["^ ","^2D",85,"^2E",2127,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^2P",[["^ ","^2D",129,"^2E",2127,"^O","step"]],"^4I",[["^ ","^2D",135,"^2E",2127,"^O","data"]]],"~i1363",["^ ","~i6",[["^ ","^2D",20,"^2E",2129],["^ ","^2D",37,"^2E",2129,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2130],["^ ","^2D",0,"^2E",2130],["^ ","^2D",3,"^2E",2130,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2133,"^O","and__3938__auto__"]],"^2T",[["^ ","^2D",57,"^2E",2129]],"^3S",[["^ ","^2D",57,"^2E",2129,"^O","cljs.core/map?"]],"^3K",[["^ ","^2D",78,"^2E",2129,"^O","query"]],"^3=",[["^ ","^2D",0,"^2E",2131,"^O","union-recur?"]]],"~i1364",["^ ","~i6",[["^ ","^2D",0,"^2E",2136],["^ ","^2D",4,"^2E",2136,"^O","G__39147"],["^ ","^2D",4,"^2E",2137,"^O","G__39148"],["^ ","^2D",4,"^2E",2138,"^O","G__39149"],["^ ","^2D",4,"^2E",2139,"^O","G__39150"],["^ ","^2D",4,"^2E",2140,"^O","G__39151"],["^ ","^2D",4,"^2E",2141,"^O","G__39152"],["^ ","^2D",4,"^2E",2142,"^O","G__39153"],["^ ","^2D",0,"^2E",2143],["^ ","^2D",0,"^2E",2143],["^ ","^2D",156,"^2E",2143,"^O","G__39147"],["^ ","^2D",165,"^2E",2143,"^O","G__39148"],["^ ","^2D",174,"^2E",2143,"^O","G__39149"],["^ ","^2D",183,"^2E",2143,"^O","G__39150"],["^ ","^2D",192,"^2E",2143,"^O","G__39151"],["^ ","^2D",201,"^2E",2143,"^O","G__39152"],["^ ","^2D",210,"^2E",2143,"^O","G__39153"],["^ ","^2D",275,"^2E",2143,"^O","G__39147"],["^ ","^2D",284,"^2E",2143,"^O","G__39148"],["^ ","^2D",293,"^2E",2143,"^O","G__39149"],["^ ","^2D",302,"^2E",2143,"^O","G__39150"],["^ ","^2D",311,"^2E",2143,"^O","G__39151"],["^ ","^2D",320,"^2E",2143,"^O","G__39152"],["^ ","^2D",329,"^2E",2143,"^O","G__39153"]],"~i7",[["^ ","^2D",8,"^2E",2143,"^O","fulcro.client.primitives/denormalize*"],["^ ","^2D",83,"^2E",2143,"^O","fulcro.client.primitives/denormalize*"],["^ ","^2D",222,"^2E",2143,"^O","fulcro.client.primitives/denormalize*"]],"^4X",[["^ ","^2D",15,"^2E",2136]],"^3D",[["^ ","^2D",15,"^2E",2136,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3V",[["^ ","^2D",59,"^2E",2136,"^O","query"]],"^30",[["^ ","^2D",65,"^2E",2136]],"^4Y",[["^ ","^2D",65,"^2E",2136,"^O","cljs.core/first"]],"^2H",[["^ ","^2D",81,"^2E",2136,"^O","recur-ident"]],"^4<",[["^ ","^2D",15,"^2E",2137,"^O","data"]],"^2V",[["^ ","^2D",15,"^2E",2138,"^O","refs"]],"^2W",[["^ ","^2D",15,"^2E",2139,"^O","map-ident"]]],"~i1365",["^ ","~i8",[["^ ","^2D",15,"^2E",2140,"^O","idents-seen"]],"^4X",[["^ ","^2D",15,"^2E",2141,"^O","union-expr"]],"^30",[["^ ","^2D",15,"^2E",2142,"^O","recurse-key"]]],"~i1369",["^ ","~i6",[["^ ","^2D",0,"^2E",2145]],"^2I",[["^ ","^2D",3,"^2E",2145],["^ ","^2D",48,"^2E",2145],["^ ","^2D",131,"^2E",2145]],"^2T",[["^ ","^2D",3,"^2E",2145,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2O",[["^ ","^2D",189,"^2E",2145,"^O","query"]]],"~i1370",["^ ","~i8",[["^ ","^2D",0,"^2E",2146,"^O","data"]]],"~i1371",["^ ","~i8",[["^ ","^2D",0,"^2E",2148],["^ ","^2D",4,"^2E",2148,"^O","map__39155"],["^ ","^2D",4,"^2E",2158,"^O","map__39155"],["^ ","^2D",21,"^2E",2158],["^ ","^2D",23,"^2E",2158],["^ ","^2D",25,"^2E",2158],["^ ","^2D",27,"^2E",2158],["^ ","^2D",28,"^2E",2158,"^O","map__39155"],["^ ","^2D",42,"^2E",2158],["^ ","^2D",50,"^2E",2158],["^ ","^2D",52,"^2E",2158],["^ ","^2D",54,"^2E",2158],["^ ","^2D",55,"^2E",2158],["^ ","^2D",55,"^2E",2158,"^O","map__39155"],["^ ","^2D",104,"^2E",2158],["^ ","^2D",115,"^2E",2158],["^ ","^2D",116,"^2E",2158,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",2158],["^ ","^2D",148,"^2E",2158,"^O","map__39155"],["^ ","^2D",179,"^2E",2158],["^ ","^2D",184,"^2E",2158],["^ ","^2D",191,"^2E",2158],["^ ","^2D",199,"^2E",2158],["^ ","^2D",199,"^2E",2158,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",2158,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",2158,"^O","map__39155"],["^ ","^2D",276,"^2E",2158,"^O","map__39155"],["^ ","^2D",12,"^2E",2159],["^ ","^2D",12,"^2E",2159,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",56,"^2E",2159,"^O","map__39155"],["^ ","^2D",71,"^2E",2159],["^ ","^2D",12,"^2E",2160],["^ ","^2D",12,"^2E",2160,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",56,"^2E",2160,"^O","map__39155"],["^ ","^2D",71,"^2E",2160],["^ ","^2D",0,"^2E",2171]],"^2J",[["^ ","^2D",4,"^2E",2159,"^O","props"]],"^3L",[["^ ","^2D",4,"^2E",2160,"^O","joins"]],"^3W",[["^ ","^2D",17,"^2E",2148],["^ ","^2D",36,"^2E",2148],["^ ","^2D",18,"^2E",2149,"^O","p1__39127#"],["^ ","^2D",0,"^2E",2150]],"^2K",[["^ ","^2D",17,"^2E",2148,"^O","cljs.core/group-by"]],"^5;",[["^ ","^2D",0,"^2E",2150],["^ ","^2D",4,"^2E",2150,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",2151],["^ ","^2D",0,"^2E",2151],["^ ","^2D",20,"^2E",2151,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",2152,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",2154]],"^4E",[["^ ","^2D",23,"^2E",2150],["^ ","^2D",47,"^2E",2150,"^O","p1__39127#"]],"^2U",[["^ ","^2D",23,"^2E",2150,"^O","fulcro.util/join?"]],"^6>",[["^ ","^2D",9,"^2E",2154],["^ ","^2D",34,"^2E",2154,"^O","p1__39127#"]],"^>B",[["^ ","^2D",9,"^2E",2154,"^O","fulcro.util/ident?"]]],"~i1372",["^ ","^4<",[["^ ","^2D",57,"^2E",2154]],"^2V",[["^ ","^2D",59,"^2E",2154],["^ ","^2D",80,"^2E",2154,"^O","p1__39127#"]],"^4J",[["^ ","^2D",59,"^2E",2154,"^O","cljs.core/seq?"]],"^2Z",[["^ ","^2D",103,"^2E",2154]],"^3[",[["^ ","^2D",103,"^2E",2154,"^O","fulcro.util/ident?"]],"^34",[["^ ","^2D",128,"^2E",2154],["^ ","^2D",144,"^2E",2154,"^O","p1__39127#"]],"^36",[["^ ","^2D",128,"^2E",2154,"^O","cljs.core/first"]]],"~i1373",["^ ","^2L",[["^ ","^2D",1,"^2E",2157,"^O","query"]]],"~i1374",["^ ","^44",[["^ ","^2D",4,"^2E",2161,"^O","props"]],"^4X",[["^ ","^2D",16,"^2E",2161],["^ ","^2D",61,"^2E",2161],["^ ","^2D",18,"^2E",2162,"^O","p1__39128#"],["^ ","^2D",0,"^2E",2163]],"^3D",[["^ ","^2D",16,"^2E",2161,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^3L",[["^ ","^2D",0,"^2E",2163],["^ ","^2D",4,"^2E",2163,"^O","G__39158"],["^ ","^2D",15,"^2E",2163,"^O","p1__39128#"],["^ ","^2D",0,"^2E",2164],["^ ","^2D",0,"^2E",2164],["^ ","^2D",0,"^2E",2165],["^ ","^2D",23,"^2E",2165,"^O","G__39158"],["^ ","^2D",0,"^2E",2167,"^O","G__39158"]],"^2F",[["^ ","^2D",3,"^2E",2164],["^ ","^2D",24,"^2E",2164,"^O","p1__39128#"]],"^2H",[["^ ","^2D",3,"^2E",2164,"^O","cljs.core/seq?"]],"^2Q",[["^ ","^2D",7,"^2E",2165,"^O","cljs.core/first"]],"^2S",[["^ ","^2D",1,"^2E",2170,"^O","props"]]],"~i1375",["^ ","^2I",[["^ ","^2D",0,"^2E",2171],["^ ","^2D",10,"^2E",2172],["^ ","^2D",0,"^2E",2174]],"^3K",[["^ ","^2D",4,"^2E",2171,"^O","joins"]],"^3Y",[["^ ","^2D",16,"^2E",2171]],"^3=",[["^ ","^2D",16,"^2E",2171,"^O","cljs.core/seq"]],"^4I",[["^ ","^2D",30,"^2E",2171,"^O","joins"]],"^3E",[["^ ","^2D",4,"^2E",2172,"^O","ret"]]],"~i1376",["^ ","^3S",[["^ ","^2D",0,"^2E",2174],["^ ","^2D",3,"^2E",2174]],"^4X",[["^ ","^2D",5,"^2E",2174],["^ ","^2D",19,"^2E",2174]],"^3>",[["^ ","^2D",6,"^2E",2174,"^O","joins"]]],"~i1377",["^ ","^44",[["^ ","^2D",0,"^2E",2175],["^ ","^2D",4,"^2E",2190,"^O","vec__39160"],["^ ","^2D",10,"^2E",2191],["^ ","^2D",10,"^2E",2191,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",2191,"^O","vec__39160"],["^ ","^2D",65,"^2E",2191],["^ ","^2D",69,"^2E",2191],["^ ","^2D",10,"^2E",2192],["^ ","^2D",10,"^2E",2192,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",2192,"^O","vec__39160"],["^ ","^2D",65,"^2E",2192],["^ ","^2D",69,"^2E",2192],["^ ","^2D",0,"^2E",2234]],"^4X",[["^ ","^2D",4,"^2E",2175,"^O","join"]],"^4Y",[["^ ","^2D",11,"^2E",2175]],"^48",[["^ ","^2D",11,"^2E",2175,"^O","cljs.core/first"]],"^3W",[["^ ","^2D",27,"^2E",2175,"^O","joins"]]],"~i1378",["^ ","^4X",[["^ ","^2D",4,"^2E",2176,"^O","join"]],"^4Y",[["^ ","^2D",15,"^2E",2176],["^ ","^2D",32,"^2E",2176,"^O","G__39163"],["^ ","^2D",0,"^2E",2177],["^ ","^2D",0,"^2E",2177],["^ ","^2D",0,"^2E",2178],["^ ","^2D",23,"^2E",2178,"^O","G__39163"],["^ ","^2D",0,"^2E",2180,"^O","G__39163"]],"^2K",[["^ ","^2D",43,"^2E",2176,"^O","join"]]],"~i1379",["^ ","^2C",[["^ ","^2D",3,"^2E",2177]],"^3E",[["^ ","^2D",3,"^2E",2177,"^O","cljs.core/seq?"]],"^2K",[["^ ","^2D",24,"^2E",2177,"^O","join"]],"^2Q",[["^ ","^2D",7,"^2E",2178,"^O","cljs.core/first"]]],"~i1380",["^ ","^4X",[["^ ","^2D",4,"^2E",2183,"^O","join"]],"^4Y",[["^ ","^2D",15,"^2E",2183],["^ ","^2D",32,"^2E",2183,"^O","G__39164"],["^ ","^2D",0,"^2E",2184],["^ ","^2D",0,"^2E",2184],["^ ","^2D",0,"^2E",2187,"^O","G__39164"]],"^2K",[["^ ","^2D",43,"^2E",2183,"^O","join"]]],"~i1381",["^ ","^2C",[["^ ","^2D",3,"^2E",2184]],"^3E",[["^ ","^2D",3,"^2E",2184,"^O","fulcro.util/ident?"]],"^5C",[["^ ","^2D",28,"^2E",2184,"^O","join"]],"^2S",[["^ ","^2D",0,"^2E",2185],["^ ","^2D",7,"^2E",2185,"^O","cljs.core/PersistentHashMap"],["^ ","^2D",46,"^2E",2185],["^ ","^2D",47,"^2E",2185,"^O","G__39164"],["^ ","^2D",57,"^2E",2185],["^ ","^2D",58,"^2E",2185],["^ ","^2D",141,"^2E",2185]]],"~i1382",["^ ","^3D",[["^ ","^2D",4,"^2E",2191,"^O","key"]],"^3V",[["^ ","^2D",4,"^2E",2192,"^O","sel"]],"^2X",[["^ ","^2D",17,"^2E",2190]],"^30",[["^ ","^2D",17,"^2E",2190,"^O","fulcro.util/join-entry"]],"^5C",[["^ ","^2D",40,"^2E",2190,"^O","join"]]],"~i1383",["^ ","^4X",[["^ ","^2D",4,"^2E",2193,"^O","recurse?"]],"^4Y",[["^ ","^2D",21,"^2E",2193]],"^48",[["^ ","^2D",21,"^2E",2193,"^O","fulcro.util/recursion?"]],"^3F",[["^ ","^2D",50,"^2E",2193,"^O","sel"]]],"~i1384",["^ ","^4X",[["^ ","^2D",4,"^2E",2194,"^O","recurse-key"]],"^4Y",[["^ ","^2D",22,"^2E",2194],["^ ","^2D",40,"^2E",2194],["^ ","^2D",44,"^2E",2194]],"^2H",[["^ ","^2D",24,"^2E",2194,"^O","recurse?"]],"^5C",[["^ ","^2D",40,"^2E",2194,"^O","key"]]],"~i1385",["^ ","^4X",[["^ ","^2D",4,"^2E",2195,"^O","v"]],"^4Y",[["^ ","^2D",8,"^2E",2195]],"^38",[["^ ","^2D",10,"^2E",2195]],"^2F",[["^ ","^2D",10,"^2E",2195,"^O","fulcro.util/ident?"]],"^3F",[["^ ","^2D",35,"^2E",2195,"^O","key"]]],"~i1386",["^ ","^2C",[["^ ","^2D",41,"^2E",2195]],"^2H",[["^ ","^2D",43,"^2E",2195],["^ ","^2D",88,"^2E",2195]],"^3W",[["^ ","^2D",43,"^2E",2195,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2N",[["^ ","^2D",140,"^2E",2195]],"^4>",[["^ ","^2D",140,"^2E",2195,"^O","cljs.core/second"]],"^4<",[["^ ","^2D",157,"^2E",2195,"^O","key"]]],"~i1387",["^ ","^38",[["^ ","^2D",164,"^2E",2195]],"^2F",[["^ ","^2D",164,"^2E",2195,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2L",[["^ ","^2D",208,"^2E",2195,"^O","refs"]],"^2Q",[["^ ","^2D",213,"^2E",2195]],"^5C",[["^ ","^2D",213,"^2E",2195,"^O","cljs.core/first"]],"^2S",[["^ ","^2D",229,"^2E",2195,"^O","key"]]],"~i1388",["^ ","^38",[["^ ","^2D",235,"^2E",2195]],"^2F",[["^ ","^2D",235,"^2E",2195,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2N",[["^ ","^2D",282,"^2E",2195,"^O","refs"]],"^3F",[["^ ","^2D",287,"^2E",2195]],"^5;",[["^ ","^2D",288,"^2E",2195,"^O","map-ident"],["^ ","^2D",330,"^2E",2195,"^O","map-ident"],["^ ","^2D",377,"^2E",2195,"^O","map-ident"]],"^7U",[["^ ","^2D",370,"^2E",2195,"^O","key"],["^ ","^2D",397,"^2E",2195,"^O","key"]]],"~i1389",["^ ","^2C",[["^ ","^2D",405,"^2E",2195]],"^3E",[["^ ","^2D",405,"^2E",2195,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3W",[["^ ","^2D",449,"^2E",2195,"^O","data"]],"^2N",[["^ ","^2D",458,"^2E",2195,"^O","key"]]],"~i1390",["^ ","^4X",[["^ ","^2D",4,"^2E",2196,"^O","key"]],"^4Y",[["^ ","^2D",14,"^2E",2196],["^ ","^2D",31,"^2E",2196,"^O","G__39167"],["^ ","^2D",0,"^2E",2197],["^ ","^2D",0,"^2E",2197],["^ ","^2D",0,"^2E",2198],["^ ","^2D",23,"^2E",2198,"^O","G__39167"],["^ ","^2D",0,"^2E",2200,"^O","G__39167"]],"^2K",[["^ ","^2D",42,"^2E",2196,"^O","key"]],"^2N",[["^ ","^2D",3,"^2E",2197]],"^4>",[["^ ","^2D",3,"^2E",2197,"^O","fulcro.util/unique-ident?"]],"^2Y",[["^ ","^2D",35,"^2E",2197,"^O","key"]],"^6>",[["^ ","^2D",7,"^2E",2198,"^O","cljs.core/first"]]],"~i1391",["^ ","^4X",[["^ ","^2D",4,"^2E",2203,"^O","v"]],"^4Y",[["^ ","^2D",12,"^2E",2203]],"^38",[["^ ","^2D",30,"^2E",2203]],"^2F",[["^ ","^2D",30,"^2E",2203,"^O","fulcro.client.primitives/mappable-ident?"]],"^2S",[["^ ","^2D",77,"^2E",2203,"^O","refs"]],"^4J",[["^ ","^2D",82,"^2E",2203,"^O","v"]]],"~i1392",["^ ","^2C",[["^ ","^2D",86,"^2E",2203],["^ ","^2D",0,"^2E",2205]],"^2L",[["^ ","^2D",103,"^2E",2203,"^O","v"]],"^2M",[["^ ","^2D",111,"^2E",2203,"^O","v"]]],"~i1393",["^ ","^38",[["^ ","^2D",0,"^2E",2205],["^ ","^2D",0,"^2E",2206]],"^3A",[["^ ","^2D",4,"^2E",2205,"^O","next"]],"^5C",[["^ ","^2D",11,"^2E",2205]],"^2R",[["^ ","^2D",11,"^2E",2205,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2U",[["^ ","^2D",58,"^2E",2205,"^O","refs"]],"^7U",[["^ ","^2D",63,"^2E",2205]],"^4B",[["^ ","^2D",64,"^2E",2205,"^O","map-ident"],["^ ","^2D",106,"^2E",2205,"^O","map-ident"],["^ ","^2D",155,"^2E",2205,"^O","map-ident"]],"^2[",[["^ ","^2D",146,"^2E",2205,"^O","v"],["^ ","^2D",175,"^2E",2205,"^O","v"]]],"~i1394",["^ ","^2H",[["^ ","^2D",0,"^2E",2206]],"^3A",[["^ ","^2D",20,"^2E",2206]],"^2M",[["^ ","^2D",20,"^2E",2206,"^O","fulcro.client.primitives/mappable-ident?"]],"^4@",[["^ ","^2D",67,"^2E",2206,"^O","refs"]],"^2Y",[["^ ","^2D",72,"^2E",2206,"^O","next"]]],"~i1395",["^ ","^2K",[["^ ","^2D",0,"^2E",2207]],"^5C",[["^ ","^2D",15,"^2E",2207,"^O","next"]]],"~i1396",["^ ","^2K",[["^ ","^2D",0,"^2E",2211]],"^2L",[["^ ","^2D",8,"^2E",2211,"^O","map-ident"],["^ ","^2D",50,"^2E",2211,"^O","map-ident"],["^ ","^2D",99,"^2E",2211,"^O","map-ident"]],"^3Z",[["^ ","^2D",90,"^2E",2211,"^O","v"],["^ ","^2D",119,"^2E",2211,"^O","v"]]],"~i1397",["^ ","^2C",[["^ ","^2D",5,"^2E",2215,"^O","v"]]],"~i1398",["^ ","^4X",[["^ ","^2D",4,"^2E",2216,"^O","limit"]],"^4Y",[["^ ","^2D",12,"^2E",2216],["^ ","^2D",43,"^2E",2216]],"^38",[["^ ","^2D",14,"^2E",2216]],"^4>",[["^ ","^2D",21,"^2E",2216,"^O","sel"]],"^5;",[["^ ","^2D",39,"^2E",2216,"^O","sel"]]],"~i1399",["^ ","^4X",[["^ ","^2D",4,"^2E",2217,"^O","union-entry"]],"^4Y",[["^ ","^2D",18,"^2E",2217]],"^38",[["^ ","^2D",20,"^2E",2217]],"^2F",[["^ ","^2D",20,"^2E",2217,"^O","fulcro.util/union?"]],"^3F",[["^ ","^2D",45,"^2E",2217,"^O","join"]]],"~i1400",["^ ","^2C",[["^ ","^2D",56,"^2E",2217,"^O","sel"]]],"~i1401",["^ ","^2C",[["^ ","^2D",60,"^2E",2217],["^ ","^2D",78,"^2E",2217],["^ ","^2D",89,"^2E",2217]],"^2K",[["^ ","^2D",62,"^2E",2217,"^O","recurse?"]]],"~i1402",["^ ","^38",[["^ ","^2D",78,"^2E",2217,"^O","union-expr"]]],"~i1403",["^ ","^4X",[["^ ","^2D",4,"^2E",2218,"^O","sel"]],"^4Y",[["^ ","^2D",14,"^2E",2218],["^ ","^2D",131,"^2E",2218],["^ ","^2D",78,"^2E",2224],["^ ","^2D",233,"^2E",2224]]],"~i1404",["^ ","^2C",[["^ ","^2D",16,"^2E",2218,"^O","recurse?"]]],"~i1405",["^ ","^2C",[["^ ","^2D",32,"^2E",2218],["^ ","^2D",34,"^2E",2218]],"^3A",[["^ ","^2D",36,"^2E",2218],["^ ","^2D",51,"^2E",2218]],"^2R",[["^ ","^2D",37,"^2E",2218,"^O","union-expr"]]],"~i1406",["^ ","^38",[["^ ","^2D",59,"^2E",2218,"^O","union-entry"]]],"~i1407",["^ ","^38",[["^ ","^2D",71,"^2E",2218]],"^2F",[["^ ","^2D",71,"^2E",2218,"^O","fulcro.client.primitives/reduce-query-depth"]],"^5F",[["^ ","^2D",115,"^2E",2218,"^O","query"]],"^2W",[["^ ","^2D",121,"^2E",2218,"^O","key"]]],"~i1409",["^ ","^2C",[["^ ","^2D",149,"^2E",2218],["^ ","^2D",166,"^2E",2218,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2219],["^ ","^2D",0,"^2E",2219],["^ ","^2D",20,"^2E",2219,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2222,"^O","and__3938__auto__"]],"^3W",[["^ ","^2D",186,"^2E",2218]],"^2K",[["^ ","^2D",186,"^2E",2218,"^O","fulcro.client.primitives/mappable-ident?"]],"^5F",[["^ ","^2D",233,"^2E",2218,"^O","refs"]],"^4B",[["^ ","^2D",238,"^2E",2218,"^O","v"]]],"~i1410",["^ ","^38",[["^ ","^2D",0,"^2E",2220]],"^2F",[["^ ","^2D",7,"^2E",2220,"^O","fulcro.util/union?"]],"^3F",[["^ ","^2D",32,"^2E",2220,"^O","join"]]],"~i1411",["^ ","^2C",[["^ ","^2D",6,"^2E",2224]],"^3E",[["^ ","^2D",6,"^2E",2224,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3W",[["^ ","^2D",50,"^2E",2224,"^O","sel"]],"^2M",[["^ ","^2D",54,"^2E",2224]],"^2N",[["^ ","^2D",54,"^2E",2224,"^O","cljs.core/first"]],"^5;",[["^ ","^2D",70,"^2E",2224,"^O","v"]]],"~i1413",["^ ","^2C",[["^ ","^2D",80,"^2E",2224]],"^3W",[["^ ","^2D",82,"^2E",2224]],"^2K",[["^ ","^2D",82,"^2E",2224,"^O","fulcro.util/ident?"]],"^4<",[["^ ","^2D",107,"^2E",2224,"^O","key"]]],"~i1414",["^ ","^38",[["^ ","^2D",121,"^2E",2224]],"^2F",[["^ ","^2D",121,"^2E",2224,"^O","fulcro.util/union?"]],"^3F",[["^ ","^2D",146,"^2E",2224,"^O","join"]]],"~i1415",["^ ","^2C",[["^ ","^2D",159,"^2E",2224]],"^3E",[["^ ","^2D",159,"^2E",2224,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3W",[["^ ","^2D",203,"^2E",2224,"^O","sel"]],"^2M",[["^ ","^2D",207,"^2E",2224]],"^2N",[["^ ","^2D",207,"^2E",2224,"^O","cljs.core/first"]],"^5;",[["^ ","^2D",223,"^2E",2224,"^O","key"]]],"~i1417",["^ ","^2K",[["^ ","^2D",233,"^2E",2224,"^O","sel"]]],"~i1418",["^ ","^4X",[["^ ","^2D",4,"^2E",2226,"^O","graph-loop?"]],"^4Y",[["^ ","^2D",24,"^2E",2226]],"^2F",[["^ ","^2D",26,"^2E",2226,"^O","recurse?"]]],"~i1419",["^ ","^2C",[["^ ","^2D",46,"^2E",2226]],"^3E",[["^ ","^2D",46,"^2E",2226,"^O","cljs.core/contains?"]],"^4>",[["^ ","^2D",72,"^2E",2226]],"^2Q",[["^ ","^2D",72,"^2E",2226,"^O","cljs.core/set"]],"^5;",[["^ ","^2D",86,"^2E",2226]],"^3Z",[["^ ","^2D",86,"^2E",2226,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2U",[["^ ","^2D",130,"^2E",2226,"^O","idents-seen"]],"^3[",[["^ ","^2D",142,"^2E",2226,"^O","key"]],"^31",[["^ ","^2D",152,"^2E",2226,"^O","v"]]],"~i1420",["^ ","^2C",[["^ ","^2D",164,"^2E",2226],["^ ","^2D",209,"^2E",2226]],"^3E",[["^ ","^2D",164,"^2E",2226,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2M",[["^ ","^2D",262,"^2E",2226,"^O","limit"]]],"~i1421",["^ ","^4X",[["^ ","^2D",4,"^2E",2227,"^O","idents-seen"]],"^4Y",[["^ ","^2D",22,"^2E",2227]],"^38",[["^ ","^2D",40,"^2E",2227],["^ ","^2D",57,"^2E",2227,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2228],["^ ","^2D",0,"^2E",2228],["^ ","^2D",20,"^2E",2228,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2231,"^O","and__3938__auto__"]],"^2L",[["^ ","^2D",77,"^2E",2227]],"^3A",[["^ ","^2D",77,"^2E",2227,"^O","fulcro.client.primitives/mappable-ident?"]],"^4J",[["^ ","^2D",124,"^2E",2227,"^O","refs"]],"^5[",[["^ ","^2D",129,"^2E",2227,"^O","v"]],"^2Z",[["^ ","^2D",0,"^2E",2229,"^O","recurse?"]]],"~i1422",["^ ","^2H",[["^ ","^2D",75,"^2E",2233,"^O","idents-seen"]]],"~i1423",["^ ","^38",[["^ ","^2D",25,"^2E",2233],["^ ","^2D",87,"^2E",2233]],"^2F",[["^ ","^2D",25,"^2E",2233,"^O","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^2R",[["^ ","^2D",170,"^2E",2233,"^O","key"]],"^2S",[["^ ","^2D",186,"^2E",2233],["^ ","^2D",246,"^2E",2233]],"^4E",[["^ ","^2D",186,"^2E",2233,"^O","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2"]],"^4@",[["^ ","^2D",231,"^2E",2233,"^O","cljs.core/conj"]],"^6>",[["^ ","^2D",281,"^2E",2233,"^O","v"]]],"~i1424",["^ ","^38",[["^ ","^2D",6,"^2E",2233],["^ ","^2D",288,"^2E",2233],["^ ","^2D",371,"^2E",2233]],"^2F",[["^ ","^2D",6,"^2E",2233,"^O","cljs.core/assoc-in"]],"^4@",[["^ ","^2D",435,"^2E",2233,"^O","key"]],"^2Y",[["^ ","^2D",451,"^2E",2233,"^O","v"]],"^40",[["^ ","^2D",458,"^2E",2233,"^O","idents-seen"]]],"~i1425",["^ ","^37",[["^ ","^2D",0,"^2E",2234],["^ ","^2D",0,"^2E",2241],["^ ","^2D",0,"^2E",2248],["^ ","^2D",0,"^2E",2255]]],"~i1426",["^ ","^2O",[["^ ","^2D",3,"^2E",2234],["^ ","^2D",48,"^2E",2234]],"^35",[["^ ","^2D",3,"^2E",2234,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3Y",[["^ ","^2D",52,"^2E",2234,"^O","limit"]],"^2X",[["^ ","^2D",0,"^2E",2235]],"^2F",[["^ ","^2D",15,"^2E",2235]],"^2H",[["^ ","^2D",15,"^2E",2235,"^O","cljs.core/next"]],"^2M",[["^ ","^2D",30,"^2E",2235,"^O","joins"]],"^5;",[["^ ","^2D",15,"^2E",2236,"^O","ret"]]],"~i1427",["^ ","^2O",[["^ ","^2D",3,"^2E",2241,"^O","graph-loop?"]],"^2X",[["^ ","^2D",0,"^2E",2242]],"^2F",[["^ ","^2D",15,"^2E",2242]],"^2H",[["^ ","^2D",15,"^2E",2242,"^O","cljs.core/next"]],"^2M",[["^ ","^2D",30,"^2E",2242,"^O","joins"]],"^5;",[["^ ","^2D",15,"^2E",2243,"^O","ret"]]],"~i1428",["^ ","^2O",[["^ ","^2D",3,"^2E",2248],["^ ","^2D",13,"^2E",2248]],"^3=",[["^ ","^2D",4,"^2E",2248,"^O","v"]],"^3L",[["^ ","^2D",0,"^2E",2249]],"^2C",[["^ ","^2D",15,"^2E",2249]],"^3E",[["^ ","^2D",15,"^2E",2249,"^O","cljs.core/next"]],"^2K",[["^ ","^2D",30,"^2E",2249,"^O","joins"]],"^5C",[["^ ","^2D",15,"^2E",2250,"^O","ret"]]],"~i1429",["^ ","^3=",[["^ ","^2D",0,"^2E",2255]],"^30",[["^ ","^2D",15,"^2E",2255]],"^4Y",[["^ ","^2D",15,"^2E",2255,"^O","cljs.core/next"]],"^2F",[["^ ","^2D",30,"^2E",2255,"^O","joins"]]],"~i1430",["^ ","^3>",[["^ ","^2D",15,"^2E",2256]],"^3L",[["^ ","^2D",15,"^2E",2256,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^48",[["^ ","^2D",61,"^2E",2256,"^O","ret"]]],"~i1431",["^ ","^4I",[["^ ","^2D",65,"^2E",2256,"^O","key"]],"^4Y",[["^ ","^2D",73,"^2E",2256]],"^48",[["^ ","^2D",74,"^2E",2256,"^O","fulcro.client.primitives/denormalize*"],["^ ","^2D",149,"^2E",2256,"^O","fulcro.client.primitives/denormalize*"],["^ ","^2D",298,"^2E",2256,"^O","fulcro.client.primitives/denormalize*"]],"^2Q",[["^ ","^2D",222,"^2E",2256,"^O","sel"],["^ ","^2D",351,"^2E",2256,"^O","sel"]],"^5;",[["^ ","^2D",230,"^2E",2256,"^O","v"],["^ ","^2D",359,"^2E",2256,"^O","v"]],"^4<",[["^ ","^2D",236,"^2E",2256,"^O","refs"],["^ ","^2D",365,"^2E",2256,"^O","refs"]],"^2V",[["^ ","^2D",241,"^2E",2256,"^O","map-ident"],["^ ","^2D",370,"^2E",2256,"^O","map-ident"]]],"~i1432",["^ ","^2C",[["^ ","^2D",251,"^2E",2256,"^O","idents-seen"],["^ ","^2D",380,"^2E",2256,"^O","idents-seen"]],"^2Q",[["^ ","^2D",267,"^2E",2256,"^O","union-entry"],["^ ","^2D",396,"^2E",2256,"^O","union-entry"]],"^4J",[["^ ","^2D",279,"^2E",2256,"^O","recurse-key"],["^ ","^2D",408,"^2E",2256,"^O","recurse-key"]]],"~i1433",["^ ","^44",[["^ ","^2D",0,"^2E",2265],["^ ","^2D",4,"^2E",2265,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",2277],["^ ","^2D",0,"^2E",2277],["^ ","^2D",20,"^2E",2277,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",2278],["^ ","^2D",17,"^2E",2278,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",2279]],"^3Y",[["^ ","^2D",4,"^2E",2278,"^O","looped-key"]],"^2C",[["^ ","^2D",25,"^2E",2265]],"^3E",[["^ ","^2D",25,"^2E",2265,"^O","cljs.core/some"]]],"~i1434",["^ ","^38",[["^ ","^2D",40,"^2E",2265],["^ ","^2D",18,"^2E",2266,"^O","p__39171"],["^ ","^2D",0,"^2E",2267],["^ ","^2D",0,"^2E",2267],["^ ","^2D",4,"^2E",2267,"^O","vec__39172"],["^ ","^2D",17,"^2E",2267,"^O","p__39171"],["^ ","^2D",8,"^2E",2268],["^ ","^2D",8,"^2E",2268,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",2268,"^O","vec__39172"],["^ ","^2D",63,"^2E",2268],["^ ","^2D",67,"^2E",2268],["^ ","^2D",15,"^2E",2269],["^ ","^2D",15,"^2E",2269,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",59,"^2E",2269,"^O","vec__39172"],["^ ","^2D",70,"^2E",2269],["^ ","^2D",74,"^2E",2269],["^ ","^2D",0,"^2E",2270]],"^3A",[["^ ","^2D",4,"^2E",2268,"^O","k"]],"^2N",[["^ ","^2D",4,"^2E",2269,"^O","identset"]]],"~i1435",["^ ","^2H",[["^ ","^2D",0,"^2E",2270],["^ ","^2D",0,"^2E",2273]],"^3A",[["^ ","^2D",3,"^2E",2270]],"^2M",[["^ ","^2D",3,"^2E",2270,"^O","cljs.core/contains?"]],"^2S",[["^ ","^2D",29,"^2E",2270,"^O","identset"]],"^2W",[["^ ","^2D",38,"^2E",2270]],"^5[",[["^ ","^2D",38,"^2E",2270,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3[",[["^ ","^2D",82,"^2E",2270,"^O","data"]],"^>?",[["^ ","^2D",91,"^2E",2270,"^O","k"]]],"~i1436",["^ ","^2K",[["^ ","^2D",0,"^2E",2271],["^ ","^2D",66,"^2E",2271],["^ ","^2D",149,"^2E",2271]],"^2L",[["^ ","^2D",7,"^2E",2271,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2R",[["^ ","^2D",54,"^2E",2271,"^O","idents-seen"]],"^31",[["^ ","^2D",213,"^2E",2271,"^O","k"]]],"~i1438",["^ ","^38",[["^ ","^2D",1,"^2E",2276],["^ ","^2D",60,"^2E",2276]],"^2F",[["^ ","^2D",1,"^2E",2276,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]],"^2N",[["^ ","^2D",48,"^2E",2276,"^O","idents-seen"]]],"~i1439",["^ ","^37",[["^ ","^2D",0,"^2E",2279,"^O","looped-key"]]],"~i1440",["^ ","^37",[["^ ","^2D",0,"^2E",2281]],"^3K",[["^ ","^2D",7,"^2E",2281,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]],"^3Y",[["^ ","^2D",110,"^2E",2281]],"^3=",[["^ ","^2D",110,"^2E",2281,"^O","cljs.core/select-keys"]],"^38",[["^ ","^2D",132,"^2E",2281,"^O","data"]],"^2L",[["^ ","^2D",141,"^2E",2281,"^O","props"]],"^2R",[["^ ","^2D",152,"^2E",2281,"^O","ret"]]],"~i1442",["^ ","~i0",[["^ ","^2D",0,"^2E",2291],["^ ","^2D",0,"^2E",2291],["^ ","^2D",39,"^2E",2296],["^ ","^2D",86,"^2E",2296,"^O","var_args"],["^ ","^2D",0,"^2E",2297],["^ ","^2D",0,"^2E",2297],["^ ","^2D",4,"^2E",2297,"^O","G__39209"],["^ ","^2D",15,"^2E",2297],["^ ","^2D",15,"^2E",2297],["^ ","^2D",0,"^2E",2298],["^ ","^2D",0,"^2E",2298],["^ ","^2D",8,"^2E",2298,"^O","G__39209"],["^ ","^2D",5,"^2E",2299],["^ ","^2D",0,"^2E",2300],["^ ","^2D",7,"^2E",2300,"^O","fulcro.client.primitives/db->tree"],["^ ","^2D",74,"^2E",2300],["^ ","^2D",75,"^2E",2300],["^ ","^2D",85,"^2E",2300],["^ ","^2D",91,"^2E",2300],["^ ","^2D",92,"^2E",2300],["^ ","^2D",102,"^2E",2300],["^ ","^2D",108,"^2E",2300],["^ ","^2D",109,"^2E",2300],["^ ","^2D",119,"^2E",2300],["^ ","^2D",5,"^2E",2303],["^ ","^2D",0,"^2E",2304],["^ ","^2D",7,"^2E",2304,"^O","fulcro.client.primitives/db->tree"],["^ ","^2D",74,"^2E",2304],["^ ","^2D",75,"^2E",2304],["^ ","^2D",85,"^2E",2304],["^ ","^2D",91,"^2E",2304],["^ ","^2D",92,"^2E",2304],["^ ","^2D",102,"^2E",2304],["^ ","^2D",108,"^2E",2304],["^ ","^2D",109,"^2E",2304],["^ ","^2D",119,"^2E",2304],["^ ","^2D",125,"^2E",2304],["^ ","^2D",126,"^2E",2304],["^ ","^2D",136,"^2E",2304],["^ ","^2D",0,"^2E",2308],["^ ","^2D",6,"^2E",2308],["^ ","^2D",11,"^2E",2308,"^O","js/Error"],["^ ","^2D",17,"^2E",2308],["^ ","^2D",18,"^2E",2308],["^ ","^2D",80,"^2E",2308],["^ ","^2D",80,"^2E",2308],["^ ","^2D",0,"^2E",2313],["^ ","^2D",0,"^2E",2313],["^ ","^2D",69,"^2E",2313],["^ ","^2D",0,"^2E",2314],["^ ","^2D",0,"^2E",2314],["^ ","^2D",0,"^2E",2315],["^ ","^2D",0,"^2E",2316],["^ ","^2D",0,"^2E",2316],["^ ","^2D",6,"^2E",2316],["^ ","^2D",11,"^2E",2316,"^O","js/Error"],["^ ","^2D",17,"^2E",2316],["^ ","^2D",0,"^2E",2322],["^ ","^2D",0,"^2E",2322],["^ ","^2D",69,"^2E",2322],["^ ","^2D",0,"^2E",2323],["^ ","^2D",0,"^2E",2323],["^ ","^2D",0,"^2E",2324],["^ ","^2D",0,"^2E",2325],["^ ","^2D",0,"^2E",2325],["^ ","^2D",6,"^2E",2325],["^ ","^2D",11,"^2E",2325,"^O","js/Error"],["^ ","^2D",17,"^2E",2325],["^ ","^2D",0,"^2E",2331],["^ ","^2D",0,"^2E",2331],["^ ","^2D",63,"^2E",2331],["^ ","^2D",0,"^2E",2333]],"~i6",[["^ ","^2D",0,"^2E",2296,"^O","fulcro.client.primitives/db->tree"],["^ ","^2D",0,"^2E",2313,"^O","fulcro.client.primitives/db->tree"],["^ ","^2D",0,"^2E",2322,"^O","fulcro.client.primitives/db->tree"],["^ ","^2D",0,"^2E",2331,"^O","fulcro.client.primitives/db->tree"]]],"~i1446",["^ ","~i4",[["^ ","^2D",80,"^2E",2313,"^O","query"]],"^2I",[["^ ","^2D",86,"^2E",2313,"^O","data"]],"^2J",[["^ ","^2D",91,"^2E",2313,"^O","refs"]]],"~i1447",["^ ","^2I",[["^ ","^2D",3,"^2E",2314]],"^2T",[["^ ","^2D",3,"^2E",2314,"^O","cljs.core/map?"]],"^37",[["^ ","^2D",24,"^2E",2314,"^O","refs"]]],"~i1448",["^ ","~i3",[["^ ","^2D",0,"^2E",2319],["^ ","^2D",85,"^2E",2319],["^ ","^2D",120,"^2E",2319],["^ ","^2D",125,"^2E",2319]],"~i4",[["^ ","^2D",7,"^2E",2319,"^O","fulcro.client.primitives/denormalize*"]],"^3K",[["^ ","^2D",50,"^2E",2319,"^O","query"]],"^3Y",[["^ ","^2D",56,"^2E",2319,"^O","data"]],"^4I",[["^ ","^2D",61,"^2E",2319,"^O","refs"]],"^48",[["^ ","^2D",66,"^2E",2319,"^O","cljs.core/identity"]]],"~i1449",["^ ","~i4",[["^ ","^2D",80,"^2E",2322,"^O","query"]],"^2I",[["^ ","^2D",86,"^2E",2322,"^O","data"]],"^2J",[["^ ","^2D",91,"^2E",2322,"^O","refs"]],"^4X",[["^ ","^2D",96,"^2E",2322,"^O","map-ident"]]],"~i1450",["^ ","^2I",[["^ ","^2D",3,"^2E",2323]],"^2T",[["^ ","^2D",3,"^2E",2323,"^O","cljs.core/map?"]],"^37",[["^ ","^2D",24,"^2E",2323,"^O","refs"]]],"~i1451",["^ ","~i3",[["^ ","^2D",0,"^2E",2328],["^ ","^2D",76,"^2E",2328],["^ ","^2D",111,"^2E",2328],["^ ","^2D",116,"^2E",2328]],"~i4",[["^ ","^2D",7,"^2E",2328,"^O","fulcro.client.primitives/denormalize*"]],"^3K",[["^ ","^2D",50,"^2E",2328,"^O","query"]],"^3Y",[["^ ","^2D",56,"^2E",2328,"^O","data"]],"^4I",[["^ ","^2D",61,"^2E",2328,"^O","refs"]],"^48",[["^ ","^2D",66,"^2E",2328,"^O","map-ident"]]],"~i1454",["^ ","~i0",[["^ ","^2D",0,"^2E",2333],["^ ","^2D",39,"^2E",2336],["^ ","^2D",0,"^2E",2337]],"~i6",[["^ ","^2D",0,"^2E",2336,"^O","fulcro.client.primitives/ref->any"]]],"~i1456",["^ ","~i3",[["^ ","^2D",86,"^2E",2336,"^O","x"]],"~i5",[["^ ","^2D",88,"^2E",2336,"^O","ref"]]],"~i1457",["^ ","~i2",[["^ ","^2D",0,"^2E",2337],["^ ","^2D",0,"^2E",2338]],"~i8",[["^ ","^2D",4,"^2E",2337,"^O","indexer"]],"^37",[["^ ","^2D",14,"^2E",2337]],"^4X",[["^ ","^2D",16,"^2E",2337]],"^3D",[["^ ","^2D",16,"^2E",2337,"^O","fulcro.client.primitives/reconciler?"]],"^48",[["^ ","^2D",59,"^2E",2337,"^O","x"]],"^38",[["^ ","^2D",63,"^2E",2337]],"^2F",[["^ ","^2D",63,"^2E",2337,"^O","fulcro.client.primitives/get-indexer"]],"^3F",[["^ ","^2D",100,"^2E",2337,"^O","x"]],"^4<",[["^ ","^2D",103,"^2E",2337,"^O","x"]]],"~i1458",["^ ","~i4",[["^ ","^2D",0,"^2E",2338]],"~i5",[["^ ","^2D",7,"^2E",2338,"^O","cljs.core/first"]],"^2T",[["^ ","^2D",23,"^2E",2338]],"^3S",[["^ ","^2D",23,"^2E",2338,"^O","fulcro.client.impl.protocols/key->components"]],"^2X",[["^ ","^2D",71,"^2E",2338,"^O","indexer"]],"^2H",[["^ ","^2D",79,"^2E",2338,"^O","ref"]]],"~i1460",["^ ","~i0",[["^ ","^2D",0,"^2E",2340],["^ ","^2D",43,"^2E",2343],["^ ","^2D",0,"^2E",2344]],"~i6",[["^ ","^2D",0,"^2E",2343,"^O","fulcro.client.primitives/resolve-tempids"]]],"~i1462",["^ ","~i3",[["^ ","^2D",94,"^2E",2343,"^O","state"]],"~i9",[["^ ","^2D",100,"^2E",2343,"^O","tid->rid"]]],"~i1463",["^ ","~i2",[["^ ","^2D",0,"^2E",2344]],"~i6",[["^ ","^2D",3,"^2E",2344]],"~i7",[["^ ","^2D",3,"^2E",2344,"^O","cljs.core/empty?"]],"^44",[["^ ","^2D",26,"^2E",2344,"^O","tid->rid"]]],"~i1464",["^ ","~i4",[["^ ","^2D",0,"^2E",2345,"^O","state"]]],"~i1465",["^ ","~i4",[["^ ","^2D",0,"^2E",2347],["^ ","^2D",28,"^2E",2347],["^ ","^2D",39,"^2E",2347,"^O","p1__39218#"],["^ ","^2D",0,"^2E",2348]],"~i5",[["^ ","^2D",7,"^2E",2347,"^O","clojure.walk/prewalk"]],"^44",[["^ ","^2D",0,"^2E",2348],["^ ","^2D",0,"^2E",2351,"^O","p1__39218#"]],"^2O",[["^ ","^2D",20,"^2E",2348],["^ ","^2D",161,"^2E",2348,"^O","p1__39218#"],["^ ","^2D",230,"^2E",2348,"^O","p1__39218#"]],"^35",[["^ ","^2D",21,"^2E",2348,"^O","fulcro.client.primitives/tempid?"],["^ ","^2D",92,"^2E",2348,"^O","fulcro.client.primitives/tempid?"],["^ ","^2D",181,"^2E",2348,"^O","fulcro.client.primitives/tempid?"]],"^2X",[["^ ","^2D",0,"^2E",2349],["^ ","^2D",63,"^2E",2349,"^O","p1__39218#"],["^ ","^2D",80,"^2E",2349,"^O","p1__39218#"]],"^30",[["^ ","^2D",7,"^2E",2349,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"]],"^3E",[["^ ","^2D",51,"^2E",2349,"^O","tid->rid"]],"^4<",[["^ ","^2D",3,"^2E",2353,"^O","state"]]],"~i1467",["^ ","~i0",[["^ ","^2D",0,"^2E",2356],["^ ","^2D",60,"^2E",2361],["^ ","^2D",0,"^2E",2362]],"~i6",[["^ ","^2D",0,"^2E",2361,"^O","fulcro.client.primitives/rewrite-tempids-in-request-queue"]]],"~i1471",["^ ","~i3",[["^ ","^2D",128,"^2E",2361,"^O","queue"]],"~i9",[["^ ","^2D",134,"^2E",2361,"^O","tempid-map"]]],"~i1472",["^ ","~i2",[["^ ","^2D",0,"^2E",2362],["^ ","^2D",14,"^2E",2363],["^ ","^2D",0,"^2E",2365]],"~i9",[["^ ","^2D",4,"^2E",2362,"^O","entry"]],"^2J",[["^ ","^2D",12,"^2E",2362]],"^37",[["^ ","^2D",12,"^2E",2362,"^O","cljs.core.async/poll!"]],"^4I",[["^ ","^2D",39,"^2E",2362,"^O","queue"]],"^3E",[["^ ","^2D",4,"^2E",2363,"^O","entries"]]],"~i1473",["^ ","~i4",[["^ ","^2D",0,"^2E",2365],["^ ","^2D",0,"^2E",2372],["^ ","^2D",0,"^2E",2449]]],"~i1474",["^ ","~i6",[["^ ","^2D",20,"^2E",2365,"^O","entry"]],"^3S",[["^ ","^2D",0,"^2E",2366]],"^35",[["^ ","^2D",15,"^2E",2366]],"^4X",[["^ ","^2D",15,"^2E",2366,"^O","cljs.core.async/poll!"]],"^4Y",[["^ ","^2D",42,"^2E",2366,"^O","queue"]],"^3W",[["^ ","^2D",15,"^2E",2367]],"^2K",[["^ ","^2D",15,"^2E",2367,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^4>",[["^ ","^2D",60,"^2E",2367,"^O","entries"]],"^2S",[["^ ","^2D",68,"^2E",2367]],"^4E",[["^ ","^2D",68,"^2E",2367,"^O","fulcro.client.primitives/resolve-tempids"]],"^>B",[["^ ","^2D",109,"^2E",2367,"^O","entry"]],"^33",[["^ ","^2D",115,"^2E",2367,"^O","tempid-map"]]],"~i1475",["^ ","~i6",[["^ ","^2D",3,"^2E",2372]],"~i7",[["^ ","^2D",3,"^2E",2372,"^O","cljs.core/seq"]],"^2T",[["^ ","^2D",17,"^2E",2372,"^O","entries"]],"^4X",[["^ ","^2D",0,"^2E",2373],["^ ","^2D",4,"^2E",2373,"^O","seq__39222"],["^ ","^2D",17,"^2E",2373],["^ ","^2D",17,"^2E",2373,"^O","cljs.core/seq"],["^ ","^2D",4,"^2E",2374,"^O","chunk__39223"],["^ ","^2D",19,"^2E",2374],["^ ","^2D",4,"^2E",2375,"^O","count__39224"],["^ ","^2D",19,"^2E",2375],["^ ","^2D",4,"^2E",2376,"^O","i__39225"],["^ ","^2D",15,"^2E",2376],["^ ","^2D",0,"^2E",2378],["^ ","^2D",0,"^2E",2378],["^ ","^2D",3,"^2E",2378],["^ ","^2D",3,"^2E",2378],["^ ","^2D",4,"^2E",2378,"^O","i__39225"],["^ ","^2D",15,"^2E",2378,"^O","count__39224"],["^ ","^2D",0,"^2E",2379],["^ ","^2D",8,"^2E",2379],["^ ","^2D",8,"^2E",2379,"^O","chunk__39223"],["^ ","^2D",58,"^2E",2379,"^O","i__39225"],["^ ","^2D",0,"^2E",2380],["^ ","^2D",0,"^2E",2380],["^ ","^2D",0,"^2E",2392],["^ ","^2D",0,"^2E",2393],["^ ","^2D",15,"^2E",2393,"^O","seq__39222"],["^ ","^2D",15,"^2E",2394,"^O","chunk__39223"],["^ ","^2D",15,"^2E",2395,"^O","count__39224"],["^ ","^2D",15,"^2E",2396],["^ ","^2D",16,"^2E",2396,"^O","i__39225"],["^ ","^2D",27,"^2E",2396],["^ ","^2D",0,"^2E",2403],["^ ","^2D",4,"^2E",2403,"^O","temp__5457__auto__"],["^ ","^2D",25,"^2E",2403],["^ ","^2D",25,"^2E",2403,"^O","cljs.core/seq"],["^ ","^2D",39,"^2E",2403,"^O","seq__39222"],["^ ","^2D",0,"^2E",2404],["^ ","^2D",0,"^2E",2404],["^ ","^2D",3,"^2E",2404,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",2405],["^ ","^2D",0,"^2E",2405],["^ ","^2D",4,"^2E",2405,"^O","seq__39222"],["^ ","^2D",21,"^2E",2405,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",2406],["^ ","^2D",0,"^2E",2406],["^ ","^2D",3,"^2E",2406],["^ ","^2D",3,"^2E",2406,"^O","cljs.core/chunked-seq?"],["^ ","^2D",32,"^2E",2406,"^O","seq__39222"],["^ ","^2D",0,"^2E",2407],["^ ","^2D",4,"^2E",2407,"^O","c__4351__auto__"],["^ ","^2D",22,"^2E",2407],["^ ","^2D",22,"^2E",2407,"^O","cljs.core/chunk-first"],["^ ","^2D",44,"^2E",2407,"^O","seq__39222"],["^ ","^2D",0,"^2E",2408],["^ ","^2D",0,"^2E",2408],["^ ","^2D",15,"^2E",2408],["^ ","^2D",15,"^2E",2408,"^O","cljs.core/chunk-rest"],["^ ","^2D",36,"^2E",2408,"^O","seq__39222"],["^ ","^2D",15,"^2E",2409,"^O","c__4351__auto__"],["^ ","^2D",15,"^2E",2410],["^ ","^2D",15,"^2E",2410,"^O","cljs.core/count"],["^ ","^2D",31,"^2E",2410,"^O","c__4351__auto__"],["^ ","^2D",15,"^2E",2411],["^ ","^2D",0,"^2E",2418],["^ ","^2D",8,"^2E",2418],["^ ","^2D",8,"^2E",2418,"^O","cljs.core/first"],["^ ","^2D",24,"^2E",2418,"^O","seq__39222"],["^ ","^2D",0,"^2E",2419],["^ ","^2D",0,"^2E",2419],["^ ","^2D",0,"^2E",2431],["^ ","^2D",0,"^2E",2432],["^ ","^2D",15,"^2E",2432],["^ ","^2D",15,"^2E",2432,"^O","cljs.core/next"],["^ ","^2D",30,"^2E",2432,"^O","seq__39222"],["^ ","^2D",15,"^2E",2433],["^ ","^2D",15,"^2E",2434],["^ ","^2D",15,"^2E",2435],["^ ","^2D",0,"^2E",2443]],"^4I",[["^ ","^2D",4,"^2E",2379,"^O","e"],["^ ","^2D",4,"^2E",2418,"^O","e"]],"^2X",[["^ ","^2D",31,"^2E",2373,"^O","entries"]],"^3W",[["^ ","^2D",0,"^2E",2380],["^ ","^2D",0,"^2E",2381],["^ ","^2D",0,"^2E",2382],["^ ","^2D",0,"^2E",2419],["^ ","^2D",0,"^2E",2420],["^ ","^2D",0,"^2E",2421]],"^3F",[["^ ","^2D",20,"^2E",2380],["^ ","^2D",20,"^2E",2419]],"^5;",[["^ ","^2D",20,"^2E",2380,"^O","cljs.core.async/offer!"],["^ ","^2D",20,"^2E",2419,"^O","cljs.core.async/offer!"]],"^5[",[["^ ","^2D",48,"^2E",2380,"^O","queue"],["^ ","^2D",48,"^2E",2419,"^O","queue"]],"^6>",[["^ ","^2D",54,"^2E",2380,"^O","e"],["^ ","^2D",54,"^2E",2419,"^O","e"]]],"~i1476",["^ ","^2L",[["^ ","^2D",0,"^2E",2382],["^ ","^2D",4,"^2E",2382],["^ ","^2D",4,"^2E",2382],["^ ","^2D",4,"^2E",2382,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",2382],["^ ","^2D",104,"^2E",2382],["^ ","^2D",158,"^2E",2382],["^ ","^2D",185,"^2E",2382],["^ ","^2D",237,"^2E",2382],["^ ","^2D",250,"^2E",2382],["^ ","^2D",355,"^2E",2382],["^ ","^2D",16,"^2E",2383],["^ ","^2D",19,"^2E",2383],["^ ","^2D",20,"^2E",2383,"^O","e39226"],["^ ","^2D",38,"^2E",2383,"^O","js/Error"],["^ ","^2D",0,"^2E",2384],["^ ","^2D",4,"^2E",2384,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",2384,"^O","e39226"],["^ ","^2D",0,"^2E",2385],["^ ","^2D",0,"^2E",2385],["^ ","^2D",0,"^2E",2385,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",2385],["^ ","^2D",100,"^2E",2385],["^ ","^2D",154,"^2E",2385],["^ ","^2D",181,"^2E",2385],["^ ","^2D",233,"^2E",2385],["^ ","^2D",246,"^2E",2385],["^ ","^2D",351,"^2E",2385],["^ ","^2D",404,"^2E",2385,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",2387],["^ ","^2D",0,"^2E",2387],["^ ","^2D",6,"^2E",2387,"^O","e39226"],["^ ","^2D",0,"^2E",2421],["^ ","^2D",4,"^2E",2421],["^ ","^2D",4,"^2E",2421],["^ ","^2D",4,"^2E",2421,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",2421],["^ ","^2D",104,"^2E",2421],["^ ","^2D",158,"^2E",2421],["^ ","^2D",185,"^2E",2421],["^ ","^2D",237,"^2E",2421],["^ ","^2D",250,"^2E",2421],["^ ","^2D",355,"^2E",2421],["^ ","^2D",16,"^2E",2422],["^ ","^2D",19,"^2E",2422],["^ ","^2D",20,"^2E",2422,"^O","e39229"],["^ ","^2D",38,"^2E",2422,"^O","js/Error"],["^ ","^2D",0,"^2E",2423],["^ ","^2D",4,"^2E",2423,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",2423,"^O","e39229"],["^ ","^2D",0,"^2E",2424],["^ ","^2D",0,"^2E",2424],["^ ","^2D",0,"^2E",2424,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",2424],["^ ","^2D",100,"^2E",2424],["^ ","^2D",154,"^2E",2424],["^ ","^2D",181,"^2E",2424],["^ ","^2D",233,"^2E",2424],["^ ","^2D",246,"^2E",2424],["^ ","^2D",351,"^2E",2424],["^ ","^2D",404,"^2E",2424,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",2426],["^ ","^2D",0,"^2E",2426],["^ ","^2D",6,"^2E",2426,"^O","e39229"]]],"~i1479",["^ ","~i0",[["^ ","^2D",0,"^2E",2455],["^ ","^2D",54,"^2E",2458],["^ ","^2D",0,"^2E",2459]],"~i6",[["^ ","^2D",0,"^2E",2458,"^O","fulcro.client.primitives/remove-loads-and-fallbacks"]]],"~i1481",["^ ","~i3",[["^ ","^2D",116,"^2E",2458,"^O","query"]]],"~i1482",["^ ","~i2",[["^ ","^2D",0,"^2E",2459],["^ ","^2D",24,"^2E",2459],["^ ","^2D",105,"^2E",2459],["^ ","^2D",179,"^2E",2459],["^ ","^2D",289,"^2E",2459],["^ ","^2D",363,"^2E",2459],["^ ","^2D",0,"^2E",2468]],"~i8",[["^ ","^2D",4,"^2E",2459,"^O","symbols-to-filter"]]],"~i1483",["^ ","~i8",[["^ ","^2D",4,"^2E",2460,"^O","ast"]],"^3>",[["^ ","^2D",10,"^2E",2460]],"^3L",[["^ ","^2D",11,"^2E",2460,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",82,"^2E",2460,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",160,"^2E",2460,"^O","fulcro.client.primitives/query->ast"]],"^2H",[["^ ","^2D",151,"^2E",2460,"^O","query"],["^ ","^2D",209,"^2E",2460,"^O","query"]]],"~i1484",["^ ","~i8",[["^ ","^2D",4,"^2E",2461,"^O","children"]],"^3>",[["^ ","^2D",15,"^2E",2461],["^ ","^2D",15,"^2E",2461]],"^2F",[["^ ","^2D",106,"^2E",2461,"^O","ast"]]],"~i1485",["^ ","~i8",[["^ ","^2D",4,"^2E",2462,"^O","new-children"]],"^3>",[["^ ","^2D",19,"^2E",2462]],"^3L",[["^ ","^2D",19,"^2E",2462,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^2C",[["^ ","^2D",66,"^2E",2462],["^ ","^2D",0,"^2E",2464]],"^3W",[["^ ","^2D",18,"^2E",2463,"^O","child"]],"^2Q",[["^ ","^2D",0,"^2E",2464]],"^3Z",[["^ ","^2D",9,"^2E",2464]],"^4<",[["^ ","^2D",9,"^2E",2464,"^O","cljs.core/contains?"]],"^2W",[["^ ","^2D",35,"^2E",2464,"^O","symbols-to-filter"]],"^36",[["^ ","^2D",53,"^2E",2464],["^ ","^2D",53,"^2E",2464]],"~i95",[["^ ","^2D",151,"^2E",2464,"^O","child"]],"^3U",[["^ ","^2D",1,"^2E",2466,"^O","children"]]],"~i1486",["^ ","~i8",[["^ ","^2D",4,"^2E",2467,"^O","new-ast"]],"^3>",[["^ ","^2D",14,"^2E",2467],["^ ","^2D",64,"^2E",2467]],"^3L",[["^ ","^2D",14,"^2E",2467,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^48",[["^ ","^2D",60,"^2E",2467,"^O","ast"]],"^5C",[["^ ","^2D",125,"^2E",2467,"^O","new-children"]]],"~i1487",["^ ","~i4",[["^ ","^2D",0,"^2E",2468]],"~i5",[["^ ","^2D",8,"^2E",2468,"^O","fulcro.client.primitives/ast->query"],["^ ","^2D",79,"^2E",2468,"^O","fulcro.client.primitives/ast->query"],["^ ","^2D",159,"^2E",2468,"^O","fulcro.client.primitives/ast->query"]],"^37",[["^ ","^2D",148,"^2E",2468,"^O","new-ast"],["^ ","^2D",208,"^2E",2468,"^O","new-ast"]]],"~i1489",["^ ","~i0",[["^ ","^2D",0,"^2E",2470],["^ ","^2D",39,"^2E",2470],["^ ","^2D",0,"^2E",2471],["^ ","^2D",0,"^2E",2471]],"~i6",[["^ ","^2D",0,"^2E",2470,"^O","fulcro.client.primitives/fallback-tx"]],"^35",[["^ ","^2D",86,"^2E",2470,"^O","tx"]],"^2P",[["^ ","^2D",89,"^2E",2470,"^O","resp"]]],"~i1497",["^ ","~i2",[["^ ","^2D",0,"^2E",2472],["^ ","^2D",22,"^2E",2472],["^ ","^2D",103,"^2E",2472],["^ ","^2D",177,"^2E",2472],["^ ","^2D",0,"^2E",2486]],"~i8",[["^ ","^2D",4,"^2E",2472,"^O","symbols-to-find"]]],"~i1498",["^ ","~i8",[["^ ","^2D",4,"^2E",2473,"^O","ast"]],"^3=",[["^ ","^2D",10,"^2E",2473]],"^3V",[["^ ","^2D",11,"^2E",2473,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",82,"^2E",2473,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",157,"^2E",2473,"^O","fulcro.client.primitives/query->ast"]],"^38",[["^ ","^2D",151,"^2E",2473,"^O","tx"],["^ ","^2D",206,"^2E",2473,"^O","tx"]]],"~i1499",["^ ","~i8",[["^ ","^2D",4,"^2E",2474,"^O","children"]],"^3=",[["^ ","^2D",15,"^2E",2474],["^ ","^2D",15,"^2E",2474]],"^3E",[["^ ","^2D",106,"^2E",2474,"^O","ast"]]],"~i1500",["^ ","~i8",[["^ ","^2D",4,"^2E",2475,"^O","new-children"]],"^3H",[["^ ","^2D",1,"^2E",2483,"^O","children"]]],"~i1501",["^ ","^3>",[["^ ","^2D",1,"^2E",2479]],"^3L",[["^ ","^2D",1,"^2E",2479,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^2C",[["^ ","^2D",48,"^2E",2479],["^ ","^2D",0,"^2E",2481]],"^3W",[["^ ","^2D",18,"^2E",2480,"^O","child"]],"^2Q",[["^ ","^2D",0,"^2E",2481]],"^5C",[["^ ","^2D",7,"^2E",2481,"^O","cljs.core/contains?"]],"^2V",[["^ ","^2D",33,"^2E",2481,"^O","symbols-to-find"]],"^31",[["^ ","^2D",49,"^2E",2481],["^ ","^2D",49,"^2E",2481]],"^3?",[["^ ","^2D",147,"^2E",2481,"^O","child"]]],"~i1502",["^ ","^3>",[["^ ","^2D",19,"^2E",2475]],"^3L",[["^ ","^2D",19,"^2E",2475,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^30",[["^ ","^2D",63,"^2E",2475],["^ ","^2D",0,"^2E",2477]],"^38",[["^ ","^2D",18,"^2E",2476,"^O","ast"]],"^2L",[["^ ","^2D",0,"^2E",2477],["^ ","^2D",69,"^2E",2477],["^ ","^2D",141,"^2E",2477],["^ ","^2D",200,"^2E",2477],["^ ","^2D",205,"^2E",2477]],"^3A",[["^ ","^2D",7,"^2E",2477,"^O","cljs.core.update.cljs$core$IFn$_invoke$arity$variadic"]],"^3F",[["^ ","^2D",61,"^2E",2477,"^O","ast"]],"^4B",[["^ ","^2D",125,"^2E",2477,"^O","cljs.core/assoc"]],"^3?",[["^ ","^2D",310,"^2E",2477,"^O","resp"]]],"~i1503",["^ ","~i8",[["^ ","^2D",4,"^2E",2484,"^O","new-ast"]],"^3=",[["^ ","^2D",14,"^2E",2484],["^ ","^2D",64,"^2E",2484]],"^3V",[["^ ","^2D",14,"^2E",2484,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^30",[["^ ","^2D",60,"^2E",2484,"^O","ast"]],"^4>",[["^ ","^2D",125,"^2E",2484,"^O","new-children"]]],"~i1504",["^ ","~i8",[["^ ","^2D",4,"^2E",2485,"^O","fallback-tx"]],"^3=",[["^ ","^2D",18,"^2E",2485]],"^3V",[["^ ","^2D",19,"^2E",2485,"^O","fulcro.client.primitives/ast->query"],["^ ","^2D",90,"^2E",2485,"^O","fulcro.client.primitives/ast->query"],["^ ","^2D",170,"^2E",2485,"^O","fulcro.client.primitives/ast->query"]],"^38",[["^ ","^2D",159,"^2E",2485,"^O","new-ast"],["^ ","^2D",219,"^2E",2485,"^O","new-ast"]]],"~i1505",["^ ","~i4",[["^ ","^2D",0,"^2E",2486],["^ ","^2D",0,"^2E",2487],["^ ","^2D",0,"^2E",2489]],"^2I",[["^ ","^2D",20,"^2E",2486]],"^2T",[["^ ","^2D",20,"^2E",2486,"^O","cljs.core/not-empty"]],"^3D",[["^ ","^2D",40,"^2E",2486,"^O","fallback-tx"]]],"~i1506",["^ ","~i6",[["^ ","^2D",0,"^2E",2487,"^O","fallback-tx"]]],"~i1508",["^ ","~i0",[["^ ","^2D",0,"^2E",2492],["^ ","^2D",55,"^2E",2495],["^ ","^2D",0,"^2E",2496]],"~i7",[["^ ","^2D",0,"^2E",2495,"^O","fulcro.client.primitives/is-ui-query-fragment?"]]],"~i1510",["^ ","~i3",[["^ ","^2D",118,"^2E",2495,"^O","kw"]]],"~i1511",["^ ","~i2",[["^ ","^2D",0,"^2E",2496],["^ ","^2D",0,"^2E",2497]],"~i8",[["^ ","^2D",4,"^2E",2496,"^O","kw"]],"^2T",[["^ ","^2D",13,"^2E",2496]],"^2J",[["^ ","^2D",15,"^2E",2496]],"^37",[["^ ","^2D",15,"^2E",2496,"^O","cljs.core/map?"]],"^3D",[["^ ","^2D",36,"^2E",2496,"^O","kw"]],"^3V",[["^ ","^2D",41,"^2E",2496],["^ ","^2D",57,"^2E",2496]],"^3H",[["^ ","^2D",72,"^2E",2496,"^O","kw"]],"^4Y",[["^ ","^2D",57,"^2E",2496,"^O","cljs.core/keys"]],"^2F",[["^ ","^2D",41,"^2E",2496,"^O","cljs.core/first"]],"^2N",[["^ ","^2D",77,"^2E",2496,"^O","kw"]]],"~i1512",["^ ","~i4",[["^ ","^2D",0,"^2E",2497],["^ ","^2D",0,"^2E",2498],["^ ","^2D",0,"^2E",2506]],"^2I",[["^ ","^2D",3,"^2E",2497],["^ ","^2D",22,"^2E",2497,"^O","cljs.core/Keyword"]],"^4X",[["^ ","^2D",4,"^2E",2497,"^O","kw"]],"^3=",[["^ ","^2D",0,"^2E",2498],["^ ","^2D",4,"^2E",2498,"^O","G__39261"],["^ ","^2D",4,"^2E",2499,"^O","G__39261"],["^ ","^2D",19,"^2E",2499],["^ ","^2D",21,"^2E",2499],["^ ","^2D",22,"^2E",2499,"^O","G__39261"],["^ ","^2D",34,"^2E",2499],["^ ","^2D",41,"^2E",2499],["^ ","^2D",46,"^2E",2499],["^ ","^2D",66,"^2E",2499,"^O","G__39261"],["^ ","^2D",0,"^2E",2500],["^ ","^2D",0,"^2E",2500],["^ ","^2D",3,"^2E",2500],["^ ","^2D",4,"^2E",2500,"^O","G__39261"],["^ ","^2D",20,"^2E",2500],["^ ","^2D",0,"^2E",2501]],"^48",[["^ ","^2D",15,"^2E",2498,"^O","kw"]],"^38",[["^ ","^2D",46,"^2E",2499,"^O","cljs.core/namespace"]],"^2Q",[["^ ","^2D",0,"^2E",2503],["^ ","^2D",25,"^2E",2503],["^ ","^2D",39,"^2E",2503,"^O","G__39261"]],"^5C",[["^ ","^2D",7,"^2E",2503,"^O","cljs.core/re-find"]]],"~i1514",["^ ","~i0",[["^ ","^2D",0,"^2E",2509],["^ ","^2D",36,"^2E",2512],["^ ","^2D",0,"^2E",2513]],"~i6",[["^ ","^2D",0,"^2E",2512,"^O","fulcro.client.primitives/strip-ui"]]],"~i1516",["^ ","~i3",[["^ ","^2D",80,"^2E",2512,"^O","query"]]],"~i1517",["^ ","~i2",[["^ ","^2D",0,"^2E",2513],["^ ","^2D",0,"^2E",2532]],"~i8",[["^ ","^2D",4,"^2E",2513,"^O","ast"]],"^3V",[["^ ","^2D",10,"^2E",2513]],"^3>",[["^ ","^2D",11,"^2E",2513,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",82,"^2E",2513,"^O","fulcro.client.primitives/query->ast"],["^ ","^2D",160,"^2E",2513,"^O","fulcro.client.primitives/query->ast"]],"^2F",[["^ ","^2D",151,"^2E",2513,"^O","query"],["^ ","^2D",209,"^2E",2513,"^O","query"]]],"~i1518",["^ ","~i8",[["^ ","^2D",4,"^2E",2514,"^O","drop-ui-children"]],"^3V",[["^ ","^2D",23,"^2E",2514],["^ ","^2D",0,"^2E",2516]],"^5C",[["^ ","^2D",70,"^2E",2515,"^O","ast-node"]]],"~i1519",["^ ","^3L",[["^ ","^2D",0,"^2E",2516],["^ ","^2D",0,"^2E",2525]],"^48",[["^ ","^2D",4,"^2E",2516,"^O","children"]],"^3A",[["^ ","^2D",15,"^2E",2516],["^ ","^2D",1,"^2E",2524]],"^2M",[["^ ","^2D",15,"^2E",2516,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^5;",[["^ ","^2D",62,"^2E",2516],["^ ","^2D",0,"^2E",2518]],"^2U",[["^ ","^2D",18,"^2E",2517,"^O","acc"]],"^4@",[["^ ","^2D",22,"^2E",2517,"^O","n"]]],"~i1520",["^ ","^4<",[["^ ","^2D",0,"^2E",2518]],"^5F",[["^ ","^2D",20,"^2E",2518]],"^2V",[["^ ","^2D",20,"^2E",2518,"^O","fulcro.client.primitives/is-ui-query-fragment?"]],"^34",[["^ ","^2D",73,"^2E",2518],["^ ","^2D",73,"^2E",2518]],"^3J",[["^ ","^2D",171,"^2E",2518,"^O","n"]]],"~i1521",["^ ","^4E",[["^ ","^2D",0,"^2E",2519,"^O","acc"]]],"~i1522",["^ ","^4E",[["^ ","^2D",0,"^2E",2521]],"^2U",[["^ ","^2D",7,"^2E",2521,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^7U",[["^ ","^2D",52,"^2E",2521,"^O","acc"]],"^2Y",[["^ ","^2D",56,"^2E",2521]],"^61",[["^ ","^2D",56,"^2E",2521,"^O","drop-ui-children"]],"^>@",[["^ ","^2D",109,"^2E",2521,"^O","n"]]],"~i1523",["^ ","^5C",[["^ ","^2D",34,"^2E",2524],["^ ","^2D",34,"^2E",2524]],"^4J",[["^ ","^2D",125,"^2E",2524,"^O","ast-node"]]],"~i1524",["^ ","^3H",[["^ ","^2D",0,"^2E",2525]],"^48",[["^ ","^2D",3,"^2E",2525]],"^2C",[["^ ","^2D",3,"^2E",2525,"^O","cljs.core/seq"]],"^2H",[["^ ","^2D",17,"^2E",2525,"^O","children"]]],"~i1525",["^ ","^30",[["^ ","^2D",0,"^2E",2526],["^ ","^2D",62,"^2E",2526]],"^4Y",[["^ ","^2D",7,"^2E",2526,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2H",[["^ ","^2D",53,"^2E",2526,"^O","ast-node"]],"^2V",[["^ ","^2D",123,"^2E",2526,"^O","children"]]],"~i1526",["^ ","^30",[["^ ","^2D",0,"^2E",2528],["^ ","^2D",63,"^2E",2528]],"^4Y",[["^ ","^2D",7,"^2E",2528,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]],"^3W",[["^ ","^2D",54,"^2E",2528,"^O","ast-node"]]],"~i1527",["^ ","~i4",[["^ ","^2D",0,"^2E",2532],["^ ","^2D",4,"^2E",2532,"^O","G__39265"],["^ ","^2D",0,"^2E",2533],["^ ","^2D",0,"^2E",2533],["^ ","^2D",148,"^2E",2533,"^O","G__39265"],["^ ","^2D",209,"^2E",2533,"^O","G__39265"]],"~i5",[["^ ","^2D",8,"^2E",2533,"^O","fulcro.client.primitives/ast->query"],["^ ","^2D",79,"^2E",2533,"^O","fulcro.client.primitives/ast->query"],["^ ","^2D",160,"^2E",2533,"^O","fulcro.client.primitives/ast->query"]],"^37",[["^ ","^2D",15,"^2E",2532]],"^3K",[["^ ","^2D",15,"^2E",2532,"^O","drop-ui-children"]],"^2C",[["^ ","^2D",32,"^2E",2532,"^O","ast"]]],"~i1529",["^ ","~i0",[["^ ","^2D",0,"^2E",2535],["^ ","^2D",30,"^2E",2535]],"~i5",[["^ ","^2D",0,"^2E",2535,"^O","fulcro.client.primitives/nf"]]],"~i1531",["^ ","~i0",[["^ ","^2D",0,"^2E",2536],["^ ","^2D",35,"^2E",2539],["^ ","^2D",0,"^2E",2540]],"~i6",[["^ ","^2D",0,"^2E",2539,"^O","fulcro.client.primitives/as-leaf"]]],"~i1533",["^ ","~i3",[["^ ","^2D",78,"^2E",2539,"^O","data"]]],"~i1534",["^ ","~i2",[["^ ","^2D",0,"^2E",2540]],"~i6",[["^ ","^2D",3,"^2E",2540]],"~i7",[["^ ","^2D",3,"^2E",2540,"^O","cljs.core/coll?"]],"^2G",[["^ ","^2D",25,"^2E",2540,"^O","data"]]],"~i1535",["^ ","~i4",[["^ ","^2D",0,"^2E",2541],["^ ","^2D",32,"^2E",2541],["^ ","^2D",75,"^2E",2541],["^ ","^2D",140,"^2E",2541]],"~i5",[["^ ","^2D",7,"^2E",2541,"^O","cljs.core/with-meta"]],"^2J",[["^ ","^2D",27,"^2E",2541,"^O","data"]]],"~i1536",["^ ","~i4",[["^ ","^2D",0,"^2E",2543,"^O","data"]]],"~i1538",["^ ","~i0",[["^ ","^2D",0,"^2E",2546],["^ ","^2D",39,"^2E",2549],["^ ","^2D",0,"^2E",2550]],"~i6",[["^ ","^2D",0,"^2E",2549,"^O","fulcro.client.primitives/leaf?"]]],"~i1540",["^ ","~i3",[["^ ","^2D",86,"^2E",2549,"^O","data"]]],"~i1541",["^ ","~i2",[["^ ","^2D",0,"^2E",2550]]],"~i1542",["^ ","~i4",[["^ ","^2D",9,"^2E",2550]],"~i9",[["^ ","^2D",11,"^2E",2550]],"^2I",[["^ ","^2D",11,"^2E",2550,"^O","cljs.core/coll?"]],"^37",[["^ ","^2D",33,"^2E",2550,"^O","data"]]],"~i1543",["^ ","~i4",[["^ ","^2D",45,"^2E",2550]],"~i5",[["^ ","^2D",45,"^2E",2550,"^O","cljs.core/empty?"]],"^3S",[["^ ","^2D",68,"^2E",2550,"^O","data"]]],"~i1544",["^ ","~i4",[["^ ","^2D",79,"^2E",2550]],"~i9",[["^ ","^2D",81,"^2E",2550]],"^2I",[["^ ","^2D",81,"^2E",2550,"^O","cljs.core/coll?"]],"^37",[["^ ","^2D",103,"^2E",2550,"^O","data"]]],"~i1545",["^ ","~i6",[["^ ","^2D",114,"^2E",2550],["^ ","^2D",133,"^2E",2550],["^ ","^2D",133,"^2E",2550],["^ ","^2D",228,"^2E",2550]],"^2I",[["^ ","^2D",243,"^2E",2550,"^O","data"]],"^2J",[["^ ","^2D",228,"^2E",2550,"^O","cljs.core/meta"]],"^48",[["^ ","^2D",114,"^2E",2550,"^O","cljs.core/boolean"]]],"~i1547",["^ ","~i0",[["^ ","^2D",0,"^2E",2552],["^ ","^2D",43,"^2E",2555],["^ ","^2D",0,"^2E",2556]],"~i6",[["^ ","^2D",0,"^2E",2555,"^O","fulcro.client.primitives/union->query"]]],"~i1549",["^ ","~i3",[["^ ","^2D",94,"^2E",2555,"^O","union-query"]]],"~i1550",["^ ","~i2",[["^ ","^2D",0,"^2E",2556],["^ ","^2D",21,"^2E",2556],["^ ","^2D",35,"^2E",2556],["^ ","^2D",53,"^2E",2556]],"~i7",[["^ ","^2D",68,"^2E",2556,"^O","union-query"]],"^35",[["^ ","^2D",53,"^2E",2556,"^O","cljs.core/vals"]],"^3=",[["^ ","^2D",35,"^2E",2556,"^O","cljs.core/flatten"]],"^4Y",[["^ ","^2D",21,"^2E",2556,"^O","cljs.core/set"]],"^38",[["^ ","^2D",7,"^2E",2556,"^O","cljs.core/vec"]]],"~i1552",["^ ","~i0",[["^ ","^2D",0,"^2E",2558],["^ ","^2D",40,"^2E",2567],["^ ","^2D",0,"^2E",2568]],"~i6",[["^ ","^2D",0,"^2E",2567,"^O","fulcro.client.primitives/mark-missing"]]],"~i1560",["^ ","~i3",[["^ ","^2D",88,"^2E",2567,"^O","result"]],"^2I",[["^ ","^2D",95,"^2E",2567,"^O","query"]]],"~i1561",["^ ","~i2",[["^ ","^2D",0,"^2E",2568],["^ ","^2D",21,"^2E",2568],["^ ","^2D",64,"^2E",2568],["^ ","^2D",134,"^2E",2568],["^ ","^2D",177,"^2E",2568],["^ ","^2D",286,"^2E",2568],["^ ","^2D",0,"^2E",2569]],"~i8",[["^ ","^2D",4,"^2E",2568,"^O","missing-entity"]]],"~i1562",["^ ","~i4",[["^ ","^2D",0,"^2E",2569]],"~i5",[["^ ","^2D",7,"^2E",2569,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^3S",[["^ ","^2D",54,"^2E",2569],["^ ","^2D",0,"^2E",2571]],"^3K",[["^ ","^2D",18,"^2E",2570,"^O","result"]],"^3=",[["^ ","^2D",29,"^2E",2570,"^O","element"]]],"~i1563",["^ ","^44",[["^ ","^2D",0,"^2E",2571],["^ ","^2D",0,"^2E",2576]],"^4X",[["^ ","^2D",4,"^2E",2571,"^O","element"]],"^48",[["^ ","^2D",18,"^2E",2571],["^ ","^2D",77,"^2E",2571]]],"~i1564",["^ ","^3E",[["^ ","^2D",20,"^2E",2571]],"^38",[["^ ","^2D",20,"^2E",2571,"^O","cljs.core/list?"]],"^3A",[["^ ","^2D",42,"^2E",2571,"^O","element"]],"^3Z",[["^ ","^2D",52,"^2E",2571]],"^4<",[["^ ","^2D",52,"^2E",2571,"^O","cljs.core/first"]],"^4J",[["^ ","^2D",68,"^2E",2571,"^O","element"]]],"~i1565",["^ ","^2L",[["^ ","^2D",77,"^2E",2571,"^O","element"]]],"~i1566",["^ ","^4X",[["^ ","^2D",4,"^2E",2573,"^O","result-key"]],"^48",[["^ ","^2D",17,"^2E",2573],["^ ","^2D",75,"^2E",2573],["^ ","^2D",165,"^2E",2573],["^ ","^2D",165,"^2E",2573]]],"~i1567",["^ ","^3E",[["^ ","^2D",19,"^2E",2573],["^ ","^2D",43,"^2E",2573,"^O","cljs.core/Keyword"]],"^4>",[["^ ","^2D",20,"^2E",2573,"^O","element"]],"^4E",[["^ ","^2D",63,"^2E",2573,"^O","element"]]],"~i1568",["^ ","^3E",[["^ ","^2D",93,"^2E",2573]],"^38",[["^ ","^2D",93,"^2E",2573,"^O","fulcro.util/join?"]],"^5C",[["^ ","^2D",117,"^2E",2573,"^O","element"]],"^5F",[["^ ","^2D",131,"^2E",2573]],"^2V",[["^ ","^2D",131,"^2E",2573,"^O","fulcro.util/join-key"]],"^2[",[["^ ","^2D",152,"^2E",2573,"^O","element"]]],"~i1570",["^ ","^4X",[["^ ","^2D",4,"^2E",2575,"^O","result-value"]],"^48",[["^ ","^2D",19,"^2E",2575]],"^2C",[["^ ","^2D",19,"^2E",2575,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2H",[["^ ","^2D",63,"^2E",2575,"^O","result"]],"^4>",[["^ ","^2D",74,"^2E",2575,"^O","result-key"]]],"~i1571",["^ ","^37",[["^ ","^2D",0,"^2E",2576],["^ ","^2D",0,"^2E",2579],["^ ","^2D",0,"^2E",2582],["^ ","^2D",0,"^2E",2585],["^ ","^2D",0,"^2E",2609],["^ ","^2D",0,"^2E",2612],["^ ","^2D",0,"^2E",2636],["^ ","^2D",0,"^2E",2649],["^ ","^2D",0,"^2E",2658],["^ ","^2D",0,"^2E",2673],["^ ","^2D",0,"^2E",2685],["^ ","^2D",0,"^2E",2697],["^ ","^2D",0,"^2E",2700]]],"~i1572",["^ ","^2O",[["^ ","^2D",3,"^2E",2576]],"^2P",[["^ ","^2D",5,"^2E",2576]],"^3L",[["^ ","^2D",7,"^2E",2576]],"^4I",[["^ ","^2D",7,"^2E",2576,"^O","fulcro.util/ident?"]],"^2K",[["^ ","^2D",32,"^2E",2576,"^O","result-key"]],"^4<",[["^ ","^2D",49,"^2E",2576],["^ ","^2D",94,"^2E",2576]],"^2S",[["^ ","^2D",49,"^2E",2576,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^4J",[["^ ","^2D",146,"^2E",2576]],"^4@",[["^ ","^2D",146,"^2E",2576,"^O","cljs.core/second"]],"^2Z",[["^ ","^2D",163,"^2E",2576,"^O","result-key"]]],"~i1573",["^ ","^4X",[["^ ","^2D",183,"^2E",2576]],"^3V",[["^ ","^2D",185,"^2E",2576]],"^3>",[["^ ","^2D",185,"^2E",2576,"^O","fulcro.util/ident?"]],"^2H",[["^ ","^2D",210,"^2E",2576,"^O","element"]],"^5C",[["^ ","^2D",228,"^2E",2576],["^ ","^2D",273,"^2E",2576]],"^2R",[["^ ","^2D",228,"^2E",2576,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2S",[["^ ","^2D",325,"^2E",2576]],"^4E",[["^ ","^2D",325,"^2E",2576,"^O","cljs.core/second"]],"^4B",[["^ ","^2D",342,"^2E",2576,"^O","element"]]],"~i1574",["^ ","^2O",[["^ ","^2D",0,"^2E",2577,"^O","result"]]],"~i1576",["^ ","^2O",[["^ ","^2D",20,"^2E",2579]],"^35",[["^ ","^2D",20,"^2E",2579,"^O","fulcro.client.primitives/is-ui-query-fragment?"]],"^2L",[["^ ","^2D",73,"^2E",2579,"^O","result-key"]]],"~i1577",["^ ","^2O",[["^ ","^2D",0,"^2E",2580,"^O","result"]]],"~i1580",["^ ","^2O",[["^ ","^2D",3,"^2E",2582]],"^3Y",[["^ ","^2D",5,"^2E",2582],["^ ","^2D",29,"^2E",2582,"^O","cljs.core/Keyword"]],"^48",[["^ ","^2D",6,"^2E",2582,"^O","element"]],"^3A",[["^ ","^2D",53,"^2E",2582],["^ ","^2D",125,"^2E",2582]],"^2R",[["^ ","^2D",54,"^2E",2582]],"^3F",[["^ ","^2D",54,"^2E",2582,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2S",[["^ ","^2D",98,"^2E",2582,"^O","result"]],"^7U",[["^ ","^2D",109,"^2E",2582,"^O","element"]]],"~i1581",["^ ","^2O",[["^ ","^2D",0,"^2E",2583],["^ ","^2D",76,"^2E",2583]],"^35",[["^ ","^2D",7,"^2E",2583,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3V",[["^ ","^2D",53,"^2E",2583,"^O","result"]],"^4Y",[["^ ","^2D",64,"^2E",2583,"^O","element"]]],"~i1584",["^ ","^2O",[["^ ","^2D",20,"^2E",2585],["^ ","^2D",37,"^2E",2585,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2586],["^ ","^2D",0,"^2E",2586],["^ ","^2D",20,"^2E",2586,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2589,"^O","and__3938__auto__"]],"^3Y",[["^ ","^2D",57,"^2E",2585]],"^3=",[["^ ","^2D",57,"^2E",2585,"^O","fulcro.util/join?"]],"^3E",[["^ ","^2D",81,"^2E",2585,"^O","element"]],"^2N",[["^ ","^2D",0,"^2E",2587]],"^2R",[["^ ","^2D",9,"^2E",2587]],"^2V",[["^ ","^2D",16,"^2E",2587]],"^4J",[["^ ","^2D",16,"^2E",2587,"^O","fulcro.util/join-value"]],"^6G",[["^ ","^2D",39,"^2E",2587,"^O","element"]],"^=;",[["^ ","^2D",70,"^2E",2587],["^ ","^2D",115,"^2E",2587]],"^3;",[["^ ","^2D",70,"^2E",2587,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3G",[["^ ","^2D",171,"^2E",2587]],"^3I",[["^ ","^2D",171,"^2E",2587,"^O","fulcro.util/join-value"]],"^43",[["^ ","^2D",194,"^2E",2587,"^O","element"]]],"~i1585",["^ ","^2O",[["^ ","^2D",0,"^2E",2592],["^ ","^2D",0,"^2E",2594]],"^3=",[["^ ","^2D",4,"^2E",2592,"^O","k"]],"^4Y",[["^ ","^2D",8,"^2E",2592]],"^48",[["^ ","^2D",8,"^2E",2592,"^O","fulcro.util/join-key"]],"^5C",[["^ ","^2D",29,"^2E",2592,"^O","element"]]],"~i1586",["^ ","^3=",[["^ ","^2D",4,"^2E",2593,"^O","result'"]],"^4Y",[["^ ","^2D",26,"^2E",2593]],"^48",[["^ ","^2D",26,"^2E",2593,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2F",[["^ ","^2D",70,"^2E",2593,"^O","result"]],"^2N",[["^ ","^2D",81,"^2E",2593,"^O","k"]]],"~i1587",["^ ","^4X",[["^ ","^2D",0,"^2E",2594],["^ ","^2D",0,"^2E",2597],["^ ","^2D",0,"^2E",2604]]],"~i1588",["^ ","^2P",[["^ ","^2D",3,"^2E",2594],["^ ","^2D",27,"^2E",2594]],"^4I",[["^ ","^2D",4,"^2E",2594,"^O","result'"]],"^2F",[["^ ","^2D",0,"^2E",2595],["^ ","^2D",66,"^2E",2595]],"^2H",[["^ ","^2D",7,"^2E",2595,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2N",[["^ ","^2D",53,"^2E",2595,"^O","result"]],"^3Z",[["^ ","^2D",64,"^2E",2595,"^O","k"]]],"~i1589",["^ ","^2P",[["^ ","^2D",3,"^2E",2597]],"^3Y",[["^ ","^2D",3,"^2E",2597,"^O","cljs.core/vector?"]],"^30",[["^ ","^2D",27,"^2E",2597,"^O","result'"]],"^2K",[["^ ","^2D",0,"^2E",2598]],"^2L",[["^ ","^2D",7,"^2E",2598,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^5C",[["^ ","^2D",53,"^2E",2598,"^O","result"]],"^4E",[["^ ","^2D",64,"^2E",2598,"^O","k"]],"^5F",[["^ ","^2D",66,"^2E",2598]],"^2V",[["^ ","^2D",66,"^2E",2598,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^2W",[["^ ","^2D",111,"^2E",2598],["^ ","^2D",0,"^2E",2600]],"^3[",[["^ ","^2D",18,"^2E",2599,"^O","item"]],"^31",[["^ ","^2D",0,"^2E",2600]],"^6G",[["^ ","^2D",8,"^2E",2600,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",78,"^2E",2600,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",160,"^2E",2600,"^O","fulcro.client.primitives/mark-missing"]],"~i87",[["^ ","^2D",146,"^2E",2600,"^O","item"],["^ ","^2D",208,"^2E",2600,"^O","item"]],"^3G",[["^ ","^2D",151,"^2E",2600,"^O","query"],["^ ","^2D",213,"^2E",2600,"^O","query"]],"^3P",[["^ ","^2D",1,"^2E",2602,"^O","result'"]]],"~i1590",["^ ","^48",[["^ ","^2D",0,"^2E",2604]],"^2C",[["^ ","^2D",7,"^2E",2604,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2K",[["^ ","^2D",53,"^2E",2604,"^O","result"]],"^5C",[["^ ","^2D",64,"^2E",2604,"^O","k"]],"^3F",[["^ ","^2D",66,"^2E",2604]],"^5;",[["^ ","^2D",67,"^2E",2604,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",137,"^2E",2604,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",234,"^2E",2604,"^O","fulcro.client.primitives/mark-missing"]],"^5[",[["^ ","^2D",205,"^2E",2604,"^O","result'"],["^ ","^2D",282,"^2E",2604,"^O","result'"]],"^2[",[["^ ","^2D",225,"^2E",2604,"^O","query"],["^ ","^2D",302,"^2E",2604,"^O","query"]]],"~i1593",["^ ","^2O",[["^ ","^2D",3,"^2E",2609]],"^3Y",[["^ ","^2D",5,"^2E",2609]],"^3=",[["^ ","^2D",5,"^2E",2609,"^O","fulcro.util/ident?"]],"^38",[["^ ","^2D",30,"^2E",2609,"^O","element"]],"^4>",[["^ ","^2D",48,"^2E",2609],["^ ","^2D",120,"^2E",2609]],"^3Z",[["^ ","^2D",49,"^2E",2609]],"^4<",[["^ ","^2D",49,"^2E",2609,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^5F",[["^ ","^2D",93,"^2E",2609,"^O","result"]],"^5[",[["^ ","^2D",104,"^2E",2609,"^O","element"]]],"~i1594",["^ ","^2O",[["^ ","^2D",0,"^2E",2610]],"^35",[["^ ","^2D",7,"^2E",2610,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3V",[["^ ","^2D",53,"^2E",2610,"^O","result"]],"^4Y",[["^ ","^2D",64,"^2E",2610,"^O","element"]],"^2K",[["^ ","^2D",76,"^2E",2610,"^O","missing-entity"]]],"~i1597",["^ ","^2O",[["^ ","^2D",3,"^2E",2612]],"^35",[["^ ","^2D",3,"^2E",2612,"^O","fulcro.util/union?"]],"^30",[["^ ","^2D",28,"^2E",2612,"^O","element"]]],"~i1598",["^ ","^2O",[["^ ","^2D",0,"^2E",2613],["^ ","^2D",0,"^2E",2617]],"^3=",[["^ ","^2D",4,"^2E",2613,"^O","v"]],"^3E",[["^ ","^2D",8,"^2E",2613],["^ ","^2D",74,"^2E",2613]],"^38",[["^ ","^2D",8,"^2E",2613,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"]],"^2K",[["^ ","^2D",52,"^2E",2613,"^O","result"]],"^5C",[["^ ","^2D",63,"^2E",2613,"^O","result-key"]]],"~i1599",["^ ","^3=",[["^ ","^2D",4,"^2E",2614,"^O","to-one?"]],"^3E",[["^ ","^2D",20,"^2E",2614]],"^38",[["^ ","^2D",20,"^2E",2614,"^O","cljs.core/map?"]],"^2L",[["^ ","^2D",41,"^2E",2614,"^O","v"]]],"~i1600",["^ ","^3=",[["^ ","^2D",4,"^2E",2615,"^O","to-many?"]],"^3E",[["^ ","^2D",21,"^2E",2615]],"^38",[["^ ","^2D",21,"^2E",2615,"^O","cljs.core/vector?"]],"^2N",[["^ ","^2D",45,"^2E",2615,"^O","v"]]],"~i1601",["^ ","^3=",[["^ ","^2D",4,"^2E",2616,"^O","wide-query"]],"^3E",[["^ ","^2D",17,"^2E",2616]],"^38",[["^ ","^2D",17,"^2E",2616,"^O","fulcro.client.primitives/union->query"]],"^3F",[["^ ","^2D",58,"^2E",2616]],"^5;",[["^ ","^2D",58,"^2E",2616,"^O","fulcro.util/join-value"]],"^2Z",[["^ ","^2D",81,"^2E",2616,"^O","element"]]],"~i1602",["^ ","^4X",[["^ ","^2D",0,"^2E",2617],["^ ","^2D",0,"^2E",2620],["^ ","^2D",0,"^2E",2627],["^ ","^2D",0,"^2E",2630]]],"~i1603",["^ ","^2P",[["^ ","^2D",3,"^2E",2617,"^O","to-one?"]],"^2X",[["^ ","^2D",0,"^2E",2618]],"^30",[["^ ","^2D",7,"^2E",2618,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2F",[["^ ","^2D",53,"^2E",2618,"^O","result"]],"^2N",[["^ ","^2D",64,"^2E",2618,"^O","result-key"]],"^2U",[["^ ","^2D",75,"^2E",2618]],"^5F",[["^ ","^2D",76,"^2E",2618,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",146,"^2E",2618,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",230,"^2E",2618,"^O","fulcro.client.primitives/mark-missing"]],"^6>",[["^ ","^2D",214,"^2E",2618,"^O","v"],["^ ","^2D",278,"^2E",2618,"^O","v"]],"^2[",[["^ ","^2D",216,"^2E",2618,"^O","wide-query"],["^ ","^2D",280,"^2E",2618,"^O","wide-query"]]],"~i1604",["^ ","^2P",[["^ ","^2D",3,"^2E",2620,"^O","to-many?"]],"^30",[["^ ","^2D",0,"^2E",2621]],"^4Y",[["^ ","^2D",7,"^2E",2621,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2H",[["^ ","^2D",53,"^2E",2621,"^O","result"]],"^4>",[["^ ","^2D",64,"^2E",2621,"^O","result-key"]],"^5F",[["^ ","^2D",75,"^2E",2621]],"^2V",[["^ ","^2D",75,"^2E",2621,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^2W",[["^ ","^2D",120,"^2E",2621],["^ ","^2D",0,"^2E",2623]],"^3[",[["^ ","^2D",18,"^2E",2622,"^O","i"]],"^>B",[["^ ","^2D",0,"^2E",2623]],"^2[",[["^ ","^2D",8,"^2E",2623,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",78,"^2E",2623,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",162,"^2E",2623,"^O","fulcro.client.primitives/mark-missing"]],"^=;",[["^ ","^2D",146,"^2E",2623,"^O","i"],["^ ","^2D",210,"^2E",2623,"^O","i"]],"^3<",[["^ ","^2D",148,"^2E",2623,"^O","wide-query"],["^ ","^2D",212,"^2E",2623,"^O","wide-query"]],"^3O",[["^ ","^2D",1,"^2E",2625,"^O","v"]]],"~i1605",["^ ","^2P",[["^ ","^2D",3,"^2E",2627],["^ ","^2D",48,"^2E",2627]],"^3Y",[["^ ","^2D",3,"^2E",2627,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2F",[["^ ","^2D",157,"^2E",2627,"^O","v"]],"^2K",[["^ ","^2D",0,"^2E",2628],["^ ","^2D",75,"^2E",2628]],"^2L",[["^ ","^2D",7,"^2E",2628,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^5C",[["^ ","^2D",53,"^2E",2628,"^O","result"]],"^4E",[["^ ","^2D",64,"^2E",2628,"^O","result-key"]]],"~i1606",["^ ","^4I",[["^ ","^2D",0,"^2E",2630,"^O","result"]]],"~i1609",["^ ","^2O",[["^ ","^2D",20,"^2E",2636],["^ ","^2D",37,"^2E",2636,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2637],["^ ","^2D",0,"^2E",2637],["^ ","^2D",20,"^2E",2637,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2638],["^ ","^2D",0,"^2E",2640,"^O","and__3938__auto__"]],"^3Y",[["^ ","^2D",57,"^2E",2636]],"^3=",[["^ ","^2D",57,"^2E",2636,"^O","fulcro.util/join?"]],"^3E",[["^ ","^2D",81,"^2E",2636,"^O","element"]],"^2N",[["^ ","^2D",9,"^2E",2638]],"^4>",[["^ ","^2D",9,"^2E",2638,"^O","fulcro.util/ident?"]],"^2V",[["^ ","^2D",34,"^2E",2638]],"^4J",[["^ ","^2D",34,"^2E",2638,"^O","fulcro.util/join-key"]],"^>?",[["^ ","^2D",55,"^2E",2638,"^O","element"]],"^>@",[["^ ","^2D",74,"^2E",2638],["^ ","^2D",168,"^2E",2638]],"^3?",[["^ ","^2D",75,"^2E",2638]],"^3@",[["^ ","^2D",75,"^2E",2638,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3I",[["^ ","^2D",119,"^2E",2638,"^O","result"]],"^3P",[["^ ","^2D",130,"^2E",2638]],"~i101",[["^ ","^2D",130,"^2E",2638,"^O","fulcro.util/join-key"]],"^4:",[["^ ","^2D",151,"^2E",2638,"^O","element"]]],"~i1610",["^ ","^2O",[["^ ","^2D",0,"^2E",2643],["^ ","^2D",0,"^2E",2647]],"^3=",[["^ ","^2D",4,"^2E",2643,"^O","mock-missing-object"]],"^2N",[["^ ","^2D",26,"^2E",2643],["^ ","^2D",43,"^2E",2643,"^O","G__39282"],["^ ","^2D",54,"^2E",2643],["^ ","^2D",4,"^2E",2644,"^O","G__39283"],["^ ","^2D",0,"^2E",2645],["^ ","^2D",0,"^2E",2645],["^ ","^2D",146,"^2E",2645,"^O","G__39282"],["^ ","^2D",155,"^2E",2645,"^O","G__39283"],["^ ","^2D",215,"^2E",2645,"^O","G__39282"],["^ ","^2D",224,"^2E",2645,"^O","G__39283"]],"^4>",[["^ ","^2D",8,"^2E",2645,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",78,"^2E",2645,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",167,"^2E",2645,"^O","fulcro.client.primitives/mark-missing"]],"^4B",[["^ ","^2D",15,"^2E",2644]],"^2W",[["^ ","^2D",15,"^2E",2644,"^O","fulcro.util/join-value"]],"^:M",[["^ ","^2D",38,"^2E",2644,"^O","element"]]],"~i1611",["^ ","^4X",[["^ ","^2D",0,"^2E",2647]],"^3D",[["^ ","^2D",7,"^2E",2647,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3L",[["^ ","^2D",53,"^2E",2647,"^O","result"]],"^2C",[["^ ","^2D",64,"^2E",2647]],"^3E",[["^ ","^2D",64,"^2E",2647,"^O","fulcro.util/join-key"]],"^3F",[["^ ","^2D",85,"^2E",2647,"^O","element"]],"^4J",[["^ ","^2D",98,"^2E",2647]],"^4@",[["^ ","^2D",98,"^2E",2647,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]],"^61",[["^ ","^2D",201,"^2E",2647,"^O","mock-missing-object"]],"^3;",[["^ ","^2D",221,"^2E",2647,"^O","missing-entity"]]],"~i1614",["^ ","^2O",[["^ ","^2D",20,"^2E",2649],["^ ","^2D",37,"^2E",2649,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2650],["^ ","^2D",0,"^2E",2650],["^ ","^2D",20,"^2E",2650,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2653,"^O","and__3938__auto__"]],"^3Y",[["^ ","^2D",57,"^2E",2649]],"^3=",[["^ ","^2D",57,"^2E",2649,"^O","fulcro.util/join?"]],"^3E",[["^ ","^2D",81,"^2E",2649,"^O","element"]],"^2N",[["^ ","^2D",0,"^2E",2651],["^ ","^2D",52,"^2E",2651]],"^4>",[["^ ","^2D",7,"^2E",2651,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^4@",[["^ ","^2D",161,"^2E",2651],["^ ","^2D",250,"^2E",2651]],"^7U",[["^ ","^2D",161,"^2E",2651,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"]],"^2Y",[["^ ","^2D",205,"^2E",2651,"^O","result"]],"^2[",[["^ ","^2D",216,"^2E",2651]],"^>?",[["^ ","^2D",216,"^2E",2651,"^O","fulcro.util/join-key"]],"^3<",[["^ ","^2D",237,"^2E",2651,"^O","element"]]],"~i1615",["^ ","^2O",[["^ ","^2D",0,"^2E",2656],["^ ","^2D",98,"^2E",2656]],"^35",[["^ ","^2D",7,"^2E",2656,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3V",[["^ ","^2D",53,"^2E",2656,"^O","result"]],"^4Y",[["^ ","^2D",64,"^2E",2656]],"^48",[["^ ","^2D",64,"^2E",2656,"^O","fulcro.util/join-key"]],"^5C",[["^ ","^2D",85,"^2E",2656,"^O","element"]]],"~i1618",["^ ","^2O",[["^ ","^2D",20,"^2E",2658],["^ ","^2D",37,"^2E",2658,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2659],["^ ","^2D",0,"^2E",2659],["^ ","^2D",20,"^2E",2659,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2662,"^O","and__3938__auto__"]],"^3Y",[["^ ","^2D",57,"^2E",2658]],"^3=",[["^ ","^2D",57,"^2E",2658,"^O","fulcro.util/join?"]],"^3E",[["^ ","^2D",81,"^2E",2658,"^O","element"]],"^2N",[["^ ","^2D",0,"^2E",2660]],"^4>",[["^ ","^2D",7,"^2E",2660,"^O","cljs.core/vector?"]],"^2S",[["^ ","^2D",31,"^2E",2660]],"^4E",[["^ ","^2D",31,"^2E",2660,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^4J",[["^ ","^2D",75,"^2E",2660,"^O","result"]],"^61",[["^ ","^2D",86,"^2E",2660]],"^2Z",[["^ ","^2D",86,"^2E",2660,"^O","fulcro.util/join-key"]],"^36",[["^ ","^2D",107,"^2E",2660,"^O","element"]]],"~i1619",["^ ","^2O",[["^ ","^2D",0,"^2E",2665]],"^35",[["^ ","^2D",7,"^2E",2665,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3V",[["^ ","^2D",53,"^2E",2665,"^O","result"]],"^4Y",[["^ ","^2D",64,"^2E",2665]],"^48",[["^ ","^2D",64,"^2E",2665,"^O","fulcro.util/join-key"]],"^5C",[["^ ","^2D",85,"^2E",2665,"^O","element"]],"^5F",[["^ ","^2D",98,"^2E",2665]],"^2V",[["^ ","^2D",98,"^2E",2665,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^2W",[["^ ","^2D",143,"^2E",2665],["^ ","^2D",0,"^2E",2667]],"^3[",[["^ ","^2D",18,"^2E",2666,"^O","item"]],"^31",[["^ ","^2D",0,"^2E",2667],["^ ","^2D",4,"^2E",2667,"^O","G__39286"],["^ ","^2D",4,"^2E",2668,"^O","G__39287"],["^ ","^2D",0,"^2E",2669],["^ ","^2D",0,"^2E",2669],["^ ","^2D",146,"^2E",2669,"^O","G__39286"],["^ ","^2D",155,"^2E",2669,"^O","G__39287"],["^ ","^2D",215,"^2E",2669,"^O","G__39286"],["^ ","^2D",224,"^2E",2669,"^O","G__39287"]],"^6G",[["^ ","^2D",8,"^2E",2669,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",78,"^2E",2669,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",167,"^2E",2669,"^O","fulcro.client.primitives/mark-missing"]],"^H8",[["^ ","^2D",15,"^2E",2667,"^O","item"]],"^3G",[["^ ","^2D",15,"^2E",2668]],"^3I",[["^ ","^2D",15,"^2E",2668,"^O","fulcro.util/join-value"]],"^43",[["^ ","^2D",38,"^2E",2668,"^O","element"]],"^4A",[["^ ","^2D",1,"^2E",2671]],"^4C",[["^ ","^2D",1,"^2E",2671,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^4H",[["^ ","^2D",45,"^2E",2671,"^O","result"]],"^4P",[["^ ","^2D",56,"^2E",2671]],"~i133",[["^ ","^2D",56,"^2E",2671,"^O","fulcro.util/join-key"]],"~i147",[["^ ","^2D",77,"^2E",2671,"^O","element"]]],"~i1622",["^ ","^2O",[["^ ","^2D",20,"^2E",2673],["^ ","^2D",37,"^2E",2673,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2674],["^ ","^2D",0,"^2E",2674],["^ ","^2D",20,"^2E",2674,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2677,"^O","and__3938__auto__"]],"^3Y",[["^ ","^2D",57,"^2E",2673]],"^3=",[["^ ","^2D",57,"^2E",2673,"^O","fulcro.util/join?"]],"^3E",[["^ ","^2D",81,"^2E",2673,"^O","element"]],"^2N",[["^ ","^2D",0,"^2E",2675]],"^4>",[["^ ","^2D",7,"^2E",2675,"^O","cljs.core/map?"]],"^5;",[["^ ","^2D",28,"^2E",2675]],"^3Z",[["^ ","^2D",28,"^2E",2675,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2U",[["^ ","^2D",72,"^2E",2675,"^O","result"]],"^2W",[["^ ","^2D",83,"^2E",2675]],"^5[",[["^ ","^2D",83,"^2E",2675,"^O","fulcro.util/join-key"]],"^7F",[["^ ","^2D",104,"^2E",2675,"^O","element"]]],"~i1623",["^ ","^2O",[["^ ","^2D",0,"^2E",2680]],"^35",[["^ ","^2D",7,"^2E",2680,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3V",[["^ ","^2D",53,"^2E",2680,"^O","result"]],"^4Y",[["^ ","^2D",64,"^2E",2680]],"^48",[["^ ","^2D",64,"^2E",2680,"^O","fulcro.util/join-key"]],"^5C",[["^ ","^2D",85,"^2E",2680,"^O","element"]],"^5F",[["^ ","^2D",98,"^2E",2680],["^ ","^2D",115,"^2E",2680,"^O","G__39289"],["^ ","^2D",4,"^2E",2681,"^O","G__39290"],["^ ","^2D",0,"^2E",2682],["^ ","^2D",0,"^2E",2682],["^ ","^2D",146,"^2E",2682,"^O","G__39289"],["^ ","^2D",155,"^2E",2682,"^O","G__39290"],["^ ","^2D",215,"^2E",2682,"^O","G__39289"],["^ ","^2D",224,"^2E",2682,"^O","G__39290"]],"^2V",[["^ ","^2D",8,"^2E",2682,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",78,"^2E",2682,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",167,"^2E",2682,"^O","fulcro.client.primitives/mark-missing"]],"^>B",[["^ ","^2D",126,"^2E",2680]],"^2[",[["^ ","^2D",126,"^2E",2680,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^32",[["^ ","^2D",170,"^2E",2680,"^O","result"]],"^>@",[["^ ","^2D",181,"^2E",2680]],"^3:",[["^ ","^2D",181,"^2E",2680,"^O","fulcro.util/join-key"]],"^=>",[["^ ","^2D",202,"^2E",2680,"^O","element"]],"^41",[["^ ","^2D",15,"^2E",2681]],"^42",[["^ ","^2D",15,"^2E",2681,"^O","fulcro.util/join-value"]],"^4G",[["^ ","^2D",38,"^2E",2681,"^O","element"]]],"~i1626",["^ ","^2O",[["^ ","^2D",20,"^2E",2685],["^ ","^2D",37,"^2E",2685,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2686],["^ ","^2D",0,"^2E",2686],["^ ","^2D",20,"^2E",2686,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2687],["^ ","^2D",0,"^2E",2689,"^O","and__3938__auto__"]],"^3Y",[["^ ","^2D",57,"^2E",2685]],"^3=",[["^ ","^2D",57,"^2E",2685,"^O","fulcro.util/join?"]],"^3E",[["^ ","^2D",81,"^2E",2685,"^O","element"]],"^2N",[["^ ","^2D",9,"^2E",2687]],"^4>",[["^ ","^2D",9,"^2E",2687,"^O","cljs.core/vector?"]],"^2S",[["^ ","^2D",33,"^2E",2687]],"^4E",[["^ ","^2D",33,"^2E",2687,"^O","fulcro.util/join-value"]],"^>B",[["^ ","^2D",56,"^2E",2687,"^O","element"]],"^36",[["^ ","^2D",75,"^2E",2687]],"^3;",[["^ ","^2D",77,"^2E",2687]],"^3@",[["^ ","^2D",79,"^2E",2687]],"^3B",[["^ ","^2D",79,"^2E",2687,"^O","cljs.core/map?"]],"^FH",[["^ ","^2D",100,"^2E",2687,"^O","result-value"]],"^43",[["^ ","^2D",119,"^2E",2687]],"^45",[["^ ","^2D",119,"^2E",2687,"^O","cljs.core/vector?"]],"^4=",[["^ ","^2D",143,"^2E",2687,"^O","result-value"]]],"~i1627",["^ ","^2O",[["^ ","^2D",0,"^2E",2692]],"^35",[["^ ","^2D",7,"^2E",2692,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3V",[["^ ","^2D",53,"^2E",2692,"^O","result"]],"^4Y",[["^ ","^2D",64,"^2E",2692,"^O","result-key"]],"^2M",[["^ ","^2D",75,"^2E",2692],["^ ","^2D",92,"^2E",2692,"^O","G__39292"],["^ ","^2D",103,"^2E",2692],["^ ","^2D",4,"^2E",2693,"^O","G__39293"],["^ ","^2D",0,"^2E",2694],["^ ","^2D",0,"^2E",2694],["^ ","^2D",146,"^2E",2694,"^O","G__39292"],["^ ","^2D",155,"^2E",2694,"^O","G__39293"],["^ ","^2D",215,"^2E",2694,"^O","G__39292"],["^ ","^2D",224,"^2E",2694,"^O","G__39293"]],"^2N",[["^ ","^2D",8,"^2E",2694,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",78,"^2E",2694,"^O","fulcro.client.primitives/mark-missing"],["^ ","^2D",167,"^2E",2694,"^O","fulcro.client.primitives/mark-missing"]],"^7U",[["^ ","^2D",15,"^2E",2693]],"^4B",[["^ ","^2D",15,"^2E",2693,"^O","fulcro.util/join-value"]],"^7F",[["^ ","^2D",38,"^2E",2693,"^O","element"]]],"~i1630",["^ ","^2O",[["^ ","^2D",20,"^2E",2697,"^O","result-key"]]],"~i1631",["^ ","^2O",[["^ ","^2D",0,"^2E",2698]],"^35",[["^ ","^2D",7,"^2E",2698,"^O","cljs.core.update.cljs$core$IFn$_invoke$arity$3"]],"^3>",[["^ ","^2D",54,"^2E",2698,"^O","result"]],"^48",[["^ ","^2D",65,"^2E",2698,"^O","result-key"]],"^2N",[["^ ","^2D",76,"^2E",2698,"^O","fulcro.client.primitives/as-leaf"]]],"~i1633",["^ ","^3=",[["^ ","^2D",0,"^2E",2700,"^O","result"]],"^2C",[["^ ","^2D",1,"^2E",2715,"^O","result"]],"^2L",[["^ ","^2D",8,"^2E",2715,"^O","query"]]],"~i1635",["^ ","~i0",[["^ ","^2D",0,"^2E",2717],["^ ","^2D",37,"^2E",2720],["^ ","^2D",0,"^2E",2721]],"~i6",[["^ ","^2D",0,"^2E",2720,"^O","fulcro.client.primitives/sweep-one"]],"^2Y",[["^ ","^2D",82,"^2E",2720,"^O","m"]]],"~i1636",["^ ","~i2",[["^ ","^2D",0,"^2E",2721],["^ ","^2D",0,"^2E",2733],["^ ","^2D",0,"^2E",2736]]],"~i1637",["^ ","~i4",[["^ ","^2D",3,"^2E",2721]],"~i5",[["^ ","^2D",3,"^2E",2721,"^O","cljs.core/map?"]],"^2I",[["^ ","^2D",24,"^2E",2721,"^O","m"]],"^2G",[["^ ","^2D",0,"^2E",2722]],"^44",[["^ ","^2D",7,"^2E",2722,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^3D",[["^ ","^2D",54,"^2E",2722],["^ ","^2D",69,"^2E",2722,"^O","p__39310"],["^ ","^2D",0,"^2E",2723],["^ ","^2D",0,"^2E",2723],["^ ","^2D",4,"^2E",2723,"^O","vec__39311"],["^ ","^2D",17,"^2E",2723,"^O","p__39310"],["^ ","^2D",8,"^2E",2724],["^ ","^2D",8,"^2E",2724,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",2724,"^O","vec__39311"],["^ ","^2D",63,"^2E",2724],["^ ","^2D",67,"^2E",2724],["^ ","^2D",8,"^2E",2725],["^ ","^2D",8,"^2E",2725,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",2725,"^O","vec__39311"],["^ ","^2D",63,"^2E",2725],["^ ","^2D",67,"^2E",2725],["^ ","^2D",0,"^2E",2726]],"^3>",[["^ ","^2D",65,"^2E",2722,"^O","acc"]],"^30",[["^ ","^2D",4,"^2E",2724,"^O","k"]],"^48",[["^ ","^2D",4,"^2E",2725,"^O","v"]]],"~i1638",["^ ","^3Y",[["^ ","^2D",0,"^2E",2726]],"^3L",[["^ ","^2D",3,"^2E",2726]],"^30",[["^ ","^2D",5,"^2E",2726],["^ ","^2D",50,"^2E",2726]],"^4Y",[["^ ","^2D",5,"^2E",2726,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2Q",[["^ ","^2D",159,"^2E",2726,"^O","k"]],"^3F",[["^ ","^2D",167,"^2E",2726],["^ ","^2D",212,"^2E",2726]],"^5;",[["^ ","^2D",167,"^2E",2726,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2Y",[["^ ","^2D",321,"^2E",2726,"^O","v"]],"^3[",[["^ ","^2D",329,"^2E",2726],["^ ","^2D",374,"^2E",2726]],"^40",[["^ ","^2D",329,"^2E",2726,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^36",[["^ ","^2D",480,"^2E",2726,"^O","k"]],"^3:",[["^ ","^2D",488,"^2E",2726],["^ ","^2D",533,"^2E",2726]],"^=;",[["^ ","^2D",488,"^2E",2726,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^FH",[["^ ","^2D",592,"^2E",2726,"^O","k"]]],"~i1639",["^ ","^3V",[["^ ","^2D",0,"^2E",2727,"^O","acc"]]],"~i1640",["^ ","^3V",[["^ ","^2D",0,"^2E",2729]],"^3>",[["^ ","^2D",7,"^2E",2729,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^4Y",[["^ ","^2D",53,"^2E",2729,"^O","acc"]],"^38",[["^ ","^2D",57,"^2E",2729,"^O","k"]],"^2H",[["^ ","^2D",59,"^2E",2729,"^O","v"]]],"~i1641",["^ ","^2J",[["^ ","^2D",3,"^2E",2731],["^ ","^2D",23,"^2E",2731]],"^37",[["^ ","^2D",3,"^2E",2731,"^O","cljs.core/with-meta"]],"^3H",[["^ ","^2D",58,"^2E",2731]],"^2X",[["^ ","^2D",58,"^2E",2731,"^O","cljs.core/meta"]],"^3E",[["^ ","^2D",73,"^2E",2731,"^O","m"]],"^3W",[["^ ","^2D",77,"^2E",2731,"^O","m"]]],"~i1642",["^ ","~i4",[["^ ","^2D",3,"^2E",2733]],"~i5",[["^ ","^2D",3,"^2E",2733,"^O","cljs.core/vector?"]],"^2G",[["^ ","^2D",27,"^2E",2733,"^O","m"]],"^37",[["^ ","^2D",0,"^2E",2734]],"^3K",[["^ ","^2D",7,"^2E",2734,"^O","cljs.core/with-meta"]],"^3L",[["^ ","^2D",27,"^2E",2734]],"^4I",[["^ ","^2D",27,"^2E",2734,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^48",[["^ ","^2D",72,"^2E",2734,"^O","fulcro.client.primitives/sweep-one"]],"^2M",[["^ ","^2D",107,"^2E",2734,"^O","m"]],"^2Q",[["^ ","^2D",110,"^2E",2734]],"^5C",[["^ ","^2D",110,"^2E",2734,"^O","cljs.core/meta"]],"^4<",[["^ ","^2D",125,"^2E",2734,"^O","m"]]],"~i1643",["^ ","^2I",[["^ ","^2D",0,"^2E",2736,"^O","m"]]],"~i1645",["^ ","~i0",[["^ ","^2D",0,"^2E",2741],["^ ","^2D",33,"^2E",2744],["^ ","^2D",0,"^2E",2745]],"~i6",[["^ ","^2D",0,"^2E",2744,"^O","fulcro.client.primitives/sweep"]]],"~i1646",["^ ","~i3",[["^ ","^2D",74,"^2E",2744,"^O","m"]]],"~i1647",["^ ","~i2",[["^ ","^2D",0,"^2E",2745],["^ ","^2D",0,"^2E",2748],["^ ","^2D",0,"^2E",2765],["^ ","^2D",0,"^2E",2768]]],"~i1648",["^ ","~i4",[["^ ","^2D",20,"^2E",2745]],"~i5",[["^ ","^2D",20,"^2E",2745,"^O","fulcro.client.primitives/leaf?"]],"^2T",[["^ ","^2D",57,"^2E",2745,"^O","m"]],"^44",[["^ ","^2D",0,"^2E",2746]],"^2J",[["^ ","^2D",7,"^2E",2746,"^O","fulcro.client.primitives/sweep-one"]],"^3V",[["^ ","^2D",42,"^2E",2746,"^O","m"]]],"~i1649",["^ ","~i4",[["^ ","^2D",3,"^2E",2748]],"~i5",[["^ ","^2D",3,"^2E",2748,"^O","cljs.core/map?"]],"^2I",[["^ ","^2D",24,"^2E",2748,"^O","m"]],"^2G",[["^ ","^2D",0,"^2E",2749]],"^44",[["^ ","^2D",7,"^2E",2749,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^3D",[["^ ","^2D",54,"^2E",2749],["^ ","^2D",69,"^2E",2749,"^O","p__39319"],["^ ","^2D",0,"^2E",2750],["^ ","^2D",0,"^2E",2750],["^ ","^2D",4,"^2E",2750,"^O","vec__39321"],["^ ","^2D",17,"^2E",2750,"^O","p__39319"],["^ ","^2D",8,"^2E",2751],["^ ","^2D",8,"^2E",2751,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",2751,"^O","vec__39321"],["^ ","^2D",63,"^2E",2751],["^ ","^2D",67,"^2E",2751],["^ ","^2D",8,"^2E",2752],["^ ","^2D",8,"^2E",2752,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",2752,"^O","vec__39321"],["^ ","^2D",63,"^2E",2752],["^ ","^2D",67,"^2E",2752],["^ ","^2D",0,"^2E",2753]],"^3>",[["^ ","^2D",65,"^2E",2749,"^O","acc"]],"^30",[["^ ","^2D",4,"^2E",2751,"^O","k"]],"^48",[["^ ","^2D",4,"^2E",2752,"^O","v"]]],"~i1650",["^ ","^3Y",[["^ ","^2D",0,"^2E",2753],["^ ","^2D",0,"^2E",2756],["^ ","^2D",0,"^2E",2759]]],"~i1651",["^ ","^3V",[["^ ","^2D",3,"^2E",2753]],"^3H",[["^ ","^2D",5,"^2E",2753],["^ ","^2D",50,"^2E",2753]],"^2X",[["^ ","^2D",5,"^2E",2753,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2N",[["^ ","^2D",159,"^2E",2753,"^O","k"]],"^5C",[["^ ","^2D",167,"^2E",2753],["^ ","^2D",212,"^2E",2753]],"^2R",[["^ ","^2D",167,"^2E",2753,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2W",[["^ ","^2D",321,"^2E",2753,"^O","v"]],"^61",[["^ ","^2D",329,"^2E",2753],["^ ","^2D",374,"^2E",2753]],"^2Z",[["^ ","^2D",329,"^2E",2753,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^:M",[["^ ","^2D",480,"^2E",2753,"^O","k"]],"^39",[["^ ","^2D",488,"^2E",2753],["^ ","^2D",533,"^2E",2753]],"^>@",[["^ ","^2D",488,"^2E",2753,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3I",[["^ ","^2D",592,"^2E",2753,"^O","k"]],"^=>",[["^ ","^2D",0,"^2E",2754,"^O","acc"]]],"~i1652",["^ ","^3V",[["^ ","^2D",3,"^2E",2756]],"^2X",[["^ ","^2D",5,"^2E",2756]],"^30",[["^ ","^2D",5,"^2E",2756,"^O","fulcro.util/ident?"]],"^2M",[["^ ","^2D",30,"^2E",2756,"^O","v"]],"^2Q",[["^ ","^2D",38,"^2E",2756],["^ ","^2D",83,"^2E",2756]],"^5C",[["^ ","^2D",38,"^2E",2756,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^4B",[["^ ","^2D",192,"^2E",2756]],"^2W",[["^ ","^2D",192,"^2E",2756,"^O","cljs.core/second"]],"^6>",[["^ ","^2D",209,"^2E",2756,"^O","v"]],"^6G",[["^ ","^2D",0,"^2E",2757,"^O","acc"]]],"~i1653",["^ ","^38",[["^ ","^2D",0,"^2E",2759]],"^2F",[["^ ","^2D",7,"^2E",2759,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2M",[["^ ","^2D",53,"^2E",2759,"^O","acc"]],"^5C",[["^ ","^2D",57,"^2E",2759,"^O","k"]],"^3F",[["^ ","^2D",59,"^2E",2759]],"^5;",[["^ ","^2D",60,"^2E",2759,"^O","fulcro.client.primitives/sweep"],["^ ","^2D",123,"^2E",2759,"^O","fulcro.client.primitives/sweep"],["^ ","^2D",189,"^2E",2759,"^O","fulcro.client.primitives/sweep"]],"^5F",[["^ ","^2D",184,"^2E",2759,"^O","v"],["^ ","^2D",230,"^2E",2759,"^O","v"]]],"~i1654",["^ ","^2J",[["^ ","^2D",3,"^2E",2763],["^ ","^2D",23,"^2E",2763]],"^37",[["^ ","^2D",3,"^2E",2763,"^O","cljs.core/with-meta"]],"^3H",[["^ ","^2D",58,"^2E",2763]],"^2X",[["^ ","^2D",58,"^2E",2763,"^O","cljs.core/meta"]],"^3E",[["^ ","^2D",73,"^2E",2763,"^O","m"]]],"~i1655",["^ ","^2J",[["^ ","^2D",77,"^2E",2763,"^O","m"]]],"~i1656",["^ ","~i4",[["^ ","^2D",3,"^2E",2765]],"~i5",[["^ ","^2D",3,"^2E",2765,"^O","cljs.core/vector?"]],"^2G",[["^ ","^2D",27,"^2E",2765,"^O","m"]],"^37",[["^ ","^2D",0,"^2E",2766]],"^3K",[["^ ","^2D",7,"^2E",2766,"^O","cljs.core/with-meta"]],"^3L",[["^ ","^2D",27,"^2E",2766]],"^4I",[["^ ","^2D",27,"^2E",2766,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^48",[["^ ","^2D",72,"^2E",2766,"^O","fulcro.client.primitives/sweep"]],"^3W",[["^ ","^2D",103,"^2E",2766,"^O","m"]],"^3A",[["^ ","^2D",106,"^2E",2766]],"^2M",[["^ ","^2D",106,"^2E",2766,"^O","cljs.core/meta"]],"^2R",[["^ ","^2D",121,"^2E",2766,"^O","m"]]],"~i1657",["^ ","^2I",[["^ ","^2D",0,"^2E",2768,"^O","m"]]],"~i1659",["^ ","~i0",[["^ ","^2D",0,"^2E",2774],["^ ","^2D",39,"^2E",2781],["^ ","^2D",0,"^2E",2782]],"~i6",[["^ ","^2D",0,"^2E",2781,"^O","fulcro.client.primitives/sweep-merge"]]],"~i1665",["^ ","~i3",[["^ ","^2D",86,"^2E",2781,"^O","target"]],"^2I",[["^ ","^2D",93,"^2E",2781,"^O","source"]]],"~i1666",["^ ","~i2",[["^ ","^2D",0,"^2E",2782]],"~i3",[["^ ","^2D",7,"^2E",2782,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]]],"~i1667",["^ ","~i4",[["^ ","^2D",54,"^2E",2782],["^ ","^2D",69,"^2E",2782,"^O","p__39328"],["^ ","^2D",0,"^2E",2783],["^ ","^2D",0,"^2E",2783],["^ ","^2D",4,"^2E",2783,"^O","vec__39329"],["^ ","^2D",17,"^2E",2783,"^O","p__39328"],["^ ","^2D",10,"^2E",2784],["^ ","^2D",10,"^2E",2784,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",2784,"^O","vec__39329"],["^ ","^2D",65,"^2E",2784],["^ ","^2D",69,"^2E",2784],["^ ","^2D",16,"^2E",2785],["^ ","^2D",16,"^2E",2785,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",60,"^2E",2785,"^O","vec__39329"],["^ ","^2D",71,"^2E",2785],["^ ","^2D",75,"^2E",2785],["^ ","^2D",0,"^2E",2786]],"~i9",[["^ ","^2D",65,"^2E",2782,"^O","acc"]],"^44",[["^ ","^2D",4,"^2E",2784,"^O","key"]],"^2O",[["^ ","^2D",4,"^2E",2785,"^O","new-value"]]],"~i1668",["^ ","~i6",[["^ ","^2D",0,"^2E",2786],["^ ","^2D",0,"^2E",2787]],"^3S",[["^ ","^2D",4,"^2E",2786,"^O","existing-value"]],"^3L",[["^ ","^2D",21,"^2E",2786]],"^4I",[["^ ","^2D",21,"^2E",2786,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^4Y",[["^ ","^2D",65,"^2E",2786,"^O","acc"]],"^38",[["^ ","^2D",69,"^2E",2786,"^O","key"]]],"~i1669",["^ ","~i8",[["^ ","^2D",0,"^2E",2787],["^ ","^2D",0,"^2E",2790],["^ ","^2D",0,"^2E",2793],["^ ","^2D",0,"^2E",2796],["^ ","^2D",0,"^2E",2799],["^ ","^2D",0,"^2E",2802]]],"~i1670",["^ ","^2I",[["^ ","^2D",3,"^2E",2787]],"^44",[["^ ","^2D",5,"^2E",2787],["^ ","^2D",54,"^2E",2787]],"^2J",[["^ ","^2D",5,"^2E",2787,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3K",[["^ ","^2D",50,"^2E",2787,"^O","key"]],"^4Y",[["^ ","^2D",166,"^2E",2787],["^ ","^2D",215,"^2E",2787]],"^48",[["^ ","^2D",166,"^2E",2787,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3E",[["^ ","^2D",211,"^2E",2787,"^O","key"]],"^3F",[["^ ","^2D",280,"^2E",2787],["^ ","^2D",329,"^2E",2787]],"^5;",[["^ ","^2D",280,"^2E",2787,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^4<",[["^ ","^2D",325,"^2E",2787,"^O","key"]],"^>B",[["^ ","^2D",0,"^2E",2788,"^O","acc"]]],"~i1671",["^ ","^2I",[["^ ","^2D",3,"^2E",2790],["^ ","^2D",58,"^2E",2790]],"^2T",[["^ ","^2D",3,"^2E",2790,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^2D",48,"^2E",2790,"^O","new-value"]],"^38",[["^ ","^2D",0,"^2E",2791]],"^2F",[["^ ","^2D",7,"^2E",2791,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]],"^2N",[["^ ","^2D",54,"^2E",2791,"^O","acc"]],"^2R",[["^ ","^2D",58,"^2E",2791,"^O","key"]]],"~i1672",["^ ","^2I",[["^ ","^2D",3,"^2E",2793]],"^2J",[["^ ","^2D",5,"^2E",2793]],"^37",[["^ ","^2D",5,"^2E",2793,"^O","fulcro.util/ident?"]],"^4I",[["^ ","^2D",30,"^2E",2793,"^O","new-value"]],"^3W",[["^ ","^2D",46,"^2E",2793],["^ ","^2D",91,"^2E",2793]],"^2K",[["^ ","^2D",46,"^2E",2793,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^4E",[["^ ","^2D",200,"^2E",2793]],"^2U",[["^ ","^2D",200,"^2E",2793,"^O","cljs.core/second"]],"^2W",[["^ ","^2D",217,"^2E",2793,"^O","new-value"]],"^32",[["^ ","^2D",0,"^2E",2794,"^O","acc"]]],"~i1673",["^ ","^2I",[["^ ","^2D",20,"^2E",2796]],"^2T",[["^ ","^2D",20,"^2E",2796,"^O","fulcro.client.primitives/leaf?"]],"^3K",[["^ ","^2D",57,"^2E",2796,"^O","new-value"]],"^4I",[["^ ","^2D",0,"^2E",2797]],"^3H",[["^ ","^2D",7,"^2E",2797,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3E",[["^ ","^2D",53,"^2E",2797,"^O","acc"]],"^3W",[["^ ","^2D",57,"^2E",2797,"^O","key"]],"^2M",[["^ ","^2D",61,"^2E",2797]],"^2N",[["^ ","^2D",61,"^2E",2797,"^O","fulcro.client.primitives/sweep-one"]],"^4E",[["^ ","^2D",96,"^2E",2797,"^O","new-value"]]],"~i1674",["^ ","^2I",[["^ ","^2D",3,"^2E",2799]],"^2J",[["^ ","^2D",5,"^2E",2799]],"^37",[["^ ","^2D",5,"^2E",2799,"^O","cljs.core/map?"]],"^3D",[["^ ","^2D",26,"^2E",2799,"^O","existing-value"]],"^2F",[["^ ","^2D",47,"^2E",2799]],"^2H",[["^ ","^2D",47,"^2E",2799,"^O","cljs.core/map?"]],"^2M",[["^ ","^2D",68,"^2E",2799,"^O","new-value"]],"^2U",[["^ ","^2D",0,"^2E",2800]],"^5F",[["^ ","^2D",7,"^2E",2800,"^O","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^5[",[["^ ","^2D",54,"^2E",2800,"^O","acc"]],"^3[",[["^ ","^2D",58,"^2E",2800,"^O","key"]],"^2[",[["^ ","^2D",62,"^2E",2800,"^O","fulcro.client.primitives/sweep-merge"]],"^3:",[["^ ","^2D",99,"^2E",2800,"^O","new-value"]]],"~i1675",["^ ","^37",[["^ ","^2D",0,"^2E",2802]],"^3K",[["^ ","^2D",7,"^2E",2802,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3Y",[["^ ","^2D",53,"^2E",2802,"^O","acc"]],"^3L",[["^ ","^2D",57,"^2E",2802,"^O","key"]],"^30",[["^ ","^2D",61,"^2E",2802]],"^4Y",[["^ ","^2D",61,"^2E",2802,"^O","fulcro.client.primitives/sweep"]],"^2H",[["^ ","^2D",92,"^2E",2802,"^O","new-value"]]],"~i1676",["^ ","~i4",[["^ ","^2D",3,"^2E",2809,"^O","target"]]],"~i1677",["^ ","~i4",[["^ ","^2D",10,"^2E",2809,"^O","source"]]],"~i1679",["^ ","~i0",[["^ ","^2D",0,"^2E",2811],["^ ","^2D",41,"^2E",2815],["^ ","^2D",0,"^2E",2816]],"~i6",[["^ ","^2D",0,"^2E",2815,"^O","fulcro.client.primitives/merge-handler"]]],"~i1682",["^ ","~i3",[["^ ","^2D",90,"^2E",2815,"^O","mutation-merge"]],"^2O",[["^ ","^2D",105,"^2E",2815,"^O","target"]],"^3V",[["^ ","^2D",112,"^2E",2815,"^O","source"]]],"~i1683",["^ ","~i2",[["^ ","^2D",0,"^2E",2816],["^ ","^2D",0,"^2E",2823]],"~i8",[["^ ","^2D",4,"^2E",2816,"^O","source-to-merge"]],"^3H",[["^ ","^2D",3,"^2E",2821,"^O","source"]]],"~i1684",["^ ","^3>",[["^ ","^2D",102,"^2E",2816]],"^3L",[["^ ","^2D",102,"^2E",2816,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^2C",[["^ ","^2D",149,"^2E",2816],["^ ","^2D",160,"^2E",2816,"^O","p__39338"],["^ ","^2D",0,"^2E",2817],["^ ","^2D",0,"^2E",2817],["^ ","^2D",4,"^2E",2817,"^O","vec__39339"],["^ ","^2D",17,"^2E",2817,"^O","p__39338"],["^ ","^2D",8,"^2E",2818],["^ ","^2D",8,"^2E",2818,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",2818,"^O","vec__39339"],["^ ","^2D",63,"^2E",2818],["^ ","^2D",67,"^2E",2818],["^ ","^2D",8,"^2E",2819],["^ ","^2D",8,"^2E",2819,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",2819,"^O","vec__39339"],["^ ","^2D",63,"^2E",2819],["^ ","^2D",67,"^2E",2819],["^ ","^2D",0,"^2E",2820]],"^2K",[["^ ","^2D",4,"^2E",2818,"^O","k"]],"^3A",[["^ ","^2D",4,"^2E",2819,"^O","_"]],"^2Q",[["^ ","^2D",0,"^2E",2820]],"^3Z",[["^ ","^2D",9,"^2E",2820],["^ ","^2D",23,"^2E",2820,"^O","cljs.core/Symbol"]],"^7U",[["^ ","^2D",10,"^2E",2820,"^O","k"]]],"~i1685",["^ ","^3>",[["^ ","^2D",22,"^2E",2816],["^ ","^2D",67,"^2E",2816]],"^3L",[["^ ","^2D",22,"^2E",2816,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]]],"~i1686",["^ ","~i8",[["^ ","^2D",4,"^2E",2822,"^O","merged-state"]],"^3=",[["^ ","^2D",19,"^2E",2822]],"^3V",[["^ ","^2D",19,"^2E",2822,"^O","fulcro.client.primitives/sweep-merge"]],"^2F",[["^ ","^2D",56,"^2E",2822,"^O","target"]],"^2N",[["^ ","^2D",63,"^2E",2822,"^O","source-to-merge"]]],"~i1687",["^ ","~i4",[["^ ","^2D",0,"^2E",2823]],"~i5",[["^ ","^2D",7,"^2E",2823,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^3S",[["^ ","^2D",54,"^2E",2823],["^ ","^2D",22,"^2E",2824,"^O","p__39344"],["^ ","^2D",0,"^2E",2825],["^ ","^2D",0,"^2E",2825],["^ ","^2D",4,"^2E",2825,"^O","vec__39345"],["^ ","^2D",17,"^2E",2825,"^O","p__39344"],["^ ","^2D",8,"^2E",2826],["^ ","^2D",8,"^2E",2826,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",2826,"^O","vec__39345"],["^ ","^2D",63,"^2E",2826],["^ ","^2D",67,"^2E",2826],["^ ","^2D",8,"^2E",2827],["^ ","^2D",8,"^2E",2827,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",2827,"^O","vec__39345"],["^ ","^2D",63,"^2E",2827],["^ ","^2D",67,"^2E",2827],["^ ","^2D",0,"^2E",2828]],"^3K",[["^ ","^2D",18,"^2E",2824,"^O","acc"]],"^2P",[["^ ","^2D",4,"^2E",2826,"^O","k"]],"^3=",[["^ ","^2D",4,"^2E",2827,"^O","v"]]],"~i1688",["^ ","^44",[["^ ","^2D",0,"^2E",2828]],"^2O",[["^ ","^2D",20,"^2E",2828],["^ ","^2D",37,"^2E",2828,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2829],["^ ","^2D",0,"^2E",2829],["^ ","^2D",20,"^2E",2829,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2832,"^O","and__3938__auto__"]],"^3Y",[["^ ","^2D",57,"^2E",2828,"^O","mutation-merge"]],"^2H",[["^ ","^2D",0,"^2E",2830],["^ ","^2D",21,"^2E",2830,"^O","cljs.core/Symbol"]],"^5C",[["^ ","^2D",8,"^2E",2830,"^O","k"]]],"~i1689",["^ ","^37",[["^ ","^2D",0,"^2E",2835],["^ ","^2D",4,"^2E",2835,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",2840],["^ ","^2D",0,"^2E",2840],["^ ","^2D",20,"^2E",2840,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",2841],["^ ","^2D",20,"^2E",2841,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",2842]],"^3V",[["^ ","^2D",4,"^2E",2841,"^O","updated-state"]],"^3W",[["^ ","^2D",25,"^2E",2835],["^ ","^2D",42,"^2E",2835,"^O","G__39348"],["^ ","^2D",4,"^2E",2836,"^O","G__39349"],["^ ","^2D",4,"^2E",2837,"^O","G__39350"],["^ ","^2D",0,"^2E",2838],["^ ","^2D",0,"^2E",2838],["^ ","^2D",100,"^2E",2838,"^O","G__39348"],["^ ","^2D",109,"^2E",2838,"^O","G__39349"],["^ ","^2D",118,"^2E",2838,"^O","G__39350"],["^ ","^2D",155,"^2E",2838,"^O","G__39348"],["^ ","^2D",164,"^2E",2838,"^O","G__39349"],["^ ","^2D",173,"^2E",2838,"^O","G__39350"]],"^2K",[["^ ","^2D",8,"^2E",2838,"^O","mutation-merge"],["^ ","^2D",55,"^2E",2838,"^O","mutation-merge"],["^ ","^2D",130,"^2E",2838,"^O","mutation-merge"]],"^2U",[["^ ","^2D",53,"^2E",2835,"^O","acc"]],"^4@",[["^ ","^2D",15,"^2E",2836,"^O","k"]],"^4B",[["^ ","^2D",15,"^2E",2837],["^ ","^2D",71,"^2E",2837],["^ ","^2D",180,"^2E",2837]],"^2W",[["^ ","^2D",15,"^2E",2837,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic"]],"^6>",[["^ ","^2D",69,"^2E",2837,"^O","v"]]],"~i1690",["^ ","^2O",[["^ ","^2D",0,"^2E",2842,"^O","updated-state"]]],"~i1691",["^ ","^2O",[["^ ","^2D",0,"^2E",2844]]],"~i1692",["^ ","^4X",[["^ ","^2D",0,"^2E",2844],["^ ","^2D",4,"^2E",2844],["^ ","^2D",4,"^2E",2844],["^ ","^2D",4,"^2E",2844,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",2844],["^ ","^2D",104,"^2E",2844],["^ ","^2D",158,"^2E",2844],["^ ","^2D",185,"^2E",2844],["^ ","^2D",237,"^2E",2844],["^ ","^2D",250,"^2E",2844],["^ ","^2D",353,"^2E",2844],["^ ","^2D",382,"^2E",2844],["^ ","^2D",16,"^2E",2845],["^ ","^2D",19,"^2E",2845],["^ ","^2D",20,"^2E",2845,"^O","e39351"],["^ ","^2D",38,"^2E",2845,"^O","js/Error"],["^ ","^2D",0,"^2E",2846],["^ ","^2D",4,"^2E",2846,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",2846,"^O","e39351"],["^ ","^2D",0,"^2E",2847],["^ ","^2D",0,"^2E",2847],["^ ","^2D",0,"^2E",2847,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",2847],["^ ","^2D",100,"^2E",2847],["^ ","^2D",154,"^2E",2847],["^ ","^2D",181,"^2E",2847],["^ ","^2D",233,"^2E",2847],["^ ","^2D",246,"^2E",2847],["^ ","^2D",349,"^2E",2847],["^ ","^2D",402,"^2E",2847,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",2849],["^ ","^2D",0,"^2E",2849],["^ ","^2D",6,"^2E",2849,"^O","e39351"]],"^2V",[["^ ","^2D",380,"^2E",2844,"^O","k"]]],"~i1693",["^ ","^4X",[["^ ","^2D",0,"^2E",2853,"^O","acc"]]],"~i1694",["^ ","^37",[["^ ","^2D",0,"^2E",2856,"^O","acc"]],"^2P",[["^ ","^2D",1,"^2E",2859,"^O","merged-state"]],"^3E",[["^ ","^2D",14,"^2E",2859,"^O","source"]]],"~i1696",["^ ","~i0",[["^ ","^2D",0,"^2E",2861],["^ ","^2D",48,"^2E",2864],["^ ","^2D",0,"^2E",2865]],"~i6",[["^ ","^2D",0,"^2E",2864,"^O","fulcro.client.primitives/merge-mutation-joins"]]],"~i1698",["^ ","~i3",[["^ ","^2D",104,"^2E",2864,"^O","state"]],"~i9",[["^ ","^2D",110,"^2E",2864,"^O","query"]],"^2J",[["^ ","^2D",116,"^2E",2864,"^O","data-tree"]]],"~i1699",["^ ","~i2",[["^ ","^2D",0,"^2E",2865]],"~i6",[["^ ","^2D",3,"^2E",2865]],"~i7",[["^ ","^2D",3,"^2E",2865,"^O","cljs.core/map?"]],"^3S",[["^ ","^2D",24,"^2E",2865,"^O","data-tree"]]],"~i1700",["^ ","~i4",[["^ ","^2D",0,"^2E",2866]],"~i5",[["^ ","^2D",7,"^2E",2866,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^3S",[["^ ","^2D",54,"^2E",2866],["^ ","^2D",0,"^2E",2867]],"^3K",[["^ ","^2D",65,"^2E",2866,"^O","updated-state"]],"^30",[["^ ","^2D",79,"^2E",2866,"^O","query-element"]]],"~i1701",["^ ","^44",[["^ ","^2D",0,"^2E",2867],["^ ","^2D",0,"^2E",2875]],"^4X",[["^ ","^2D",4,"^2E",2867,"^O","k"]],"^4I",[["^ ","^2D",8,"^2E",2867],["^ ","^2D",25,"^2E",2867,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2868],["^ ","^2D",0,"^2E",2868],["^ ","^2D",20,"^2E",2868,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2871,"^O","and__3938__auto__"]],"^48",[["^ ","^2D",45,"^2E",2867]],"^2C",[["^ ","^2D",45,"^2E",2867,"^O","fulcro.util/mutation-join?"]],"^4E",[["^ ","^2D",78,"^2E",2867,"^O","query-element"]],"^6>",[["^ ","^2D",0,"^2E",2869]],"^>B",[["^ ","^2D",7,"^2E",2869,"^O","fulcro.util/join-key"]],"^=;",[["^ ","^2D",28,"^2E",2869,"^O","query-element"]]],"~i1702",["^ ","^4X",[["^ ","^2D",4,"^2E",2874,"^O","subtree"]],"^4I",[["^ ","^2D",14,"^2E",2874]],"^3H",[["^ ","^2D",14,"^2E",2874,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^48",[["^ ","^2D",58,"^2E",2874,"^O","data-tree"]],"^2M",[["^ ","^2D",68,"^2E",2874,"^O","k"]]],"~i1703",["^ ","^37",[["^ ","^2D",0,"^2E",2875]],"^4X",[["^ ","^2D",20,"^2E",2875],["^ ","^2D",37,"^2E",2875,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2876],["^ ","^2D",0,"^2E",2876],["^ ","^2D",20,"^2E",2876,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2879,"^O","and__3938__auto__"]],"^3V",[["^ ","^2D",57,"^2E",2875,"^O","k"]],"^3L",[["^ ","^2D",0,"^2E",2877,"^O","subtree"]]],"~i1704",["^ ","^2O",[["^ ","^2D",0,"^2E",2882],["^ ","^2D",11,"^2E",2884],["^ ","^2D",17,"^2E",2885],["^ ","^2D",100,"^2E",2885],["^ ","^2D",16,"^2E",2886],["^ ","^2D",0,"^2E",2889]],"^3=",[["^ ","^2D",4,"^2E",2882,"^O","subquery"]],"^2L",[["^ ","^2D",15,"^2E",2882]],"^3A",[["^ ","^2D",15,"^2E",2882,"^O","fulcro.util/join-value"]],"^4J",[["^ ","^2D",38,"^2E",2882,"^O","query-element"]]],"~i1705",["^ ","^3=",[["^ ","^2D",4,"^2E",2883,"^O","target"]],"^2L",[["^ ","^2D",13,"^2E",2883],["^ ","^2D",13,"^2E",2883]],"^4>",[["^ ","^2D",157,"^2E",2883]],"^2Q",[["^ ","^2D",157,"^2E",2883,"^O","cljs.core/meta"]],"^3Z",[["^ ","^2D",172,"^2E",2883,"^O","subquery"]]],"~i1706",["^ ","^3=",[["^ ","^2D",4,"^2E",2884,"^O","idnt"]]],"~i1707",["^ ","^3=",[["^ ","^2D",4,"^2E",2885,"^O","norm-query"]],"^2M",[["^ ","^2D",148,"^2E",2885,"^O","idnt"]],"^2R",[["^ ","^2D",153,"^2E",2885,"^O","subquery"]]],"~i1708",["^ ","^3=",[["^ ","^2D",4,"^2E",2886,"^O","norm-tree"]],"^3A",[["^ ","^2D",64,"^2E",2886,"^O","idnt"]],"^5C",[["^ ","^2D",69,"^2E",2886,"^O","subtree"]]],"~i1709",["^ ","^3=",[["^ ","^2D",4,"^2E",2887,"^O","norm-tree-marked"]],"^2L",[["^ ","^2D",23,"^2E",2887]],"^3A",[["^ ","^2D",23,"^2E",2887,"^O","fulcro.client.primitives/mark-missing"]],"^2U",[["^ ","^2D",61,"^2E",2887,"^O","norm-tree"]],"^61",[["^ ","^2D",71,"^2E",2887,"^O","norm-query"]]],"~i1710",["^ ","^3=",[["^ ","^2D",4,"^2E",2888,"^O","db"]],"^2L",[["^ ","^2D",9,"^2E",2888],["^ ","^2D",104,"^2E",2888]],"^3A",[["^ ","^2D",9,"^2E",2888,"^O","fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3"]],"^3Z",[["^ ","^2D",76,"^2E",2888,"^O","norm-query"]],"^2W",[["^ ","^2D",87,"^2E",2888,"^O","norm-tree-marked"]]],"~i1711",["^ ","^4X",[["^ ","^2D",0,"^2E",2889],["^ ","^2D",4,"^2E",2889,"^O","G__39360"],["^ ","^2D",4,"^2E",2890,"^O","G__39360"],["^ ","^2D",19,"^2E",2890],["^ ","^2D",146,"^2E",2890,"^O","G__39360"],["^ ","^2D",0,"^2E",2891],["^ ","^2D",0,"^2E",2891],["^ ","^2D",0,"^2E",2894,"^O","G__39360"]],"^4I",[["^ ","^2D",15,"^2E",2889]],"^3H",[["^ ","^2D",15,"^2E",2889,"^O","fulcro.client.primitives/sweep-merge"]],"^2L",[["^ ","^2D",52,"^2E",2889,"^O","updated-state"]],"^2U",[["^ ","^2D",66,"^2E",2889,"^O","db"]]],"~i1712",["^ ","^2P",[["^ ","^2D",37,"^2E",2890,"^O","target"]],"^3H",[["^ ","^2D",45,"^2E",2890],["^ ","^2D",124,"^2E",2890,"^O","G__39360"]],"^2X",[["^ ","^2D",45,"^2E",2890,"^O","fulcro.client.impl.data_targeting.process_target.cljs$core$IFn$_invoke$arity$3"]],"^2U",[["^ ","^2D",133,"^2E",2890,"^O","idnt"]],"^7U",[["^ ","^2D",138,"^2E",2890,"^O","target"]]],"~i1713",["^ ","^2P",[["^ ","^2D",3,"^2E",2891]],"^3Y",[["^ ","^2D",3,"^2E",2891,"^O","cljs.core/not"]],"^3L",[["^ ","^2D",17,"^2E",2891,"^O","target"]],"^3E",[["^ ","^2D",0,"^2E",2892],["^ ","^2D",61,"^2E",2892,"^O","G__39360"]],"^38",[["^ ","^2D",7,"^2E",2892,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic"]],"^2M",[["^ ","^2D",74,"^2E",2892,"^O","db"]],"^2Q",[["^ ","^2D",127,"^2E",2892,"^O","idnt"]]],"~i1714",["^ ","^2O",[["^ ","^2D",0,"^2E",2897,"^O","updated-state"]],"^3E",[["^ ","^2D",3,"^2E",2899,"^O","state"]],"^2L",[["^ ","^2D",9,"^2E",2899,"^O","query"]]],"~i1715",["^ ","~i4",[["^ ","^2D",0,"^2E",2901,"^O","state"]]],"~i1717",["^ ","~i0",[["^ ","^2D",0,"^2E",2904],["^ ","^2D",40,"^2E",2904],["^ ","^2D",0,"^2E",2905]],"~i7",[["^ ","^2D",0,"^2E",2904,"^O","fulcro.client.primitives/merge-idents"]],"^3D",[["^ ","^2D",88,"^2E",2904,"^O","tree"]],"^3>",[["^ ","^2D",93,"^2E",2904,"^O","config"]],"^48",[["^ ","^2D",100,"^2E",2904,"^O","refs"]],"^2H",[["^ ","^2D",105,"^2E",2904,"^O","query"]]],"~i1718",["^ ","~i2",[["^ ","^2D",0,"^2E",2905],["^ ","^2D",4,"^2E",2905,"^O","map__39368"],["^ ","^2D",4,"^2E",2906,"^O","map__39368"],["^ ","^2D",21,"^2E",2906],["^ ","^2D",23,"^2E",2906],["^ ","^2D",25,"^2E",2906],["^ ","^2D",27,"^2E",2906],["^ ","^2D",28,"^2E",2906,"^O","map__39368"],["^ ","^2D",42,"^2E",2906],["^ ","^2D",50,"^2E",2906],["^ ","^2D",52,"^2E",2906],["^ ","^2D",54,"^2E",2906],["^ ","^2D",55,"^2E",2906],["^ ","^2D",55,"^2E",2906,"^O","map__39368"],["^ ","^2D",104,"^2E",2906],["^ ","^2D",115,"^2E",2906],["^ ","^2D",116,"^2E",2906,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",2906],["^ ","^2D",148,"^2E",2906,"^O","map__39368"],["^ ","^2D",179,"^2E",2906],["^ ","^2D",184,"^2E",2906],["^ ","^2D",191,"^2E",2906],["^ ","^2D",199,"^2E",2906],["^ ","^2D",199,"^2E",2906,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",2906,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",2906,"^O","map__39368"],["^ ","^2D",276,"^2E",2906,"^O","map__39368"],["^ ","^2D",18,"^2E",2907],["^ ","^2D",18,"^2E",2907,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",62,"^2E",2907,"^O","map__39368"],["^ ","^2D",77,"^2E",2907],["^ ","^2D",14,"^2E",2908],["^ ","^2D",14,"^2E",2908,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",58,"^2E",2908,"^O","map__39368"],["^ ","^2D",73,"^2E",2908],["^ ","^2D",0,"^2E",2928]],"^37",[["^ ","^2D",4,"^2E",2907,"^O","merge-ident"]],"^4I",[["^ ","^2D",4,"^2E",2908,"^O","indexer"]],"^2H",[["^ ","^2D",17,"^2E",2905,"^O","config"]]],"~i1719",["^ ","~i8",[["^ ","^2D",4,"^2E",2909,"^O","ident-joins"]],"^4X",[["^ ","^2D",18,"^2E",2909],["^ ","^2D",63,"^2E",2909]],"^3D",[["^ ","^2D",18,"^2E",2909,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"^3H",[["^ ","^2D",98,"^2E",2909]],"^2X",[["^ ","^2D",98,"^2E",2909,"^O","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i1720",["^ ","^30",[["^ ","^2D",143,"^2E",2909],["^ ","^2D",187,"^2E",2909],["^ ","^2D",18,"^2E",2910,"^O","p1__39366#"],["^ ","^2D",0,"^2E",2911]],"^4Y",[["^ ","^2D",143,"^2E",2909,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^2F",[["^ ","^2D",0,"^2E",2911],["^ ","^2D",4,"^2E",2911,"^O","G__39371"],["^ ","^2D",15,"^2E",2911,"^O","p1__39366#"],["^ ","^2D",0,"^2E",2912],["^ ","^2D",0,"^2E",2912],["^ ","^2D",0,"^2E",2913],["^ ","^2D",23,"^2E",2913,"^O","G__39371"],["^ ","^2D",0,"^2E",2915,"^O","G__39371"]],"^5C",[["^ ","^2D",3,"^2E",2912],["^ ","^2D",24,"^2E",2912,"^O","p1__39366#"]],"^2R",[["^ ","^2D",3,"^2E",2912,"^O","cljs.core/seq?"]],"^5F",[["^ ","^2D",7,"^2E",2913,"^O","cljs.core/first"]]],"~i1721",["^ ","^30",[["^ ","^2D",2,"^2E",2918],["^ ","^2D",49,"^2E",2918],["^ ","^2D",18,"^2E",2919,"^O","p1__39367#"],["^ ","^2D",0,"^2E",2920]],"^4Y",[["^ ","^2D",2,"^2E",2918,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^2K",[["^ ","^2D",0,"^2E",2920],["^ ","^2D",4,"^2E",2920,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2921],["^ ","^2D",0,"^2E",2921],["^ ","^2D",20,"^2E",2921,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",2924,"^O","and__3938__auto__"]],"^4>",[["^ ","^2D",24,"^2E",2920],["^ ","^2D",48,"^2E",2920,"^O","p1__39367#"]],"^2Q",[["^ ","^2D",24,"^2E",2920,"^O","fulcro.util/join?"]]],"~i1722",["^ ","^3A",[["^ ","^2D",0,"^2E",2922]],"^2M",[["^ ","^2D",7,"^2E",2922,"^O","fulcro.util/ident?"]],"^2U",[["^ ","^2D",32,"^2E",2922],["^ ","^2D",53,"^2E",2922,"^O","p1__39367#"]],"^5F",[["^ ","^2D",32,"^2E",2922,"^O","fulcro.util/join-key"]]],"~i1723",["^ ","^2P",[["^ ","^2D",3,"^2E",2927,"^O","query"]]],"~i1724",["^ ","~i4",[["^ ","^2D",0,"^2E",2928],["^ ","^2D",11,"^2E",2928],["^ ","^2D",80,"^2E",2929,"^O","p__39381"],["^ ","^2D",0,"^2E",2930],["^ ","^2D",0,"^2E",2930],["^ ","^2D",4,"^2E",2930,"^O","vec__39382"],["^ ","^2D",17,"^2E",2930,"^O","p__39381"],["^ ","^2D",12,"^2E",2931],["^ ","^2D",12,"^2E",2931,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",2931,"^O","vec__39382"],["^ ","^2D",67,"^2E",2931],["^ ","^2D",71,"^2E",2931],["^ ","^2D",12,"^2E",2932],["^ ","^2D",12,"^2E",2932,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",56,"^2E",2932,"^O","vec__39382"],["^ ","^2D",67,"^2E",2932],["^ ","^2D",71,"^2E",2932],["^ ","^2D",0,"^2E",2933],["^ ","^2D",0,"^2E",2952]],"^35",[["^ ","^2D",62,"^2E",2929,"^O","tree'"]],"^3>",[["^ ","^2D",4,"^2E",2931,"^O","ident"]],"^4Y",[["^ ","^2D",4,"^2E",2932,"^O","props"]]],"~i1725",["^ ","^44",[["^ ","^2D",0,"^2E",2933]],"^2O",[["^ ","^2D",20,"^2E",2933],["^ ","^2D",20,"^2E",2933]],"^2X",[["^ ","^2D",114,"^2E",2933,"^O","config"]]],"~i1726",["^ ","^37",[["^ ","^2D",0,"^2E",2934],["^ ","^2D",0,"^2E",2943]],"^2P",[["^ ","^2D",4,"^2E",2934,"^O","c-or-q"]],"^3H",[["^ ","^2D",13,"^2E",2934],["^ ","^2D",30,"^2E",2934,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",2935],["^ ","^2D",0,"^2E",2935],["^ ","^2D",20,"^2E",2935,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",2936,"^O","or__3949__auto__"]],"^48",[["^ ","^2D",49,"^2E",2934]],"^2C",[["^ ","^2D",49,"^2E",2934,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2H",[["^ ","^2D",93,"^2E",2934,"^O","ident-joins"]],"^5;",[["^ ","^2D",105,"^2E",2934,"^O","ident"]],"^2V",[["^ ","^2D",0,"^2E",2938]],"^4J",[["^ ","^2D",7,"^2E",2938,"^O","fulcro.client.primitives/ref->any"]],"^3[",[["^ ","^2D",44,"^2E",2938,"^O","indexer"]],"^32",[["^ ","^2D",52,"^2E",2938,"^O","ident"]]],"~i1727",["^ ","^2P",[["^ ","^2D",4,"^2E",2941,"^O","props'"]],"^3H",[["^ ","^2D",25,"^2E",2941]],"^2X",[["^ ","^2D",25,"^2E",2941,"^O","fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$2"]],"^3W",[["^ ","^2D",92,"^2E",2941,"^O","c-or-q"]],"^2Q",[["^ ","^2D",99,"^2E",2941,"^O","props"]]],"~i1728",["^ ","^2P",[["^ ","^2D",4,"^2E",2942,"^O","refs"]],"^3H",[["^ ","^2D",15,"^2E",2942]],"^2X",[["^ ","^2D",15,"^2E",2942,"^O","cljs.core/meta"]],"^3E",[["^ ","^2D",30,"^2E",2942,"^O","props'"]]],"~i1729",["^ ","^2O",[["^ ","^2D",0,"^2E",2943],["^ ","^2D",4,"^2E",2943,"^O","G__39386"],["^ ","^2D",4,"^2E",2944,"^O","G__39387"],["^ ","^2D",4,"^2E",2945,"^O","fexpr__39385"],["^ ","^2D",0,"^2E",2946],["^ ","^2D",0,"^2E",2946],["^ ","^2D",8,"^2E",2946,"^O","fexpr__39385"],["^ ","^2D",53,"^2E",2946,"^O","fexpr__39385"],["^ ","^2D",96,"^2E",2946,"^O","G__39386"],["^ ","^2D",105,"^2E",2946,"^O","G__39387"],["^ ","^2D",117,"^2E",2946,"^O","fexpr__39385"],["^ ","^2D",140,"^2E",2946,"^O","G__39386"],["^ ","^2D",149,"^2E",2946,"^O","G__39387"]],"^35",[["^ ","^2D",19,"^2E",2945],["^ ","^2D",19,"^2E",2945]],"^4Y",[["^ ","^2D",114,"^2E",2945,"^O","config"]]],"~i1730",["^ ","^4X",[["^ ","^2D",15,"^2E",2943]],"^3D",[["^ ","^2D",16,"^2E",2943,"^O","merge-ident"],["^ ","^2D",60,"^2E",2943,"^O","merge-ident"],["^ ","^2D",155,"^2E",2943,"^O","merge-ident"]],"^48",[["^ ","^2D",102,"^2E",2943,"^O","config"],["^ ","^2D",177,"^2E",2943,"^O","config"]],"^2K",[["^ ","^2D",109,"^2E",2943,"^O","tree'"],["^ ","^2D",184,"^2E",2943,"^O","tree'"]],"^2Q",[["^ ","^2D",127,"^2E",2943,"^O","ident"],["^ ","^2D",202,"^2E",2943,"^O","ident"]],"^4<",[["^ ","^2D",133,"^2E",2943,"^O","props'"],["^ ","^2D",208,"^2E",2943,"^O","props'"]],"^7U",[["^ ","^2D",15,"^2E",2944,"^O","refs"]]],"~i1731",["^ ","^37",[["^ ","^2D",0,"^2E",2948]],"^3K",[["^ ","^2D",8,"^2E",2948,"^O","merge-ident"],["^ ","^2D",52,"^2E",2948,"^O","merge-ident"],["^ ","^2D",134,"^2E",2948,"^O","merge-ident"]],"^3H",[["^ ","^2D",94,"^2E",2948,"^O","config"],["^ ","^2D",156,"^2E",2948,"^O","config"]],"^38",[["^ ","^2D",101,"^2E",2948,"^O","tree'"],["^ ","^2D",163,"^2E",2948,"^O","tree'"]],"^3A",[["^ ","^2D",119,"^2E",2948,"^O","ident"],["^ ","^2D",181,"^2E",2948,"^O","ident"]],"^2R",[["^ ","^2D",125,"^2E",2948,"^O","props"],["^ ","^2D",187,"^2E",2948,"^O","props"]]],"~i1732",["^ ","~i6",[["^ ","^2D",0,"^2E",2952]],"~i7",[["^ ","^2D",7,"^2E",2952,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^44",[["^ ","^2D",54,"^2E",2952,"^O","step"]],"^35",[["^ ","^2D",59,"^2E",2952,"^O","tree"]],"^3=",[["^ ","^2D",64,"^2E",2952,"^O","refs"]]],"~i1734",["^ ","~i0",[["^ ","^2D",0,"^2E",2954],["^ ","^2D",0,"^2E",2954],["^ ","^2D",41,"^2E",2954],["^ ","^2D",90,"^2E",2954,"^O","var_args"],["^ ","^2D",0,"^2E",2955],["^ ","^2D",0,"^2E",2955],["^ ","^2D",4,"^2E",2955,"^O","G__39398"],["^ ","^2D",15,"^2E",2955],["^ ","^2D",15,"^2E",2955],["^ ","^2D",0,"^2E",2956],["^ ","^2D",0,"^2E",2956],["^ ","^2D",8,"^2E",2956,"^O","G__39398"],["^ ","^2D",5,"^2E",2957],["^ ","^2D",0,"^2E",2958],["^ ","^2D",7,"^2E",2958,"^O","fulcro.client.primitives/merge-novelty"],["^ ","^2D",76,"^2E",2958],["^ ","^2D",77,"^2E",2958],["^ ","^2D",87,"^2E",2958],["^ ","^2D",93,"^2E",2958],["^ ","^2D",94,"^2E",2958],["^ ","^2D",104,"^2E",2958],["^ ","^2D",110,"^2E",2958],["^ ","^2D",111,"^2E",2958],["^ ","^2D",121,"^2E",2958],["^ ","^2D",127,"^2E",2958],["^ ","^2D",128,"^2E",2958],["^ ","^2D",138,"^2E",2958],["^ ","^2D",144,"^2E",2958],["^ ","^2D",145,"^2E",2958],["^ ","^2D",155,"^2E",2958],["^ ","^2D",5,"^2E",2961],["^ ","^2D",0,"^2E",2962],["^ ","^2D",7,"^2E",2962,"^O","fulcro.client.primitives/merge-novelty"],["^ ","^2D",76,"^2E",2962],["^ ","^2D",77,"^2E",2962],["^ ","^2D",87,"^2E",2962],["^ ","^2D",93,"^2E",2962],["^ ","^2D",94,"^2E",2962],["^ ","^2D",104,"^2E",2962],["^ ","^2D",110,"^2E",2962],["^ ","^2D",111,"^2E",2962],["^ ","^2D",121,"^2E",2962],["^ ","^2D",127,"^2E",2962],["^ ","^2D",128,"^2E",2962],["^ ","^2D",138,"^2E",2962],["^ ","^2D",0,"^2E",2966],["^ ","^2D",6,"^2E",2966],["^ ","^2D",11,"^2E",2966,"^O","js/Error"],["^ ","^2D",17,"^2E",2966],["^ ","^2D",18,"^2E",2966],["^ ","^2D",80,"^2E",2966],["^ ","^2D",80,"^2E",2966],["^ ","^2D",0,"^2E",2971],["^ ","^2D",0,"^2E",2971],["^ ","^2D",71,"^2E",2971],["^ ","^2D",0,"^2E",2972],["^ ","^2D",0,"^2E",2994],["^ ","^2D",0,"^2E",2994],["^ ","^2D",71,"^2E",2994],["^ ","^2D",0,"^2E",2995],["^ ","^2D",0,"^2E",3012],["^ ","^2D",0,"^2E",3012],["^ ","^2D",65,"^2E",3012],["^ ","^2D",0,"^2E",3014]],"~i7",[["^ ","^2D",0,"^2E",2954,"^O","fulcro.client.primitives/merge-novelty"],["^ ","^2D",0,"^2E",2971,"^O","fulcro.client.primitives/merge-novelty"],["^ ","^2D",0,"^2E",2994,"^O","fulcro.client.primitives/merge-novelty"],["^ ","^2D",0,"^2E",3012,"^O","fulcro.client.primitives/merge-novelty"]]],"~i1735",["^ ","~i4",[["^ ","^2D",82,"^2E",2971,"^O","reconciler"]],"^2J",[["^ ","^2D",93,"^2E",2971,"^O","state-map"]],"^3V",[["^ ","^2D",103,"^2E",2971,"^O","result-tree"]],"^2F",[["^ ","^2D",115,"^2E",2971,"^O","query"]],"^2M",[["^ ","^2D",121,"^2E",2971,"^O","tempids"]]],"~i1736",["^ ","~i3",[["^ ","^2D",0,"^2E",2972],["^ ","^2D",0,"^2E",2991]],"~i9",[["^ ","^2D",4,"^2E",2972,"^O","state"]],"^2J",[["^ ","^2D",12,"^2E",2972],["^ ","^2D",29,"^2E",2972,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",2973],["^ ","^2D",0,"^2E",2973],["^ ","^2D",20,"^2E",2973,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",2974],["^ ","^2D",14,"^2E",2974,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",2975]],"^3=",[["^ ","^2D",4,"^2E",2974,"^O","migrate"]],"^4Y",[["^ ","^2D",50,"^2E",2972],["^ ","^2D",50,"^2E",2972],["^ ","^2D",139,"^2E",2972],["^ ","^2D",139,"^2E",2972]],"^38",[["^ ","^2D",225,"^2E",2972,"^O","reconciler"]]],"~i1737",["^ ","^3K",[["^ ","^2D",0,"^2E",2975],["^ ","^2D",0,"^2E",2977]],"^3Y",[["^ ","^2D",4,"^2E",2975,"^O","root-component"]],"^2H",[["^ ","^2D",21,"^2E",2975]],"^3W",[["^ ","^2D",22,"^2E",2975,"^O","fulcro.client.primitives/app-root"],["^ ","^2D",88,"^2E",2975,"^O","fulcro.client.primitives/app-root"],["^ ","^2D",166,"^2E",2975,"^O","fulcro.client.primitives/app-root"]],"^2R",[["^ ","^2D",152,"^2E",2975,"^O","reconciler"],["^ ","^2D",210,"^2E",2975,"^O","reconciler"]]],"~i1738",["^ ","^3Y",[["^ ","^2D",4,"^2E",2976,"^O","root-query"]],"^2H",[["^ ","^2D",17,"^2E",2976],["^ ","^2D",42,"^2E",2976],["^ ","^2D",47,"^2E",2976]],"^2R",[["^ ","^2D",35,"^2E",2976,"^O","query"]],"^4E",[["^ ","^2D",47,"^2E",2976]],"^2U",[["^ ","^2D",47,"^2E",2976,"^O","fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2"]],"^61",[["^ ","^2D",112,"^2E",2976,"^O","root-component"]],"^36",[["^ ","^2D",127,"^2E",2976,"^O","state-map"]]],"~i1739",["^ ","^35",[["^ ","^2D",0,"^2E",2977],["^ ","^2D",4,"^2E",2977,"^O","G__39400"],["^ ","^2D",4,"^2E",2978,"^O","G__39401"],["^ ","^2D",4,"^2E",2985,"^O","G__39402"],["^ ","^2D",0,"^2E",2986],["^ ","^2D",0,"^2E",2986],["^ ","^2D",86,"^2E",2986,"^O","G__39400"],["^ ","^2D",95,"^2E",2986,"^O","G__39401"],["^ ","^2D",104,"^2E",2986,"^O","G__39402"],["^ ","^2D",134,"^2E",2986,"^O","G__39400"],["^ ","^2D",143,"^2E",2986,"^O","G__39401"],["^ ","^2D",152,"^2E",2986,"^O","G__39402"]],"^4X",[["^ ","^2D",8,"^2E",2986,"^O","migrate"],["^ ","^2D",48,"^2E",2986,"^O","migrate"],["^ ","^2D",116,"^2E",2986,"^O","migrate"]],"^4I",[["^ ","^2D",15,"^2E",2977,"^O","state-map"]],"^2H",[["^ ","^2D",15,"^2E",2978],["^ ","^2D",32,"^2E",2978,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",2979],["^ ","^2D",0,"^2E",2979],["^ ","^2D",20,"^2E",2979,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",2980,"^O","or__3949__auto__"]],"^3A",[["^ ","^2D",51,"^2E",2978,"^O","query"]],"^2R",[["^ ","^2D",0,"^2E",2982,"^O","root-query"]],"^7U",[["^ ","^2D",15,"^2E",2985,"^O","tempids"]]],"~i1740",["^ ","^3K",[["^ ","^2D",0,"^2E",2988,"^O","state-map"]]],"~i1741",["^ ","~i5",[["^ ","^2D",0,"^2E",2991]],"~i6",[["^ ","^2D",7,"^2E",2991,"^O","fulcro.client.primitives.merge_novelty.cljs$core$IFn$_invoke$arity$4"]],"^4X",[["^ ","^2D",76,"^2E",2991,"^O","reconciler"]],"^30",[["^ ","^2D",87,"^2E",2991,"^O","state"]],"^2F",[["^ ","^2D",93,"^2E",2991,"^O","result-tree"]],"^3F",[["^ ","^2D",105,"^2E",2991,"^O","query"]]],"~i1742",["^ ","~i4",[["^ ","^2D",82,"^2E",2994,"^O","reconciler"]],"^2J",[["^ ","^2D",93,"^2E",2994,"^O","state-map"]],"^3V",[["^ ","^2D",103,"^2E",2994,"^O","result-tree"]],"^2F",[["^ ","^2D",115,"^2E",2994,"^O","query"]]],"~i1743",["^ ","~i3",[["^ ","^2D",0,"^2E",2995],["^ ","^2D",4,"^2E",2996,"^O","vec__39405"],["^ ","^2D",11,"^2E",2997],["^ ","^2D",11,"^2E",2997,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",55,"^2E",2997,"^O","vec__39405"],["^ ","^2D",66,"^2E",2997],["^ ","^2D",70,"^2E",2997],["^ ","^2D",22,"^2E",2998],["^ ","^2D",22,"^2E",2998,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",66,"^2E",2998,"^O","vec__39405"],["^ ","^2D",77,"^2E",2998],["^ ","^2D",81,"^2E",2998],["^ ","^2D",0,"^2E",3006]],"~i9",[["^ ","^2D",4,"^2E",2995,"^O","config"]],"^3L",[["^ ","^2D",13,"^2E",2995],["^ ","^2D",13,"^2E",2995]],"^38",[["^ ","^2D",99,"^2E",2995,"^O","reconciler"]]],"~i1744",["^ ","^2I",[["^ ","^2D",4,"^2E",2997,"^O","idts"]],"^2J",[["^ ","^2D",4,"^2E",2998,"^O","result-tree"]],"^4I",[["^ ","^2D",17,"^2E",2996]],"^3H",[["^ ","^2D",17,"^2E",2996,"^O","fulcro.client.primitives/sift-idents"]],"^2L",[["^ ","^2D",54,"^2E",2996,"^O","result-tree"]]],"~i1745",["^ ","~i9",[["^ ","^2D",4,"^2E",2999,"^O","normalized-result"]],"^3L",[["^ ","^2D",24,"^2E",2999]],"^30",[["^ ","^2D",42,"^2E",2999],["^ ","^2D",42,"^2E",2999]],"^2M",[["^ ","^2D",136,"^2E",2999,"^O","config"]]],"~i1746",["^ ","^3H",[["^ ","^2D",145,"^2E",2999],["^ ","^2D",21,"^2E",3005]],"^2X",[["^ ","^2D",145,"^2E",2999,"^O","fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3"]]],"~i1747",["^ ","^30",[["^ ","^2D",212,"^2E",2999],["^ ","^2D",229,"^2E",2999,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",3000],["^ ","^2D",0,"^2E",3000],["^ ","^2D",20,"^2E",3000,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",3001,"^O","or__3949__auto__"]],"^3E",[["^ ","^2D",248,"^2E",2999,"^O","query"]],"^2L",[["^ ","^2D",0,"^2E",3003],["^ ","^2D",7,"^2E",3003],["^ ","^2D",90,"^2E",3003],["^ ","^2D",90,"^2E",3003,"^O","cljs.core/deref"]],"^3F",[["^ ","^2D",106,"^2E",3003],["^ ","^2D",106,"^2E",3003]],"^2V",[["^ ","^2D",192,"^2E",3003,"^O","reconciler"]]],"~i1748",["^ ","^30",[["^ ","^2D",5,"^2E",3005,"^O","result-tree"]]],"~i1749",["^ ","^3H",[["^ ","^2D",27,"^2E",3005,"^O","result-tree"]]],"~i1750",["^ ","~i9",[["^ ","^2D",99,"^2E",3006,"^O","state-map"]]],"~i1751",["^ ","~i7",[["^ ","^2D",53,"^2E",3006]],"~i8",[["^ ","^2D",53,"^2E",3006,"^O","fulcro.client.primitives/merge-mutation-joins"]],"^3H",[["^ ","^2D",109,"^2E",3006,"^O","query"]],"^3E",[["^ ","^2D",115,"^2E",3006,"^O","result-tree"]]],"~i1752",["^ ","~i7",[["^ ","^2D",15,"^2E",3006]],"~i8",[["^ ","^2D",15,"^2E",3006,"^O","fulcro.client.primitives/merge-idents"]],"^3D",[["^ ","^2D",132,"^2E",3006,"^O","config"]],"^4I",[["^ ","^2D",139,"^2E",3006,"^O","idts"]],"^48",[["^ ","^2D",144,"^2E",3006,"^O","query"]]],"~i1753",["^ ","~i7",[["^ ","^2D",0,"^2E",3006],["^ ","^2D",4,"^2E",3006,"^O","G__39409"],["^ ","^2D",4,"^2E",3007,"^O","G__39410"],["^ ","^2D",4,"^2E",3008,"^O","fexpr__39408"],["^ ","^2D",0,"^2E",3009],["^ ","^2D",0,"^2E",3009],["^ ","^2D",8,"^2E",3009,"^O","fexpr__39408"],["^ ","^2D",53,"^2E",3009,"^O","fexpr__39408"],["^ ","^2D",96,"^2E",3009,"^O","G__39409"],["^ ","^2D",105,"^2E",3009,"^O","G__39410"],["^ ","^2D",117,"^2E",3009,"^O","fexpr__39408"],["^ ","^2D",140,"^2E",3009,"^O","G__39409"],["^ ","^2D",149,"^2E",3009,"^O","G__39410"]],"~i8",[["^ ","^2D",19,"^2E",3008],["^ ","^2D",19,"^2E",3008]],"^3D",[["^ ","^2D",114,"^2E",3008,"^O","config"]],"^3H",[["^ ","^2D",15,"^2E",3007,"^O","normalized-result"]]],"~i1755",["^ ","~i0",[["^ ","^2D",0,"^2E",3014],["^ ","^2D",39,"^2E",3014],["^ ","^2D",0,"^2E",3015]],"~i6",[["^ ","^2D",0,"^2E",3014,"^O","fulcro.client.primitives/get-tempids"]],"^35",[["^ ","^2D",86,"^2E",3014,"^O","m"]],"^2P",[["^ ","^2D",0,"^2E",3015],["^ ","^2D",4,"^2E",3015,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",3016],["^ ","^2D",0,"^2E",3016],["^ ","^2D",20,"^2E",3016,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",3017,"^O","or__3949__auto__"]],"^3>",[["^ ","^2D",23,"^2E",3015],["^ ","^2D",69,"^2E",3015]],"^3L",[["^ ","^2D",23,"^2E",3015,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^30",[["^ ","^2D",67,"^2E",3015,"^O","m"]],"^2M",[["^ ","^2D",0,"^2E",3019],["^ ","^2D",53,"^2E",3019]],"^2N",[["^ ","^2D",7,"^2E",3019,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2R",[["^ ","^2D",51,"^2E",3019,"^O","m"]]],"~i1757",["^ ","~i0",[["^ ","^2D",0,"^2E",3022],["^ ","^2D",39,"^2E",3029],["^ ","^2D",0,"^2E",3030]],"~i6",[["^ ","^2D",0,"^2E",3029,"^O","fulcro.client.primitives/merge*"]]],"~i1763",["^ ","~i3",[["^ ","^2D",86,"^2E",3029,"^O","reconciler"]],"^44",[["^ ","^2D",97,"^2E",3029,"^O","state"]],"^4X",[["^ ","^2D",103,"^2E",3029,"^O","res"]],"^3=",[["^ ","^2D",107,"^2E",3029,"^O","query"]]],"~i1764",["^ ","~i2",[["^ ","^2D",0,"^2E",3030],["^ ","^2D",0,"^2E",3031],["^ ","^2D",0,"^2E",3031],["^ ","^2D",50,"^2E",3031],["^ ","^2D",274,"^2E",3031],["^ ","^2D",432,"^2E",3031]],"~i8",[["^ ","^2D",4,"^2E",3030,"^O","tempids"]],"^3D",[["^ ","^2D",256,"^2E",3030]],"^2P",[["^ ","^2D",256,"^2E",3030,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^3H",[["^ ","^2D",303,"^2E",3030]],"^2X",[["^ ","^2D",303,"^2E",3030,"^O","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]],"^3E",[["^ ","^2D",348,"^2E",3030,"^O","cljs.core/symbol?"]],"^2M",[["^ ","^2D",372,"^2E",3030,"^O","cljs.core/first"]],"^5;",[["^ ","^2D",389,"^2E",3030,"^O","res"]]],"~i1765",["^ ","^2O",[["^ ","^2D",112,"^2E",3030]],"^35",[["^ ","^2D",112,"^2E",3030,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^3Y",[["^ ","^2D",156,"^2E",3030]],"^3=",[["^ ","^2D",156,"^2E",3030,"^O","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]],"^3H",[["^ ","^2D",201,"^2E",3030,"^O","fulcro.client.primitives/get-tempids"]],"^2L",[["^ ","^2D",238,"^2E",3030,"^O","cljs.core/second"]]],"~i1766",["^ ","^2O",[["^ ","^2D",14,"^2E",3030],["^ ","^2D",77,"^2E",3030]],"^35",[["^ ","^2D",14,"^2E",3030,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^3>",[["^ ","^2D",61,"^2E",3030,"^O","cljs.core/merge"]]],"~i1767",["^ ","^2J",[["^ ","^2D",103,"^2E",3031],["^ ","^2D",148,"^2E",3031]],"^37",[["^ ","^2D",103,"^2E",3031,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"^3=",[["^ ","^2D",181,"^2E",3031]],"^3V",[["^ ","^2D",181,"^2E",3031,"^O","cljs.core.remove.cljs$core$IFn$_invoke$arity$1"]],"^4Y",[["^ ","^2D",228,"^2E",3031,"^O","cljs.core/symbol?"]],"^2L",[["^ ","^2D",253,"^2E",3031]],"^3A",[["^ ","^2D",253,"^2E",3031,"^O","cljs.core/keys"]],"^5C",[["^ ","^2D",268,"^2E",3031,"^O","res"]]],"~i1768",["^ ","^2J",[["^ ","^2D",327,"^2E",3031]],"^37",[["^ ","^2D",327,"^2E",3031,"^O","fulcro.client.primitives.merge_novelty.cljs$core$IFn$_invoke$arity$5"]],"^2X",[["^ ","^2D",396,"^2E",3031,"^O","reconciler"]],"^2L",[["^ ","^2D",407,"^2E",3031,"^O","state"]],"^5C",[["^ ","^2D",413,"^2E",3031,"^O","res"]],"^3Z",[["^ ","^2D",417,"^2E",3031,"^O","query"]],"^2V",[["^ ","^2D",423,"^2E",3031,"^O","tempids"]]],"~i1769",["^ ","^2J",[["^ ","^2D",538,"^2E",3031,"^O","tempids"]]],"~i1771",["^ ","~i0",[["^ ","^2D",0,"^2E",3033],["^ ","^2D",0,"^2E",3033],["^ ","^2D",39,"^2E",3040],["^ ","^2D",86,"^2E",3040,"^O","var_args"],["^ ","^2D",0,"^2E",3041],["^ ","^2D",0,"^2E",3041],["^ ","^2D",4,"^2E",3041,"^O","G__39426"],["^ ","^2D",15,"^2E",3041],["^ ","^2D",15,"^2E",3041],["^ ","^2D",0,"^2E",3042],["^ ","^2D",0,"^2E",3042],["^ ","^2D",8,"^2E",3042,"^O","G__39426"],["^ ","^2D",5,"^2E",3043],["^ ","^2D",0,"^2E",3044],["^ ","^2D",7,"^2E",3044,"^O","fulcro.client.primitives/merge!"],["^ ","^2D",74,"^2E",3044],["^ ","^2D",75,"^2E",3044],["^ ","^2D",85,"^2E",3044],["^ ","^2D",91,"^2E",3044],["^ ","^2D",92,"^2E",3044],["^ ","^2D",102,"^2E",3044],["^ ","^2D",5,"^2E",3047],["^ ","^2D",0,"^2E",3048],["^ ","^2D",7,"^2E",3048,"^O","fulcro.client.primitives/merge!"],["^ ","^2D",74,"^2E",3048],["^ ","^2D",75,"^2E",3048],["^ ","^2D",85,"^2E",3048],["^ ","^2D",91,"^2E",3048],["^ ","^2D",92,"^2E",3048],["^ ","^2D",102,"^2E",3048],["^ ","^2D",108,"^2E",3048],["^ ","^2D",109,"^2E",3048],["^ ","^2D",119,"^2E",3048],["^ ","^2D",5,"^2E",3051],["^ ","^2D",0,"^2E",3052],["^ ","^2D",7,"^2E",3052,"^O","fulcro.client.primitives/merge!"],["^ ","^2D",74,"^2E",3052],["^ ","^2D",75,"^2E",3052],["^ ","^2D",85,"^2E",3052],["^ ","^2D",91,"^2E",3052],["^ ","^2D",92,"^2E",3052],["^ ","^2D",102,"^2E",3052],["^ ","^2D",108,"^2E",3052],["^ ","^2D",109,"^2E",3052],["^ ","^2D",119,"^2E",3052],["^ ","^2D",125,"^2E",3052],["^ ","^2D",126,"^2E",3052],["^ ","^2D",136,"^2E",3052],["^ ","^2D",0,"^2E",3056],["^ ","^2D",6,"^2E",3056],["^ ","^2D",11,"^2E",3056,"^O","js/Error"],["^ ","^2D",17,"^2E",3056],["^ ","^2D",18,"^2E",3056],["^ ","^2D",80,"^2E",3056],["^ ","^2D",80,"^2E",3056],["^ ","^2D",0,"^2E",3061],["^ ","^2D",0,"^2E",3061],["^ ","^2D",69,"^2E",3061],["^ ","^2D",0,"^2E",3062],["^ ","^2D",0,"^2E",3065],["^ ","^2D",0,"^2E",3065],["^ ","^2D",69,"^2E",3065],["^ ","^2D",0,"^2E",3066],["^ ","^2D",0,"^2E",3069],["^ ","^2D",0,"^2E",3069],["^ ","^2D",69,"^2E",3069],["^ ","^2D",0,"^2E",3070],["^ ","^2D",0,"^2E",3074],["^ ","^2D",0,"^2E",3074],["^ ","^2D",63,"^2E",3074],["^ ","^2D",0,"^2E",3076]],"~i6",[["^ ","^2D",0,"^2E",3040,"^O","fulcro.client.primitives/merge!"],["^ ","^2D",0,"^2E",3061,"^O","fulcro.client.primitives/merge!"],["^ ","^2D",0,"^2E",3065,"^O","fulcro.client.primitives/merge!"],["^ ","^2D",0,"^2E",3069,"^O","fulcro.client.primitives/merge!"],["^ ","^2D",0,"^2E",3074,"^O","fulcro.client.primitives/merge!"]]],"~i1777",["^ ","~i4",[["^ ","^2D",80,"^2E",3061,"^O","reconciler"]],"^2J",[["^ ","^2D",91,"^2E",3061,"^O","data-tree"]]],"~i1778",["^ ","~i3",[["^ ","^2D",0,"^2E",3062],["^ ","^2D",95,"^2E",3062]],"~i4",[["^ ","^2D",7,"^2E",3062,"^O","fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^2T",[["^ ","^2D",74,"^2E",3062,"^O","reconciler"]],"^2P",[["^ ","^2D",85,"^2E",3062,"^O","data-tree"]]],"~i1779",["^ ","~i4",[["^ ","^2D",80,"^2E",3065,"^O","reconciler"]],"^2J",[["^ ","^2D",91,"^2E",3065,"^O","data-tree"]],"^3V",[["^ ","^2D",101,"^2E",3065,"^O","query"]]],"~i1780",["^ ","~i3",[["^ ","^2D",0,"^2E",3066],["^ ","^2D",101,"^2E",3066]],"~i4",[["^ ","^2D",7,"^2E",3066,"^O","fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^2T",[["^ ","^2D",74,"^2E",3066,"^O","reconciler"]],"^2P",[["^ ","^2D",85,"^2E",3066,"^O","data-tree"]],"^4Y",[["^ ","^2D",95,"^2E",3066,"^O","query"]]],"~i1781",["^ ","~i4",[["^ ","^2D",80,"^2E",3069,"^O","reconciler"]],"^2J",[["^ ","^2D",91,"^2E",3069,"^O","data-tree"]],"^3V",[["^ ","^2D",101,"^2E",3069,"^O","query"]],"^30",[["^ ","^2D",107,"^2E",3069,"^O","remote"]]],"~i1782",["^ ","~i3",[["^ ","^2D",0,"^2E",3070],["^ ","^2D",9,"^2E",3070],["^ ","^2D",9,"^2E",3070,"^O","cljs.core/vec"],["^ ","^2D",23,"^2E",3070],["^ ","^2D",23,"^2E",3070,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",72,"^2E",3070],["^ ","^2D",72,"^2E",3070,"^O","cljs.core/seq"],["^ ","^2D",86,"^2E",3070],["^ ","^2D",86,"^2E",3070,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",133,"^2E",3070],["^ ","^2D",138,"^2E",3070,"^O","cljs.core/List"],["^ ","^2D",153,"^2E",3070],["^ ","^2D",158,"^2E",3070],["^ ","^2D",158,"^2E",3070,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",207,"^2E",3070],["^ ","^2D",207,"^2E",3070,"^O","cljs.core/seq"],["^ ","^2D",221,"^2E",3070],["^ ","^2D",221,"^2E",3070,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",268,"^2E",3070],["^ ","^2D",273,"^2E",3070,"^O","cljs.core/List"],["^ ","^2D",288,"^2E",3070],["^ ","^2D",293,"^2E",3070],["^ ","^2D",398,"^2E",3070],["^ ","^2D",403,"^2E",3070],["^ ","^2D",407,"^2E",3070],["^ ","^2D",414,"^2E",3070],["^ ","^2D",419,"^2E",3070,"^O","cljs.core/List"],["^ ","^2D",434,"^2E",3070],["^ ","^2D",439,"^2E",3070],["^ ","^2D",482,"^2E",3070],["^ ","^2D",555,"^2E",3070],["^ ","^2D",617,"^2E",3070],["^ ","^2D",690,"^2E",3070],["^ ","^2D",695,"^2E",3070],["^ ","^2D",699,"^2E",3070],["^ ","^2D",709,"^2E",3070],["^ ","^2D",714,"^2E",3070],["^ ","^2D",718,"^2E",3070],["^ ","^2D",0,"^2E",3071]],"~i9",[["^ ","^2D",4,"^2E",3070,"^O","tx"]],"^4@",[["^ ","^2D",545,"^2E",3070,"^O","data-tree"]],"^33",[["^ ","^2D",611,"^2E",3070,"^O","query"]],"^3B",[["^ ","^2D",675,"^2E",3070,"^O","remote"]]],"~i1783",["^ ","~i5",[["^ ","^2D",0,"^2E",3071]],"~i6",[["^ ","^2D",8,"^2E",3071,"^O","fulcro.client.primitives/transact!"],["^ ","^2D",80,"^2E",3071,"^O","fulcro.client.primitives/transact!"],["^ ","^2D",167,"^2E",3071,"^O","fulcro.client.primitives/transact!"]],"^37",[["^ ","^2D",150,"^2E",3071,"^O","reconciler"],["^ ","^2D",217,"^2E",3071,"^O","reconciler"]],"^3L",[["^ ","^2D",161,"^2E",3071,"^O","tx"],["^ ","^2D",228,"^2E",3071,"^O","tx"]]],"~i1785",["^ ","~i0",[["^ ","^2D",0,"^2E",3076],["^ ","^2D",60,"^2E",3079],["^ ","^2D",0,"^2E",3080]],"~i6",[["^ ","^2D",0,"^2E",3079,"^O","fulcro.client.primitives/build-prop->class-index!"]]],"~i1787",["^ ","~i3",[["^ ","^2D",128,"^2E",3079,"^O","prop->classes"]],"^3K",[["^ ","^2D",145,"^2E",3079,"^O","query"]]],"~i1788",["^ ","~i2",[["^ ","^2D",0,"^2E",3080]],"~i3",[["^ ","^2D",7,"^2E",3080,"^O","clojure.walk/prewalk"]],"^2T",[["^ ","^2D",28,"^2E",3080],["^ ","^2D",0,"^2E",3081]],"^2C",[["^ ","^2D",116,"^2E",3080,"^O","ele"]]],"~i1789",["^ ","^2G",[["^ ","^2D",0,"^2E",3081],["^ ","^2D",4,"^2E",3081,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",3089],["^ ","^2D",0,"^2E",3089],["^ ","^2D",20,"^2E",3089,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",3090],["^ ","^2D",0,"^2E",3090],["^ ","^2D",22,"^2E",3090,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",3091],["^ ","^2D",0,"^2E",3147]],"^3=",[["^ ","^2D",4,"^2E",3090,"^O","component"]],"^2C",[["^ ","^2D",31,"^2E",3081],["^ ","^2D",48,"^2E",3081,"^O","G__39436"],["^ ","^2D",4,"^2E",3082,"^O","G__39436"],["^ ","^2D",19,"^2E",3082],["^ ","^2D",21,"^2E",3082],["^ ","^2D",22,"^2E",3082,"^O","G__39436"],["^ ","^2D",34,"^2E",3082],["^ ","^2D",41,"^2E",3082],["^ ","^2D",46,"^2E",3082],["^ ","^2D",61,"^2E",3082,"^O","G__39436"],["^ ","^2D",0,"^2E",3083],["^ ","^2D",0,"^2E",3083],["^ ","^2D",3,"^2E",3083],["^ ","^2D",4,"^2E",3083,"^O","G__39436"],["^ ","^2D",20,"^2E",3083],["^ ","^2D",0,"^2E",3084],["^ ","^2D",0,"^2E",3086],["^ ","^2D",7,"^2E",3086],["^ ","^2D",100,"^2E",3086,"^O","G__39436"]],"^3A",[["^ ","^2D",59,"^2E",3081,"^O","ele"]],"^2Q",[["^ ","^2D",46,"^2E",3082,"^O","cljs.core/meta"]]],"~i1790",["^ ","^2J",[["^ ","^2D",0,"^2E",3091],["^ ","^2D",0,"^2E",3092]],"^3D",[["^ ","^2D",4,"^2E",3091,"^O","ks"]],"^3=",[["^ ","^2D",15,"^2E",3091]],"^3V",[["^ ","^2D",15,"^2E",3091,"^O","fulcro.client.primitives/gather-keys"]],"^2F",[["^ ","^2D",52,"^2E",3091,"^O","ele"]]],"~i1791",["^ ","^3K",[["^ ","^2D",0,"^2E",3092],["^ ","^2D",4,"^2E",3092,"^O","seq__39437"],["^ ","^2D",23,"^2E",3092],["^ ","^2D",23,"^2E",3092,"^O","cljs.core/seq"],["^ ","^2D",4,"^2E",3093,"^O","chunk__39438"],["^ ","^2D",25,"^2E",3093],["^ ","^2D",4,"^2E",3094,"^O","count__39439"],["^ ","^2D",25,"^2E",3094],["^ ","^2D",4,"^2E",3095,"^O","i__39440"],["^ ","^2D",21,"^2E",3095],["^ ","^2D",0,"^2E",3097],["^ ","^2D",0,"^2E",3097],["^ ","^2D",3,"^2E",3097],["^ ","^2D",3,"^2E",3097],["^ ","^2D",4,"^2E",3097,"^O","i__39440"],["^ ","^2D",21,"^2E",3097,"^O","count__39439"],["^ ","^2D",0,"^2E",3098],["^ ","^2D",14,"^2E",3098],["^ ","^2D",14,"^2E",3098,"^O","chunk__39438"],["^ ","^2D",70,"^2E",3098,"^O","i__39440"],["^ ","^2D",0,"^2E",3099],["^ ","^2D",0,"^2E",3099],["^ ","^2D",0,"^2E",3101],["^ ","^2D",0,"^2E",3102],["^ ","^2D",15,"^2E",3102,"^O","seq__39437"],["^ ","^2D",15,"^2E",3103,"^O","chunk__39438"],["^ ","^2D",15,"^2E",3104,"^O","count__39439"],["^ ","^2D",15,"^2E",3105],["^ ","^2D",16,"^2E",3105,"^O","i__39440"],["^ ","^2D",33,"^2E",3105],["^ ","^2D",0,"^2E",3112],["^ ","^2D",4,"^2E",3112,"^O","temp__5457__auto__"],["^ ","^2D",35,"^2E",3112],["^ ","^2D",35,"^2E",3112,"^O","cljs.core/seq"],["^ ","^2D",49,"^2E",3112,"^O","seq__39437"],["^ ","^2D",0,"^2E",3113],["^ ","^2D",0,"^2E",3113],["^ ","^2D",3,"^2E",3113,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",3114],["^ ","^2D",0,"^2E",3114],["^ ","^2D",4,"^2E",3114,"^O","seq__39437"],["^ ","^2D",27,"^2E",3114,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",3115],["^ ","^2D",0,"^2E",3115],["^ ","^2D",3,"^2E",3115],["^ ","^2D",3,"^2E",3115,"^O","cljs.core/chunked-seq?"],["^ ","^2D",32,"^2E",3115,"^O","seq__39437"],["^ ","^2D",0,"^2E",3116],["^ ","^2D",4,"^2E",3116,"^O","c__4351__auto__"],["^ ","^2D",28,"^2E",3116],["^ ","^2D",28,"^2E",3116,"^O","cljs.core/chunk-first"],["^ ","^2D",50,"^2E",3116,"^O","seq__39437"],["^ ","^2D",0,"^2E",3117],["^ ","^2D",0,"^2E",3117],["^ ","^2D",15,"^2E",3117],["^ ","^2D",15,"^2E",3117,"^O","cljs.core/chunk-rest"],["^ ","^2D",36,"^2E",3117,"^O","seq__39437"],["^ ","^2D",15,"^2E",3118,"^O","c__4351__auto__"],["^ ","^2D",15,"^2E",3119],["^ ","^2D",15,"^2E",3119,"^O","cljs.core/count"],["^ ","^2D",31,"^2E",3119,"^O","c__4351__auto__"],["^ ","^2D",15,"^2E",3120],["^ ","^2D",0,"^2E",3127],["^ ","^2D",14,"^2E",3127],["^ ","^2D",14,"^2E",3127,"^O","cljs.core/first"],["^ ","^2D",30,"^2E",3127,"^O","seq__39437"],["^ ","^2D",0,"^2E",3128],["^ ","^2D",0,"^2E",3128],["^ ","^2D",0,"^2E",3130],["^ ","^2D",0,"^2E",3131],["^ ","^2D",15,"^2E",3131],["^ ","^2D",15,"^2E",3131,"^O","cljs.core/next"],["^ ","^2D",30,"^2E",3131,"^O","seq__39437"],["^ ","^2D",15,"^2E",3132],["^ ","^2D",15,"^2E",3133],["^ ","^2D",15,"^2E",3134],["^ ","^2D",0,"^2E",3142]],"^3V",[["^ ","^2D",4,"^2E",3098,"^O","k"],["^ ","^2D",4,"^2E",3127,"^O","k"]],"^3L",[["^ ","^2D",37,"^2E",3092,"^O","ks"]]],"~i1792",["^ ","^35",[["^ ","^2D",0,"^2E",3099],["^ ","^2D",0,"^2E",3128]],"^4X",[["^ ","^2D",0,"^2E",3099,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",0,"^2E",3128,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic"]],"^3>",[["^ ","^2D",58,"^2E",3099,"^O","prop->classes"],["^ ","^2D",58,"^2E",3128,"^O","prop->classes"]],"^2K",[["^ ","^2D",75,"^2E",3099,"^O","cljs.core/update"],["^ ","^2D",75,"^2E",3128,"^O","cljs.core/update"]],"^5C",[["^ ","^2D",92,"^2E",3099,"^O","k"],["^ ","^2D",92,"^2E",3128,"^O","k"]],"^3F",[["^ ","^2D",100,"^2E",3099],["^ ","^2D",160,"^2E",3099],["^ ","^2D",100,"^2E",3128],["^ ","^2D",160,"^2E",3128]],"^5;",[["^ ","^2D",100,"^2E",3099,"^O","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",100,"^2E",3128,"^O","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2"]],"^2U",[["^ ","^2D",145,"^2E",3099,"^O","cljs.core/conj"],["^ ","^2D",145,"^2E",3128,"^O","cljs.core/conj"]],"^61",[["^ ","^2D",245,"^2E",3099,"^O","component"],["^ ","^2D",245,"^2E",3128,"^O","component"]]],"~i1793",["^ ","^2G",[["^ ","^2D",0,"^2E",3149,"^O","ele"]],"^2O",[["^ ","^2D",3,"^2E",3150,"^O","query"]]],"~i1795",["^ ","~i0",[["^ ","^2D",0,"^2E",3152],["^ ","^2D",0,"^2E",3152],["^ ","^2D",0,"^2E",3152],["^ ","^2D",0,"^2E",3152],["^ ","^2D",0,"^2E",3180],["^ ","^2D",0,"^2E",3180],["^ ","^2D",0,"^2E",3180],["^ ","^2D",0,"^2E",3180],["^ ","^2D",84,"^2E",3180,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",0,"^2E",3182],["^ ","^2D",0,"^2E",3182],["^ ","^2D",0,"^2E",3182],["^ ","^2D",99,"^2E",3182],["^ ","^2D",0,"^2E",3184],["^ ","^2D",0,"^2E",3184],["^ ","^2D",16,"^2E",3184],["^ ","^2D",0,"^2E",3185],["^ ","^2D",0,"^2E",3188],["^ ","^2D",0,"^2E",3188],["^ ","^2D",0,"^2E",3188],["^ ","^2D",102,"^2E",3188],["^ ","^2D",0,"^2E",3190],["^ ","^2D",0,"^2E",3190],["^ ","^2D",16,"^2E",3190],["^ ","^2D",0,"^2E",3191],["^ ","^2D",0,"^2E",3204],["^ ","^2D",0,"^2E",3204],["^ ","^2D",0,"^2E",3204],["^ ","^2D",113,"^2E",3204],["^ ","^2D",0,"^2E",3206],["^ ","^2D",0,"^2E",3206],["^ ","^2D",12,"^2E",3206],["^ ","^2D",0,"^2E",3207],["^ ","^2D",0,"^2E",3251],["^ ","^2D",0,"^2E",3251],["^ ","^2D",0,"^2E",3251],["^ ","^2D",112,"^2E",3251],["^ ","^2D",0,"^2E",3253],["^ ","^2D",0,"^2E",3253],["^ ","^2D",12,"^2E",3253],["^ ","^2D",0,"^2E",3254],["^ ","^2D",0,"^2E",3272],["^ ","^2D",0,"^2E",3272],["^ ","^2D",0,"^2E",3272],["^ ","^2D",110,"^2E",3272],["^ ","^2D",0,"^2E",3274],["^ ","^2D",0,"^2E",3274],["^ ","^2D",12,"^2E",3274],["^ ","^2D",0,"^2E",3275],["^ ","^2D",0,"^2E",3287],["^ ","^2D",0,"^2E",3287],["^ ","^2D",0,"^2E",3287],["^ ","^2D",79,"^2E",3287],["^ ","^2D",90,"^2E",3287,"^O","this__4203__auto__"],["^ ","^2D",109,"^2E",3287,"^O","k__4204__auto__"],["^ ","^2D",0,"^2E",3289],["^ ","^2D",0,"^2E",3289],["^ ","^2D",4,"^2E",3289,"^O","this__4203__auto__"],["^ ","^2D",29,"^2E",3289],["^ ","^2D",0,"^2E",3290],["^ ","^2D",0,"^2E",3290],["^ ","^2D",7,"^2E",3290,"^O","cljs.core._lookup.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",55,"^2E",3290,"^O","this__4203__auto__"],["^ ","^2D",78,"^2E",3290,"^O","k__4204__auto__"],["^ ","^2D",94,"^2E",3290],["^ ","^2D",0,"^2E",3293],["^ ","^2D",0,"^2E",3293],["^ ","^2D",0,"^2E",3293],["^ ","^2D",79,"^2E",3293],["^ ","^2D",90,"^2E",3293,"^O","this__4205__auto__"],["^ ","^2D",109,"^2E",3293,"^O","k39474"],["^ ","^2D",116,"^2E",3293,"^O","else__4206__auto__"],["^ ","^2D",0,"^2E",3295],["^ ","^2D",0,"^2E",3295],["^ ","^2D",4,"^2E",3295,"^O","this__4205__auto__"],["^ ","^2D",29,"^2E",3295],["^ ","^2D",0,"^2E",3296],["^ ","^2D",0,"^2E",3296],["^ ","^2D",4,"^2E",3296,"^O","G__39496"],["^ ","^2D",15,"^2E",3296,"^O","k39474"],["^ ","^2D",4,"^2E",3297,"^O","G__39496"],["^ ","^2D",19,"^2E",3297],["^ ","^2D",21,"^2E",3297],["^ ","^2D",22,"^2E",3297,"^O","G__39496"],["^ ","^2D",42,"^2E",3297,"^O","cljs.core/Keyword"],["^ ","^2D",75,"^2E",3297],["^ ","^2D",0,"^2E",3298],["^ ","^2D",0,"^2E",3298],["^ ","^2D",8,"^2E",3298,"^O","G__39496"],["^ ","^2D",5,"^2E",3299],["^ ","^2D",0,"^2E",3300,"^O","indexes"],["^ ","^2D",0,"^2E",3304],["^ ","^2D",7,"^2E",3304,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",51,"^2E",3304,"^O","__extmap"],["^ ","^2D",67,"^2E",3304,"^O","k39474"],["^ ","^2D",74,"^2E",3304,"^O","else__4206__auto__"],["^ ","^2D",0,"^2E",3309],["^ ","^2D",0,"^2E",3309],["^ ","^2D",0,"^2E",3309],["^ ","^2D",91,"^2E",3309],["^ ","^2D",102,"^2E",3309,"^O","this__4217__auto__"],["^ ","^2D",121,"^2E",3309,"^O","writer__4218__auto__"],["^ ","^2D",142,"^2E",3309,"^O","opts__4219__auto__"],["^ ","^2D",0,"^2E",3311],["^ ","^2D",0,"^2E",3311],["^ ","^2D",4,"^2E",3311,"^O","this__4217__auto__"],["^ ","^2D",29,"^2E",3311],["^ ","^2D",0,"^2E",3312],["^ ","^2D",0,"^2E",3312],["^ ","^2D",4,"^2E",3312,"^O","pr-pair__4220__auto__"],["^ ","^2D",28,"^2E",3312],["^ ","^2D",18,"^2E",3313,"^O","keyval__4221__auto__"],["^ ","^2D",0,"^2E",3314],["^ ","^2D",0,"^2E",3314],["^ ","^2D",7,"^2E",3314,"^O","cljs.core/pr-sequential-writer"],["^ ","^2D",38,"^2E",3314,"^O","writer__4218__auto__"],["^ ","^2D",59,"^2E",3314,"^O","cljs.core/pr-writer"],["^ ","^2D",79,"^2E",3314],["^ ","^2D",82,"^2E",3314],["^ ","^2D",86,"^2E",3314],["^ ","^2D",89,"^2E",3314,"^O","opts__4219__auto__"],["^ ","^2D",108,"^2E",3314,"^O","keyval__4221__auto__"],["^ ","^2D",0,"^2E",3317],["^ ","^2D",0,"^2E",3317],["^ ","^2D",7,"^2E",3317,"^O","cljs.core/pr-sequential-writer"],["^ ","^2D",38,"^2E",3317,"^O","writer__4218__auto__"],["^ ","^2D",59,"^2E",3317,"^O","pr-pair__4220__auto__"],["^ ","^2D",81,"^2E",3317],["^ ","^2D",118,"^2E",3317],["^ ","^2D",123,"^2E",3317],["^ ","^2D",127,"^2E",3317,"^O","opts__4219__auto__"],["^ ","^2D",146,"^2E",3317],["^ ","^2D",146,"^2E",3317,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",193,"^2E",3317],["^ ","^2D",276,"^2E",3317],["^ ","^2D",281,"^2E",3317,"^O","cljs.core/PersistentVector"],["^ ","^2D",308,"^2E",3317],["^ ","^2D",313,"^2E",3317],["^ ","^2D",315,"^2E",3317],["^ ","^2D",319,"^2E",3317],["^ ","^2D",319,"^2E",3317,"^O","cljs.core/PersistentVector"],["^ ","^2D",357,"^2E",3317],["^ ","^2D",358,"^2E",3317],["^ ","^2D",417,"^2E",3317,"^O","indexes"],["^ ","^2D",433,"^2E",3317],["^ ","^2D",448,"^2E",3317,"^O","__extmap"],["^ ","^2D",0,"^2E",3320],["^ ","^2D",0,"^2E",3320],["^ ","^2D",0,"^2E",3320],["^ ","^2D",83,"^2E",3320],["^ ","^2D",94,"^2E",3320,"^O","G__39473"],["^ ","^2D",0,"^2E",3322],["^ ","^2D",0,"^2E",3322],["^ ","^2D",4,"^2E",3322,"^O","G__39473"],["^ ","^2D",19,"^2E",3322],["^ ","^2D",0,"^2E",3323],["^ ","^2D",0,"^2E",3323],["^ ","^2D",12,"^2E",3323,"^O","cljs.core/RecordIter"],["^ ","^2D",33,"^2E",3323],["^ ","^2D",37,"^2E",3323,"^O","G__39473"],["^ ","^2D",50,"^2E",3323],["^ ","^2D",52,"^2E",3323],["^ ","^2D",135,"^2E",3323],["^ ","^2D",202,"^2E",3323],["^ ","^2D",220,"^2E",3323,"^O","__extmap"],["^ ","^2D",237,"^2E",3323],["^ ","^2D",237,"^2E",3323,"^O","cljs.core/-iterator"],["^ ","^2D",257,"^2E",3323,"^O","__extmap"],["^ ","^2D",274,"^2E",3323],["^ ","^2D",274,"^2E",3323,"^O","cljs.core/nil-iter"],["^ ","^2D",0,"^2E",3326],["^ ","^2D",0,"^2E",3326],["^ ","^2D",0,"^2E",3326],["^ ","^2D",75,"^2E",3326],["^ ","^2D",86,"^2E",3326,"^O","this__4201__auto__"],["^ ","^2D",0,"^2E",3328],["^ ","^2D",0,"^2E",3328],["^ ","^2D",4,"^2E",3328,"^O","this__4201__auto__"],["^ ","^2D",29,"^2E",3328],["^ ","^2D",0,"^2E",3329],["^ ","^2D",0,"^2E",3329,"^O","__meta"],["^ ","^2D",0,"^2E",3332],["^ ","^2D",0,"^2E",3332],["^ ","^2D",0,"^2E",3332],["^ ","^2D",81,"^2E",3332],["^ ","^2D",92,"^2E",3332,"^O","this__4198__auto__"],["^ ","^2D",0,"^2E",3334],["^ ","^2D",0,"^2E",3334],["^ ","^2D",4,"^2E",3334,"^O","this__4198__auto__"],["^ ","^2D",29,"^2E",3334],["^ ","^2D",0,"^2E",3335],["^ ","^2D",0,"^2E",3335],["^ ","^2D",45,"^2E",3335,"^O","indexes"],["^ ","^2D",60,"^2E",3335,"^O","__meta"],["^ ","^2D",74,"^2E",3335,"^O","__extmap"],["^ ","^2D",90,"^2E",3335,"^O","__hash"],["^ ","^2D",0,"^2E",3338],["^ ","^2D",0,"^2E",3338],["^ ","^2D",0,"^2E",3338],["^ ","^2D",79,"^2E",3338],["^ ","^2D",90,"^2E",3338,"^O","this__4207__auto__"],["^ ","^2D",0,"^2E",3340],["^ ","^2D",0,"^2E",3340],["^ ","^2D",4,"^2E",3340,"^O","this__4207__auto__"],["^ ","^2D",29,"^2E",3340],["^ ","^2D",0,"^2E",3341],["^ ","^2D",0,"^2E",3341],["^ ","^2D",8,"^2E",3341],["^ ","^2D",12,"^2E",3341],["^ ","^2D",12,"^2E",3341,"^O","cljs.core/count"],["^ ","^2D",28,"^2E",3341,"^O","__extmap"],["^ ","^2D",0,"^2E",3344],["^ ","^2D",0,"^2E",3344],["^ ","^2D",0,"^2E",3344],["^ ","^2D",75,"^2E",3344],["^ ","^2D",86,"^2E",3344,"^O","this__4199__auto__"],["^ ","^2D",0,"^2E",3346],["^ ","^2D",0,"^2E",3346],["^ ","^2D",4,"^2E",3346,"^O","this__4199__auto__"],["^ ","^2D",29,"^2E",3346],["^ ","^2D",0,"^2E",3347],["^ ","^2D",0,"^2E",3347],["^ ","^2D",4,"^2E",3347,"^O","h__4061__auto__"],["^ ","^2D",22,"^2E",3347,"^O","__hash"],["^ ","^2D",0,"^2E",3348],["^ ","^2D",0,"^2E",3348],["^ ","^2D",3,"^2E",3348],["^ ","^2D",5,"^2E",3348],["^ ","^2D",6,"^2E",3348,"^O","h__4061__auto__"],["^ ","^2D",25,"^2E",3348],["^ ","^2D",0,"^2E",3349,"^O","h__4061__auto__"],["^ ","^2D",0,"^2E",3351],["^ ","^2D",4,"^2E",3351,"^O","h__4061__auto__"],["^ ","^2D",26,"^2E",3351],["^ ","^2D",43,"^2E",3351,"^O","fexpr__39500"],["^ ","^2D",58,"^2E",3351],["^ ","^2D",18,"^2E",3352,"^O","coll__4200__auto__"],["^ ","^2D",0,"^2E",3353],["^ ","^2D",0,"^2E",3353],["^ ","^2D",8,"^2E",3353],["^ ","^2D",21,"^2E",3353],["^ ","^2D",21,"^2E",3353,"^O","cljs.core/hash-unordered-coll"],["^ ","^2D",51,"^2E",3353,"^O","coll__4200__auto__"],["^ ","^2D",0,"^2E",3356],["^ ","^2D",0,"^2E",3356],["^ ","^2D",7,"^2E",3356,"^O","fexpr__39500"],["^ ","^2D",20,"^2E",3356,"^O","this__4199__auto__"],["^ ","^2D",0,"^2E",3358],["^ ","^2D",0,"^2E",3358],["^ ","^2D",0,"^2E",3358,"^O","__hash"],["^ ","^2D",16,"^2E",3358,"^O","h__4061__auto__"],["^ ","^2D",0,"^2E",3360,"^O","h__4061__auto__"],["^ ","^2D",0,"^2E",3364],["^ ","^2D",0,"^2E",3364],["^ ","^2D",0,"^2E",3364],["^ ","^2D",77,"^2E",3364],["^ ","^2D",88,"^2E",3364,"^O","this39475"],["^ ","^2D",98,"^2E",3364,"^O","other39476"],["^ ","^2D",0,"^2E",3366],["^ ","^2D",0,"^2E",3366],["^ ","^2D",4,"^2E",3366,"^O","this39475"],["^ ","^2D",20,"^2E",3366],["^ ","^2D",0,"^2E",3367],["^ ","^2D",0,"^2E",3367],["^ ","^2D",9,"^2E",3367],["^ ","^2D",11,"^2E",3367],["^ ","^2D",12,"^2E",3367,"^O","other39476"],["^ ","^2D",26,"^2E",3367],["^ ","^2D",38,"^2E",3367],["^ ","^2D",39,"^2E",3367],["^ ","^2D",39,"^2E",3367,"^O","this39475"],["^ ","^2D",69,"^2E",3367],["^ ","^2D",69,"^2E",3367,"^O","other39476"],["^ ","^2D",98,"^2E",3367],["^ ","^2D",98,"^2E",3367,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",143,"^2E",3367],["^ ","^2D",143,"^2E",3367,"^O","this39475"],["^ ","^2D",165,"^2E",3367],["^ ","^2D",165,"^2E",3367,"^O","other39476"],["^ ","^2D",190,"^2E",3367],["^ ","^2D",190,"^2E",3367,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",235,"^2E",3367],["^ ","^2D",235,"^2E",3367,"^O","this39475"],["^ ","^2D",258,"^2E",3367],["^ ","^2D",258,"^2E",3367,"^O","other39476"],["^ ","^2D",0,"^2E",3370],["^ ","^2D",0,"^2E",3370],["^ ","^2D",0,"^2E",3370],["^ ","^2D",76,"^2E",3370],["^ ","^2D",87,"^2E",3370,"^O","this__4212__auto__"],["^ ","^2D",106,"^2E",3370,"^O","k__4213__auto__"],["^ ","^2D",0,"^2E",3372],["^ ","^2D",0,"^2E",3372],["^ ","^2D",4,"^2E",3372,"^O","this__4212__auto__"],["^ ","^2D",29,"^2E",3372],["^ ","^2D",0,"^2E",3373],["^ ","^2D",0,"^2E",3373],["^ ","^2D",3,"^2E",3373],["^ ","^2D",3,"^2E",3373,"^O","cljs.core/contains?"],["^ ","^2D",29,"^2E",3373],["^ ","^2D",110,"^2E",3373],["^ ","^2D",189,"^2E",3373,"^O","k__4213__auto__"],["^ ","^2D",0,"^2E",3374],["^ ","^2D",7,"^2E",3374,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",54,"^2E",3374],["^ ","^2D",54,"^2E",3374,"^O","cljs.core/-with-meta"],["^ ","^2D",75,"^2E",3374],["^ ","^2D",75,"^2E",3374,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",120,"^2E",3374],["^ ","^2D",155,"^2E",3374,"^O","this__4212__auto__"],["^ ","^2D",179,"^2E",3374,"^O","__meta"],["^ ","^2D",194,"^2E",3374,"^O","k__4213__auto__"],["^ ","^2D",0,"^2E",3376],["^ ","^2D",45,"^2E",3376,"^O","indexes"],["^ ","^2D",60,"^2E",3376,"^O","__meta"],["^ ","^2D",74,"^2E",3376],["^ ","^2D",74,"^2E",3376,"^O","cljs.core/not-empty"],["^ ","^2D",94,"^2E",3376],["^ ","^2D",94,"^2E",3376,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",141,"^2E",3376,"^O","__extmap"],["^ ","^2D",157,"^2E",3376,"^O","k__4213__auto__"],["^ ","^2D",175,"^2E",3376],["^ ","^2D",0,"^2E",3380],["^ ","^2D",0,"^2E",3380],["^ ","^2D",0,"^2E",3380],["^ ","^2D",83,"^2E",3380],["^ ","^2D",94,"^2E",3380,"^O","this__4210__auto__"],["^ ","^2D",113,"^2E",3380,"^O","k__4211__auto__"],["^ ","^2D",129,"^2E",3380,"^O","G__39473"],["^ ","^2D",0,"^2E",3382],["^ ","^2D",0,"^2E",3382],["^ ","^2D",4,"^2E",3382,"^O","this__4210__auto__"],["^ ","^2D",29,"^2E",3382],["^ ","^2D",0,"^2E",3383],["^ ","^2D",0,"^2E",3383],["^ ","^2D",4,"^2E",3383,"^O","pred__39504"],["^ ","^2D",18,"^2E",3383,"^O","cljs.core/keyword-identical?"],["^ ","^2D",4,"^2E",3384,"^O","expr__39505"],["^ ","^2D",18,"^2E",3384,"^O","k__4211__auto__"],["^ ","^2D",0,"^2E",3385],["^ ","^2D",0,"^2E",3385],["^ ","^2D",20,"^2E",3385],["^ ","^2D",37,"^2E",3385,"^O","G__39507"],["^ ","^2D",48,"^2E",3385],["^ ","^2D",4,"^2E",3386,"^O","G__39508"],["^ ","^2D",15,"^2E",3386,"^O","expr__39505"],["^ ","^2D",0,"^2E",3387],["^ ","^2D",0,"^2E",3387],["^ ","^2D",8,"^2E",3387,"^O","pred__39504"],["^ ","^2D",52,"^2E",3387,"^O","pred__39504"],["^ ","^2D",94,"^2E",3387,"^O","G__39507"],["^ ","^2D",103,"^2E",3387,"^O","G__39508"],["^ ","^2D",115,"^2E",3387,"^O","pred__39504"],["^ ","^2D",137,"^2E",3387,"^O","G__39507"],["^ ","^2D",146,"^2E",3387,"^O","G__39508"],["^ ","^2D",0,"^2E",3389],["^ ","^2D",45,"^2E",3389,"^O","G__39473"],["^ ","^2D",54,"^2E",3389,"^O","__meta"],["^ ","^2D",68,"^2E",3389,"^O","__extmap"],["^ ","^2D",84,"^2E",3389],["^ ","^2D",0,"^2E",3391],["^ ","^2D",45,"^2E",3391,"^O","indexes"],["^ ","^2D",60,"^2E",3391,"^O","__meta"],["^ ","^2D",74,"^2E",3391],["^ ","^2D",74,"^2E",3391,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",120,"^2E",3391,"^O","__extmap"],["^ ","^2D",136,"^2E",3391,"^O","k__4211__auto__"],["^ ","^2D",152,"^2E",3391,"^O","G__39473"],["^ ","^2D",162,"^2E",3391],["^ ","^2D",0,"^2E",3395],["^ ","^2D",0,"^2E",3395],["^ ","^2D",0,"^2E",3395],["^ ","^2D",77,"^2E",3395],["^ ","^2D",88,"^2E",3395,"^O","this__4215__auto__"],["^ ","^2D",0,"^2E",3397],["^ ","^2D",0,"^2E",3397],["^ ","^2D",4,"^2E",3397,"^O","this__4215__auto__"],["^ ","^2D",29,"^2E",3397],["^ ","^2D",0,"^2E",3398],["^ ","^2D",0,"^2E",3398],["^ ","^2D",7,"^2E",3398,"^O","cljs.core/seq"],["^ ","^2D",21,"^2E",3398],["^ ","^2D",21,"^2E",3398,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",68,"^2E",3398],["^ ","^2D",151,"^2E",3398],["^ ","^2D",156,"^2E",3398,"^O","cljs/core.MapEntry"],["^ ","^2D",175,"^2E",3398],["^ ","^2D",234,"^2E",3398,"^O","indexes"],["^ ","^2D",249,"^2E",3398],["^ ","^2D",264,"^2E",3398,"^O","__extmap"],["^ ","^2D",0,"^2E",3401],["^ ","^2D",0,"^2E",3401],["^ ","^2D",0,"^2E",3401],["^ ","^2D",84,"^2E",3401],["^ ","^2D",95,"^2E",3401,"^O","this__4202__auto__"],["^ ","^2D",114,"^2E",3401,"^O","G__39473"],["^ ","^2D",0,"^2E",3403],["^ ","^2D",0,"^2E",3403],["^ ","^2D",4,"^2E",3403,"^O","this__4202__auto__"],["^ ","^2D",29,"^2E",3403],["^ ","^2D",0,"^2E",3404],["^ ","^2D",0,"^2E",3404],["^ ","^2D",45,"^2E",3404,"^O","indexes"],["^ ","^2D",60,"^2E",3404,"^O","G__39473"],["^ ","^2D",69,"^2E",3404,"^O","__extmap"],["^ ","^2D",85,"^2E",3404,"^O","__hash"],["^ ","^2D",0,"^2E",3407],["^ ","^2D",0,"^2E",3407],["^ ","^2D",0,"^2E",3407],["^ ","^2D",81,"^2E",3407],["^ ","^2D",92,"^2E",3407,"^O","this__4208__auto__"],["^ ","^2D",111,"^2E",3407,"^O","entry__4209__auto__"],["^ ","^2D",0,"^2E",3409],["^ ","^2D",0,"^2E",3409],["^ ","^2D",4,"^2E",3409,"^O","this__4208__auto__"],["^ ","^2D",29,"^2E",3409],["^ ","^2D",0,"^2E",3410],["^ ","^2D",0,"^2E",3410],["^ ","^2D",3,"^2E",3410],["^ ","^2D",3,"^2E",3410,"^O","cljs.core/vector?"],["^ ","^2D",27,"^2E",3410,"^O","entry__4209__auto__"],["^ ","^2D",0,"^2E",3411],["^ ","^2D",7,"^2E",3411,"^O","cljs.core/-assoc"],["^ ","^2D",24,"^2E",3411,"^O","this__4208__auto__"],["^ ","^2D",47,"^2E",3411],["^ ","^2D",47,"^2E",3411,"^O","cljs.core._nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",92,"^2E",3411,"^O","entry__4209__auto__"],["^ ","^2D",112,"^2E",3411],["^ ","^2D",117,"^2E",3411],["^ ","^2D",117,"^2E",3411,"^O","cljs.core._nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",162,"^2E",3411,"^O","entry__4209__auto__"],["^ ","^2D",182,"^2E",3411],["^ ","^2D",0,"^2E",3413],["^ ","^2D",7,"^2E",3413,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",3413,"^O","cljs.core/-conj"],["^ ","^2D",70,"^2E",3413,"^O","this__4208__auto__"],["^ ","^2D",93,"^2E",3413,"^O","entry__4209__auto__"],["^ ","^2D",0,"^2E",3417],["^ ","^2D",0,"^2E",3417],["^ ","^2D",0,"^2E",3417],["^ ","^2D",77,"^2E",3417],["^ ","^2D",0,"^2E",3419],["^ ","^2D",0,"^2E",3419],["^ ","^2D",12,"^2E",3419],["^ ","^2D",0,"^2E",3420],["^ ","^2D",0,"^2E",3420],["^ ","^2D",7,"^2E",3420,"^O","cljs.core/deref"],["^ ","^2D",0,"^2E",3423],["^ ","^2D",0,"^2E",3423],["^ ","^2D",0,"^2E",3423,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",44,"^2E",3423],["^ ","^2D",0,"^2E",3424],["^ ","^2D",0,"^2E",3424],["^ ","^2D",90,"^2E",3424],["^ ","^2D",0,"^2E",3427],["^ ","^2D",0,"^2E",3427],["^ ","^2D",0,"^2E",3427,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",50,"^2E",3427],["^ ","^2D",0,"^2E",3429],["^ ","^2D",0,"^2E",3429],["^ ","^2D",0,"^2E",3429,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",55,"^2E",3429],["^ ","^2D",66,"^2E",3429,"^O","this__4240__auto__"],["^ ","^2D",0,"^2E",3430],["^ ","^2D",0,"^2E",3430],["^ ","^2D",12,"^2E",3430,"^O","cljs.core/List"],["^ ","^2D",27,"^2E",3430],["^ ","^2D",32,"^2E",3430],["^ ","^2D",67,"^2E",3430],["^ ","^2D",72,"^2E",3430],["^ ","^2D",76,"^2E",3430],["^ ","^2D",0,"^2E",3433],["^ ","^2D",0,"^2E",3433],["^ ","^2D",0,"^2E",3433,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",58,"^2E",3433],["^ ","^2D",69,"^2E",3433,"^O","this__4240__auto__"],["^ ","^2D",88,"^2E",3433,"^O","writer__4241__auto__"],["^ ","^2D",0,"^2E",3434],["^ ","^2D",0,"^2E",3434],["^ ","^2D",7,"^2E",3434,"^O","cljs.core/-write"],["^ ","^2D",24,"^2E",3434,"^O","writer__4241__auto__"],["^ ","^2D",45,"^2E",3434],["^ ","^2D",0,"^2E",3437],["^ ","^2D",40,"^2E",3440],["^ ","^2D",0,"^2E",3441],["^ ","^2D",0,"^2E",3441],["^ ","^2D",12,"^2E",3441,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",53,"^2E",3441],["^ ","^2D",58,"^2E",3441],["^ ","^2D",63,"^2E",3441],["^ ","^2D",0,"^2E",3444],["^ ","^2D",43,"^2E",3447],["^ ","^2D",94,"^2E",3447,"^O","G__39477"],["^ ","^2D",0,"^2E",3448],["^ ","^2D",0,"^2E",3448],["^ ","^2D",4,"^2E",3448,"^O","extmap__4236__auto__"],["^ ","^2D",27,"^2E",3448],["^ ","^2D",44,"^2E",3448,"^O","G__39512"],["^ ","^2D",55,"^2E",3448],["^ ","^2D",55,"^2E",3448,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",102,"^2E",3448,"^O","G__39477"],["^ ","^2D",111,"^2E",3448],["^ ","^2D",0,"^2E",3449],["^ ","^2D",0,"^2E",3449],["^ ","^2D",3,"^2E",3449],["^ ","^2D",3,"^2E",3449,"^O","cljs.core/record?"],["^ ","^2D",27,"^2E",3449,"^O","G__39477"],["^ ","^2D",0,"^2E",3450],["^ ","^2D",7,"^2E",3450,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",52,"^2E",3450],["^ ","^2D",87,"^2E",3450,"^O","G__39512"],["^ ","^2D",0,"^2E",3452,"^O","G__39512"],["^ ","^2D",0,"^2E",3455],["^ ","^2D",0,"^2E",3455],["^ ","^2D",12,"^2E",3455,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",45,"^2E",3455],["^ ","^2D",45,"^2E",3455],["^ ","^2D",134,"^2E",3455,"^O","G__39477"],["^ ","^2D",144,"^2E",3455],["^ ","^2D",149,"^2E",3455],["^ ","^2D",149,"^2E",3455,"^O","cljs.core/not-empty"],["^ ","^2D",169,"^2E",3455,"^O","extmap__4236__auto__"],["^ ","^2D",191,"^2E",3455],["^ ","^2D",0,"^2E",3458,"^O","fulcro.client.primitives/Indexer"]],"^2T",[["^ ","^2D",0,"^2E",3180,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3182,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3188,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3204,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3251,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3272,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3287,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3293,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3309,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3320,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3326,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3332,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",12,"^2E",3335,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3338,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3344,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3364,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3370,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",12,"^2E",3376,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3380,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",12,"^2E",3389,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",12,"^2E",3391,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3395,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3401,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",12,"^2E",3404,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3407,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3417,"^O","fulcro.client.primitives/Indexer"],["^ ","^2D",0,"^2E",3440,"^O","fulcro.client.primitives/->Indexer"],["^ ","^2D",0,"^2E",3447,"^O","fulcro.client.primitives/map->Indexer"]],"^4X",[["^ ","^2D",88,"^2E",3440,"^O","indexes"],["^ ","^2D",45,"^2E",3441,"^O","indexes"]]],"~i1799",["^ ","^4X",[["^ ","^2D",88,"^2E",3417,"^O","_"],["^ ","^2D",4,"^2E",3419,"^O","_"]],"^3=",[["^ ","^2D",23,"^2E",3420,"^O","indexes"]]],"~i1802",["^ ","^3S",[["^ ","^2D",110,"^2E",3182,"^O","this"],["^ ","^2D",4,"^2E",3184,"^O","this"]],"^2O",[["^ ","^2D",0,"^2E",3185],["^ ","^2D",7,"^2E",3185]],"^4I",[["^ ","^2D",96,"^2E",3185,"^O","this"]]],"~i1803",["^ ","^2J",[["^ ","^2D",113,"^2E",3188,"^O","this"],["^ ","^2D",4,"^2E",3190,"^O","this"]],"^4X",[["^ ","^2D",119,"^2E",3188,"^O","root-class"]]],"~i1804",["^ ","~i4",[["^ ","^2D",0,"^2E",3191],["^ ","^2D",0,"^2E",3192],["^ ","^2D",0,"^2E",3193],["^ ","^2D",0,"^2E",3193],["^ ","^2D",6,"^2E",3193],["^ ","^2D",11,"^2E",3193,"^O","js/Error"],["^ ","^2D",17,"^2E",3193],["^ ","^2D",18,"^2E",3193],["^ ","^2D",36,"^2E",3193],["^ ","^2D",79,"^2E",3193],["^ ","^2D",84,"^2E",3193]],"^3S",[["^ ","^2D",20,"^2E",3191],["^ ","^2D",20,"^2E",3191]],"^4X",[["^ ","^2D",106,"^2E",3191,"^O","this"]]],"~i1805",["^ ","~i4",[["^ ","^2D",0,"^2E",3196],["^ ","^2D",0,"^2E",3199]],"^2I",[["^ ","^2D",4,"^2E",3196,"^O","prop->classes"]],"^3=",[["^ ","^2D",23,"^2E",3196],["^ ","^2D",68,"^2E",3196]],"^3V",[["^ ","^2D",23,"^2E",3196,"^O","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i1806",["^ ","^2I",[["^ ","^2D",4,"^2E",3197,"^O","state-map"]],"^3=",[["^ ","^2D",16,"^2E",3197],["^ ","^2D",70,"^2E",3197]],"^3V",[["^ ","^2D",16,"^2E",3197,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3H",[["^ ","^2D",60,"^2E",3197,"^O","this"]]],"~i1807",["^ ","^2I",[["^ ","^2D",4,"^2E",3198,"^O","rootq"]],"^3=",[["^ ","^2D",12,"^2E",3198]],"^3V",[["^ ","^2D",12,"^2E",3198,"^O","fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2"]],"^3E",[["^ ","^2D",77,"^2E",3198],["^ ","^2D",151,"^2E",3198]],"^38",[["^ ","^2D",77,"^2E",3198,"^O","fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$2"]],"^2N",[["^ ","^2D",140,"^2E",3198,"^O","root-class"]],"^7U",[["^ ","^2D",157,"^2E",3198,"^O","state-map"]]],"~i1808",["^ ","~i6",[["^ ","^2D",0,"^2E",3199]],"~i7",[["^ ","^2D",0,"^2E",3199,"^O","fulcro.client.primitives/build-prop->class-index!"]],"^4Y",[["^ ","^2D",58,"^2E",3199,"^O","prop->classes"]],"^2Q",[["^ ","^2D",75,"^2E",3199,"^O","rootq"]]],"~i1809",["^ ","~i6",[["^ ","^2D",0,"^2E",3201],["^ ","^2D",89,"^2E",3201],["^ ","^2D",132,"^2E",3201],["^ ","^2D",202,"^2E",3201],["^ ","^2D",202,"^2E",3201,"^O","cljs.core/deref"]],"~i7",[["^ ","^2D",7,"^2E",3201,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^2G",[["^ ","^2D",58,"^2E",3201,"^O","indexes"]],"^3D",[["^ ","^2D",73,"^2E",3201,"^O","cljs.core/merge"]],"^2N",[["^ ","^2D",218,"^2E",3201,"^O","prop->classes"]]],"~i1811",["^ ","^3D",[["^ ","^2D",124,"^2E",3204,"^O","_"],["^ ","^2D",4,"^2E",3206,"^O","_"]],"^3Y",[["^ ","^2D",126,"^2E",3204,"^O","c"]]],"~i1812",["^ ","~i4",[["^ ","^2D",0,"^2E",3207]],"~i5",[["^ ","^2D",7,"^2E",3207,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^2T",[["^ ","^2D",58,"^2E",3207,"^O","indexes"]]],"~i1813",["^ ","~i6",[["^ ","^2D",73,"^2E",3207],["^ ","^2D",0,"^2E",3209]],"^3H",[["^ ","^2D",60,"^2E",3208,"^O","indexes"]]],"~i1814",["^ ","~i8",[["^ ","^2D",0,"^2E",3209],["^ ","^2D",0,"^2E",3237]],"^44",[["^ ","^2D",4,"^2E",3209,"^O","indexes"]],"^2P",[["^ ","^2D",18,"^2E",3209],["^ ","^2D",80,"^2E",3209],["^ ","^2D",163,"^2E",3209]],"^3Y",[["^ ","^2D",18,"^2E",3209,"^O","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^48",[["^ ","^2D",68,"^2E",3209,"^O","indexes"]]],"~i1815",["^ ","^2N",[["^ ","^2D",241,"^2E",3209]],"^4>",[["^ ","^2D",241,"^2E",3209,"^O","fulcro.client.primitives/react-type"]],"^5F",[["^ ","^2D",277,"^2E",3209,"^O","c"]]],"~i1816",["^ ","^3=",[["^ ","^2D",288,"^2E",3209],["^ ","^2D",348,"^2E",3209]],"^3V",[["^ ","^2D",288,"^2E",3209,"^O","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2"]],"^2X",[["^ ","^2D",333,"^2E",3209,"^O","cljs.core/conj"]],"^2K",[["^ ","^2D",383,"^2E",3209,"^O","c"]]],"~i1817",["^ ","^44",[["^ ","^2D",4,"^2E",3210,"^O","ident"]],"^2P",[["^ ","^2D",12,"^2E",3210],["^ ","^2D",138,"^2E",3210],["^ ","^2D",5,"^2E",3236]]],"~i1818",["^ ","^2F",[["^ ","^2D",14,"^2E",3210],["^ ","^2D",16,"^2E",3210],["^ ","^2D",18,"^2E",3210],["^ ","^2D",24,"^2E",3210],["^ ","^2D",32,"^2E",3210],["^ ","^2D",34,"^2E",3210],["^ ","^2D",36,"^2E",3210],["^ ","^2D",47,"^2E",3210],["^ ","^2D",48,"^2E",3210,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",80,"^2E",3210],["^ ","^2D",118,"^2E",3210],["^ ","^2D",123,"^2E",3210],["^ ","^2D",130,"^2E",3210]],"^5F",[["^ ","^2D",19,"^2E",3210,"^O","c"],["^ ","^2D",80,"^2E",3210,"^O","c"]]],"~i1819",["^ ","^3=",[["^ ","^2D",138,"^2E",3210],["^ ","^2D",0,"^2E",3211]],"^2X",[["^ ","^2D",155,"^2E",3210,"^O","ident"]],"^38",[["^ ","^2D",163,"^2E",3210]],"^2F",[["^ ","^2D",163,"^2E",3210,"^O","fulcro.client.primitives/ident"]],"^2M",[["^ ","^2D",194,"^2E",3210,"^O","c"]],"^4>",[["^ ","^2D",196,"^2E",3210]],"^2Q",[["^ ","^2D",196,"^2E",3210,"^O","fulcro.client.primitives/props"]],"^4<",[["^ ","^2D",227,"^2E",3210,"^O","c"]]],"~i1820",["^ ","^3>",[["^ ","^2D",0,"^2E",3211],["^ ","^2D",0,"^2E",3212],["^ ","^2D",0,"^2E",3213]],"^38",[["^ ","^2D",3,"^2E",3211]],"^2F",[["^ ","^2D",3,"^2E",3211,"^O","fulcro.util/ident?"]],"^3F",[["^ ","^2D",28,"^2E",3211,"^O","ident"]]],"~i1821",["^ ","^4I",[["^ ","^2D",0,"^2E",3213],["^ ","^2D",4,"^2E",3213],["^ ","^2D",4,"^2E",3213],["^ ","^2D",4,"^2E",3213,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",3213],["^ ","^2D",104,"^2E",3213],["^ ","^2D",158,"^2E",3213],["^ ","^2D",185,"^2E",3213],["^ ","^2D",237,"^2E",3213],["^ ","^2D",250,"^2E",3213],["^ ","^2D",353,"^2E",3213],["^ ","^2D",402,"^2E",3213],["^ ","^2D",454,"^2E",3213],["^ ","^2D",522,"^2E",3213],["^ ","^2D",16,"^2E",3214],["^ ","^2D",19,"^2E",3214],["^ ","^2D",20,"^2E",3214,"^O","e39484"],["^ ","^2D",38,"^2E",3214,"^O","js/Error"],["^ ","^2D",0,"^2E",3215],["^ ","^2D",4,"^2E",3215,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",3215,"^O","e39484"],["^ ","^2D",0,"^2E",3216],["^ ","^2D",0,"^2E",3216],["^ ","^2D",0,"^2E",3216,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",3216],["^ ","^2D",100,"^2E",3216],["^ ","^2D",154,"^2E",3216],["^ ","^2D",181,"^2E",3216],["^ ","^2D",233,"^2E",3216],["^ ","^2D",246,"^2E",3216],["^ ","^2D",349,"^2E",3216],["^ ","^2D",402,"^2E",3216,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",3218],["^ ","^2D",0,"^2E",3218],["^ ","^2D",6,"^2E",3218,"^O","e39484"]]],"~i1825",["^ ","^2X",[["^ ","^2D",496,"^2E",3213],["^ ","^2D",496,"^2E",3213]],"^2C",[["^ ","^2D",496,"^2E",3213,"^O","c"]]],"~i1826",["^ ","^3>",[["^ ","^2D",0,"^2E",3223],["^ ","^2D",0,"^2E",3224],["^ ","^2D",0,"^2E",3225]],"^38",[["^ ","^2D",3,"^2E",3223],["^ ","^2D",5,"^2E",3223],["^ ","^2D",33,"^2E",3223]],"^2M",[["^ ","^2D",6,"^2E",3223]],"^2N",[["^ ","^2D",6,"^2E",3223,"^O","cljs.core/second"]],"^3Z",[["^ ","^2D",23,"^2E",3223,"^O","ident"]]],"~i1827",["^ ","^4I",[["^ ","^2D",0,"^2E",3225],["^ ","^2D",4,"^2E",3225],["^ ","^2D",4,"^2E",3225],["^ ","^2D",4,"^2E",3225,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",3225],["^ ","^2D",104,"^2E",3225],["^ ","^2D",158,"^2E",3225],["^ ","^2D",185,"^2E",3225],["^ ","^2D",237,"^2E",3225],["^ ","^2D",250,"^2E",3225],["^ ","^2D",16,"^2E",3226],["^ ","^2D",19,"^2E",3226],["^ ","^2D",20,"^2E",3226,"^O","e39486"],["^ ","^2D",38,"^2E",3226,"^O","js/Error"],["^ ","^2D",0,"^2E",3227],["^ ","^2D",4,"^2E",3227,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",3227,"^O","e39486"],["^ ","^2D",0,"^2E",3228],["^ ","^2D",0,"^2E",3228],["^ ","^2D",0,"^2E",3228,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",3228],["^ ","^2D",100,"^2E",3228],["^ ","^2D",154,"^2E",3228],["^ ","^2D",181,"^2E",3228],["^ ","^2D",233,"^2E",3228],["^ ","^2D",246,"^2E",3228],["^ ","^2D",349,"^2E",3228],["^ ","^2D",402,"^2E",3228,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",3230],["^ ","^2D",0,"^2E",3230],["^ ","^2D",6,"^2E",3230,"^O","e39486"]]],"~i1828",["^ ","^2X",[["^ ","^2D",353,"^2E",3225],["^ ","^2D",354,"^2E",3225],["^ ","^2D",438,"^2E",3225],["^ ","^2D",502,"^2E",3225],["^ ","^2D",534,"^2E",3225]],"^2R",[["^ ","^2D",411,"^2E",3225],["^ ","^2D",411,"^2E",3225]],"^4<",[["^ ","^2D",411,"^2E",3225,"^O","c"]]],"~i1829",["^ ","^4>",[["^ ","^2D",495,"^2E",3225,"^O","ident"]]],"~i1831",["^ ","^3>",[["^ ","^2D",0,"^2E",3235,"^O","ident"]]],"~i1832",["^ ","^2I",[["^ ","^2D",0,"^2E",3237],["^ ","^2D",3,"^2E",3237]],"^2O",[["^ ","^2D",5,"^2E",3237],["^ ","^2D",15,"^2E",3237]],"^3=",[["^ ","^2D",6,"^2E",3237,"^O","ident"]]],"~i1833",["^ ","^3S",[["^ ","^2D",0,"^2E",3238],["^ ","^2D",4,"^2E",3238,"^O","G__39489"],["^ ","^2D",0,"^2E",3239],["^ ","^2D",0,"^2E",3239],["^ ","^2D",0,"^2E",3242,"^O","G__39489"]],"^4X",[["^ ","^2D",15,"^2E",3238,"^O","indexes"]]],"~i1834",["^ ","^44",[["^ ","^2D",20,"^2E",3239,"^O","ident"]],"^4X",[["^ ","^2D",0,"^2E",3240],["^ ","^2D",57,"^2E",3240,"^O","G__39489"],["^ ","^2D",66,"^2E",3240],["^ ","^2D",149,"^2E",3240]],"^3D",[["^ ","^2D",7,"^2E",3240,"^O","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^3F",[["^ ","^2D",224,"^2E",3240,"^O","ident"]],"^5F",[["^ ","^2D",238,"^2E",3240],["^ ","^2D",298,"^2E",3240]],"^2V",[["^ ","^2D",238,"^2E",3240,"^O","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2"]],"^2W",[["^ ","^2D",283,"^2E",3240,"^O","cljs.core/conj"]],"^>?",[["^ ","^2D",333,"^2E",3240,"^O","c"]]],"~i1835",["^ ","^3S",[["^ ","^2D",0,"^2E",3245,"^O","indexes"]]],"~i1837",["^ ","^4X",[["^ ","^2D",123,"^2E",3251,"^O","_"],["^ ","^2D",4,"^2E",3253,"^O","_"]],"^2P",[["^ ","^2D",125,"^2E",3251,"^O","c"]]],"~i1838",["^ ","~i4",[["^ ","^2D",0,"^2E",3254]],"~i5",[["^ ","^2D",7,"^2E",3254,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^2T",[["^ ","^2D",58,"^2E",3254,"^O","indexes"]]],"~i1839",["^ ","~i6",[["^ ","^2D",73,"^2E",3254],["^ ","^2D",0,"^2E",3256]],"^48",[["^ ","^2D",64,"^2E",3255,"^O","indexes"]]],"~i1840",["^ ","~i8",[["^ ","^2D",0,"^2E",3256],["^ ","^2D",0,"^2E",3258]],"^44",[["^ ","^2D",4,"^2E",3256,"^O","indexes"]],"^2P",[["^ ","^2D",18,"^2E",3256],["^ ","^2D",80,"^2E",3256],["^ ","^2D",163,"^2E",3256]],"^3Y",[["^ ","^2D",18,"^2E",3256,"^O","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^48",[["^ ","^2D",68,"^2E",3256,"^O","indexes"]],"^4B",[["^ ","^2D",241,"^2E",3256]],"^2W",[["^ ","^2D",241,"^2E",3256,"^O","fulcro.client.primitives/react-type"]],"^31",[["^ ","^2D",277,"^2E",3256,"^O","c"]],"^7F",[["^ ","^2D",288,"^2E",3256,"^O","cljs.core/disj"]],"^>@",[["^ ","^2D",303,"^2E",3256,"^O","c"]]],"~i1841",["^ ","^44",[["^ ","^2D",4,"^2E",3257,"^O","ident"]],"^2P",[["^ ","^2D",12,"^2E",3257],["^ ","^2D",138,"^2E",3257],["^ ","^2D",206,"^2E",3257]]],"~i1842",["^ ","^2F",[["^ ","^2D",14,"^2E",3257],["^ ","^2D",16,"^2E",3257],["^ ","^2D",18,"^2E",3257],["^ ","^2D",24,"^2E",3257],["^ ","^2D",32,"^2E",3257],["^ ","^2D",34,"^2E",3257],["^ ","^2D",36,"^2E",3257],["^ ","^2D",47,"^2E",3257],["^ ","^2D",48,"^2E",3257,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",80,"^2E",3257],["^ ","^2D",118,"^2E",3257],["^ ","^2D",123,"^2E",3257],["^ ","^2D",130,"^2E",3257]],"^5F",[["^ ","^2D",19,"^2E",3257,"^O","c"],["^ ","^2D",80,"^2E",3257,"^O","c"]]],"~i1843",["^ ","^3=",[["^ ","^2D",138,"^2E",3257]],"^3V",[["^ ","^2D",138,"^2E",3257,"^O","fulcro.client.primitives/ident"]],"^30",[["^ ","^2D",169,"^2E",3257,"^O","c"]],"^48",[["^ ","^2D",171,"^2E",3257]],"^2C",[["^ ","^2D",171,"^2E",3257,"^O","fulcro.client.primitives/props"]],"^2K",[["^ ","^2D",202,"^2E",3257,"^O","c"]]],"~i1844",["^ ","^2I",[["^ ","^2D",0,"^2E",3258],["^ ","^2D",3,"^2E",3258]],"^2O",[["^ ","^2D",5,"^2E",3258],["^ ","^2D",15,"^2E",3258]],"^3=",[["^ ","^2D",6,"^2E",3258,"^O","ident"]]],"~i1845",["^ ","^3S",[["^ ","^2D",0,"^2E",3259],["^ ","^2D",4,"^2E",3259,"^O","G__39492"],["^ ","^2D",0,"^2E",3260],["^ ","^2D",0,"^2E",3260],["^ ","^2D",0,"^2E",3263,"^O","G__39492"]],"^4X",[["^ ","^2D",15,"^2E",3259,"^O","indexes"]]],"~i1846",["^ ","^44",[["^ ","^2D",20,"^2E",3260,"^O","ident"]],"^4X",[["^ ","^2D",0,"^2E",3261],["^ ","^2D",57,"^2E",3261,"^O","G__39492"],["^ ","^2D",66,"^2E",3261],["^ ","^2D",149,"^2E",3261]],"^3D",[["^ ","^2D",7,"^2E",3261,"^O","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"^3F",[["^ ","^2D",224,"^2E",3261,"^O","ident"]],"^5F",[["^ ","^2D",238,"^2E",3261,"^O","cljs.core/disj"]],"^4B",[["^ ","^2D",253,"^2E",3261,"^O","c"]]],"~i1847",["^ ","^3S",[["^ ","^2D",0,"^2E",3266,"^O","indexes"]]],"~i1849",["^ ","^4X",[["^ ","^2D",121,"^2E",3272,"^O","_"],["^ ","^2D",4,"^2E",3274,"^O","_"]],"^2P",[["^ ","^2D",123,"^2E",3272,"^O","k"]]],"~i1850",["^ ","~i4",[["^ ","^2D",0,"^2E",3275],["^ ","^2D",18,"^2E",3275],["^ ","^2D",18,"^2E",3275,"^O","cljs.core/deref"],["^ ","^2D",0,"^2E",3276]],"^2I",[["^ ","^2D",4,"^2E",3275,"^O","indexes"]],"^35",[["^ ","^2D",34,"^2E",3275,"^O","indexes"]]],"~i1851",["^ ","~i6",[["^ ","^2D",0,"^2E",3276],["^ ","^2D",0,"^2E",3277]],"^2I",[["^ ","^2D",3,"^2E",3276]],"^2T",[["^ ","^2D",3,"^2E",3276,"^O","fulcro.client.primitives/component?"]],"^2P",[["^ ","^2D",45,"^2E",3276,"^O","k"]]],"~i1852",["^ ","^2I",[["^ ","^2D",54,"^2E",3277,"^O","k"]]],"~i1853",["^ ","~i8",[["^ ","^2D",0,"^2E",3279]],"~i9",[["^ ","^2D",7,"^2E",3279,"^O","cljs.core.transduce.cljs$core$IFn$_invoke$arity$4"]],"^35",[["^ ","^2D",57,"^2E",3279],["^ ","^2D",101,"^2E",3279],["^ ","^2D",18,"^2E",3280,"^O","p1__39472#"],["^ ","^2D",0,"^2E",3281]],"^4X",[["^ ","^2D",57,"^2E",3279,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^3V",[["^ ","^2D",0,"^2E",3281],["^ ","^2D",66,"^2E",3281],["^ ","^2D",149,"^2E",3281],["^ ","^2D",227,"^2E",3281,"^O","p1__39472#"]],"^3>",[["^ ","^2D",7,"^2E",3281,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^48",[["^ ","^2D",54,"^2E",3281,"^O","indexes"]]],"~i1854",["^ ","^2I",[["^ ","^2D",2,"^2E",3283]],"^2T",[["^ ","^2D",2,"^2E",3283,"^O","cljs.core.completing.cljs$core$IFn$_invoke$arity$1"]],"^2P",[["^ ","^2D",53,"^2E",3283,"^O","cljs.core/into"]]],"~i1855",["^ ","^2I",[["^ ","^2D",69,"^2E",3283],["^ ","^2D",128,"^2E",3283],["^ ","^2D",211,"^2E",3283],["^ ","^2D",296,"^2E",3283]],"^2T",[["^ ","^2D",69,"^2E",3283,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$3"]],"^2O",[["^ ","^2D",116,"^2E",3283,"^O","indexes"]],"^2N",[["^ ","^2D",286,"^2E",3283,"^O","k"]]],"~i1856",["^ ","^2I",[["^ ","^2D",331,"^2E",3283],["^ ","^2D",390,"^2E",3283],["^ ","^2D",473,"^2E",3283]],"^2T",[["^ ","^2D",331,"^2E",3283,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2O",[["^ ","^2D",378,"^2E",3283,"^O","indexes"]],"^3A",[["^ ","^2D",543,"^2E",3283,"^O","k"]]],"~i1859",["^ ","~i0",[["^ ","^2D",0,"^2E",3458],["^ ","^2D",34,"^2E",3458],["^ ","^2D",0,"^2E",3459]],"~i7",[["^ ","^2D",0,"^2E",3458,"^O","fulcro.client.primitives/to-env"]],"^2J",[["^ ","^2D",76,"^2E",3458,"^O","x"]]],"~i1860",["^ ","~i2",[["^ ","^2D",0,"^2E",3459],["^ ","^2D",0,"^2E",3460]],"~i8",[["^ ","^2D",4,"^2E",3459,"^O","config"]],"^2J",[["^ ","^2D",13,"^2E",3459]],"^35",[["^ ","^2D",15,"^2E",3459]],"^4X",[["^ ","^2D",15,"^2E",3459,"^O","fulcro.client.primitives/reconciler?"]],"^4Y",[["^ ","^2D",58,"^2E",3459,"^O","x"]],"^3E",[["^ ","^2D",62,"^2E",3459],["^ ","^2D",62,"^2E",3459]],"^2N",[["^ ","^2D",148,"^2E",3459,"^O","x"]],"^5C",[["^ ","^2D",151,"^2E",3459,"^O","x"]]],"~i1861",["^ ","~i4",[["^ ","^2D",0,"^2E",3460],["^ ","^2D",36,"^2E",3460],["^ ","^2D",119,"^2E",3460],["^ ","^2D",175,"^2E",3460],["^ ","^2D",232,"^2E",3460]],"~i5",[["^ ","^2D",7,"^2E",3460,"^O","cljs.core/select-keys"]],"^3K",[["^ ","^2D",29,"^2E",3460,"^O","config"]]],"~i1863",["^ ","~i0",[["^ ","^2D",0,"^2E",3462],["^ ","^2D",40,"^2E",3466],["^ ","^2D",88,"^2E",3466,"^O","p__39543"],["^ ","^2D",0,"^2E",3467],["^ ","^2D",0,"^2E",3467],["^ ","^2D",4,"^2E",3467,"^O","map__39544"],["^ ","^2D",17,"^2E",3467,"^O","p__39543"],["^ ","^2D",4,"^2E",3468,"^O","map__39544"],["^ ","^2D",21,"^2E",3468],["^ ","^2D",23,"^2E",3468],["^ ","^2D",25,"^2E",3468],["^ ","^2D",27,"^2E",3468],["^ ","^2D",28,"^2E",3468,"^O","map__39544"],["^ ","^2D",42,"^2E",3468],["^ ","^2D",50,"^2E",3468],["^ ","^2D",52,"^2E",3468],["^ ","^2D",54,"^2E",3468],["^ ","^2D",55,"^2E",3468],["^ ","^2D",55,"^2E",3468,"^O","map__39544"],["^ ","^2D",104,"^2E",3468],["^ ","^2D",115,"^2E",3468],["^ ","^2D",116,"^2E",3468,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",3468],["^ ","^2D",148,"^2E",3468,"^O","map__39544"],["^ ","^2D",179,"^2E",3468],["^ ","^2D",184,"^2E",3468],["^ ","^2D",191,"^2E",3468],["^ ","^2D",199,"^2E",3468],["^ ","^2D",199,"^2E",3468,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",3468,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",3468,"^O","map__39544"],["^ ","^2D",276,"^2E",3468,"^O","map__39544"],["^ ","^2D",10,"^2E",3469,"^O","map__39544"],["^ ","^2D",13,"^2E",3470],["^ ","^2D",13,"^2E",3470,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",57,"^2E",3470,"^O","map__39544"],["^ ","^2D",72,"^2E",3470],["^ ","^2D",0,"^2E",3471]],"~i6",[["^ ","^2D",0,"^2E",3466,"^O","fulcro.client.primitives/gather-sends"]]],"~i1866",["^ ","^2T",[["^ ","^2D",4,"^2E",3470,"^O","parser"]],"^3Y",[["^ ","^2D",4,"^2E",3469,"^O","env"]],"^4I",[["^ ","^2D",97,"^2E",3466,"^O","q"]],"^2X",[["^ ","^2D",99,"^2E",3466,"^O","remotes"]],"^2H",[["^ ","^2D",107,"^2E",3466,"^O","tx-time"]]],"~i1867",["^ ","~i2",[["^ ","^2D",0,"^2E",3471],["^ ","^2D",52,"^2E",3471]],"~i3",[["^ ","^2D",7,"^2E",3471,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]]],"~i1868",["^ ","~i4",[["^ ","^2D",87,"^2E",3471]],"~i5",[["^ ","^2D",87,"^2E",3471,"^O","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i1869",["^ ","~i6",[["^ ","^2D",132,"^2E",3471],["^ ","^2D",176,"^2E",3471],["^ ","^2D",18,"^2E",3472,"^O","p1__39541#"],["^ ","^2D",0,"^2E",3473]],"~i7",[["^ ","^2D",132,"^2E",3471,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^3S",[["^ ","^2D",0,"^2E",3473],["^ ","^2D",12,"^2E",3473,"^O","cljs.core/PersistentVector"],["^ ","^2D",39,"^2E",3473],["^ ","^2D",44,"^2E",3473],["^ ","^2D",46,"^2E",3473],["^ ","^2D",50,"^2E",3473],["^ ","^2D",50,"^2E",3473,"^O","cljs.core/PersistentVector"],["^ ","^2D",88,"^2E",3473],["^ ","^2D",89,"^2E",3473,"^O","p1__39541#"],["^ ","^2D",6,"^2E",3479]],"^2P",[["^ ","^2D",106,"^2E",3473],["^ ","^2D",123,"^2E",3473,"^O","G__39546"],["^ ","^2D",0,"^2E",3474],["^ ","^2D",0,"^2E",3474],["^ ","^2D",3,"^2E",3474],["^ ","^2D",4,"^2E",3474,"^O","G__39546"],["^ ","^2D",16,"^2E",3474],["^ ","^2D",0,"^2E",3475]],"^2X",[["^ ","^2D",134,"^2E",3473],["^ ","^2D",217,"^2E",3473,"^O","p1__39541#"],["^ ","^2D",260,"^2E",3473,"^O","p1__39541#"]],"^30",[["^ ","^2D",135,"^2E",3473,"^O","parser"],["^ ","^2D",174,"^2E",3473,"^O","parser"],["^ ","^2D",237,"^2E",3473,"^O","parser"]],"^2H",[["^ ","^2D",211,"^2E",3473,"^O","env"],["^ ","^2D",254,"^2E",3473,"^O","env"]],"^3A",[["^ ","^2D",215,"^2E",3473,"^O","q"],["^ ","^2D",258,"^2E",3473,"^O","q"]],"^5C",[["^ ","^2D",0,"^2E",3477],["^ ","^2D",57,"^2E",3477,"^O","G__39546"],["^ ","^2D",82,"^2E",3477]],"^2R",[["^ ","^2D",7,"^2E",3477,"^O","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4"]],"^4J",[["^ ","^2D",66,"^2E",3477,"^O","cljs.core/assoc"]],"^34",[["^ ","^2D",167,"^2E",3477,"^O","tx-time"]]],"~i1870",["^ ","~i6",[["^ ","^2D",2,"^2E",3481]],"~i7",[["^ ","^2D",2,"^2E",3481,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^44",[["^ ","^2D",49,"^2E",3481],["^ ","^2D",18,"^2E",3482,"^O","p__39547"],["^ ","^2D",0,"^2E",3483],["^ ","^2D",0,"^2E",3483],["^ ","^2D",4,"^2E",3483,"^O","vec__39548"],["^ ","^2D",17,"^2E",3483,"^O","p__39547"],["^ ","^2D",8,"^2E",3484],["^ ","^2D",8,"^2E",3484,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",3484,"^O","vec__39548"],["^ ","^2D",63,"^2E",3484],["^ ","^2D",67,"^2E",3484],["^ ","^2D",8,"^2E",3485],["^ ","^2D",8,"^2E",3485,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",52,"^2E",3485,"^O","vec__39548"],["^ ","^2D",63,"^2E",3485],["^ ","^2D",67,"^2E",3485],["^ ","^2D",0,"^2E",3486]],"^4X",[["^ ","^2D",4,"^2E",3484,"^O","_"]],"^2P",[["^ ","^2D",4,"^2E",3485,"^O","v"]],"^3>",[["^ ","^2D",0,"^2E",3486],["^ ","^2D",29,"^2E",3486]],"^4Y",[["^ ","^2D",8,"^2E",3486]],"^48",[["^ ","^2D",8,"^2E",3486,"^O","cljs.core/count"]],"^3W",[["^ ","^2D",24,"^2E",3486,"^O","v"]]],"~i1871",["^ ","~i4",[["^ ","^2D",3,"^2E",3488,"^O","remotes"]]],"~i1873",["^ ","~i0",[["^ ","^2D",0,"^2E",3490],["^ ","^2D",48,"^2E",3490],["^ ","^2D",0,"^2E",3491]],"~i6",[["^ ","^2D",0,"^2E",3490,"^O","fulcro.client.primitives/schedule-sends!"]],"^3Y",[["^ ","^2D",104,"^2E",3490,"^O","reconciler"]]],"~i1874",["^ ","~i2",[["^ ","^2D",0,"^2E",3491],["^ ","^2D",0,"^2E",3492],["^ ","^2D",0,"^2E",3496]],"~i8",[["^ ","^2D",20,"^2E",3491]],"~i9",[["^ ","^2D",20,"^2E",3491,"^O","fulcro.client.impl.protocols/schedule-sends!"]],"^3L",[["^ ","^2D",70,"^2E",3491,"^O","reconciler"]]],"~i1876",["^ ","^2G",[["^ ","^2D",0,"^2E",3492],["^ ","^2D",18,"^2E",3492],["^ ","^2D",0,"^2E",3493],["^ ","^2D",3,"^2E",3494]],"^44",[["^ ","^2D",7,"^2E",3492,"^O","js/setTimeout"]],"^3H",[["^ ","^2D",0,"^2E",3493]],"^2X",[["^ ","^2D",7,"^2E",3493,"^O","fulcro.client.impl.protocols/send!"]],"^2H",[["^ ","^2D",47,"^2E",3493,"^O","reconciler"]]],"~i1879",["^ ","~i3",[["^ ","^2D",0,"^2E",3499],["^ ","^2D",46,"^2E",3499],["^ ","^2D",0,"^2E",3500]],"^2I",[["^ ","^2D",0,"^2E",3499,"^O","fulcro.client.primitives/queue-render!"]],"^3V",[["^ ","^2D",100,"^2E",3499,"^O","f"]]],"~i1880",["^ ","~i5",[["^ ","^2D",0,"^2E",3500],["^ ","^2D",0,"^2E",3503],["^ ","^2D",0,"^2E",3506]]],"~i1881",["^ ","~i7",[["^ ","^2D",3,"^2E",3500]],"~i8",[["^ ","^2D",3,"^2E",3500,"^O","cljs.core/fn?"]],"^3S",[["^ ","^2D",23,"^2E",3500,"^O","fulcro.client.primitives/*raf*"]],"^35",[["^ ","^2D",0,"^2E",3501]],"^4X",[["^ ","^2D",8,"^2E",3501,"^O","fulcro.client.primitives/*raf*"],["^ ","^2D",81,"^2E",3501,"^O","fulcro.client.primitives/*raf*"],["^ ","^2D",157,"^2E",3501,"^O","fulcro.client.primitives/*raf*"]],"^3>",[["^ ","^2D",152,"^2E",3501,"^O","f"],["^ ","^2D",208,"^2E",3501,"^O","f"]]],"~i1883",["^ ","~i7",[["^ ","^2D",3,"^2E",3503]],"^3S",[["^ ","^2D",5,"^2E",3503],["^ ","^2D",13,"^2E",3503,"^O","js/requestAnimationFrame"]]],"~i1884",["^ ","~i7",[["^ ","^2D",0,"^2E",3504],["^ ","^2D",20,"^2E",3504]],"~i8",[["^ ","^2D",7,"^2E",3504,"^O","js/setTimeout"]],"^2P",[["^ ","^2D",18,"^2E",3504,"^O","f"]]],"~i1887",["^ ","~i7",[["^ ","^2D",0,"^2E",3506]],"~i8",[["^ ","^2D",7,"^2E",3506,"^O","js/requestAnimationFrame"]],"^48",[["^ ","^2D",29,"^2E",3506,"^O","f"]]],"~i1890",["^ ","~i3",[["^ ","^2D",0,"^2E",3511],["^ ","^2D",49,"^2E",3511],["^ ","^2D",0,"^2E",3512]],"~i9",[["^ ","^2D",0,"^2E",3511,"^O","fulcro.client.primitives/schedule-render!"]],"^3L",[["^ ","^2D",106,"^2E",3511,"^O","reconciler"]]],"~i1891",["^ ","~i5",[["^ ","^2D",0,"^2E",3512],["^ ","^2D",0,"^2E",3513],["^ ","^2D",0,"^2E",3517]],"^2T",[["^ ","^2D",20,"^2E",3512]],"^3S",[["^ ","^2D",20,"^2E",3512,"^O","fulcro.client.impl.protocols/schedule-render!"]],"^30",[["^ ","^2D",71,"^2E",3512,"^O","reconciler"]]],"~i1892",["^ ","~i7",[["^ ","^2D",0,"^2E",3513],["^ ","^2D",51,"^2E",3513],["^ ","^2D",0,"^2E",3514]],"~i8",[["^ ","^2D",7,"^2E",3513,"^O","fulcro.client.primitives/queue-render!"]],"^3Y",[["^ ","^2D",0,"^2E",3514]],"^3=",[["^ ","^2D",7,"^2E",3514,"^O","fulcro.client.impl.protocols.reconcile_BANG_.cljs$core$IFn$_invoke$arity$1"]],"^2F",[["^ ","^2D",82,"^2E",3514,"^O","reconciler"]]],"~i1894",["^ ","~i0",[["^ ","^2D",0,"^2E",3520],["^ ","^2D",42,"^2E",3523],["^ ","^2D",0,"^2E",3524]],"~i6",[["^ ","^2D",0,"^2E",3523,"^O","fulcro.client.primitives/mounted?"]]],"~i1897",["^ ","~i3",[["^ ","^2D",92,"^2E",3523,"^O","x"]]],"~i1899",["^ ","^2T",[["^ ","^2D",0,"^2E",3524]],"^37",[["^ ","^2D",9,"^2E",3524]],"^3K",[["^ ","^2D",9,"^2E",3524,"^O","fulcro.client.primitives/component?"]],"^4I",[["^ ","^2D",51,"^2E",3524,"^O","x"]],"^30",[["^ ","^2D",59,"^2E",3524]],"^2L",[["^ ","^2D",59,"^2E",3524,"^O","cljs.core/boolean"]],"^3F",[["^ ","^2D",78,"^2E",3524],["^ ","^2D",96,"^2E",3524]],"^5;",[["^ ","^2D",78,"^2E",3524,"^O","goog.object/get"]],"^2Z",[["^ ","^2D",94,"^2E",3524,"^O","x"]]],"~i1901",["^ ","~i0",[["^ ","^2D",0,"^2E",3526],["^ ","^2D",47,"^2E",3531],["^ ","^2D",102,"^2E",3531,"^O","p__39563"],["^ ","^2D",0,"^2E",3532],["^ ","^2D",0,"^2E",3532],["^ ","^2D",4,"^2E",3532,"^O","map__39564"],["^ ","^2D",17,"^2E",3532,"^O","p__39563"],["^ ","^2D",4,"^2E",3533,"^O","map__39564"],["^ ","^2D",21,"^2E",3533],["^ ","^2D",23,"^2E",3533],["^ ","^2D",25,"^2E",3533],["^ ","^2D",27,"^2E",3533],["^ ","^2D",28,"^2E",3533,"^O","map__39564"],["^ ","^2D",42,"^2E",3533],["^ ","^2D",50,"^2E",3533],["^ ","^2D",52,"^2E",3533],["^ ","^2D",54,"^2E",3533],["^ ","^2D",55,"^2E",3533],["^ ","^2D",55,"^2E",3533,"^O","map__39564"],["^ ","^2D",104,"^2E",3533],["^ ","^2D",115,"^2E",3533],["^ ","^2D",116,"^2E",3533,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",3533],["^ ","^2D",148,"^2E",3533,"^O","map__39564"],["^ ","^2D",179,"^2E",3533],["^ ","^2D",184,"^2E",3533],["^ ","^2D",191,"^2E",3533],["^ ","^2D",199,"^2E",3533],["^ ","^2D",199,"^2E",3533,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",3533,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",3533,"^O","map__39564"],["^ ","^2D",276,"^2E",3533,"^O","map__39564"],["^ ","^2D",10,"^2E",3534,"^O","map__39564"],["^ ","^2D",13,"^2E",3535],["^ ","^2D",13,"^2E",3535,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",57,"^2E",3535,"^O","map__39564"],["^ ","^2D",72,"^2E",3535],["^ ","^2D",12,"^2E",3536],["^ ","^2D",12,"^2E",3536,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",56,"^2E",3536,"^O","map__39564"],["^ ","^2D",71,"^2E",3536],["^ ","^2D",0,"^2E",3537]],"~i6",[["^ ","^2D",0,"^2E",3531,"^O","fulcro.client.primitives/fulcro-ui->props"]]],"~i1905",["^ ","^2T",[["^ ","^2D",4,"^2E",3535,"^O","parser"]],"^2O",[["^ ","^2D",4,"^2E",3536,"^O","state"]],"^3H",[["^ ","^2D",4,"^2E",3534,"^O","env"]],"^2C",[["^ ","^2D",111,"^2E",3531,"^O","c"]]],"~i1906",["^ ","~i2",[["^ ","^2D",0,"^2E",3537],["^ ","^2D",0,"^2E",3560]],"~i8",[["^ ","^2D",4,"^2E",3537,"^O","ui"]],"^2T",[["^ ","^2D",9,"^2E",3537],["^ ","^2D",135,"^2E",3537],["^ ","^2D",5,"^2E",3559]]],"~i1907",["^ ","^3>",[["^ ","^2D",11,"^2E",3537],["^ ","^2D",13,"^2E",3537],["^ ","^2D",15,"^2E",3537],["^ ","^2D",21,"^2E",3537],["^ ","^2D",29,"^2E",3537],["^ ","^2D",31,"^2E",3537],["^ ","^2D",33,"^2E",3537],["^ ","^2D",44,"^2E",3537],["^ ","^2D",45,"^2E",3537,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",77,"^2E",3537],["^ ","^2D",115,"^2E",3537],["^ ","^2D",120,"^2E",3537],["^ ","^2D",127,"^2E",3537]],"^4>",[["^ ","^2D",16,"^2E",3537,"^O","c"],["^ ","^2D",77,"^2E",3537,"^O","c"]]],"~i1908",["^ ","^2G",[["^ ","^2D",135,"^2E",3537],["^ ","^2D",12,"^2E",3541],["^ ","^2D",95,"^2E",3541],["^ ","^2D",0,"^2E",3548]],"^35",[["^ ","^2D",152,"^2E",3537,"^O","id"]],"^30",[["^ ","^2D",157,"^2E",3537]],"^4Y",[["^ ","^2D",157,"^2E",3537,"^O","fulcro.client.primitives/ident"]],"^2H",[["^ ","^2D",188,"^2E",3537,"^O","c"]],"^2K",[["^ ","^2D",190,"^2E",3537]],"^2L",[["^ ","^2D",190,"^2E",3537,"^O","fulcro.client.primitives/props"]],"^5C",[["^ ","^2D",221,"^2E",3537,"^O","c"]]],"~i1909",["^ ","^35",[["^ ","^2D",4,"^2E",3538,"^O","has-tempid?"]],"^30",[["^ ","^2D",24,"^2E",3538],["^ ","^2D",41,"^2E",3538,"^O","G__39569"],["^ ","^2D",0,"^2E",3539],["^ ","^2D",0,"^2E",3539],["^ ","^2D",148,"^2E",3539,"^O","G__39569"],["^ ","^2D",209,"^2E",3539,"^O","G__39569"]],"^4Y",[["^ ","^2D",8,"^2E",3539,"^O","fulcro.client.primitives/tempid?"],["^ ","^2D",79,"^2E",3539,"^O","fulcro.client.primitives/tempid?"],["^ ","^2D",160,"^2E",3539,"^O","fulcro.client.primitives/tempid?"]],"^2K",[["^ ","^2D",52,"^2E",3538]],"^2L",[["^ ","^2D",52,"^2E",3538,"^O","cljs.core/second"]],"^2R",[["^ ","^2D",69,"^2E",3538,"^O","id"]]],"~i1910",["^ ","^35",[["^ ","^2D",4,"^2E",3541,"^O","query"]],"^48",[["^ ","^2D",143,"^2E",3541,"^O","id"]],"^38",[["^ ","^2D",146,"^2E",3541],["^ ","^2D",213,"^2E",3541],["^ ","^2D",213,"^2E",3541,"^O","cljs.core/deref"]],"^2F",[["^ ","^2D",146,"^2E",3541,"^O","fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2"]],"^5C",[["^ ","^2D",211,"^2E",3541,"^O","c"]],"^5;",[["^ ","^2D",229,"^2E",3541,"^O","state"]]],"~i1911",["^ ","^35",[["^ ","^2D",4,"^2E",3542,"^O","data-path"]],"^30",[["^ ","^2D",16,"^2E",3542],["^ ","^2D",16,"^2E",3542],["^ ","^2D",158,"^2E",3542]],"^3E",[["^ ","^2D",173,"^2E",3542]],"^38",[["^ ","^2D",173,"^2E",3542,"^O","fulcro.client.primitives/props"]],"^3A",[["^ ","^2D",204,"^2E",3542,"^O","c"]],"^4>",[["^ ","^2D",158,"^2E",3542,"^O","cljs.core/meta"]]],"~i1912",["^ ","^35",[["^ ","^2D",4,"^2E",3543,"^O","result"]],"^30",[["^ ","^2D",13,"^2E",3543],["^ ","^2D",30,"^2E",3543,"^O","G__39571"],["^ ","^2D",4,"^2E",3544,"^O","G__39572"],["^ ","^2D",0,"^2E",3545],["^ ","^2D",0,"^2E",3545],["^ ","^2D",84,"^2E",3545,"^O","G__39571"],["^ ","^2D",93,"^2E",3545,"^O","G__39572"],["^ ","^2D",122,"^2E",3545,"^O","G__39571"],["^ ","^2D",131,"^2E",3545,"^O","G__39572"]],"^4Y",[["^ ","^2D",8,"^2E",3545,"^O","parser"],["^ ","^2D",47,"^2E",3545,"^O","parser"],["^ ","^2D",105,"^2E",3545,"^O","parser"]],"^3W",[["^ ","^2D",41,"^2E",3543],["^ ","^2D",91,"^2E",3543]],"^2K",[["^ ","^2D",41,"^2E",3543,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2Q",[["^ ","^2D",87,"^2E",3543,"^O","env"]],"^31",[["^ ","^2D",179,"^2E",3543,"^O","data-path"]],"^=;",[["^ ","^2D",15,"^2E",3544,"^O","query"]]],"~i1913",["^ ","^35",[["^ ","^2D",4,"^2E",3547,"^O","value"]],"^30",[["^ ","^2D",12,"^2E",3547]],"^4Y",[["^ ","^2D",12,"^2E",3547,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^38",[["^ ","^2D",56,"^2E",3547,"^O","result"]],"^2M",[["^ ","^2D",63,"^2E",3547,"^O","id"]]],"~i1914",["^ ","^2J",[["^ ","^2D",0,"^2E",3548],["^ ","^2D",0,"^2E",3555]],"^35",[["^ ","^2D",20,"^2E",3548],["^ ","^2D",37,"^2E",3548,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",3549],["^ ","^2D",0,"^2E",3549],["^ ","^2D",20,"^2E",3549,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",3552,"^O","and__3938__auto__"]],"^3=",[["^ ","^2D",57,"^2E",3548,"^O","has-tempid?"]],"^38",[["^ ","^2D",0,"^2E",3550]],"^2K",[["^ ","^2D",9,"^2E",3550],["^ ","^2D",19,"^2E",3550]],"^2Q",[["^ ","^2D",10,"^2E",3550,"^O","value"]],"^2S",[["^ ","^2D",30,"^2E",3550]],"^4E",[["^ ","^2D",30,"^2E",3550,"^O","cljs.core/empty?"]],"^4B",[["^ ","^2D",53,"^2E",3550,"^O","value"]]],"~i1916",["^ ","^3K",[["^ ","^2D",0,"^2E",3557,"^O","value"]]],"~i1917",["^ ","~i4",[["^ ","^2D",0,"^2E",3560],["^ ","^2D",4,"^2E",3560,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",3561],["^ ","^2D",0,"^2E",3561],["^ ","^2D",20,"^2E",3561,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",3562,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",3564]],"~i8",[["^ ","^2D",23,"^2E",3560,"^O","ui"]]],"~i1919",["^ ","~i0",[["^ ","^2D",0,"^2E",3567],["^ ","^2D",36,"^2E",3571],["^ ","^2D",0,"^2E",3572]],"~i6",[["^ ","^2D",0,"^2E",3571,"^O","fulcro.client.primitives/computed"]]],"~i1922",["^ ","~i3",[["^ ","^2D",80,"^2E",3571,"^O","props"]],"~i9",[["^ ","^2D",86,"^2E",3571,"^O","computed-map"]]],"~i1923",["^ ","~i2",[["^ ","^2D",0,"^2E",3572],["^ ","^2D",0,"^2E",3573],["^ ","^2D",0,"^2E",3575]],"^3S",[["^ ","^2D",3,"^2E",3572],["^ ","^2D",13,"^2E",3572]],"^2O",[["^ ","^2D",4,"^2E",3572,"^O","props"]]],"~i1924",["^ ","~i4",[["^ ","^2D",0,"^2E",3575]],"~i8",[["^ ","^2D",3,"^2E",3575]],"~i9",[["^ ","^2D",3,"^2E",3575,"^O","cljs.core/vector?"]],"^3K",[["^ ","^2D",27,"^2E",3575,"^O","props"]]],"~i1925",["^ ","~i6",[["^ ","^2D",0,"^2E",3576],["^ ","^2D",4,"^2E",3576,"^O","G__39576"],["^ ","^2D",0,"^2E",3577],["^ ","^2D",0,"^2E",3577],["^ ","^2D",0,"^2E",3580,"^O","G__39576"]],"^44",[["^ ","^2D",15,"^2E",3576,"^O","props"]]],"~i1926",["^ ","~i8",[["^ ","^2D",3,"^2E",3577]],"^2G",[["^ ","^2D",5,"^2E",3577]],"^44",[["^ ","^2D",5,"^2E",3577,"^O","cljs.core/empty?"]],"^3D",[["^ ","^2D",28,"^2E",3577,"^O","computed-map"]],"^38",[["^ ","^2D",0,"^2E",3578],["^ ","^2D",57,"^2E",3578,"^O","G__39576"],["^ ","^2D",82,"^2E",3578]],"^2F",[["^ ","^2D",7,"^2E",3578,"^O","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4"]],"^5C",[["^ ","^2D",66,"^2E",3578,"^O","cljs.core/assoc"]],"^3?",[["^ ","^2D",189,"^2E",3578,"^O","computed-map"]]],"~i1927",["^ ","~i6",[["^ ","^2D",0,"^2E",3583],["^ ","^2D",4,"^2E",3583,"^O","G__39577"],["^ ","^2D",0,"^2E",3584],["^ ","^2D",0,"^2E",3584],["^ ","^2D",0,"^2E",3587,"^O","G__39577"]],"^44",[["^ ","^2D",15,"^2E",3583,"^O","props"]]],"~i1928",["^ ","~i8",[["^ ","^2D",3,"^2E",3584]],"^2G",[["^ ","^2D",5,"^2E",3584]],"^44",[["^ ","^2D",5,"^2E",3584,"^O","cljs.core/empty?"]],"^3D",[["^ ","^2D",28,"^2E",3584,"^O","computed-map"]],"^38",[["^ ","^2D",0,"^2E",3585],["^ ","^2D",53,"^2E",3585,"^O","G__39577"],["^ ","^2D",62,"^2E",3585]],"^2F",[["^ ","^2D",7,"^2E",3585,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^:M",[["^ ","^2D",169,"^2E",3585,"^O","computed-map"]]],"~i1930",["^ ","~i0",[["^ ","^2D",0,"^2E",3592],["^ ","^2D",0,"^2E",3592],["^ ","^2D",40,"^2E",3595],["^ ","^2D",88,"^2E",3595,"^O","var_args"],["^ ","^2D",0,"^2E",3596],["^ ","^2D",0,"^2E",3596],["^ ","^2D",4,"^2E",3596,"^O","G__39582"],["^ ","^2D",15,"^2E",3596],["^ ","^2D",15,"^2E",3596],["^ ","^2D",0,"^2E",3597],["^ ","^2D",0,"^2E",3597],["^ ","^2D",8,"^2E",3597,"^O","G__39582"],["^ ","^2D",5,"^2E",3598],["^ ","^2D",0,"^2E",3599],["^ ","^2D",7,"^2E",3599,"^O","fulcro.client.primitives/get-computed"],["^ ","^2D",75,"^2E",3599],["^ ","^2D",76,"^2E",3599],["^ ","^2D",86,"^2E",3599],["^ ","^2D",5,"^2E",3602],["^ ","^2D",0,"^2E",3603],["^ ","^2D",7,"^2E",3603,"^O","fulcro.client.primitives/get-computed"],["^ ","^2D",75,"^2E",3603],["^ ","^2D",76,"^2E",3603],["^ ","^2D",86,"^2E",3603],["^ ","^2D",92,"^2E",3603],["^ ","^2D",93,"^2E",3603],["^ ","^2D",103,"^2E",3603],["^ ","^2D",0,"^2E",3607],["^ ","^2D",6,"^2E",3607],["^ ","^2D",11,"^2E",3607,"^O","js/Error"],["^ ","^2D",17,"^2E",3607],["^ ","^2D",18,"^2E",3607],["^ ","^2D",80,"^2E",3607],["^ ","^2D",80,"^2E",3607],["^ ","^2D",0,"^2E",3612],["^ ","^2D",0,"^2E",3612],["^ ","^2D",70,"^2E",3612],["^ ","^2D",0,"^2E",3613],["^ ","^2D",0,"^2E",3616],["^ ","^2D",0,"^2E",3616],["^ ","^2D",70,"^2E",3616],["^ ","^2D",0,"^2E",3617],["^ ","^2D",0,"^2E",3642],["^ ","^2D",0,"^2E",3642],["^ ","^2D",64,"^2E",3642],["^ ","^2D",0,"^2E",3644]],"~i6",[["^ ","^2D",0,"^2E",3595,"^O","fulcro.client.primitives/get-computed"],["^ ","^2D",0,"^2E",3612,"^O","fulcro.client.primitives/get-computed"],["^ ","^2D",0,"^2E",3616,"^O","fulcro.client.primitives/get-computed"],["^ ","^2D",0,"^2E",3642,"^O","fulcro.client.primitives/get-computed"]]],"~i1932",["^ ","~i4",[["^ ","^2D",81,"^2E",3612,"^O","x"]]],"~i1933",["^ ","~i3",[["^ ","^2D",0,"^2E",3613],["^ ","^2D",77,"^2E",3613]],"~i4",[["^ ","^2D",7,"^2E",3613,"^O","fulcro.client.primitives.get_computed.cljs$core$IFn$_invoke$arity$2"]],"^3K",[["^ ","^2D",75,"^2E",3613,"^O","x"]]],"~i1934",["^ ","~i4",[["^ ","^2D",81,"^2E",3616,"^O","x"]],"~i6",[["^ ","^2D",83,"^2E",3616,"^O","k-or-ks"]]],"~i1935",["^ ","~i3",[["^ ","^2D",0,"^2E",3617],["^ ","^2D",0,"^2E",3618],["^ ","^2D",0,"^2E",3620]],"^2G",[["^ ","^2D",3,"^2E",3617],["^ ","^2D",9,"^2E",3617]],"^35",[["^ ","^2D",4,"^2E",3617,"^O","x"]]],"~i1936",["^ ","~i5",[["^ ","^2D",0,"^2E",3620],["^ ","^2D",0,"^2E",3634]],"^2T",[["^ ","^2D",4,"^2E",3620,"^O","props"]],"^3K",[["^ ","^2D",12,"^2E",3620],["^ ","^2D",29,"^2E",3620,"^O","G__39583"],["^ ","^2D",0,"^2E",3621],["^ ","^2D",0,"^2E",3621],["^ ","^2D",0,"^2E",3622],["^ ","^2D",38,"^2E",3622,"^O","G__39583"],["^ ","^2D",0,"^2E",3624,"^O","G__39583"]],"^3V",[["^ ","^2D",40,"^2E",3620,"^O","x"]],"^3L",[["^ ","^2D",3,"^2E",3621]],"^4I",[["^ ","^2D",3,"^2E",3621,"^O","fulcro.client.primitives/component?"]],"^3W",[["^ ","^2D",45,"^2E",3621,"^O","x"]],"^3A",[["^ ","^2D",7,"^2E",3622,"^O","fulcro.client.primitives/props"]]],"~i1937",["^ ","^2T",[["^ ","^2D",4,"^2E",3627,"^O","ks"]],"^3K",[["^ ","^2D",9,"^2E",3627],["^ ","^2D",54,"^2E",3627],["^ ","^2D",137,"^2E",3627]],"^2O",[["^ ","^2D",9,"^2E",3627,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]]],"~i1938",["^ ","^35",[["^ ","^2D",252,"^2E",3627],["^ ","^2D",269,"^2E",3627,"^O","G__39584"],["^ ","^2D",0,"^2E",3628],["^ ","^2D",0,"^2E",3628],["^ ","^2D",0,"^2E",3629],["^ ","^2D",12,"^2E",3629,"^O","cljs.core/PersistentVector"],["^ ","^2D",39,"^2E",3629],["^ ","^2D",44,"^2E",3629],["^ ","^2D",46,"^2E",3629],["^ ","^2D",50,"^2E",3629],["^ ","^2D",50,"^2E",3629,"^O","cljs.core/PersistentVector"],["^ ","^2D",88,"^2E",3629],["^ ","^2D",89,"^2E",3629,"^O","G__39584"],["^ ","^2D",99,"^2E",3629],["^ ","^2D",0,"^2E",3631,"^O","G__39584"]],"^3L",[["^ ","^2D",280,"^2E",3627,"^O","k-or-ks"]]],"~i1939",["^ ","^3D",[["^ ","^2D",3,"^2E",3628]],"^3>",[["^ ","^2D",5,"^2E",3628]],"^3L",[["^ ","^2D",5,"^2E",3628,"^O","cljs.core/sequential?"]],"^3W",[["^ ","^2D",33,"^2E",3628,"^O","k-or-ks"]]],"~i1940",["^ ","~i7",[["^ ","^2D",0,"^2E",3634]],"^2T",[["^ ","^2D",3,"^2E",3634]],"^3S",[["^ ","^2D",3,"^2E",3634,"^O","cljs.core/vector?"]],"^4X",[["^ ","^2D",27,"^2E",3634,"^O","props"]]],"~i1941",["^ ","^2G",[["^ ","^2D",69,"^2E",3635,"^O","props"]],"^35",[["^ ","^2D",54,"^2E",3635,"^O","cljs.core/meta"]],"^3=",[["^ ","^2D",0,"^2E",3635],["^ ","^2D",54,"^2E",3635]],"^3V",[["^ ","^2D",7,"^2E",3635,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^4Y",[["^ ","^2D",76,"^2E",3635,"^O","ks"]]],"~i1942",["^ ","~i9",[["^ ","^2D",0,"^2E",3637]],"^2I",[["^ ","^2D",7,"^2E",3637,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^3K",[["^ ","^2D",54,"^2E",3637,"^O","props"]],"^3Y",[["^ ","^2D",60,"^2E",3637,"^O","ks"]]],"~i1944",["^ ","~i0",[["^ ","^2D",0,"^2E",3644],["^ ","^2D",36,"^2E",3647],["^ ","^2D",0,"^2E",3648]],"~i6",[["^ ","^2D",0,"^2E",3647,"^O","fulcro.client.primitives/children"]]],"~i1946",["^ ","~i3",[["^ ","^2D",80,"^2E",3647,"^O","component"]]],"~i1947",["^ ","~i2",[["^ ","^2D",0,"^2E",3648],["^ ","^2D",0,"^2E",3649]],"~i8",[["^ ","^2D",4,"^2E",3648,"^O","cs"]]],"~i1948",["^ ","^4X",[["^ ","^2D",9,"^2E",3648],["^ ","^2D",9,"^2E",3648]],"^3=",[["^ ","^2D",9,"^2E",3648,"^O","component"]]],"~i1949",["^ ","~i4",[["^ ","^2D",0,"^2E",3649],["^ ","^2D",0,"^2E",3652]],"~i8",[["^ ","^2D",3,"^2E",3649]],"^3S",[["^ ","^2D",5,"^2E",3649]],"^2G",[["^ ","^2D",5,"^2E",3649,"^O","cljs.core/coll?"]],"^35",[["^ ","^2D",27,"^2E",3649,"^O","cs"]],"^4Y",[["^ ","^2D",36,"^2E",3649]],"^48",[["^ ","^2D",36,"^2E",3649,"^O","cljs.core/array?"]],"^2K",[["^ ","^2D",59,"^2E",3649,"^O","cs"]],"^2Q",[["^ ","^2D",0,"^2E",3650,"^O","cs"]],"^5;",[["^ ","^2D",90,"^2E",3652,"^O","cs"]]],"~i1952",["^ ","~i3",[["^ ","^2D",0,"^2E",3655],["^ ","^2D",0,"^2E",3655],["^ ","^2D",40,"^2E",3658],["^ ","^2D",88,"^2E",3658,"^O","var_args"],["^ ","^2D",0,"^2E",3659],["^ ","^2D",0,"^2E",3659],["^ ","^2D",4,"^2E",3659,"^O","G__39593"],["^ ","^2D",15,"^2E",3659],["^ ","^2D",15,"^2E",3659],["^ ","^2D",0,"^2E",3660],["^ ","^2D",0,"^2E",3660],["^ ","^2D",8,"^2E",3660,"^O","G__39593"],["^ ","^2D",5,"^2E",3661],["^ ","^2D",0,"^2E",3662],["^ ","^2D",7,"^2E",3662,"^O","fulcro.client.primitives/force-update"],["^ ","^2D",75,"^2E",3662],["^ ","^2D",76,"^2E",3662],["^ ","^2D",86,"^2E",3662],["^ ","^2D",92,"^2E",3662],["^ ","^2D",93,"^2E",3662],["^ ","^2D",103,"^2E",3662],["^ ","^2D",5,"^2E",3665],["^ ","^2D",0,"^2E",3666],["^ ","^2D",7,"^2E",3666,"^O","fulcro.client.primitives/force-update"],["^ ","^2D",75,"^2E",3666],["^ ","^2D",76,"^2E",3666],["^ ","^2D",86,"^2E",3666],["^ ","^2D",0,"^2E",3670],["^ ","^2D",6,"^2E",3670],["^ ","^2D",11,"^2E",3670,"^O","js/Error"],["^ ","^2D",17,"^2E",3670],["^ ","^2D",18,"^2E",3670],["^ ","^2D",80,"^2E",3670],["^ ","^2D",80,"^2E",3670],["^ ","^2D",0,"^2E",3675],["^ ","^2D",0,"^2E",3675],["^ ","^2D",70,"^2E",3675],["^ ","^2D",0,"^2E",3676],["^ ","^2D",0,"^2E",3694],["^ ","^2D",0,"^2E",3694],["^ ","^2D",70,"^2E",3694],["^ ","^2D",0,"^2E",3695],["^ ","^2D",0,"^2E",3698],["^ ","^2D",0,"^2E",3698],["^ ","^2D",64,"^2E",3698],["^ ","^2D",0,"^2E",3700]],"~i9",[["^ ","^2D",0,"^2E",3658,"^O","fulcro.client.primitives/force-update"],["^ ","^2D",0,"^2E",3675,"^O","fulcro.client.primitives/force-update"],["^ ","^2D",0,"^2E",3694,"^O","fulcro.client.primitives/force-update"],["^ ","^2D",0,"^2E",3698,"^O","fulcro.client.primitives/force-update"]]],"~i1954",["^ ","~i7",[["^ ","^2D",81,"^2E",3675,"^O","c"]],"~i9",[["^ ","^2D",83,"^2E",3675,"^O","cb"]]],"~i1955",["^ ","~i6",[["^ ","^2D",0,"^2E",3676],["^ ","^2D",4,"^2E",3676],["^ ","^2D",16,"^2E",3677],["^ ","^2D",24,"^2E",3677,"^O","e39594"],["^ ","^2D",0,"^2E",3678]]],"~i1956",["^ ","~i8",[["^ ","^2D",4,"^2E",3676]],"^2P",[["^ ","^2D",11,"^2E",3676,"^O","c"]],"^3=",[["^ ","^2D",25,"^2E",3676,"^O","cb"]]],"~i1957",["^ ","^3=",[["^ ","^2D",20,"^2E",3677,"^O","e"]]],"~i1958",["^ ","^2I",[["^ ","^2D",0,"^2E",3678],["^ ","^2D",4,"^2E",3678],["^ ","^2D",4,"^2E",3678],["^ ","^2D",4,"^2E",3678,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",3678],["^ ","^2D",104,"^2E",3678],["^ ","^2D",158,"^2E",3678],["^ ","^2D",185,"^2E",3678],["^ ","^2D",237,"^2E",3678],["^ ","^2D",250,"^2E",3678],["^ ","^2D",355,"^2E",3678],["^ ","^2D",369,"^2E",3678],["^ ","^2D",16,"^2E",3679],["^ ","^2D",19,"^2E",3679],["^ ","^2D",20,"^2E",3679,"^O","e39595"],["^ ","^2D",38,"^2E",3679,"^O","js/Error"],["^ ","^2D",0,"^2E",3680],["^ ","^2D",4,"^2E",3680,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",3680,"^O","e39595"],["^ ","^2D",0,"^2E",3681],["^ ","^2D",0,"^2E",3681],["^ ","^2D",0,"^2E",3681,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",3681],["^ ","^2D",100,"^2E",3681],["^ ","^2D",154,"^2E",3681],["^ ","^2D",181,"^2E",3681],["^ ","^2D",233,"^2E",3681],["^ ","^2D",246,"^2E",3681],["^ ","^2D",351,"^2E",3681],["^ ","^2D",404,"^2E",3681,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",3683],["^ ","^2D",0,"^2E",3683],["^ ","^2D",6,"^2E",3683,"^O","e39595"]],"^48",[["^ ","^2D",367,"^2E",3678,"^O","c"]]],"~i1959",["^ ","^2I",[["^ ","^2D",0,"^2E",3687],["^ ","^2D",0,"^2E",3688],["^ ","^2D",0,"^2E",3690]],"^37",[["^ ","^2D",20,"^2E",3687,"^O","goog/DEBUG"]]],"~i1960",["^ ","^3S",[["^ ","^2D",0,"^2E",3688]],"^2G",[["^ ","^2D",7,"^2E",3688,"^O","js/console.error"]],"^2X",[["^ ","^2D",21,"^2E",3688,"^O","e"]]],"~i1961",["^ ","~i7",[["^ ","^2D",81,"^2E",3694,"^O","c"]]],"~i1962",["^ ","~i6",[["^ ","^2D",0,"^2E",3695],["^ ","^2D",77,"^2E",3695]],"~i7",[["^ ","^2D",7,"^2E",3695,"^O","fulcro.client.primitives.force_update.cljs$core$IFn$_invoke$arity$2"]],"^4X",[["^ ","^2D",75,"^2E",3695,"^O","c"]]],"~i1964",["^ ","~i0",[["^ ","^2D",0,"^2E",3700],["^ ","^2D",52,"^2E",3704],["^ ","^2D",0,"^2E",3705]],"~i6",[["^ ","^2D",0,"^2E",3704,"^O","fulcro.client.primitives/dedup-components-by-path"]]],"~i1967",["^ ","~i3",[["^ ","^2D",112,"^2E",3704,"^O","components"]]],"~i1968",["^ ","~i2",[["^ ","^2D",0,"^2E",3705],["^ ","^2D",15,"^2E",3705],["^ ","^2D",26,"^2E",3705,"^O","p1__39601#"],["^ ","^2D",0,"^2E",3706],["^ ","^2D",0,"^2E",3716]],"~i8",[["^ ","^2D",4,"^2E",3705,"^O","get-path"]],"^2P",[["^ ","^2D",0,"^2E",3706],["^ ","^2D",4,"^2E",3706,"^O","G__39604"],["^ ","^2D",15,"^2E",3706,"^O","p1__39601#"],["^ ","^2D",4,"^2E",3707,"^O","G__39604"],["^ ","^2D",19,"^2E",3707],["^ ","^2D",21,"^2E",3707],["^ ","^2D",22,"^2E",3707,"^O","G__39604"],["^ ","^2D",34,"^2E",3707],["^ ","^2D",41,"^2E",3707],["^ ","^2D",46,"^2E",3707],["^ ","^2D",77,"^2E",3707,"^O","G__39604"],["^ ","^2D",4,"^2E",3708,"^O","G__39604"],["^ ","^2D",19,"^2E",3708],["^ ","^2D",21,"^2E",3708],["^ ","^2D",22,"^2E",3708,"^O","G__39604"],["^ ","^2D",38,"^2E",3708],["^ ","^2D",45,"^2E",3708],["^ ","^2D",50,"^2E",3708],["^ ","^2D",65,"^2E",3708,"^O","G__39604"],["^ ","^2D",0,"^2E",3709],["^ ","^2D",0,"^2E",3709],["^ ","^2D",3,"^2E",3709],["^ ","^2D",4,"^2E",3709,"^O","G__39604"],["^ ","^2D",20,"^2E",3709],["^ ","^2D",0,"^2E",3710],["^ ","^2D",0,"^2E",3712],["^ ","^2D",7,"^2E",3712],["^ ","^2D",149,"^2E",3712,"^O","G__39604"]],"^4Y",[["^ ","^2D",46,"^2E",3707,"^O","fulcro.client.primitives/props"]],"^2H",[["^ ","^2D",50,"^2E",3708,"^O","cljs.core/meta"]]],"~i1969",["^ ","~i8",[["^ ","^2D",4,"^2E",3715,"^O","sorted-comps"]],"^3D",[["^ ","^2D",19,"^2E",3715]],"^2P",[["^ ","^2D",19,"^2E",3715,"^O","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2"]],"^2X",[["^ ","^2D",67,"^2E",3715,"^O","get-path"]],"^3W",[["^ ","^2D",76,"^2E",3715,"^O","components"]]],"~i1970",["^ ","~i4",[["^ ","^2D",0,"^2E",3716],["^ ","^2D",1,"^2E",3739]],"~i5",[["^ ","^2D",7,"^2E",3716,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^3S",[["^ ","^2D",54,"^2E",3716],["^ ","^2D",0,"^2E",3718]],"^3K",[["^ ","^2D",18,"^2E",3717,"^O","acc"]],"^3D",[["^ ","^2D",22,"^2E",3717,"^O","c"]]],"~i1971",["^ ","^44",[["^ ","^2D",0,"^2E",3718],["^ ","^2D",0,"^2E",3722]],"^4X",[["^ ","^2D",4,"^2E",3718,"^O","last-component"]],"^3E",[["^ ","^2D",21,"^2E",3718]],"^38",[["^ ","^2D",21,"^2E",3718,"^O","cljs.core/last"]],"^2L",[["^ ","^2D",36,"^2E",3718,"^O","acc"]]],"~i1972",["^ ","^4X",[["^ ","^2D",4,"^2E",3719,"^O","prev-path"]],"^3E",[["^ ","^2D",16,"^2E",3719]],"^38",[["^ ","^2D",16,"^2E",3719,"^O","get-path"]],"^4>",[["^ ","^2D",25,"^2E",3719,"^O","last-component"]]],"~i1973",["^ ","^4X",[["^ ","^2D",4,"^2E",3720,"^O","path"]],"^3E",[["^ ","^2D",11,"^2E",3720]],"^38",[["^ ","^2D",11,"^2E",3720,"^O","get-path"]],"^4>",[["^ ","^2D",20,"^2E",3720,"^O","c"]]],"~i1974",["^ ","^4X",[["^ ","^2D",4,"^2E",3721,"^O","path-prefix"]],"^3E",[["^ ","^2D",18,"^2E",3721]],"^38",[["^ ","^2D",18,"^2E",3721,"^O","cljs.core.take.cljs$core$IFn$_invoke$arity$2"]],"^2L",[["^ ","^2D",63,"^2E",3721]],"^3A",[["^ ","^2D",63,"^2E",3721,"^O","cljs.core/count"]],"^2R",[["^ ","^2D",79,"^2E",3721,"^O","prev-path"]],"^4@",[["^ ","^2D",90,"^2E",3721,"^O","path"]]],"~i1975",["^ ","^37",[["^ ","^2D",0,"^2E",3722]],"^4X",[["^ ","^2D",20,"^2E",3722],["^ ","^2D",37,"^2E",3722,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",3723],["^ ","^2D",0,"^2E",3723],["^ ","^2D",3,"^2E",3723,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",3724,"^O","or__3949__auto__"]],"^3=",[["^ ","^2D",56,"^2E",3722]],"^3V",[["^ ","^2D",56,"^2E",3722,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3L",[["^ ","^2D",101,"^2E",3722,"^O","last-component"]],"^3A",[["^ ","^2D",116,"^2E",3722,"^O","c"]],"^4>",[["^ ","^2D",0,"^2E",3726],["^ ","^2D",4,"^2E",3726,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",3727],["^ ","^2D",0,"^2E",3727],["^ ","^2D",20,"^2E",3727,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",3730,"^O","and__3938__auto__"]],"^5;",[["^ ","^2D",24,"^2E",3726,"^O","prev-path"]],"^7U",[["^ ","^2D",0,"^2E",3728]],"^4B",[["^ ","^2D",7,"^2E",3728,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^5[",[["^ ","^2D",52,"^2E",3728,"^O","prev-path"]],"^31",[["^ ","^2D",62,"^2E",3728,"^O","path-prefix"]]],"~i1976",["^ ","^2O",[["^ ","^2D",0,"^2E",3734,"^O","acc"]]],"~i1977",["^ ","^2O",[["^ ","^2D",0,"^2E",3736]],"^35",[["^ ","^2D",7,"^2E",3736,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^3=",[["^ ","^2D",52,"^2E",3736,"^O","acc"]],"^4I",[["^ ","^2D",56,"^2E",3736,"^O","c"]]],"~i1978",["^ ","~i9",[["^ ","^2D",34,"^2E",3739,"^O","sorted-comps"]]],"~i1980",["^ ","~i0",[["^ ","^2D",0,"^2E",3741],["^ ","^2D",0,"^2E",3741]]],"~i1982",["^ ","~i0",[["^ ","^2D",0,"^2E",3741],["^ ","^2D",42,"^2E",3746],["^ ","^2D",0,"^2E",3747]],"~i7",[["^ ","^2D",0,"^2E",3746,"^O","fulcro.client.primitives/optimal-render"]]],"~i1986",["^ ","~i3",[["^ ","^2D",92,"^2E",3746,"^O","reconciler"]],"^44",[["^ ","^2D",103,"^2E",3746,"^O","refresh-queue"]],"^4I",[["^ ","^2D",117,"^2E",3746,"^O","render-root"]]],"~i1987",["^ ","~i2",[["^ ","^2D",0,"^2E",3747],["^ ","^2D",4,"^2E",3748,"^O","map__39612"],["^ ","^2D",17,"^2E",3748],["^ ","^2D",17,"^2E",3748,"^O","cljs.core/deref"],["^ ","^2D",4,"^2E",3749,"^O","map__39612"],["^ ","^2D",21,"^2E",3749],["^ ","^2D",23,"^2E",3749],["^ ","^2D",25,"^2E",3749],["^ ","^2D",27,"^2E",3749],["^ ","^2D",28,"^2E",3749,"^O","map__39612"],["^ ","^2D",42,"^2E",3749],["^ ","^2D",50,"^2E",3749],["^ ","^2D",52,"^2E",3749],["^ ","^2D",54,"^2E",3749],["^ ","^2D",55,"^2E",3749],["^ ","^2D",55,"^2E",3749,"^O","map__39612"],["^ ","^2D",104,"^2E",3749],["^ ","^2D",115,"^2E",3749],["^ ","^2D",116,"^2E",3749,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",3749],["^ ","^2D",148,"^2E",3749,"^O","map__39612"],["^ ","^2D",179,"^2E",3749],["^ ","^2D",184,"^2E",3749],["^ ","^2D",191,"^2E",3749],["^ ","^2D",199,"^2E",3749],["^ ","^2D",199,"^2E",3749,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",3749,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",3749,"^O","map__39612"],["^ ","^2D",276,"^2E",3749,"^O","map__39612"],["^ ","^2D",11,"^2E",3750],["^ ","^2D",11,"^2E",3750,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",55,"^2E",3750,"^O","map__39612"],["^ ","^2D",70,"^2E",3750],["^ ","^2D",19,"^2E",3751],["^ ","^2D",19,"^2E",3751,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",63,"^2E",3751,"^O","map__39612"],["^ ","^2D",78,"^2E",3751],["^ ","^2D",0,"^2E",3812]],"~i8",[["^ ","^2D",4,"^2E",3747,"^O","reconciler-state"]],"^30",[["^ ","^2D",23,"^2E",3747],["^ ","^2D",23,"^2E",3747]],"^3W",[["^ ","^2D",109,"^2E",3747,"^O","reconciler"]]],"~i1988",["^ ","^37",[["^ ","^2D",4,"^2E",3750,"^O","root"]],"^3D",[["^ ","^2D",4,"^2E",3751,"^O","render-props"]],"^2F",[["^ ","^2D",33,"^2E",3748,"^O","reconciler-state"]]],"~i1989",["^ ","~i8",[["^ ","^2D",4,"^2E",3752,"^O","root"]],"^30",[["^ ","^2D",15,"^2E",3752]],"^3E",[["^ ","^2D",17,"^2E",3752]],"^38",[["^ ","^2D",17,"^2E",3752,"^O","fulcro.client.primitives/component?"]],"^5C",[["^ ","^2D",59,"^2E",3752,"^O","root"]],"^2S",[["^ ","^2D",66,"^2E",3752,"^O","root"]],"^4J",[["^ ","^2D",71,"^2E",3752]],"^4@",[["^ ","^2D",72,"^2E",3752,"^O","fulcro.client.primitives/class->any"],["^ ","^2D",143,"^2E",3752,"^O","fulcro.client.primitives/class->any"],["^ ","^2D",231,"^2E",3752,"^O","fulcro.client.primitives/class->any"]],"^>B",[["^ ","^2D",212,"^2E",3752,"^O","reconciler"],["^ ","^2D",280,"^2E",3752,"^O","reconciler"]],"^39",[["^ ","^2D",223,"^2E",3752,"^O","root"],["^ ","^2D",291,"^2E",3752,"^O","root"]]],"~i1990",["^ ","~i8",[["^ ","^2D",4,"^2E",3753,"^O","config"]],"^30",[["^ ","^2D",13,"^2E",3753],["^ ","^2D",13,"^2E",3753]],"^2K",[["^ ","^2D",99,"^2E",3753,"^O","reconciler"]]],"~i1991",["^ ","~i8",[["^ ","^2D",4,"^2E",3754,"^O","queued-components"]],"^30",[["^ ","^2D",24,"^2E",3754],["^ ","^2D",2,"^2E",3758],["^ ","^2D",18,"^2E",3759,"^O","p1__39609#"],["^ ","^2D",35,"^2E",3759,"^O","p2__39611#"],["^ ","^2D",0,"^2E",3760],["^ ","^2D",1,"^2E",3762]],"^4Y",[["^ ","^2D",24,"^2E",3754,"^O","cljs.core.transduce.cljs$core$IFn$_invoke$arity$4"]]],"~i1992",["^ ","^48",[["^ ","^2D",74,"^2E",3754],["^ ","^2D",118,"^2E",3754],["^ ","^2D",18,"^2E",3755,"^O","p1__39608#"],["^ ","^2D",0,"^2E",3756]],"^2C",[["^ ","^2D",74,"^2E",3754,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^3W",[["^ ","^2D",0,"^2E",3756],["^ ","^2D",153,"^2E",3756,"^O","p1__39608#"]],"^2K",[["^ ","^2D",7,"^2E",3756,"^O","fulcro.client.impl.protocols/key->components"]],"^4J",[["^ ","^2D",55,"^2E",3756],["^ ","^2D",55,"^2E",3756]],"^40",[["^ ","^2D",145,"^2E",3756,"^O","config"]]],"~i1993",["^ ","^2C",[["^ ","^2D",0,"^2E",3760],["^ ","^2D",52,"^2E",3760,"^O","p1__39609#"],["^ ","^2D",69,"^2E",3760,"^O","p2__39611#"]],"^3E",[["^ ","^2D",7,"^2E",3760,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^3Z",[["^ ","^2D",35,"^2E",3762,"^O","refresh-queue"]]],"~i1994",["^ ","~i8",[["^ ","^2D",4,"^2E",3763,"^O","mounted-components"]],"^30",[["^ ","^2D",25,"^2E",3763]],"^4Y",[["^ ","^2D",25,"^2E",3763,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^3W",[["^ ","^2D",72,"^2E",3763,"^O","fulcro.client.primitives/mounted?"]],"^2R",[["^ ","^2D",112,"^2E",3763,"^O","queued-components"]]],"~i1995",["^ ","~i8",[["^ ","^2D",4,"^2E",3764,"^O","data-path"]],"^30",[["^ ","^2D",16,"^2E",3764],["^ ","^2D",0,"^2E",3766]],"^38",[["^ ","^2D",18,"^2E",3765,"^O","c"]],"^3W",[["^ ","^2D",0,"^2E",3766],["^ ","^2D",4,"^2E",3766,"^O","G__39614"],["^ ","^2D",4,"^2E",3767,"^O","G__39614"],["^ ","^2D",19,"^2E",3767],["^ ","^2D",21,"^2E",3767],["^ ","^2D",22,"^2E",3767,"^O","G__39614"],["^ ","^2D",34,"^2E",3767],["^ ","^2D",41,"^2E",3767],["^ ","^2D",46,"^2E",3767],["^ ","^2D",77,"^2E",3767,"^O","G__39614"],["^ ","^2D",4,"^2E",3768,"^O","G__39614"],["^ ","^2D",19,"^2E",3768],["^ ","^2D",21,"^2E",3768],["^ ","^2D",22,"^2E",3768,"^O","G__39614"],["^ ","^2D",38,"^2E",3768],["^ ","^2D",45,"^2E",3768],["^ ","^2D",50,"^2E",3768],["^ ","^2D",65,"^2E",3768,"^O","G__39614"],["^ ","^2D",0,"^2E",3769],["^ ","^2D",0,"^2E",3769],["^ ","^2D",3,"^2E",3769],["^ ","^2D",4,"^2E",3769,"^O","G__39614"],["^ ","^2D",20,"^2E",3769],["^ ","^2D",0,"^2E",3770],["^ ","^2D",0,"^2E",3772],["^ ","^2D",7,"^2E",3772],["^ ","^2D",149,"^2E",3772,"^O","G__39614"]],"^5C",[["^ ","^2D",15,"^2E",3766,"^O","c"]],"^3F",[["^ ","^2D",46,"^2E",3767,"^O","fulcro.client.primitives/props"]],"^2U",[["^ ","^2D",50,"^2E",3768,"^O","cljs.core/meta"]]],"~i1996",["^ ","~i8",[["^ ","^2D",4,"^2E",3776,"^O","parent-with-path"]],"^30",[["^ ","^2D",23,"^2E",3776],["^ ","^2D",0,"^2E",3778]],"^2K",[["^ ","^2D",63,"^2E",3777,"^O","c"]]],"~i1997",["^ ","^48",[["^ ","^2D",0,"^2E",3778],["^ ","^2D",0,"^2E",3780]],"^2K",[["^ ","^2D",4,"^2E",3778,"^O","p"]],"^3A",[["^ ","^2D",8,"^2E",3778]],"^2M",[["^ ","^2D",8,"^2E",3778,"^O","fulcro.client.primitives/parent"]],"^5;",[["^ ","^2D",40,"^2E",3778,"^O","c"]]],"~i1998",["^ ","^3E",[["^ ","^2D",0,"^2E",3780],["^ ","^2D",0,"^2E",3789],["^ ","^2D",0,"^2E",3794]]],"~i1999",["^ ","^2F",[["^ ","^2D",20,"^2E",3780],["^ ","^2D",37,"^2E",3780,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",3781],["^ ","^2D",0,"^2E",3781],["^ ","^2D",20,"^2E",3781,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",3784,"^O","and__3938__auto__"]],"^3A",[["^ ","^2D",57,"^2E",3780,"^O","p"]],"^2N",[["^ ","^2D",0,"^2E",3782]],"^4>",[["^ ","^2D",7,"^2E",3782,"^O","data-path"]],"^2U",[["^ ","^2D",17,"^2E",3782,"^O","p"]],"^4@",[["^ ","^2D",0,"^2E",3787,"^O","p"]]],"~i2000",["^ ","^2F",[["^ ","^2D",20,"^2E",3789,"^O","p"]],"^3W",[["^ ","^2D",0,"^2E",3790]],"^2Q",[["^ ","^2D",15,"^2E",3790]],"^5C",[["^ ","^2D",15,"^2E",3790,"^O","fulcro.client.primitives/parent"]],"^4E",[["^ ","^2D",47,"^2E",3790,"^O","p"]]],"~i2001",["^ ","^2M",[["^ ","^2D",0,"^2E",3794,"^O","root"]]],"~i2002",["^ ","~i8",[["^ ","^2D",4,"^2E",3802,"^O","refreshable-components"]],"^30",[["^ ","^2D",29,"^2E",3802],["^ ","^2D",1,"^2E",3810]],"^4Y",[["^ ","^2D",29,"^2E",3802,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]]],"~i2003",["^ ","^48",[["^ ","^2D",76,"^2E",3802],["^ ","^2D",0,"^2E",3804]],"^2H",[["^ ","^2D",18,"^2E",3803,"^O","result"]],"^4>",[["^ ","^2D",25,"^2E",3803,"^O","c"]]],"~i2004",["^ ","^3E",[["^ ","^2D",0,"^2E",3804]],"^3W",[["^ ","^2D",20,"^2E",3804]],"^2K",[["^ ","^2D",20,"^2E",3804,"^O","data-path"]],"^5;",[["^ ","^2D",30,"^2E",3804,"^O","c"]]],"~i2005",["^ ","^2F",[["^ ","^2D",0,"^2E",3805]],"^2H",[["^ ","^2D",7,"^2E",3805,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^2M",[["^ ","^2D",52,"^2E",3805,"^O","result"]],"^5;",[["^ ","^2D",59,"^2E",3805,"^O","c"]]],"~i2006",["^ ","^2F",[["^ ","^2D",0,"^2E",3807]],"^2H",[["^ ","^2D",7,"^2E",3807,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^2M",[["^ ","^2D",52,"^2E",3807,"^O","result"]],"^5;",[["^ ","^2D",59,"^2E",3807]],"^3Z",[["^ ","^2D",59,"^2E",3807,"^O","parent-with-path"]],"^40",[["^ ","^2D",76,"^2E",3807,"^O","c"]]],"~i2008",["^ ","^48",[["^ ","^2D",34,"^2E",3810,"^O","mounted-components"]]],"~i2009",["^ ","~i8",[["^ ","^2D",4,"^2E",3811,"^O","env"]],"^30",[["^ ","^2D",10,"^2E",3811],["^ ","^2D",96,"^2E",3811]],"^4Y",[["^ ","^2D",10,"^2E",3811,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2H",[["^ ","^2D",56,"^2E",3811]],"^3W",[["^ ","^2D",56,"^2E",3811,"^O","fulcro.client.primitives/to-env"]],"^2Q",[["^ ","^2D",88,"^2E",3811,"^O","config"]],"^2Z",[["^ ","^2D",162,"^2E",3811,"^O","reconciler"]]],"~i2011",["^ ","~i7",[["^ ","^2D",0,"^2E",3812],["^ ","^2D",0,"^2E",3813],["^ ","^2D",0,"^2E",3862]],"^2G",[["^ ","^2D",20,"^2E",3812,"^O","root"]]],"~i2012",["^ ","~i9",[["^ ","^2D",0,"^2E",3813],["^ ","^2D",0,"^2E",3842]],"^2J",[["^ ","^2D",4,"^2E",3813,"^O","old-tree"]],"^4I",[["^ ","^2D",15,"^2E",3813]],"^3H",[["^ ","^2D",15,"^2E",3813,"^O","fulcro.client.primitives/props"]],"^3E",[["^ ","^2D",46,"^2E",3813,"^O","root"]]],"~i2013",["^ ","^2J",[["^ ","^2D",4,"^2E",3814,"^O","components"]],"^4I",[["^ ","^2D",17,"^2E",3814]],"^3H",[["^ ","^2D",17,"^2E",3814,"^O","fulcro.client.primitives/dedup-components-by-path"]],"^4E",[["^ ","^2D",67,"^2E",3814,"^O","refreshable-components"]]],"~i2014",["^ ","^2J",[["^ ","^2D",4,"^2E",3815,"^O","updated-tree"]],"^4I",[["^ ","^2D",19,"^2E",3815]],"^3H",[["^ ","^2D",19,"^2E",3815,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]]],"~i2015",["^ ","^2X",[["^ ","^2D",66,"^2E",3815],["^ ","^2D",0,"^2E",3817]],"^3E",[["^ ","^2D",18,"^2E",3816,"^O","tree"]],"^2K",[["^ ","^2D",23,"^2E",3816,"^O","c"]]],"~i2016",["^ ","^4Y",[["^ ","^2D",0,"^2E",3817],["^ ","^2D",0,"^2E",3823]],"^2H",[["^ ","^2D",4,"^2E",3817,"^O","component-props"]],"^4E",[["^ ","^2D",22,"^2E",3817]],"^2U",[["^ ","^2D",22,"^2E",3817,"^O","fulcro.client.primitives/props"]],"^4B",[["^ ","^2D",53,"^2E",3817,"^O","c"]]],"~i2017",["^ ","^2H",[["^ ","^2D",4,"^2E",3818,"^O","computed"]],"^4E",[["^ ","^2D",15,"^2E",3818]],"^2U",[["^ ","^2D",15,"^2E",3818,"^O","fulcro.client.primitives.get_computed.cljs$core$IFn$_invoke$arity$1"]],"^40",[["^ ","^2D",83,"^2E",3818,"^O","component-props"]]],"~i2018",["^ ","^2H",[["^ ","^2D",4,"^2E",3819,"^O","target-path"]],"^4E",[["^ ","^2D",18,"^2E",3819]],"^2U",[["^ ","^2D",18,"^2E",3819,"^O","data-path"]],"^61",[["^ ","^2D",28,"^2E",3819,"^O","c"]]],"~i2019",["^ ","^2H",[["^ ","^2D",4,"^2E",3820,"^O","next-raw-props"]],"^4E",[["^ ","^2D",21,"^2E",3820]],"^2U",[["^ ","^2D",21,"^2E",3820,"^O","fulcro.client.primitives/fulcro-ui->props"]],"^>?",[["^ ","^2D",66,"^2E",3820,"^O","env"]],"^33",[["^ ","^2D",70,"^2E",3820,"^O","c"]]],"~i2020",["^ ","^2H",[["^ ","^2D",4,"^2E",3821,"^O","force-root?"]],"^4E",[["^ ","^2D",24,"^2E",3821]],"^4J",[["^ ","^2D",26,"^2E",3821]],"^4@",[["^ ","^2D",26,"^2E",3821,"^O","cljs.core/not"]],"^5[",[["^ ","^2D",40,"^2E",3821,"^O","target-path"]],"^33",[["^ ","^2D",58,"^2E",3821],["^ ","^2D",103,"^2E",3821]],"^7F",[["^ ","^2D",58,"^2E",3821,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^3B",[["^ ","^2D",211,"^2E",3821,"^O","next-raw-props"]]],"~i2021",["^ ","^2H",[["^ ","^2D",4,"^2E",3822,"^O","next-props"]],"^4E",[["^ ","^2D",17,"^2E",3822],["^ ","^2D",38,"^2E",3822],["^ ","^2D",43,"^2E",3822]],"^2Y",[["^ ","^2D",19,"^2E",3822,"^O","force-root?"]],"^33",[["^ ","^2D",43,"^2E",3822]],"^7F",[["^ ","^2D",43,"^2E",3822,"^O","fulcro.client.primitives/computed"]],"^46",[["^ ","^2D",77,"^2E",3822,"^O","next-raw-props"]],"^4K",[["^ ","^2D",92,"^2E",3822,"^O","computed"]]],"~i2022",["^ ","^2C",[["^ ","^2D",0,"^2E",3823]],"^2H",[["^ ","^2D",3,"^2E",3823,"^O","force-root?"]]],"~i2023",["^ ","^38",[["^ ","^2D",0,"^2E",3824]]],"~i2024",["^ ","^2H",[["^ ","^2D",0,"^2E",3824],["^ ","^2D",0,"^2E",3825],["^ ","^2D",0,"^2E",3834]],"^2N",[["^ ","^2D",3,"^2E",3824]],"^4>",[["^ ","^2D",3,"^2E",3824,"^O","cljs.core/not"]],"^3F",[["^ ","^2D",17,"^2E",3824,"^O","target-path"]]],"~i2025",["^ ","^2K",[["^ ","^2D",0,"^2E",3825],["^ ","^2D",4,"^2E",3825],["^ ","^2D",4,"^2E",3825],["^ ","^2D",4,"^2E",3825,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",3825],["^ ","^2D",104,"^2E",3825],["^ ","^2D",158,"^2E",3825],["^ ","^2D",185,"^2E",3825],["^ ","^2D",237,"^2E",3825],["^ ","^2D",250,"^2E",3825],["^ ","^2D",353,"^2E",3825],["^ ","^2D",16,"^2E",3826],["^ ","^2D",19,"^2E",3826],["^ ","^2D",20,"^2E",3826,"^O","e39618"],["^ ","^2D",38,"^2E",3826,"^O","js/Error"],["^ ","^2D",0,"^2E",3827],["^ ","^2D",4,"^2E",3827,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",3827,"^O","e39618"],["^ ","^2D",0,"^2E",3828],["^ ","^2D",0,"^2E",3828],["^ ","^2D",0,"^2E",3828,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",3828],["^ ","^2D",100,"^2E",3828],["^ ","^2D",154,"^2E",3828],["^ ","^2D",181,"^2E",3828],["^ ","^2D",233,"^2E",3828],["^ ","^2D",246,"^2E",3828],["^ ","^2D",349,"^2E",3828],["^ ","^2D",402,"^2E",3828,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",3830],["^ ","^2D",0,"^2E",3830],["^ ","^2D",6,"^2E",3830,"^O","e39618"]],"^4Q",[["^ ","^2D",439,"^2E",3825,"^O","c"]]],"~i2026",["^ ","^2H",[["^ ","^2D",0,"^2E",3836],["^ ","^2D",25,"^2E",3836]],"^3W",[["^ ","^2D",7,"^2E",3836,"^O","cljs.core/reduced"]]],"~i2027",["^ ","^38",[["^ ","^2D",0,"^2E",3838],["^ ","^2D",0,"^2E",3838]]],"~i2028",["^ ","^2H",[["^ ","^2D",0,"^2E",3838]],"^3W",[["^ ","^2D",7,"^2E",3838,"^O","cljs.core/assoc-in"]],"^2R",[["^ ","^2D",26,"^2E",3838,"^O","tree"]],"^2S",[["^ ","^2D",31,"^2E",3838,"^O","target-path"]],"^61",[["^ ","^2D",43,"^2E",3838,"^O","next-props"]]],"~i2029",["^ ","^2X",[["^ ","^2D",1,"^2E",3841,"^O","old-tree"]]],"~i2030",["^ ","^2X",[["^ ","^2D",10,"^2E",3841,"^O","components"]]],"~i2031",["^ ","^2T",[["^ ","^2D",0,"^2E",3842]],"^2J",[["^ ","^2D",20,"^2E",3842,"^O","updated-tree"]]],"~i2032",["^ ","^2G",[["^ ","^2D",0,"^2E",3843]],"^44",[["^ ","^2D",8,"^2E",3843,"^O","render-props"],["^ ","^2D",53,"^2E",3843,"^O","render-props"],["^ ","^2D",112,"^2E",3843,"^O","render-props"]],"^3L",[["^ ","^2D",96,"^2E",3843,"^O","updated-tree"],["^ ","^2D",135,"^2E",3843,"^O","updated-tree"]]],"~i2033",["^ ","^2G",[["^ ","^2D",0,"^2E",3845],["^ ","^2D",0,"^2E",3848]],"^35",[["^ ","^2D",4,"^2E",3845,"^O","start"]],"^3V",[["^ ","^2D",12,"^2E",3845]],"^3>",[["^ ","^2D",12,"^2E",3845,"^O","cljs.core/inst-ms"]],"^2C",[["^ ","^2D",30,"^2E",3845],["^ ","^2D",35,"^2E",3845,"^O","js/Date"]]],"~i2034",["^ ","^35",[["^ ","^2D",4,"^2E",3846,"^O","_"]],"^3V",[["^ ","^2D",8,"^2E",3846]],"^3>",[["^ ","^2D",9,"^2E",3846,"^O","render-root"],["^ ","^2D",53,"^2E",3846,"^O","render-root"],["^ ","^2D",99,"^2E",3846,"^O","render-root"]]],"~i2035",["^ ","^35",[["^ ","^2D",4,"^2E",3847,"^O","end"]],"^3V",[["^ ","^2D",10,"^2E",3847]],"^3>",[["^ ","^2D",10,"^2E",3847,"^O","cljs.core/inst-ms"]],"^2C",[["^ ","^2D",28,"^2E",3847],["^ ","^2D",33,"^2E",3847,"^O","js/Date"]]],"~i2036",["^ ","^2J",[["^ ","^2D",0,"^2E",3848],["^ ","^2D",0,"^2E",3858]],"^35",[["^ ","^2D",3,"^2E",3848],["^ ","^2D",20,"^2E",3848]],"^2P",[["^ ","^2D",4,"^2E",3848]],"^3V",[["^ ","^2D",5,"^2E",3848,"^O","end"]],"^3H",[["^ ","^2D",11,"^2E",3848,"^O","start"]],"^2K",[["^ ","^2D",0,"^2E",3849],["^ ","^2D",4,"^2E",3849],["^ ","^2D",4,"^2E",3849],["^ ","^2D",11,"^2E",3849,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",68,"^2E",3849],["^ ","^2D",111,"^2E",3849],["^ ","^2D",165,"^2E",3849],["^ ","^2D",192,"^2E",3849],["^ ","^2D",244,"^2E",3849],["^ ","^2D",257,"^2E",3849],["^ ","^2D",360,"^2E",3849],["^ ","^2D",394,"^2E",3849],["^ ","^2D",16,"^2E",3850],["^ ","^2D",19,"^2E",3850],["^ ","^2D",20,"^2E",3850,"^O","e39619"],["^ ","^2D",38,"^2E",3850,"^O","js/Error"],["^ ","^2D",0,"^2E",3851],["^ ","^2D",4,"^2E",3851,"^O","e__31518__auto__"],["^ ","^2D",23,"^2E",3851,"^O","e39619"],["^ ","^2D",0,"^2E",3852],["^ ","^2D",0,"^2E",3852],["^ ","^2D",7,"^2E",3852,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",64,"^2E",3852],["^ ","^2D",107,"^2E",3852],["^ ","^2D",161,"^2E",3852],["^ ","^2D",188,"^2E",3852],["^ ","^2D",240,"^2E",3852],["^ ","^2D",253,"^2E",3852],["^ ","^2D",356,"^2E",3852],["^ ","^2D",409,"^2E",3852,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",3854],["^ ","^2D",0,"^2E",3854],["^ ","^2D",6,"^2E",3854,"^O","e39619"]],"^>B",[["^ ","^2D",380,"^2E",3849]],"^31",[["^ ","^2D",381,"^2E",3849,"^O","end"]],"^7F",[["^ ","^2D",387,"^2E",3849,"^O","start"]]],"~i2038",["^ ","~i0",[["^ ","^2D",0,"^2E",3865],["^ ","^2D",0,"^2E",3865],["^ ","^2D",0,"^2E",3865],["^ ","^2D",0,"^2E",3865],["^ ","^2D",0,"^2E",3895],["^ ","^2D",0,"^2E",3895],["^ ","^2D",0,"^2E",3895],["^ ","^2D",0,"^2E",3895],["^ ","^2D",82,"^2E",3895],["^ ","^2D",93,"^2E",3895,"^O","this__4203__auto__"],["^ ","^2D",112,"^2E",3895,"^O","k__4204__auto__"],["^ ","^2D",0,"^2E",3897],["^ ","^2D",0,"^2E",3897],["^ ","^2D",4,"^2E",3897,"^O","this__4203__auto__"],["^ ","^2D",29,"^2E",3897],["^ ","^2D",0,"^2E",3898],["^ ","^2D",0,"^2E",3898],["^ ","^2D",7,"^2E",3898,"^O","cljs.core._lookup.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",55,"^2E",3898,"^O","this__4203__auto__"],["^ ","^2D",78,"^2E",3898,"^O","k__4204__auto__"],["^ ","^2D",94,"^2E",3898],["^ ","^2D",0,"^2E",3901],["^ ","^2D",0,"^2E",3901],["^ ","^2D",0,"^2E",3901],["^ ","^2D",82,"^2E",3901],["^ ","^2D",93,"^2E",3901,"^O","this__4205__auto__"],["^ ","^2D",112,"^2E",3901,"^O","k39636"],["^ ","^2D",119,"^2E",3901,"^O","else__4206__auto__"],["^ ","^2D",0,"^2E",3903],["^ ","^2D",0,"^2E",3903],["^ ","^2D",4,"^2E",3903,"^O","this__4205__auto__"],["^ ","^2D",29,"^2E",3903],["^ ","^2D",0,"^2E",3904],["^ ","^2D",0,"^2E",3904],["^ ","^2D",4,"^2E",3904,"^O","G__39643"],["^ ","^2D",15,"^2E",3904,"^O","k39636"],["^ ","^2D",4,"^2E",3905,"^O","G__39643"],["^ ","^2D",19,"^2E",3905],["^ ","^2D",21,"^2E",3905],["^ ","^2D",22,"^2E",3905,"^O","G__39643"],["^ ","^2D",42,"^2E",3905,"^O","cljs.core/Keyword"],["^ ","^2D",75,"^2E",3905],["^ ","^2D",0,"^2E",3906],["^ ","^2D",0,"^2E",3906],["^ ","^2D",8,"^2E",3906,"^O","G__39643"],["^ ","^2D",5,"^2E",3907],["^ ","^2D",0,"^2E",3908,"^O","config"],["^ ","^2D",5,"^2E",3911],["^ ","^2D",0,"^2E",3912,"^O","state"],["^ ","^2D",5,"^2E",3915],["^ ","^2D",0,"^2E",3916,"^O","history"],["^ ","^2D",0,"^2E",3920],["^ ","^2D",7,"^2E",3920,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",51,"^2E",3920,"^O","__extmap"],["^ ","^2D",67,"^2E",3920,"^O","k39636"],["^ ","^2D",74,"^2E",3920,"^O","else__4206__auto__"],["^ ","^2D",0,"^2E",3925],["^ ","^2D",0,"^2E",3925],["^ ","^2D",0,"^2E",3925],["^ ","^2D",90,"^2E",3925,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",0,"^2E",3927],["^ ","^2D",0,"^2E",3927],["^ ","^2D",0,"^2E",3927],["^ ","^2D",109,"^2E",3927],["^ ","^2D",0,"^2E",3929],["^ ","^2D",0,"^2E",3929],["^ ","^2D",16,"^2E",3929],["^ ","^2D",0,"^2E",3930],["^ ","^2D",0,"^2E",3933],["^ ","^2D",0,"^2E",3933],["^ ","^2D",0,"^2E",3933],["^ ","^2D",109,"^2E",3933],["^ ","^2D",0,"^2E",3935],["^ ","^2D",0,"^2E",3935],["^ ","^2D",12,"^2E",3935],["^ ","^2D",0,"^2E",3936],["^ ","^2D",0,"^2E",3943],["^ ","^2D",0,"^2E",3943],["^ ","^2D",0,"^2E",3943],["^ ","^2D",115,"^2E",3943],["^ ","^2D",0,"^2E",3945],["^ ","^2D",0,"^2E",3945],["^ ","^2D",12,"^2E",3945],["^ ","^2D",0,"^2E",3946],["^ ","^2D",0,"^2E",3949],["^ ","^2D",0,"^2E",3949],["^ ","^2D",0,"^2E",3949],["^ ","^2D",109,"^2E",3949],["^ ","^2D",0,"^2E",3951],["^ ","^2D",0,"^2E",3951],["^ ","^2D",12,"^2E",3951],["^ ","^2D",0,"^2E",3952],["^ ","^2D",0,"^2E",3955],["^ ","^2D",0,"^2E",3955],["^ ","^2D",0,"^2E",3955],["^ ","^2D",108,"^2E",3955],["^ ","^2D",0,"^2E",3957],["^ ","^2D",0,"^2E",3957],["^ ","^2D",16,"^2E",3957],["^ ","^2D",0,"^2E",3958],["^ ","^2D",0,"^2E",4011],["^ ","^2D",0,"^2E",4011],["^ ","^2D",0,"^2E",4011],["^ ","^2D",113,"^2E",4011],["^ ","^2D",0,"^2E",4013],["^ ","^2D",0,"^2E",4013],["^ ","^2D",16,"^2E",4013],["^ ","^2D",0,"^2E",4014],["^ ","^2D",0,"^2E",4017],["^ ","^2D",0,"^2E",4017],["^ ","^2D",0,"^2E",4017],["^ ","^2D",113,"^2E",4017],["^ ","^2D",0,"^2E",4019],["^ ","^2D",0,"^2E",4019],["^ ","^2D",16,"^2E",4019],["^ ","^2D",0,"^2E",4020],["^ ","^2D",0,"^2E",4069],["^ ","^2D",0,"^2E",4069],["^ ","^2D",0,"^2E",4069],["^ ","^2D",119,"^2E",4069],["^ ","^2D",0,"^2E",4071],["^ ","^2D",0,"^2E",4071],["^ ","^2D",12,"^2E",4071],["^ ","^2D",0,"^2E",4072],["^ ","^2D",0,"^2E",4081],["^ ","^2D",0,"^2E",4081],["^ ","^2D",0,"^2E",4081],["^ ","^2D",108,"^2E",4081],["^ ","^2D",0,"^2E",4083],["^ ","^2D",0,"^2E",4083],["^ ","^2D",12,"^2E",4083],["^ ","^2D",0,"^2E",4084],["^ ","^2D",0,"^2E",4087],["^ ","^2D",0,"^2E",4087],["^ ","^2D",0,"^2E",4087],["^ ","^2D",118,"^2E",4087],["^ ","^2D",0,"^2E",4089],["^ ","^2D",0,"^2E",4089],["^ ","^2D",12,"^2E",4089],["^ ","^2D",0,"^2E",4090],["^ ","^2D",0,"^2E",4099],["^ ","^2D",0,"^2E",4099],["^ ","^2D",0,"^2E",4099],["^ ","^2D",105,"^2E",4099],["^ ","^2D",0,"^2E",4101],["^ ","^2D",0,"^2E",4101],["^ ","^2D",12,"^2E",4101],["^ ","^2D",0,"^2E",4102],["^ ","^2D",0,"^2E",4105],["^ ","^2D",0,"^2E",4105],["^ ","^2D",0,"^2E",4105],["^ ","^2D",112,"^2E",4105],["^ ","^2D",0,"^2E",4107],["^ ","^2D",0,"^2E",4107],["^ ","^2D",16,"^2E",4107],["^ ","^2D",0,"^2E",4108],["^ ","^2D",0,"^2E",4253],["^ ","^2D",0,"^2E",4253],["^ ","^2D",0,"^2E",4253],["^ ","^2D",111,"^2E",4253],["^ ","^2D",0,"^2E",4255],["^ ","^2D",0,"^2E",4255],["^ ","^2D",16,"^2E",4255],["^ ","^2D",0,"^2E",4256],["^ ","^2D",0,"^2E",4266],["^ ","^2D",0,"^2E",4266],["^ ","^2D",0,"^2E",4266],["^ ","^2D",115,"^2E",4266],["^ ","^2D",0,"^2E",4268],["^ ","^2D",0,"^2E",4268],["^ ","^2D",12,"^2E",4268],["^ ","^2D",0,"^2E",4269],["^ ","^2D",0,"^2E",4278],["^ ","^2D",0,"^2E",4278],["^ ","^2D",0,"^2E",4278],["^ ","^2D",104,"^2E",4278],["^ ","^2D",0,"^2E",4280],["^ ","^2D",0,"^2E",4280],["^ ","^2D",12,"^2E",4280],["^ ","^2D",0,"^2E",4281],["^ ","^2D",0,"^2E",4284],["^ ","^2D",0,"^2E",4284],["^ ","^2D",0,"^2E",4284],["^ ","^2D",94,"^2E",4284],["^ ","^2D",105,"^2E",4284,"^O","this__4217__auto__"],["^ ","^2D",124,"^2E",4284,"^O","writer__4218__auto__"],["^ ","^2D",145,"^2E",4284,"^O","opts__4219__auto__"],["^ ","^2D",0,"^2E",4286],["^ ","^2D",0,"^2E",4286],["^ ","^2D",4,"^2E",4286,"^O","this__4217__auto__"],["^ ","^2D",29,"^2E",4286],["^ ","^2D",0,"^2E",4287],["^ ","^2D",0,"^2E",4287],["^ ","^2D",4,"^2E",4287,"^O","pr-pair__4220__auto__"],["^ ","^2D",28,"^2E",4287],["^ ","^2D",18,"^2E",4288,"^O","keyval__4221__auto__"],["^ ","^2D",0,"^2E",4289],["^ ","^2D",0,"^2E",4289],["^ ","^2D",7,"^2E",4289,"^O","cljs.core/pr-sequential-writer"],["^ ","^2D",38,"^2E",4289,"^O","writer__4218__auto__"],["^ ","^2D",59,"^2E",4289,"^O","cljs.core/pr-writer"],["^ ","^2D",79,"^2E",4289],["^ ","^2D",82,"^2E",4289],["^ ","^2D",86,"^2E",4289],["^ ","^2D",89,"^2E",4289,"^O","opts__4219__auto__"],["^ ","^2D",108,"^2E",4289,"^O","keyval__4221__auto__"],["^ ","^2D",0,"^2E",4292],["^ ","^2D",0,"^2E",4292],["^ ","^2D",7,"^2E",4292,"^O","cljs.core/pr-sequential-writer"],["^ ","^2D",38,"^2E",4292,"^O","writer__4218__auto__"],["^ ","^2D",59,"^2E",4292,"^O","pr-pair__4220__auto__"],["^ ","^2D",81,"^2E",4292],["^ ","^2D",121,"^2E",4292],["^ ","^2D",126,"^2E",4292],["^ ","^2D",130,"^2E",4292,"^O","opts__4219__auto__"],["^ ","^2D",149,"^2E",4292],["^ ","^2D",149,"^2E",4292,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",196,"^2E",4292],["^ ","^2D",279,"^2E",4292],["^ ","^2D",284,"^2E",4292,"^O","cljs.core/PersistentVector"],["^ ","^2D",311,"^2E",4292],["^ ","^2D",316,"^2E",4292],["^ ","^2D",318,"^2E",4292],["^ ","^2D",322,"^2E",4292],["^ ","^2D",322,"^2E",4292,"^O","cljs.core/PersistentVector"],["^ ","^2D",360,"^2E",4292],["^ ","^2D",361,"^2E",4292],["^ ","^2D",417,"^2E",4292,"^O","config"],["^ ","^2D",432,"^2E",4292],["^ ","^2D",439,"^2E",4292],["^ ","^2D",444,"^2E",4292,"^O","cljs.core/PersistentVector"],["^ ","^2D",471,"^2E",4292],["^ ","^2D",476,"^2E",4292],["^ ","^2D",478,"^2E",4292],["^ ","^2D",482,"^2E",4292],["^ ","^2D",482,"^2E",4292,"^O","cljs.core/PersistentVector"],["^ ","^2D",520,"^2E",4292],["^ ","^2D",521,"^2E",4292],["^ ","^2D",577,"^2E",4292,"^O","state"],["^ ","^2D",591,"^2E",4292],["^ ","^2D",598,"^2E",4292],["^ ","^2D",603,"^2E",4292,"^O","cljs.core/PersistentVector"],["^ ","^2D",630,"^2E",4292],["^ ","^2D",635,"^2E",4292],["^ ","^2D",637,"^2E",4292],["^ ","^2D",641,"^2E",4292],["^ ","^2D",641,"^2E",4292,"^O","cljs.core/PersistentVector"],["^ ","^2D",679,"^2E",4292],["^ ","^2D",680,"^2E",4292],["^ ","^2D",739,"^2E",4292,"^O","history"],["^ ","^2D",755,"^2E",4292],["^ ","^2D",770,"^2E",4292,"^O","__extmap"],["^ ","^2D",0,"^2E",4295],["^ ","^2D",0,"^2E",4295],["^ ","^2D",0,"^2E",4295],["^ ","^2D",86,"^2E",4295],["^ ","^2D",97,"^2E",4295,"^O","G__39635"],["^ ","^2D",0,"^2E",4297],["^ ","^2D",0,"^2E",4297],["^ ","^2D",4,"^2E",4297,"^O","G__39635"],["^ ","^2D",19,"^2E",4297],["^ ","^2D",0,"^2E",4298],["^ ","^2D",0,"^2E",4298],["^ ","^2D",12,"^2E",4298,"^O","cljs.core/RecordIter"],["^ ","^2D",33,"^2E",4298],["^ ","^2D",37,"^2E",4298,"^O","G__39635"],["^ ","^2D",50,"^2E",4298],["^ ","^2D",52,"^2E",4298],["^ ","^2D",135,"^2E",4298],["^ ","^2D",191,"^2E",4298],["^ ","^2D",247,"^2E",4298],["^ ","^2D",314,"^2E",4298],["^ ","^2D",332,"^2E",4298,"^O","__extmap"],["^ ","^2D",349,"^2E",4298],["^ ","^2D",349,"^2E",4298,"^O","cljs.core/-iterator"],["^ ","^2D",369,"^2E",4298,"^O","__extmap"],["^ ","^2D",386,"^2E",4298],["^ ","^2D",386,"^2E",4298,"^O","cljs.core/nil-iter"],["^ ","^2D",0,"^2E",4301],["^ ","^2D",0,"^2E",4301],["^ ","^2D",0,"^2E",4301],["^ ","^2D",78,"^2E",4301],["^ ","^2D",89,"^2E",4301,"^O","this__4201__auto__"],["^ ","^2D",0,"^2E",4303],["^ ","^2D",0,"^2E",4303],["^ ","^2D",4,"^2E",4303,"^O","this__4201__auto__"],["^ ","^2D",29,"^2E",4303],["^ ","^2D",0,"^2E",4304],["^ ","^2D",0,"^2E",4304,"^O","__meta"],["^ ","^2D",0,"^2E",4307],["^ ","^2D",0,"^2E",4307],["^ ","^2D",0,"^2E",4307],["^ ","^2D",84,"^2E",4307],["^ ","^2D",95,"^2E",4307,"^O","this__4198__auto__"],["^ ","^2D",0,"^2E",4309],["^ ","^2D",0,"^2E",4309],["^ ","^2D",4,"^2E",4309,"^O","this__4198__auto__"],["^ ","^2D",29,"^2E",4309],["^ ","^2D",0,"^2E",4310],["^ ","^2D",0,"^2E",4310],["^ ","^2D",48,"^2E",4310,"^O","config"],["^ ","^2D",62,"^2E",4310,"^O","state"],["^ ","^2D",75,"^2E",4310,"^O","history"],["^ ","^2D",90,"^2E",4310,"^O","__meta"],["^ ","^2D",104,"^2E",4310,"^O","__extmap"],["^ ","^2D",120,"^2E",4310,"^O","__hash"],["^ ","^2D",0,"^2E",4313],["^ ","^2D",0,"^2E",4313],["^ ","^2D",0,"^2E",4313],["^ ","^2D",82,"^2E",4313],["^ ","^2D",93,"^2E",4313,"^O","this__4207__auto__"],["^ ","^2D",0,"^2E",4315],["^ ","^2D",0,"^2E",4315],["^ ","^2D",4,"^2E",4315,"^O","this__4207__auto__"],["^ ","^2D",29,"^2E",4315],["^ ","^2D",0,"^2E",4316],["^ ","^2D",0,"^2E",4316],["^ ","^2D",8,"^2E",4316],["^ ","^2D",12,"^2E",4316],["^ ","^2D",12,"^2E",4316,"^O","cljs.core/count"],["^ ","^2D",28,"^2E",4316,"^O","__extmap"],["^ ","^2D",0,"^2E",4319],["^ ","^2D",0,"^2E",4319],["^ ","^2D",0,"^2E",4319],["^ ","^2D",78,"^2E",4319],["^ ","^2D",89,"^2E",4319,"^O","this__4199__auto__"],["^ ","^2D",0,"^2E",4321],["^ ","^2D",0,"^2E",4321],["^ ","^2D",4,"^2E",4321,"^O","this__4199__auto__"],["^ ","^2D",29,"^2E",4321],["^ ","^2D",0,"^2E",4322],["^ ","^2D",0,"^2E",4322],["^ ","^2D",4,"^2E",4322,"^O","h__4061__auto__"],["^ ","^2D",22,"^2E",4322,"^O","__hash"],["^ ","^2D",0,"^2E",4323],["^ ","^2D",0,"^2E",4323],["^ ","^2D",3,"^2E",4323],["^ ","^2D",5,"^2E",4323],["^ ","^2D",6,"^2E",4323,"^O","h__4061__auto__"],["^ ","^2D",25,"^2E",4323],["^ ","^2D",0,"^2E",4324,"^O","h__4061__auto__"],["^ ","^2D",0,"^2E",4326],["^ ","^2D",4,"^2E",4326,"^O","h__4061__auto__"],["^ ","^2D",26,"^2E",4326],["^ ","^2D",43,"^2E",4326,"^O","fexpr__39674"],["^ ","^2D",58,"^2E",4326],["^ ","^2D",18,"^2E",4327,"^O","coll__4200__auto__"],["^ ","^2D",0,"^2E",4328],["^ ","^2D",0,"^2E",4328],["^ ","^2D",8,"^2E",4328],["^ ","^2D",20,"^2E",4328],["^ ","^2D",20,"^2E",4328,"^O","cljs.core/hash-unordered-coll"],["^ ","^2D",50,"^2E",4328,"^O","coll__4200__auto__"],["^ ","^2D",0,"^2E",4331],["^ ","^2D",0,"^2E",4331],["^ ","^2D",7,"^2E",4331,"^O","fexpr__39674"],["^ ","^2D",20,"^2E",4331,"^O","this__4199__auto__"],["^ ","^2D",0,"^2E",4333],["^ ","^2D",0,"^2E",4333],["^ ","^2D",0,"^2E",4333,"^O","__hash"],["^ ","^2D",16,"^2E",4333,"^O","h__4061__auto__"],["^ ","^2D",0,"^2E",4335,"^O","h__4061__auto__"],["^ ","^2D",0,"^2E",4339],["^ ","^2D",0,"^2E",4339],["^ ","^2D",0,"^2E",4339],["^ ","^2D",80,"^2E",4339],["^ ","^2D",91,"^2E",4339,"^O","this39637"],["^ ","^2D",101,"^2E",4339,"^O","other39638"],["^ ","^2D",0,"^2E",4341],["^ ","^2D",0,"^2E",4341],["^ ","^2D",4,"^2E",4341,"^O","this39637"],["^ ","^2D",20,"^2E",4341],["^ ","^2D",0,"^2E",4342],["^ ","^2D",0,"^2E",4342],["^ ","^2D",9,"^2E",4342],["^ ","^2D",11,"^2E",4342],["^ ","^2D",12,"^2E",4342,"^O","other39638"],["^ ","^2D",26,"^2E",4342],["^ ","^2D",38,"^2E",4342],["^ ","^2D",39,"^2E",4342],["^ ","^2D",39,"^2E",4342,"^O","this39637"],["^ ","^2D",69,"^2E",4342],["^ ","^2D",69,"^2E",4342,"^O","other39638"],["^ ","^2D",98,"^2E",4342],["^ ","^2D",98,"^2E",4342,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",143,"^2E",4342],["^ ","^2D",143,"^2E",4342,"^O","this39637"],["^ ","^2D",164,"^2E",4342],["^ ","^2D",164,"^2E",4342,"^O","other39638"],["^ ","^2D",188,"^2E",4342],["^ ","^2D",188,"^2E",4342,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",233,"^2E",4342],["^ ","^2D",233,"^2E",4342,"^O","this39637"],["^ ","^2D",253,"^2E",4342],["^ ","^2D",253,"^2E",4342,"^O","other39638"],["^ ","^2D",276,"^2E",4342],["^ ","^2D",276,"^2E",4342,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",321,"^2E",4342],["^ ","^2D",321,"^2E",4342,"^O","this39637"],["^ ","^2D",343,"^2E",4342],["^ ","^2D",343,"^2E",4342,"^O","other39638"],["^ ","^2D",368,"^2E",4342],["^ ","^2D",368,"^2E",4342,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",413,"^2E",4342],["^ ","^2D",413,"^2E",4342,"^O","this39637"],["^ ","^2D",436,"^2E",4342],["^ ","^2D",436,"^2E",4342,"^O","other39638"],["^ ","^2D",0,"^2E",4345],["^ ","^2D",0,"^2E",4345],["^ ","^2D",0,"^2E",4345],["^ ","^2D",79,"^2E",4345],["^ ","^2D",90,"^2E",4345,"^O","this__4212__auto__"],["^ ","^2D",109,"^2E",4345,"^O","k__4213__auto__"],["^ ","^2D",0,"^2E",4347],["^ ","^2D",0,"^2E",4347],["^ ","^2D",4,"^2E",4347,"^O","this__4212__auto__"],["^ ","^2D",29,"^2E",4347],["^ ","^2D",0,"^2E",4348],["^ ","^2D",0,"^2E",4348],["^ ","^2D",3,"^2E",4348],["^ ","^2D",3,"^2E",4348,"^O","cljs.core/contains?"],["^ ","^2D",29,"^2E",4348],["^ ","^2D",110,"^2E",4348],["^ ","^2D",171,"^2E",4348],["^ ","^2D",235,"^2E",4348],["^ ","^2D",311,"^2E",4348,"^O","k__4213__auto__"],["^ ","^2D",0,"^2E",4349],["^ ","^2D",7,"^2E",4349,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",54,"^2E",4349],["^ ","^2D",54,"^2E",4349,"^O","cljs.core/-with-meta"],["^ ","^2D",75,"^2E",4349],["^ ","^2D",75,"^2E",4349,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",120,"^2E",4349],["^ ","^2D",155,"^2E",4349,"^O","this__4212__auto__"],["^ ","^2D",179,"^2E",4349,"^O","__meta"],["^ ","^2D",194,"^2E",4349,"^O","k__4213__auto__"],["^ ","^2D",0,"^2E",4351],["^ ","^2D",48,"^2E",4351,"^O","config"],["^ ","^2D",62,"^2E",4351,"^O","state"],["^ ","^2D",75,"^2E",4351,"^O","history"],["^ ","^2D",90,"^2E",4351,"^O","__meta"],["^ ","^2D",104,"^2E",4351],["^ ","^2D",104,"^2E",4351,"^O","cljs.core/not-empty"],["^ ","^2D",124,"^2E",4351],["^ ","^2D",124,"^2E",4351,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",171,"^2E",4351,"^O","__extmap"],["^ ","^2D",187,"^2E",4351,"^O","k__4213__auto__"],["^ ","^2D",205,"^2E",4351],["^ ","^2D",0,"^2E",4355],["^ ","^2D",0,"^2E",4355],["^ ","^2D",0,"^2E",4355],["^ ","^2D",86,"^2E",4355],["^ ","^2D",97,"^2E",4355,"^O","this__4210__auto__"],["^ ","^2D",116,"^2E",4355,"^O","k__4211__auto__"],["^ ","^2D",132,"^2E",4355,"^O","G__39635"],["^ ","^2D",0,"^2E",4357],["^ ","^2D",0,"^2E",4357],["^ ","^2D",4,"^2E",4357,"^O","this__4210__auto__"],["^ ","^2D",29,"^2E",4357],["^ ","^2D",0,"^2E",4358],["^ ","^2D",0,"^2E",4358],["^ ","^2D",4,"^2E",4358,"^O","pred__39678"],["^ ","^2D",18,"^2E",4358,"^O","cljs.core/keyword-identical?"],["^ ","^2D",4,"^2E",4359,"^O","expr__39679"],["^ ","^2D",18,"^2E",4359,"^O","k__4211__auto__"],["^ ","^2D",0,"^2E",4360],["^ ","^2D",0,"^2E",4360],["^ ","^2D",20,"^2E",4360],["^ ","^2D",37,"^2E",4360,"^O","G__39681"],["^ ","^2D",48,"^2E",4360],["^ ","^2D",4,"^2E",4361,"^O","G__39682"],["^ ","^2D",15,"^2E",4361,"^O","expr__39679"],["^ ","^2D",0,"^2E",4362],["^ ","^2D",0,"^2E",4362],["^ ","^2D",8,"^2E",4362,"^O","pred__39678"],["^ ","^2D",52,"^2E",4362,"^O","pred__39678"],["^ ","^2D",94,"^2E",4362,"^O","G__39681"],["^ ","^2D",103,"^2E",4362,"^O","G__39682"],["^ ","^2D",115,"^2E",4362,"^O","pred__39678"],["^ ","^2D",137,"^2E",4362,"^O","G__39681"],["^ ","^2D",146,"^2E",4362,"^O","G__39682"],["^ ","^2D",0,"^2E",4364],["^ ","^2D",48,"^2E",4364,"^O","G__39635"],["^ ","^2D",57,"^2E",4364,"^O","state"],["^ ","^2D",70,"^2E",4364,"^O","history"],["^ ","^2D",85,"^2E",4364,"^O","__meta"],["^ ","^2D",99,"^2E",4364,"^O","__extmap"],["^ ","^2D",115,"^2E",4364],["^ ","^2D",0,"^2E",4366],["^ ","^2D",20,"^2E",4366],["^ ","^2D",37,"^2E",4366,"^O","G__39683"],["^ ","^2D",48,"^2E",4366],["^ ","^2D",4,"^2E",4367,"^O","G__39684"],["^ ","^2D",15,"^2E",4367,"^O","expr__39679"],["^ ","^2D",0,"^2E",4368],["^ ","^2D",0,"^2E",4368],["^ ","^2D",8,"^2E",4368,"^O","pred__39678"],["^ ","^2D",52,"^2E",4368,"^O","pred__39678"],["^ ","^2D",94,"^2E",4368,"^O","G__39683"],["^ ","^2D",103,"^2E",4368,"^O","G__39684"],["^ ","^2D",115,"^2E",4368,"^O","pred__39678"],["^ ","^2D",137,"^2E",4368,"^O","G__39683"],["^ ","^2D",146,"^2E",4368,"^O","G__39684"],["^ ","^2D",0,"^2E",4370],["^ ","^2D",48,"^2E",4370,"^O","config"],["^ ","^2D",62,"^2E",4370,"^O","G__39635"],["^ ","^2D",71,"^2E",4370,"^O","history"],["^ ","^2D",86,"^2E",4370,"^O","__meta"],["^ ","^2D",100,"^2E",4370,"^O","__extmap"],["^ ","^2D",116,"^2E",4370],["^ ","^2D",0,"^2E",4372],["^ ","^2D",20,"^2E",4372],["^ ","^2D",37,"^2E",4372,"^O","G__39685"],["^ ","^2D",48,"^2E",4372],["^ ","^2D",4,"^2E",4373,"^O","G__39686"],["^ ","^2D",15,"^2E",4373,"^O","expr__39679"],["^ ","^2D",0,"^2E",4374],["^ ","^2D",0,"^2E",4374],["^ ","^2D",8,"^2E",4374,"^O","pred__39678"],["^ ","^2D",52,"^2E",4374,"^O","pred__39678"],["^ ","^2D",94,"^2E",4374,"^O","G__39685"],["^ ","^2D",103,"^2E",4374,"^O","G__39686"],["^ ","^2D",115,"^2E",4374,"^O","pred__39678"],["^ ","^2D",137,"^2E",4374,"^O","G__39685"],["^ ","^2D",146,"^2E",4374,"^O","G__39686"],["^ ","^2D",0,"^2E",4376],["^ ","^2D",48,"^2E",4376,"^O","config"],["^ ","^2D",62,"^2E",4376,"^O","state"],["^ ","^2D",75,"^2E",4376,"^O","G__39635"],["^ ","^2D",84,"^2E",4376,"^O","__meta"],["^ ","^2D",98,"^2E",4376,"^O","__extmap"],["^ ","^2D",114,"^2E",4376],["^ ","^2D",0,"^2E",4378],["^ ","^2D",48,"^2E",4378,"^O","config"],["^ ","^2D",62,"^2E",4378,"^O","state"],["^ ","^2D",75,"^2E",4378,"^O","history"],["^ ","^2D",90,"^2E",4378,"^O","__meta"],["^ ","^2D",104,"^2E",4378],["^ ","^2D",104,"^2E",4378,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",150,"^2E",4378,"^O","__extmap"],["^ ","^2D",166,"^2E",4378,"^O","k__4211__auto__"],["^ ","^2D",182,"^2E",4378,"^O","G__39635"],["^ ","^2D",192,"^2E",4378],["^ ","^2D",0,"^2E",4384],["^ ","^2D",0,"^2E",4384],["^ ","^2D",0,"^2E",4384],["^ ","^2D",80,"^2E",4384],["^ ","^2D",91,"^2E",4384,"^O","this__4215__auto__"],["^ ","^2D",0,"^2E",4386],["^ ","^2D",0,"^2E",4386],["^ ","^2D",4,"^2E",4386,"^O","this__4215__auto__"],["^ ","^2D",29,"^2E",4386],["^ ","^2D",0,"^2E",4387],["^ ","^2D",0,"^2E",4387],["^ ","^2D",7,"^2E",4387,"^O","cljs.core/seq"],["^ ","^2D",21,"^2E",4387],["^ ","^2D",21,"^2E",4387,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",68,"^2E",4387],["^ ","^2D",151,"^2E",4387],["^ ","^2D",156,"^2E",4387,"^O","cljs/core.MapEntry"],["^ ","^2D",175,"^2E",4387],["^ ","^2D",231,"^2E",4387,"^O","config"],["^ ","^2D",245,"^2E",4387],["^ ","^2D",252,"^2E",4387],["^ ","^2D",257,"^2E",4387,"^O","cljs/core.MapEntry"],["^ ","^2D",276,"^2E",4387],["^ ","^2D",332,"^2E",4387,"^O","state"],["^ ","^2D",345,"^2E",4387],["^ ","^2D",352,"^2E",4387],["^ ","^2D",357,"^2E",4387,"^O","cljs/core.MapEntry"],["^ ","^2D",376,"^2E",4387],["^ ","^2D",435,"^2E",4387,"^O","history"],["^ ","^2D",450,"^2E",4387],["^ ","^2D",465,"^2E",4387,"^O","__extmap"],["^ ","^2D",0,"^2E",4390],["^ ","^2D",0,"^2E",4390],["^ ","^2D",0,"^2E",4390],["^ ","^2D",87,"^2E",4390],["^ ","^2D",98,"^2E",4390,"^O","this__4202__auto__"],["^ ","^2D",117,"^2E",4390,"^O","G__39635"],["^ ","^2D",0,"^2E",4392],["^ ","^2D",0,"^2E",4392],["^ ","^2D",4,"^2E",4392,"^O","this__4202__auto__"],["^ ","^2D",29,"^2E",4392],["^ ","^2D",0,"^2E",4393],["^ ","^2D",0,"^2E",4393],["^ ","^2D",48,"^2E",4393,"^O","config"],["^ ","^2D",62,"^2E",4393,"^O","state"],["^ ","^2D",75,"^2E",4393,"^O","history"],["^ ","^2D",90,"^2E",4393,"^O","G__39635"],["^ ","^2D",99,"^2E",4393,"^O","__extmap"],["^ ","^2D",115,"^2E",4393,"^O","__hash"],["^ ","^2D",0,"^2E",4396],["^ ","^2D",0,"^2E",4396],["^ ","^2D",0,"^2E",4396],["^ ","^2D",84,"^2E",4396],["^ ","^2D",95,"^2E",4396,"^O","this__4208__auto__"],["^ ","^2D",114,"^2E",4396,"^O","entry__4209__auto__"],["^ ","^2D",0,"^2E",4398],["^ ","^2D",0,"^2E",4398],["^ ","^2D",4,"^2E",4398,"^O","this__4208__auto__"],["^ ","^2D",29,"^2E",4398],["^ ","^2D",0,"^2E",4399],["^ ","^2D",0,"^2E",4399],["^ ","^2D",3,"^2E",4399],["^ ","^2D",3,"^2E",4399,"^O","cljs.core/vector?"],["^ ","^2D",27,"^2E",4399,"^O","entry__4209__auto__"],["^ ","^2D",0,"^2E",4400],["^ ","^2D",7,"^2E",4400,"^O","cljs.core/-assoc"],["^ ","^2D",24,"^2E",4400,"^O","this__4208__auto__"],["^ ","^2D",47,"^2E",4400],["^ ","^2D",47,"^2E",4400,"^O","cljs.core._nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",92,"^2E",4400,"^O","entry__4209__auto__"],["^ ","^2D",112,"^2E",4400],["^ ","^2D",117,"^2E",4400],["^ ","^2D",117,"^2E",4400,"^O","cljs.core._nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",162,"^2E",4400,"^O","entry__4209__auto__"],["^ ","^2D",182,"^2E",4400],["^ ","^2D",0,"^2E",4402],["^ ","^2D",7,"^2E",4402,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",4402,"^O","cljs.core/-conj"],["^ ","^2D",70,"^2E",4402,"^O","this__4208__auto__"],["^ ","^2D",93,"^2E",4402,"^O","entry__4209__auto__"],["^ ","^2D",0,"^2E",4406],["^ ","^2D",0,"^2E",4406],["^ ","^2D",0,"^2E",4406],["^ ","^2D",80,"^2E",4406],["^ ","^2D",0,"^2E",4408],["^ ","^2D",0,"^2E",4408],["^ ","^2D",12,"^2E",4408],["^ ","^2D",0,"^2E",4409],["^ ","^2D",0,"^2E",4409],["^ ","^2D",7,"^2E",4409,"^O","cljs.core/deref"],["^ ","^2D",0,"^2E",4412],["^ ","^2D",0,"^2E",4412],["^ ","^2D",0,"^2E",4412,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",47,"^2E",4412],["^ ","^2D",0,"^2E",4413],["^ ","^2D",0,"^2E",4413],["^ ","^2D",90,"^2E",4413],["^ ","^2D",152,"^2E",4413],["^ ","^2D",211,"^2E",4413],["^ ","^2D",0,"^2E",4416],["^ ","^2D",0,"^2E",4416],["^ ","^2D",0,"^2E",4416,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",53,"^2E",4416],["^ ","^2D",0,"^2E",4418],["^ ","^2D",0,"^2E",4418],["^ ","^2D",0,"^2E",4418,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",58,"^2E",4418],["^ ","^2D",69,"^2E",4418,"^O","this__4240__auto__"],["^ ","^2D",0,"^2E",4419],["^ ","^2D",0,"^2E",4419],["^ ","^2D",12,"^2E",4419,"^O","cljs.core/List"],["^ ","^2D",27,"^2E",4419],["^ ","^2D",32,"^2E",4419],["^ ","^2D",70,"^2E",4419],["^ ","^2D",75,"^2E",4419],["^ ","^2D",79,"^2E",4419],["^ ","^2D",0,"^2E",4422],["^ ","^2D",0,"^2E",4422],["^ ","^2D",0,"^2E",4422,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",61,"^2E",4422],["^ ","^2D",72,"^2E",4422,"^O","this__4240__auto__"],["^ ","^2D",91,"^2E",4422,"^O","writer__4241__auto__"],["^ ","^2D",0,"^2E",4423],["^ ","^2D",0,"^2E",4423],["^ ","^2D",7,"^2E",4423,"^O","cljs.core/-write"],["^ ","^2D",24,"^2E",4423,"^O","writer__4241__auto__"],["^ ","^2D",45,"^2E",4423],["^ ","^2D",0,"^2E",4426],["^ ","^2D",43,"^2E",4429],["^ ","^2D",0,"^2E",4430],["^ ","^2D",0,"^2E",4430],["^ ","^2D",12,"^2E",4430,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",69,"^2E",4430],["^ ","^2D",74,"^2E",4430],["^ ","^2D",79,"^2E",4430],["^ ","^2D",0,"^2E",4433],["^ ","^2D",46,"^2E",4436],["^ ","^2D",100,"^2E",4436,"^O","G__39639"],["^ ","^2D",0,"^2E",4437],["^ ","^2D",0,"^2E",4437],["^ ","^2D",4,"^2E",4437,"^O","extmap__4236__auto__"],["^ ","^2D",27,"^2E",4437],["^ ","^2D",44,"^2E",4437,"^O","G__39690"],["^ ","^2D",55,"^2E",4437],["^ ","^2D",55,"^2E",4437,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",109,"^2E",4437,"^O","G__39639"],["^ ","^2D",118,"^2E",4437],["^ ","^2D",224,"^2E",4437],["^ ","^2D",280,"^2E",4437],["^ ","^2D",0,"^2E",4438],["^ ","^2D",0,"^2E",4438],["^ ","^2D",3,"^2E",4438],["^ ","^2D",3,"^2E",4438,"^O","cljs.core/record?"],["^ ","^2D",27,"^2E",4438,"^O","G__39639"],["^ ","^2D",0,"^2E",4439],["^ ","^2D",7,"^2E",4439,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",52,"^2E",4439],["^ ","^2D",87,"^2E",4439,"^O","G__39690"],["^ ","^2D",0,"^2E",4441,"^O","G__39690"],["^ ","^2D",0,"^2E",4444],["^ ","^2D",0,"^2E",4444],["^ ","^2D",12,"^2E",4444,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",48,"^2E",4444],["^ ","^2D",48,"^2E",4444],["^ ","^2D",134,"^2E",4444,"^O","G__39639"],["^ ","^2D",144,"^2E",4444],["^ ","^2D",144,"^2E",4444],["^ ","^2D",230,"^2E",4444,"^O","G__39639"],["^ ","^2D",240,"^2E",4444],["^ ","^2D",240,"^2E",4444],["^ ","^2D",329,"^2E",4444,"^O","G__39639"],["^ ","^2D",339,"^2E",4444],["^ ","^2D",344,"^2E",4444],["^ ","^2D",344,"^2E",4444,"^O","cljs.core/not-empty"],["^ ","^2D",364,"^2E",4444,"^O","extmap__4236__auto__"],["^ ","^2D",386,"^2E",4444],["^ ","^2D",0,"^2E",4447,"^O","fulcro.client.primitives/Reconciler"]],"^2T",[["^ ","^2D",0,"^2E",3895,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",3901,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",3925,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",3927,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",3933,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",3943,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",3949,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",3955,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4011,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4017,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4069,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4081,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4087,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4099,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4105,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4253,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4266,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4278,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4284,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4295,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4301,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4307,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",12,"^2E",4310,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4313,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4319,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4339,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4345,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",12,"^2E",4351,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4355,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",12,"^2E",4364,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",12,"^2E",4370,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",12,"^2E",4376,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",12,"^2E",4378,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4384,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4390,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",12,"^2E",4393,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4396,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4406,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",0,"^2E",4429,"^O","fulcro.client.primitives/->Reconciler"],["^ ","^2D",0,"^2E",4436,"^O","fulcro.client.primitives/map->Reconciler"]],"^3Y",[["^ ","^2D",94,"^2E",4429,"^O","config"],["^ ","^2D",48,"^2E",4430,"^O","config"]],"^2X",[["^ ","^2D",101,"^2E",4429,"^O","state"],["^ ","^2D",55,"^2E",4430,"^O","state"]],"^38",[["^ ","^2D",107,"^2E",4429,"^O","history"],["^ ","^2D",61,"^2E",4430,"^O","history"]]],"~i2042",["^ ","^4X",[["^ ","^2D",91,"^2E",4406,"^O","_"],["^ ","^2D",4,"^2E",4408,"^O","_"]],"^3=",[["^ ","^2D",23,"^2E",4409],["^ ","^2D",23,"^2E",4409]],"^4Y",[["^ ","^2D",109,"^2E",4409,"^O","config"]]],"~i2045",["^ ","^2I",[["^ ","^2D",119,"^2E",4081,"^O","_"],["^ ","^2D",4,"^2E",4083,"^O","_"]],"^2G",[["^ ","^2D",0,"^2E",4084],["^ ","^2D",88,"^2E",4084]],"^44",[["^ ","^2D",7,"^2E",4084,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^4X",[["^ ","^2D",58,"^2E",4084,"^O","state"]],"^3>",[["^ ","^2D",71,"^2E",4084,"^O","cljs.core/update"]],"^38",[["^ ","^2D",136,"^2E",4084,"^O","cljs.core/inc"]]],"~i2046",["^ ","^2T",[["^ ","^2D",115,"^2E",4278,"^O","_"],["^ ","^2D",4,"^2E",4280,"^O","_"]],"^44",[["^ ","^2D",0,"^2E",4281],["^ ","^2D",7,"^2E",4281],["^ ","^2D",87,"^2E",4281],["^ ","^2D",87,"^2E",4281,"^O","cljs.core/deref"]],"^4X",[["^ ","^2D",103,"^2E",4281,"^O","state"]]],"~i2047",["^ ","^3S",[["^ ","^2D",116,"^2E",4099,"^O","_"],["^ ","^2D",4,"^2E",4101,"^O","_"]],"^2J",[["^ ","^2D",0,"^2E",4102],["^ ","^2D",7,"^2E",4102],["^ ","^2D",85,"^2E",4102],["^ ","^2D",85,"^2E",4102,"^O","cljs.core/deref"]],"^4X",[["^ ","^2D",101,"^2E",4102,"^O","state"]]],"~i2048",["^ ","^37",[["^ ","^2D",120,"^2E",3949,"^O","_"],["^ ","^2D",4,"^2E",3951,"^O","_"]],"^35",[["^ ","^2D",0,"^2E",3952,"^O","history"]]],"~i2050",["^ ","^44",[["^ ","^2D",123,"^2E",4105,"^O","this"],["^ ","^2D",4,"^2E",4107,"^O","this"]],"^35",[["^ ","^2D",129,"^2E",4105,"^O","root-class"]],"^2X",[["^ ","^2D",140,"^2E",4105,"^O","target"]],"^2F",[["^ ","^2D",147,"^2E",4105,"^O","options"]]],"~i2051",["^ ","~i4",[["^ ","^2D",0,"^2E",4108],["^ ","^2D",0,"^2E",4117]],"^2I",[["^ ","^2D",4,"^2E",4108,"^O","ret"]],"^37",[["^ ","^2D",10,"^2E",4108],["^ ","^2D",55,"^2E",4108]],"^3K",[["^ ","^2D",10,"^2E",4108,"^O","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i2052",["^ ","^2I",[["^ ","^2D",4,"^2E",4109,"^O","rctor"]],"^37",[["^ ","^2D",12,"^2E",4109]],"^3K",[["^ ","^2D",12,"^2E",4109,"^O","fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$1"]],"^3V",[["^ ","^2D",75,"^2E",4109,"^O","root-class"]]],"~i2053",["^ ","^2I",[["^ ","^2D",4,"^2E",4110,"^O","guid"]],"^37",[["^ ","^2D",11,"^2E",4110],["^ ","^2D",28,"^2E",4110,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",4111],["^ ","^2D",0,"^2E",4111],["^ ","^2D",20,"^2E",4111,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",4112,"^O","or__3949__auto__"]],"^4X",[["^ ","^2D",47,"^2E",4110]],"^3D",[["^ ","^2D",47,"^2E",4110,"^O","fulcro.client.impl.protocols/get-id"]],"^2X",[["^ ","^2D",83,"^2E",4110,"^O","this"]],"^38",[["^ ","^2D",0,"^2E",4114]],"^2F",[["^ ","^2D",7,"^2E",4114,"^O","fulcro.util/unique-key"]]],"~i2054",["^ ","~i6",[["^ ","^2D",0,"^2E",4117],["^ ","^2D",0,"^2E",4118],["^ ","^2D",0,"^2E",4119]],"^37",[["^ ","^2D",20,"^2E",4117]],"^3K",[["^ ","^2D",20,"^2E",4117,"^O","fulcro.client.impl.protocols/get-id"]],"^3>",[["^ ","^2D",56,"^2E",4117,"^O","this"]]],"~i2055",["^ ","~i8",[["^ ","^2D",0,"^2E",4119],["^ ","^2D",80,"^2E",4119]],"~i9",[["^ ","^2D",0,"^2E",4119,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^2J",[["^ ","^2D",51,"^2E",4119,"^O","state"]],"^3D",[["^ ","^2D",64,"^2E",4119,"^O","cljs.core/assoc"]],"^30",[["^ ","^2D",130,"^2E",4119,"^O","guid"]]],"~i2056",["^ ","~i6",[["^ ","^2D",0,"^2E",4122],["^ ","^2D",0,"^2E",4123],["^ ","^2D",0,"^2E",4125]],"^3S",[["^ ","^2D",3,"^2E",4122]],"^2G",[["^ ","^2D",3,"^2E",4122,"^O","fulcro.client.primitives/has-query?"]],"^3=",[["^ ","^2D",45,"^2E",4122,"^O","root-class"]]],"~i2057",["^ ","~i8",[["^ ","^2D",0,"^2E",4123]],"~i9",[["^ ","^2D",0,"^2E",4123,"^O","fulcro.client.impl.protocols/index-root"]],"^2P",[["^ ","^2D",40,"^2E",4123],["^ ","^2D",191,"^2E",4123]],"^3Y",[["^ ","^2D",40,"^2E",4123,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3H",[["^ ","^2D",86,"^2E",4123],["^ ","^2D",86,"^2E",4123]],"^3W",[["^ ","^2D",176,"^2E",4123,"^O","config"]],"^4E",[["^ ","^2D",247,"^2E",4123],["^ ","^2D",263,"^2E",4123],["^ ","^2D",263,"^2E",4123]],"^4J",[["^ ","^2D",349,"^2E",4123,"^O","config"]],"^>?",[["^ ","^2D",247,"^2E",4123,"^O","cljs.core/deref"]],"^36",[["^ ","^2D",366,"^2E",4123,"^O","root-class"]]],"~i2058",["^ ","~i6",[["^ ","^2D",0,"^2E",4127],["^ ","^2D",0,"^2E",4134],["^ ","^2D",0,"^2E",4140]],"^3S",[["^ ","^2D",20,"^2E",4127],["^ ","^2D",37,"^2E",4127,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",4128],["^ ","^2D",0,"^2E",4128],["^ ","^2D",20,"^2E",4128,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",4131,"^O","and__3938__auto__"]],"^3K",[["^ ","^2D",57,"^2E",4127],["^ ","^2D",57,"^2E",4127]],"^3H",[["^ ","^2D",151,"^2E",4127,"^O","config"]]],"~i2059",["^ ","^44",[["^ ","^2D",0,"^2E",4129]],"^2J",[["^ ","^2D",7,"^2E",4129,"^O","cljs.core/not"]],"^35",[["^ ","^2D",21,"^2E",4129],["^ ","^2D",21,"^2E",4129],["^ ","^2D",117,"^2E",4129],["^ ","^2D",117,"^2E",4129,"^O","cljs.core/deref"]],"^48",[["^ ","^2D",133,"^2E",4129,"^O","state"]]],"~i2060",["^ ","~i8",[["^ ","^2D",0,"^2E",4134],["^ ","^2D",0,"^2E",4136]],"^44",[["^ ","^2D",4,"^2E",4134,"^O","new-state"]],"^3=",[["^ ","^2D",22,"^2E",4134],["^ ","^2D",100,"^2E",4134],["^ ","^2D",100,"^2E",4134,"^O","cljs.core/deref"]],"^3V",[["^ ","^2D",22,"^2E",4134,"^O","fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$2"]],"^2C",[["^ ","^2D",89,"^2E",4134,"^O","root-class"]],"^2Q",[["^ ","^2D",116,"^2E",4134],["^ ","^2D",116,"^2E",4134]],"^4E",[["^ ","^2D",202,"^2E",4134,"^O","config"]]],"~i2061",["^ ","^44",[["^ ","^2D",4,"^2E",4135,"^O","refs"]],"^3=",[["^ ","^2D",17,"^2E",4135]],"^3V",[["^ ","^2D",17,"^2E",4135,"^O","cljs.core/meta"]],"^2X",[["^ ","^2D",32,"^2E",4135,"^O","new-state"]]],"~i2062",["^ ","^2I",[["^ ","^2D",0,"^2E",4136]],"^2T",[["^ ","^2D",0,"^2E",4136,"^O","cljs.core/reset!"]],"^2O",[["^ ","^2D",22,"^2E",4136],["^ ","^2D",22,"^2E",4136]],"^3>",[["^ ","^2D",108,"^2E",4136,"^O","config"]],"^2C",[["^ ","^2D",123,"^2E",4136]],"^3E",[["^ ","^2D",123,"^2E",4136,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]],"^2L",[["^ ","^2D",226,"^2E",4136,"^O","new-state"]],"^3Z",[["^ ","^2D",242,"^2E",4136,"^O","refs"]]],"~i2063",["^ ","^2I",[["^ ","^2D",0,"^2E",4138],["^ ","^2D",80,"^2E",4138],["^ ","^2D",146,"^2E",4138]],"^2T",[["^ ","^2D",0,"^2E",4138,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^3K",[["^ ","^2D",51,"^2E",4138,"^O","state"]],"^3Y",[["^ ","^2D",64,"^2E",4138,"^O","cljs.core/assoc"]]],"~i2064",["^ ","~i6",[["^ ","^2D",0,"^2E",4142],["^ ","^2D",0,"^2E",4217],["^ ","^2D",0,"^2E",4250],["^ ","^2D",7,"^2E",4250,"^O","cljs.core/deref"]],"^3S",[["^ ","^2D",4,"^2E",4142,"^O","renderf"]],"^4X",[["^ ","^2D",14,"^2E",4142],["^ ","^2D",0,"^2E",4144]],"^3E",[["^ ","^2D",52,"^2E",4143,"^O","data"]]],"~i2065",["^ ","^2P",[["^ ","^2D",0,"^2E",4144],["^ ","^2D",4,"^2E",4144,"^O","*reconciler*39658"],["^ ","^2D",4,"^2E",4145,"^O","*shared*39659"],["^ ","^2D",4,"^2E",4146,"^O","*instrument*39660"],["^ ","^2D",0,"^2E",4147],["^ ","^2D",0,"^2E",4147],["^ ","^2D",0,"^2E",4149],["^ ","^2D",0,"^2E",4153],["^ ","^2D",0,"^2E",4155],["^ ","^2D",4,"^2E",4155],["^ ","^2D",10,"^2E",4179],["^ ","^2D",10,"^2E",4179],["^ ","^2D",60,"^2E",4179,"^O","*instrument*39660"],["^ ","^2D",0,"^2E",4181],["^ ","^2D",46,"^2E",4181,"^O","*shared*39659"],["^ ","^2D",0,"^2E",4183],["^ ","^2D",50,"^2E",4183,"^O","*reconciler*39658"]],"^4Y",[["^ ","^2D",34,"^2E",4144,"^O","fulcro.client.primitives/*reconciler*"],["^ ","^2D",0,"^2E",4147,"^O","fulcro.client.primitives/*reconciler*"],["^ ","^2D",0,"^2E",4183,"^O","fulcro.client.primitives/*reconciler*"]],"^4>",[["^ ","^2D",50,"^2E",4147,"^O","this"]]],"~i2066",["^ ","^4Y",[["^ ","^2D",30,"^2E",4145,"^O","fulcro.client.primitives/*shared*"],["^ ","^2D",0,"^2E",4149,"^O","fulcro.client.primitives/*shared*"],["^ ","^2D",0,"^2E",4181,"^O","fulcro.client.primitives/*shared*"]],"^4>",[["^ ","^2D",46,"^2E",4149]],"^2Q",[["^ ","^2D",46,"^2E",4149,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]]],"~i2067",["^ ","^5C",[["^ ","^2D",149,"^2E",4149],["^ ","^2D",149,"^2E",4149]],"^5F",[["^ ","^2D",236,"^2E",4149,"^O","config"]]],"~i2068",["^ ","^5C",[["^ ","^2D",251,"^2E",4149],["^ ","^2D",378,"^2E",4149],["^ ","^2D",5,"^2E",4151]],"^2S",[["^ ","^2D",269,"^2E",4149],["^ ","^2D",269,"^2E",4149]],"^61",[["^ ","^2D",362,"^2E",4149,"^O","config"]]],"~i2069",["^ ","^3F",[["^ ","^2D",378,"^2E",4149],["^ ","^2D",395,"^2E",4149,"^O","fexpr__39661"],["^ ","^2D",0,"^2E",4150],["^ ","^2D",0,"^2E",4150],["^ ","^2D",8,"^2E",4150,"^O","fexpr__39661"],["^ ","^2D",53,"^2E",4150,"^O","fexpr__39661"],["^ ","^2D",104,"^2E",4150,"^O","fexpr__39661"]],"^5;",[["^ ","^2D",410,"^2E",4149],["^ ","^2D",410,"^2E",4149]],"^2W",[["^ ","^2D",503,"^2E",4149,"^O","config"]],"^>B",[["^ ","^2D",96,"^2E",4150,"^O","data"],["^ ","^2D",127,"^2E",4150,"^O","data"]]],"~i2070",["^ ","^4Y",[["^ ","^2D",34,"^2E",4146,"^O","fulcro.client.primitives/*instrument*"],["^ ","^2D",0,"^2E",4153,"^O","fulcro.client.primitives/*instrument*"],["^ ","^2D",10,"^2E",4179,"^O","fulcro.client.primitives/*instrument*"]],"^4>",[["^ ","^2D",50,"^2E",4153],["^ ","^2D",50,"^2E",4153]],"^4J",[["^ ","^2D",145,"^2E",4153,"^O","config"]]],"~i2071",["^ ","^3=",[["^ ","^2D",4,"^2E",4155],["^ ","^2D",0,"^2E",4172]],"^2X",[["^ ","^2D",8,"^2E",4155,"^O","c"]],"^4Y",[["^ ","^2D",12,"^2E",4155],["^ ","^2D",5,"^2E",4159],["^ ","^2D",145,"^2E",4159]]],"~i2072",["^ ","^4>",[["^ ","^2D",14,"^2E",4155]],"^5;",[["^ ","^2D",16,"^2E",4155],["^ ","^2D",27,"^2E",4155]],"^5F",[["^ ","^2D",17,"^2E",4155,"^O","target"]],"^61",[["^ ","^2D",35,"^2E",4155],["^ ","^2D",52,"^2E",4155,"^O","G__39663"],["^ ","^2D",4,"^2E",4156,"^O","G__39664"],["^ ","^2D",4,"^2E",4157,"^O","fexpr__39662"],["^ ","^2D",0,"^2E",4158],["^ ","^2D",0,"^2E",4158],["^ ","^2D",8,"^2E",4158,"^O","fexpr__39662"],["^ ","^2D",53,"^2E",4158,"^O","fexpr__39662"],["^ ","^2D",96,"^2E",4158,"^O","G__39663"],["^ ","^2D",105,"^2E",4158,"^O","G__39664"],["^ ","^2D",117,"^2E",4158,"^O","fexpr__39662"],["^ ","^2D",140,"^2E",4158,"^O","G__39663"],["^ ","^2D",149,"^2E",4158,"^O","G__39664"]],"^2Z",[["^ ","^2D",19,"^2E",4157],["^ ","^2D",19,"^2E",4157]],"^36",[["^ ","^2D",115,"^2E",4157,"^O","config"]],"^3?",[["^ ","^2D",63,"^2E",4155]],"^3@",[["^ ","^2D",64,"^2E",4155,"^O","rctor"],["^ ","^2D",102,"^2E",4155,"^O","rctor"],["^ ","^2D",146,"^2E",4155,"^O","rctor"]],"^FH",[["^ ","^2D",138,"^2E",4155,"^O","data"],["^ ","^2D",162,"^2E",4155,"^O","data"]],"^HG",[["^ ","^2D",15,"^2E",4156,"^O","target"]]],"~i2073",["^ ","^2C",[["^ ","^2D",7,"^2E",4159],["^ ","^2D",8,"^2E",4159],["^ ","^2D",8,"^2E",4159,"^O","cljs.core/deref"],["^ ","^2D",32,"^2E",4159]],"^2L",[["^ ","^2D",24,"^2E",4159,"^O","ret"]],"^2Q",[["^ ","^2D",39,"^2E",4159]],"^5C",[["^ ","^2D",40,"^2E",4159,"^O","rctor"],["^ ","^2D",78,"^2E",4159,"^O","rctor"],["^ ","^2D",122,"^2E",4159,"^O","rctor"]],"^2S",[["^ ","^2D",114,"^2E",4159,"^O","data"],["^ ","^2D",138,"^2E",4159,"^O","data"]]],"~i2074",["^ ","^2K",[["^ ","^2D",145,"^2E",4159],["^ ","^2D",162,"^2E",4159,"^O","temp__5457__auto__"],["^ ","^2D",183,"^2E",4159],["^ ","^2D",183,"^2E",4159,"^O","cljs.core/deref"],["^ ","^2D",0,"^2E",4160],["^ ","^2D",0,"^2E",4160],["^ ","^2D",20,"^2E",4160,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",4161],["^ ","^2D",0,"^2E",4161],["^ ","^2D",21,"^2E",4161,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",4162],["^ ","^2D",0,"^2E",4168]],"^3Z",[["^ ","^2D",4,"^2E",4161,"^O","c'"]],"^2U",[["^ ","^2D",199,"^2E",4159,"^O","ret"]]],"~i2078",["^ ","^3Z",[["^ ","^2D",0,"^2E",4162],["^ ","^2D",0,"^2E",4163],["^ ","^2D",0,"^2E",4165]],"^2V",[["^ ","^2D",3,"^2E",4162]],"^4J",[["^ ","^2D",3,"^2E",4162,"^O","fulcro.client.primitives/mounted?"]],"^3[",[["^ ","^2D",43,"^2E",4162,"^O","c'"]]],"~i2079",["^ ","^2S",[["^ ","^2D",0,"^2E",4163]],"^4E",[["^ ","^2D",7,"^2E",4163,"^O","fulcro.client.primitives.force_update.cljs$core$IFn$_invoke$arity$2"]],"^3[",[["^ ","^2D",75,"^2E",4163,"^O","c'"]],"^>B",[["^ ","^2D",90,"^2E",4163,"^O","data"]]],"~i2080",["^ ","^3>",[["^ ","^2D",0,"^2E",4172],["^ ","^2D",0,"^2E",4173],["^ ","^2D",0,"^2E",4177]],"^4Y",[["^ ","^2D",3,"^2E",4172]],"^2F",[["^ ","^2D",5,"^2E",4172],["^ ","^2D",6,"^2E",4172],["^ ","^2D",6,"^2E",4172,"^O","cljs.core/deref"],["^ ","^2D",30,"^2E",4172]],"^2N",[["^ ","^2D",22,"^2E",4172,"^O","ret"]],"^3F",[["^ ","^2D",41,"^2E",4172]],"^4E",[["^ ","^2D",43,"^2E",4172],["^ ","^2D",49,"^2E",4172]],"^7U",[["^ ","^2D",44,"^2E",4172,"^O","c"]]],"~i2081",["^ ","^4I",[["^ ","^2D",0,"^2E",4173],["^ ","^2D",80,"^2E",4173]],"^3H",[["^ ","^2D",0,"^2E",4173,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^3E",[["^ ","^2D",51,"^2E",4173,"^O","state"]],"^2L",[["^ ","^2D",64,"^2E",4173,"^O","cljs.core/assoc"]],"^2S",[["^ ","^2D",133,"^2E",4173,"^O","c"]]],"~i2082",["^ ","^4I",[["^ ","^2D",0,"^2E",4175]],"^3H",[["^ ","^2D",7,"^2E",4175,"^O","cljs.core/reset!"]],"^38",[["^ ","^2D",29,"^2E",4175,"^O","ret"]],"^2K",[["^ ","^2D",33,"^2E",4175,"^O","c"]]],"~i2083",["^ ","^3S",[["^ ","^2D",4,"^2E",4186,"^O","parsef"]],"^4X",[["^ ","^2D",13,"^2E",4186],["^ ","^2D",0,"^2E",4188]]],"~i2084",["^ ","^2P",[["^ ","^2D",0,"^2E",4188],["^ ","^2D",0,"^2E",4189]],"^4I",[["^ ","^2D",4,"^2E",4188,"^O","root-query"]],"^3W",[["^ ","^2D",17,"^2E",4188]],"^2K",[["^ ","^2D",17,"^2E",4188,"^O","fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$2"]],"^5;",[["^ ","^2D",82,"^2E",4188,"^O","rctor"]],"^5F",[["^ ","^2D",88,"^2E",4188],["^ ","^2D",104,"^2E",4188],["^ ","^2D",104,"^2E",4188]],"^7U",[["^ ","^2D",190,"^2E",4188,"^O","config"]],"^6G",[["^ ","^2D",88,"^2E",4188,"^O","cljs.core/deref"]]],"~i2085",["^ ","^3=",[["^ ","^2D",0,"^2E",4189],["^ ","^2D",0,"^2E",4190],["^ ","^2D",0,"^2E",4191],["^ ","^2D",0,"^2E",4191],["^ ","^2D",6,"^2E",4191],["^ ","^2D",11,"^2E",4191,"^O","js/Error"],["^ ","^2D",17,"^2E",4191],["^ ","^2D",18,"^2E",4191],["^ ","^2D",36,"^2E",4191],["^ ","^2D",78,"^2E",4191],["^ ","^2D",83,"^2E",4191]],"^4Y",[["^ ","^2D",3,"^2E",4189]],"^38",[["^ ","^2D",5,"^2E",4189],["^ ","^2D",20,"^2E",4189]],"^3A",[["^ ","^2D",6,"^2E",4189,"^O","root-query"]],"^4E",[["^ ","^2D",31,"^2E",4189]],"^2U",[["^ ","^2D",31,"^2E",4189,"^O","cljs.core/vector?"]],"^5[",[["^ ","^2D",55,"^2E",4189,"^O","root-query"]]],"~i2086",["^ ","^3=",[["^ ","^2D",0,"^2E",4194],["^ ","^2D",3,"^2E",4194]],"^4Y",[["^ ","^2D",5,"^2E",4194],["^ ","^2D",20,"^2E",4194]],"^2H",[["^ ","^2D",6,"^2E",4194,"^O","root-query"]]],"~i2087",["^ ","^3>",[["^ ","^2D",0,"^2E",4195],["^ ","^2D",0,"^2E",4199]],"^4Y",[["^ ","^2D",4,"^2E",4195,"^O","env"]],"^2M",[["^ ","^2D",10,"^2E",4195]],"^2N",[["^ ","^2D",10,"^2E",4195,"^O","fulcro.client.primitives/to-env"]],"^3Z",[["^ ","^2D",42,"^2E",4195,"^O","config"]]],"~i2088",["^ ","^4Y",[["^ ","^2D",4,"^2E",4196,"^O","root-props"]],"^2M",[["^ ","^2D",17,"^2E",4196],["^ ","^2D",34,"^2E",4196,"^O","fexpr__39668"],["^ ","^2D",0,"^2E",4197],["^ ","^2D",0,"^2E",4197],["^ ","^2D",8,"^2E",4197,"^O","fexpr__39668"],["^ ","^2D",53,"^2E",4197,"^O","fexpr__39668"],["^ ","^2D",114,"^2E",4197,"^O","fexpr__39668"]],"^2N",[["^ ","^2D",49,"^2E",4196],["^ ","^2D",49,"^2E",4196]],"^2S",[["^ ","^2D",137,"^2E",4196,"^O","config"]],"^4B",[["^ ","^2D",96,"^2E",4197,"^O","env"],["^ ","^2D",137,"^2E",4197,"^O","env"]],"^61",[["^ ","^2D",100,"^2E",4197,"^O","root-query"],["^ ","^2D",141,"^2E",4197,"^O","root-query"]]],"~i2089",["^ ","^4I",[["^ ","^2D",0,"^2E",4199],["^ ","^2D",0,"^2E",4200],["^ ","^2D",0,"^2E",4209]],"^2C",[["^ ","^2D",3,"^2E",4199]],"^3E",[["^ ","^2D",3,"^2E",4199,"^O","cljs.core/empty?"]],"^3A",[["^ ","^2D",26,"^2E",4199,"^O","root-props"]]],"~i2090",["^ ","^2X",[["^ ","^2D",0,"^2E",4200],["^ ","^2D",4,"^2E",4200],["^ ","^2D",4,"^2E",4200],["^ ","^2D",4,"^2E",4200,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",4200],["^ ","^2D",104,"^2E",4200],["^ ","^2D",158,"^2E",4200],["^ ","^2D",185,"^2E",4200],["^ ","^2D",237,"^2E",4200],["^ ","^2D",250,"^2E",4200],["^ ","^2D",353,"^2E",4200],["^ ","^2D",16,"^2E",4201],["^ ","^2D",19,"^2E",4201],["^ ","^2D",20,"^2E",4201,"^O","e39669"],["^ ","^2D",38,"^2E",4201,"^O","js/Error"],["^ ","^2D",0,"^2E",4202],["^ ","^2D",4,"^2E",4202,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",4202,"^O","e39669"],["^ ","^2D",0,"^2E",4203],["^ ","^2D",0,"^2E",4203],["^ ","^2D",0,"^2E",4203,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",4203],["^ ","^2D",100,"^2E",4203],["^ ","^2D",154,"^2E",4203],["^ ","^2D",181,"^2E",4203],["^ ","^2D",233,"^2E",4203],["^ ","^2D",246,"^2E",4203],["^ ","^2D",349,"^2E",4203],["^ ","^2D",402,"^2E",4203,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",4205],["^ ","^2D",0,"^2E",4205],["^ ","^2D",6,"^2E",4205,"^O","e39669"]]],"~i2091",["^ ","^4I",[["^ ","^2D",0,"^2E",4211]],"^3H",[["^ ","^2D",7,"^2E",4211,"^O","renderf"]],"^2F",[["^ ","^2D",15,"^2E",4211,"^O","root-props"]]],"~i2092",["^ ","^3>",[["^ ","^2D",0,"^2E",4213],["^ ","^2D",15,"^2E",4213],["^ ","^2D",15,"^2E",4213,"^O","cljs.core/deref"]],"^3L",[["^ ","^2D",7,"^2E",4213,"^O","renderf"]],"^38",[["^ ","^2D",31,"^2E",4213],["^ ","^2D",31,"^2E",4213]],"^2N",[["^ ","^2D",117,"^2E",4213,"^O","config"]]],"~i2093",["^ ","~i8",[["^ ","^2D",0,"^2E",4217],["^ ","^2D",80,"^2E",4217],["^ ","^2D",123,"^2E",4217],["^ ","^2D",186,"^2E",4217],["^ ","^2D",251,"^2E",4217],["^ ","^2D",315,"^2E",4217],["^ ","^2D",392,"^2E",4217]],"~i9",[["^ ","^2D",0,"^2E",4217,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^2J",[["^ ","^2D",51,"^2E",4217,"^O","state"]],"^3D",[["^ ","^2D",64,"^2E",4217,"^O","cljs.core/merge"]]],"~i2094",["^ ","^35",[["^ ","^2D",179,"^2E",4217,"^O","target"]],"^2C",[["^ ","^2D",244,"^2E",4217,"^O","parsef"]],"^5C",[["^ ","^2D",304,"^2E",4217,"^O","root-class"]],"^>?",[["^ ","^2D",384,"^2E",4217,"^O","renderf"]]],"~i2095",["^ ","^35",[["^ ","^2D",449,"^2E",4217],["^ ","^2D",0,"^2E",4219]]],"~i2096",["^ ","^3D",[["^ ","^2D",0,"^2E",4219]],"^2P",[["^ ","^2D",0,"^2E",4219,"^O","cljs.core/remove-watch"]],"^3E",[["^ ","^2D",23,"^2E",4219],["^ ","^2D",23,"^2E",4219]],"^2M",[["^ ","^2D",109,"^2E",4219,"^O","config"]],"^3Z",[["^ ","^2D",124,"^2E",4219]],"^4<",[["^ ","^2D",124,"^2E",4219,"^O","fulcro.client.impl.protocols/get-id"]],"^4B",[["^ ","^2D",160,"^2E",4219,"^O","this"]]],"~i2097",["^ ","^3D",[["^ ","^2D",0,"^2E",4221],["^ ","^2D",64,"^2E",4221],["^ ","^2D",18,"^2E",4222,"^O","p1__39631#"],["^ ","^2D",0,"^2E",4223]],"^2P",[["^ ","^2D",0,"^2E",4221,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^4I",[["^ ","^2D",51,"^2E",4221,"^O","state"]]],"~i2099",["^ ","^3>",[["^ ","^2D",148,"^2E",4223],["^ ","^2D",195,"^2E",4223,"^O","p1__39631#"],["^ ","^2D",212,"^2E",4223]],"^3L",[["^ ","^2D",148,"^2E",4223,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]],"^2M",[["^ ","^2D",101,"^2E",4223],["^ ","^2D",269,"^2E",4223]],"^2N",[["^ ","^2D",101,"^2E",4223,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]],"^7U",[["^ ","^2D",54,"^2E",4223],["^ ","^2D",328,"^2E",4223]],"^4B",[["^ ","^2D",54,"^2E",4223,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]]],"~i2100",["^ ","^3>",[["^ ","^2D",0,"^2E",4223],["^ ","^2D",382,"^2E",4223]],"^3L",[["^ ","^2D",7,"^2E",4223,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]]],"~i2101",["^ ","^3D",[["^ ","^2D",0,"^2E",4227],["^ ","^2D",0,"^2E",4228],["^ ","^2D",0,"^2E",4230]],"^30",[["^ ","^2D",3,"^2E",4227],["^ ","^2D",14,"^2E",4227]],"^2F",[["^ ","^2D",4,"^2E",4227,"^O","target"]]],"~i2102",["^ ","^3Y",[["^ ","^2D",0,"^2E",4230],["^ ","^2D",4,"^2E",4230,"^O","fexpr__39670"],["^ ","^2D",0,"^2E",4231],["^ ","^2D",0,"^2E",4231],["^ ","^2D",8,"^2E",4231,"^O","fexpr__39670"],["^ ","^2D",53,"^2E",4231,"^O","fexpr__39670"],["^ ","^2D",106,"^2E",4231,"^O","fexpr__39670"]],"^3=",[["^ ","^2D",19,"^2E",4230],["^ ","^2D",19,"^2E",4230]],"^3W",[["^ ","^2D",118,"^2E",4230,"^O","config"]],"^5C",[["^ ","^2D",96,"^2E",4231,"^O","target"],["^ ","^2D",129,"^2E",4231,"^O","target"]]],"~i2103",["^ ","~i8",[["^ ","^2D",0,"^2E",4236]],"~i9",[["^ ","^2D",0,"^2E",4236,"^O","cljs.core/add-watch"]],"^35",[["^ ","^2D",20,"^2E",4236],["^ ","^2D",20,"^2E",4236]],"^3L",[["^ ","^2D",106,"^2E",4236,"^O","config"]],"^3E",[["^ ","^2D",121,"^2E",4236]],"^38",[["^ ","^2D",121,"^2E",4236,"^O","fulcro.client.impl.protocols/get-id"]],"^4>",[["^ ","^2D",157,"^2E",4236,"^O","this"]]],"~i2104",["^ ","^2I",[["^ ","^2D",168,"^2E",4236],["^ ","^2D",0,"^2E",4238]],"^2P",[["^ ","^2D",49,"^2E",4237,"^O","_"]],"^3=",[["^ ","^2D",51,"^2E",4237,"^O","_"]],"^3>",[["^ ","^2D",57,"^2E",4237,"^O","_"]],"^4I",[["^ ","^2D",63,"^2E",4237,"^O","_"]]],"~i2106",["^ ","^2J",[["^ ","^2D",0,"^2E",4238],["^ ","^2D",3,"^2E",4238]],"^3Y",[["^ ","^2D",5,"^2E",4238]],"^3=",[["^ ","^2D",5,"^2E",4238,"^O","fulcro.client.primitives/has-query?"]],"^3E",[["^ ","^2D",47,"^2E",4238,"^O","root-class"]]],"~i2107",["^ ","^3K",[["^ ","^2D",0,"^2E",4239]],"^2O",[["^ ","^2D",7,"^2E",4239,"^O","fulcro.client.primitives/queue-render!"]],"^4Y",[["^ ","^2D",51,"^2E",4239,"^O","parsef"]]],"~i2108",["^ ","^3K",[["^ ","^2D",0,"^2E",4241]]],"~i2109",["^ ","^35",[["^ ","^2D",0,"^2E",4241]],"^4X",[["^ ","^2D",0,"^2E",4241,"^O","fulcro.client.impl.protocols/tick!"]],"^4I",[["^ ","^2D",40,"^2E",4241,"^O","this"]]],"~i2110",["^ ","^35",[["^ ","^2D",0,"^2E",4243]],"^4X",[["^ ","^2D",7,"^2E",4243,"^O","fulcro.client.primitives/schedule-render!"]],"^2F",[["^ ","^2D",54,"^2E",4243,"^O","this"]]],"~i2111",["^ ","~i8",[["^ ","^2D",0,"^2E",4248]],"~i9",[["^ ","^2D",0,"^2E",4248,"^O","parsef"]]],"~i2112",["^ ","~i9",[["^ ","^2D",23,"^2E",4250,"^O","ret"]]],"~i2114",["^ ","^3K",[["^ ","^2D",126,"^2E",4266,"^O","_"],["^ ","^2D",4,"^2E",4268,"^O","_"]],"^35",[["^ ","^2D",128,"^2E",4266,"^O","target"]]],"~i2115",["^ ","~i4",[["^ ","^2D",0,"^2E",4269],["^ ","^2D",4,"^2E",4269,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",4270],["^ ","^2D",0,"^2E",4270],["^ ","^2D",20,"^2E",4270,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",4271],["^ ","^2D",0,"^2E",4271],["^ ","^2D",13,"^2E",4271,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",4272],["^ ","^2D",0,"^2E",4274]],"^2J",[["^ ","^2D",4,"^2E",4271,"^O","remove"]],"^2P",[["^ ","^2D",25,"^2E",4269],["^ ","^2D",25,"^2E",4269],["^ ","^2D",112,"^2E",4269],["^ ","^2D",112,"^2E",4269,"^O","cljs.core/deref"]],"^4Y",[["^ ","^2D",128,"^2E",4269,"^O","state"]]],"~i2116",["^ ","~i6",[["^ ","^2D",0,"^2E",4272]],"~i7",[["^ ","^2D",8,"^2E",4272,"^O","remove"],["^ ","^2D",47,"^2E",4272,"^O","remove"],["^ ","^2D",88,"^2E",4272,"^O","remove"]]],"~i2118",["^ ","^2G",[["^ ","^2D",122,"^2E",4253,"^O","this"],["^ ","^2D",4,"^2E",4255,"^O","this"]]],"~i2119",["^ ","~i4",[["^ ","^2D",0,"^2E",4256],["^ ","^2D",0,"^2E",4258]],"^2I",[["^ ","^2D",4,"^2E",4256,"^O","root"]],"^3D",[["^ ","^2D",11,"^2E",4256],["^ ","^2D",55,"^2E",4256],["^ ","^2D",55,"^2E",4256,"^O","cljs.core/deref"],["^ ","^2D",85,"^2E",4256]],"^2P",[["^ ","^2D",11,"^2E",4256,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3L",[["^ ","^2D",71,"^2E",4256,"^O","state"]]],"~i2120",["^ ","^2I",[["^ ","^2D",4,"^2E",4257,"^O","root-class"]],"^3D",[["^ ","^2D",17,"^2E",4257]],"^2P",[["^ ","^2D",17,"^2E",4257,"^O","fulcro.client.primitives/react-type"]],"^48",[["^ ","^2D",53,"^2E",4257,"^O","root"]]],"~i2121",["^ ","~i6",[["^ ","^2D",0,"^2E",4258],["^ ","^2D",0,"^2E",4259],["^ ","^2D",0,"^2E",4262]],"^3S",[["^ ","^2D",3,"^2E",4258]],"^2G",[["^ ","^2D",3,"^2E",4258,"^O","fulcro.client.primitives/has-query?"]],"^3=",[["^ ","^2D",45,"^2E",4258,"^O","root"]]],"~i2122",["^ ","~i8",[["^ ","^2D",0,"^2E",4259],["^ ","^2D",0,"^2E",4260]],"^44",[["^ ","^2D",4,"^2E",4259,"^O","indexer"]],"^2P",[["^ ","^2D",14,"^2E",4259],["^ ","^2D",14,"^2E",4259]],"^4Y",[["^ ","^2D",104,"^2E",4259,"^O","config"]]],"~i2123",["^ ","^2I",[["^ ","^2D",0,"^2E",4260]],"^2T",[["^ ","^2D",7,"^2E",4260,"^O","fulcro.client.impl.protocols/index-root"]],"^3=",[["^ ","^2D",47,"^2E",4260],["^ ","^2D",101,"^2E",4260]],"^3V",[["^ ","^2D",47,"^2E",4260,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^30",[["^ ","^2D",93,"^2E",4260,"^O","indexer"]],"^2Q",[["^ ","^2D",157,"^2E",4260],["^ ","^2D",173,"^2E",4260],["^ ","^2D",173,"^2E",4260]],"^5;",[["^ ","^2D",259,"^2E",4260,"^O","config"]],"^2Y",[["^ ","^2D",157,"^2E",4260,"^O","cljs.core/deref"]],"^>?",[["^ ","^2D",276,"^2E",4260,"^O","root-class"]]],"~i2125",["^ ","^2T",[["^ ","^2D",120,"^2E",3927,"^O","this"],["^ ","^2D",4,"^2E",3929,"^O","this"]],"^37",[["^ ","^2D",126,"^2E",3927,"^O","ks"]]],"~i2126",["^ ","~i4",[["^ ","^2D",0,"^2E",3930],["^ ","^2D",91,"^2E",3930]],"~i5",[["^ ","^2D",7,"^2E",3930,"^O","fulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^44",[["^ ","^2D",78,"^2E",3930,"^O","this"]],"^35",[["^ ","^2D",88,"^2E",3930,"^O","ks"]]],"~i2127",["^ ","^2T",[["^ ","^2D",120,"^2E",3933,"^O","_"],["^ ","^2D",4,"^2E",3935,"^O","_"]],"^2G",[["^ ","^2D",122,"^2E",3933,"^O","ks"]],"^37",[["^ ","^2D",125,"^2E",3933,"^O","remote"]]],"~i2128",["^ ","~i4",[["^ ","^2D",0,"^2E",3936],["^ ","^2D",3,"^2E",3936]],"^3S",[["^ ","^2D",5,"^2E",3936],["^ ","^2D",16,"^2E",3936]],"^2O",[["^ ","^2D",6,"^2E",3936,"^O","remote"]]],"~i2129",["^ ","~i6",[["^ ","^2D",0,"^2E",3937],["^ ","^2D",98,"^2E",3937],["^ ","^2D",181,"^2E",3937]],"~i7",[["^ ","^2D",7,"^2E",3937,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic"]],"^2G",[["^ ","^2D",65,"^2E",3937,"^O","state"]],"^35",[["^ ","^2D",78,"^2E",3937,"^O","cljs.core/update-in"]],"^2N",[["^ ","^2D",250,"^2E",3937,"^O","remote"]],"^4<",[["^ ","^2D",265,"^2E",3937,"^O","cljs.core/into"]],"^2V",[["^ ","^2D",330,"^2E",3937,"^O","ks"]]],"~i2130",["^ ","~i6",[["^ ","^2D",0,"^2E",3939],["^ ","^2D",98,"^2E",3939],["^ ","^2D",181,"^2E",3939]],"~i7",[["^ ","^2D",7,"^2E",3939,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic"]],"^2G",[["^ ","^2D",65,"^2E",3939,"^O","state"]],"^35",[["^ ","^2D",78,"^2E",3939,"^O","cljs.core/update-in"]],"^2H",[["^ ","^2D",244,"^2E",3939,"^O","cljs.core/into"]],"^2M",[["^ ","^2D",309,"^2E",3939,"^O","ks"]]],"~i2132",["^ ","^3K",[["^ ","^2D",126,"^2E",3943,"^O","_"],["^ ","^2D",4,"^2E",3945,"^O","_"]],"^35",[["^ ","^2D",128,"^2E",3943,"^O","sends"]]],"~i2133",["^ ","~i4",[["^ ","^2D",0,"^2E",3946],["^ ","^2D",98,"^2E",3946],["^ ","^2D",181,"^2E",3946]],"~i5",[["^ ","^2D",7,"^2E",3946,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic"]],"^2T",[["^ ","^2D",65,"^2E",3946,"^O","state"]],"^3K",[["^ ","^2D",78,"^2E",3946,"^O","cljs.core/update-in"]]],"~i2134",["^ ","~i6",[["^ ","^2D",257,"^2E",3946],["^ ","^2D",257,"^2E",3946]],"^4X",[["^ ","^2D",355,"^2E",3946,"^O","config"]],"^4I",[["^ ","^2D",420,"^2E",3946,"^O","sends"]]],"~i2136",["^ ","^3D",[["^ ","^2D",130,"^2E",4069,"^O","_"],["^ ","^2D",4,"^2E",4071,"^O","_"]]],"~i2137",["^ ","~i4",[["^ ","^2D",0,"^2E",4072],["^ ","^2D",3,"^2E",4072],["^ ","^2D",3,"^2E",4072,"^O","cljs.core/not"],["^ ","^2D",0,"^2E",4077]],"^3S",[["^ ","^2D",17,"^2E",4072],["^ ","^2D",17,"^2E",4072],["^ ","^2D",104,"^2E",4072],["^ ","^2D",104,"^2E",4072,"^O","cljs.core/deref"]],"^2P",[["^ ","^2D",120,"^2E",4072,"^O","state"]]],"~i2138",["^ ","~i6",[["^ ","^2D",0,"^2E",4073],["^ ","^2D",0,"^2E",4075]]],"~i2139",["^ ","~i8",[["^ ","^2D",0,"^2E",4073],["^ ","^2D",80,"^2E",4073],["^ ","^2D",137,"^2E",4073]],"~i9",[["^ ","^2D",0,"^2E",4073,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^2J",[["^ ","^2D",51,"^2E",4073,"^O","state"]],"^3D",[["^ ","^2D",64,"^2E",4073,"^O","cljs.core/assoc"]]],"~i2143",["^ ","^4X",[["^ ","^2D",129,"^2E",4087,"^O","_"],["^ ","^2D",4,"^2E",4089,"^O","_"]]],"~i2144",["^ ","~i4",[["^ ","^2D",0,"^2E",4090],["^ ","^2D",3,"^2E",4090],["^ ","^2D",3,"^2E",4090,"^O","cljs.core/not"],["^ ","^2D",0,"^2E",4095]],"^3S",[["^ ","^2D",17,"^2E",4090],["^ ","^2D",17,"^2E",4090],["^ ","^2D",117,"^2E",4090],["^ ","^2D",117,"^2E",4090,"^O","cljs.core/deref"]],"^4I",[["^ ","^2D",133,"^2E",4090,"^O","state"]]],"~i2145",["^ ","~i6",[["^ ","^2D",0,"^2E",4091],["^ ","^2D",0,"^2E",4093]]],"~i2146",["^ ","~i8",[["^ ","^2D",0,"^2E",4091],["^ ","^2D",80,"^2E",4091],["^ ","^2D",150,"^2E",4091]],"~i9",[["^ ","^2D",0,"^2E",4091,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^2J",[["^ ","^2D",51,"^2E",4091,"^O","state"]],"^3D",[["^ ","^2D",64,"^2E",4091,"^O","cljs.core/assoc"]]],"~i2150",["^ ","^2J",[["^ ","^2D",124,"^2E",4011,"^O","this"],["^ ","^2D",4,"^2E",4013,"^O","this"]]],"~i2151",["^ ","~i4",[["^ ","^2D",0,"^2E",4014],["^ ","^2D",92,"^2E",4014]],"~i5",[["^ ","^2D",7,"^2E",4014,"^O","fulcro.client.impl.protocols.reconcile_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^2O",[["^ ","^2D",82,"^2E",4014,"^O","this"]]],"~i2152",["^ ","^2J",[["^ ","^2D",124,"^2E",4017,"^O","this"],["^ ","^2D",4,"^2E",4019,"^O","this"]],"^4X",[["^ ","^2D",130,"^2E",4017,"^O","remote"]]],"~i2153",["^ ","~i4",[["^ ","^2D",0,"^2E",4020],["^ ","^2D",23,"^2E",4020],["^ ","^2D",23,"^2E",4020,"^O","cljs.core/deref"],["^ ","^2D",0,"^2E",4050]],"^2I",[["^ ","^2D",4,"^2E",4020,"^O","reconciler-state"]],"^48",[["^ ","^2D",39,"^2E",4020,"^O","state"]]],"~i2154",["^ ","^2I",[["^ ","^2D",4,"^2E",4021,"^O","components-to-refresh"]],"^4Y",[["^ ","^2D",28,"^2E",4021],["^ ","^2D",30,"^2E",4021]],"^2K",[["^ ","^2D",32,"^2E",4021],["^ ","^2D",43,"^2E",4021]],"^2Q",[["^ ","^2D",33,"^2E",4021,"^O","remote"]]],"~i2155",["^ ","^2C",[["^ ","^2D",51,"^2E",4021],["^ ","^2D",115,"^2E",4021],["^ ","^2D",198,"^2E",4021]],"^3E",[["^ ","^2D",51,"^2E",4021,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^3A",[["^ ","^2D",98,"^2E",4021,"^O","reconciler-state"]],"^6G",[["^ ","^2D",267,"^2E",4021,"^O","remote"]]],"~i2156",["^ ","^2C",[["^ ","^2D",283,"^2E",4021],["^ ","^2D",283,"^2E",4021]],"^3A",[["^ ","^2D",368,"^2E",4021,"^O","reconciler-state"]]],"~i2157",["^ ","^2I",[["^ ","^2D",4,"^2E",4022,"^O","render-mode"]],"^4Y",[["^ ","^2D",18,"^2E",4022],["^ ","^2D",18,"^2E",4022]],"^2Q",[["^ ","^2D",115,"^2E",4022,"^O","config"]]],"~i2158",["^ ","^2I",[["^ ","^2D",4,"^2E",4023,"^O","force-root?"]],"^4Y",[["^ ","^2D",24,"^2E",4023]],"^38",[["^ ","^2D",26,"^2E",4023]],"^2F",[["^ ","^2D",26,"^2E",4023,"^O","cljs.core/empty?"]],"^2N",[["^ ","^2D",49,"^2E",4023,"^O","components-to-refresh"]],"^3[",[["^ ","^2D",77,"^2E",4023],["^ ","^2D",103,"^2E",4023],["^ ","^2D",184,"^2E",4023],["^ ","^2D",250,"^2E",4023]],"^40",[["^ ","^2D",77,"^2E",4023,"^O","cljs.core/contains?"]],"^3O",[["^ ","^2D",327,"^2E",4023,"^O","render-mode"]],"^47",[["^ ","^2D",345,"^2E",4023,"^O","fulcro.client.primitives/*blindly-render*"]]],"~i2159",["^ ","^2I",[["^ ","^2D",4,"^2E",4024,"^O","blind-refresh?"]],"^4Y",[["^ ","^2D",27,"^2E",4024]],"^38",[["^ ","^2D",29,"^2E",4024],["^ ","^2D",55,"^2E",4024],["^ ","^2D",136,"^2E",4024]],"^2F",[["^ ","^2D",29,"^2E",4024,"^O","cljs.core/contains?"]],"^4J",[["^ ","^2D",213,"^2E",4024,"^O","render-mode"]],"^2[",[["^ ","^2D",231,"^2E",4024,"^O","fulcro.client.primitives/*blindly-render*"]]],"~i2160",["^ ","^2I",[["^ ","^2D",4,"^2E",4025,"^O","rendered-root?"]],"^4Y",[["^ ","^2D",27,"^2E",4025],["^ ","^2D",72,"^2E",4025]],"^48",[["^ ","^2D",27,"^2E",4025,"^O","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i2161",["^ ","^2I",[["^ ","^2D",4,"^2E",4026,"^O","render-root"]],"^4Y",[["^ ","^2D",18,"^2E",4026],["^ ","^2D",0,"^2E",4028]]],"~i2162",["^ ","^2C",[["^ ","^2D",0,"^2E",4028],["^ ","^2D",4,"^2E",4028,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",4029],["^ ","^2D",0,"^2E",4029],["^ ","^2D",20,"^2E",4029,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",4030],["^ ","^2D",16,"^2E",4030,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",4031]],"^2M",[["^ ","^2D",4,"^2E",4030,"^O","do-render"]],"^2S",[["^ ","^2D",25,"^2E",4028],["^ ","^2D",25,"^2E",4028]],"^2W",[["^ ","^2D",113,"^2E",4028,"^O","reconciler-state"]]],"~i2163",["^ ","^38",[["^ ","^2D",0,"^2E",4031],["^ ","^2D",20,"^2E",4031],["^ ","^2D",20,"^2E",4031,"^O","cljs.core/deref"],["^ ","^2D",0,"^2E",4032],["^ ","^2D",0,"^2E",4034]],"^5C",[["^ ","^2D",36,"^2E",4031,"^O","rendered-root?"]]],"~i2164",["^ ","^2H",[["^ ","^2D",0,"^2E",4034],["^ ","^2D",43,"^2E",4034]],"^3W",[["^ ","^2D",0,"^2E",4034,"^O","cljs.core/reset!"]],"^2Q",[["^ ","^2D",22,"^2E",4034,"^O","rendered-root?"]]],"~i2165",["^ ","^2H",[["^ ","^2D",0,"^2E",4036]],"^3W",[["^ ","^2D",8,"^2E",4036,"^O","do-render"],["^ ","^2D",50,"^2E",4036,"^O","do-render"],["^ ","^2D",94,"^2E",4036,"^O","do-render"]]],"~i2166",["^ ","^38",[["^ ","^2D",0,"^2E",4039],["^ ","^2D",4,"^2E",4039],["^ ","^2D",4,"^2E",4039],["^ ","^2D",11,"^2E",4039,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",68,"^2E",4039],["^ ","^2D",111,"^2E",4039],["^ ","^2D",165,"^2E",4039],["^ ","^2D",192,"^2E",4039],["^ ","^2D",244,"^2E",4039],["^ ","^2D",257,"^2E",4039],["^ ","^2D",362,"^2E",4039],["^ ","^2D",16,"^2E",4040],["^ ","^2D",19,"^2E",4040],["^ ","^2D",20,"^2E",4040,"^O","e39652"],["^ ","^2D",38,"^2E",4040,"^O","js/Error"],["^ ","^2D",0,"^2E",4041],["^ ","^2D",4,"^2E",4041,"^O","e__31518__auto__"],["^ ","^2D",23,"^2E",4041,"^O","e39652"],["^ ","^2D",0,"^2E",4042],["^ ","^2D",0,"^2E",4042],["^ ","^2D",7,"^2E",4042,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",64,"^2E",4042],["^ ","^2D",107,"^2E",4042],["^ ","^2D",161,"^2E",4042],["^ ","^2D",188,"^2E",4042],["^ ","^2D",240,"^2E",4042],["^ ","^2D",253,"^2E",4042],["^ ","^2D",358,"^2E",4042],["^ ","^2D",411,"^2E",4042,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",4044],["^ ","^2D",0,"^2E",4044],["^ ","^2D",6,"^2E",4044,"^O","e39652"]]],"~i2169",["^ ","~i6",[["^ ","^2D",0,"^2E",4050],["^ ","^2D",84,"^2E",4050],["^ ","^2D",167,"^2E",4050]],"~i7",[["^ ","^2D",0,"^2E",4050,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^2G",[["^ ","^2D",51,"^2E",4050,"^O","state"]],"^35",[["^ ","^2D",64,"^2E",4050,"^O","cljs.core/update-in"]],"^3W",[["^ ","^2D",232,"^2E",4050,"^O","cljs.core/not"]]],"~i2170",["^ ","~i6",[["^ ","^2D",0,"^2E",4052]],"^2I",[["^ ","^2D",3,"^2E",4052]],"^2J",[["^ ","^2D",5,"^2E",4052],["^ ","^2D",16,"^2E",4052]],"^3D",[["^ ","^2D",6,"^2E",4052,"^O","remote"]]],"~i2171",["^ ","~i8",[["^ ","^2D",0,"^2E",4053],["^ ","^2D",83,"^2E",4053],["^ ","^2D",166,"^2E",4053],["^ ","^2D",250,"^2E",4053]],"~i9",[["^ ","^2D",0,"^2E",4053,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^2J",[["^ ","^2D",51,"^2E",4053,"^O","state"]],"^3D",[["^ ","^2D",64,"^2E",4053,"^O","cljs.core/assoc-in"]],"^4>",[["^ ","^2D",235,"^2E",4053,"^O","remote"]]],"~i2172",["^ ","~i8",[["^ ","^2D",0,"^2E",4055],["^ ","^2D",80,"^2E",4055],["^ ","^2D",135,"^2E",4055]],"~i9",[["^ ","^2D",0,"^2E",4055,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^2J",[["^ ","^2D",51,"^2E",4055,"^O","state"]],"^3D",[["^ ","^2D",64,"^2E",4055,"^O","cljs.core/assoc"]]],"~i2173",["^ ","~i6",[["^ ","^2D",0,"^2E",4058],["^ ","^2D",4,"^2E",4058,"^O","*blindly-render*39654"],["^ ","^2D",0,"^2E",4059],["^ ","^2D",0,"^2E",4059],["^ ","^2D",0,"^2E",4061],["^ ","^2D",4,"^2E",4061],["^ ","^2D",10,"^2E",4066],["^ ","^2D",10,"^2E",4066],["^ ","^2D",64,"^2E",4066,"^O","*blindly-render*39654"]],"^37",[["^ ","^2D",38,"^2E",4058,"^O","fulcro.client.primitives/*blindly-render*"],["^ ","^2D",0,"^2E",4059,"^O","fulcro.client.primitives/*blindly-render*"],["^ ","^2D",10,"^2E",4066,"^O","fulcro.client.primitives/*blindly-render*"]],"^48",[["^ ","^2D",54,"^2E",4059,"^O","blind-refresh?"]]],"~i2174",["^ ","~i8",[["^ ","^2D",4,"^2E",4061]],"^3S",[["^ ","^2D",7,"^2E",4061,"^O","force-root?"]]],"~i2175",["^ ","^2I",[["^ ","^2D",0,"^2E",4062]],"^2T",[["^ ","^2D",7,"^2E",4062,"^O","render-root"]]],"~i2176",["^ ","^2I",[["^ ","^2D",0,"^2E",4064]],"^2T",[["^ ","^2D",7,"^2E",4064,"^O","fulcro.client.primitives/optimal-render"]],"^3>",[["^ ","^2D",47,"^2E",4064,"^O","this"]],"^30",[["^ ","^2D",57,"^2E",4064,"^O","components-to-refresh"]],"^2S",[["^ ","^2D",79,"^2E",4064,"^O","render-root"]]],"~i2178",["^ ","^2I",[["^ ","^2D",119,"^2E",3955,"^O","this"],["^ ","^2D",4,"^2E",3957,"^O","this"]]],"~i2179",["^ ","~i4",[["^ ","^2D",0,"^2E",3958],["^ ","^2D",0,"^2E",3959]],"^2I",[["^ ","^2D",4,"^2E",3958,"^O","sends"]],"^37",[["^ ","^2D",12,"^2E",3958],["^ ","^2D",12,"^2E",3958],["^ ","^2D",110,"^2E",3958],["^ ","^2D",110,"^2E",3958,"^O","cljs.core/deref"]],"^4Y",[["^ ","^2D",126,"^2E",3958,"^O","state"]]],"~i2180",["^ ","~i6",[["^ ","^2D",0,"^2E",3959],["^ ","^2D",0,"^2E",3960],["^ ","^2D",0,"^2E",3962]],"^37",[["^ ","^2D",3,"^2E",3959]],"^3K",[["^ ","^2D",3,"^2E",3959,"^O","cljs.core/empty?"]],"^3=",[["^ ","^2D",26,"^2E",3959,"^O","sends"]]],"~i2181",["^ ","~i8",[["^ ","^2D",0,"^2E",3962]],"~i9",[["^ ","^2D",0,"^2E",3962,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^2J",[["^ ","^2D",51,"^2E",3962,"^O","state"]]],"~i2182",["^ ","^2I",[["^ ","^2D",64,"^2E",3962],["^ ","^2D",0,"^2E",3964]],"^2X",[["^ ","^2D",57,"^2E",3963,"^O","state"]]],"~i2183",["^ ","^37",[["^ ","^2D",99,"^2E",3964,"^O","state"]]],"~i2184",["^ ","^44",[["^ ","^2D",53,"^2E",3964],["^ ","^2D",109,"^2E",3964],["^ ","^2D",177,"^2E",3964]],"^2J",[["^ ","^2D",53,"^2E",3964,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]]],"~i2185",["^ ","^44",[["^ ","^2D",0,"^2E",3964],["^ ","^2D",213,"^2E",3964],["^ ","^2D",283,"^2E",3964]],"^2J",[["^ ","^2D",7,"^2E",3964,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]]],"~i2186",["^ ","~i8",[["^ ","^2D",0,"^2E",3968],["^ ","^2D",4,"^2E",3968,"^O","G__39647"],["^ ","^2D",4,"^2E",3969,"^O","G__39648"],["^ ","^2D",4,"^2E",4006,"^O","fexpr__39646"],["^ ","^2D",0,"^2E",4007],["^ ","^2D",0,"^2E",4007],["^ ","^2D",8,"^2E",4007,"^O","fexpr__39646"],["^ ","^2D",53,"^2E",4007,"^O","fexpr__39646"],["^ ","^2D",96,"^2E",4007,"^O","G__39647"],["^ ","^2D",105,"^2E",4007,"^O","G__39648"],["^ ","^2D",117,"^2E",4007,"^O","fexpr__39646"],["^ ","^2D",140,"^2E",4007,"^O","G__39647"],["^ ","^2D",149,"^2E",4007,"^O","G__39648"]],"~i9",[["^ ","^2D",19,"^2E",4006],["^ ","^2D",19,"^2E",4006]],"^37",[["^ ","^2D",102,"^2E",4006,"^O","config"]],"^3=",[["^ ","^2D",15,"^2E",3968,"^O","sends"]]],"~i2187",["^ ","^2I",[["^ ","^2D",15,"^2E",3969],["^ ","^2D",0,"^2E",3973],["^ ","^2D",0,"^2E",3976],["^ ","^2D",0,"^2E",3979]]],"~i2188",["^ ","^44",[["^ ","^2D",53,"^2E",3972,"^O","resp"]]],"~i2189",["^ ","^2G",[["^ ","^2D",0,"^2E",3973],["^ ","^2D",89,"^2E",3973]],"^44",[["^ ","^2D",7,"^2E",3973,"^O","fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^3D",[["^ ","^2D",74,"^2E",3973,"^O","this"]],"^3>",[["^ ","^2D",84,"^2E",3973,"^O","resp"]]],"~i2190",["^ ","^44",[["^ ","^2D",53,"^2E",3975,"^O","resp"]],"^35",[["^ ","^2D",58,"^2E",3975,"^O","query"]]],"~i2191",["^ ","^2G",[["^ ","^2D",0,"^2E",3976]],"^44",[["^ ","^2D",7,"^2E",3976,"^O","fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^3D",[["^ ","^2D",74,"^2E",3976,"^O","this"]],"^3>",[["^ ","^2D",84,"^2E",3976,"^O","resp"]],"^30",[["^ ","^2D",89,"^2E",3976,"^O","query"]]],"~i2192",["^ ","^44",[["^ ","^2D",53,"^2E",3978,"^O","resp"],["^ ","^2D",44,"^2E",3988,"^O","resp"],["^ ","^2D",53,"^2E",3991,"^O","resp"],["^ ","^2D",53,"^2E",3993,"^O","resp"],["^ ","^2D",53,"^2E",3995,"^O","resp"]],"^35",[["^ ","^2D",58,"^2E",3978,"^O","query"],["^ ","^2D",49,"^2E",3988,"^O","query"],["^ ","^2D",58,"^2E",3993,"^O","query"],["^ ","^2D",58,"^2E",3995,"^O","query"]],"^3V",[["^ ","^2D",64,"^2E",3978,"^O","remote"],["^ ","^2D",55,"^2E",3988,"^O","remote"],["^ ","^2D",64,"^2E",3995,"^O","remote"]]],"~i2193",["^ ","^2G",[["^ ","^2D",0,"^2E",3979],["^ ","^2D",0,"^2E",3980],["^ ","^2D",0,"^2E",3981]],"^3Y",[["^ ","^2D",3,"^2E",3979],["^ ","^2D",14,"^2E",3979]],"^3H",[["^ ","^2D",4,"^2E",3979,"^O","remote"]]],"~i2194",["^ ","^2J",[["^ ","^2D",0,"^2E",3981]],"^37",[["^ ","^2D",0,"^2E",3981,"^O","fulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^3V",[["^ ","^2D",71,"^2E",3981,"^O","this"]],"^2X",[["^ ","^2D",81,"^2E",3981]],"^30",[["^ ","^2D",81,"^2E",3981,"^O","cljs.core/keys"]],"^38",[["^ ","^2D",96,"^2E",3981,"^O","resp"]],"^3A",[["^ ","^2D",102,"^2E",3981,"^O","remote"]]],"~i2195",["^ ","^2G",[["^ ","^2D",0,"^2E",3984]],"^44",[["^ ","^2D",0,"^2E",3984,"^O","fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^3D",[["^ ","^2D",67,"^2E",3984,"^O","this"]],"^3>",[["^ ","^2D",77,"^2E",3984,"^O","resp"]],"^30",[["^ ","^2D",82,"^2E",3984,"^O","query"]],"^2F",[["^ ","^2D",88,"^2E",3984,"^O","remote"]]],"~i2196",["^ ","^2G",[["^ ","^2D",0,"^2E",3986]],"^44",[["^ ","^2D",7,"^2E",3986,"^O","fulcro.client.impl.protocols.reconcile_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^3L",[["^ ","^2D",82,"^2E",3986,"^O","this"]],"^4Y",[["^ ","^2D",92,"^2E",3986,"^O","remote"]]],"~i2198",["^ ","~i0",[["^ ","^2D",0,"^2E",4447],["^ ","^2D",38,"^2E",4495],["^ ","^2D",84,"^2E",4495,"^O","p__39738"],["^ ","^2D",0,"^2E",4496],["^ ","^2D",0,"^2E",4496],["^ ","^2D",4,"^2E",4496,"^O","map__39740"],["^ ","^2D",17,"^2E",4496,"^O","p__39738"],["^ ","^2D",4,"^2E",4497,"^O","map__39740"],["^ ","^2D",21,"^2E",4497],["^ ","^2D",23,"^2E",4497],["^ ","^2D",25,"^2E",4497],["^ ","^2D",27,"^2E",4497],["^ ","^2D",28,"^2E",4497,"^O","map__39740"],["^ ","^2D",42,"^2E",4497],["^ ","^2D",50,"^2E",4497],["^ ","^2D",52,"^2E",4497],["^ ","^2D",54,"^2E",4497],["^ ","^2D",55,"^2E",4497],["^ ","^2D",55,"^2E",4497,"^O","map__39740"],["^ ","^2D",104,"^2E",4497],["^ ","^2D",115,"^2E",4497],["^ ","^2D",116,"^2E",4497,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",4497],["^ ","^2D",148,"^2E",4497,"^O","map__39740"],["^ ","^2D",179,"^2E",4497],["^ ","^2D",184,"^2E",4497],["^ ","^2D",191,"^2E",4497],["^ ","^2D",199,"^2E",4497],["^ ","^2D",199,"^2E",4497,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",4497,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",4497,"^O","map__39740"],["^ ","^2D",276,"^2E",4497,"^O","map__39740"],["^ ","^2D",13,"^2E",4498,"^O","map__39740"],["^ ","^2D",18,"^2E",4499],["^ ","^2D",18,"^2E",4499,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",62,"^2E",4499,"^O","map__39740"],["^ ","^2D",77,"^2E",4499],["^ ","^2D",143,"^2E",4499],["^ ","^2D",18,"^2E",4500,"^O","p1__39733#"],["^ ","^2D",35,"^2E",4500,"^O","p2__39734#"],["^ ","^2D",0,"^2E",4501],["^ ","^2D",16,"^2E",4504],["^ ","^2D",16,"^2E",4504,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",60,"^2E",4504,"^O","map__39740"],["^ ","^2D",75,"^2E",4504],["^ ","^2D",16,"^2E",4505],["^ ","^2D",16,"^2E",4505,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",60,"^2E",4505,"^O","map__39740"],["^ ","^2D",75,"^2E",4505],["^ ","^2D",17,"^2E",4506],["^ ","^2D",17,"^2E",4506,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",61,"^2E",4506,"^O","map__39740"],["^ ","^2D",76,"^2E",4506],["^ ","^2D",18,"^2E",4507],["^ ","^2D",18,"^2E",4507,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",62,"^2E",4507,"^O","map__39740"],["^ ","^2D",77,"^2E",4507],["^ ","^2D",145,"^2E",4507],["^ ","^2D",18,"^2E",4508,"^O","p1__39731#"],["^ ","^2D",35,"^2E",4508,"^O","p2__39732#"],["^ ","^2D",0,"^2E",4509],["^ ","^2D",18,"^2E",4512],["^ ","^2D",18,"^2E",4512,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",62,"^2E",4512,"^O","map__39740"],["^ ","^2D",77,"^2E",4512],["^ ","^2D",14,"^2E",4513],["^ ","^2D",14,"^2E",4513,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",58,"^2E",4513,"^O","map__39740"],["^ ","^2D",73,"^2E",4513],["^ ","^2D",132,"^2E",4513],["^ ","^2D",215,"^2E",4513],["^ ","^2D",18,"^2E",4514],["^ ","^2D",18,"^2E",4514,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",62,"^2E",4514,"^O","map__39740"],["^ ","^2D",77,"^2E",4514],["^ ","^2D",144,"^2E",4514],["^ ","^2D",14,"^2E",4515],["^ ","^2D",14,"^2E",4515,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",58,"^2E",4515,"^O","map__39740"],["^ ","^2D",73,"^2E",4515],["^ ","^2D",14,"^2E",4516],["^ ","^2D",14,"^2E",4516,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",58,"^2E",4516,"^O","map__39740"],["^ ","^2D",73,"^2E",4516],["^ ","^2D",132,"^2E",4516],["^ ","^2D",12,"^2E",4517],["^ ","^2D",12,"^2E",4517,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",56,"^2E",4517,"^O","map__39740"],["^ ","^2D",71,"^2E",4517],["^ ","^2D",16,"^2E",4518],["^ ","^2D",16,"^2E",4518,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",60,"^2E",4518,"^O","map__39740"],["^ ","^2D",75,"^2E",4518],["^ ","^2D",137,"^2E",4518],["^ ","^2D",16,"^2E",4519],["^ ","^2D",16,"^2E",4519,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",60,"^2E",4519,"^O","map__39740"],["^ ","^2D",75,"^2E",4519],["^ ","^2D",13,"^2E",4520],["^ ","^2D",13,"^2E",4520,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",57,"^2E",4520,"^O","map__39740"],["^ ","^2D",72,"^2E",4520],["^ ","^2D",9,"^2E",4521],["^ ","^2D",9,"^2E",4521,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",53,"^2E",4521,"^O","map__39740"],["^ ","^2D",68,"^2E",4521],["^ ","^2D",19,"^2E",4522],["^ ","^2D",19,"^2E",4522,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",63,"^2E",4522,"^O","map__39740"],["^ ","^2D",78,"^2E",4522],["^ ","^2D",147,"^2E",4522],["^ ","^2D",18,"^2E",4523,"^O","p1__39735#"],["^ ","^2D",0,"^2E",4524],["^ ","^2D",11,"^2E",4527],["^ ","^2D",11,"^2E",4527,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",55,"^2E",4527,"^O","map__39740"],["^ ","^2D",70,"^2E",4527],["^ ","^2D",17,"^2E",4528],["^ ","^2D",17,"^2E",4528,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",61,"^2E",4528,"^O","map__39740"],["^ ","^2D",76,"^2E",4528],["^ ","^2D",13,"^2E",4529],["^ ","^2D",13,"^2E",4529,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",57,"^2E",4529,"^O","map__39740"],["^ ","^2D",72,"^2E",4529],["^ ","^2D",0,"^2E",4530],["^ ","^2D",0,"^2E",4530],["^ ","^2D",0,"^2E",4531],["^ ","^2D",0,"^2E",4532],["^ ","^2D",0,"^2E",4532],["^ ","^2D",6,"^2E",4532],["^ ","^2D",11,"^2E",4532,"^O","js/Error"],["^ ","^2D",17,"^2E",4532]],"~i6",[["^ ","^2D",0,"^2E",4495,"^O","fulcro.client.primitives/reconciler"]]],"~i2245",["^ ","^2T",[["^ ","^2D",4,"^2E",4521,"^O","id"]],"^44",[["^ ","^2D",4,"^2E",4517,"^O","state"]],"^4X",[["^ ","^2D",4,"^2E",4529,"^O","shared"]],"^3L",[["^ ","^2D",4,"^2E",4519,"^O","shared-fn"]]],"~i2246",["^ ","^2T",[["^ ","^2D",4,"^2E",4520,"^O","parser"]],"^2O",[["^ ","^2D",4,"^2E",4504,"^O","normalize"]]],"~i2247",["^ ","^2T",[["^ ","^2D",4,"^2E",4527,"^O","send"]],"^37",[["^ ","^2D",4,"^2E",4507,"^O","merge-sends"]],"^4I",[["^ ","^2D",4,"^2E",4513,"^O","remotes"]]],"~i2248",["^ ","^2T",[["^ ","^2D",4,"^2E",4528,"^O","merge-tree"]],"^2P",[["^ ","^2D",4,"^2E",4512,"^O","merge-ident"]]],"~i2249",["^ ","^2T",[["^ ","^2D",4,"^2E",4518,"^O","lifecycle"]]],"~i2250",["^ ","^2T",[["^ ","^2D",4,"^2E",4499,"^O","root-render"]],"^3Y",[["^ ","^2D",4,"^2E",4522,"^O","root-unmount"]]],"~i2251",["^ ","^2T",[["^ ","^2D",4,"^2E",4515,"^O","migrate"]],"^35",[["^ ","^2D",4,"^2E",4514,"^O","render-mode"]]],"~i2252",["^ ","^2T",[["^ ","^2D",4,"^2E",4506,"^O","instrument"]],"^2P",[["^ ","^2D",4,"^2E",4505,"^O","tx-listen"]]],"~i2253",["^ ","^2T",[["^ ","^2D",4,"^2E",4516,"^O","history"]]],"~i2254",["^ ","^3V",[["^ ","^2D",0,"^2E",4509],["^ ","^2D",130,"^2E",4509,"^O","p1__39731#"],["^ ","^2D",147,"^2E",4509,"^O","p2__39732#"]],"^3>",[["^ ","^2D",7,"^2E",4509,"^O","cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic"]],"^2F",[["^ ","^2D",65,"^2E",4509,"^O","cljs.core/into"]]],"~i2260",["^ ","^2C",[["^ ","^2D",0,"^2E",4501],["^ ","^2D",23,"^2E",4501,"^O","p1__39733#"],["^ ","^2D",40,"^2E",4501,"^O","p2__39734#"]],"^3E",[["^ ","^2D",7,"^2E",4501,"^O","js/ReactDOM.render"]]],"~i2262",["^ ","^2C",[["^ ","^2D",0,"^2E",4524],["^ ","^2D",39,"^2E",4524,"^O","p1__39735#"]],"^3E",[["^ ","^2D",7,"^2E",4524,"^O","js/ReactDOM.unmountComponentAtNode"]]],"~i2263",["^ ","^2I",[["^ ","^2D",4,"^2E",4498,"^O","config"]]],"~i2264",["^ ","~i9",[["^ ","^2D",3,"^2E",4530]],"^2I",[["^ ","^2D",3,"^2E",4530,"^O","cljs.core/map?"]],"^2J",[["^ ","^2D",24,"^2E",4530,"^O","config"]]],"~i2265",["^ ","~i2",[["^ ","^2D",0,"^2E",4535],["^ ","^2D",0,"^2E",4545]],"~i8",[["^ ","^2D",4,"^2E",4535,"^O","idxr"]],"^2P",[["^ ","^2D",11,"^2E",4535],["^ ","^2D",52,"^2E",4535],["^ ","^2D",95,"^2E",4535]],"^3Y",[["^ ","^2D",11,"^2E",4535,"^O","fulcro.client.primitives/map->Indexer"]],"^2Q",[["^ ","^2D",154,"^2E",4535],["^ ","^2D",199,"^2E",4535]],"^5C",[["^ ","^2D",154,"^2E",4535,"^O","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i2266",["^ ","~i8",[["^ ","^2D",4,"^2E",4536,"^O","norm?"]]],"~i2267",["^ ","^3Y",[["^ ","^2D",18,"^2E",4536],["^ ","^2D",20,"^2E",4536],["^ ","^2D",22,"^2E",4536],["^ ","^2D",32,"^2E",4536],["^ ","^2D",40,"^2E",4536],["^ ","^2D",42,"^2E",4536],["^ ","^2D",44,"^2E",4536],["^ ","^2D",45,"^2E",4536],["^ ","^2D",89,"^2E",4536],["^ ","^2D",103,"^2E",4536],["^ ","^2D",104,"^2E",4536,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",136,"^2E",4536],["^ ","^2D",163,"^2E",4536],["^ ","^2D",168,"^2E",4536],["^ ","^2D",170,"^2E",4536],["^ ","^2D",172,"^2E",4536],["^ ","^2D",216,"^2E",4536],["^ ","^2D",216,"^2E",4536,"^O","cljs.core/native-satisfies?"],["^ ","^2D",273,"^2E",4536],["^ ","^2D",281,"^2E",4536],["^ ","^2D",281,"^2E",4536,"^O","cljs.core/native-satisfies?"]],"^3E",[["^ ","^2D",250,"^2E",4536,"^O","cljs.core/IAtom"],["^ ","^2D",315,"^2E",4536,"^O","cljs.core/IAtom"]],"^2L",[["^ ","^2D",23,"^2E",4536,"^O","state"],["^ ","^2D",45,"^2E",4536,"^O","state"],["^ ","^2D",136,"^2E",4536,"^O","state"],["^ ","^2D",172,"^2E",4536,"^O","state"],["^ ","^2D",266,"^2E",4536,"^O","state"],["^ ","^2D",331,"^2E",4536,"^O","state"]]],"~i2268",["^ ","~i8",[["^ ","^2D",4,"^2E",4537,"^O","state'"]],"^2P",[["^ ","^2D",25,"^2E",4537]],"^3>",[["^ ","^2D",27,"^2E",4537,"^O","norm?"]],"^4Y",[["^ ","^2D",40,"^2E",4537,"^O","state"]],"^2H",[["^ ","^2D",46,"^2E",4537]],"^3W",[["^ ","^2D",46,"^2E",4537,"^O","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]],"^2N",[["^ ","^2D",91,"^2E",4537,"^O","state"]]],"~i2269",["^ ","~i8",[["^ ","^2D",4,"^2E",4538,"^O","ret"]],"^2P",[["^ ","^2D",10,"^2E",4538],["^ ","^2D",15,"^2E",4538,"^O","fulcro.client.primitives/Reconciler"],["^ ","^2D",51,"^2E",4538],["^ ","^2D",91,"^2E",4538],["^ ","^2D",149,"^2E",4538],["^ ","^2D",214,"^2E",4538],["^ ","^2D",281,"^2E",4538],["^ ","^2D",349,"^2E",4538],["^ ","^2D",408,"^2E",4538],["^ ","^2D",475,"^2E",4538],["^ ","^2D",534,"^2E",4538],["^ ","^2D",590,"^2E",4538],["^ ","^2D",652,"^2E",4538],["^ ","^2D",715,"^2E",4538],["^ ","^2D",773,"^2E",4538],["^ ","^2D",833,"^2E",4538],["^ ","^2D",902,"^2E",4538],["^ ","^2D",955,"^2E",4538],["^ ","^2D",1012,"^2E",4538],["^ ","^2D",1077,"^2E",4538],["^ ","^2D",1143,"^2E",4538],["^ ","^2D",1207,"^2E",4538],["^ ","^2D",1271,"^2E",4538],["^ ","^2D",1050,"^2E",4544],["^ ","^2D",1055,"^2E",4544],["^ ","^2D",1060,"^2E",4544]]],"~i2270",["^ ","^2H",[["^ ","^2D",1339,"^2E",4538,"^O","state'"]],"^2S",[["^ ","^2D",1408,"^2E",4538,"^O","shared"]],"^2[",[["^ ","^2D",1368,"^2E",4538,"^O","shared-fn"]]],"~i2271",["^ ","^2H",[["^ ","^2D",1378,"^2E",4538,"^O","parser"]],"^4E",[["^ ","^2D",1385,"^2E",4538,"^O","idxr"]]],"~i2272",["^ ","^2H",[["^ ","^2D",1403,"^2E",4538,"^O","send"]],"^5F",[["^ ","^2D",1299,"^2E",4538,"^O","merge-sends"]],"^7F",[["^ ","^2D",1311,"^2E",4538,"^O","remotes"]]],"~i2273",["^ ","^2H",[["^ ","^2D",1415,"^2E",4538,"^O","merge-tree"]],"^2W",[["^ ","^2D",1287,"^2E",4538,"^O","merge-ident"]]],"~i2274",["^ ","^2H",[["^ ","^2D",1438,"^2E",4538],["^ ","^2D",1455,"^2E",4538,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",4539],["^ ","^2D",0,"^2E",4539],["^ ","^2D",3,"^2E",4539,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",4540,"^O","or__3949__auto__"]],"^3A",[["^ ","^2D",1474,"^2E",4538]],"^5C",[["^ ","^2D",1476,"^2E",4538,"^O","norm?"]],"^4E",[["^ ","^2D",0,"^2E",4542,"^O","normalize"]]],"~i2275",["^ ","^2H",[["^ ","^2D",1426,"^2E",4538,"^O","root-render"]],"^2Y",[["^ ","^2D",1390,"^2E",4538,"^O","root-unmount"]]],"~i2276",["^ ","^2H",[["^ ","^2D",1319,"^2E",4538,"^O","render-mode"]]],"~i2278",["^ ","^2H",[["^ ","^2D",1331,"^2E",4538,"^O","migrate"]]],"~i2279",["^ ","^2H",[["^ ","^2D",1358,"^2E",4538,"^O","lifecycle"]]],"~i2280",["^ ","^2H",[["^ ","^2D",1276,"^2E",4538,"^O","instrument"]],"^7U",[["^ ","^2D",5,"^2E",4544,"^O","tx-listen"]]],"~i2281",["^ ","^3=",[["^ ","^2D",17,"^2E",4544],["^ ","^2D",62,"^2E",4544],["^ ","^2D",102,"^2E",4544],["^ ","^2D",168,"^2E",4544],["^ ","^2D",237,"^2E",4544],["^ ","^2D",294,"^2E",4544],["^ ","^2D",349,"^2E",4544],["^ ","^2D",419,"^2E",4544],["^ ","^2D",487,"^2E",4544],["^ ","^2D",544,"^2E",4544],["^ ","^2D",602,"^2E",4544],["^ ","^2D",655,"^2E",4544],["^ ","^2D",705,"^2E",4544],["^ ","^2D",753,"^2E",4544],["^ ","^2D",823,"^2E",4544],["^ ","^2D",858,"^2E",4544],["^ ","^2D",863,"^2E",4544],["^ ","^2D",896,"^2E",4544],["^ ","^2D",902,"^2E",4544],["^ ","^2D",937,"^2E",4544],["^ ","^2D",943,"^2E",4544],["^ ","^2D",948,"^2E",4544],["^ ","^2D",956,"^2E",4544],["^ ","^2D",960,"^2E",4544]],"^3V",[["^ ","^2D",17,"^2E",4544,"^O","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i2283",["^ ","^4>",[["^ ","^2D",953,"^2E",4544,"^O","id"]]],"~i2287",["^ ","^4@",[["^ ","^2D",811,"^2E",4544,"^O","norm?"]]],"~i2288",["^ ","^3=",[["^ ","^2D",968,"^2E",4544]],"^3V",[["^ ","^2D",968,"^2E",4544,"^O","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]],"^2X",[["^ ","^2D",1013,"^2E",4544]],"^30",[["^ ","^2D",1013,"^2E",4544,"^O","fulcro.history/new-history"]],"^2R",[["^ ","^2D",1040,"^2E",4544,"^O","history"]]],"~i2289",["^ ","~i4",[["^ ","^2D",0,"^2E",4545,"^O","ret"]]],"~i2291",["^ ","~i0",[["^ ","^2D",0,"^2E",4547],["^ ","^2D",42,"^2E",4550],["^ ","^2D",0,"^2E",4551]],"~i6",[["^ ","^2D",0,"^2E",4550,"^O","fulcro.client.primitives/transact*"]]],"~i2293",["^ ","~i3",[["^ ","^2D",92,"^2E",4550,"^O","reconciler"]],"^44",[["^ ","^2D",103,"^2E",4550,"^O","c"]],"^37",[["^ ","^2D",105,"^2E",4550,"^O","ref"]],"^4X",[["^ ","^2D",109,"^2E",4550,"^O","tx"]]],"~i2294",["^ ","~i2",[["^ ","^2D",0,"^2E",4551],["^ ","^2D",0,"^2E",4552],["^ ","^2D",0,"^2E",4686]],"~i8",[["^ ","^2D",20,"^2E",4551,"^O","reconciler"]]],"~i2295",["^ ","~i4",[["^ ","^2D",0,"^2E",4552]],"~i5",[["^ ","^2D",0,"^2E",4552,"^O","fulcro.client.impl.protocols/tick!"]],"^2G",[["^ ","^2D",40,"^2E",4552,"^O","reconciler"]]],"~i2296",["^ ","~i4",[["^ ","^2D",0,"^2E",4554],["^ ","^2D",16,"^2E",4568],["^ ","^2D",16,"^2E",4568,"^O","cljs.core/deref"],["^ ","^2D",16,"^2E",4591],["^ ","^2D",16,"^2E",4591,"^O","cljs.core/deref"],["^ ","^2D",19,"^2E",4600],["^ ","^2D",62,"^2E",4600],["^ ","^2D",141,"^2E",4600],["^ ","^2D",248,"^2E",4600],["^ ","^2D",351,"^2E",4600],["^ ","^2D",450,"^2E",4600],["^ ","^2D",0,"^2E",4601]],"^2I",[["^ ","^2D",4,"^2E",4554,"^O","cfg"]],"^3H",[["^ ","^2D",10,"^2E",4554],["^ ","^2D",10,"^2E",4554]],"^2H",[["^ ","^2D",96,"^2E",4554,"^O","reconciler"]]],"~i2297",["^ ","^2I",[["^ ","^2D",4,"^2E",4555,"^O","ref"]],"^3H",[["^ ","^2D",14,"^2E",4555]],"^48",[["^ ","^2D",32,"^2E",4555],["^ ","^2D",49,"^2E",4555,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",4556],["^ ","^2D",0,"^2E",4556],["^ ","^2D",20,"^2E",4556,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",4557],["^ ","^2D",4,"^2E",4557,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",4558],["^ ","^2D",0,"^2E",4558],["^ ","^2D",3,"^2E",4558,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",4561,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",4564,"^O","and__3938__auto__"]],"^2H",[["^ ","^2D",69,"^2E",4555,"^O","c"]]],"~i2298",["^ ","^3F",[["^ ","^2D",28,"^2E",4557],["^ ","^2D",30,"^2E",4557],["^ ","^2D",32,"^2E",4557],["^ ","^2D",38,"^2E",4557],["^ ","^2D",46,"^2E",4557],["^ ","^2D",48,"^2E",4557],["^ ","^2D",50,"^2E",4557],["^ ","^2D",61,"^2E",4557],["^ ","^2D",62,"^2E",4557,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",94,"^2E",4557],["^ ","^2D",132,"^2E",4557],["^ ","^2D",137,"^2E",4557],["^ ","^2D",144,"^2E",4557]],"^40",[["^ ","^2D",33,"^2E",4557,"^O","c"],["^ ","^2D",94,"^2E",4557,"^O","c"]],"^>?",[["^ ","^2D",0,"^2E",4559]],"^31",[["^ ","^2D",7,"^2E",4559,"^O","cljs.core/not"]],"^7F",[["^ ","^2D",21,"^2E",4559,"^O","ref"]]],"~i2299",["^ ","^30",[["^ ","^2D",6,"^2E",4566]],"^4Y",[["^ ","^2D",6,"^2E",4566,"^O","fulcro.client.primitives/ident"]],"^2H",[["^ ","^2D",37,"^2E",4566,"^O","c"]],"^2K",[["^ ","^2D",39,"^2E",4566]],"^2L",[["^ ","^2D",39,"^2E",4566,"^O","fulcro.client.primitives/props"]],"^5C",[["^ ","^2D",70,"^2E",4566,"^O","c"]]],"~i2300",["^ ","^30",[["^ ","^2D",74,"^2E",4566,"^O","ref"]]],"~i2301",["^ ","^2I",[["^ ","^2D",4,"^2E",4567,"^O","env"]],"^3H",[["^ ","^2D",10,"^2E",4567],["^ ","^2D",150,"^2E",4567],["^ ","^2D",193,"^2E",4567],["^ ","^2D",270,"^2E",4567]],"^2X",[["^ ","^2D",10,"^2E",4567,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]]],"~i2302",["^ ","^30",[["^ ","^2D",113,"^2E",4567]],"^4Y",[["^ ","^2D",113,"^2E",4567,"^O","fulcro.client.primitives/to-env"]],"^3W",[["^ ","^2D",145,"^2E",4567,"^O","cfg"]]],"~i2303",["^ ","^2N",[["^ ","^2D",259,"^2E",4567,"^O","reconciler"]],"^2Z",[["^ ","^2D",333,"^2E",4567,"^O","c"]]],"~i2304",["^ ","^30",[["^ ","^2D",343,"^2E",4567],["^ ","^2D",370,"^2E",4567],["^ ","^2D",370,"^2E",4567],["^ ","^2D",413,"^2E",4567],["^ ","^2D",480,"^2E",4567]],"^2F",[["^ ","^2D",361,"^2E",4567,"^O","ref"]]],"~i2305",["^ ","^3W",[["^ ","^2D",464,"^2E",4567,"^O","ref"]]],"~i2306",["^ ","^2I",[["^ ","^2D",4,"^2E",4568,"^O","old-state"]],"^2X",[["^ ","^2D",32,"^2E",4568],["^ ","^2D",32,"^2E",4568]],"^2H",[["^ ","^2D",118,"^2E",4568,"^O","cfg"]]],"~i2307",["^ ","^2I",[["^ ","^2D",4,"^2E",4569,"^O","history"]],"^3H",[["^ ","^2D",14,"^2E",4569]],"^2X",[["^ ","^2D",14,"^2E",4569,"^O","fulcro.client.primitives/get-history"]],"^3A",[["^ ","^2D",51,"^2E",4569,"^O","reconciler"]]],"~i2308",["^ ","^2I",[["^ ","^2D",4,"^2E",4570,"^O","v"]],"^3H",[["^ ","^2D",8,"^2E",4570],["^ ","^2D",25,"^2E",4570,"^O","fexpr__39757"],["^ ","^2D",0,"^2E",4571],["^ ","^2D",0,"^2E",4571],["^ ","^2D",8,"^2E",4571,"^O","fexpr__39757"],["^ ","^2D",53,"^2E",4571,"^O","fexpr__39757"],["^ ","^2D",106,"^2E",4571,"^O","fexpr__39757"]],"^2X",[["^ ","^2D",40,"^2E",4570],["^ ","^2D",40,"^2E",4570]],"^3W",[["^ ","^2D",128,"^2E",4570,"^O","cfg"]],"^2N",[["^ ","^2D",96,"^2E",4571,"^O","env"],["^ ","^2D",129,"^2E",4571,"^O","env"]],"^2R",[["^ ","^2D",100,"^2E",4571,"^O","tx"],["^ ","^2D",133,"^2E",4571,"^O","tx"]]],"~i2309",["^ ","^2I",[["^ ","^2D",4,"^2E",4573,"^O","declared-refreshes"]],"^3H",[["^ ","^2D",25,"^2E",4573],["^ ","^2D",42,"^2E",4573,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",4582],["^ ","^2D",0,"^2E",4582],["^ ","^2D",20,"^2E",4582,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",4583,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",4585]],"^48",[["^ ","^2D",61,"^2E",4573],["^ ","^2D",78,"^2E",4573,"^O","G__39762"],["^ ","^2D",4,"^2E",4574,"^O","G__39762"],["^ ","^2D",19,"^2E",4574],["^ ","^2D",21,"^2E",4574],["^ ","^2D",22,"^2E",4574,"^O","G__39762"],["^ ","^2D",34,"^2E",4574],["^ ","^2D",41,"^2E",4574],["^ ","^2D",46,"^2E",4574],["^ ","^2D",61,"^2E",4574,"^O","G__39762"],["^ ","^2D",4,"^2E",4575,"^O","G__39762"],["^ ","^2D",19,"^2E",4575],["^ ","^2D",21,"^2E",4575],["^ ","^2D",22,"^2E",4575,"^O","G__39762"],["^ ","^2D",38,"^2E",4575],["^ ","^2D",45,"^2E",4575],["^ ","^2D",50,"^2E",4575],["^ ","^2D",50,"^2E",4575],["^ ","^2D",185,"^2E",4575,"^O","G__39762"],["^ ","^2D",0,"^2E",4576],["^ ","^2D",0,"^2E",4576],["^ ","^2D",3,"^2E",4576],["^ ","^2D",4,"^2E",4576,"^O","G__39762"],["^ ","^2D",20,"^2E",4576],["^ ","^2D",0,"^2E",4577],["^ ","^2D",0,"^2E",4579],["^ ","^2D",21,"^2E",4579,"^O","G__39762"]],"^2L",[["^ ","^2D",89,"^2E",4573,"^O","v"]],"^2M",[["^ ","^2D",46,"^2E",4574,"^O","cljs.core/meta"]],"^4J",[["^ ","^2D",7,"^2E",4579,"^O","cljs.core/vec"]]],"~i2310",["^ ","^2I",[["^ ","^2D",4,"^2E",4588,"^O","follow-on-reads"]],"^3H",[["^ ","^2D",22,"^2E",4588]],"^2X",[["^ ","^2D",22,"^2E",4588,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"^2F",[["^ ","^2D",69,"^2E",4588,"^O","declared-refreshes"]],"^5F",[["^ ","^2D",88,"^2E",4588]],"^2V",[["^ ","^2D",88,"^2E",4588,"^O","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^2Y",[["^ ","^2D",135,"^2E",4588,"^O","cljs.core/keyword?"]],"^31",[["^ ","^2D",160,"^2E",4588,"^O","tx"]]],"~i2311",["^ ","^2I",[["^ ","^2D",4,"^2E",4589,"^O","tx-time"]],"^3H",[["^ ","^2D",14,"^2E",4589]],"^2X",[["^ ","^2D",14,"^2E",4589,"^O","fulcro.client.primitives/get-current-time"]],"^5C",[["^ ","^2D",56,"^2E",4589,"^O","reconciler"]]],"~i2312",["^ ","^2I",[["^ ","^2D",4,"^2E",4590,"^O","snds"]],"^3H",[["^ ","^2D",11,"^2E",4590]],"^2X",[["^ ","^2D",11,"^2E",4590,"^O","fulcro.client.primitives/gather-sends"]],"^2M",[["^ ","^2D",49,"^2E",4590,"^O","env"]],"^5C",[["^ ","^2D",53,"^2E",4590,"^O","tx"]],"^5;",[["^ ","^2D",56,"^2E",4590],["^ ","^2D",56,"^2E",4590]],"^7U",[["^ ","^2D",145,"^2E",4590,"^O","cfg"]],"^61",[["^ ","^2D",150,"^2E",4590,"^O","tx-time"]]],"~i2313",["^ ","^2I",[["^ ","^2D",4,"^2E",4591,"^O","new-state"]],"^2X",[["^ ","^2D",32,"^2E",4591],["^ ","^2D",32,"^2E",4591]],"^2H",[["^ ","^2D",118,"^2E",4591,"^O","cfg"]]],"~i2314",["^ ","^2I",[["^ ","^2D",4,"^2E",4592,"^O","xs"]],"^3H",[["^ ","^2D",9,"^2E",4592],["^ ","^2D",26,"^2E",4592,"^O","G__39763"],["^ ","^2D",4,"^2E",4593,"^O","G__39763"],["^ ","^2D",19,"^2E",4593],["^ ","^2D",94,"^2E",4593,"^O","G__39763"],["^ ","^2D",0,"^2E",4594],["^ ","^2D",0,"^2E",4594],["^ ","^2D",0,"^2E",4597,"^O","G__39763"]],"^2F",[["^ ","^2D",37,"^2E",4592,"^O","follow-on-reads"]]],"~i2315",["^ ","^30",[["^ ","^2D",21,"^2E",4593]],"^38",[["^ ","^2D",23,"^2E",4593],["^ ","^2D",29,"^2E",4593]],"^3A",[["^ ","^2D",24,"^2E",4593,"^O","c"]],"^2Q",[["^ ","^2D",37,"^2E",4593],["^ ","^2D",82,"^2E",4593,"^O","G__39763"]],"^5C",[["^ ","^2D",37,"^2E",4593,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^4<",[["^ ","^2D",91,"^2E",4593,"^O","c"]]],"~i2316",["^ ","^30",[["^ ","^2D",3,"^2E",4594]],"^38",[["^ ","^2D",5,"^2E",4594],["^ ","^2D",17,"^2E",4594]],"^3A",[["^ ","^2D",6,"^2E",4594,"^O","ref"]],"^2R",[["^ ","^2D",0,"^2E",4595],["^ ","^2D",52,"^2E",4595,"^O","G__39763"]],"^3F",[["^ ","^2D",7,"^2E",4595,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^4E",[["^ ","^2D",65,"^2E",4595,"^O","ref"]]],"~i2317",["^ ","^2I",[["^ ","^2D",4,"^2E",4600,"^O","history-step"]],"^3Z",[["^ ","^2D",138,"^2E",4600,"^O","tx"]]],"~i2318",["^ ","^7U",[["^ ","^2D",235,"^2E",4600],["^ ","^2D",240,"^2E",4600,"^O","js/Date"]]],"~i2319",["^ ","^3Z",[["^ ","^2D",346,"^2E",4600,"^O","snds"]]],"~i2320",["^ ","^3Z",[["^ ","^2D",440,"^2E",4600,"^O","old-state"]]],"~i2321",["^ ","^3Z",[["^ ","^2D",539,"^2E",4600,"^O","new-state"]]],"~i2323",["^ ","~i6",[["^ ","^2D",0,"^2E",4601],["^ ","^2D",0,"^2E",4602],["^ ","^2D",0,"^2E",4604]],"^3S",[["^ ","^2D",20,"^2E",4601,"^O","history"]]],"~i2324",["^ ","~i8",[["^ ","^2D",0,"^2E",4602]],"~i9",[["^ ","^2D",0,"^2E",4602,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^2J",[["^ ","^2D",51,"^2E",4602,"^O","history"]],"^3Y",[["^ ","^2D",59,"^2E",4602,"^O","fulcro.history/record-history-step"]],"^2R",[["^ ","^2D",94,"^2E",4602,"^O","tx-time"]],"^5F",[["^ ","^2D",102,"^2E",4602,"^O","history-step"]]],"~i2325",["^ ","~i6",[["^ ","^2D",0,"^2E",4606]],"~i7",[["^ ","^2D",0,"^2E",4606,"^O","fulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^37",[["^ ","^2D",71,"^2E",4606,"^O","reconciler"]],"^3L",[["^ ","^2D",82,"^2E",4606]],"^4I",[["^ ","^2D",82,"^2E",4606,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"^48",[["^ ","^2D",127,"^2E",4606,"^O","xs"]],"^38",[["^ ","^2D",130,"^2E",4606]],"^2F",[["^ ","^2D",130,"^2E",4606,"^O","cljs.core.remove.cljs$core$IFn$_invoke$arity$1"]],"^2N",[["^ ","^2D",177,"^2E",4606,"^O","cljs.core/symbol?"]],"^2S",[["^ ","^2D",202,"^2E",4606]],"^4E",[["^ ","^2D",202,"^2E",4606,"^O","cljs.core/keys"]],"^4@",[["^ ","^2D",217,"^2E",4606,"^O","v"]]],"~i2326",["^ ","~i6",[["^ ","^2D",0,"^2E",4608],["^ ","^2D",0,"^2E",4609],["^ ","^2D",0,"^2E",4610]],"^37",[["^ ","^2D",3,"^2E",4608]],"^3K",[["^ ","^2D",3,"^2E",4608,"^O","cljs.core/empty?"]],"^3=",[["^ ","^2D",26,"^2E",4608,"^O","snds"]]],"~i2327",["^ ","~i8",[["^ ","^2D",0,"^2E",4610],["^ ","^2D",4,"^2E",4610,"^O","seq__39764"],["^ ","^2D",23,"^2E",4610],["^ ","^2D",23,"^2E",4610,"^O","cljs.core/seq"],["^ ","^2D",4,"^2E",4611,"^O","chunk__39765"],["^ ","^2D",25,"^2E",4611],["^ ","^2D",4,"^2E",4612,"^O","count__39766"],["^ ","^2D",25,"^2E",4612],["^ ","^2D",4,"^2E",4613,"^O","i__39767"],["^ ","^2D",21,"^2E",4613],["^ ","^2D",0,"^2E",4615],["^ ","^2D",0,"^2E",4615],["^ ","^2D",3,"^2E",4615],["^ ","^2D",3,"^2E",4615],["^ ","^2D",4,"^2E",4615,"^O","i__39767"],["^ ","^2D",21,"^2E",4615,"^O","count__39766"],["^ ","^2D",0,"^2E",4616],["^ ","^2D",4,"^2E",4616,"^O","vec__39768"],["^ ","^2D",23,"^2E",4616],["^ ","^2D",23,"^2E",4616,"^O","chunk__39765"],["^ ","^2D",79,"^2E",4616,"^O","i__39767"],["^ ","^2D",19,"^2E",4617],["^ ","^2D",19,"^2E",4617,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",63,"^2E",4617,"^O","vec__39768"],["^ ","^2D",80,"^2E",4617],["^ ","^2D",84,"^2E",4617],["^ ","^2D",14,"^2E",4618],["^ ","^2D",14,"^2E",4618,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",58,"^2E",4618,"^O","vec__39768"],["^ ","^2D",75,"^2E",4618],["^ ","^2D",79,"^2E",4618],["^ ","^2D",0,"^2E",4619],["^ ","^2D",0,"^2E",4619],["^ ","^2D",0,"^2E",4621],["^ ","^2D",0,"^2E",4622],["^ ","^2D",15,"^2E",4622,"^O","seq__39764"],["^ ","^2D",15,"^2E",4623,"^O","chunk__39765"],["^ ","^2D",15,"^2E",4624,"^O","count__39766"],["^ ","^2D",15,"^2E",4625],["^ ","^2D",16,"^2E",4625,"^O","i__39767"],["^ ","^2D",33,"^2E",4625],["^ ","^2D",0,"^2E",4632],["^ ","^2D",4,"^2E",4632,"^O","temp__5457__auto__"],["^ ","^2D",31,"^2E",4632],["^ ","^2D",31,"^2E",4632,"^O","cljs.core/seq"],["^ ","^2D",45,"^2E",4632,"^O","seq__39764"],["^ ","^2D",0,"^2E",4633],["^ ","^2D",0,"^2E",4633],["^ ","^2D",3,"^2E",4633,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",4634],["^ ","^2D",0,"^2E",4634],["^ ","^2D",4,"^2E",4634,"^O","seq__39764"],["^ ","^2D",27,"^2E",4634,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",4635],["^ ","^2D",0,"^2E",4635],["^ ","^2D",3,"^2E",4635],["^ ","^2D",3,"^2E",4635,"^O","cljs.core/chunked-seq?"],["^ ","^2D",32,"^2E",4635,"^O","seq__39764"],["^ ","^2D",0,"^2E",4636],["^ ","^2D",4,"^2E",4636,"^O","c__4351__auto__"],["^ ","^2D",28,"^2E",4636],["^ ","^2D",28,"^2E",4636,"^O","cljs.core/chunk-first"],["^ ","^2D",50,"^2E",4636,"^O","seq__39764"],["^ ","^2D",0,"^2E",4637],["^ ","^2D",0,"^2E",4637],["^ ","^2D",15,"^2E",4637],["^ ","^2D",15,"^2E",4637,"^O","cljs.core/chunk-rest"],["^ ","^2D",36,"^2E",4637,"^O","seq__39764"],["^ ","^2D",15,"^2E",4638,"^O","c__4351__auto__"],["^ ","^2D",15,"^2E",4639],["^ ","^2D",15,"^2E",4639,"^O","cljs.core/count"],["^ ","^2D",31,"^2E",4639,"^O","c__4351__auto__"],["^ ","^2D",15,"^2E",4640],["^ ","^2D",0,"^2E",4647],["^ ","^2D",4,"^2E",4647,"^O","vec__39774"],["^ ","^2D",23,"^2E",4647],["^ ","^2D",23,"^2E",4647,"^O","cljs.core/first"],["^ ","^2D",39,"^2E",4647,"^O","seq__39764"],["^ ","^2D",19,"^2E",4648],["^ ","^2D",19,"^2E",4648,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",63,"^2E",4648,"^O","vec__39774"],["^ ","^2D",80,"^2E",4648],["^ ","^2D",84,"^2E",4648],["^ ","^2D",14,"^2E",4649],["^ ","^2D",14,"^2E",4649,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",58,"^2E",4649,"^O","vec__39774"],["^ ","^2D",75,"^2E",4649],["^ ","^2D",79,"^2E",4649],["^ ","^2D",0,"^2E",4650],["^ ","^2D",0,"^2E",4650],["^ ","^2D",0,"^2E",4652],["^ ","^2D",0,"^2E",4653],["^ ","^2D",15,"^2E",4653],["^ ","^2D",15,"^2E",4653,"^O","cljs.core/next"],["^ ","^2D",30,"^2E",4653,"^O","seq__39764"],["^ ","^2D",15,"^2E",4654],["^ ","^2D",15,"^2E",4655],["^ ","^2D",15,"^2E",4656],["^ ","^2D",0,"^2E",4664]],"^3K",[["^ ","^2D",4,"^2E",4617,"^O","remote"],["^ ","^2D",4,"^2E",4648,"^O","remote"]],"^3=",[["^ ","^2D",4,"^2E",4618,"^O","_"],["^ ","^2D",4,"^2E",4649,"^O","_"]],"^3L",[["^ ","^2D",37,"^2E",4610,"^O","snds"]]],"~i2328",["^ ","^2I",[["^ ","^2D",0,"^2E",4619],["^ ","^2D",0,"^2E",4650]],"^2T",[["^ ","^2D",0,"^2E",4619,"^O","fulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",0,"^2E",4650,"^O","fulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^4X",[["^ ","^2D",71,"^2E",4619,"^O","reconciler"],["^ ","^2D",71,"^2E",4650,"^O","reconciler"]],"^30",[["^ ","^2D",82,"^2E",4619,"^O","xs"],["^ ","^2D",82,"^2E",4650,"^O","xs"]],"^2C",[["^ ","^2D",85,"^2E",4619,"^O","remote"],["^ ","^2D",85,"^2E",4650,"^O","remote"]]],"~i2329",["^ ","~i8",[["^ ","^2D",0,"^2E",4669]],"~i9",[["^ ","^2D",0,"^2E",4669,"^O","fulcro.client.impl.protocols/queue-sends!"]],"^3=",[["^ ","^2D",47,"^2E",4669,"^O","reconciler"]],"^3E",[["^ ","^2D",58,"^2E",4669,"^O","snds"]]],"~i2330",["^ ","~i8",[["^ ","^2D",0,"^2E",4671]],"~i9",[["^ ","^2D",0,"^2E",4671,"^O","fulcro.client.primitives/schedule-sends!"]],"^3V",[["^ ","^2D",46,"^2E",4671,"^O","reconciler"]]],"~i2331",["^ ","~i6",[["^ ","^2D",0,"^2E",4674],["^ ","^2D",4,"^2E",4674,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",4675],["^ ","^2D",0,"^2E",4675],["^ ","^2D",20,"^2E",4675,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",4676],["^ ","^2D",0,"^2E",4676],["^ ","^2D",14,"^2E",4676,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",4677],["^ ","^2D",0,"^2E",4682]],"^3K",[["^ ","^2D",4,"^2E",4676,"^O","f"]],"^35",[["^ ","^2D",31,"^2E",4674],["^ ","^2D",31,"^2E",4674]],"^30",[["^ ","^2D",123,"^2E",4674,"^O","cfg"]]],"~i2332",["^ ","~i8",[["^ ","^2D",0,"^2E",4677],["^ ","^2D",0,"^2E",4678]],"^44",[["^ ","^2D",4,"^2E",4677,"^O","tx-data"]],"^2P",[["^ ","^2D",20,"^2E",4677],["^ ","^2D",127,"^2E",4677],["^ ","^2D",170,"^2E",4677],["^ ","^2D",243,"^2E",4677]],"^3Y",[["^ ","^2D",20,"^2E",4677,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]],"^3H",[["^ ","^2D",123,"^2E",4677,"^O","env"]]],"~i2333",["^ ","^38",[["^ ","^2D",233,"^2E",4677,"^O","old-state"]]],"~i2334",["^ ","^38",[["^ ","^2D",306,"^2E",4677,"^O","new-state"]]],"~i2335",["^ ","^2I",[["^ ","^2D",0,"^2E",4678],["^ ","^2D",4,"^2E",4678,"^O","G__39777"],["^ ","^2D",4,"^2E",4679,"^O","G__39778"],["^ ","^2D",0,"^2E",4680],["^ ","^2D",0,"^2E",4680],["^ ","^2D",79,"^2E",4680,"^O","G__39777"],["^ ","^2D",94,"^2E",4680,"^O","G__39778"],["^ ","^2D",130,"^2E",4680,"^O","G__39777"],["^ ","^2D",145,"^2E",4680,"^O","G__39778"]],"^2T",[["^ ","^2D",1,"^2E",4680,"^O","f"],["^ ","^2D",41,"^2E",4680,"^O","f"],["^ ","^2D",112,"^2E",4680,"^O","f"]],"^2G",[["^ ","^2D",21,"^2E",4678,"^O","tx-data"]],"^3D",[["^ ","^2D",21,"^2E",4679],["^ ","^2D",87,"^2E",4679],["^ ","^2D",188,"^2E",4679]],"^2P",[["^ ","^2D",21,"^2E",4679,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"]],"^4I",[["^ ","^2D",74,"^2E",4679,"^O","history-step"]],"^4>",[["^ ","^2D",135,"^2E",4679,"^O","tx"]],"^2S",[["^ ","^2D",239,"^2E",4679,"^O","v"]]],"~i2336",["^ ","~i6",[["^ ","^2D",0,"^2E",4684,"^O","v"]]],"~i2338",["^ ","~i0",[["^ ","^2D",0,"^2E",4689],["^ ","^2D",46,"^2E",4693],["^ ","^2D",0,"^2E",4694]],"~i6",[["^ ","^2D",0,"^2E",4693,"^O","fulcro.client.primitives/annotate-mutations"]]],"~i2341",["^ ","~i3",[["^ ","^2D",100,"^2E",4693,"^O","tx"]],"~i6",[["^ ","^2D",103,"^2E",4693,"^O","ident"]]],"~i2342",["^ ","~i2",[["^ ","^2D",0,"^2E",4694],["^ ","^2D",15,"^2E",4694],["^ ","^2D",0,"^2E",4695],["^ ","^2D",0,"^2E",4702]],"^3D",[["^ ","^2D",80,"^2E",4694,"^O","expr"]],"^3>",[["^ ","^2D",85,"^2E",4694,"^O","ident"]]],"~i2343",["^ ","^3S",[["^ ","^2D",0,"^2E",4695],["^ ","^2D",4,"^2E",4695,"^O","G__39823"],["^ ","^2D",0,"^2E",4696],["^ ","^2D",0,"^2E",4696],["^ ","^2D",0,"^2E",4699,"^O","G__39823"]],"^4X",[["^ ","^2D",15,"^2E",4695,"^O","expr"]]],"~i2344",["^ ","^44",[["^ ","^2D",3,"^2E",4696]],"^2J",[["^ ","^2D",3,"^2E",4696,"^O","fulcro.util/mutation?"]],"^2X",[["^ ","^2D",31,"^2E",4696,"^O","expr"]],"^38",[["^ ","^2D",0,"^2E",4697],["^ ","^2D",57,"^2E",4697,"^O","G__39823"],["^ ","^2D",82,"^2E",4697]],"^2F",[["^ ","^2D",7,"^2E",4697,"^O","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4"]],"^5C",[["^ ","^2D",66,"^2E",4697,"^O","cljs.core/assoc"]],"^2W",[["^ ","^2D",142,"^2E",4697,"^O","ident"]]],"~i2345",["^ ","~i4",[["^ ","^2D",0,"^2E",4702]],"~i5",[["^ ","^2D",7,"^2E",4702,"^O","cljs.core/with-meta"]]],"~i2346",["^ ","~i6",[["^ ","^2D",27,"^2E",4702],["^ ","^2D",72,"^2E",4702]],"~i7",[["^ ","^2D",27,"^2E",4702,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"^2J",[["^ ","^2D",105,"^2E",4702],["^ ","^2D",149,"^2E",4702],["^ ","^2D",160,"^2E",4702,"^O","p1__39818#"],["^ ","^2D",0,"^2E",4703]],"^37",[["^ ","^2D",105,"^2E",4702,"^O","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^3D",[["^ ","^2D",0,"^2E",4703],["^ ","^2D",16,"^2E",4703,"^O","p1__39818#"]],"^2P",[["^ ","^2D",7,"^2E",4703,"^O","annotate"]],"^48",[["^ ","^2D",33,"^2E",4703,"^O","ident"]],"^2L",[["^ ","^2D",4,"^2E",4704,"^O","tx"]]],"~i2347",["^ ","~i6",[["^ ","^2D",8,"^2E",4704]],"~i7",[["^ ","^2D",8,"^2E",4704,"^O","cljs.core/meta"]],"^3S",[["^ ","^2D",23,"^2E",4704,"^O","tx"]]],"~i2349",["^ ","~i0",[["^ ","^2D",0,"^2E",4706],["^ ","^2D",0,"^2E",4706],["^ ","^2D",42,"^2E",4722],["^ ","^2D",92,"^2E",4722,"^O","var_args"],["^ ","^2D",0,"^2E",4723],["^ ","^2D",0,"^2E",4723],["^ ","^2D",4,"^2E",4723,"^O","G__39828"],["^ ","^2D",15,"^2E",4723],["^ ","^2D",15,"^2E",4723],["^ ","^2D",0,"^2E",4724],["^ ","^2D",0,"^2E",4724],["^ ","^2D",8,"^2E",4724,"^O","G__39828"],["^ ","^2D",5,"^2E",4725],["^ ","^2D",0,"^2E",4726],["^ ","^2D",7,"^2E",4726,"^O","fulcro.client.primitives/transact!"],["^ ","^2D",77,"^2E",4726],["^ ","^2D",78,"^2E",4726],["^ ","^2D",88,"^2E",4726],["^ ","^2D",94,"^2E",4726],["^ ","^2D",95,"^2E",4726],["^ ","^2D",105,"^2E",4726],["^ ","^2D",5,"^2E",4729],["^ ","^2D",0,"^2E",4730],["^ ","^2D",7,"^2E",4730,"^O","fulcro.client.primitives/transact!"],["^ ","^2D",77,"^2E",4730],["^ ","^2D",78,"^2E",4730],["^ ","^2D",88,"^2E",4730],["^ ","^2D",94,"^2E",4730],["^ ","^2D",95,"^2E",4730],["^ ","^2D",105,"^2E",4730],["^ ","^2D",111,"^2E",4730],["^ ","^2D",112,"^2E",4730],["^ ","^2D",122,"^2E",4730],["^ ","^2D",0,"^2E",4734],["^ ","^2D",6,"^2E",4734],["^ ","^2D",11,"^2E",4734,"^O","js/Error"],["^ ","^2D",17,"^2E",4734],["^ ","^2D",18,"^2E",4734],["^ ","^2D",80,"^2E",4734],["^ ","^2D",80,"^2E",4734],["^ ","^2D",0,"^2E",4739],["^ ","^2D",0,"^2E",4739],["^ ","^2D",72,"^2E",4739],["^ ","^2D",0,"^2E",4740],["^ ","^2D",0,"^2E",4740],["^ ","^2D",0,"^2E",4741],["^ ","^2D",0,"^2E",4742],["^ ","^2D",0,"^2E",4742],["^ ","^2D",6,"^2E",4742],["^ ","^2D",11,"^2E",4742,"^O","js/Error"],["^ ","^2D",17,"^2E",4742],["^ ","^2D",0,"^2E",4745],["^ ","^2D",0,"^2E",4746],["^ ","^2D",0,"^2E",4747],["^ ","^2D",0,"^2E",4747],["^ ","^2D",6,"^2E",4747],["^ ","^2D",11,"^2E",4747,"^O","js/Error"],["^ ","^2D",17,"^2E",4747],["^ ","^2D",0,"^2E",4816],["^ ","^2D",0,"^2E",4816],["^ ","^2D",72,"^2E",4816],["^ ","^2D",0,"^2E",4817],["^ ","^2D",0,"^2E",4820],["^ ","^2D",0,"^2E",4820],["^ ","^2D",66,"^2E",4820],["^ ","^2D",0,"^2E",4822]],"~i6",[["^ ","^2D",0,"^2E",4722,"^O","fulcro.client.primitives/transact!"],["^ ","^2D",0,"^2E",4739,"^O","fulcro.client.primitives/transact!"],["^ ","^2D",0,"^2E",4816,"^O","fulcro.client.primitives/transact!"],["^ ","^2D",0,"^2E",4820,"^O","fulcro.client.primitives/transact!"]]],"~i2364",["^ ","~i4",[["^ ","^2D",83,"^2E",4739,"^O","x"]],"~i6",[["^ ","^2D",85,"^2E",4739,"^O","tx"]]],"~i2365",["^ ","^2I",[["^ ","^2D",3,"^2E",4740]],"^44",[["^ ","^2D",5,"^2E",4740]],"^2J",[["^ ","^2D",5,"^2E",4740,"^O","fulcro.client.primitives/component?"]],"^3>",[["^ ","^2D",47,"^2E",4740,"^O","x"]]],"~i2366",["^ ","^3S",[["^ ","^2D",55,"^2E",4740]],"^2G",[["^ ","^2D",55,"^2E",4740,"^O","fulcro.client.primitives/reconciler?"]],"^3V",[["^ ","^2D",98,"^2E",4740,"^O","x"]]],"~i2367",["^ ","^2I",[["^ ","^2D",3,"^2E",4745]],"^2T",[["^ ","^2D",3,"^2E",4745,"^O","cljs.core/vector?"]],"^35",[["^ ","^2D",27,"^2E",4745,"^O","tx"]]],"~i2368",["^ ","~i3",[["^ ","^2D",0,"^2E",4750],["^ ","^2D",0,"^2E",4775]],"~i9",[["^ ","^2D",4,"^2E",4750,"^O","tx"]],"^3S",[["^ ","^2D",13,"^2E",4750],["^ ","^2D",30,"^2E",4750,"^O","G__39829"],["^ ","^2D",0,"^2E",4751],["^ ","^2D",0,"^2E",4751],["^ ","^2D",0,"^2E",4772,"^O","G__39829"]],"^4X",[["^ ","^2D",41,"^2E",4750,"^O","tx"]]],"~i2369",["^ ","^44",[["^ ","^2D",3,"^2E",4751],["^ ","^2D",20,"^2E",4751,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",4752],["^ ","^2D",0,"^2E",4752],["^ ","^2D",3,"^2E",4752,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",4767,"^O","and__3938__auto__"]],"^35",[["^ ","^2D",40,"^2E",4751]],"^4X",[["^ ","^2D",40,"^2E",4751,"^O","fulcro.client.primitives/component?"]],"^30",[["^ ","^2D",82,"^2E",4751,"^O","x"]],"^2C",[["^ ","^2D",0,"^2E",4753],["^ ","^2D",3,"^2E",4753],["^ ","^2D",5,"^2E",4753],["^ ","^2D",11,"^2E",4753],["^ ","^2D",0,"^2E",4754],["^ ","^2D",3,"^2E",4754],["^ ","^2D",5,"^2E",4754],["^ ","^2D",16,"^2E",4754],["^ ","^2D",17,"^2E",4754,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",49,"^2E",4754],["^ ","^2D",0,"^2E",4755],["^ ","^2D",0,"^2E",4757],["^ ","^2D",3,"^2E",4757],["^ ","^2D",5,"^2E",4757],["^ ","^2D",0,"^2E",4758],["^ ","^2D",7,"^2E",4758,"^O","cljs.core/native-satisfies?"],["^ ","^2D",0,"^2E",4760],["^ ","^2D",0,"^2E",4764],["^ ","^2D",7,"^2E",4764,"^O","cljs.core/native-satisfies?"]],"^2Q",[["^ ","^2D",41,"^2E",4758,"^O","fulcro.client.primitives/Ident"],["^ ","^2D",41,"^2E",4764,"^O","fulcro.client.primitives/Ident"]],"^4<",[["^ ","^2D",6,"^2E",4753,"^O","x"],["^ ","^2D",49,"^2E",4754,"^O","x"],["^ ","^2D",5,"^2E",4757,"^O","x"],["^ ","^2D",72,"^2E",4758,"^O","x"],["^ ","^2D",72,"^2E",4764,"^O","x"]]],"~i2370",["^ ","^44",[["^ ","^2D",0,"^2E",4770],["^ ","^2D",51,"^2E",4770,"^O","G__39829"]],"^2J",[["^ ","^2D",7,"^2E",4770,"^O","fulcro.client.primitives/annotate-mutations"]],"^2C",[["^ ","^2D",60,"^2E",4770]],"^3E",[["^ ","^2D",60,"^2E",4770,"^O","fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$1"]],"^4>",[["^ ","^2D",125,"^2E",4770,"^O","x"]]],"~i2371",["^ ","~i5",[["^ ","^2D",0,"^2E",4775],["^ ","^2D",0,"^2E",4778],["^ ","^2D",0,"^2E",4790]]],"~i2372",["^ ","~i7",[["^ ","^2D",3,"^2E",4775]],"~i8",[["^ ","^2D",3,"^2E",4775,"^O","fulcro.client.primitives/reconciler?"]],"^4X",[["^ ","^2D",46,"^2E",4775,"^O","x"]],"^3Y",[["^ ","^2D",0,"^2E",4776],["^ ","^2D",49,"^2E",4776],["^ ","^2D",54,"^2E",4776]],"^3=",[["^ ","^2D",7,"^2E",4776,"^O","fulcro.client.primitives/transact*"]],"^2C",[["^ ","^2D",47,"^2E",4776,"^O","x"]],"^2N",[["^ ","^2D",59,"^2E",4776,"^O","tx"]]],"~i2373",["^ ","~i7",[["^ ","^2D",3,"^2E",4778]],"~i8",[["^ ","^2D",3,"^2E",4778,"^O","cljs.core/not"]],"^3S",[["^ ","^2D",17,"^2E",4778]],"^2G",[["^ ","^2D",17,"^2E",4778,"^O","fulcro.client.primitives/some-hasquery?"]],"^4I",[["^ ","^2D",63,"^2E",4778,"^O","x"]],"^4Y",[["^ ","^2D",0,"^2E",4779]]],"~i2374",["^ ","^2C",[["^ ","^2D",0,"^2E",4779],["^ ","^2D",4,"^2E",4779],["^ ","^2D",4,"^2E",4779],["^ ","^2D",4,"^2E",4779,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",4779],["^ ","^2D",104,"^2E",4779],["^ ","^2D",158,"^2E",4779],["^ ","^2D",185,"^2E",4779],["^ ","^2D",237,"^2E",4779],["^ ","^2D",250,"^2E",4779],["^ ","^2D",16,"^2E",4780],["^ ","^2D",19,"^2E",4780],["^ ","^2D",20,"^2E",4780,"^O","e39832"],["^ ","^2D",38,"^2E",4780,"^O","js/Error"],["^ ","^2D",0,"^2E",4781],["^ ","^2D",4,"^2E",4781,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",4781,"^O","e39832"],["^ ","^2D",0,"^2E",4782],["^ ","^2D",0,"^2E",4782],["^ ","^2D",0,"^2E",4782,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",4782],["^ ","^2D",100,"^2E",4782],["^ ","^2D",154,"^2E",4782],["^ ","^2D",181,"^2E",4782],["^ ","^2D",233,"^2E",4782],["^ ","^2D",246,"^2E",4782],["^ ","^2D",351,"^2E",4782],["^ ","^2D",404,"^2E",4782,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",4784],["^ ","^2D",0,"^2E",4784],["^ ","^2D",6,"^2E",4784,"^O","e39832"]]],"~i2375",["^ ","^38",[["^ ","^2D",355,"^2E",4779],["^ ","^2D",356,"^2E",4779],["^ ","^2D",400,"^2E",4779],["^ ","^2D",446,"^2E",4779]]],"~i2378",["^ ","^2C",[["^ ","^2D",0,"^2E",4788],["^ ","^2D",90,"^2E",4788],["^ ","^2D",95,"^2E",4788]],"^3E",[["^ ","^2D",7,"^2E",4788,"^O","fulcro.client.primitives/transact*"]],"^4>",[["^ ","^2D",47,"^2E",4788]],"^2Q",[["^ ","^2D",47,"^2E",4788,"^O","fulcro.client.primitives/get-reconciler"]],"^4B",[["^ ","^2D",87,"^2E",4788,"^O","x"]],"^>?",[["^ ","^2D",100,"^2E",4788,"^O","tx"]]],"~i2379",["^ ","^2G",[["^ ","^2D",0,"^2E",4790]]],"~i2380",["^ ","^2J",[["^ ","^2D",0,"^2E",4790],["^ ","^2D",0,"^2E",4794]],"^2P",[["^ ","^2D",4,"^2E",4790,"^O","p"]],"^3=",[["^ ","^2D",8,"^2E",4790]],"^3V",[["^ ","^2D",8,"^2E",4790,"^O","fulcro.client.primitives/parent"]],"^4Y",[["^ ","^2D",40,"^2E",4790,"^O","x"]],"^3E",[["^ ","^2D",4,"^2E",4791,"^O","x"]],"^2F",[["^ ","^2D",12,"^2E",4791,"^O","x"]],"^3W",[["^ ","^2D",4,"^2E",4792,"^O","tx"]],"^3A",[["^ ","^2D",13,"^2E",4792,"^O","tx"]]],"~i2381",["^ ","^3K",[["^ ","^2D",0,"^2E",4794]],"^3D",[["^ ","^2D",3,"^2E",4794],["^ ","^2D",9,"^2E",4794]],"^3L",[["^ ","^2D",4,"^2E",4794,"^O","p"]]],"~i2382",["^ ","^35",[["^ ","^2D",0,"^2E",4795],["^ ","^2D",0,"^2E",4796]],"^3V",[["^ ","^2D",4,"^2E",4795,"^O","r"]],"^3L",[["^ ","^2D",8,"^2E",4795]],"^4I",[["^ ","^2D",8,"^2E",4795,"^O","fulcro.client.primitives/get-reconciler"]],"^2M",[["^ ","^2D",48,"^2E",4795,"^O","x"]]],"~i2383",["^ ","^3D",[["^ ","^2D",0,"^2E",4796],["^ ","^2D",55,"^2E",4796]],"^2P",[["^ ","^2D",7,"^2E",4796,"^O","fulcro.client.primitives/transact*"]],"^4Y",[["^ ","^2D",47,"^2E",4796,"^O","r"]],"^2C",[["^ ","^2D",49,"^2E",4796,"^O","x"]],"^2K",[["^ ","^2D",60,"^2E",4796,"^O","tx"]]],"~i2384",["^ ","^35",[["^ ","^2D",0,"^2E",4798],["^ ","^2D",4,"^2E",4798,"^O","vec__39836"],["^ ","^2D",21,"^2E",4799],["^ ","^2D",21,"^2E",4799,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",65,"^2E",4799,"^O","vec__39836"],["^ ","^2D",76,"^2E",4799],["^ ","^2D",80,"^2E",4799],["^ ","^2D",13,"^2E",4800],["^ ","^2D",13,"^2E",4800,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",57,"^2E",4800,"^O","vec__39836"],["^ ","^2D",68,"^2E",4800],["^ ","^2D",72,"^2E",4800],["^ ","^2D",0,"^2E",4801]],"^3>",[["^ ","^2D",4,"^2E",4799,"^O","x'"]],"^3H",[["^ ","^2D",4,"^2E",4800,"^O","tx"]],"^48",[["^ ","^2D",17,"^2E",4798],["^ ","^2D",154,"^2E",4798],["^ ","^2D",299,"^2E",4798]]],"~i2385",["^ ","^2Q",[["^ ","^2D",19,"^2E",4798],["^ ","^2D",21,"^2E",4798],["^ ","^2D",23,"^2E",4798],["^ ","^2D",29,"^2E",4798],["^ ","^2D",37,"^2E",4798],["^ ","^2D",39,"^2E",4798],["^ ","^2D",41,"^2E",4798],["^ ","^2D",52,"^2E",4798],["^ ","^2D",53,"^2E",4798,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",85,"^2E",4798],["^ ","^2D",134,"^2E",4798],["^ ","^2D",139,"^2E",4798],["^ ","^2D",146,"^2E",4798]],"^6G",[["^ ","^2D",24,"^2E",4798,"^O","p"],["^ ","^2D",85,"^2E",4798,"^O","p"]]],"~i2386",["^ ","^38",[["^ ","^2D",237,"^2E",4798,"^O","p"]],"^2H",[["^ ","^2D",239,"^2E",4798]],"^3W",[["^ ","^2D",239,"^2E",4798,"^O","fulcro.client.impl.protocols/tx-intercept"]],"^4E",[["^ ","^2D",281,"^2E",4798,"^O","p"]],"^5F",[["^ ","^2D",283,"^2E",4798,"^O","tx"]]],"~i2387",["^ ","^38",[["^ ","^2D",382,"^2E",4798,"^O","x"]],"^2H",[["^ ","^2D",388,"^2E",4798,"^O","tx"]]],"~i2388",["^ ","^3D",[["^ ","^2D",0,"^2E",4801]],"^4I",[["^ ","^2D",15,"^2E",4801]],"^3H",[["^ ","^2D",15,"^2E",4801,"^O","fulcro.client.primitives/parent"]],"^38",[["^ ","^2D",47,"^2E",4801,"^O","p"]],"^3W",[["^ ","^2D",15,"^2E",4802,"^O","x'"]],"^3A",[["^ ","^2D",15,"^2E",4803,"^O","tx"]]],"~i2389",["^ ","~i4",[["^ ","^2D",83,"^2E",4816,"^O","r"]],"~i6",[["^ ","^2D",85,"^2E",4816,"^O","ref"]],"^2I",[["^ ","^2D",89,"^2E",4816,"^O","tx"]]],"~i2390",["^ ","~i3",[["^ ","^2D",0,"^2E",4817],["^ ","^2D",49,"^2E",4817]],"~i4",[["^ ","^2D",7,"^2E",4817,"^O","fulcro.client.primitives/transact*"]],"^44",[["^ ","^2D",47,"^2E",4817,"^O","r"]],"^4X",[["^ ","^2D",54,"^2E",4817,"^O","ref"]],"^3=",[["^ ","^2D",58,"^2E",4817,"^O","tx"]]],"~i2392",["^ ","~i0",[["^ ","^2D",0,"^2E",4822],["^ ","^2D",55,"^2E",4830],["^ ","^2D",0,"^2E",4831]],"~i6",[["^ ","^2D",0,"^2E",4830,"^O","fulcro.client.primitives/compressible-transact!"]]],"~i2399",["^ ","~i3",[["^ ","^2D",118,"^2E",4830,"^O","comp-or-reconciler"]],"^2P",[["^ ","^2D",137,"^2E",4830,"^O","tx"]]],"~i2400",["^ ","~i2",[["^ ","^2D",0,"^2E",4831]],"~i3",[["^ ","^2D",7,"^2E",4831,"^O","fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^2D",77,"^2E",4831,"^O","comp-or-reconciler"]],"^4Y",[["^ ","^2D",96,"^2E",4831]],"^48",[["^ ","^2D",96,"^2E",4831,"^O","fulcro.history/compressible-tx"]],"^4E",[["^ ","^2D",127,"^2E",4831,"^O","tx"]]],"~i2411",["^ ","~i3",[["^ ","^2D",0,"^2E",4833],["^ ","^2D",0,"^2E",4833],["^ ","^2D",43,"^2E",4852],["^ ","^2D",94,"^2E",4852,"^O","var_args"],["^ ","^2D",0,"^2E",4853],["^ ","^2D",0,"^2E",4853],["^ ","^2D",4,"^2E",4853,"^O","G__39855"],["^ ","^2D",15,"^2E",4853],["^ ","^2D",15,"^2E",4853],["^ ","^2D",0,"^2E",4854],["^ ","^2D",0,"^2E",4854],["^ ","^2D",8,"^2E",4854,"^O","G__39855"],["^ ","^2D",5,"^2E",4855],["^ ","^2D",0,"^2E",4856],["^ ","^2D",7,"^2E",4856,"^O","fulcro.client.primitives/set-state!"],["^ ","^2D",78,"^2E",4856],["^ ","^2D",79,"^2E",4856],["^ ","^2D",89,"^2E",4856],["^ ","^2D",95,"^2E",4856],["^ ","^2D",96,"^2E",4856],["^ ","^2D",106,"^2E",4856],["^ ","^2D",112,"^2E",4856],["^ ","^2D",113,"^2E",4856],["^ ","^2D",123,"^2E",4856],["^ ","^2D",5,"^2E",4859],["^ ","^2D",0,"^2E",4860],["^ ","^2D",7,"^2E",4860,"^O","fulcro.client.primitives/set-state!"],["^ ","^2D",78,"^2E",4860],["^ ","^2D",79,"^2E",4860],["^ ","^2D",89,"^2E",4860],["^ ","^2D",95,"^2E",4860],["^ ","^2D",96,"^2E",4860],["^ ","^2D",106,"^2E",4860],["^ ","^2D",0,"^2E",4864],["^ ","^2D",6,"^2E",4864],["^ ","^2D",11,"^2E",4864,"^O","js/Error"],["^ ","^2D",17,"^2E",4864],["^ ","^2D",18,"^2E",4864],["^ ","^2D",80,"^2E",4864],["^ ","^2D",80,"^2E",4864],["^ ","^2D",0,"^2E",4869],["^ ","^2D",0,"^2E",4869],["^ ","^2D",73,"^2E",4869],["^ ","^2D",0,"^2E",4870],["^ ","^2D",0,"^2E",4870],["^ ","^2D",0,"^2E",4871],["^ ","^2D",0,"^2E",4872],["^ ","^2D",0,"^2E",4872],["^ ","^2D",6,"^2E",4872],["^ ","^2D",11,"^2E",4872,"^O","js/Error"],["^ ","^2D",17,"^2E",4872],["^ ","^2D",0,"^2E",4880],["^ ","^2D",0,"^2E",4880],["^ ","^2D",73,"^2E",4880],["^ ","^2D",0,"^2E",4881],["^ ","^2D",0,"^2E",4881],["^ ","^2D",0,"^2E",4882],["^ ","^2D",0,"^2E",4883],["^ ","^2D",0,"^2E",4883],["^ ","^2D",6,"^2E",4883],["^ ","^2D",11,"^2E",4883,"^O","js/Error"],["^ ","^2D",17,"^2E",4883],["^ ","^2D",0,"^2E",4889],["^ ","^2D",0,"^2E",4889],["^ ","^2D",67,"^2E",4889],["^ ","^2D",0,"^2E",4891]],"~i9",[["^ ","^2D",0,"^2E",4852,"^O","fulcro.client.primitives/set-state!"],["^ ","^2D",0,"^2E",4869,"^O","fulcro.client.primitives/set-state!"],["^ ","^2D",0,"^2E",4880,"^O","fulcro.client.primitives/set-state!"],["^ ","^2D",0,"^2E",4889,"^O","fulcro.client.primitives/set-state!"]]],"~i2429",["^ ","~i7",[["^ ","^2D",84,"^2E",4869,"^O","component"]],"^3K",[["^ ","^2D",94,"^2E",4869,"^O","new-state"]],"^3L",[["^ ","^2D",104,"^2E",4869,"^O","callback"]]],"~i2430",["^ ","^2G",[["^ ","^2D",3,"^2E",4870]],"^44",[["^ ","^2D",3,"^2E",4870,"^O","fulcro.client.primitives/component?"]],"^3V",[["^ ","^2D",45,"^2E",4870,"^O","component"]]],"~i2431",["^ ","~i6",[["^ ","^2D",0,"^2E",4875]],"^3K",[["^ ","^2D",7,"^2E",4875,"^O","component"]]],"~i2432",["^ ","~i8",[["^ ","^2D",26,"^2E",4875],["^ ","^2D",0,"^2E",4876],["^ ","^2D",0,"^2E",4876]],"^2G",[["^ ","^2D",37,"^2E",4875,"^O","prev-state"]],"^3=",[["^ ","^2D",48,"^2E",4875,"^O","props"]]],"~i2433",["^ ","^2X",[["^ ","^2D",25,"^2E",4876]],"^30",[["^ ","^2D",25,"^2E",4876,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]],"^2F",[["^ ","^2D",128,"^2E",4876],["^ ","^2D",155,"^2E",4876]],"^2H",[["^ ","^2D",128,"^2E",4876,"^O","goog.object/get"]],"^5C",[["^ ","^2D",144,"^2E",4876,"^O","prev-state"]],"^6G",[["^ ","^2D",171,"^2E",4876,"^O","new-state"]]],"~i2434",["^ ","~i8",[["^ ","^2D",3,"^2E",4877,"^O","callback"]]],"~i2435",["^ ","~i7",[["^ ","^2D",84,"^2E",4880,"^O","component"]],"^3K",[["^ ","^2D",94,"^2E",4880,"^O","new-state"]]],"~i2436",["^ ","^2G",[["^ ","^2D",3,"^2E",4881]],"^44",[["^ ","^2D",3,"^2E",4881,"^O","fulcro.client.primitives/component?"]],"^3V",[["^ ","^2D",45,"^2E",4881,"^O","component"]]],"~i2437",["^ ","~i6",[["^ ","^2D",0,"^2E",4886],["^ ","^2D",98,"^2E",4886]],"~i7",[["^ ","^2D",7,"^2E",4886,"^O","fulcro.client.primitives.set_state_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^2O",[["^ ","^2D",78,"^2E",4886,"^O","component"]],"^4I",[["^ ","^2D",88,"^2E",4886,"^O","new-state"]]],"~i2439",["^ ","~i0",[["^ ","^2D",0,"^2E",4891],["^ ","^2D",0,"^2E",4891],["^ ","^2D",49,"^2E",4894],["^ ","^2D",106,"^2E",4894,"^O","var_args"],["^ ","^2D",0,"^2E",4895],["^ ","^2D",0,"^2E",4895],["^ ","^2D",4,"^2E",4895,"^O","G__39863"],["^ ","^2D",15,"^2E",4895],["^ ","^2D",15,"^2E",4895],["^ ","^2D",0,"^2E",4896],["^ ","^2D",0,"^2E",4896],["^ ","^2D",8,"^2E",4896,"^O","G__39863"],["^ ","^2D",5,"^2E",4897],["^ ","^2D",0,"^2E",4898],["^ ","^2D",7,"^2E",4898,"^O","fulcro.client.primitives/react-set-state!"],["^ ","^2D",84,"^2E",4898],["^ ","^2D",85,"^2E",4898],["^ ","^2D",95,"^2E",4898],["^ ","^2D",101,"^2E",4898],["^ ","^2D",102,"^2E",4898],["^ ","^2D",112,"^2E",4898],["^ ","^2D",5,"^2E",4901],["^ ","^2D",0,"^2E",4902],["^ ","^2D",7,"^2E",4902,"^O","fulcro.client.primitives/react-set-state!"],["^ ","^2D",84,"^2E",4902],["^ ","^2D",85,"^2E",4902],["^ ","^2D",95,"^2E",4902],["^ ","^2D",101,"^2E",4902],["^ ","^2D",102,"^2E",4902],["^ ","^2D",112,"^2E",4902],["^ ","^2D",118,"^2E",4902],["^ ","^2D",119,"^2E",4902],["^ ","^2D",129,"^2E",4902],["^ ","^2D",0,"^2E",4906],["^ ","^2D",6,"^2E",4906],["^ ","^2D",11,"^2E",4906,"^O","js/Error"],["^ ","^2D",17,"^2E",4906],["^ ","^2D",18,"^2E",4906],["^ ","^2D",80,"^2E",4906],["^ ","^2D",80,"^2E",4906],["^ ","^2D",0,"^2E",4911],["^ ","^2D",0,"^2E",4911],["^ ","^2D",79,"^2E",4911],["^ ","^2D",0,"^2E",4912],["^ ","^2D",0,"^2E",4915],["^ ","^2D",0,"^2E",4915],["^ ","^2D",79,"^2E",4915],["^ ","^2D",0,"^2E",4916],["^ ","^2D",0,"^2E",4919],["^ ","^2D",0,"^2E",4919],["^ ","^2D",73,"^2E",4919],["^ ","^2D",0,"^2E",4921]],"~i6",[["^ ","^2D",0,"^2E",4894,"^O","fulcro.client.primitives/react-set-state!"],["^ ","^2D",0,"^2E",4911,"^O","fulcro.client.primitives/react-set-state!"],["^ ","^2D",0,"^2E",4915,"^O","fulcro.client.primitives/react-set-state!"],["^ ","^2D",0,"^2E",4919,"^O","fulcro.client.primitives/react-set-state!"]]],"~i2441",["^ ","~i4",[["^ ","^2D",90,"^2E",4911,"^O","component"]],"^44",[["^ ","^2D",100,"^2E",4911,"^O","new-state"]]],"~i2442",["^ ","~i3",[["^ ","^2D",0,"^2E",4912],["^ ","^2D",104,"^2E",4912]],"~i4",[["^ ","^2D",7,"^2E",4912,"^O","fulcro.client.primitives.react_set_state_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^3D",[["^ ","^2D",84,"^2E",4912,"^O","component"]],"^30",[["^ ","^2D",94,"^2E",4912,"^O","new-state"]]],"~i2443",["^ ","~i4",[["^ ","^2D",90,"^2E",4915,"^O","component"]],"^44",[["^ ","^2D",100,"^2E",4915,"^O","new-state"]],"^3=",[["^ ","^2D",110,"^2E",4915,"^O","cb"]]],"~i2444",["^ ","~i3",[["^ ","^2D",0,"^2E",4916]],"~i4",[["^ ","^2D",7,"^2E",4916,"^O","fulcro.client.primitives.set_state_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^2J",[["^ ","^2D",78,"^2E",4916,"^O","component"]],"^3V",[["^ ","^2D",88,"^2E",4916,"^O","new-state"]],"^3E",[["^ ","^2D",98,"^2E",4916,"^O","cb"]]],"~i2446",["^ ","~i0",[["^ ","^2D",0,"^2E",4921],["^ ","^2D",0,"^2E",4926]],"~i6",[["^ ","^2D",4,"^2E",4921,"^O","update-fn"]],"^37",[["^ ","^2D",22,"^2E",4921],["^ ","^2D",0,"^2E",4922]],"^3D",[["^ ","^2D",33,"^2E",4921,"^O","component"]],"^30",[["^ ","^2D",43,"^2E",4921,"^O","f"]],"^48",[["^ ","^2D",45,"^2E",4921,"^O","args"]]],"~i2447",["^ ","^3L",[["^ ","^2D",0,"^2E",4922]],"^2H",[["^ ","^2D",7,"^2E",4922,"^O","component"]]],"~i2448",["^ ","^3H",[["^ ","^2D",26,"^2E",4922],["^ ","^2D",0,"^2E",4923],["^ ","^2D",0,"^2E",4923]],"^2C",[["^ ","^2D",37,"^2E",4922,"^O","prev-state"]],"^4>",[["^ ","^2D",48,"^2E",4922,"^O","props"]]],"~i2449",["^ ","^3Z",[["^ ","^2D",25,"^2E",4923]],"^4<",[["^ ","^2D",25,"^2E",4923,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$3"]],"^4J",[["^ ","^2D",71,"^2E",4923,"^O","f"]],"^7U",[["^ ","^2D",73,"^2E",4923],["^ ","^2D",100,"^2E",4923]],"^4B",[["^ ","^2D",73,"^2E",4923,"^O","goog.object/get"]],"^>B",[["^ ","^2D",89,"^2E",4923,"^O","prev-state"]],"^=>",[["^ ","^2D",116,"^2E",4923,"^O","args"]]],"~i2450",["^ ","~i2",[["^ ","^2D",0,"^2E",4926],["^ ","^2D",0,"^2E",4926],["^ ","^2D",46,"^2E",4932],["^ ","^2D",61,"^2E",4933,"^O","var_args"],["^ ","^2D",0,"^2E",4934],["^ ","^2D",0,"^2E",4934],["^ ","^2D",4,"^2E",4934,"^O","G__39873"],["^ ","^2D",15,"^2E",4934],["^ ","^2D",15,"^2E",4934],["^ ","^2D",0,"^2E",4935],["^ ","^2D",0,"^2E",4935],["^ ","^2D",8,"^2E",4935,"^O","G__39873"],["^ ","^2D",5,"^2E",4936],["^ ","^2D",0,"^2E",4937],["^ ","^2D",7,"^2E",4937,"^O","fulcro.client.primitives/update-state!"],["^ ","^2D",81,"^2E",4937],["^ ","^2D",82,"^2E",4937],["^ ","^2D",92,"^2E",4937],["^ ","^2D",98,"^2E",4937],["^ ","^2D",99,"^2E",4937],["^ ","^2D",109,"^2E",4937],["^ ","^2D",0,"^2E",4941],["^ ","^2D",4,"^2E",4941,"^O","args-arr__4546__auto__"],["^ ","^2D",29,"^2E",4941],["^ ","^2D",0,"^2E",4942],["^ ","^2D",0,"^2E",4942],["^ ","^2D",4,"^2E",4942,"^O","len__4531__auto__"],["^ ","^2D",30,"^2E",4942],["^ ","^2D",30,"^2E",4942],["^ ","^2D",0,"^2E",4943],["^ ","^2D",0,"^2E",4943],["^ ","^2D",4,"^2E",4943,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",4943],["^ ","^2D",0,"^2E",4945],["^ ","^2D",0,"^2E",4945],["^ ","^2D",3,"^2E",4945],["^ ","^2D",4,"^2E",4945,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",4945,"^O","len__4531__auto__"],["^ ","^2D",0,"^2E",4946],["^ ","^2D",0,"^2E",4946],["^ ","^2D",0,"^2E",4946,"^O","args-arr__4546__auto__"],["^ ","^2D",28,"^2E",4946],["^ ","^2D",29,"^2E",4946],["^ ","^2D",39,"^2E",4946,"^O","i__4532__auto__"],["^ ","^2D",0,"^2E",4948],["^ ","^2D",15,"^2E",4948],["^ ","^2D",16,"^2E",4948,"^O","i__4532__auto__"],["^ ","^2D",40,"^2E",4948],["^ ","^2D",0,"^2E",4952],["^ ","^2D",0,"^2E",4956],["^ ","^2D",4,"^2E",4956,"^O","argseq__4547__auto__"],["^ ","^2D",27,"^2E",4956],["^ ","^2D",32,"^2E",4956,"^O","cljs.core/IndexedSeq"],["^ ","^2D",53,"^2E",4956],["^ ","^2D",53,"^2E",4956,"^O","args-arr__4546__auto__"],["^ ","^2D",82,"^2E",4956],["^ ","^2D",87,"^2E",4956],["^ ","^2D",91,"^2E",4956],["^ ","^2D",0,"^2E",4957],["^ ","^2D",0,"^2E",4957],["^ ","^2D",7,"^2E",4957,"^O","fulcro.client.primitives/update-state!"],["^ ","^2D",88,"^2E",4957],["^ ","^2D",89,"^2E",4957],["^ ","^2D",99,"^2E",4957],["^ ","^2D",105,"^2E",4957],["^ ","^2D",106,"^2E",4957],["^ ","^2D",116,"^2E",4957],["^ ","^2D",122,"^2E",4957,"^O","argseq__4547__auto__"],["^ ","^2D",0,"^2E",4963],["^ ","^2D",0,"^2E",4963],["^ ","^2D",76,"^2E",4963],["^ ","^2D",0,"^2E",4965],["^ ","^2D",0,"^2E",4969],["^ ","^2D",0,"^2E",4969],["^ ","^2D",0,"^2E",4969],["^ ","^2D",83,"^2E",4969],["^ ","^2D",0,"^2E",4971],["^ ","^2D",0,"^2E",4975],["^ ","^2D",0,"^2E",4976],["^ ","^2D",0,"^2E",4976],["^ ","^2D",64,"^2E",4976],["^ ","^2D",18,"^2E",4977,"^O","seq39870"],["^ ","^2D",0,"^2E",4978],["^ ","^2D",0,"^2E",4978],["^ ","^2D",4,"^2E",4978,"^O","G__39871"],["^ ","^2D",15,"^2E",4978],["^ ","^2D",15,"^2E",4978,"^O","cljs.core/first"],["^ ","^2D",31,"^2E",4978,"^O","seq39870"],["^ ","^2D",4,"^2E",4979,"^O","seq39870"],["^ ","^2D",19,"^2E",4979],["^ ","^2D",19,"^2E",4979,"^O","cljs.core/next"],["^ ","^2D",34,"^2E",4979,"^O","seq39870"],["^ ","^2D",4,"^2E",4980,"^O","G__39872"],["^ ","^2D",15,"^2E",4980],["^ ","^2D",15,"^2E",4980,"^O","cljs.core/first"],["^ ","^2D",31,"^2E",4980,"^O","seq39870"],["^ ","^2D",4,"^2E",4981,"^O","seq39870"],["^ ","^2D",19,"^2E",4981],["^ ","^2D",19,"^2E",4981,"^O","cljs.core/next"],["^ ","^2D",34,"^2E",4981,"^O","seq39870"],["^ ","^2D",0,"^2E",4982],["^ ","^2D",0,"^2E",4982],["^ ","^2D",4,"^2E",4982,"^O","self__4518__auto__"],["^ ","^2D",25,"^2E",4982],["^ ","^2D",0,"^2E",4983],["^ ","^2D",0,"^2E",4983],["^ ","^2D",7,"^2E",4983,"^O","self__4518__auto__"],["^ ","^2D",63,"^2E",4983,"^O","G__39871"],["^ ","^2D",72,"^2E",4983,"^O","G__39872"],["^ ","^2D",81,"^2E",4983,"^O","seq39870"],["^ ","^2D",0,"^2E",4987],["^ ","^2D",0,"^2E",4987],["^ ","^2D",70,"^2E",4987],["^ ","^2D",0,"^2E",4989]],"~i8",[["^ ","^2D",0,"^2E",4932,"^O","fulcro.client.primitives/update-state!"],["^ ","^2D",0,"^2E",4963,"^O","fulcro.client.primitives/update-state!"],["^ ","^2D",0,"^2E",4969,"^O","fulcro.client.primitives/update-state!"],["^ ","^2D",0,"^2E",4976,"^O","fulcro.client.primitives/update-state!"],["^ ","^2D",0,"^2E",4987,"^O","fulcro.client.primitives/update-state!"]]],"~i2455",["^ ","~i6",[["^ ","^2D",18,"^2E",4964,"^O","component"]],"^37",[["^ ","^2D",28,"^2E",4964,"^O","f"]]],"~i2456",["^ ","~i5",[["^ ","^2D",0,"^2E",4965],["^ ","^2D",35,"^2E",4965]],"~i6",[["^ ","^2D",7,"^2E",4965,"^O","update-fn"]],"^37",[["^ ","^2D",23,"^2E",4965,"^O","component"]],"^3>",[["^ ","^2D",33,"^2E",4965,"^O","f"]]],"~i2457",["^ ","~i6",[["^ ","^2D",18,"^2E",4970,"^O","component"]],"^37",[["^ ","^2D",28,"^2E",4970,"^O","f"]],"^4X",[["^ ","^2D",30,"^2E",4970,"^O","args"]]],"~i2458",["^ ","~i5",[["^ ","^2D",0,"^2E",4971]],"~i6",[["^ ","^2D",7,"^2E",4971,"^O","update-fn"]],"^37",[["^ ","^2D",23,"^2E",4971,"^O","component"]],"^3>",[["^ ","^2D",33,"^2E",4971,"^O","f"]],"^4I",[["^ ","^2D",35,"^2E",4971,"^O","args"]]],"~i2460",["^ ","~i0",[["^ ","^2D",0,"^2E",4989],["^ ","^2D",37,"^2E",4993],["^ ","^2D",0,"^2E",4994],["^ ","^2D",0,"^2E",4994],["^ ","^2D",0,"^2E",4995],["^ ","^2D",0,"^2E",4996],["^ ","^2D",0,"^2E",4996],["^ ","^2D",6,"^2E",4996],["^ ","^2D",11,"^2E",4996,"^O","js/Error"],["^ ","^2D",17,"^2E",4996]],"~i6",[["^ ","^2D",0,"^2E",4993,"^O","fulcro.client.primitives/app-state"]]],"~i2463",["^ ","~i3",[["^ ","^2D",82,"^2E",4993,"^O","reconciler"]]],"~i2464",["^ ","~i9",[["^ ","^2D",3,"^2E",4994]],"^2I",[["^ ","^2D",3,"^2E",4994,"^O","fulcro.client.primitives/reconciler?"]],"^2P",[["^ ","^2D",46,"^2E",4994,"^O","reconciler"]]],"~i2465",["^ ","~i2",[["^ ","^2D",0,"^2E",4999],["^ ","^2D",7,"^2E",4999],["^ ","^2D",93,"^2E",4999],["^ ","^2D",93,"^2E",4999]],"~i6",[["^ ","^2D",179,"^2E",4999,"^O","reconciler"]]],"~i2467",["^ ","~i0",[["^ ","^2D",0,"^2E",5001],["^ ","^2D",51,"^2E",5004],["^ ","^2D",0,"^2E",5005]],"~i6",[["^ ","^2D",0,"^2E",5004,"^O","fulcro.client.primitives/component->state-map"]]],"~i2469",["^ ","~i3",[["^ ","^2D",110,"^2E",5004,"^O","component"]]],"~i2470",["^ ","~i2",[["^ ","^2D",0,"^2E",5005],["^ ","^2D",4,"^2E",5005,"^O","G__39885"],["^ ","^2D",4,"^2E",5006,"^O","G__39885"],["^ ","^2D",19,"^2E",5006],["^ ","^2D",21,"^2E",5006],["^ ","^2D",22,"^2E",5006,"^O","G__39885"],["^ ","^2D",34,"^2E",5006],["^ ","^2D",41,"^2E",5006],["^ ","^2D",46,"^2E",5006],["^ ","^2D",86,"^2E",5006,"^O","G__39885"],["^ ","^2D",4,"^2E",5007,"^O","G__39885"],["^ ","^2D",19,"^2E",5007],["^ ","^2D",21,"^2E",5007],["^ ","^2D",22,"^2E",5007,"^O","G__39885"],["^ ","^2D",38,"^2E",5007],["^ ","^2D",45,"^2E",5007],["^ ","^2D",50,"^2E",5007],["^ ","^2D",50,"^2E",5007],["^ ","^2D",136,"^2E",5007,"^O","G__39885"],["^ ","^2D",4,"^2E",5008,"^O","G__39885"],["^ ","^2D",19,"^2E",5008],["^ ","^2D",21,"^2E",5008],["^ ","^2D",22,"^2E",5008,"^O","G__39885"],["^ ","^2D",38,"^2E",5008],["^ ","^2D",45,"^2E",5008],["^ ","^2D",50,"^2E",5008],["^ ","^2D",50,"^2E",5008],["^ ","^2D",136,"^2E",5008,"^O","G__39885"],["^ ","^2D",0,"^2E",5009],["^ ","^2D",0,"^2E",5009],["^ ","^2D",3,"^2E",5009],["^ ","^2D",4,"^2E",5009,"^O","G__39885"],["^ ","^2D",20,"^2E",5009],["^ ","^2D",0,"^2E",5010],["^ ","^2D",0,"^2E",5012],["^ ","^2D",23,"^2E",5012,"^O","G__39885"]],"^2I",[["^ ","^2D",15,"^2E",5005,"^O","component"]],"^4X",[["^ ","^2D",46,"^2E",5006,"^O","fulcro.client.primitives/get-reconciler"]],"^5;",[["^ ","^2D",7,"^2E",5012,"^O","cljs.core/deref"]]],"~i2472",["^ ","~i0",[["^ ","^2D",0,"^2E",5015],["^ ","^2D",36,"^2E",5018],["^ ","^2D",0,"^2E",5019],["^ ","^2D",0,"^2E",5019],["^ ","^2D",0,"^2E",5020],["^ ","^2D",0,"^2E",5021],["^ ","^2D",0,"^2E",5021],["^ ","^2D",6,"^2E",5021],["^ ","^2D",11,"^2E",5021,"^O","js/Error"],["^ ","^2D",17,"^2E",5021]],"~i6",[["^ ","^2D",0,"^2E",5018,"^O","fulcro.client.primitives/app-root"]]],"~i2474",["^ ","~i3",[["^ ","^2D",80,"^2E",5018,"^O","reconciler"]]],"~i2475",["^ ","~i9",[["^ ","^2D",3,"^2E",5019]],"^2I",[["^ ","^2D",3,"^2E",5019,"^O","fulcro.client.primitives/reconciler?"]],"^2P",[["^ ","^2D",46,"^2E",5019,"^O","reconciler"]]],"~i2476",["^ ","~i2",[["^ ","^2D",0,"^2E",5024],["^ ","^2D",51,"^2E",5024],["^ ","^2D",51,"^2E",5024,"^O","cljs.core/deref"],["^ ","^2D",166,"^2E",5024]],"~i3",[["^ ","^2D",7,"^2E",5024,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i8",[["^ ","^2D",67,"^2E",5024],["^ ","^2D",67,"^2E",5024]],"^37",[["^ ","^2D",153,"^2E",5024,"^O","reconciler"]]],"~i2478",["^ ","~i0",[["^ ","^2D",0,"^2E",5026],["^ ","^2D",41,"^2E",5029],["^ ","^2D",0,"^2E",5030]],"~i6",[["^ ","^2D",0,"^2E",5029,"^O","fulcro.client.primitives/query->ast"]]],"~i2480",["^ ","~i3",[["^ ","^2D",90,"^2E",5029,"^O","query-expr"]]],"~i2481",["^ ","~i2",[["^ ","^2D",0,"^2E",5030]],"~i3",[["^ ","^2D",7,"^2E",5030,"^O","fulcro.client.impl.parser/query->ast"]],"^3D",[["^ ","^2D",47,"^2E",5030,"^O","query-expr"]]],"~i2483",["^ ","~i0",[["^ ","^2D",0,"^2E",5032],["^ ","^2D",42,"^2E",5035],["^ ","^2D",0,"^2E",5036]],"~i6",[["^ ","^2D",0,"^2E",5035,"^O","fulcro.client.primitives/query->ast1"]]],"~i2485",["^ ","~i3",[["^ ","^2D",92,"^2E",5035,"^O","query-expr"]]],"~i2486",["^ ","~i2",[["^ ","^2D",0,"^2E",5036],["^ ","^2D",23,"^2E",5036],["^ ","^2D",23,"^2E",5036]],"~i6",[["^ ","^2D",114,"^2E",5036]],"~i7",[["^ ","^2D",114,"^2E",5036,"^O","fulcro.client.primitives/query->ast"]],"^2O",[["^ ","^2D",153,"^2E",5036,"^O","query-expr"]],"^2K",[["^ ","^2D",7,"^2E",5036,"^O","cljs.core/first"]]],"~i2488",["^ ","~i0",[["^ ","^2D",0,"^2E",5038],["^ ","^2D",41,"^2E",5038],["^ ","^2D",0,"^2E",5039],["^ ","^2D",0,"^2E",5039]],"~i6",[["^ ","^2D",0,"^2E",5038,"^O","fulcro.client.primitives/ast->query"]],"^2O",[["^ ","^2D",90,"^2E",5038,"^O","query-ast"]]],"~i2490",["^ ","~i2",[["^ ","^2D",0,"^2E",5040],["^ ","^2D",86,"^2E",5040]],"~i3",[["^ ","^2D",7,"^2E",5040,"^O","fulcro.client.impl.parser.ast__GT_expr.cljs$core$IFn$_invoke$arity$2"]],"^4X",[["^ ","^2D",76,"^2E",5040,"^O","query-ast"]]],"~i2492",["^ ","~i0",[["^ ","^2D",0,"^2E",5042],["^ ","^2D",51,"^2E",5048],["^ ","^2D",0,"^2E",5049],["^ ","^2D",0,"^2E",5049],["^ ","^2D",0,"^2E",5050],["^ ","^2D",0,"^2E",5051],["^ ","^2D",0,"^2E",5051],["^ ","^2D",6,"^2E",5051],["^ ","^2D",11,"^2E",5051,"^O","js/Error"],["^ ","^2D",17,"^2E",5051]],"~i6",[["^ ","^2D",0,"^2E",5048,"^O","fulcro.client.primitives/force-root-render!"]]],"~i2497",["^ ","~i3",[["^ ","^2D",110,"^2E",5048,"^O","reconciler"]]],"~i2498",["^ ","~i9",[["^ ","^2D",3,"^2E",5049]],"^2I",[["^ ","^2D",3,"^2E",5049,"^O","fulcro.client.primitives/reconciler?"]],"^2P",[["^ ","^2D",46,"^2E",5049,"^O","reconciler"]]],"~i2499",["^ ","~i2",[["^ ","^2D",0,"^2E",5054],["^ ","^2D",4,"^2E",5054,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",5055],["^ ","^2D",0,"^2E",5055],["^ ","^2D",20,"^2E",5055,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",5056],["^ ","^2D",0,"^2E",5056],["^ ","^2D",13,"^2E",5056,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",5057],["^ ","^2D",0,"^2E",5063]],"^2G",[["^ ","^2D",4,"^2E",5056,"^O","render"]],"^4X",[["^ ","^2D",25,"^2E",5054],["^ ","^2D",69,"^2E",5054],["^ ","^2D",69,"^2E",5054,"^O","cljs.core/deref"],["^ ","^2D",184,"^2E",5054]],"^3D",[["^ ","^2D",25,"^2E",5054,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3>",[["^ ","^2D",85,"^2E",5054],["^ ","^2D",85,"^2E",5054]],"^2C",[["^ ","^2D",171,"^2E",5054,"^O","reconciler"]]],"~i2500",["^ ","~i4",[["^ ","^2D",0,"^2E",5057],["^ ","^2D",4,"^2E",5057,"^O","*blindly-render*39895"],["^ ","^2D",0,"^2E",5058],["^ ","^2D",0,"^2E",5058],["^ ","^2D",54,"^2E",5058],["^ ","^2D",0,"^2E",5060],["^ ","^2D",4,"^2E",5060],["^ ","^2D",10,"^2E",5061],["^ ","^2D",10,"^2E",5061],["^ ","^2D",64,"^2E",5061,"^O","*blindly-render*39895"]],"^44",[["^ ","^2D",38,"^2E",5057,"^O","fulcro.client.primitives/*blindly-render*"],["^ ","^2D",0,"^2E",5058,"^O","fulcro.client.primitives/*blindly-render*"],["^ ","^2D",10,"^2E",5061,"^O","fulcro.client.primitives/*blindly-render*"]]],"~i2501",["^ ","~i6",[["^ ","^2D",4,"^2E",5060]],"~i7",[["^ ","^2D",12,"^2E",5060,"^O","render"],["^ ","^2D",51,"^2E",5060,"^O","render"],["^ ","^2D",92,"^2E",5060,"^O","render"]]],"~i2503",["^ ","~i0",[["^ ","^2D",0,"^2E",5066],["^ ","^2D",0,"^2E",5066],["^ ","^2D",34,"^2E",5069],["^ ","^2D",76,"^2E",5069,"^O","var_args"],["^ ","^2D",0,"^2E",5070],["^ ","^2D",0,"^2E",5070],["^ ","^2D",4,"^2E",5070,"^O","G__39897"],["^ ","^2D",15,"^2E",5070],["^ ","^2D",15,"^2E",5070],["^ ","^2D",0,"^2E",5071],["^ ","^2D",0,"^2E",5071],["^ ","^2D",8,"^2E",5071,"^O","G__39897"],["^ ","^2D",5,"^2E",5072],["^ ","^2D",0,"^2E",5073],["^ ","^2D",7,"^2E",5073,"^O","fulcro.client.primitives/tempid"],["^ ","^2D",5,"^2E",5076],["^ ","^2D",0,"^2E",5077],["^ ","^2D",7,"^2E",5077,"^O","fulcro.client.primitives/tempid"],["^ ","^2D",69,"^2E",5077],["^ ","^2D",70,"^2E",5077],["^ ","^2D",80,"^2E",5077],["^ ","^2D",0,"^2E",5081],["^ ","^2D",6,"^2E",5081],["^ ","^2D",11,"^2E",5081,"^O","js/Error"],["^ ","^2D",17,"^2E",5081],["^ ","^2D",18,"^2E",5081],["^ ","^2D",80,"^2E",5081],["^ ","^2D",80,"^2E",5081],["^ ","^2D",0,"^2E",5086],["^ ","^2D",0,"^2E",5086],["^ ","^2D",64,"^2E",5086],["^ ","^2D",0,"^2E",5087],["^ ","^2D",0,"^2E",5090],["^ ","^2D",0,"^2E",5090],["^ ","^2D",64,"^2E",5090],["^ ","^2D",0,"^2E",5091],["^ ","^2D",0,"^2E",5094],["^ ","^2D",0,"^2E",5094],["^ ","^2D",58,"^2E",5094],["^ ","^2D",0,"^2E",5096]],"~i6",[["^ ","^2D",0,"^2E",5069,"^O","fulcro.client.primitives/tempid"],["^ ","^2D",0,"^2E",5086,"^O","fulcro.client.primitives/tempid"],["^ ","^2D",0,"^2E",5090,"^O","fulcro.client.primitives/tempid"],["^ ","^2D",0,"^2E",5094,"^O","fulcro.client.primitives/tempid"]]],"~i2505",["^ ","~i6",[["^ ","^2D",0,"^2E",5087]],"~i7",[["^ ","^2D",7,"^2E",5087,"^O","fulcro.tempid.tempid.cljs$core$IFn$_invoke$arity$0"]]],"~i2506",["^ ","~i4",[["^ ","^2D",75,"^2E",5090,"^O","id"]],"~i8",[["^ ","^2D",0,"^2E",5091]],"~i9",[["^ ","^2D",7,"^2E",5091,"^O","fulcro.tempid.tempid.cljs$core$IFn$_invoke$arity$1"]],"^3Y",[["^ ","^2D",58,"^2E",5091,"^O","id"]]],"~i2508",["^ ","~i0",[["^ ","^2D",0,"^2E",5096],["^ ","^2D",41,"^2E",5099],["^ ","^2D",0,"^2E",5100]],"~i6",[["^ ","^2D",0,"^2E",5099,"^O","fulcro.client.primitives/tempid?"]]],"~i2511",["^ ","~i3",[["^ ","^2D",90,"^2E",5099,"^O","x"]]],"~i2512",["^ ","~i2",[["^ ","^2D",0,"^2E",5100]],"~i3",[["^ ","^2D",7,"^2E",5100,"^O","fulcro.tempid/tempid?"]],"^2O",[["^ ","^2D",35,"^2E",5100,"^O","x"]]],"~i2515",["^ ","~i3",[["^ ","^2D",0,"^2E",5102],["^ ","^2D",0,"^2E",5102],["^ ","^2D",34,"^2E",5106],["^ ","^2D",76,"^2E",5106,"^O","var_args"],["^ ","^2D",0,"^2E",5107],["^ ","^2D",0,"^2E",5107],["^ ","^2D",4,"^2E",5107,"^O","G__39903"],["^ ","^2D",15,"^2E",5107],["^ ","^2D",15,"^2E",5107],["^ ","^2D",0,"^2E",5108],["^ ","^2D",0,"^2E",5108],["^ ","^2D",8,"^2E",5108,"^O","G__39903"],["^ ","^2D",5,"^2E",5109],["^ ","^2D",0,"^2E",5110],["^ ","^2D",7,"^2E",5110,"^O","fulcro.client.primitives/reader"],["^ ","^2D",5,"^2E",5113],["^ ","^2D",0,"^2E",5114],["^ ","^2D",7,"^2E",5114,"^O","fulcro.client.primitives/reader"],["^ ","^2D",69,"^2E",5114],["^ ","^2D",70,"^2E",5114],["^ ","^2D",80,"^2E",5114],["^ ","^2D",0,"^2E",5118],["^ ","^2D",6,"^2E",5118],["^ ","^2D",11,"^2E",5118,"^O","js/Error"],["^ ","^2D",17,"^2E",5118],["^ ","^2D",18,"^2E",5118],["^ ","^2D",80,"^2E",5118],["^ ","^2D",80,"^2E",5118],["^ ","^2D",0,"^2E",5123],["^ ","^2D",0,"^2E",5123],["^ ","^2D",64,"^2E",5123],["^ ","^2D",0,"^2E",5124],["^ ","^2D",0,"^2E",5127],["^ ","^2D",0,"^2E",5127],["^ ","^2D",64,"^2E",5127],["^ ","^2D",0,"^2E",5128],["^ ","^2D",0,"^2E",5131],["^ ","^2D",0,"^2E",5131],["^ ","^2D",58,"^2E",5131],["^ ","^2D",0,"^2E",5133]],"~i9",[["^ ","^2D",0,"^2E",5106,"^O","fulcro.client.primitives/reader"],["^ ","^2D",0,"^2E",5123,"^O","fulcro.client.primitives/reader"],["^ ","^2D",0,"^2E",5127,"^O","fulcro.client.primitives/reader"],["^ ","^2D",0,"^2E",5131,"^O","fulcro.client.primitives/reader"]]],"~i2518",["^ ","~i9",[["^ ","^2D",0,"^2E",5124]],"^2I",[["^ ","^2D",7,"^2E",5124,"^O","fulcro.transit.reader.cljs$core$IFn$_invoke$arity$0"]]],"~i2519",["^ ","~i7",[["^ ","^2D",75,"^2E",5127,"^O","opts"]],"^2G",[["^ ","^2D",0,"^2E",5128]],"^44",[["^ ","^2D",7,"^2E",5128,"^O","fulcro.transit.reader.cljs$core$IFn$_invoke$arity$1"]],"^3H",[["^ ","^2D",59,"^2E",5128,"^O","opts"]]],"~i2527",["^ ","~i0",[["^ ","^2D",0,"^2E",5133],["^ ","^2D",0,"^2E",5133],["^ ","^2D",34,"^2E",5137],["^ ","^2D",76,"^2E",5137,"^O","var_args"],["^ ","^2D",0,"^2E",5138],["^ ","^2D",0,"^2E",5138],["^ ","^2D",4,"^2E",5138,"^O","G__39909"],["^ ","^2D",15,"^2E",5138],["^ ","^2D",15,"^2E",5138],["^ ","^2D",0,"^2E",5139],["^ ","^2D",0,"^2E",5139],["^ ","^2D",8,"^2E",5139,"^O","G__39909"],["^ ","^2D",5,"^2E",5140],["^ ","^2D",0,"^2E",5141],["^ ","^2D",7,"^2E",5141,"^O","fulcro.client.primitives/writer"],["^ ","^2D",5,"^2E",5144],["^ ","^2D",0,"^2E",5145],["^ ","^2D",7,"^2E",5145,"^O","fulcro.client.primitives/writer"],["^ ","^2D",69,"^2E",5145],["^ ","^2D",70,"^2E",5145],["^ ","^2D",80,"^2E",5145],["^ ","^2D",0,"^2E",5149],["^ ","^2D",6,"^2E",5149],["^ ","^2D",11,"^2E",5149,"^O","js/Error"],["^ ","^2D",17,"^2E",5149],["^ ","^2D",18,"^2E",5149],["^ ","^2D",80,"^2E",5149],["^ ","^2D",80,"^2E",5149],["^ ","^2D",0,"^2E",5154],["^ ","^2D",0,"^2E",5154],["^ ","^2D",64,"^2E",5154],["^ ","^2D",0,"^2E",5155],["^ ","^2D",0,"^2E",5158],["^ ","^2D",0,"^2E",5158],["^ ","^2D",64,"^2E",5158],["^ ","^2D",0,"^2E",5159],["^ ","^2D",0,"^2E",5162],["^ ","^2D",0,"^2E",5162],["^ ","^2D",58,"^2E",5162],["^ ","^2D",0,"^2E",5164]],"~i6",[["^ ","^2D",0,"^2E",5137,"^O","fulcro.client.primitives/writer"],["^ ","^2D",0,"^2E",5154,"^O","fulcro.client.primitives/writer"],["^ ","^2D",0,"^2E",5158,"^O","fulcro.client.primitives/writer"],["^ ","^2D",0,"^2E",5162,"^O","fulcro.client.primitives/writer"]]],"~i2530",["^ ","~i6",[["^ ","^2D",0,"^2E",5155]],"~i7",[["^ ","^2D",7,"^2E",5155,"^O","fulcro.transit.writer.cljs$core$IFn$_invoke$arity$0"]]],"~i2531",["^ ","~i4",[["^ ","^2D",75,"^2E",5158,"^O","opts"]],"^2I",[["^ ","^2D",0,"^2E",5159]],"^2T",[["^ ","^2D",7,"^2E",5159,"^O","fulcro.transit.writer.cljs$core$IFn$_invoke$arity$1"]],"^3>",[["^ ","^2D",59,"^2E",5159,"^O","opts"]]],"~i2533",["^ ","~i0",[["^ ","^2D",0,"^2E",5164],["^ ","^2D",36,"^2E",5168],["^ ","^2D",0,"^2E",5169]],"~i6",[["^ ","^2D",0,"^2E",5168,"^O","fulcro.client.primitives/dispatch"]]],"~i2536",["^ ","~i3",[["^ ","^2D",80,"^2E",5168,"^O","_"]],"~i5",[["^ ","^2D",82,"^2E",5168,"^O","key"]],"~i9",[["^ ","^2D",86,"^2E",5168,"^O","_"]],"^3S",[["^ ","^2D",0,"^2E",5169,"^O","key"]]],"~i2538",["^ ","~i0",[["^ ","^2D",0,"^2E",5171],["^ ","^2D",34,"^2E",5184],["^ ","^2D",76,"^2E",5184,"^O","p__39917"],["^ ","^2D",0,"^2E",5185],["^ ","^2D",0,"^2E",5185],["^ ","^2D",4,"^2E",5185,"^O","map__39918"],["^ ","^2D",17,"^2E",5185,"^O","p__39917"],["^ ","^2D",4,"^2E",5186,"^O","map__39918"],["^ ","^2D",21,"^2E",5186],["^ ","^2D",23,"^2E",5186],["^ ","^2D",25,"^2E",5186],["^ ","^2D",27,"^2E",5186],["^ ","^2D",28,"^2E",5186,"^O","map__39918"],["^ ","^2D",42,"^2E",5186],["^ ","^2D",50,"^2E",5186],["^ ","^2D",52,"^2E",5186],["^ ","^2D",54,"^2E",5186],["^ ","^2D",55,"^2E",5186],["^ ","^2D",55,"^2E",5186,"^O","map__39918"],["^ ","^2D",104,"^2E",5186],["^ ","^2D",115,"^2E",5186],["^ ","^2D",116,"^2E",5186,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",5186],["^ ","^2D",148,"^2E",5186,"^O","map__39918"],["^ ","^2D",179,"^2E",5186],["^ ","^2D",184,"^2E",5186],["^ ","^2D",191,"^2E",5186],["^ ","^2D",199,"^2E",5186],["^ ","^2D",199,"^2E",5186,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",5186,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",5186,"^O","map__39918"],["^ ","^2D",276,"^2E",5186,"^O","map__39918"],["^ ","^2D",11,"^2E",5187,"^O","map__39918"],["^ ","^2D",11,"^2E",5188],["^ ","^2D",11,"^2E",5188,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",55,"^2E",5188,"^O","map__39918"],["^ ","^2D",70,"^2E",5188],["^ ","^2D",13,"^2E",5189],["^ ","^2D",13,"^2E",5189,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",57,"^2E",5189,"^O","map__39918"],["^ ","^2D",72,"^2E",5189],["^ ","^2D",0,"^2E",5190],["^ ","^2D",0,"^2E",5190],["^ ","^2D",0,"^2E",5191],["^ ","^2D",0,"^2E",5192],["^ ","^2D",0,"^2E",5192],["^ ","^2D",6,"^2E",5192],["^ ","^2D",11,"^2E",5192,"^O","js/Error"],["^ ","^2D",17,"^2E",5192]],"~i6",[["^ ","^2D",0,"^2E",5184,"^O","fulcro.client.primitives/parser"]]],"~i2550",["^ ","^2T",[["^ ","^2D",4,"^2E",5188,"^O","read"]],"^37",[["^ ","^2D",4,"^2E",5189,"^O","mutate"]],"^4I",[["^ ","^2D",4,"^2E",5187,"^O","opts"]]],"~i2551",["^ ","~i9",[["^ ","^2D",3,"^2E",5190]],"^2I",[["^ ","^2D",3,"^2E",5190,"^O","cljs.core/map?"]],"^2J",[["^ ","^2D",24,"^2E",5190,"^O","opts"]]],"~i2552",["^ ","~i2",[["^ ","^2D",0,"^2E",5195]],"~i3",[["^ ","^2D",7,"^2E",5195,"^O","fulcro.client.impl.parser/parser"]],"^3K",[["^ ","^2D",40,"^2E",5195,"^O","opts"]]],"~i2554",["^ ","~i0",[["^ ","^2D",0,"^2E",5197],["^ ","^2D",0,"^2E",5197],["^ ","^2D",42,"^2E",5204],["^ ","^2D",92,"^2E",5204,"^O","var_args"],["^ ","^2D",0,"^2E",5205],["^ ","^2D",0,"^2E",5205],["^ ","^2D",4,"^2E",5205,"^O","G__39924"],["^ ","^2D",15,"^2E",5205],["^ ","^2D",15,"^2E",5205],["^ ","^2D",0,"^2E",5206],["^ ","^2D",0,"^2E",5206],["^ ","^2D",8,"^2E",5206,"^O","G__39924"],["^ ","^2D",5,"^2E",5207],["^ ","^2D",0,"^2E",5208],["^ ","^2D",7,"^2E",5208,"^O","fulcro.client.primitives/add-root!"],["^ ","^2D",77,"^2E",5208],["^ ","^2D",78,"^2E",5208],["^ ","^2D",88,"^2E",5208],["^ ","^2D",94,"^2E",5208],["^ ","^2D",95,"^2E",5208],["^ ","^2D",105,"^2E",5208],["^ ","^2D",111,"^2E",5208],["^ ","^2D",112,"^2E",5208],["^ ","^2D",122,"^2E",5208],["^ ","^2D",5,"^2E",5211],["^ ","^2D",0,"^2E",5212],["^ ","^2D",7,"^2E",5212,"^O","fulcro.client.primitives/add-root!"],["^ ","^2D",77,"^2E",5212],["^ ","^2D",78,"^2E",5212],["^ ","^2D",88,"^2E",5212],["^ ","^2D",94,"^2E",5212],["^ ","^2D",95,"^2E",5212],["^ ","^2D",105,"^2E",5212],["^ ","^2D",111,"^2E",5212],["^ ","^2D",112,"^2E",5212],["^ ","^2D",122,"^2E",5212],["^ ","^2D",128,"^2E",5212],["^ ","^2D",129,"^2E",5212],["^ ","^2D",139,"^2E",5212],["^ ","^2D",0,"^2E",5216],["^ ","^2D",6,"^2E",5216],["^ ","^2D",11,"^2E",5216,"^O","js/Error"],["^ ","^2D",17,"^2E",5216],["^ ","^2D",18,"^2E",5216],["^ ","^2D",80,"^2E",5216],["^ ","^2D",80,"^2E",5216],["^ ","^2D",0,"^2E",5221],["^ ","^2D",0,"^2E",5221],["^ ","^2D",72,"^2E",5221],["^ ","^2D",0,"^2E",5222],["^ ","^2D",0,"^2E",5225],["^ ","^2D",0,"^2E",5225],["^ ","^2D",72,"^2E",5225],["^ ","^2D",0,"^2E",5226],["^ ","^2D",0,"^2E",5226],["^ ","^2D",0,"^2E",5227],["^ ","^2D",0,"^2E",5228],["^ ","^2D",0,"^2E",5228],["^ ","^2D",6,"^2E",5228],["^ ","^2D",11,"^2E",5228,"^O","js/Error"],["^ ","^2D",17,"^2E",5228],["^ ","^2D",0,"^2E",5231],["^ ","^2D",0,"^2E",5232],["^ ","^2D",0,"^2E",5233],["^ ","^2D",0,"^2E",5233],["^ ","^2D",6,"^2E",5233],["^ ","^2D",11,"^2E",5233,"^O","js/Error"],["^ ","^2D",17,"^2E",5233],["^ ","^2D",0,"^2E",5248],["^ ","^2D",0,"^2E",5248],["^ ","^2D",66,"^2E",5248],["^ ","^2D",0,"^2E",5250]],"~i6",[["^ ","^2D",0,"^2E",5204,"^O","fulcro.client.primitives/add-root!"],["^ ","^2D",0,"^2E",5221,"^O","fulcro.client.primitives/add-root!"],["^ ","^2D",0,"^2E",5225,"^O","fulcro.client.primitives/add-root!"],["^ ","^2D",0,"^2E",5248,"^O","fulcro.client.primitives/add-root!"]]],"~i2560",["^ ","~i4",[["^ ","^2D",83,"^2E",5221,"^O","reconciler"]],"^2J",[["^ ","^2D",94,"^2E",5221,"^O","root-class"]],"^3>",[["^ ","^2D",105,"^2E",5221,"^O","target"]]],"~i2561",["^ ","~i3",[["^ ","^2D",0,"^2E",5222],["^ ","^2D",106,"^2E",5222]],"~i4",[["^ ","^2D",7,"^2E",5222,"^O","fulcro.client.primitives.add_root_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^44",[["^ ","^2D",77,"^2E",5222,"^O","reconciler"]],"^3V",[["^ ","^2D",88,"^2E",5222,"^O","root-class"]],"^38",[["^ ","^2D",99,"^2E",5222,"^O","target"]]],"~i2562",["^ ","~i4",[["^ ","^2D",83,"^2E",5225,"^O","reconciler"]],"^2J",[["^ ","^2D",94,"^2E",5225,"^O","root-class"]],"^3>",[["^ ","^2D",105,"^2E",5225,"^O","target"]],"^48",[["^ ","^2D",112,"^2E",5225,"^O","options"]]],"~i2563",["^ ","^2I",[["^ ","^2D",3,"^2E",5226]],"^2T",[["^ ","^2D",3,"^2E",5226,"^O","fulcro.client.primitives/reconciler?"]],"^3Y",[["^ ","^2D",46,"^2E",5226,"^O","reconciler"]],"^3E",[["^ ","^2D",3,"^2E",5231]],"^38",[["^ ","^2D",3,"^2E",5231,"^O","cljs.core/fn?"]],"^2K",[["^ ","^2D",23,"^2E",5231,"^O","root-class"]]],"~i2564",["^ ","~i3",[["^ ","^2D",0,"^2E",5236],["^ ","^2D",4,"^2E",5236,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",5237],["^ ","^2D",0,"^2E",5237],["^ ","^2D",20,"^2E",5237,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",5238],["^ ","^2D",0,"^2E",5238],["^ ","^2D",27,"^2E",5238,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",5239],["^ ","^2D",0,"^2E",5241]],"^44",[["^ ","^2D",4,"^2E",5238,"^O","old-reconciler"]],"^3H",[["^ ","^2D",31,"^2E",5236],["^ ","^2D",75,"^2E",5236],["^ ","^2D",75,"^2E",5236,"^O","cljs.core/deref"]],"^2X",[["^ ","^2D",31,"^2E",5236,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^3E",[["^ ","^2D",91,"^2E",5236,"^O","fulcro.client.primitives/roots"]],"^2L",[["^ ","^2D",123,"^2E",5236,"^O","target"]]],"~i2565",["^ ","~i5",[["^ ","^2D",0,"^2E",5239]],"~i6",[["^ ","^2D",1,"^2E",5239,"^O","fulcro.client.primitives/remove-root!"],["^ ","^2D",76,"^2E",5239,"^O","fulcro.client.primitives/remove-root!"],["^ ","^2D",180,"^2E",5239,"^O","fulcro.client.primitives/remove-root!"]],"^35",[["^ ","^2D",149,"^2E",5239,"^O","old-reconciler"],["^ ","^2D",233,"^2E",5239,"^O","old-reconciler"]],"^2C",[["^ ","^2D",170,"^2E",5239,"^O","target"],["^ ","^2D",254,"^2E",5239,"^O","target"]]],"~i2566",["^ ","~i3",[["^ ","^2D",0,"^2E",5243]],"~i4",[["^ ","^2D",0,"^2E",5243,"^O","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^2I",[["^ ","^2D",51,"^2E",5243,"^O","fulcro.client.primitives/roots"]],"^37",[["^ ","^2D",82,"^2E",5243,"^O","cljs.core/assoc"]],"^2P",[["^ ","^2D",98,"^2E",5243,"^O","target"]],"^3H",[["^ ","^2D",105,"^2E",5243,"^O","reconciler"]]],"~i2567",["^ ","~i3",[["^ ","^2D",0,"^2E",5245]],"~i4",[["^ ","^2D",7,"^2E",5245,"^O","fulcro.client.impl.protocols/add-root!"]],"^37",[["^ ","^2D",51,"^2E",5245,"^O","reconciler"]],"^3L",[["^ ","^2D",62,"^2E",5245,"^O","root-class"]],"^2H",[["^ ","^2D",73,"^2E",5245,"^O","target"]],"^4>",[["^ ","^2D",80,"^2E",5245,"^O","options"]]],"~i2569",["^ ","~i0",[["^ ","^2D",0,"^2E",5250],["^ ","^2D",45,"^2E",5254],["^ ","^2D",0,"^2E",5255]],"~i6",[["^ ","^2D",0,"^2E",5254,"^O","fulcro.client.primitives/remove-root!"]]],"~i2572",["^ ","~i3",[["^ ","^2D",98,"^2E",5254,"^O","reconciler"]],"^44",[["^ ","^2D",109,"^2E",5254,"^O","target"]]],"~i2573",["^ ","~i2",[["^ ","^2D",0,"^2E",5255]],"~i3",[["^ ","^2D",7,"^2E",5255,"^O","fulcro.client.impl.protocols/remove-root!"]],"^2O",[["^ ","^2D",54,"^2E",5255,"^O","reconciler"]],"^3H",[["^ ","^2D",65,"^2E",5255,"^O","target"]]],"~i2575",["^ ","~i0",[["^ ","^2D",0,"^2E",5257],["^ ","^2D",0,"^2E",5257],["^ ","^2D",34,"^2E",5261],["^ ","^2D",76,"^2E",5261,"^O","var_args"],["^ ","^2D",0,"^2E",5262],["^ ","^2D",0,"^2E",5262],["^ ","^2D",4,"^2E",5262,"^O","G__39935"],["^ ","^2D",15,"^2E",5262],["^ ","^2D",15,"^2E",5262],["^ ","^2D",0,"^2E",5263],["^ ","^2D",0,"^2E",5263],["^ ","^2D",8,"^2E",5263,"^O","G__39935"],["^ ","^2D",5,"^2E",5264],["^ ","^2D",0,"^2E",5265],["^ ","^2D",7,"^2E",5265,"^O","fulcro.client.primitives/shared"],["^ ","^2D",69,"^2E",5265],["^ ","^2D",70,"^2E",5265],["^ ","^2D",80,"^2E",5265],["^ ","^2D",5,"^2E",5268],["^ ","^2D",0,"^2E",5269],["^ ","^2D",7,"^2E",5269,"^O","fulcro.client.primitives/shared"],["^ ","^2D",69,"^2E",5269],["^ ","^2D",70,"^2E",5269],["^ ","^2D",80,"^2E",5269],["^ ","^2D",86,"^2E",5269],["^ ","^2D",87,"^2E",5269],["^ ","^2D",97,"^2E",5269],["^ ","^2D",0,"^2E",5273],["^ ","^2D",6,"^2E",5273],["^ ","^2D",11,"^2E",5273,"^O","js/Error"],["^ ","^2D",17,"^2E",5273],["^ ","^2D",18,"^2E",5273],["^ ","^2D",80,"^2E",5273],["^ ","^2D",80,"^2E",5273],["^ ","^2D",0,"^2E",5278],["^ ","^2D",0,"^2E",5278],["^ ","^2D",64,"^2E",5278],["^ ","^2D",0,"^2E",5279],["^ ","^2D",0,"^2E",5282],["^ ","^2D",0,"^2E",5282],["^ ","^2D",64,"^2E",5282],["^ ","^2D",0,"^2E",5283],["^ ","^2D",0,"^2E",5283],["^ ","^2D",0,"^2E",5284],["^ ","^2D",0,"^2E",5285],["^ ","^2D",0,"^2E",5285],["^ ","^2D",6,"^2E",5285],["^ ","^2D",11,"^2E",5285,"^O","js/Error"],["^ ","^2D",17,"^2E",5285],["^ ","^2D",0,"^2E",5307],["^ ","^2D",0,"^2E",5307],["^ ","^2D",58,"^2E",5307],["^ ","^2D",0,"^2E",5309]],"~i6",[["^ ","^2D",0,"^2E",5261,"^O","fulcro.client.primitives/shared"],["^ ","^2D",0,"^2E",5278,"^O","fulcro.client.primitives/shared"],["^ ","^2D",0,"^2E",5282,"^O","fulcro.client.primitives/shared"],["^ ","^2D",0,"^2E",5307,"^O","fulcro.client.primitives/shared"]]],"~i2578",["^ ","~i4",[["^ ","^2D",75,"^2E",5278,"^O","component"]]],"~i2579",["^ ","~i3",[["^ ","^2D",0,"^2E",5279],["^ ","^2D",79,"^2E",5279]],"~i4",[["^ ","^2D",7,"^2E",5279,"^O","fulcro.client.primitives.shared.cljs$core$IFn$_invoke$arity$2"]],"^2T",[["^ ","^2D",69,"^2E",5279,"^O","component"]]],"~i2580",["^ ","~i4",[["^ ","^2D",75,"^2E",5282,"^O","component"]],"^44",[["^ ","^2D",85,"^2E",5282,"^O","k-or-ks"]]],"~i2581",["^ ","^2I",[["^ ","^2D",3,"^2E",5283]],"^2T",[["^ ","^2D",3,"^2E",5283,"^O","fulcro.client.primitives/component?"]],"^2P",[["^ ","^2D",45,"^2E",5283,"^O","component"]]],"~i2582",["^ ","~i3",[["^ ","^2D",0,"^2E",5288],["^ ","^2D",0,"^2E",5299]],"~i9",[["^ ","^2D",4,"^2E",5288,"^O","shared"]]],"~i2583",["^ ","^3V",[["^ ","^2D",13,"^2E",5288],["^ ","^2D",30,"^2E",5288,"^O","G__39936"],["^ ","^2D",4,"^2E",5289,"^O","G__39937"],["^ ","^2D",15,"^2E",5289],["^ ","^2D",0,"^2E",5290],["^ ","^2D",0,"^2E",5290],["^ ","^2D",23,"^2E",5290,"^O","G__39936"],["^ ","^2D",32,"^2E",5290,"^O","G__39937"]],"^3>",[["^ ","^2D",7,"^2E",5290,"^O","goog.object/get"]],"^3E",[["^ ","^2D",41,"^2E",5288]],"^2H",[["^ ","^2D",41,"^2E",5288,"^O","component"]]],"~i2584",["^ ","~i9",[["^ ","^2D",4,"^2E",5292,"^O","ks"]],"^3=",[["^ ","^2D",9,"^2E",5292],["^ ","^2D",26,"^2E",5292,"^O","G__39938"],["^ ","^2D",0,"^2E",5293],["^ ","^2D",0,"^2E",5293],["^ ","^2D",0,"^2E",5294],["^ ","^2D",12,"^2E",5294,"^O","cljs.core/PersistentVector"],["^ ","^2D",39,"^2E",5294],["^ ","^2D",44,"^2E",5294],["^ ","^2D",46,"^2E",5294],["^ ","^2D",50,"^2E",5294],["^ ","^2D",50,"^2E",5294,"^O","cljs.core/PersistentVector"],["^ ","^2D",88,"^2E",5294],["^ ","^2D",89,"^2E",5294,"^O","G__39938"],["^ ","^2D",99,"^2E",5294],["^ ","^2D",0,"^2E",5296,"^O","G__39938"]],"^4Y",[["^ ","^2D",37,"^2E",5292,"^O","k-or-ks"]]],"~i2585",["^ ","^3>",[["^ ","^2D",3,"^2E",5293]],"^30",[["^ ","^2D",5,"^2E",5293]],"^4Y",[["^ ","^2D",5,"^2E",5293,"^O","cljs.core/sequential?"]],"^2N",[["^ ","^2D",33,"^2E",5293,"^O","k-or-ks"]]],"~i2586",["^ ","~i5",[["^ ","^2D",0,"^2E",5299],["^ ","^2D",4,"^2E",5299,"^O","G__39939"],["^ ","^2D",0,"^2E",5300],["^ ","^2D",0,"^2E",5300],["^ ","^2D",0,"^2E",5303,"^O","G__39939"]],"^2G",[["^ ","^2D",15,"^2E",5299,"^O","shared"]]],"~i2587",["^ ","~i7",[["^ ","^2D",3,"^2E",5300]],"^3S",[["^ ","^2D",5,"^2E",5300]],"^2G",[["^ ","^2D",5,"^2E",5300,"^O","cljs.core/empty?"]],"^4X",[["^ ","^2D",28,"^2E",5300,"^O","ks"]],"^3V",[["^ ","^2D",0,"^2E",5301],["^ ","^2D",54,"^2E",5301,"^O","G__39939"]],"^3>",[["^ ","^2D",7,"^2E",5301,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^48",[["^ ","^2D",63,"^2E",5301,"^O","ks"]]],"~i2589",["^ ","~i0",[["^ ","^2D",0,"^2E",5309],["^ ","^2D",38,"^2E",5309],["^ ","^2D",0,"^2E",5310],["^ ","^2D",0,"^2E",5310],["^ ","^2D",0,"^2E",5311],["^ ","^2D",0,"^2E",5312],["^ ","^2D",0,"^2E",5312],["^ ","^2D",6,"^2E",5312],["^ ","^2D",11,"^2E",5312,"^O","js/Error"],["^ ","^2D",17,"^2E",5312]],"~i6",[["^ ","^2D",0,"^2E",5309,"^O","fulcro.client.primitives/instrument"]],"^2O",[["^ ","^2D",84,"^2E",5309,"^O","component"]]],"~i2590",["^ ","~i9",[["^ ","^2D",3,"^2E",5310]],"^2I",[["^ ","^2D",3,"^2E",5310,"^O","fulcro.client.primitives/component?"]],"^3D",[["^ ","^2D",45,"^2E",5310,"^O","component"]]],"~i2591",["^ ","~i2",[["^ ","^2D",0,"^2E",5315],["^ ","^2D",61,"^2E",5315]],"~i3",[["^ ","^2D",7,"^2E",5315,"^O","fulcro.client.primitives/get-raw-react-prop"]],"^2P",[["^ ","^2D",51,"^2E",5315,"^O","component"]]],"~i2595",["^ ","~i3",[["^ ","^2D",0,"^2E",5317],["^ ","^2D",53,"^2E",5317],["^ ","^2D",0,"^2E",5318]],"^2I",[["^ ","^2D",0,"^2E",5317,"^O","fulcro.client.primitives/merge-pending-state!"]],"^4Y",[["^ ","^2D",114,"^2E",5317,"^O","c"]]],"~i2596",["^ ","~i5",[["^ ","^2D",0,"^2E",5318],["^ ","^2D",4,"^2E",5318,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",5326],["^ ","^2D",0,"^2E",5326],["^ ","^2D",20,"^2E",5326,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",5327],["^ ","^2D",0,"^2E",5327],["^ ","^2D",14,"^2E",5327,"^O","temp__5457__auto__"],["^ ","^2D",0,"^2E",5328],["^ ","^2D",0,"^2E",5336]],"^37",[["^ ","^2D",4,"^2E",5327,"^O","pending"]],"^3=",[["^ ","^2D",25,"^2E",5318],["^ ","^2D",42,"^2E",5318,"^O","G__39944"],["^ ","^2D",4,"^2E",5319,"^O","G__39944"],["^ ","^2D",19,"^2E",5319],["^ ","^2D",21,"^2E",5319],["^ ","^2D",22,"^2E",5319,"^O","G__39944"],["^ ","^2D",34,"^2E",5319],["^ ","^2D",41,"^2E",5319],["^ ","^2D",46,"^2E",5319],["^ ","^2D",46,"^2E",5319,"^O","G__39944"],["^ ","^2D",0,"^2E",5320],["^ ","^2D",0,"^2E",5320],["^ ","^2D",3,"^2E",5320],["^ ","^2D",4,"^2E",5320,"^O","G__39944"],["^ ","^2D",20,"^2E",5320],["^ ","^2D",0,"^2E",5321]],"^4Y",[["^ ","^2D",53,"^2E",5318,"^O","c"]],"^3A",[["^ ","^2D",0,"^2E",5323],["^ ","^2D",23,"^2E",5323,"^O","G__39944"],["^ ","^2D",36,"^2E",5323]],"^2M",[["^ ","^2D",7,"^2E",5323,"^O","goog.object/get"]]],"~i2597",["^ ","~i7",[["^ ","^2D",0,"^2E",5328],["^ ","^2D",0,"^2E",5330]],"^2G",[["^ ","^2D",4,"^2E",5328,"^O","state"]],"^2P",[["^ ","^2D",12,"^2E",5328]],"^30",[["^ ","^2D",12,"^2E",5328,"^O","c"]]],"~i2598",["^ ","^2G",[["^ ","^2D",4,"^2E",5329,"^O","previous"]],"^2P",[["^ ","^2D",15,"^2E",5329],["^ ","^2D",37,"^2E",5329]],"^3Y",[["^ ","^2D",15,"^2E",5329,"^O","goog.object/get"]],"^4Y",[["^ ","^2D",31,"^2E",5329,"^O","state"]]],"~i2599",["^ ","~i9",[["^ ","^2D",0,"^2E",5330],["^ ","^2D",25,"^2E",5330]],"^2I",[["^ ","^2D",0,"^2E",5330,"^O","goog.object/remove"]],"^2P",[["^ ","^2D",19,"^2E",5330,"^O","state"]]],"~i2600",["^ ","~i9",[["^ ","^2D",0,"^2E",5332],["^ ","^2D",22,"^2E",5332]],"^2I",[["^ ","^2D",0,"^2E",5332,"^O","goog.object/set"]],"^35",[["^ ","^2D",16,"^2E",5332,"^O","state"]],"^2R",[["^ ","^2D",45,"^2E",5332,"^O","previous"]]],"~i2601",["^ ","~i9",[["^ ","^2D",0,"^2E",5334],["^ ","^2D",29,"^2E",5334]],"^2I",[["^ ","^2D",7,"^2E",5334,"^O","goog.object/set"]],"^35",[["^ ","^2D",23,"^2E",5334,"^O","state"]],"^2K",[["^ ","^2D",44,"^2E",5334,"^O","pending"]]],"~i2603",["^ ","~i0",[["^ ","^2D",0,"^2E",5339],["^ ","^2D",41,"^2E",5342],["^ ","^2D",0,"^2E",5343]],"~i6",[["^ ","^2D",0,"^2E",5342,"^O","fulcro.client.primitives/class->any"]]],"~i2605",["^ ","~i3",[["^ ","^2D",90,"^2E",5342,"^O","x"]],"~i5",[["^ ","^2D",92,"^2E",5342,"^O","class"]]],"~i2606",["^ ","~i2",[["^ ","^2D",0,"^2E",5343],["^ ","^2D",0,"^2E",5344]],"~i8",[["^ ","^2D",4,"^2E",5343,"^O","indexer"]],"^37",[["^ ","^2D",14,"^2E",5343]],"^4X",[["^ ","^2D",16,"^2E",5343]],"^3D",[["^ ","^2D",16,"^2E",5343,"^O","fulcro.client.primitives/reconciler?"]],"^48",[["^ ","^2D",59,"^2E",5343,"^O","x"]],"^38",[["^ ","^2D",63,"^2E",5343]],"^2F",[["^ ","^2D",63,"^2E",5343,"^O","fulcro.client.primitives/get-indexer"]],"^3F",[["^ ","^2D",100,"^2E",5343,"^O","x"]],"^4<",[["^ ","^2D",103,"^2E",5343,"^O","x"]]],"~i2607",["^ ","~i4",[["^ ","^2D",0,"^2E",5344]],"~i5",[["^ ","^2D",7,"^2E",5344,"^O","cljs.core/first"]],"^2T",[["^ ","^2D",23,"^2E",5344],["^ ","^2D",70,"^2E",5344],["^ ","^2D",70,"^2E",5344,"^O","cljs.core/deref"],["^ ","^2D",95,"^2E",5344],["^ ","^2D",178,"^2E",5344]],"^3S",[["^ ","^2D",23,"^2E",5344,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^4X",[["^ ","^2D",86,"^2E",5344,"^O","indexer"]],"^2R",[["^ ","^2D",256,"^2E",5344,"^O","class"]]],"~i2609",["^ ","~i0",[["^ ","^2D",0,"^2E",5346],["^ ","^2D",41,"^2E",5349],["^ ","^2D",0,"^2E",5350]],"~i6",[["^ ","^2D",0,"^2E",5349,"^O","fulcro.client.primitives/class->all"]]],"~i2611",["^ ","~i3",[["^ ","^2D",90,"^2E",5349,"^O","x"]],"~i5",[["^ ","^2D",92,"^2E",5349,"^O","class"]]],"~i2612",["^ ","~i2",[["^ ","^2D",0,"^2E",5350],["^ ","^2D",0,"^2E",5351]],"~i8",[["^ ","^2D",4,"^2E",5350,"^O","indexer"]],"^37",[["^ ","^2D",14,"^2E",5350]],"^4X",[["^ ","^2D",16,"^2E",5350]],"^3D",[["^ ","^2D",16,"^2E",5350,"^O","fulcro.client.primitives/reconciler?"]],"^48",[["^ ","^2D",59,"^2E",5350,"^O","x"]],"^38",[["^ ","^2D",63,"^2E",5350]],"^2F",[["^ ","^2D",63,"^2E",5350,"^O","fulcro.client.primitives/get-indexer"]],"^3F",[["^ ","^2D",100,"^2E",5350,"^O","x"]],"^4<",[["^ ","^2D",103,"^2E",5350,"^O","x"]]],"~i2613",["^ ","~i4",[["^ ","^2D",0,"^2E",5351],["^ ","^2D",54,"^2E",5351],["^ ","^2D",54,"^2E",5351,"^O","cljs.core/deref"],["^ ","^2D",79,"^2E",5351],["^ ","^2D",162,"^2E",5351]],"~i5",[["^ ","^2D",7,"^2E",5351,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^2D",70,"^2E",5351,"^O","indexer"]],"^2L",[["^ ","^2D",240,"^2E",5351,"^O","class"]]],"~i2615",["^ ","~i0",[["^ ","^2D",0,"^2E",5353],["^ ","^2D",46,"^2E",5356],["^ ","^2D",0,"^2E",5357]],"~i6",[["^ ","^2D",0,"^2E",5356,"^O","fulcro.client.primitives/ref->components"]]],"~i2617",["^ ","~i3",[["^ ","^2D",100,"^2E",5356,"^O","x"]],"~i5",[["^ ","^2D",102,"^2E",5356,"^O","ref"]]],"~i2618",["^ ","~i2",[["^ ","^2D",0,"^2E",5357],["^ ","^2D",0,"^2E",5358],["^ ","^2D",0,"^2E",5360]],"^3S",[["^ ","^2D",3,"^2E",5357],["^ ","^2D",11,"^2E",5357]],"^2O",[["^ ","^2D",4,"^2E",5357,"^O","ref"]]],"~i2619",["^ ","~i4",[["^ ","^2D",0,"^2E",5360],["^ ","^2D",0,"^2E",5361]],"^2I",[["^ ","^2D",4,"^2E",5360,"^O","indexer"]],"^2O",[["^ ","^2D",14,"^2E",5360]],"^2P",[["^ ","^2D",16,"^2E",5360]],"^3Y",[["^ ","^2D",16,"^2E",5360,"^O","fulcro.client.primitives/reconciler?"]],"^3E",[["^ ","^2D",59,"^2E",5360,"^O","x"]],"^2H",[["^ ","^2D",63,"^2E",5360]],"^3W",[["^ ","^2D",63,"^2E",5360,"^O","fulcro.client.primitives/get-indexer"]],"^3Z",[["^ ","^2D",100,"^2E",5360,"^O","x"]],"^4E",[["^ ","^2D",103,"^2E",5360,"^O","x"]]],"~i2620",["^ ","~i6",[["^ ","^2D",0,"^2E",5361]],"~i7",[["^ ","^2D",7,"^2E",5361,"^O","fulcro.client.impl.protocols/key->components"]],"^3V",[["^ ","^2D",55,"^2E",5361,"^O","indexer"]],"^48",[["^ ","^2D",63,"^2E",5361,"^O","ref"]]],"~i2622",["^ ","~i0",[["^ ","^2D",0,"^2E",5364],["^ ","^2D",0,"^2E",5364],["^ ","^2D",46,"^2E",5368],["^ ","^2D",100,"^2E",5368,"^O","var_args"],["^ ","^2D",0,"^2E",5369],["^ ","^2D",0,"^2E",5369],["^ ","^2D",4,"^2E",5369,"^O","G__39955"],["^ ","^2D",15,"^2E",5369],["^ ","^2D",15,"^2E",5369],["^ ","^2D",0,"^2E",5370],["^ ","^2D",0,"^2E",5370],["^ ","^2D",8,"^2E",5370,"^O","G__39955"],["^ ","^2D",5,"^2E",5371],["^ ","^2D",0,"^2E",5372],["^ ","^2D",7,"^2E",5372,"^O","fulcro.client.primitives/get-rendered-state"],["^ ","^2D",81,"^2E",5372],["^ ","^2D",82,"^2E",5372],["^ ","^2D",92,"^2E",5372],["^ ","^2D",5,"^2E",5375],["^ ","^2D",0,"^2E",5376],["^ ","^2D",7,"^2E",5376,"^O","fulcro.client.primitives/get-rendered-state"],["^ ","^2D",81,"^2E",5376],["^ ","^2D",82,"^2E",5376],["^ ","^2D",92,"^2E",5376],["^ ","^2D",98,"^2E",5376],["^ ","^2D",99,"^2E",5376],["^ ","^2D",109,"^2E",5376],["^ ","^2D",0,"^2E",5380],["^ ","^2D",6,"^2E",5380],["^ ","^2D",11,"^2E",5380,"^O","js/Error"],["^ ","^2D",17,"^2E",5380],["^ ","^2D",18,"^2E",5380],["^ ","^2D",80,"^2E",5380],["^ ","^2D",80,"^2E",5380],["^ ","^2D",0,"^2E",5385],["^ ","^2D",0,"^2E",5385],["^ ","^2D",76,"^2E",5385],["^ ","^2D",0,"^2E",5386],["^ ","^2D",0,"^2E",5389],["^ ","^2D",0,"^2E",5389],["^ ","^2D",76,"^2E",5389],["^ ","^2D",0,"^2E",5390],["^ ","^2D",0,"^2E",5390],["^ ","^2D",0,"^2E",5391],["^ ","^2D",0,"^2E",5392],["^ ","^2D",0,"^2E",5392],["^ ","^2D",6,"^2E",5392],["^ ","^2D",11,"^2E",5392,"^O","js/Error"],["^ ","^2D",17,"^2E",5392],["^ ","^2D",0,"^2E",5406],["^ ","^2D",0,"^2E",5406],["^ ","^2D",70,"^2E",5406],["^ ","^2D",0,"^2E",5408]],"~i6",[["^ ","^2D",0,"^2E",5368,"^O","fulcro.client.primitives/get-rendered-state"],["^ ","^2D",0,"^2E",5385,"^O","fulcro.client.primitives/get-rendered-state"],["^ ","^2D",0,"^2E",5389,"^O","fulcro.client.primitives/get-rendered-state"],["^ ","^2D",0,"^2E",5406,"^O","fulcro.client.primitives/get-rendered-state"]]],"~i2625",["^ ","~i4",[["^ ","^2D",87,"^2E",5385,"^O","component"]]],"~i2626",["^ ","~i3",[["^ ","^2D",0,"^2E",5386],["^ ","^2D",91,"^2E",5386]],"~i4",[["^ ","^2D",7,"^2E",5386,"^O","fulcro.client.primitives.get_rendered_state.cljs$core$IFn$_invoke$arity$2"]],"^3Y",[["^ ","^2D",81,"^2E",5386,"^O","component"]]],"~i2627",["^ ","~i4",[["^ ","^2D",87,"^2E",5389,"^O","component"]],"^44",[["^ ","^2D",97,"^2E",5389,"^O","k-or-ks"]]],"~i2628",["^ ","^2I",[["^ ","^2D",3,"^2E",5390]],"^2T",[["^ ","^2D",3,"^2E",5390,"^O","fulcro.client.primitives/component?"]],"^2P",[["^ ","^2D",45,"^2E",5390,"^O","component"]]],"~i2629",["^ ","~i3",[["^ ","^2D",0,"^2E",5395],["^ ","^2D",0,"^2E",5403]],"~i9",[["^ ","^2D",4,"^2E",5395,"^O","cst"]]],"~i2630",["^ ","^2P",[["^ ","^2D",10,"^2E",5395],["^ ","^2D",27,"^2E",5395,"^O","G__39956"],["^ ","^2D",4,"^2E",5396,"^O","G__39956"],["^ ","^2D",19,"^2E",5396],["^ ","^2D",21,"^2E",5396],["^ ","^2D",22,"^2E",5396,"^O","G__39956"],["^ ","^2D",34,"^2E",5396],["^ ","^2D",41,"^2E",5396],["^ ","^2D",46,"^2E",5396],["^ ","^2D",46,"^2E",5396,"^O","G__39956"],["^ ","^2D",0,"^2E",5397],["^ ","^2D",0,"^2E",5397],["^ ","^2D",3,"^2E",5397],["^ ","^2D",4,"^2E",5397,"^O","G__39956"],["^ ","^2D",20,"^2E",5397],["^ ","^2D",0,"^2E",5398]],"^2X",[["^ ","^2D",38,"^2E",5395,"^O","component"]],"^2R",[["^ ","^2D",0,"^2E",5400],["^ ","^2D",23,"^2E",5400,"^O","G__39956"],["^ ","^2D",36,"^2E",5400]],"^3F",[["^ ","^2D",7,"^2E",5400,"^O","goog.object/get"]]],"~i2631",["^ ","~i5",[["^ ","^2D",0,"^2E",5403]],"~i6",[["^ ","^2D",7,"^2E",5403,"^O","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^2D",54,"^2E",5403,"^O","cst"]],"^3K",[["^ ","^2D",58,"^2E",5403],["^ ","^2D",106,"^2E",5403]],"^3D",[["^ ","^2D",60,"^2E",5403]],"^2P",[["^ ","^2D",60,"^2E",5403,"^O","cljs.core/sequential?"]],"^2C",[["^ ","^2D",88,"^2E",5403,"^O","k-or-ks"]],"^2M",[["^ ","^2D",98,"^2E",5403,"^O","k-or-ks"]],"^4<",[["^ ","^2D",189,"^2E",5403,"^O","k-or-ks"]]],"~i2633",["^ ","~i0",[["^ ","^2D",0,"^2E",5408],["^ ","^2D",45,"^2E",5408],["^ ","^2D",0,"^2E",5409]],"~i6",[["^ ","^2D",0,"^2E",5408,"^O","fulcro.client.primitives/nil-or-map?"]]],"~i2635",["^ ","~i3",[["^ ","^2D",98,"^2E",5408,"^O","x"]]],"~i2636",["^ ","~i2",[["^ ","^2D",0,"^2E",5409]],"~i6",[["^ ","^2D",9,"^2E",5409],["^ ","^2D",15,"^2E",5409]],"^3S",[["^ ","^2D",10,"^2E",5409,"^O","x"]],"^2J",[["^ ","^2D",26,"^2E",5409]],"^37",[["^ ","^2D",26,"^2E",5409,"^O","cljs.core/map?"]],"^3D",[["^ ","^2D",47,"^2E",5409,"^O","x"]]],"~i2638",["^ ","~i0",[["^ ","^2D",0,"^2E",5411],["^ ","^2D",37,"^2E",5414],["^ ","^2D",0,"^2E",5415]],"~i6",[["^ ","^2D",0,"^2E",5414,"^O","fulcro.client.primitives/react-ref"]]],"~i2640",["^ ","~i3",[["^ ","^2D",82,"^2E",5414,"^O","component"]],"^2G",[["^ ","^2D",92,"^2E",5414,"^O","name"]]],"~i2642",["^ ","^2T",[["^ ","^2D",0,"^2E",5415],["^ ","^2D",4,"^2E",5415,"^O","G__39964"],["^ ","^2D",0,"^2E",5416],["^ ","^2D",0,"^2E",5416],["^ ","^2D",3,"^2E",5416],["^ ","^2D",4,"^2E",5416,"^O","G__39964"],["^ ","^2D",16,"^2E",5416],["^ ","^2D",0,"^2E",5417]],"^35",[["^ ","^2D",15,"^2E",5415]],"^3L",[["^ ","^2D",15,"^2E",5415,"^O","component"]],"^2H",[["^ ","^2D",0,"^2E",5419],["^ ","^2D",23,"^2E",5419,"^O","G__39964"]],"^3W",[["^ ","^2D",7,"^2E",5419,"^O","goog.object/get"]],"^2R",[["^ ","^2D",32,"^2E",5419,"^O","name"]]],"~i2644",["^ ","~i0",[["^ ","^2D",0,"^2E",5422],["^ ","^2D",43,"^2E",5425],["^ ","^2D",140,"^2E",5425,"^O","p__39968"],["^ ","^2D",0,"^2E",5426],["^ ","^2D",0,"^2E",5426],["^ ","^2D",4,"^2E",5426,"^O","map__39969"],["^ ","^2D",17,"^2E",5426,"^O","p__39968"],["^ ","^2D",4,"^2E",5427,"^O","map__39969"],["^ ","^2D",21,"^2E",5427],["^ ","^2D",23,"^2E",5427],["^ ","^2D",25,"^2E",5427],["^ ","^2D",27,"^2E",5427],["^ ","^2D",28,"^2E",5427,"^O","map__39969"],["^ ","^2D",42,"^2E",5427],["^ ","^2D",50,"^2E",5427],["^ ","^2D",52,"^2E",5427],["^ ","^2D",54,"^2E",5427],["^ ","^2D",55,"^2E",5427],["^ ","^2D",55,"^2E",5427,"^O","map__39969"],["^ ","^2D",104,"^2E",5427],["^ ","^2D",115,"^2E",5427],["^ ","^2D",116,"^2E",5427,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",5427],["^ ","^2D",148,"^2E",5427,"^O","map__39969"],["^ ","^2D",179,"^2E",5427],["^ ","^2D",184,"^2E",5427],["^ ","^2D",191,"^2E",5427],["^ ","^2D",199,"^2E",5427],["^ ","^2D",199,"^2E",5427,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",5427,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",5427,"^O","map__39969"],["^ ","^2D",276,"^2E",5427,"^O","map__39969"],["^ ","^2D",11,"^2E",5428,"^O","map__39969"],["^ ","^2D",12,"^2E",5429],["^ ","^2D",12,"^2E",5429,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",56,"^2E",5429,"^O","map__39969"],["^ ","^2D",71,"^2E",5429],["^ ","^2D",13,"^2E",5430],["^ ","^2D",13,"^2E",5430,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",57,"^2E",5430,"^O","map__39969"],["^ ","^2D",72,"^2E",5430],["^ ","^2D",22,"^2E",5431],["^ ","^2D",22,"^2E",5431,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",66,"^2E",5431,"^O","map__39969"],["^ ","^2D",81,"^2E",5431],["^ ","^2D",0,"^2E",5432]],"~i6",[["^ ","^2D",0,"^2E",5425,"^O","fulcro.client.primitives/set-query!"]]],"~i2646",["^ ","~i3",[["^ ","^2D",94,"^2E",5425,"^O","component-or-reconciler"]],"^3L",[["^ ","^2D",118,"^2E",5425,"^O","ui-factory-or-queryid"]],"^2V",[["^ ","^2D",4,"^2E",5429,"^O","query"]],"^5[",[["^ ","^2D",4,"^2E",5430,"^O","params"]],"^>B",[["^ ","^2D",4,"^2E",5431,"^O","follow-on-reads"]],"^3C",[["^ ","^2D",4,"^2E",5428,"^O","opts"]]],"~i2647",["^ ","~i2",[["^ ","^2D",0,"^2E",5432],["^ ","^2D",0,"^2E",5450]],"~i8",[["^ ","^2D",4,"^2E",5432,"^O","reconciler"]],"^35",[["^ ","^2D",17,"^2E",5432]],"^3Y",[["^ ","^2D",19,"^2E",5432]],"^3=",[["^ ","^2D",19,"^2E",5432,"^O","fulcro.client.primitives/reconciler?"]],"^38",[["^ ","^2D",62,"^2E",5432,"^O","component-or-reconciler"]]],"~i2648",["^ ","^3D",[["^ ","^2D",88,"^2E",5432,"^O","component-or-reconciler"]]],"~i2649",["^ ","^3D",[["^ ","^2D",112,"^2E",5432]],"^2P",[["^ ","^2D",112,"^2E",5432,"^O","fulcro.client.primitives/get-reconciler"]],"^2F",[["^ ","^2D",152,"^2E",5432,"^O","component-or-reconciler"]]],"~i2650",["^ ","~i8",[["^ ","^2D",4,"^2E",5433,"^O","queryid"]],"^35",[["^ ","^2D",14,"^2E",5433],["^ ","^2D",81,"^2E",5433],["^ ","^2D",5,"^2E",5447]]],"~i2651",["^ ","^3D",[["^ ","^2D",16,"^2E",5433]],"^2X",[["^ ","^2D",23,"^2E",5433,"^O","ui-factory-or-queryid"]],"^2S",[["^ ","^2D",59,"^2E",5433,"^O","ui-factory-or-queryid"]]],"~i2652",["^ ","^3D",[["^ ","^2D",99,"^2E",5433],["^ ","^2D",116,"^2E",5433,"^O","G__39971"],["^ ","^2D",4,"^2E",5434,"^O","G__39971"],["^ ","^2D",19,"^2E",5434],["^ ","^2D",21,"^2E",5434],["^ ","^2D",22,"^2E",5434,"^O","G__39971"],["^ ","^2D",34,"^2E",5434],["^ ","^2D",41,"^2E",5434],["^ ","^2D",46,"^2E",5434],["^ ","^2D",61,"^2E",5434,"^O","G__39971"],["^ ","^2D",0,"^2E",5435],["^ ","^2D",0,"^2E",5435],["^ ","^2D",3,"^2E",5435],["^ ","^2D",4,"^2E",5435,"^O","G__39971"],["^ ","^2D",20,"^2E",5435],["^ ","^2D",0,"^2E",5436]],"^3H",[["^ ","^2D",127,"^2E",5433,"^O","ui-factory-or-queryid"]],"^3Z",[["^ ","^2D",46,"^2E",5434,"^O","cljs.core/meta"]],"^5F",[["^ ","^2D",0,"^2E",5438],["^ ","^2D",33,"^2E",5438,"^O","G__39971"],["^ ","^2D",46,"^2E",5438]],"^2V",[["^ ","^2D",7,"^2E",5438,"^O","cljs.core/contains?"]],"^:M",[["^ ","^2D",6,"^2E",5440],["^ ","^2D",23,"^2E",5440,"^O","G__39972"],["^ ","^2D",4,"^2E",5441,"^O","G__39972"],["^ ","^2D",19,"^2E",5441],["^ ","^2D",21,"^2E",5441],["^ ","^2D",22,"^2E",5441,"^O","G__39972"],["^ ","^2D",34,"^2E",5441],["^ ","^2D",41,"^2E",5441],["^ ","^2D",46,"^2E",5441],["^ ","^2D",61,"^2E",5441,"^O","G__39972"],["^ ","^2D",0,"^2E",5442],["^ ","^2D",0,"^2E",5442],["^ ","^2D",3,"^2E",5442],["^ ","^2D",4,"^2E",5442,"^O","G__39972"],["^ ","^2D",20,"^2E",5442],["^ ","^2D",0,"^2E",5443],["^ ","^2D",0,"^2E",5445],["^ ","^2D",7,"^2E",5445],["^ ","^2D",96,"^2E",5445,"^O","G__39972"]],"^3<",[["^ ","^2D",34,"^2E",5440,"^O","ui-factory-or-queryid"]],"^42",[["^ ","^2D",46,"^2E",5441,"^O","cljs.core/meta"]]],"~i2653",["^ ","^4Y",[["^ ","^2D",5,"^2E",5447],["^ ","^2D",61,"^2E",5447]],"^48",[["^ ","^2D",5,"^2E",5447,"^O","fulcro.client.primitives/query-id"]],"^3A",[["^ ","^2D",39,"^2E",5447,"^O","ui-factory-or-queryid"]]],"~i2654",["^ ","~i8",[["^ ","^2D",4,"^2E",5449,"^O","tx"]],"^35",[["^ ","^2D",9,"^2E",5449],["^ ","^2D",54,"^2E",5449],["^ ","^2D",54,"^2E",5449,"^O","cljs.core/vec"],["^ ","^2D",68,"^2E",5449],["^ ","^2D",68,"^2E",5449,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",117,"^2E",5449],["^ ","^2D",117,"^2E",5449,"^O","cljs.core/seq"],["^ ","^2D",131,"^2E",5449],["^ ","^2D",131,"^2E",5449,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",178,"^2E",5449],["^ ","^2D",183,"^2E",5449,"^O","cljs.core/List"],["^ ","^2D",198,"^2E",5449],["^ ","^2D",203,"^2E",5449],["^ ","^2D",203,"^2E",5449,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",252,"^2E",5449],["^ ","^2D",252,"^2E",5449,"^O","cljs.core/seq"],["^ ","^2D",266,"^2E",5449],["^ ","^2D",266,"^2E",5449,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",313,"^2E",5449],["^ ","^2D",318,"^2E",5449,"^O","cljs.core/List"],["^ ","^2D",333,"^2E",5449],["^ ","^2D",338,"^2E",5449],["^ ","^2D",452,"^2E",5449],["^ ","^2D",457,"^2E",5449],["^ ","^2D",461,"^2E",5449],["^ ","^2D",468,"^2E",5449],["^ ","^2D",473,"^2E",5449,"^O","cljs.core/List"],["^ ","^2D",488,"^2E",5449],["^ ","^2D",493,"^2E",5449],["^ ","^2D",493,"^2E",5449,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",539,"^2E",5449,"^O","cljs.core/array-map"],["^ ","^2D",559,"^2E",5449],["^ ","^2D",559,"^2E",5449,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",608,"^2E",5449],["^ ","^2D",608,"^2E",5449,"^O","cljs.core/seq"],["^ ","^2D",622,"^2E",5449],["^ ","^2D",622,"^2E",5449,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",676,"^2E",5449],["^ ","^2D",681,"^2E",5449,"^O","cljs.core/List"],["^ ","^2D",696,"^2E",5449],["^ ","^2D",701,"^2E",5449],["^ ","^2D",760,"^2E",5449],["^ ","^2D",765,"^2E",5449],["^ ","^2D",769,"^2E",5449],["^ ","^2D",776,"^2E",5449],["^ ","^2D",781,"^2E",5449,"^O","cljs.core/List"],["^ ","^2D",796,"^2E",5449],["^ ","^2D",809,"^2E",5449],["^ ","^2D",814,"^2E",5449],["^ ","^2D",818,"^2E",5449],["^ ","^2D",875,"^2E",5449],["^ ","^2D",880,"^2E",5449,"^O","cljs.core/List"],["^ ","^2D",895,"^2E",5449],["^ ","^2D",900,"^2E",5449],["^ ","^2D",956,"^2E",5449],["^ ","^2D",961,"^2E",5449],["^ ","^2D",965,"^2E",5449],["^ ","^2D",972,"^2E",5449],["^ ","^2D",977,"^2E",5449,"^O","cljs.core/List"],["^ ","^2D",992,"^2E",5449],["^ ","^2D",1003,"^2E",5449],["^ ","^2D",1008,"^2E",5449],["^ ","^2D",1012,"^2E",5449],["^ ","^2D",1019,"^2E",5449],["^ ","^2D",1024,"^2E",5449,"^O","cljs.core/List"],["^ ","^2D",1039,"^2E",5449],["^ ","^2D",1044,"^2E",5449],["^ ","^2D",1100,"^2E",5449],["^ ","^2D",1105,"^2E",5449],["^ ","^2D",1109,"^2E",5449],["^ ","^2D",1116,"^2E",5449],["^ ","^2D",1121,"^2E",5449,"^O","cljs.core/List"],["^ ","^2D",1136,"^2E",5449],["^ ","^2D",1148,"^2E",5449],["^ ","^2D",1153,"^2E",5449],["^ ","^2D",1157,"^2E",5449],["^ ","^2D",1173,"^2E",5449],["^ ","^2D",1178,"^2E",5449],["^ ","^2D",1182,"^2E",5449],["^ ","^2D",1192,"^2E",5449],["^ ","^2D",1197,"^2E",5449],["^ ","^2D",1201,"^2E",5449]],"^4X",[["^ ","^2D",9,"^2E",5449,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^6G",[["^ ","^2D",801,"^2E",5449,"^O","queryid"]],"^3B",[["^ ","^2D",997,"^2E",5449,"^O","query"]],"^3U",[["^ ","^2D",1141,"^2E",5449,"^O","params"]],"^4:",[["^ ","^2D",1212,"^2E",5449,"^O","follow-on-reads"]]],"~i2655",["^ ","~i4",[["^ ","^2D",0,"^2E",5450]],"~i8",[["^ ","^2D",20,"^2E",5450],["^ ","^2D",37,"^2E",5450,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5451],["^ ","^2D",0,"^2E",5451],["^ ","^2D",3,"^2E",5451,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5459,"^O","and__3938__auto__"]],"^2G",[["^ ","^2D",57,"^2E",5450]],"^2P",[["^ ","^2D",64,"^2E",5450,"^O","queryid"]],"^30",[["^ ","^2D",0,"^2E",5452],["^ ","^2D",4,"^2E",5452,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",5453],["^ ","^2D",0,"^2E",5453],["^ ","^2D",20,"^2E",5453,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",5454,"^O","or__3949__auto__"]],"^3E",[["^ ","^2D",23,"^2E",5452,"^O","query"]],"^2L",[["^ ","^2D",0,"^2E",5456,"^O","params"]]],"~i2656",["^ ","~i6",[["^ ","^2D",0,"^2E",5462]]],"~i2657",["^ ","~i8",[["^ ","^2D",0,"^2E",5462]],"~i9",[["^ ","^2D",0,"^2E",5462,"^O","fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^35",[["^ ","^2D",70,"^2E",5462,"^O","reconciler"]],"^2X",[["^ ","^2D",81,"^2E",5462,"^O","tx"]]],"~i2658",["^ ","~i8",[["^ ","^2D",0,"^2E",5464]],"~i9",[["^ ","^2D",7,"^2E",5464,"^O","fulcro.client.impl.protocols/reindex!"]],"^4X",[["^ ","^2D",50,"^2E",5464,"^O","reconciler"]]],"~i2659",["^ ","~i6",[["^ ","^2D",0,"^2E",5466],["^ ","^2D",4,"^2E",5466],["^ ","^2D",4,"^2E",5466],["^ ","^2D",11,"^2E",5466,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",68,"^2E",5466],["^ ","^2D",111,"^2E",5466],["^ ","^2D",165,"^2E",5466],["^ ","^2D",192,"^2E",5466],["^ ","^2D",244,"^2E",5466],["^ ","^2D",257,"^2E",5466],["^ ","^2D",362,"^2E",5466],["^ ","^2D",16,"^2E",5467],["^ ","^2D",19,"^2E",5467],["^ ","^2D",20,"^2E",5467,"^O","e39976"],["^ ","^2D",38,"^2E",5467,"^O","js/Error"],["^ ","^2D",0,"^2E",5468],["^ ","^2D",4,"^2E",5468,"^O","e__31518__auto__"],["^ ","^2D",23,"^2E",5468,"^O","e39976"],["^ ","^2D",0,"^2E",5469],["^ ","^2D",0,"^2E",5469],["^ ","^2D",7,"^2E",5469,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",64,"^2E",5469],["^ ","^2D",107,"^2E",5469],["^ ","^2D",161,"^2E",5469],["^ ","^2D",188,"^2E",5469],["^ ","^2D",240,"^2E",5469],["^ ","^2D",253,"^2E",5469],["^ ","^2D",358,"^2E",5469],["^ ","^2D",411,"^2E",5469,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",5471],["^ ","^2D",0,"^2E",5471],["^ ","^2D",6,"^2E",5471,"^O","e39976"]]],"~i2661",["^ ","~i0",[["^ ","^2D",0,"^2E",5476],["^ ","^2D",0,"^2E",5476],["^ ","^2D",67,"^2E",5488],["^ ","^2D",142,"^2E",5488,"^O","var_args"],["^ ","^2D",0,"^2E",5489],["^ ","^2D",0,"^2E",5489],["^ ","^2D",4,"^2E",5489,"^O","G__39986"],["^ ","^2D",15,"^2E",5489],["^ ","^2D",15,"^2E",5489],["^ ","^2D",0,"^2E",5490],["^ ","^2D",0,"^2E",5490],["^ ","^2D",8,"^2E",5490,"^O","G__39986"],["^ ","^2D",5,"^2E",5491],["^ ","^2D",0,"^2E",5492],["^ ","^2D",7,"^2E",5492,"^O","fulcro.client.primitives/pessimistic-transaction->transaction"],["^ ","^2D",102,"^2E",5492],["^ ","^2D",103,"^2E",5492],["^ ","^2D",113,"^2E",5492],["^ ","^2D",5,"^2E",5495],["^ ","^2D",0,"^2E",5496],["^ ","^2D",7,"^2E",5496,"^O","fulcro.client.primitives/pessimistic-transaction->transaction"],["^ ","^2D",102,"^2E",5496],["^ ","^2D",103,"^2E",5496],["^ ","^2D",113,"^2E",5496],["^ ","^2D",119,"^2E",5496],["^ ","^2D",120,"^2E",5496],["^ ","^2D",130,"^2E",5496],["^ ","^2D",0,"^2E",5500],["^ ","^2D",6,"^2E",5500],["^ ","^2D",11,"^2E",5500,"^O","js/Error"],["^ ","^2D",17,"^2E",5500],["^ ","^2D",18,"^2E",5500],["^ ","^2D",80,"^2E",5500],["^ ","^2D",80,"^2E",5500],["^ ","^2D",0,"^2E",5505],["^ ","^2D",0,"^2E",5505],["^ ","^2D",97,"^2E",5505],["^ ","^2D",0,"^2E",5506],["^ ","^2D",0,"^2E",5509],["^ ","^2D",0,"^2E",5509],["^ ","^2D",97,"^2E",5509],["^ ","^2D",111,"^2E",5509,"^O","p__39987"],["^ ","^2D",0,"^2E",5510],["^ ","^2D",0,"^2E",5510],["^ ","^2D",4,"^2E",5510,"^O","map__39988"],["^ ","^2D",17,"^2E",5510,"^O","p__39987"],["^ ","^2D",4,"^2E",5511,"^O","map__39988"],["^ ","^2D",21,"^2E",5511],["^ ","^2D",23,"^2E",5511],["^ ","^2D",25,"^2E",5511],["^ ","^2D",27,"^2E",5511],["^ ","^2D",28,"^2E",5511,"^O","map__39988"],["^ ","^2D",42,"^2E",5511],["^ ","^2D",50,"^2E",5511],["^ ","^2D",52,"^2E",5511],["^ ","^2D",54,"^2E",5511],["^ ","^2D",55,"^2E",5511],["^ ","^2D",55,"^2E",5511,"^O","map__39988"],["^ ","^2D",104,"^2E",5511],["^ ","^2D",115,"^2E",5511],["^ ","^2D",116,"^2E",5511,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",5511],["^ ","^2D",148,"^2E",5511,"^O","map__39988"],["^ ","^2D",179,"^2E",5511],["^ ","^2D",184,"^2E",5511],["^ ","^2D",191,"^2E",5511],["^ ","^2D",199,"^2E",5511],["^ ","^2D",199,"^2E",5511,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",5511,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",5511,"^O","map__39988"],["^ ","^2D",276,"^2E",5511,"^O","map__39988"],["^ ","^2D",14,"^2E",5512,"^O","map__39988"],["^ ","^2D",20,"^2E",5513],["^ ","^2D",20,"^2E",5513,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",64,"^2E",5513,"^O","map__39988"],["^ ","^2D",79,"^2E",5513],["^ ","^2D",151,"^2E",5513],["^ ","^2D",232,"^2E",5513],["^ ","^2D",10,"^2E",5514],["^ ","^2D",10,"^2E",5514,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",5514,"^O","map__39988"],["^ ","^2D",69,"^2E",5514],["^ ","^2D",121,"^2E",5514],["^ ","^2D",16,"^2E",5515],["^ ","^2D",16,"^2E",5515,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",60,"^2E",5515,"^O","map__39988"],["^ ","^2D",75,"^2E",5515],["^ ","^2D",139,"^2E",5515],["^ ","^2D",0,"^2E",5516],["^ ","^2D",0,"^2E",5615],["^ ","^2D",0,"^2E",5615],["^ ","^2D",91,"^2E",5615],["^ ","^2D",0,"^2E",5617]],"~i6",[["^ ","^2D",0,"^2E",5488,"^O","fulcro.client.primitives/pessimistic-transaction->transaction"],["^ ","^2D",0,"^2E",5505,"^O","fulcro.client.primitives/pessimistic-transaction->transaction"],["^ ","^2D",0,"^2E",5509,"^O","fulcro.client.primitives/pessimistic-transaction->transaction"],["^ ","^2D",0,"^2E",5615,"^O","fulcro.client.primitives/pessimistic-transaction->transaction"]]],"~i2672",["^ ","~i4",[["^ ","^2D",108,"^2E",5505,"^O","tx"]],"~i8",[["^ ","^2D",0,"^2E",5506],["^ ","^2D",105,"^2E",5506]],"~i9",[["^ ","^2D",7,"^2E",5506,"^O","fulcro.client.primitives.pessimistic_transaction__GT_transaction.cljs$core$IFn$_invoke$arity$2"]],"^2Q",[["^ ","^2D",102,"^2E",5506,"^O","tx"]]],"~i2673",["^ ","~i4",[["^ ","^2D",108,"^2E",5509,"^O","tx"]],"^2J",[["^ ","^2D",4,"^2E",5513,"^O","valid-remotes"]],"^3H",[["^ ","^2D",4,"^2E",5514,"^O","env"]],"^48",[["^ ","^2D",4,"^2E",5515,"^O","state-map"]]],"~i2675",["^ ","^44",[["^ ","^2D",4,"^2E",5512,"^O","options"]]],"~i2676",["^ ","~i3",[["^ ","^2D",0,"^2E",5516],["^ ","^2D",4,"^2E",5517,"^O","map__39993"],["^ ","^2D",4,"^2E",5522,"^O","map__39993"],["^ ","^2D",21,"^2E",5522],["^ ","^2D",23,"^2E",5522],["^ ","^2D",25,"^2E",5522],["^ ","^2D",27,"^2E",5522],["^ ","^2D",28,"^2E",5522,"^O","map__39993"],["^ ","^2D",42,"^2E",5522],["^ ","^2D",50,"^2E",5522],["^ ","^2D",52,"^2E",5522],["^ ","^2D",54,"^2E",5522],["^ ","^2D",55,"^2E",5522],["^ ","^2D",55,"^2E",5522,"^O","map__39993"],["^ ","^2D",104,"^2E",5522],["^ ","^2D",115,"^2E",5522],["^ ","^2D",116,"^2E",5522,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",5522],["^ ","^2D",148,"^2E",5522,"^O","map__39993"],["^ ","^2D",179,"^2E",5522],["^ ","^2D",184,"^2E",5522],["^ ","^2D",191,"^2E",5522],["^ ","^2D",199,"^2E",5522],["^ ","^2D",199,"^2E",5522,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",5522,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",5522,"^O","map__39993"],["^ ","^2D",276,"^2E",5522,"^O","map__39993"],["^ ","^2D",16,"^2E",5523],["^ ","^2D",16,"^2E",5523,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",60,"^2E",5523,"^O","map__39993"],["^ ","^2D",75,"^2E",5523],["^ ","^2D",16,"^2E",5524],["^ ","^2D",16,"^2E",5524,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",60,"^2E",5524,"^O","map__39993"],["^ ","^2D",75,"^2E",5524],["^ ","^2D",4,"^2E",5572,"^O","vec__39994"],["^ ","^2D",22,"^2E",5573],["^ ","^2D",22,"^2E",5573,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",66,"^2E",5573,"^O","vec__39994"],["^ ","^2D",77,"^2E",5573],["^ ","^2D",81,"^2E",5573],["^ ","^2D",26,"^2E",5574],["^ ","^2D",26,"^2E",5574,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",70,"^2E",5574,"^O","vec__39994"],["^ ","^2D",81,"^2E",5574],["^ ","^2D",85,"^2E",5574],["^ ","^2D",4,"^2E",5590,"^O","vec__39997"],["^ ","^2D",29,"^2E",5591],["^ ","^2D",29,"^2E",5591,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",73,"^2E",5591,"^O","vec__39997"],["^ ","^2D",84,"^2E",5591],["^ ","^2D",88,"^2E",5591],["^ ","^2D",24,"^2E",5592],["^ ","^2D",24,"^2E",5592,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",68,"^2E",5592,"^O","vec__39997"],["^ ","^2D",79,"^2E",5592],["^ ","^2D",83,"^2E",5592],["^ ","^2D",4,"^2E",5593,"^O","map__40000"],["^ ","^2D",4,"^2E",5598,"^O","map__40000"],["^ ","^2D",21,"^2E",5598],["^ ","^2D",23,"^2E",5598],["^ ","^2D",25,"^2E",5598],["^ ","^2D",27,"^2E",5598],["^ ","^2D",28,"^2E",5598,"^O","map__40000"],["^ ","^2D",42,"^2E",5598],["^ ","^2D",50,"^2E",5598],["^ ","^2D",52,"^2E",5598],["^ ","^2D",54,"^2E",5598],["^ ","^2D",55,"^2E",5598],["^ ","^2D",55,"^2E",5598,"^O","map__40000"],["^ ","^2D",104,"^2E",5598],["^ ","^2D",115,"^2E",5598],["^ ","^2D",116,"^2E",5598,"^O","cljs.core/PROTOCOL_SENTINEL"],["^ ","^2D",148,"^2E",5598],["^ ","^2D",148,"^2E",5598,"^O","map__40000"],["^ ","^2D",179,"^2E",5598],["^ ","^2D",184,"^2E",5598],["^ ","^2D",191,"^2E",5598],["^ ","^2D",199,"^2E",5598],["^ ","^2D",199,"^2E",5598,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",245,"^2E",5598,"^O","cljs.core/hash-map"],["^ ","^2D",264,"^2E",5598,"^O","map__40000"],["^ ","^2D",276,"^2E",5598,"^O","map__40000"],["^ ","^2D",20,"^2E",5599],["^ ","^2D",20,"^2E",5599,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",64,"^2E",5599,"^O","map__40000"],["^ ","^2D",79,"^2E",5599],["^ ","^2D",26,"^2E",5600],["^ ","^2D",26,"^2E",5600,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",70,"^2E",5600,"^O","map__40000"],["^ ","^2D",85,"^2E",5600],["^ ","^2D",0,"^2E",5608]],"~i9",[["^ ","^2D",4,"^2E",5516,"^O","ast-nodes"]],"^30",[["^ ","^2D",16,"^2E",5516],["^ ","^2D",16,"^2E",5516]],"^3A",[["^ ","^2D",107,"^2E",5516]],"^2M",[["^ ","^2D",107,"^2E",5516,"^O","fulcro.client.primitives/query->ast"]],"^4E",[["^ ","^2D",146,"^2E",5516,"^O","tx"]]],"~i2677",["^ ","^2I",[["^ ","^2D",4,"^2E",5523,"^O","ast-calls"]],"^3V",[["^ ","^2D",4,"^2E",5524,"^O","ast-reads"]],"^3A",[["^ ","^2D",17,"^2E",5517],["^ ","^2D",36,"^2E",5517],["^ ","^2D",18,"^2E",5518,"^O","p1__39983#"],["^ ","^2D",0,"^2E",5519]],"^2M",[["^ ","^2D",17,"^2E",5517,"^O","cljs.core/group-by"]],"^2S",[["^ ","^2D",0,"^2E",5519],["^ ","^2D",52,"^2E",5519]],"^4E",[["^ ","^2D",7,"^2E",5519,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2W",[["^ ","^2D",105,"^2E",5519],["^ ","^2D",105,"^2E",5519],["^ ","^2D",188,"^2E",5519,"^O","p1__39983#"]],"^31",[["^ ","^2D",1,"^2E",5521,"^O","ast-nodes"]]],"~i2678",["^ ","~i9",[["^ ","^2D",4,"^2E",5525,"^O","ast-follow-on-reads"]],"^30",[["^ ","^2D",26,"^2E",5525],["^ ","^2D",65,"^2E",5525],["^ ","^2D",108,"^2E",5525],["^ ","^2D",161,"^2E",5525],["^ ","^2D",214,"^2E",5525]],"^4Y",[["^ ","^2D",26,"^2E",5525,"^O","fulcro.client.primitives/ast->query"]],"^2Z",[["^ ","^2D",275,"^2E",5525,"^O","ast-reads"]]],"~i2679",["^ ","~i9",[["^ ","^2D",4,"^2E",5526,"^O","remote-for-ast-call"]],"^30",[["^ ","^2D",26,"^2E",5526],["^ ","^2D",0,"^2E",5528]],"^38",[["^ ","^2D",18,"^2E",5527,"^O","c"]],"^3W",[["^ ","^2D",0,"^2E",5528],["^ ","^2D",0,"^2E",5560]],"^4>",[["^ ","^2D",4,"^2E",5528,"^O","dispatch-key"]],"^4J",[["^ ","^2D",19,"^2E",5528],["^ ","^2D",19,"^2E",5528]],"^31",[["^ ","^2D",117,"^2E",5528,"^O","c"]]],"~i2680",["^ ","^4>",[["^ ","^2D",4,"^2E",5529,"^O","get-remotes"]],"^4J",[["^ ","^2D",18,"^2E",5529],["^ ","^2D",35,"^2E",5529,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",5540],["^ ","^2D",0,"^2E",5540],["^ ","^2D",20,"^2E",5540,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",5541,"^O","or__3949__auto__"]],"^2W",[["^ ","^2D",54,"^2E",5529],["^ ","^2D",71,"^2E",5529,"^O","G__40003"],["^ ","^2D",0,"^2E",5534],["^ ","^2D",0,"^2E",5534],["^ ","^2D",3,"^2E",5534],["^ ","^2D",4,"^2E",5534,"^O","G__40003"],["^ ","^2D",16,"^2E",5534],["^ ","^2D",0,"^2E",5535],["^ ","^2D",0,"^2E",5537],["^ ","^2D",23,"^2E",5537,"^O","G__40003"]],"^>B",[["^ ","^2D",82,"^2E",5529],["^ ","^2D",84,"^2E",5529],["^ ","^2D",92,"^2E",5529,"^O","js/fulcro"],["^ ","^2D",127,"^2E",5529,"^O","js/fulcro.client"],["^ ","^2D",169,"^2E",5529,"^O","js/fulcro.client.data-fetch"],["^ ","^2D",222,"^2E",5529,"^O","js/fulcro.client.data-fetch.get-remotes"],["^ ","^2D",277,"^2E",5529],["^ ","^2D",277,"^2E",5529],["^ ","^2D",282,"^2E",5529,"^O","cljs.core/Var"],["^ ","^2D",296,"^2E",5529],["^ ","^2D",0,"^2E",5531],["^ ","^2D",0,"^2E",5531,"^O","fulcro.client.data-fetch/get-remotes"],["^ ","^2D",1,"^2E",5533],["^ ","^2D",21,"^2E",5533],["^ ","^2D",140,"^2E",5533],["^ ","^2D",183,"^2E",5533],["^ ","^2D",274,"^2E",5533],["^ ","^2D",288,"^2E",5533],["^ ","^2D",295,"^2E",5533]],"^4=",[["^ ","^2D",7,"^2E",5537,"^O","cljs.core/deref"]]],"~i2681",["^ ","^7U",[["^ ","^2D",0,"^2E",5543],["^ ","^2D",0,"^2E",5545],["^ ","^2D",0,"^2E",5554],["^ ","^2D",88,"^2E",5554]],"^61",[["^ ","^2D",18,"^2E",5544,"^O","state-map"]],"^32",[["^ ","^2D",32,"^2E",5544,"^O","sym"]]],"~i2682",["^ ","^2W",[["^ ","^2D",0,"^2E",5545],["^ ","^2D",4,"^2E",5545],["^ ","^2D",4,"^2E",5545],["^ ","^2D",4,"^2E",5545,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",5545],["^ ","^2D",104,"^2E",5545],["^ ","^2D",158,"^2E",5545],["^ ","^2D",185,"^2E",5545],["^ ","^2D",237,"^2E",5545],["^ ","^2D",250,"^2E",5545],["^ ","^2D",355,"^2E",5545],["^ ","^2D",16,"^2E",5546],["^ ","^2D",19,"^2E",5546],["^ ","^2D",20,"^2E",5546,"^O","e40007"],["^ ","^2D",38,"^2E",5546,"^O","js/Error"],["^ ","^2D",0,"^2E",5547],["^ ","^2D",4,"^2E",5547,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",5547,"^O","e40007"],["^ ","^2D",0,"^2E",5548],["^ ","^2D",0,"^2E",5548],["^ ","^2D",0,"^2E",5548,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",5548],["^ ","^2D",100,"^2E",5548],["^ ","^2D",154,"^2E",5548],["^ ","^2D",181,"^2E",5548],["^ ","^2D",233,"^2E",5548],["^ ","^2D",246,"^2E",5548],["^ ","^2D",351,"^2E",5548],["^ ","^2D",404,"^2E",5548,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",5550],["^ ","^2D",0,"^2E",5550],["^ ","^2D",6,"^2E",5550,"^O","e40007"]]],"~i2684",["^ ","^4>",[["^ ","^2D",4,"^2E",5559,"^O","remotes"]],"^4J",[["^ ","^2D",14,"^2E",5559],["^ ","^2D",103,"^2E",5559]],"^2W",[["^ ","^2D",16,"^2E",5559],["^ ","^2D",61,"^2E",5559]],"^5[",[["^ ","^2D",16,"^2E",5559,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^33",[["^ ","^2D",72,"^2E",5559]],"^7F",[["^ ","^2D",72,"^2E",5559,"^O","cljs.core/name"]],"^>@",[["^ ","^2D",87,"^2E",5559,"^O","dispatch-key"]]],"~i2686",["^ ","^7U",[["^ ","^2D",137,"^2E",5559]],"^4B",[["^ ","^2D",138,"^2E",5559,"^O","get-remotes"],["^ ","^2D",182,"^2E",5559,"^O","get-remotes"],["^ ","^2D",250,"^2E",5559,"^O","get-remotes"]],"^31",[["^ ","^2D",224,"^2E",5559,"^O","state-map"],["^ ","^2D",272,"^2E",5559,"^O","state-map"]],"^3:",[["^ ","^2D",234,"^2E",5559,"^O","dispatch-key"],["^ ","^2D",282,"^2E",5559,"^O","dispatch-key"]]],"~i2687",["^ ","^2L",[["^ ","^2D",0,"^2E",5560],["^ ","^2D",0,"^2E",5561],["^ ","^2D",0,"^2E",5563]],"^5C",[["^ ","^2D",3,"^2E",5560]],"^2R",[["^ ","^2D",3,"^2E",5560,"^O","cljs.core/seq"]],"^4<",[["^ ","^2D",17,"^2E",5560,"^O","remotes"]]],"~i2688",["^ ","^2M",[["^ ","^2D",0,"^2E",5561]],"^2N",[["^ ","^2D",7,"^2E",5561,"^O","cljs.core/first"]],"^5;",[["^ ","^2D",23,"^2E",5561,"^O","remotes"]]],"~i2689",["^ ","~i9",[["^ ","^2D",4,"^2E",5567,"^O","is-local?"]],"^30",[["^ ","^2D",22,"^2E",5567],["^ ","^2D",0,"^2E",5569]],"^38",[["^ ","^2D",18,"^2E",5568,"^O","c"]],"^3W",[["^ ","^2D",0,"^2E",5569]],"^2K",[["^ ","^2D",7,"^2E",5569,"^O","cljs.core/not"]],"^2N",[["^ ","^2D",21,"^2E",5569]],"^4>",[["^ ","^2D",21,"^2E",5569,"^O","remote-for-ast-call"]],"^61",[["^ ","^2D",41,"^2E",5569,"^O","c"]]],"~i2690",["^ ","^2I",[["^ ","^2D",4,"^2E",5573,"^O","ast-local-calls"]],"^3>",[["^ ","^2D",4,"^2E",5574,"^O","ast-remaining-calls"]],"^5C",[["^ ","^2D",17,"^2E",5572]],"^2R",[["^ ","^2D",17,"^2E",5572,"^O","cljs.core/split-with"]],"^4@",[["^ ","^2D",38,"^2E",5572,"^O","is-local?"]],"^6>",[["^ ","^2D",54,"^2E",5572,"^O","ast-calls"]]],"~i2691",["^ ","~i9",[["^ ","^2D",4,"^2E",5575,"^O","ast-first-remote-call"]],"^30",[["^ ","^2D",28,"^2E",5575],["^ ","^2D",45,"^2E",5575,"^O","G__40008"],["^ ","^2D",0,"^2E",5576],["^ ","^2D",0,"^2E",5576],["^ ","^2D",3,"^2E",5576],["^ ","^2D",4,"^2E",5576,"^O","G__40008"],["^ ","^2D",16,"^2E",5576],["^ ","^2D",0,"^2E",5577]],"^3W",[["^ ","^2D",56,"^2E",5575,"^O","ast-remaining-calls"]],"^4@",[["^ ","^2D",0,"^2E",5579],["^ ","^2D",23,"^2E",5579,"^O","G__40008"]],"^7U",[["^ ","^2D",7,"^2E",5579,"^O","cljs.core/first"]]],"~i2692",["^ ","~i9",[["^ ","^2D",4,"^2E",5582,"^O","remote"]],"^30",[["^ ","^2D",13,"^2E",5582],["^ ","^2D",30,"^2E",5582,"^O","G__40009"],["^ ","^2D",0,"^2E",5583],["^ ","^2D",0,"^2E",5583],["^ ","^2D",3,"^2E",5583],["^ ","^2D",4,"^2E",5583,"^O","G__40009"],["^ ","^2D",16,"^2E",5583],["^ ","^2D",0,"^2E",5584],["^ ","^2D",0,"^2E",5586],["^ ","^2D",27,"^2E",5586,"^O","G__40009"]],"^3W",[["^ ","^2D",41,"^2E",5582,"^O","ast-first-remote-call"]],"^4B",[["^ ","^2D",7,"^2E",5586,"^O","remote-for-ast-call"]]],"~i2693",["^ ","~i9",[["^ ","^2D",4,"^2E",5589,"^O","unprocessed-call-asts"]],"^30",[["^ ","^2D",28,"^2E",5589]],"^4Y",[["^ ","^2D",28,"^2E",5589,"^O","cljs.core/vec"]],"^38",[["^ ","^2D",42,"^2E",5589]],"^2F",[["^ ","^2D",42,"^2E",5589,"^O","cljs.core/rest"]],"^3A",[["^ ","^2D",57,"^2E",5589,"^O","ast-remaining-calls"]]],"~i2694",["^ ","^2I",[["^ ","^2D",4,"^2E",5591,"^O","possible-fallback-asts"]],"^48",[["^ ","^2D",4,"^2E",5592,"^O","distant-call-asts"]],"^4<",[["^ ","^2D",17,"^2E",5590]],"^2S",[["^ ","^2D",17,"^2E",5590,"^O","cljs.core/split-with"]],"^2Y",[["^ ","^2D",38,"^2E",5590,"^O","is-local?"]],"^6G",[["^ ","^2D",54,"^2E",5590,"^O","unprocessed-call-asts"]]],"~i2695",["^ ","^2I",[["^ ","^2D",4,"^2E",5599,"^O","fallback-asts"]],"^3H",[["^ ","^2D",4,"^2E",5600,"^O","following-call-asts"]],"^5F",[["^ ","^2D",17,"^2E",5593],["^ ","^2D",36,"^2E",5593],["^ ","^2D",18,"^2E",5594,"^O","p1__39984#"],["^ ","^2D",0,"^2E",5595]],"^2V",[["^ ","^2D",17,"^2E",5593,"^O","cljs.core/group-by"]],"^3[",[["^ ","^2D",0,"^2E",5595],["^ ","^2D",52,"^2E",5595]],"^40",[["^ ","^2D",7,"^2E",5595,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^HG",[["^ ","^2D",63,"^2E",5595],["^ ","^2D",78,"^2E",5595],["^ ","^2D",78,"^2E",5595],["^ ","^2D",176,"^2E",5595,"^O","p1__39984#"]],"^3Q",[["^ ","^2D",63,"^2E",5595,"^O","cljs.core/name"]],"^45",[["^ ","^2D",1,"^2E",5597,"^O","possible-fallback-asts"]]],"~i2696",["^ ","~i9",[["^ ","^2D",4,"^2E",5601,"^O","unprocessed-tx"]],"^30",[["^ ","^2D",21,"^2E",5601],["^ ","^2D",60,"^2E",5601],["^ ","^2D",103,"^2E",5601],["^ ","^2D",156,"^2E",5601],["^ ","^2D",209,"^2E",5601]],"^4Y",[["^ ","^2D",21,"^2E",5601,"^O","fulcro.client.primitives/ast->query"]],"^2Z",[["^ ","^2D",270,"^2E",5601]],"^3[",[["^ ","^2D",270,"^2E",5601,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"^6G",[["^ ","^2D",317,"^2E",5601,"^O","following-call-asts"]],"^3J",[["^ ","^2D",337,"^2E",5601,"^O","distant-call-asts"]]],"~i2697",["^ ","~i9",[["^ ","^2D",4,"^2E",5602,"^O","calls-to-run-now"]],"^30",[["^ ","^2D",23,"^2E",5602]],"^4Y",[["^ ","^2D",23,"^2E",5602,"^O","cljs.core.keep.cljs$core$IFn$_invoke$arity$2"]],"^2F",[["^ ","^2D",68,"^2E",5602,"^O","cljs.core/identity"]],"^2Q",[["^ ","^2D",87,"^2E",5602],["^ ","^2D",157,"^2E",5602]],"^5C",[["^ ","^2D",87,"^2E",5602,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"]],"^4E",[["^ ","^2D",141,"^2E",5602,"^O","ast-local-calls"]],"^2[",[["^ ","^2D",240,"^2E",5602,"^O","ast-first-remote-call"]],"^3J",[["^ ","^2D",320,"^2E",5602,"^O","fallback-asts"]]],"~i2698",["^ ","~i9",[["^ ","^2D",4,"^2E",5603,"^O","tx-for-calls"]],"^30",[["^ ","^2D",19,"^2E",5603],["^ ","^2D",58,"^2E",5603],["^ ","^2D",101,"^2E",5603],["^ ","^2D",154,"^2E",5603],["^ ","^2D",207,"^2E",5603]],"^4Y",[["^ ","^2D",19,"^2E",5603,"^O","fulcro.client.primitives/ast->query"]],"^2Z",[["^ ","^2D",268,"^2E",5603,"^O","calls-to-run-now"]]],"~i2699",["^ ","~i9",[["^ ","^2D",4,"^2E",5604,"^O","tx-to-run-now"]],"^30",[["^ ","^2D",20,"^2E",5604]],"^4Y",[["^ ","^2D",20,"^2E",5604,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^2F",[["^ ","^2D",65,"^2E",5604,"^O","tx-for-calls"]],"^5;",[["^ ","^2D",78,"^2E",5604,"^O","ast-follow-on-reads"]]],"~i2700",["^ ","~i9",[["^ ","^2D",4,"^2E",5605,"^O","tx-to-defer"]],"^30",[["^ ","^2D",18,"^2E",5605]],"^4Y",[["^ ","^2D",18,"^2E",5605,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^2F",[["^ ","^2D",63,"^2E",5605,"^O","unprocessed-tx"]],"^4<",[["^ ","^2D",78,"^2E",5605,"^O","ast-follow-on-reads"]]],"~i2701",["^ ","~i9",[["^ ","^2D",4,"^2E",5606,"^O","defer?"]],"^30",[["^ ","^2D",19,"^2E",5606]],"^4Y",[["^ ","^2D",19,"^2E",5606,"^O","cljs.core/seq"]],"^38",[["^ ","^2D",33,"^2E",5606,"^O","unprocessed-call-asts"]]],"~i2702",["^ ","~i9",[["^ ","^2D",4,"^2E",5607,"^O","deferred-params"]],"^30",[["^ ","^2D",22,"^2E",5607],["^ ","^2D",38,"^2E",5607],["^ ","^2D",567,"^2E",5607]],"^2F",[["^ ","^2D",24,"^2E",5607,"^O","defer?"]]],"~i2703",["^ ","^48",[["^ ","^2D",38,"^2E",5607],["^ ","^2D",281,"^2E",5607],["^ ","^2D",324,"^2E",5607],["^ ","^2D",389,"^2E",5607]],"^2C",[["^ ","^2D",38,"^2E",5607,"^O","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"]],"^2K",[["^ ","^2D",141,"^2E",5607],["^ ","^2D",193,"^2E",5607],["^ ","^2D",245,"^2E",5607]],"^2L",[["^ ","^2D",141,"^2E",5607,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"]],"^4>",[["^ ","^2D",185,"^2E",5607,"^O","options"]]],"~i2704",["^ ","^2N",[["^ ","^2D",382,"^2E",5607,"^O","remote"]],"^2U",[["^ ","^2D",437,"^2E",5607]],"^5F",[["^ ","^2D",437,"^2E",5607,"^O","fulcro.client.primitives.pessimistic_transaction__GT_transaction.cljs$core$IFn$_invoke$arity$2"]],"^3I",[["^ ","^2D",532,"^2E",5607,"^O","tx-to-defer"]],"^3U",[["^ ","^2D",544,"^2E",5607,"^O","options"]]],"~i2705",["^ ","~i5",[["^ ","^2D",0,"^2E",5608]],"~i9",[["^ ","^2D",3,"^2E",5608,"^O","defer?"]]],"~i2706",["^ ","~i7",[["^ ","^2D",0,"^2E",5609],["^ ","^2D",66,"^2E",5609],["^ ","^2D",66,"^2E",5609,"^O","cljs.core/vec"],["^ ","^2D",80,"^2E",5609],["^ ","^2D",80,"^2E",5609,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",129,"^2E",5609],["^ ","^2D",129,"^2E",5609,"^O","cljs.core/seq"],["^ ","^2D",143,"^2E",5609],["^ ","^2D",143,"^2E",5609,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",190,"^2E",5609],["^ ","^2D",195,"^2E",5609,"^O","cljs.core/List"],["^ ","^2D",210,"^2E",5609],["^ ","^2D",215,"^2E",5609],["^ ","^2D",215,"^2E",5609,"^O","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1"],["^ ","^2D",264,"^2E",5609],["^ ","^2D",264,"^2E",5609,"^O","cljs.core/seq"],["^ ","^2D",278,"^2E",5609],["^ ","^2D",278,"^2E",5609,"^O","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^2D",325,"^2E",5609],["^ ","^2D",330,"^2E",5609,"^O","cljs.core/List"],["^ ","^2D",345,"^2E",5609],["^ ","^2D",350,"^2E",5609],["^ ","^2D",485,"^2E",5609],["^ ","^2D",490,"^2E",5609],["^ ","^2D",494,"^2E",5609],["^ ","^2D",501,"^2E",5609],["^ ","^2D",506,"^2E",5609,"^O","cljs.core/List"],["^ ","^2D",521,"^2E",5609],["^ ","^2D",542,"^2E",5609],["^ ","^2D",547,"^2E",5609],["^ ","^2D",551,"^2E",5609],["^ ","^2D",561,"^2E",5609],["^ ","^2D",566,"^2E",5609],["^ ","^2D",570,"^2E",5609]],"~i8",[["^ ","^2D",7,"^2E",5609,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^2D",52,"^2E",5609,"^O","tx-to-run-now"]],"^7F",[["^ ","^2D",526,"^2E",5609,"^O","deferred-params"]]],"~i2707",["^ ","~i7",[["^ ","^2D",0,"^2E",5611,"^O","tx-to-run-now"]]],"~i2709",["^ ","~i0",[["^ ","^2D",0,"^2E",5617],["^ ","^2D",0,"^2E",5617],["^ ","^2D",43,"^2E",5632],["^ ","^2D",94,"^2E",5632,"^O","var_args"],["^ ","^2D",0,"^2E",5633],["^ ","^2D",0,"^2E",5633],["^ ","^2D",4,"^2E",5633,"^O","G__40029"],["^ ","^2D",15,"^2E",5633],["^ ","^2D",15,"^2E",5633],["^ ","^2D",0,"^2E",5634],["^ ","^2D",0,"^2E",5634],["^ ","^2D",8,"^2E",5634,"^O","G__40029"],["^ ","^2D",5,"^2E",5635],["^ ","^2D",0,"^2E",5636],["^ ","^2D",7,"^2E",5636,"^O","fulcro.client.primitives/ptransact!"],["^ ","^2D",78,"^2E",5636],["^ ","^2D",79,"^2E",5636],["^ ","^2D",89,"^2E",5636],["^ ","^2D",95,"^2E",5636],["^ ","^2D",96,"^2E",5636],["^ ","^2D",106,"^2E",5636],["^ ","^2D",5,"^2E",5639],["^ ","^2D",0,"^2E",5640],["^ ","^2D",7,"^2E",5640,"^O","fulcro.client.primitives/ptransact!"],["^ ","^2D",78,"^2E",5640],["^ ","^2D",79,"^2E",5640],["^ ","^2D",89,"^2E",5640],["^ ","^2D",95,"^2E",5640],["^ ","^2D",96,"^2E",5640],["^ ","^2D",106,"^2E",5640],["^ ","^2D",112,"^2E",5640],["^ ","^2D",113,"^2E",5640],["^ ","^2D",123,"^2E",5640],["^ ","^2D",0,"^2E",5644],["^ ","^2D",6,"^2E",5644],["^ ","^2D",11,"^2E",5644,"^O","js/Error"],["^ ","^2D",17,"^2E",5644],["^ ","^2D",18,"^2E",5644],["^ ","^2D",80,"^2E",5644],["^ ","^2D",80,"^2E",5644],["^ ","^2D",0,"^2E",5649],["^ ","^2D",0,"^2E",5649],["^ ","^2D",73,"^2E",5649],["^ ","^2D",0,"^2E",5650],["^ ","^2D",0,"^2E",5654],["^ ","^2D",0,"^2E",5654],["^ ","^2D",73,"^2E",5654],["^ ","^2D",0,"^2E",5655],["^ ","^2D",0,"^2E",5680],["^ ","^2D",0,"^2E",5680],["^ ","^2D",67,"^2E",5680],["^ ","^2D",0,"^2E",5682]],"~i6",[["^ ","^2D",0,"^2E",5632,"^O","fulcro.client.primitives/ptransact!"],["^ ","^2D",0,"^2E",5649,"^O","fulcro.client.primitives/ptransact!"],["^ ","^2D",0,"^2E",5654,"^O","fulcro.client.primitives/ptransact!"],["^ ","^2D",0,"^2E",5680,"^O","fulcro.client.primitives/ptransact!"]]],"~i2723",["^ ","~i4",[["^ ","^2D",84,"^2E",5649,"^O","comp-or-reconciler"]],"^3Y",[["^ ","^2D",103,"^2E",5649,"^O","tx"]]],"~i2724",["^ ","~i3",[["^ ","^2D",0,"^2E",5650],["^ ","^2D",0,"^2E",5651]],"~i9",[["^ ","^2D",4,"^2E",5650,"^O","ref"]],"^2G",[["^ ","^2D",10,"^2E",5650],["^ ","^2D",146,"^2E",5650],["^ ","^2D",231,"^2E",5650]],"^35",[["^ ","^2D",12,"^2E",5650]],"^3=",[["^ ","^2D",14,"^2E",5650]],"^3V",[["^ ","^2D",14,"^2E",5650,"^O","fulcro.client.primitives/component?"]],"^38",[["^ ","^2D",56,"^2E",5650,"^O","comp-or-reconciler"]],"^5F",[["^ ","^2D",81,"^2E",5650]],"^2V",[["^ ","^2D",81,"^2E",5650,"^O","fulcro.client.primitives/has-ident?"]],"^40",[["^ ","^2D",123,"^2E",5650,"^O","comp-or-reconciler"]],"^3@",[["^ ","^2D",146,"^2E",5650]],"^3B",[["^ ","^2D",146,"^2E",5650,"^O","fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$1"]],"^3P",[["^ ","^2D",211,"^2E",5650,"^O","comp-or-reconciler"]]],"~i2725",["^ ","~i5",[["^ ","^2D",0,"^2E",5651]],"~i6",[["^ ","^2D",7,"^2E",5651,"^O","fulcro.client.primitives.ptransact_BANG_.cljs$core$IFn$_invoke$arity$3"]],"^3K",[["^ ","^2D",78,"^2E",5651,"^O","comp-or-reconciler"]],"^38",[["^ ","^2D",97,"^2E",5651,"^O","ref"]],"^2K",[["^ ","^2D",101,"^2E",5651,"^O","tx"]]],"~i2726",["^ ","~i4",[["^ ","^2D",84,"^2E",5654,"^O","comp-or-reconciler"]],"^3Y",[["^ ","^2D",103,"^2E",5654,"^O","ref"]],"^3L",[["^ ","^2D",107,"^2E",5654,"^O","tx"]]],"~i2727",["^ ","~i3",[["^ ","^2D",0,"^2E",5655],["^ ","^2D",16,"^2E",5656],["^ ","^2D",16,"^2E",5656,"^O","cljs.core/deref"],["^ ","^2D",0,"^2E",5673]],"~i9",[["^ ","^2D",4,"^2E",5655,"^O","reconciler"]],"^4X",[["^ ","^2D",17,"^2E",5655]],"^3=",[["^ ","^2D",19,"^2E",5655]],"^3V",[["^ ","^2D",19,"^2E",5655,"^O","fulcro.client.primitives/reconciler?"]],"^2F",[["^ ","^2D",62,"^2E",5655,"^O","comp-or-reconciler"]],"^2V",[["^ ","^2D",83,"^2E",5655,"^O","comp-or-reconciler"]],"^33",[["^ ","^2D",102,"^2E",5655]],"^7F",[["^ ","^2D",102,"^2E",5655,"^O","fulcro.client.primitives/get-reconciler"]],"^3G",[["^ ","^2D",142,"^2E",5655,"^O","comp-or-reconciler"]]],"~i2728",["^ ","~i9",[["^ ","^2D",4,"^2E",5656,"^O","state-map"]],"^3D",[["^ ","^2D",32,"^2E",5656]],"^2P",[["^ ","^2D",32,"^2E",5656,"^O","fulcro.client.primitives/app-state"]],"^4Y",[["^ ","^2D",67,"^2E",5656,"^O","reconciler"]]],"~i2729",["^ ","~i9",[["^ ","^2D",4,"^2E",5657,"^O","remotes"]],"^4X",[["^ ","^2D",14,"^2E",5657],["^ ","^2D",31,"^2E",5657,"^O","G__40033"],["^ ","^2D",4,"^2E",5658,"^O","G__40033"],["^ ","^2D",19,"^2E",5658],["^ ","^2D",21,"^2E",5658],["^ ","^2D",22,"^2E",5658,"^O","G__40033"],["^ ","^2D",34,"^2E",5658],["^ ","^2D",41,"^2E",5658],["^ ","^2D",46,"^2E",5658],["^ ","^2D",46,"^2E",5658],["^ ","^2D",132,"^2E",5658,"^O","G__40033"],["^ ","^2D",4,"^2E",5659,"^O","G__40033"],["^ ","^2D",19,"^2E",5659],["^ ","^2D",21,"^2E",5659],["^ ","^2D",22,"^2E",5659,"^O","G__40033"],["^ ","^2D",38,"^2E",5659],["^ ","^2D",45,"^2E",5659],["^ ","^2D",50,"^2E",5659],["^ ","^2D",50,"^2E",5659],["^ ","^2D",139,"^2E",5659,"^O","G__40033"],["^ ","^2D",0,"^2E",5660],["^ ","^2D",0,"^2E",5660],["^ ","^2D",3,"^2E",5660],["^ ","^2D",4,"^2E",5660,"^O","G__40033"],["^ ","^2D",20,"^2E",5660],["^ ","^2D",0,"^2E",5661],["^ ","^2D",0,"^2E",5663],["^ ","^2D",21,"^2E",5663,"^O","G__40033"]],"^4I",[["^ ","^2D",42,"^2E",5657,"^O","reconciler"]],"^5F",[["^ ","^2D",7,"^2E",5663,"^O","cljs.core/set"]]],"~i2730",["^ ","~i9",[["^ ","^2D",4,"^2E",5666,"^O","ptx"]],"^4X",[["^ ","^2D",10,"^2E",5666]],"^3D",[["^ ","^2D",10,"^2E",5666,"^O","fulcro.client.primitives.pessimistic_transaction__GT_transaction.cljs$core$IFn$_invoke$arity$2"]],"^4J",[["^ ","^2D",105,"^2E",5666,"^O","tx"]],"^4B",[["^ ","^2D",108,"^2E",5666],["^ ","^2D",125,"^2E",5666,"^O","G__40034"],["^ ","^2D",136,"^2E",5666],["^ ","^2D",179,"^2E",5666],["^ ","^2D",259,"^2E",5666],["^ ","^2D",0,"^2E",5667],["^ ","^2D",0,"^2E",5667],["^ ","^2D",0,"^2E",5670,"^O","G__40034"]],"^3;",[["^ ","^2D",251,"^2E",5666,"^O","remotes"]],"^3T",[["^ ","^2D",323,"^2E",5666,"^O","state-map"]]],"~i2731",["^ ","^5[",[["^ ","^2D",20,"^2E",5667,"^O","ref"]],"^3[",[["^ ","^2D",0,"^2E",5668],["^ ","^2D",53,"^2E",5668,"^O","G__40034"],["^ ","^2D",62,"^2E",5668],["^ ","^2D",114,"^2E",5668],["^ ","^2D",157,"^2E",5668]],"^40",[["^ ","^2D",7,"^2E",5668,"^O","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3;",[["^ ","^2D",208,"^2E",5668,"^O","ref"]]],"~i2733",["^ ","^44",[["^ ","^2D",0,"^2E",5673],["^ ","^2D",1,"^2E",5677]],"^2J",[["^ ","^2D",7,"^2E",5673,"^O","js/setTimeout"]],"^3H",[["^ ","^2D",18,"^2E",5673],["^ ","^2D",0,"^2E",5675]],"^38",[["^ ","^2D",0,"^2E",5675]],"^2F",[["^ ","^2D",7,"^2E",5675,"^O","fulcro.client.primitives.transact_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^5C",[["^ ","^2D",77,"^2E",5675,"^O","comp-or-reconciler"]],"^2Z",[["^ ","^2D",96,"^2E",5675,"^O","ptx"]]],"~i2767",["^ ","~i0",[["^ ","^2D",0,"^2E",5682],["^ ","^2D",0,"^2E",5682],["^ ","^2D",51,"^2E",5691],["^ ","^2D",110,"^2E",5691,"^O","var_args"],["^ ","^2D",0,"^2E",5692],["^ ","^2D",0,"^2E",5692],["^ ","^2D",4,"^2E",5692,"^O","G__40044"],["^ ","^2D",15,"^2E",5692],["^ ","^2D",15,"^2E",5692],["^ ","^2D",0,"^2E",5693],["^ ","^2D",0,"^2E",5693],["^ ","^2D",8,"^2E",5693,"^O","G__40044"],["^ ","^2D",5,"^2E",5694],["^ ","^2D",0,"^2E",5695],["^ ","^2D",7,"^2E",5695,"^O","fulcro.client.primitives/replace-and-validate-fn"],["^ ","^2D",86,"^2E",5695],["^ ","^2D",87,"^2E",5695],["^ ","^2D",97,"^2E",5695],["^ ","^2D",103,"^2E",5695],["^ ","^2D",104,"^2E",5695],["^ ","^2D",114,"^2E",5695],["^ ","^2D",120,"^2E",5695],["^ ","^2D",121,"^2E",5695],["^ ","^2D",131,"^2E",5695],["^ ","^2D",137,"^2E",5695],["^ ","^2D",138,"^2E",5695],["^ ","^2D",148,"^2E",5695],["^ ","^2D",5,"^2E",5698],["^ ","^2D",0,"^2E",5699],["^ ","^2D",7,"^2E",5699,"^O","fulcro.client.primitives/replace-and-validate-fn"],["^ ","^2D",86,"^2E",5699],["^ ","^2D",87,"^2E",5699],["^ ","^2D",97,"^2E",5699],["^ ","^2D",103,"^2E",5699],["^ ","^2D",104,"^2E",5699],["^ ","^2D",114,"^2E",5699],["^ ","^2D",120,"^2E",5699],["^ ","^2D",121,"^2E",5699],["^ ","^2D",131,"^2E",5699],["^ ","^2D",137,"^2E",5699],["^ ","^2D",138,"^2E",5699],["^ ","^2D",148,"^2E",5699],["^ ","^2D",154,"^2E",5699],["^ ","^2D",155,"^2E",5699],["^ ","^2D",165,"^2E",5699],["^ ","^2D",0,"^2E",5703],["^ ","^2D",6,"^2E",5703],["^ ","^2D",11,"^2E",5703,"^O","js/Error"],["^ ","^2D",17,"^2E",5703],["^ ","^2D",18,"^2E",5703],["^ ","^2D",80,"^2E",5703],["^ ","^2D",80,"^2E",5703],["^ ","^2D",0,"^2E",5708],["^ ","^2D",0,"^2E",5708],["^ ","^2D",81,"^2E",5708],["^ ","^2D",0,"^2E",5709],["^ ","^2D",0,"^2E",5712],["^ ","^2D",0,"^2E",5712],["^ ","^2D",81,"^2E",5712],["^ ","^2D",0,"^2E",5713],["^ ","^2D",0,"^2E",5730],["^ ","^2D",0,"^2E",5730],["^ ","^2D",75,"^2E",5730],["^ ","^2D",0,"^2E",5732]],"~i7",[["^ ","^2D",0,"^2E",5691,"^O","fulcro.client.primitives/replace-and-validate-fn"],["^ ","^2D",0,"^2E",5708,"^O","fulcro.client.primitives/replace-and-validate-fn"],["^ ","^2D",0,"^2E",5712,"^O","fulcro.client.primitives/replace-and-validate-fn"],["^ ","^2D",0,"^2E",5730,"^O","fulcro.client.primitives/replace-and-validate-fn"]]],"~i2775",["^ ","~i4",[["^ ","^2D",92,"^2E",5708,"^O","sym"]],"~i8",[["^ ","^2D",96,"^2E",5708,"^O","external-args"]],"^2P",[["^ ","^2D",110,"^2E",5708,"^O","user-arity"]],"^48",[["^ ","^2D",121,"^2E",5708,"^O","fn-form"]],"^3A",[["^ ","^2D",0,"^2E",5709]],"^2M",[["^ ","^2D",7,"^2E",5709,"^O","fulcro.client.primitives.replace_and_validate_fn.cljs$core$IFn$_invoke$arity$5"]],"^3[",[["^ ","^2D",86,"^2E",5709,"^O","sym"]],"^2[",[["^ ","^2D",90,"^2E",5709,"^O","external-args"]],"^3;",[["^ ","^2D",104,"^2E",5709,"^O","user-arity"]],"^3M",[["^ ","^2D",115,"^2E",5709,"^O","fn-form"]],"^3T",[["^ ","^2D",123,"^2E",5709,"^O","sym"]]],"~i2776",["^ ","~i4",[["^ ","^2D",92,"^2E",5712,"^O","sym"]],"~i8",[["^ ","^2D",96,"^2E",5712,"^O","external-args"]],"^2P",[["^ ","^2D",110,"^2E",5712,"^O","user-arity"]],"^48",[["^ ","^2D",121,"^2E",5712,"^O","fn-form"]],"^2L",[["^ ","^2D",129,"^2E",5712,"^O","user-known-sym"]]],"~i2777",["^ ","~i3",[["^ ","^2D",0,"^2E",5713],["^ ","^2D",0,"^2E",5714],["^ ","^2D",0,"^2E",5715]],"^2G",[["^ ","^2D",3,"^2E",5713]],"^3K",[["^ ","^2D",4,"^2E",5713,"^O","user-arity"]],"^4I",[["^ ","^2D",18,"^2E",5713]],"^3H",[["^ ","^2D",18,"^2E",5713,"^O","cljs.core/count"]],"^3E",[["^ ","^2D",34,"^2E",5713]],"^38",[["^ ","^2D",34,"^2E",5713,"^O","cljs.core/second"]],"^2M",[["^ ","^2D",51,"^2E",5713,"^O","fn-form"]]],"~i2778",["^ ","~i5",[["^ ","^2D",0,"^2E",5715]],"^3S",[["^ ","^2D",6,"^2E",5715],["^ ","^2D",146,"^2E",5715],["^ ","^2D",189,"^2E",5715],["^ ","^2D",328,"^2E",5715]],"^2G",[["^ ","^2D",6,"^2E",5715,"^O","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"]],"^3D",[["^ ","^2D",54,"^2E",5715],["^ ","^2D",55,"^2E",5715]],"^5C",[["^ ","^2D",120,"^2E",5715,"^O","user-known-sym"]],"^6G",[["^ ","^2D",250,"^2E",5715],["^ ","^2D",307,"^2E",5715]],"^34",[["^ ","^2D",295,"^2E",5715,"^O","user-arity"]],"^41",[["^ ","^2D",380,"^2E",5715]],"^42",[["^ ","^2D",380,"^2E",5715,"^O","cljs.core/count"]],"~i114",[["^ ","^2D",396,"^2E",5715]],"^4:",[["^ ","^2D",396,"^2E",5715,"^O","cljs.core/second"]],"^4D",[["^ ","^2D",413,"^2E",5715,"^O","fn-form"]]],"~i2779",["^ ","~i3",[["^ ","^2D",0,"^2E",5718],["^ ","^2D",0,"^2E",5727]],"~i9",[["^ ","^2D",4,"^2E",5718,"^O","user-args"]],"^2P",[["^ ","^2D",16,"^2E",5718]],"^3Y",[["^ ","^2D",16,"^2E",5718,"^O","cljs.core/second"]],"^2X",[["^ ","^2D",33,"^2E",5718,"^O","fn-form"]]],"~i2780",["^ ","~i9",[["^ ","^2D",4,"^2E",5719,"^O","updated-args"]],"^2P",[["^ ","^2D",19,"^2E",5719]],"^3Y",[["^ ","^2D",19,"^2E",5719,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^4I",[["^ ","^2D",64,"^2E",5719]],"^3H",[["^ ","^2D",64,"^2E",5719,"^O","cljs.core/vec"]],"^48",[["^ ","^2D",78,"^2E",5719],["^ ","^2D",95,"^2E",5719,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",5720],["^ ","^2D",0,"^2E",5720],["^ ","^2D",20,"^2E",5720,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",5721,"^O","or__3949__auto__"],["^ ","^2D",0,"^2E",5723]],"^2F",[["^ ","^2D",114,"^2E",5719,"^O","external-args"]],"^5F",[["^ ","^2D",6,"^2E",5725,"^O","user-args"]]],"~i2781",["^ ","~i9",[["^ ","^2D",4,"^2E",5726,"^O","body-forms"]],"^2P",[["^ ","^2D",17,"^2E",5726],["^ ","^2D",62,"^2E",5726]],"^3Y",[["^ ","^2D",17,"^2E",5726,"^O","cljs.core.drop.cljs$core$IFn$_invoke$arity$2"]],"^2X",[["^ ","^2D",66,"^2E",5726,"^O","fn-form"]]],"~i2782",["^ ","^2I",[["^ ","^2D",54,"^2E",5727,"^O","body-forms"]]],"~i2783",["^ ","~i7",[["^ ","^2D",26,"^2E",5727]],"~i8",[["^ ","^2D",26,"^2E",5727,"^O","cljs.core/cons"]],"^2G",[["^ ","^2D",41,"^2E",5727,"^O","updated-args"]]],"~i2784",["^ ","~i7",[["^ ","^2D",0,"^2E",5727]],"~i8",[["^ ","^2D",7,"^2E",5727,"^O","cljs.core/cons"]],"^2G",[["^ ","^2D",22,"^2E",5727,"^O","sym"]]],"~i2862",["^ ","~i0",[["^ ","^2D",0,"^2E",5732],["^ ","^2D",42,"^2E",5736],["^ ","^2D",0,"^2E",5737]],"~i6",[["^ ","^2D",0,"^2E",5736,"^O","fulcro.client.primitives/make-state-map"]]],"~i2865",["^ ","~i3",[["^ ","^2D",92,"^2E",5736,"^O","initial-state"]],"^3K",[["^ ","^2D",106,"^2E",5736,"^O","children-by-query-key"]],"^3W",[["^ ","^2D",128,"^2E",5736,"^O","params"]]],"~i2866",["^ ","~i2",[["^ ","^2D",0,"^2E",5737],["^ ","^2D",0,"^2E",5866]],"~i8",[["^ ","^2D",4,"^2E",5737,"^O","join-keys"]],"^2O",[["^ ","^2D",16,"^2E",5737]],"^35",[["^ ","^2D",16,"^2E",5737,"^O","cljs.core/set"]],"^3Y",[["^ ","^2D",30,"^2E",5737]],"^3=",[["^ ","^2D",30,"^2E",5737,"^O","cljs.core/keys"]],"^3H",[["^ ","^2D",45,"^2E",5737,"^O","children-by-query-key"]]],"~i2867",["^ ","~i8",[["^ ","^2D",4,"^2E",5738,"^O","init-keys"]],"^2O",[["^ ","^2D",16,"^2E",5738]],"^35",[["^ ","^2D",16,"^2E",5738,"^O","cljs.core/set"]],"^3Y",[["^ ","^2D",30,"^2E",5738]],"^3=",[["^ ","^2D",30,"^2E",5738,"^O","cljs.core/keys"]],"^3H",[["^ ","^2D",45,"^2E",5738,"^O","initial-state"]]],"~i2868",["^ ","~i8",[["^ ","^2D",4,"^2E",5739,"^O","is-child?"]],"^2O",[["^ ","^2D",22,"^2E",5739],["^ ","^2D",0,"^2E",5741]],"^3Y",[["^ ","^2D",18,"^2E",5740,"^O","k"]],"^3>",[["^ ","^2D",0,"^2E",5741]],"^3L",[["^ ","^2D",7,"^2E",5741,"^O","cljs.core/contains?"]],"^2F",[["^ ","^2D",33,"^2E",5741,"^O","join-keys"]],"^5C",[["^ ","^2D",43,"^2E",5741,"^O","k"]]],"~i2869",["^ ","~i8",[["^ ","^2D",4,"^2E",5744,"^O","value-of"]],"^2O",[["^ ","^2D",15,"^2E",5744],["^ ","^2D",74,"^2E",5745,"^O","p__40063"],["^ ","^2D",0,"^2E",5746],["^ ","^2D",0,"^2E",5746],["^ ","^2D",4,"^2E",5746,"^O","vec__40064"],["^ ","^2D",17,"^2E",5746,"^O","p__40063"],["^ ","^2D",10,"^2E",5747],["^ ","^2D",10,"^2E",5747,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",5747,"^O","vec__40064"],["^ ","^2D",65,"^2E",5747],["^ ","^2D",69,"^2E",5747],["^ ","^2D",10,"^2E",5748],["^ ","^2D",10,"^2E",5748,"^O","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^2D",54,"^2E",5748,"^O","vec__40064"],["^ ","^2D",65,"^2E",5748],["^ ","^2D",69,"^2E",5748],["^ ","^2D",0,"^2E",5749]],"^2C",[["^ ","^2D",4,"^2E",5747,"^O","isk"]],"^2H",[["^ ","^2D",4,"^2E",5748,"^O","isv"]]],"~i2870",["^ ","^4X",[["^ ","^2D",0,"^2E",5749],["^ ","^2D",0,"^2E",5779]],"^3>",[["^ ","^2D",4,"^2E",5749,"^O","param-name"]],"^2K",[["^ ","^2D",17,"^2E",5749],["^ ","^2D",0,"^2E",5751]],"^4>",[["^ ","^2D",18,"^2E",5750,"^O","v"]],"^2R",[["^ ","^2D",0,"^2E",5751],["^ ","^2D",4,"^2E",5751,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5752],["^ ","^2D",0,"^2E",5752],["^ ","^2D",3,"^2E",5752,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5753],["^ ","^2D",4,"^2E",5753,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5754],["^ ","^2D",0,"^2E",5754],["^ ","^2D",3,"^2E",5754,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5757,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5760,"^O","and__3938__auto__"]],"^2S",[["^ ","^2D",24,"^2E",5751],["^ ","^2D",38,"^2E",5751,"^O","cljs.core/Keyword"]],"^5[",[["^ ","^2D",25,"^2E",5751,"^O","v"]],"^2Z",[["^ ","^2D",28,"^2E",5753],["^ ","^2D",73,"^2E",5753]],"^3[",[["^ ","^2D",28,"^2E",5753,"^O","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^7F",[["^ ","^2D",81,"^2E",5753]],"^:M",[["^ ","^2D",81,"^2E",5753,"^O","cljs.core/namespace"]],"^3?",[["^ ","^2D",101,"^2E",5753,"^O","v"]],"^3G",[["^ ","^2D",0,"^2E",5755]],"^3I",[["^ ","^2D",7,"^2E",5755,"^O","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1"]],"^HG",[["^ ","^2D",55,"^2E",5755]],"^3Q",[["^ ","^2D",55,"^2E",5755,"^O","cljs.core/name"]],"^41",[["^ ","^2D",70,"^2E",5755,"^O","v"]]],"~i2871",["^ ","^3>",[["^ ","^2D",4,"^2E",5764,"^O","substitute"]],"^2K",[["^ ","^2D",17,"^2E",5764],["^ ","^2D",0,"^2E",5766]],"^4>",[["^ ","^2D",18,"^2E",5765,"^O","ele"]],"^5;",[["^ ","^2D",0,"^2E",5766],["^ ","^2D",4,"^2E",5766,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",5767],["^ ","^2D",0,"^2E",5767],["^ ","^2D",20,"^2E",5767,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",5768],["^ ","^2D",8,"^2E",5768,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",5769]],"^4@",[["^ ","^2D",4,"^2E",5768,"^O","k"]],"^4B",[["^ ","^2D",25,"^2E",5766]],"^2W",[["^ ","^2D",25,"^2E",5766,"^O","param-name"]],"^31",[["^ ","^2D",36,"^2E",5766,"^O","ele"]]],"~i2872",["^ ","^4<",[["^ ","^2D",0,"^2E",5769]],"^2S",[["^ ","^2D",7,"^2E",5769,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^2V",[["^ ","^2D",51,"^2E",5769,"^O","params"]],"^2Y",[["^ ","^2D",58,"^2E",5769,"^O","k"]]],"~i2873",["^ ","^4<",[["^ ","^2D",0,"^2E",5771,"^O","ele"]]],"~i2874",["^ ","^3>",[["^ ","^2D",4,"^2E",5775,"^O","param-key"]],"^2K",[["^ ","^2D",16,"^2E",5775]],"^2L",[["^ ","^2D",16,"^2E",5775,"^O","param-name"]],"^4<",[["^ ","^2D",27,"^2E",5775,"^O","isv"]]],"~i2875",["^ ","^3>",[["^ ","^2D",4,"^2E",5776,"^O","param-exists?"]],"^2K",[["^ ","^2D",26,"^2E",5776]],"^2L",[["^ ","^2D",26,"^2E",5776,"^O","cljs.core/contains?"]],"^3Z",[["^ ","^2D",52,"^2E",5776,"^O","params"]],"^4J",[["^ ","^2D",59,"^2E",5776,"^O","param-key"]]],"~i2876",["^ ","^3>",[["^ ","^2D",4,"^2E",5777,"^O","param-value"]],"^2K",[["^ ","^2D",18,"^2E",5777]],"^2L",[["^ ","^2D",18,"^2E",5777,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^4>",[["^ ","^2D",62,"^2E",5777,"^O","params"]],"^4<",[["^ ","^2D",69,"^2E",5777,"^O","param-key"]]],"~i2877",["^ ","^3>",[["^ ","^2D",4,"^2E",5778,"^O","child-class"]],"^2K",[["^ ","^2D",18,"^2E",5778]],"^2L",[["^ ","^2D",18,"^2E",5778,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^4>",[["^ ","^2D",62,"^2E",5778,"^O","children-by-query-key"]],"^3[",[["^ ","^2D",84,"^2E",5778,"^O","isk"]]],"~i2878",["^ ","^2P",[["^ ","^2D",0,"^2E",5779],["^ ","^2D",0,"^2E",5786],["^ ","^2D",0,"^2E",5788],["^ ","^2D",0,"^2E",5795],["^ ","^2D",0,"^2E",5797],["^ ","^2D",0,"^2E",5798],["^ ","^2D",0,"^2E",5800],["^ ","^2D",0,"^2E",5807],["^ ","^2D",0,"^2E",5813],["^ ","^2D",0,"^2E",5820],["^ ","^2D",0,"^2E",5830],["^ ","^2D",0,"^2E",5831],["^ ","^2D",0,"^2E",5837],["^ ","^2D",0,"^2E",5849],["^ ","^2D",0,"^2E",5851],["^ ","^2D",0,"^2E",5852],["^ ","^2D",0,"^2E",5854],["^ ","^2D",0,"^2E",5854]]],"~i2880",["^ ","^3=",[["^ ","^2D",20,"^2E",5779],["^ ","^2D",37,"^2E",5779,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5780],["^ ","^2D",0,"^2E",5780],["^ ","^2D",20,"^2E",5780,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5783,"^O","and__3938__auto__"]],"^3H",[["^ ","^2D",57,"^2E",5779,"^O","param-key"]],"^3W",[["^ ","^2D",0,"^2E",5781]],"^2N",[["^ ","^2D",9,"^2E",5781,"^O","param-exists?"]]],"~i2884",["^ ","^3=",[["^ ","^2D",20,"^2E",5788],["^ ","^2D",37,"^2E",5788,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5789],["^ ","^2D",0,"^2E",5789],["^ ","^2D",3,"^2E",5789,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5792,"^O","and__3938__auto__"]],"^3H",[["^ ","^2D",57,"^2E",5788]],"^2X",[["^ ","^2D",57,"^2E",5788,"^O","cljs.core/map?"]],"^3E",[["^ ","^2D",78,"^2E",5788,"^O","isv"]],"^2K",[["^ ","^2D",0,"^2E",5790]],"^2L",[["^ ","^2D",7,"^2E",5790,"^O","is-child?"]],"^3Z",[["^ ","^2D",23,"^2E",5790,"^O","isk"]],"^4J",[["^ ","^2D",90,"^2E",5795,"^O","isk"]],"^2W",[["^ ","^2D",94,"^2E",5795]],"^5[",[["^ ","^2D",94,"^2E",5795,"^O","fulcro.client.primitives/get-initial-state"]],"^39",[["^ ","^2D",137,"^2E",5795,"^O","child-class"]],"^3I",[["^ ","^2D",149,"^2E",5795],["^ ","^2D",194,"^2E",5795]],"^3J",[["^ ","^2D",149,"^2E",5795,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^3Q",[["^ ","^2D",229,"^2E",5795]],"^3R",[["^ ","^2D",229,"^2E",5795,"^O","cljs.core.keep.cljs$core$IFn$_invoke$arity$2"]],"^42",[["^ ","^2D",274,"^2E",5795,"^O","value-of*"]],"^4=",[["^ ","^2D",331,"^2E",5795,"^O","isv"]]],"~i2887",["^ ","^3=",[["^ ","^2D",3,"^2E",5797]],"^3V",[["^ ","^2D",3,"^2E",5797,"^O","cljs.core/map?"]],"^2X",[["^ ","^2D",24,"^2E",5797,"^O","isv"]],"^38",[["^ ","^2D",90,"^2E",5798,"^O","isk"]],"^2K",[["^ ","^2D",94,"^2E",5798],["^ ","^2D",139,"^2E",5798]],"^2L",[["^ ","^2D",94,"^2E",5798,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^3F",[["^ ","^2D",174,"^2E",5798]],"^5;",[["^ ","^2D",174,"^2E",5798,"^O","cljs.core.keep.cljs$core$IFn$_invoke$arity$2"]],"^2U",[["^ ","^2D",219,"^2E",5798,"^O","value-of*"]],"^61",[["^ ","^2D",276,"^2E",5798,"^O","isv"]]],"~i2890",["^ ","^3=",[["^ ","^2D",20,"^2E",5800],["^ ","^2D",37,"^2E",5800,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5801],["^ ","^2D",0,"^2E",5801],["^ ","^2D",3,"^2E",5801,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5804,"^O","and__3938__auto__"]],"^3H",[["^ ","^2D",57,"^2E",5800]],"^2X",[["^ ","^2D",57,"^2E",5800,"^O","cljs.core/vector?"]],"^2H",[["^ ","^2D",81,"^2E",5800,"^O","isv"]],"^2M",[["^ ","^2D",0,"^2E",5802]],"^2N",[["^ ","^2D",7,"^2E",5802,"^O","is-child?"]],"^4E",[["^ ","^2D",23,"^2E",5802,"^O","isk"]],"^4B",[["^ ","^2D",90,"^2E",5807,"^O","isk"]],"^61",[["^ ","^2D",94,"^2E",5807]],"^2Z",[["^ ","^2D",94,"^2E",5807,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^2[",[["^ ","^2D",139,"^2E",5807],["^ ","^2D",0,"^2E",5809]],"^33",[["^ ","^2D",18,"^2E",5808,"^O","m"]],"^34",[["^ ","^2D",0,"^2E",5809]],"^36",[["^ ","^2D",7,"^2E",5809,"^O","fulcro.client.primitives/get-initial-state"]],"^3N",[["^ ","^2D",50,"^2E",5809,"^O","child-class"]],"^45",[["^ ","^2D",62,"^2E",5809],["^ ","^2D",107,"^2E",5809]],"^46",[["^ ","^2D",62,"^2E",5809,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^4?",[["^ ","^2D",142,"^2E",5809]],"^4A",[["^ ","^2D",142,"^2E",5809,"^O","cljs.core.keep.cljs$core$IFn$_invoke$arity$2"]],"^4H",[["^ ","^2D",187,"^2E",5809,"^O","value-of*"]],"~i135",[["^ ","^2D",244,"^2E",5809,"^O","m"]],"^4V",[["^ ","^2D",1,"^2E",5811,"^O","isv"]]],"~i2893",["^ ","^3=",[["^ ","^2D",20,"^2E",5813],["^ ","^2D",37,"^2E",5813,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5814],["^ ","^2D",0,"^2E",5814],["^ ","^2D",3,"^2E",5814,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5817,"^O","and__3938__auto__"]],"^3H",[["^ ","^2D",57,"^2E",5813]],"^2X",[["^ ","^2D",57,"^2E",5813,"^O","cljs.core/vector?"]],"^2H",[["^ ","^2D",81,"^2E",5813,"^O","param-value"]],"^3Z",[["^ ","^2D",0,"^2E",5815]],"^4<",[["^ ","^2D",7,"^2E",5815,"^O","is-child?"]],"^2W",[["^ ","^2D",23,"^2E",5815,"^O","isk"]],"^6>",[["^ ","^2D",90,"^2E",5820,"^O","isk"]],"^31",[["^ ","^2D",94,"^2E",5820]],"^6G",[["^ ","^2D",94,"^2E",5820,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^34",[["^ ","^2D",139,"^2E",5820],["^ ","^2D",0,"^2E",5822]],"^=;",[["^ ","^2D",18,"^2E",5821,"^O","params"]]],"~i2894",["^ ","^39",[["^ ","^2D",0,"^2E",5822]],"^3;",[["^ ","^2D",20,"^2E",5822]],"^3<",[["^ ","^2D",20,"^2E",5822,"^O","fulcro.client.primitives/computed-initial-state?"]],"^45",[["^ ","^2D",75,"^2E",5822,"^O","params"]]],"~i2895",["^ ","^3:",[["^ ","^2D",0,"^2E",5823,"^O","params"]]],"~i2896",["^ ","^3:",[["^ ","^2D",0,"^2E",5825]],"^=;",[["^ ","^2D",7,"^2E",5825,"^O","fulcro.client.primitives/get-initial-state"]],"^3Q",[["^ ","^2D",50,"^2E",5825,"^O","child-class"]],"^Z6",[["^ ","^2D",62,"^2E",5825,"^O","params"]],"^4G",[["^ ","^2D",1,"^2E",5828,"^O","param-value"]]],"~i2899",["^ ","^3=",[["^ ","^2D",3,"^2E",5830]],"^3V",[["^ ","^2D",3,"^2E",5830,"^O","cljs.core/vector?"]],"^48",[["^ ","^2D",27,"^2E",5830,"^O","isv"]],"^3W",[["^ ","^2D",90,"^2E",5831,"^O","isk"]],"^2M",[["^ ","^2D",94,"^2E",5831]],"^2N",[["^ ","^2D",94,"^2E",5831,"^O","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^3F",[["^ ","^2D",139,"^2E",5831],["^ ","^2D",0,"^2E",5833]],"^4E",[["^ ","^2D",18,"^2E",5832,"^O","ele"]],"^4@",[["^ ","^2D",0,"^2E",5833]],"^7U",[["^ ","^2D",7,"^2E",5833,"^O","substitute"]],"^2[",[["^ ","^2D",18,"^2E",5833,"^O","ele"]],"^7F",[["^ ","^2D",1,"^2E",5835,"^O","isv"]]],"~i2902",["^ ","^3=",[["^ ","^2D",20,"^2E",5837],["^ ","^2D",37,"^2E",5837,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5838],["^ ","^2D",0,"^2E",5838],["^ ","^2D",20,"^2E",5838,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5839],["^ ","^2D",4,"^2E",5839,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5840],["^ ","^2D",0,"^2E",5840],["^ ","^2D",20,"^2E",5840,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5843,"^O","and__3938__auto__"],["^ ","^2D",0,"^2E",5846,"^O","and__3938__auto__"]],"^3H",[["^ ","^2D",57,"^2E",5837,"^O","param-key"]],"^3W",[["^ ","^2D",28,"^2E",5839]],"^2K",[["^ ","^2D",28,"^2E",5839,"^O","is-child?"]],"^5;",[["^ ","^2D",44,"^2E",5839,"^O","isk"]],"^2U",[["^ ","^2D",0,"^2E",5841,"^O","param-exists?"]],"^2[",[["^ ","^2D",90,"^2E",5849,"^O","isk"]],"^32",[["^ ","^2D",94,"^2E",5849]],"^34",[["^ ","^2D",112,"^2E",5849]],"^36",[["^ ","^2D",112,"^2E",5849,"^O","fulcro.client.primitives/computed-initial-state?"]],"^3T",[["^ ","^2D",167,"^2E",5849,"^O","param-value"]]],"~i2903",["^ ","^7F",[["^ ","^2D",181,"^2E",5849,"^O","param-value"]]],"~i2904",["^ ","^7F",[["^ ","^2D",193,"^2E",5849]],"^:M",[["^ ","^2D",193,"^2E",5849,"^O","fulcro.client.primitives/get-initial-state"]],"^3M",[["^ ","^2D",236,"^2E",5849,"^O","child-class"]],"^42",[["^ ","^2D",248,"^2E",5849,"^O","param-value"]]],"~i2905",["^ ","^3=",[["^ ","^2D",20,"^2E",5851,"^O","param-key"]],"^3E",[["^ ","^2D",90,"^2E",5852,"^O","isk"]],"^3W",[["^ ","^2D",94,"^2E",5852,"^O","param-value"]]],"~i2906",["^ ","^30",[["^ ","^2D",90,"^2E",5854,"^O","isk"]],"^3E",[["^ ","^2D",94,"^2E",5854,"^O","isv"]]],"~i2907",["^ ","~i4",[["^ ","^2D",0,"^2E",5866],["^ ","^2D",52,"^2E",5866]],"~i5",[["^ ","^2D",7,"^2E",5866,"^O","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^2D",87,"^2E",5866]],"^44",[["^ ","^2D",87,"^2E",5866,"^O","cljs.core.keep.cljs$core$IFn$_invoke$arity$2"]],"^35",[["^ ","^2D",132,"^2E",5866,"^O","value-of"]],"^4I",[["^ ","^2D",141,"^2E",5866,"^O","initial-state"]]],"~i3177",["^ ","~i0",[["^ ","^2D",0,"^2E",5868],["^ ","^2D",0,"^2E",5868],["^ ","^2D",43,"^2E",5871],["^ ","^2D",94,"^2E",5871,"^O","var_args"],["^ ","^2D",0,"^2E",5872],["^ ","^2D",0,"^2E",5872],["^ ","^2D",4,"^2E",5872,"^O","args__4534__auto__"],["^ ","^2D",25,"^2E",5872],["^ ","^2D",0,"^2E",5873],["^ ","^2D",0,"^2E",5873],["^ ","^2D",4,"^2E",5873,"^O","len__4531__auto__"],["^ ","^2D",30,"^2E",5873],["^ ","^2D",30,"^2E",5873],["^ ","^2D",0,"^2E",5874],["^ ","^2D",0,"^2E",5874],["^ ","^2D",4,"^2E",5874,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",5874],["^ ","^2D",0,"^2E",5876],["^ ","^2D",0,"^2E",5876],["^ ","^2D",3,"^2E",5876],["^ ","^2D",4,"^2E",5876,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",5876,"^O","len__4531__auto__"],["^ ","^2D",0,"^2E",5877],["^ ","^2D",0,"^2E",5877],["^ ","^2D",0,"^2E",5877,"^O","args__4534__auto__"],["^ ","^2D",24,"^2E",5877],["^ ","^2D",25,"^2E",5877],["^ ","^2D",35,"^2E",5877,"^O","i__4532__auto__"],["^ ","^2D",0,"^2E",5879],["^ ","^2D",15,"^2E",5879],["^ ","^2D",16,"^2E",5879,"^O","i__4532__auto__"],["^ ","^2D",40,"^2E",5879],["^ ","^2D",0,"^2E",5883],["^ ","^2D",0,"^2E",5887],["^ ","^2D",4,"^2E",5887,"^O","argseq__4535__auto__"],["^ ","^2D",27,"^2E",5887],["^ ","^2D",29,"^2E",5887],["^ ","^2D",30,"^2E",5887],["^ ","^2D",36,"^2E",5887],["^ ","^2D",36,"^2E",5887,"^O","args__4534__auto__"],["^ ","^2D",64,"^2E",5887],["^ ","^2D",64,"^2E",5887],["^ ","^2D",69,"^2E",5887,"^O","cljs.core/IndexedSeq"],["^ ","^2D",90,"^2E",5887],["^ ","^2D",90,"^2E",5887,"^O","args__4534__auto__"],["^ ","^2D",115,"^2E",5887],["^ ","^2D",120,"^2E",5887],["^ ","^2D",124,"^2E",5887],["^ ","^2D",131,"^2E",5887],["^ ","^2D",0,"^2E",5888],["^ ","^2D",0,"^2E",5888],["^ ","^2D",7,"^2E",5888,"^O","fulcro.client.primitives/integrate-ident"],["^ ","^2D",85,"^2E",5888],["^ ","^2D",86,"^2E",5888],["^ ","^2D",96,"^2E",5888],["^ ","^2D",102,"^2E",5888],["^ ","^2D",103,"^2E",5888],["^ ","^2D",113,"^2E",5888],["^ ","^2D",119,"^2E",5888,"^O","argseq__4535__auto__"],["^ ","^2D",0,"^2E",5891],["^ ","^2D",0,"^2E",5891],["^ ","^2D",0,"^2E",5891],["^ ","^2D",0,"^2E",5891,"^O","fulcro.client.primitives/integrate-ident"],["^ ","^2D",80,"^2E",5891],["^ ","^2D",0,"^2E",5892],["^ ","^2D",0,"^2E",5892],["^ ","^2D",0,"^2E",5893],["^ ","^2D",0,"^2E",5894],["^ ","^2D",0,"^2E",5894],["^ ","^2D",6,"^2E",5894],["^ ","^2D",11,"^2E",5894,"^O","js/Error"],["^ ","^2D",17,"^2E",5894],["^ ","^2D",0,"^2E",5909],["^ ","^2D",0,"^2E",5909],["^ ","^2D",0,"^2E",5909,"^O","fulcro.client.primitives/integrate-ident"],["^ ","^2D",67,"^2E",5909],["^ ","^2D",0,"^2E",5911],["^ ","^2D",0,"^2E",5912],["^ ","^2D",0,"^2E",5912],["^ ","^2D",0,"^2E",5912,"^O","fulcro.client.primitives/integrate-ident"],["^ ","^2D",61,"^2E",5912],["^ ","^2D",72,"^2E",5912,"^O","seq40085"],["^ ","^2D",0,"^2E",5913],["^ ","^2D",0,"^2E",5913],["^ ","^2D",4,"^2E",5913,"^O","G__40086"],["^ ","^2D",15,"^2E",5913],["^ ","^2D",15,"^2E",5913,"^O","cljs.core/first"],["^ ","^2D",31,"^2E",5913,"^O","seq40085"],["^ ","^2D",4,"^2E",5914,"^O","seq40085"],["^ ","^2D",19,"^2E",5914],["^ ","^2D",19,"^2E",5914,"^O","cljs.core/next"],["^ ","^2D",34,"^2E",5914,"^O","seq40085"],["^ ","^2D",4,"^2E",5915,"^O","G__40087"],["^ ","^2D",15,"^2E",5915],["^ ","^2D",15,"^2E",5915,"^O","cljs.core/first"],["^ ","^2D",31,"^2E",5915,"^O","seq40085"],["^ ","^2D",4,"^2E",5916,"^O","seq40085"],["^ ","^2D",19,"^2E",5916],["^ ","^2D",19,"^2E",5916,"^O","cljs.core/next"],["^ ","^2D",34,"^2E",5916,"^O","seq40085"],["^ ","^2D",0,"^2E",5917],["^ ","^2D",0,"^2E",5917],["^ ","^2D",4,"^2E",5917,"^O","self__4518__auto__"],["^ ","^2D",25,"^2E",5917],["^ ","^2D",0,"^2E",5918],["^ ","^2D",0,"^2E",5918],["^ ","^2D",7,"^2E",5918,"^O","self__4518__auto__"],["^ ","^2D",63,"^2E",5918,"^O","G__40086"],["^ ","^2D",72,"^2E",5918,"^O","G__40087"],["^ ","^2D",81,"^2E",5918,"^O","seq40085"],["^ ","^2D",0,"^2E",5921]],"~i6",[["^ ","^2D",0,"^2E",5871,"^O","fulcro.client.primitives/integrate-ident"]]],"~i3179",["^ ","~i3",[["^ ","^2D",91,"^2E",5891,"^O","state"]],"~i9",[["^ ","^2D",97,"^2E",5891,"^O","ident"]],"^3K",[["^ ","^2D",103,"^2E",5891,"^O","named-parameters"]]],"~i3180",["^ ","~i9",[["^ ","^2D",3,"^2E",5892]],"^2I",[["^ ","^2D",3,"^2E",5892,"^O","cljs.core/map?"]],"^2J",[["^ ","^2D",24,"^2E",5892,"^O","state"]]],"~i3181",["^ ","~i2",[["^ ","^2D",0,"^2E",5897],["^ ","^2D",4,"^2E",5897],["^ ","^2D",4,"^2E",5897],["^ ","^2D",4,"^2E",5897,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",5897],["^ ","^2D",104,"^2E",5897],["^ ","^2D",158,"^2E",5897],["^ ","^2D",185,"^2E",5897],["^ ","^2D",237,"^2E",5897],["^ ","^2D",250,"^2E",5897],["^ ","^2D",353,"^2E",5897],["^ ","^2D",420,"^2E",5897],["^ ","^2D",16,"^2E",5898],["^ ","^2D",19,"^2E",5898],["^ ","^2D",20,"^2E",5898,"^O","e40088"],["^ ","^2D",38,"^2E",5898,"^O","js/Error"],["^ ","^2D",0,"^2E",5899],["^ ","^2D",4,"^2E",5899,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",5899,"^O","e40088"],["^ ","^2D",0,"^2E",5900],["^ ","^2D",0,"^2E",5900],["^ ","^2D",0,"^2E",5900,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",5900],["^ ","^2D",100,"^2E",5900],["^ ","^2D",154,"^2E",5900],["^ ","^2D",181,"^2E",5900],["^ ","^2D",233,"^2E",5900],["^ ","^2D",246,"^2E",5900],["^ ","^2D",349,"^2E",5900],["^ ","^2D",402,"^2E",5900,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",5902],["^ ","^2D",0,"^2E",5902],["^ ","^2D",6,"^2E",5902,"^O","e40088"]]],"~i3183",["^ ","~i2",[["^ ","^2D",0,"^2E",5906]],"~i3",[["^ ","^2D",7,"^2E",5906,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$4"]],"~i9",[["^ ","^2D",53,"^2E",5906,"^O","fulcro.util/__integrate-ident-impl__"]],"^3W",[["^ ","^2D",90,"^2E",5906,"^O","state"]],"^4>",[["^ ","^2D",96,"^2E",5906,"^O","ident"]],"^3Z",[["^ ","^2D",102,"^2E",5906,"^O","named-parameters"]]],"~i3185",["^ ","~i0",[["^ ","^2D",0,"^2E",5921],["^ ","^2D",49,"^2E",5926],["^ ","^2D",0,"^2E",5927]],"~i6",[["^ ","^2D",0,"^2E",5926,"^O","fulcro.client.primitives/component-merge-query"]]],"~i3189",["^ ","~i3",[["^ ","^2D",106,"^2E",5926,"^O","component"]],"^2G",[["^ ","^2D",116,"^2E",5926,"^O","object-data"]]],"~i3190",["^ ","~i2",[["^ ","^2D",0,"^2E",5927],["^ ","^2D",0,"^2E",5929],["^ ","^2D",0,"^2E",5929],["^ ","^2D",90,"^2E",5929]],"~i8",[["^ ","^2D",4,"^2E",5927,"^O","ident"]],"^3D",[["^ ","^2D",12,"^2E",5927]],"^2P",[["^ ","^2D",12,"^2E",5927,"^O","fulcro.client.primitives/ident"]],"^4I",[["^ ","^2D",43,"^2E",5927,"^O","component"]],"^2H",[["^ ","^2D",53,"^2E",5927,"^O","object-data"]]],"~i3191",["^ ","~i8",[["^ ","^2D",4,"^2E",5928,"^O","object-query"]],"^3D",[["^ ","^2D",19,"^2E",5928]],"^2P",[["^ ","^2D",19,"^2E",5928,"^O","fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$1"]],"^4Y",[["^ ","^2D",84,"^2E",5928,"^O","component"]]],"~i3192",["^ ","~i6",[["^ ","^2D",138,"^2E",5929,"^O","ident"]],"^3S",[["^ ","^2D",144,"^2E",5929,"^O","object-query"]]],"~i3194",["^ ","~i0",[["^ ","^2D",0,"^2E",5931],["^ ","^2D",44,"^2E",5935],["^ ","^2D",0,"^2E",5936]],"~i7",[["^ ","^2D",0,"^2E",5935,"^O","fulcro.client.primitives/preprocess-merge"]]],"~i3197",["^ ","~i3",[["^ ","^2D",96,"^2E",5935,"^O","state-atom"]],"^44",[["^ ","^2D",107,"^2E",5935,"^O","component"]],"^3=",[["^ ","^2D",117,"^2E",5935,"^O","object-data"]]],"~i3198",["^ ","~i2",[["^ ","^2D",0,"^2E",5936],["^ ","^2D",18,"^2E",5940],["^ ","^2D",101,"^2E",5940],["^ ","^2D",144,"^2E",5940],["^ ","^2D",17,"^2E",5943],["^ ","^2D",60,"^2E",5943],["^ ","^2D",127,"^2E",5943],["^ ","^2D",0,"^2E",5944],["^ ","^2D",0,"^2E",5944],["^ ","^2D",50,"^2E",5944],["^ ","^2D",128,"^2E",5944]],"~i8",[["^ ","^2D",4,"^2E",5936,"^O","ident"]],"^2P",[["^ ","^2D",12,"^2E",5936]],"^3Y",[["^ ","^2D",12,"^2E",5936,"^O","fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2"]],"^48",[["^ ","^2D",77,"^2E",5936,"^O","component"]],"^2M",[["^ ","^2D",87,"^2E",5936,"^O","object-data"]]],"~i3199",["^ ","~i8",[["^ ","^2D",4,"^2E",5937,"^O","object-query"]],"^2P",[["^ ","^2D",19,"^2E",5937]],"^3Y",[["^ ","^2D",19,"^2E",5937,"^O","fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$1"]],"^48",[["^ ","^2D",84,"^2E",5937,"^O","component"]]],"~i3200",["^ ","~i8",[["^ ","^2D",4,"^2E",5938,"^O","object-query"]],"^2P",[["^ ","^2D",23,"^2E",5938],["^ ","^2D",61,"^2E",5938]],"^3>",[["^ ","^2D",25,"^2E",5938]],"^3L",[["^ ","^2D",25,"^2E",5938,"^O","cljs.core/map?"]],"^4Y",[["^ ","^2D",46,"^2E",5938,"^O","object-query"]],"^5C",[["^ ","^2D",144,"^2E",5938,"^O","object-query"]],"^4B",[["^ ","^2D",165,"^2E",5938,"^O","object-query"]]],"~i3201",["^ ","~i8",[["^ ","^2D",4,"^2E",5939,"^O","base-query"]],"^2P",[["^ ","^2D",17,"^2E",5939]],"^3Y",[["^ ","^2D",17,"^2E",5939,"^O","fulcro.client.primitives/component-merge-query"]],"^4>",[["^ ","^2D",64,"^2E",5939,"^O","component"]],"^2U",[["^ ","^2D",74,"^2E",5939,"^O","object-data"]]],"~i3203",["^ ","~i8",[["^ ","^2D",4,"^2E",5940,"^O","merge-query"]],"^2H",[["^ ","^2D",211,"^2E",5940,"^O","base-query"]]],"~i3204",["^ ","~i8",[["^ ","^2D",4,"^2E",5941,"^O","existing-data"]],"^2P",[["^ ","^2D",20,"^2E",5941],["^ ","^2D",205,"^2E",5941]],"^3Y",[["^ ","^2D",20,"^2E",5941,"^O","cljs.core.get.cljs$core$IFn$_invoke$arity$3"]],"^3L",[["^ ","^2D",64,"^2E",5941],["^ ","^2D",142,"^2E",5941],["^ ","^2D",142,"^2E",5941,"^O","cljs.core/deref"],["^ ","^2D",170,"^2E",5941],["^ ","^2D",170,"^2E",5941,"^O","cljs.core/deref"]],"^4I",[["^ ","^2D",64,"^2E",5941,"^O","fulcro.client.primitives.db__GT_tree.cljs$core$IFn$_invoke$arity$3"]],"^2F",[["^ ","^2D",131,"^2E",5941,"^O","base-query"]],"^3F",[["^ ","^2D",158,"^2E",5941,"^O","state-atom"]],"^4B",[["^ ","^2D",186,"^2E",5941,"^O","state-atom"]],"^31",[["^ ","^2D",199,"^2E",5941,"^O","ident"]]],"~i3205",["^ ","~i8",[["^ ","^2D",4,"^2E",5942,"^O","marked-data"]],"^2P",[["^ ","^2D",18,"^2E",5942]],"^3Y",[["^ ","^2D",18,"^2E",5942,"^O","fulcro.client.primitives/mark-missing"]],"^38",[["^ ","^2D",56,"^2E",5942,"^O","object-data"]],"^2R",[["^ ","^2D",68,"^2E",5942,"^O","object-query"]]],"~i3206",["^ ","~i8",[["^ ","^2D",4,"^2E",5943,"^O","merge-data"]],"^2H",[["^ ","^2D",175,"^2E",5943,"^O","ident"]],"^2N",[["^ ","^2D",181,"^2E",5943]],"^4>",[["^ ","^2D",181,"^2E",5943,"^O","fulcro.util.deep_merge.cljs$core$IFn$_invoke$arity$variadic"]],"^4B",[["^ ","^2D",291,"^2E",5943,"^O","existing-data"]],"^32",[["^ ","^2D",305,"^2E",5943,"^O","marked-data"]]],"~i3207",["^ ","^2O",[["^ ","^2D",116,"^2E",5944,"^O","merge-query"]]],"~i3208",["^ ","^2O",[["^ ","^2D",193,"^2E",5944,"^O","merge-data"]]],"~i3210",["^ ","~i0",[["^ ","^2D",0,"^2E",5946],["^ ","^2D",42,"^2E",5949],["^ ","^2D",0,"^2E",5950]],"~i7",[["^ ","^2D",0,"^2E",5949,"^O","fulcro.client.primitives/is-atom?"]]],"~i3212",["^ ","~i3",[["^ ","^2D",92,"^2E",5949,"^O","x"]]],"~i3213",["^ ","~i2",[["^ ","^2D",0,"^2E",5950]],"^2P",[["^ ","^2D",21,"^2E",5950,"^O","cljs/core.Atom"]]],"~i3214",["^ ","^2L",[["^ ","^2D",8,"^2E",5950,"^O","x"]]],"~i3216",["^ ","~i0",[["^ ","^2D",0,"^2E",5952],["^ ","^2D",0,"^2E",5952],["^ ","^2D",49,"^2E",5955],["^ ","^2D",106,"^2E",5955,"^O","var_args"],["^ ","^2D",0,"^2E",5956],["^ ","^2D",0,"^2E",5956],["^ ","^2D",4,"^2E",5956,"^O","args__4534__auto__"],["^ ","^2D",25,"^2E",5956],["^ ","^2D",0,"^2E",5957],["^ ","^2D",0,"^2E",5957],["^ ","^2D",4,"^2E",5957,"^O","len__4531__auto__"],["^ ","^2D",30,"^2E",5957],["^ ","^2D",30,"^2E",5957],["^ ","^2D",0,"^2E",5958],["^ ","^2D",0,"^2E",5958],["^ ","^2D",4,"^2E",5958,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",5958],["^ ","^2D",0,"^2E",5960],["^ ","^2D",0,"^2E",5960],["^ ","^2D",3,"^2E",5960],["^ ","^2D",4,"^2E",5960,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",5960,"^O","len__4531__auto__"],["^ ","^2D",0,"^2E",5961],["^ ","^2D",0,"^2E",5961],["^ ","^2D",0,"^2E",5961,"^O","args__4534__auto__"],["^ ","^2D",24,"^2E",5961],["^ ","^2D",25,"^2E",5961],["^ ","^2D",35,"^2E",5961,"^O","i__4532__auto__"],["^ ","^2D",0,"^2E",5963],["^ ","^2D",15,"^2E",5963],["^ ","^2D",16,"^2E",5963,"^O","i__4532__auto__"],["^ ","^2D",40,"^2E",5963],["^ ","^2D",0,"^2E",5967],["^ ","^2D",0,"^2E",5971],["^ ","^2D",4,"^2E",5971,"^O","argseq__4535__auto__"],["^ ","^2D",27,"^2E",5971],["^ ","^2D",29,"^2E",5971],["^ ","^2D",30,"^2E",5971],["^ ","^2D",36,"^2E",5971],["^ ","^2D",36,"^2E",5971,"^O","args__4534__auto__"],["^ ","^2D",64,"^2E",5971],["^ ","^2D",64,"^2E",5971],["^ ","^2D",69,"^2E",5971,"^O","cljs.core/IndexedSeq"],["^ ","^2D",90,"^2E",5971],["^ ","^2D",90,"^2E",5971,"^O","args__4534__auto__"],["^ ","^2D",115,"^2E",5971],["^ ","^2D",120,"^2E",5971],["^ ","^2D",124,"^2E",5971],["^ ","^2D",131,"^2E",5971],["^ ","^2D",0,"^2E",5972],["^ ","^2D",0,"^2E",5972],["^ ","^2D",7,"^2E",5972,"^O","fulcro.client.primitives/integrate-ident!"],["^ ","^2D",91,"^2E",5972],["^ ","^2D",92,"^2E",5972],["^ ","^2D",102,"^2E",5972],["^ ","^2D",108,"^2E",5972],["^ ","^2D",109,"^2E",5972],["^ ","^2D",119,"^2E",5972],["^ ","^2D",125,"^2E",5972,"^O","argseq__4535__auto__"],["^ ","^2D",0,"^2E",5975],["^ ","^2D",0,"^2E",5975],["^ ","^2D",0,"^2E",5975],["^ ","^2D",0,"^2E",5975,"^O","fulcro.client.primitives/integrate-ident!"],["^ ","^2D",86,"^2E",5975],["^ ","^2D",0,"^2E",5976],["^ ","^2D",0,"^2E",5993],["^ ","^2D",0,"^2E",5993],["^ ","^2D",0,"^2E",5993,"^O","fulcro.client.primitives/integrate-ident!"],["^ ","^2D",73,"^2E",5993],["^ ","^2D",0,"^2E",5995],["^ ","^2D",0,"^2E",5996],["^ ","^2D",0,"^2E",5996],["^ ","^2D",0,"^2E",5996,"^O","fulcro.client.primitives/integrate-ident!"],["^ ","^2D",67,"^2E",5996],["^ ","^2D",78,"^2E",5996,"^O","seq40105"],["^ ","^2D",0,"^2E",5997],["^ ","^2D",0,"^2E",5997],["^ ","^2D",4,"^2E",5997,"^O","G__40106"],["^ ","^2D",15,"^2E",5997],["^ ","^2D",15,"^2E",5997,"^O","cljs.core/first"],["^ ","^2D",31,"^2E",5997,"^O","seq40105"],["^ ","^2D",4,"^2E",5998,"^O","seq40105"],["^ ","^2D",19,"^2E",5998],["^ ","^2D",19,"^2E",5998,"^O","cljs.core/next"],["^ ","^2D",34,"^2E",5998,"^O","seq40105"],["^ ","^2D",4,"^2E",5999,"^O","G__40107"],["^ ","^2D",15,"^2E",5999],["^ ","^2D",15,"^2E",5999,"^O","cljs.core/first"],["^ ","^2D",31,"^2E",5999,"^O","seq40105"],["^ ","^2D",4,"^2E",6000,"^O","seq40105"],["^ ","^2D",19,"^2E",6000],["^ ","^2D",19,"^2E",6000,"^O","cljs.core/next"],["^ ","^2D",34,"^2E",6000,"^O","seq40105"],["^ ","^2D",0,"^2E",6001],["^ ","^2D",0,"^2E",6001],["^ ","^2D",4,"^2E",6001,"^O","self__4518__auto__"],["^ ","^2D",25,"^2E",6001],["^ ","^2D",0,"^2E",6002],["^ ","^2D",0,"^2E",6002],["^ ","^2D",7,"^2E",6002,"^O","self__4518__auto__"],["^ ","^2D",63,"^2E",6002,"^O","G__40106"],["^ ","^2D",72,"^2E",6002,"^O","G__40107"],["^ ","^2D",81,"^2E",6002,"^O","seq40105"],["^ ","^2D",0,"^2E",6005]],"~i6",[["^ ","^2D",0,"^2E",5955,"^O","fulcro.client.primitives/integrate-ident!"]]],"~i3218",["^ ","~i3",[["^ ","^2D",97,"^2E",5975,"^O","state"]],"~i9",[["^ ","^2D",103,"^2E",5975,"^O","ident"]],"^3K",[["^ ","^2D",109,"^2E",5975,"^O","named-parameters"]]],"~i3219",["^ ","~i2",[["^ ","^2D",0,"^2E",5976],["^ ","^2D",4,"^2E",5976],["^ ","^2D",4,"^2E",5976],["^ ","^2D",4,"^2E",5976,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",61,"^2E",5976],["^ ","^2D",104,"^2E",5976],["^ ","^2D",158,"^2E",5976],["^ ","^2D",185,"^2E",5976],["^ ","^2D",237,"^2E",5976],["^ ","^2D",250,"^2E",5976],["^ ","^2D",353,"^2E",5976],["^ ","^2D",421,"^2E",5976],["^ ","^2D",16,"^2E",5977],["^ ","^2D",19,"^2E",5977],["^ ","^2D",20,"^2E",5977,"^O","e40108"],["^ ","^2D",38,"^2E",5977,"^O","js/Error"],["^ ","^2D",0,"^2E",5978],["^ ","^2D",4,"^2E",5978,"^O","e__31518__auto__"],["^ ","^2D",29,"^2E",5978,"^O","e40108"],["^ ","^2D",0,"^2E",5979],["^ ","^2D",0,"^2E",5979],["^ ","^2D",0,"^2E",5979,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",57,"^2E",5979],["^ ","^2D",100,"^2E",5979],["^ ","^2D",154,"^2E",5979],["^ ","^2D",181,"^2E",5979],["^ ","^2D",233,"^2E",5979],["^ ","^2D",246,"^2E",5979],["^ ","^2D",349,"^2E",5979],["^ ","^2D",402,"^2E",5979,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",5981],["^ ","^2D",0,"^2E",5981],["^ ","^2D",6,"^2E",5981,"^O","e40108"]]],"~i3221",["^ ","~i2",[["^ ","^2D",0,"^2E",5985],["^ ","^2D",0,"^2E",5986],["^ ","^2D",0,"^2E",5987],["^ ","^2D",0,"^2E",5987],["^ ","^2D",6,"^2E",5987],["^ ","^2D",11,"^2E",5987,"^O","js/Error"],["^ ","^2D",17,"^2E",5987],["^ ","^2D",18,"^2E",5987],["^ ","^2D",36,"^2E",5987],["^ ","^2D",98,"^2E",5987],["^ ","^2D",103,"^2E",5987]],"^2I",[["^ ","^2D",20,"^2E",5985]],"^2T",[["^ ","^2D",20,"^2E",5985,"^O","fulcro.client.primitives/is-atom?"]],"^4X",[["^ ","^2D",60,"^2E",5985,"^O","state"]]],"~i3223",["^ ","~i2",[["^ ","^2D",0,"^2E",5990]],"~i3",[["^ ","^2D",7,"^2E",5990,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$5"]],"~i9",[["^ ","^2D",53,"^2E",5990,"^O","cljs.core/swap!"]],"^2J",[["^ ","^2D",74,"^2E",5990,"^O","state"]],"^3D",[["^ ","^2D",80,"^2E",5990,"^O","fulcro.util/__integrate-ident-impl__"]],"^3Z",[["^ ","^2D",117,"^2E",5990,"^O","ident"]],"^2V",[["^ ","^2D",123,"^2E",5990,"^O","named-parameters"]]],"~i3225",["^ ","~i0",[["^ ","^2D",0,"^2E",6005],["^ ","^2D",43,"^2E",6017],["^ ","^2D",0,"^2E",6018]],"~i6",[["^ ","^2D",0,"^2E",6017,"^O","fulcro.client.primitives/merge-component"]]],"~i3236",["^ ","~i3",[["^ ","^2D",94,"^2E",6017,"^O","state-map"]],"^2G",[["^ ","^2D",104,"^2E",6017,"^O","component"]],"^3Y",[["^ ","^2D",114,"^2E",6017,"^O","component-data"]]],"~i3237",["^ ","~i2",[["^ ","^2D",0,"^2E",6018],["^ ","^2D",4,"^2E",6018,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",6019],["^ ","^2D",0,"^2E",6019],["^ ","^2D",20,"^2E",6019,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",6020],["^ ","^2D",16,"^2E",6020,"^O","temp__5455__auto__"],["^ ","^2D",0,"^2E",6021]],"^2T",[["^ ","^2D",4,"^2E",6020,"^O","top-ident"]],"^3D",[["^ ","^2D",25,"^2E",6018]],"^2P",[["^ ","^2D",25,"^2E",6018,"^O","fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2"]],"^4Y",[["^ ","^2D",90,"^2E",6018,"^O","component"]],"^3A",[["^ ","^2D",100,"^2E",6018,"^O","component-data"]]],"~i3238",["^ ","~i4",[["^ ","^2D",0,"^2E",6021],["^ ","^2D",12,"^2E",6021],["^ ","^2D",95,"^2E",6021],["^ ","^2D",21,"^2E",6022],["^ ","^2D",0,"^2E",6024]],"^2I",[["^ ","^2D",4,"^2E",6021,"^O","query"]],"^3L",[["^ ","^2D",143,"^2E",6021,"^O","top-ident"]],"^2F",[["^ ","^2D",153,"^2E",6021]],"^2H",[["^ ","^2D",153,"^2E",6021,"^O","fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$1"]],"^2R",[["^ ","^2D",218,"^2E",6021,"^O","component"]]],"~i3239",["^ ","^2I",[["^ ","^2D",4,"^2E",6022,"^O","state-to-merge"]],"^3>",[["^ ","^2D",69,"^2E",6022,"^O","top-ident"]],"^38",[["^ ","^2D",79,"^2E",6022,"^O","component-data"]]],"~i3240",["^ ","^2I",[["^ ","^2D",4,"^2E",6023,"^O","table-entries"]],"^3H",[["^ ","^2D",74,"^2E",6023],["^ ","^2D",162,"^2E",6023]],"^2X",[["^ ","^2D",74,"^2E",6023,"^O","fulcro.client.primitives.tree__GT_db.cljs$core$IFn$_invoke$arity$3"]],"^3W",[["^ ","^2D",141,"^2E",6023,"^O","query"]],"^4>",[["^ ","^2D",147,"^2E",6023,"^O","state-to-merge"]]],"~i3241",["^ ","^3L",[["^ ","^2D",20,"^2E",6023],["^ ","^2D",168,"^2E",6023]],"^4I",[["^ ","^2D",20,"^2E",6023,"^O","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic"]],"^2N",[["^ ","^2D",323,"^2E",6023,"^O","top-ident"]]],"~i3242",["^ ","~i6",[["^ ","^2D",0,"^2E",6024]],"~i7",[["^ ","^2D",7,"^2E",6024,"^O","fulcro.util.deep_merge.cljs$core$IFn$_invoke$arity$variadic"]],"^3Y",[["^ ","^2D",117,"^2E",6024,"^O","state-map"]],"^48",[["^ ","^2D",127,"^2E",6024,"^O","table-entries"]]],"~i3243",["^ ","~i4",[["^ ","^2D",0,"^2E",6026,"^O","state-map"]]],"~i3245",["^ ","~i0",[["^ ","^2D",0,"^2E",6029],["^ ","^2D",0,"^2E",6029],["^ ","^2D",49,"^2E",6058],["^ ","^2D",106,"^2E",6058,"^O","var_args"],["^ ","^2D",0,"^2E",6059],["^ ","^2D",0,"^2E",6059],["^ ","^2D",4,"^2E",6059,"^O","args__4534__auto__"],["^ ","^2D",25,"^2E",6059],["^ ","^2D",0,"^2E",6060],["^ ","^2D",0,"^2E",6060],["^ ","^2D",4,"^2E",6060,"^O","len__4531__auto__"],["^ ","^2D",30,"^2E",6060],["^ ","^2D",30,"^2E",6060],["^ ","^2D",0,"^2E",6061],["^ ","^2D",0,"^2E",6061],["^ ","^2D",4,"^2E",6061,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",6061],["^ ","^2D",0,"^2E",6063],["^ ","^2D",0,"^2E",6063],["^ ","^2D",3,"^2E",6063],["^ ","^2D",4,"^2E",6063,"^O","i__4532__auto__"],["^ ","^2D",28,"^2E",6063,"^O","len__4531__auto__"],["^ ","^2D",0,"^2E",6064],["^ ","^2D",0,"^2E",6064],["^ ","^2D",0,"^2E",6064,"^O","args__4534__auto__"],["^ ","^2D",24,"^2E",6064],["^ ","^2D",25,"^2E",6064],["^ ","^2D",35,"^2E",6064,"^O","i__4532__auto__"],["^ ","^2D",0,"^2E",6066],["^ ","^2D",15,"^2E",6066],["^ ","^2D",16,"^2E",6066,"^O","i__4532__auto__"],["^ ","^2D",40,"^2E",6066],["^ ","^2D",0,"^2E",6070],["^ ","^2D",0,"^2E",6074],["^ ","^2D",4,"^2E",6074,"^O","argseq__4535__auto__"],["^ ","^2D",27,"^2E",6074],["^ ","^2D",29,"^2E",6074],["^ ","^2D",30,"^2E",6074],["^ ","^2D",36,"^2E",6074],["^ ","^2D",36,"^2E",6074,"^O","args__4534__auto__"],["^ ","^2D",64,"^2E",6074],["^ ","^2D",64,"^2E",6074],["^ ","^2D",69,"^2E",6074,"^O","cljs.core/IndexedSeq"],["^ ","^2D",90,"^2E",6074],["^ ","^2D",90,"^2E",6074,"^O","args__4534__auto__"],["^ ","^2D",115,"^2E",6074],["^ ","^2D",120,"^2E",6074],["^ ","^2D",124,"^2E",6074],["^ ","^2D",131,"^2E",6074],["^ ","^2D",0,"^2E",6075],["^ ","^2D",0,"^2E",6075],["^ ","^2D",7,"^2E",6075,"^O","fulcro.client.primitives/merge-component!"],["^ ","^2D",91,"^2E",6075],["^ ","^2D",92,"^2E",6075],["^ ","^2D",102,"^2E",6075],["^ ","^2D",108,"^2E",6075],["^ ","^2D",109,"^2E",6075],["^ ","^2D",119,"^2E",6075],["^ ","^2D",125,"^2E",6075],["^ ","^2D",126,"^2E",6075],["^ ","^2D",136,"^2E",6075],["^ ","^2D",142,"^2E",6075,"^O","argseq__4535__auto__"],["^ ","^2D",0,"^2E",6078],["^ ","^2D",0,"^2E",6078],["^ ","^2D",0,"^2E",6078],["^ ","^2D",0,"^2E",6078,"^O","fulcro.client.primitives/merge-component!"],["^ ","^2D",86,"^2E",6078],["^ ","^2D",0,"^2E",6079],["^ ","^2D",0,"^2E",6113],["^ ","^2D",0,"^2E",6113],["^ ","^2D",0,"^2E",6113,"^O","fulcro.client.primitives/merge-component!"],["^ ","^2D",73,"^2E",6113],["^ ","^2D",0,"^2E",6115],["^ ","^2D",0,"^2E",6116],["^ ","^2D",0,"^2E",6116],["^ ","^2D",0,"^2E",6116,"^O","fulcro.client.primitives/merge-component!"],["^ ","^2D",67,"^2E",6116],["^ ","^2D",78,"^2E",6116,"^O","seq40122"],["^ ","^2D",0,"^2E",6117],["^ ","^2D",0,"^2E",6117],["^ ","^2D",4,"^2E",6117,"^O","G__40123"],["^ ","^2D",15,"^2E",6117],["^ ","^2D",15,"^2E",6117,"^O","cljs.core/first"],["^ ","^2D",31,"^2E",6117,"^O","seq40122"],["^ ","^2D",4,"^2E",6118,"^O","seq40122"],["^ ","^2D",19,"^2E",6118],["^ ","^2D",19,"^2E",6118,"^O","cljs.core/next"],["^ ","^2D",34,"^2E",6118,"^O","seq40122"],["^ ","^2D",4,"^2E",6119,"^O","G__40124"],["^ ","^2D",15,"^2E",6119],["^ ","^2D",15,"^2E",6119,"^O","cljs.core/first"],["^ ","^2D",31,"^2E",6119,"^O","seq40122"],["^ ","^2D",4,"^2E",6120,"^O","seq40122"],["^ ","^2D",19,"^2E",6120],["^ ","^2D",19,"^2E",6120,"^O","cljs.core/next"],["^ ","^2D",34,"^2E",6120,"^O","seq40122"],["^ ","^2D",4,"^2E",6121,"^O","G__40125"],["^ ","^2D",15,"^2E",6121],["^ ","^2D",15,"^2E",6121,"^O","cljs.core/first"],["^ ","^2D",31,"^2E",6121,"^O","seq40122"],["^ ","^2D",4,"^2E",6122,"^O","seq40122"],["^ ","^2D",19,"^2E",6122],["^ ","^2D",19,"^2E",6122,"^O","cljs.core/next"],["^ ","^2D",34,"^2E",6122,"^O","seq40122"],["^ ","^2D",0,"^2E",6123],["^ ","^2D",0,"^2E",6123],["^ ","^2D",4,"^2E",6123,"^O","self__4518__auto__"],["^ ","^2D",25,"^2E",6123],["^ ","^2D",0,"^2E",6124],["^ ","^2D",0,"^2E",6124],["^ ","^2D",7,"^2E",6124,"^O","self__4518__auto__"],["^ ","^2D",63,"^2E",6124,"^O","G__40123"],["^ ","^2D",72,"^2E",6124,"^O","G__40124"],["^ ","^2D",81,"^2E",6124,"^O","G__40125"],["^ ","^2D",90,"^2E",6124,"^O","seq40122"],["^ ","^2D",0,"^2E",6127]],"~i6",[["^ ","^2D",0,"^2E",6058,"^O","fulcro.client.primitives/merge-component!"]]],"~i3273",["^ ","~i3",[["^ ","^2D",97,"^2E",6078,"^O","reconciler"]],"^44",[["^ ","^2D",108,"^2E",6078,"^O","component"]],"^3=",[["^ ","^2D",118,"^2E",6078,"^O","object-data"]],"^2H",[["^ ","^2D",130,"^2E",6078,"^O","named-parameters"]]],"~i3274",["^ ","~i2",[["^ ","^2D",0,"^2E",6079],["^ ","^2D",3,"^2E",6079]],"^2I",[["^ ","^2D",5,"^2E",6079]],"^2T",[["^ ","^2D",5,"^2E",6079,"^O","fulcro.client.primitives/has-ident?"]],"^2P",[["^ ","^2D",47,"^2E",6079,"^O","component"]]],"~i3275",["^ ","~i4",[["^ ","^2D",0,"^2E",6080],["^ ","^2D",4,"^2E",6080],["^ ","^2D",4,"^2E",6080],["^ ","^2D",11,"^2E",6080,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",68,"^2E",6080],["^ ","^2D",111,"^2E",6080],["^ ","^2D",165,"^2E",6080],["^ ","^2D",192,"^2E",6080],["^ ","^2D",244,"^2E",6080],["^ ","^2D",257,"^2E",6080],["^ ","^2D",362,"^2E",6080],["^ ","^2D",16,"^2E",6081],["^ ","^2D",19,"^2E",6081],["^ ","^2D",20,"^2E",6081,"^O","e40129"],["^ ","^2D",38,"^2E",6081,"^O","js/Error"],["^ ","^2D",0,"^2E",6082],["^ ","^2D",4,"^2E",6082,"^O","e__31518__auto__"],["^ ","^2D",23,"^2E",6082,"^O","e40129"],["^ ","^2D",0,"^2E",6083],["^ ","^2D",0,"^2E",6083],["^ ","^2D",7,"^2E",6083,"^O","fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^2D",64,"^2E",6083],["^ ","^2D",107,"^2E",6083],["^ ","^2D",161,"^2E",6083],["^ ","^2D",188,"^2E",6083],["^ ","^2D",240,"^2E",6083],["^ ","^2D",253,"^2E",6083],["^ ","^2D",358,"^2E",6083],["^ ","^2D",411,"^2E",6083,"^O","e__31518__auto__"],["^ ","^2D",0,"^2E",6085],["^ ","^2D",0,"^2E",6085],["^ ","^2D",6,"^2E",6085,"^O","e40129"]]],"~i3276",["^ ","~i4",[["^ ","~:gcol",0,"~:gline",6089],["^ ","^1",4,"^2",6093,"~:name","map__40130"],["^ ","^1",4,"^2",6094,"^3","map__40130"],["^ ","^1",21,"^2",6094],["^ ","^1",23,"^2",6094],["^ ","^1",25,"^2",6094],["^ ","^1",27,"^2",6094],["^ ","^1",28,"^2",6094,"^3","map__40130"],["^ ","^1",42,"^2",6094],["^ ","^1",50,"^2",6094],["^ ","^1",52,"^2",6094],["^ ","^1",54,"^2",6094],["^ ","^1",55,"^2",6094],["^ ","^1",55,"^2",6094,"^3","map__40130"],["^ ","^1",104,"^2",6094],["^ ","^1",115,"^2",6094],["^ ","^1",116,"^2",6094,"^3","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1",148,"^2",6094],["^ ","^1",148,"^2",6094,"^3","map__40130"],["^ ","^1",179,"^2",6094],["^ ","^1",184,"^2",6094],["^ ","^1",191,"^2",6094],["^ ","^1",199,"^2",6094],["^ ","^1",199,"^2",6094,"^3","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",245,"^2",6094,"^3","cljs.core/hash-map"],["^ ","^1",264,"^2",6094,"^3","map__40130"],["^ ","^1",276,"^2",6094,"^3","map__40130"],["^ ","^1",17,"^2",6095],["^ ","^1",17,"^2",6095,"^3","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",61,"^2",6095,"^3","map__40130"],["^ ","^1",76,"^2",6095],["^ ","^1",18,"^2",6096],["^ ","^1",18,"^2",6096,"^3","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",62,"^2",6096,"^3","map__40130"],["^ ","^1",77,"^2",6096],["^ ","^1",0,"^2",6097],["^ ","^1",0,"^2",6109],["^ ","^1",7,"^2",6109,"^3","cljs.core/deref"]],"~i10",[["^ ","^1",4,"^2",6089,"^3","ident"]],"~i25",[["^ ","^1",12,"^2",6089]],"~i26",[["^ ","^1",12,"^2",6089,"^3","fulcro.client.primitives.get_ident.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1",77,"^2",6089,"^3","component"]],"~i46",[["^ ","^1",87,"^2",6089,"^3","object-data"]]],"~i3277",["^ ","^4",[["^ ","^1",4,"^2",6090,"^3","reconciler"]],"^5",[["^ ","^1",21,"^2",6090]],"~i29",[["^ ","^1",23,"^2",6090],["^ ","^1",60,"^2",6090]],"~i30",[["^ ","^1",23,"^2",6090,"^3","cljs.core/contains?"]],"~i40",[["^ ","^1",49,"^2",6090,"^3","reconciler"]],"~i64",[["^ ","^1",128,"^2",6090],["^ ","^1",128,"^2",6090]],"~i77",[["^ ","^1",224,"^2",6090,"^3","reconciler"]],"~i89",[["^ ","^1",236,"^2",6090,"^3","reconciler"]]],"~i3278",["^ ","^4",[["^ ","^1",4,"^2",6091,"^3","state"]],"^5",[["^ ","^1",12,"^2",6091]],"^6",[["^ ","^1",12,"^2",6091,"^3","fulcro.client.primitives/app-state"]],"^7",[["^ ","^1",47,"^2",6091,"^3","reconciler"]]],"~i3279",["^ ","^4",[["^ ","^1",4,"^2",6092,"^3","data-path-keys"]],"^5",[["^ ","^1",21,"^2",6092],["^ ","^1",35,"^2",6092]],"^;",[["^ ","^1",254,"^2",6092,"^3","named-parameters"]],"~i47",[["^ ","^1",200,"^2",6092],["^ ","^1",250,"^2",6092]],"~i48",[["^ ","^1",200,"^2",6092,"^3","cljs.core.partition.cljs$core$IFn$_invoke$arity$2"]],"~i61",[["^ ","^1",139,"^2",6092]],"~i62",[["^ ","^1",139,"^2",6092,"^3","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"~i66",[["^ ","^1",183,"^2",6092,"^3","cljs.core/second"]],"~i74",[["^ ","^1",121,"^2",6092,"^3","cljs.core/flatten"]],"~i82",[["^ ","^1",49,"^2",6092],["^ ","^1",121,"^2",6092]],"~i83",[["^ ","^1",49,"^2",6092,"^3","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"~i90",[["^ ","^1",96,"^2",6092,"^3","cljs.core/keyword?"]],"~i100",[["^ ","^1",35,"^2",6092,"^3","cljs.core/set"]],"~i104",[["^ ","^1",21,"^2",6092,"^3","cljs.core/vec"]]],"~i3280",["^ ","~i18",[["^ ","^1",4,"^2",6095,"^3","merge-data"]],"^:",[["^ ","^1",4,"^2",6096,"^3","merge-query"]],"~i43",[["^ ","^1",17,"^2",6093]],"~i44",[["^ ","^1",17,"^2",6093,"^3","fulcro.client.primitives/preprocess-merge"]],"^D",[["^ ","^1",59,"^2",6093,"^3","state"]],"~i67",[["^ ","^1",65,"^2",6093,"^3","component"]],"^>",[["^ ","^1",75,"^2",6093,"^3","object-data"]]],"~i3281",["^ ","~i6",[["^ ","^1",0,"^2",6097]],"~i7",[["^ ","^1",0,"^2",6097,"^3","fulcro.client.primitives.merge_BANG_.cljs$core$IFn$_invoke$arity$3"]],"~i14",[["^ ","^1",67,"^2",6097,"^3","reconciler"]],"^5",[["^ ","^1",82,"^2",6097,"^3","merge-data"]],"^7",[["^ ","^1",93,"^2",6097,"^3","merge-query"]]],"~i3282",["^ ","~i6",[["^ ","^1",0,"^2",6099]],"~i7",[["^ ","^1",0,"^2",6099,"^3","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"~i13",[["^ ","^1",51,"^2",6099,"^3","state"]],"~i19",[["^ ","^1",57,"^2",6099],["^ ","^1",0,"^2",6101]],"~i24",[["^ ","^1",18,"^2",6100,"^3","s"]]],"~i3283",["^ ","~i21",[["^ ","^1",0,"^2",6101],["^ ","^1",0,"^2",6103]],"~i27",[["^ ","^1",9,"^2",6101,"^3","s"]],"^:",[["^ ","^1",4,"^2",6101,"^3","st"],["^ ","^1",4,"^2",6102,"^3","st"]]],"~i3286",["^ ","~i23",[["^ ","^1",13,"^2",6102]],"^W",[["^ ","^1",13,"^2",6102,"^3","cljs.core.apply.cljs$core$IFn$_invoke$arity$4"]],"^;",[["^ ","^1",59,"^2",6102,"^3","fulcro.util/__integrate-ident-impl__"]],"~i60",[["^ ","^1",96,"^2",6102,"^3","st"]],"~i63",[["^ ","^1",99,"^2",6102,"^3","ident"]],"~i69",[["^ ","^1",105,"^2",6102,"^3","named-parameters"]]],"~i3287",["^ ","^10",[["^ ","^1",0,"^2",6103],["^ ","^1",61,"^2",6103]],"^W",[["^ ","^1",7,"^2",6103,"^3","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]],"~i31",[["^ ","^1",54,"^2",6103,"^3","st"]]],"~i3288",["^ ","~i6",[["^ ","^1",0,"^2",6107]],"~i7",[["^ ","^1",0,"^2",6107,"^3","fulcro.client.impl.protocols.queue_BANG_.cljs$core$IFn$_invoke$arity$2"]],"~i16",[["^ ","^1",71,"^2",6107,"^3","reconciler"]],"^Z",[["^ ","^1",86,"^2",6107]],"~i28",[["^ ","^1",86,"^2",6107,"^3","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"~i33",[["^ ","^1",131,"^2",6107,"^3","data-path-keys"]],"^C",[["^ ","^1",146,"^2",6107,"^3","ident"]]],"~i3289",["^ ","~i7",[["^ ","^1",23,"^2",6109,"^3","state"]]],"~i3291",["^ ","~i0",[["^ ","^1",0,"^2",6127],["^ ","^1",50,"^2",6131],["^ ","^1",0,"^2",6132]],"~i6",[["^ ","^1",0,"^2",6131,"^3","fulcro.client.primitives/merge-alternate-unions"]]],"~i3294",["^ ","~i3",[["^ ","^1",108,"^2",6131,"^3","merge-fn"]],"~i12",[["^ ","^1",117,"^2",6131,"^3","root-component"]]],"~i3295",["^ ","~i2",[["^ ","^1",0,"^2",6132],["^ ","^1",15,"^2",6132],["^ ","^1",0,"^2",6135],["^ ","^1",79,"^2",6137,"^3","p__40154"],["^ ","^1",0,"^2",6138],["^ ","^1",0,"^2",6138],["^ ","^1",4,"^2",6138,"^3","map__40155"],["^ ","^1",17,"^2",6138,"^3","p__40154"],["^ ","^1",4,"^2",6139,"^3","map__40155"],["^ ","^1",21,"^2",6139],["^ ","^1",23,"^2",6139],["^ ","^1",25,"^2",6139],["^ ","^1",27,"^2",6139],["^ ","^1",28,"^2",6139,"^3","map__40155"],["^ ","^1",42,"^2",6139],["^ ","^1",50,"^2",6139],["^ ","^1",52,"^2",6139],["^ ","^1",54,"^2",6139],["^ ","^1",55,"^2",6139],["^ ","^1",55,"^2",6139,"^3","map__40155"],["^ ","^1",104,"^2",6139],["^ ","^1",115,"^2",6139],["^ ","^1",116,"^2",6139,"^3","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1",148,"^2",6139],["^ ","^1",148,"^2",6139,"^3","map__40155"],["^ ","^1",179,"^2",6139],["^ ","^1",184,"^2",6139],["^ ","^1",191,"^2",6139],["^ ","^1",199,"^2",6139],["^ ","^1",199,"^2",6139,"^3","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",245,"^2",6139,"^3","cljs.core/hash-map"],["^ ","^1",264,"^2",6139,"^3","map__40155"],["^ ","^1",276,"^2",6139,"^3","map__40155"],["^ ","^1",17,"^2",6140,"^3","map__40155"],["^ ","^1",15,"^2",6141],["^ ","^1",15,"^2",6141,"^3","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",59,"^2",6141,"^3","map__40155"],["^ ","^1",74,"^2",6141],["^ ","^1",16,"^2",6142],["^ ","^1",16,"^2",6142,"^3","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",60,"^2",6142,"^3","map__40155"],["^ ","^1",75,"^2",6142],["^ ","^1",11,"^2",6143],["^ ","^1",11,"^2",6143,"^3","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",55,"^2",6143,"^3","map__40155"],["^ ","^1",70,"^2",6143],["^ ","^1",19,"^2",6144],["^ ","^1",19,"^2",6144,"^3","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",63,"^2",6144,"^3","map__40155"],["^ ","^1",78,"^2",6144],["^ ","^1",16,"^2",6145],["^ ","^1",16,"^2",6145,"^3","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",60,"^2",6145,"^3","map__40155"],["^ ","^1",75,"^2",6145],["^ ","^1",10,"^2",6146],["^ ","^1",10,"^2",6146,"^3","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",54,"^2",6146,"^3","map__40155"],["^ ","^1",69,"^2",6146],["^ ","^1",0,"^2",6147],["^ ","^1",70,"^2",6245,"^3","p__40154"],["^ ","^1",79,"^2",6248,"^3","p__40154"],["^ ","^1",79,"^2",6250,"^3","p__40154"],["^ ","^1",18,"^2",6259],["^ ","^1",0,"^2",6260],["^ ","^1",0,"^2",6307]]],"~i3296",["^ ","^S",[["^ ","^1",79,"^2",6134,"^3","ast"]],"^N",[["^ ","^1",83,"^2",6134,"^3","visitor"]]],"~i3297",["^ ","^U",[["^ ","^1",0,"^2",6135],["^ ","^1",108,"^2",6135]],"^S",[["^ ","^1",7,"^2",6135,"^3","fulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3"]],"^10",[["^ ","^1",96,"^2",6135,"^3","ast"]],"^Z",[["^ ","^1",100,"^2",6135,"^3","visitor"]]],"~i3298",["^ ","~i22",[["^ ","^1",4,"^2",6141,"^3","children"]],"^15",[["^ ","^1",4,"^2",6142,"^3","component"]],"~i41",[["^ ","^1",4,"^2",6143,"^3","type"]],"^8",[["^ ","^1",4,"^2",6144,"^3","dispatch-key"]],"~i59",[["^ ","^1",4,"^2",6145,"^3","union-key"]],"^13",[["^ ","^1",4,"^2",6146,"^3","key"]],"~i78",[["^ ","^1",4,"^2",6140,"^3","parent-ast"]],"^J",[["^ ","^1",88,"^2",6137,"^3","visitor"],["^ ","^1",79,"^2",6245,"^3","visitor"],["^ ","^1",88,"^2",6248,"^3","visitor"],["^ ","^1",88,"^2",6250,"^3","visitor"]],"~i98",[["^ ","^1",96,"^2",6137,"^3","parent-union"],["^ ","^1",87,"^2",6245,"^3","parent-union"],["^ ","^1",96,"^2",6250,"^3","parent-union"]]],"~i3299",["^ ","^U",[["^ ","^1",0,"^2",6147],["^ ","^1",0,"^2",6159],["^ ","^1",0,"^2",6161]],"^V",[["^ ","^1",20,"^2",6147],["^ ","^1",37,"^2",6147,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6148],["^ ","^1",0,"^2",6148],["^ ","^1",20,"^2",6148,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6149],["^ ","^1",4,"^2",6149,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6150],["^ ","^1",0,"^2",6150],["^ ","^1",20,"^2",6150,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6153,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6156,"^3","and__3938__auto__"]],"^W",[["^ ","^1",57,"^2",6147,"^3","component"]],"~i34",[["^ ","^1",28,"^2",6149,"^3","parent-union"]],"^B",[["^ ","^1",0,"^2",6151],["^ ","^1",52,"^2",6151]],"^C",[["^ ","^1",7,"^2",6151,"^3","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^12",[["^ ","^1",118,"^2",6151,"^3","type"]]],"~i3300",["^ ","~i15",[["^ ","^1",0,"^2",6159]],"^17",[["^ ","^1",1,"^2",6159,"^3","visitor"],["^ ","^1",41,"^2",6159,"^3","visitor"],["^ ","^1",105,"^2",6159,"^3","visitor"]],"^W",[["^ ","^1",79,"^2",6159,"^3","component"],["^ ","^1",123,"^2",6159,"^3","component"]],"^1H",[["^ ","^1",89,"^2",6159,"^3","parent-union"],["^ ","^1",133,"^2",6159,"^3","parent-union"]]],"~i3301",["^ ","^U",[["^ ","^1",0,"^2",6163],["^ ","^1",0,"^2",6164],["^ ","^1",0,"^2",6242]],"^V",[["^ ","^1",20,"^2",6163,"^3","children"]]],"~i3302",["^ ","^1J",[["^ ","^1",0,"^2",6164],["^ ","^1",4,"^2",6164,"^3","seq__40160"],["^ ","^1",17,"^2",6164],["^ ","^1",17,"^2",6164,"^3","cljs.core/seq"],["^ ","^1",4,"^2",6165,"^3","chunk__40161"],["^ ","^1",19,"^2",6165],["^ ","^1",4,"^2",6166,"^3","count__40162"],["^ ","^1",19,"^2",6166],["^ ","^1",4,"^2",6167,"^3","i__40163"],["^ ","^1",15,"^2",6167],["^ ","^1",0,"^2",6169],["^ ","^1",0,"^2",6169],["^ ","^1",3,"^2",6169],["^ ","^1",3,"^2",6169],["^ ","^1",4,"^2",6169,"^3","i__40163"],["^ ","^1",15,"^2",6169,"^3","count__40162"],["^ ","^1",0,"^2",6170],["^ ","^1",10,"^2",6170],["^ ","^1",10,"^2",6170,"^3","chunk__40161"],["^ ","^1",60,"^2",6170,"^3","i__40163"],["^ ","^1",0,"^2",6171],["^ ","^1",0,"^2",6171],["^ ","^1",0,"^2",6184],["^ ","^1",0,"^2",6185],["^ ","^1",15,"^2",6185,"^3","seq__40160"],["^ ","^1",15,"^2",6186,"^3","chunk__40161"],["^ ","^1",15,"^2",6187,"^3","count__40162"],["^ ","^1",15,"^2",6188],["^ ","^1",16,"^2",6188,"^3","i__40163"],["^ ","^1",27,"^2",6188],["^ ","^1",0,"^2",6195],["^ ","^1",4,"^2",6195,"^3","temp__5457__auto__"],["^ ","^1",25,"^2",6195],["^ ","^1",25,"^2",6195,"^3","cljs.core/seq"],["^ ","^1",39,"^2",6195,"^3","seq__40160"],["^ ","^1",0,"^2",6196],["^ ","^1",0,"^2",6196],["^ ","^1",3,"^2",6196,"^3","temp__5457__auto__"],["^ ","^1",0,"^2",6197],["^ ","^1",0,"^2",6197],["^ ","^1",4,"^2",6197,"^3","seq__40160"],["^ ","^1",21,"^2",6197,"^3","temp__5457__auto__"],["^ ","^1",0,"^2",6198],["^ ","^1",0,"^2",6198],["^ ","^1",3,"^2",6198],["^ ","^1",3,"^2",6198,"^3","cljs.core/chunked-seq?"],["^ ","^1",32,"^2",6198,"^3","seq__40160"],["^ ","^1",0,"^2",6199],["^ ","^1",4,"^2",6199,"^3","c__4351__auto__"],["^ ","^1",22,"^2",6199],["^ ","^1",22,"^2",6199,"^3","cljs.core/chunk-first"],["^ ","^1",44,"^2",6199,"^3","seq__40160"],["^ ","^1",0,"^2",6200],["^ ","^1",0,"^2",6200],["^ ","^1",15,"^2",6200],["^ ","^1",15,"^2",6200,"^3","cljs.core/chunk-rest"],["^ ","^1",36,"^2",6200,"^3","seq__40160"],["^ ","^1",15,"^2",6201,"^3","c__4351__auto__"],["^ ","^1",15,"^2",6202],["^ ","^1",15,"^2",6202,"^3","cljs.core/count"],["^ ","^1",31,"^2",6202,"^3","c__4351__auto__"],["^ ","^1",15,"^2",6203],["^ ","^1",0,"^2",6210],["^ ","^1",10,"^2",6210],["^ ","^1",10,"^2",6210,"^3","cljs.core/first"],["^ ","^1",26,"^2",6210,"^3","seq__40160"],["^ ","^1",0,"^2",6211],["^ ","^1",0,"^2",6211],["^ ","^1",0,"^2",6224],["^ ","^1",0,"^2",6225],["^ ","^1",15,"^2",6225],["^ ","^1",15,"^2",6225,"^3","cljs.core/next"],["^ ","^1",30,"^2",6225,"^3","seq__40160"],["^ ","^1",15,"^2",6226],["^ ","^1",15,"^2",6227],["^ ","^1",15,"^2",6228],["^ ","^1",0,"^2",6236]],"^10",[["^ ","^1",4,"^2",6170,"^3","ast"],["^ ","^1",4,"^2",6210,"^3","ast"]],"^Z",[["^ ","^1",31,"^2",6164,"^3","children"]]],"~i3303",["^ ","~i17",[["^ ","^1",0,"^2",6171],["^ ","^1",0,"^2",6174],["^ ","^1",0,"^2",6177],["^ ","^1",0,"^2",6180],["^ ","^1",0,"^2",6211],["^ ","^1",0,"^2",6214],["^ ","^1",0,"^2",6217],["^ ","^1",0,"^2",6220]]],"~i3304",["^ ","^V",[["^ ","^1",3,"^2",6171],["^ ","^1",136,"^2",6171],["^ ","^1",3,"^2",6211],["^ ","^1",136,"^2",6211]],"~i20",[["^ ","^1",3,"^2",6171,"^3","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",3,"^2",6211,"^3","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1B",[["^ ","^1",48,"^2",6171],["^ ","^1",48,"^2",6171],["^ ","^1",48,"^2",6211],["^ ","^1",48,"^2",6211]],"^:",[["^ ","^1",131,"^2",6171,"^3","ast"],["^ ","^1",131,"^2",6211,"^3","ast"]],"~i42",[["^ ","^1",0,"^2",6172],["^ ","^1",0,"^2",6212]],"^O",[["^ ","^1",0,"^2",6172,"^3","fulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3"],["^ ","^1",0,"^2",6212,"^3","fulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3"]],"~i52",[["^ ","^1",89,"^2",6172,"^3","ast"],["^ ","^1",89,"^2",6212,"^3","ast"]],"~i56",[["^ ","^1",93,"^2",6172,"^3","visitor"],["^ ","^1",93,"^2",6212,"^3","visitor"]],"^=",[["^ ","^1",101,"^2",6172,"^3","component"],["^ ","^1",101,"^2",6212,"^3","component"]]],"~i3305",["^ ","^V",[["^ ","^1",3,"^2",6174],["^ ","^1",136,"^2",6174],["^ ","^1",3,"^2",6214],["^ ","^1",136,"^2",6214]],"^1P",[["^ ","^1",3,"^2",6174,"^3","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1",3,"^2",6214,"^3","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1B",[["^ ","^1",48,"^2",6174],["^ ","^1",48,"^2",6174],["^ ","^1",48,"^2",6214],["^ ","^1",48,"^2",6214]],"^:",[["^ ","^1",131,"^2",6174,"^3","ast"],["^ ","^1",131,"^2",6214,"^3","ast"]],"^C",[["^ ","^1",0,"^2",6175],["^ ","^1",0,"^2",6215]],"~i49",[["^ ","^1",0,"^2",6175,"^3","fulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3"],["^ ","^1",0,"^2",6215,"^3","fulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3"]],"~i58",[["^ ","^1",89,"^2",6175,"^3","ast"],["^ ","^1",89,"^2",6215,"^3","ast"]],"^E",[["^ ","^1",93,"^2",6175,"^3","visitor"],["^ ","^1",93,"^2",6215,"^3","visitor"]],"~i70",[["^ ","^1",101,"^2",6175,"^3","parent-union"],["^ ","^1",101,"^2",6215,"^3","parent-union"]]],"~i3306",["^ ","^V",[["^ ","^1",20,"^2",6177,"^3","ast"],["^ ","^1",20,"^2",6217,"^3","ast"]],"^10",[["^ ","^1",0,"^2",6178],["^ ","^1",101,"^2",6178],["^ ","^1",0,"^2",6218],["^ ","^1",101,"^2",6218]],"^W",[["^ ","^1",0,"^2",6178,"^3","fulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3"],["^ ","^1",0,"^2",6218,"^3","fulcro$client$primitives$merge_alternate_unions_$_walk_ast.cljs$core$IFn$_invoke$arity$3"]],"^19",[["^ ","^1",89,"^2",6178,"^3","ast"],["^ ","^1",89,"^2",6218,"^3","ast"]],"~i37",[["^ ","^1",93,"^2",6178,"^3","visitor"],["^ ","^1",93,"^2",6218,"^3","visitor"]]],"~i3307",["^ ","^W",[["^ ","^1",90,"^2",6259,"^3","component"]],"^1H",[["^ ","^1",100,"^2",6259,"^3","parent-union"]]],"~i3308",["^ ","^1=",[["^ ","^1",0,"^2",6260],["^ ","^1",0,"^2",6285]],"^N",[["^ ","^1",4,"^2",6260,"^3","default-initial-state"]],"^1Q",[["^ ","^1",28,"^2",6260],["^ ","^1",45,"^2",6260,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6261],["^ ","^1",0,"^2",6261],["^ ","^1",20,"^2",6261,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6262],["^ ","^1",4,"^2",6262,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6263],["^ ","^1",0,"^2",6263],["^ ","^1",3,"^2",6263,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6266,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6269,"^3","and__3938__auto__"]],"^B",[["^ ","^1",65,"^2",6260,"^3","parent-union"]],"^11",[["^ ","^1",28,"^2",6262]],"^D",[["^ ","^1",28,"^2",6262,"^3","fulcro.client.primitives/has-initial-app-state?"]],"~i84",[["^ ","^1",82,"^2",6262,"^3","parent-union"]],"^1F",[["^ ","^1",0,"^2",6264],["^ ","^1",63,"^2",6264]],"~i99",[["^ ","^1",7,"^2",6264,"^3","fulcro.client.primitives/get-initial-state"]],"~i117",[["^ ","^1",50,"^2",6264,"^3","parent-union"]]],"~i3309",["^ ","^N",[["^ ","^1",4,"^2",6272,"^3","to-many?"]],"^1Q",[["^ ","^1",21,"^2",6272]],"^O",[["^ ","^1",21,"^2",6272,"^3","cljs.core/vector?"]],"~i51",[["^ ","^1",45,"^2",6272,"^3","default-initial-state"]]],"~i3310",["^ ","^N",[["^ ","^1",4,"^2",6273,"^3","component-initial-state"]],"^1Q",[["^ ","^1",30,"^2",6273],["^ ","^1",47,"^2",6273,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6274],["^ ","^1",0,"^2",6274],["^ ","^1",20,"^2",6274,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6275],["^ ","^1",4,"^2",6275,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6276],["^ ","^1",0,"^2",6276],["^ ","^1",3,"^2",6276,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6279,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6282,"^3","and__3938__auto__"]],"^B",[["^ ","^1",67,"^2",6273,"^3","component"]],"~i57",[["^ ","^1",28,"^2",6275]],"^1V",[["^ ","^1",28,"^2",6275,"^3","fulcro.client.primitives/has-initial-app-state?"]],"~i81",[["^ ","^1",82,"^2",6275,"^3","component"]],"~i92",[["^ ","^1",0,"^2",6277],["^ ","^1",60,"^2",6277]],"~i93",[["^ ","^1",7,"^2",6277,"^3","fulcro.client.primitives/get-initial-state"]],"~i111",[["^ ","^1",50,"^2",6277,"^3","component"]]],"~i3311",["^ ","^S",[["^ ","^1",0,"^2",6285],["^ ","^1",0,"^2",6302],["^ ","^1",0,"^2",6304]],"^1P",[["^ ","^1",20,"^2",6285],["^ ","^1",37,"^2",6285,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6286],["^ ","^1",0,"^2",6286],["^ ","^1",20,"^2",6286,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6287],["^ ","^1",4,"^2",6287,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6288],["^ ","^1",0,"^2",6288],["^ ","^1",20,"^2",6288,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6289],["^ ","^1",4,"^2",6289,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6290],["^ ","^1",0,"^2",6290],["^ ","^1",20,"^2",6290,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6291],["^ ","^1",0,"^2",6293,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6296,"^3","and__3938__auto__"],["^ ","^1",0,"^2",6299,"^3","and__3938__auto__"]],"^5",[["^ ","^1",57,"^2",6285,"^3","component"]],"~i35",[["^ ","^1",28,"^2",6287,"^3","component-initial-state"]],"^1D",[["^ ","^1",28,"^2",6289,"^3","parent-union"]],"~i72",[["^ ","^1",9,"^2",6291]],"^>",[["^ ","^1",11,"^2",6291,"^3","to-many?"]],"~i87",[["^ ","^1",32,"^2",6291]],"~i88",[["^ ","^1",32,"^2",6291,"^3","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"]],"^29",[["^ ","^1",80,"^2",6291,"^3","default-initial-state"]],"~i115",[["^ ","^1",102,"^2",6291,"^3","component-initial-state"]]],"~i3312",["^ ","^17",[["^ ","^1",0,"^2",6302]],"^1N",[["^ ","^1",8,"^2",6302,"^3","merge-fn"],["^ ","^1",49,"^2",6302,"^3","merge-fn"],["^ ","^1",128,"^2",6302,"^3","merge-fn"]],"^6",[["^ ","^1",88,"^2",6302,"^3","parent-union"],["^ ","^1",147,"^2",6302,"^3","parent-union"]],"~i39",[["^ ","^1",101,"^2",6302,"^3","component-initial-state"],["^ ","^1",160,"^2",6302,"^3","component-initial-state"]]],"~i3313",["^ ","~i4",[["^ ","^1",0,"^2",6307]],"~i5",[["^ ","^1",7,"^2",6307,"^3","walk_ast.cljs$core$IFn$_invoke$arity$2"]]],"~i3314",["^ ","~i6",[["^ ","^1",46,"^2",6307]],"~i7",[["^ ","^1",46,"^2",6307,"^3","fulcro.client.primitives/query->ast"]],"^N",[["^ ","^1",85,"^2",6307]],"^V",[["^ ","^1",85,"^2",6307,"^3","fulcro.client.primitives.get_query.cljs$core$IFn$_invoke$arity$1"]],"^:",[["^ ","^1",150,"^2",6307,"^3","root-component"]]],"~i3315",["^ ","~i6",[["^ ","^1",167,"^2",6307,"^3","merge-union"]]],"~i3320",["^ ","~i0",[["^ ","^1",0,"^2",6309],["^ ","^1",64,"^2",6314],["^ ","^1",0,"^2",6315]],"~i6",[["^ ","^1",0,"^2",6314,"^3","fulcro.client.primitives/merge-alternate-union-elements!"]]],"~i3324",["^ ","~i3",[["^ ","^1",136,"^2",6314,"^3","app"]],"~i7",[["^ ","^1",140,"^2",6314,"^3","root-component"]]],"~i3325",["^ ","~i2",[["^ ","^1",0,"^2",6315]],"~i3",[["^ ","^1",7,"^2",6315,"^3","fulcro.client.primitives/merge-alternate-unions"]],"^6",[["^ ","^1",55,"^2",6315]],"^Z",[["^ ","^1",55,"^2",6315,"^3","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"^2<",[["^ ","^1",103,"^2",6315,"^3","fulcro.client.primitives/merge-component!"]],"^1R",[["^ ","^1",150,"^2",6315,"^3","app"]],"^26",[["^ ","^1",155,"^2",6315,"^3","root-component"]]],"~i3327",["^ ","~i0",[["^ ","^1",0,"^2",6317],["^ ","^1",58,"^2",6322],["^ ","^1",0,"^2",6323]],"~i6",[["^ ","^1",0,"^2",6322,"^3","fulcro.client.primitives/merge-alternate-union-elements"]]],"~i3331",["^ ","~i3",[["^ ","^1",124,"^2",6322,"^3","state-map"]],"^U",[["^ ","^1",134,"^2",6322,"^3","root-component"]]],"~i3332",["^ ","~i2",[["^ ","^1",0,"^2",6323],["^ ","^1",16,"^2",6331],["^ ","^1",16,"^2",6331,"^3","cljs.core/deref"],["^ ","^1",0,"^2",6332]],"~i8",[["^ ","^1",4,"^2",6323,"^3","initial-state"]],"^10",[["^ ","^1",20,"^2",6323],["^ ","^1",78,"^2",6323]],"^W",[["^ ","^1",20,"^2",6323,"^3","fulcro.client.primitives/get-initial-state"]],"^1Q",[["^ ","^1",63,"^2",6323,"^3","root-component"]]],"~i3333",["^ ","~i8",[["^ ","^1",4,"^2",6324,"^3","state-map-atom"]],"^10",[["^ ","^1",21,"^2",6324]],"^W",[["^ ","^1",21,"^2",6324,"^3","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]],"^:",[["^ ","^1",66,"^2",6324,"^3","state-map"]]],"~i3334",["^ ","~i8",[["^ ","^1",4,"^2",6325,"^3","merge-to-state"]],"^10",[["^ ","^1",21,"^2",6325],["^ ","^1",0,"^2",6327]],"^18",[["^ ","^1",18,"^2",6326,"^3","comp"]],"^19",[["^ ","^1",23,"^2",6326,"^3","tree"]],"^2B",[["^ ","^1",0,"^2",6327]],"^<",[["^ ","^1",7,"^2",6327,"^3","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^8",[["^ ","^1",58,"^2",6327,"^3","state-map-atom"]],"^D",[["^ ","^1",73,"^2",6327,"^3","fulcro.client.primitives/merge-component"]],"^>",[["^ ","^1",114,"^2",6327,"^3","comp"]],"^H",[["^ ","^1",119,"^2",6327,"^3","tree"]]],"~i3335",["^ ","~i8",[["^ ","^1",4,"^2",6330,"^3","_"]],"^10",[["^ ","^1",8,"^2",6330]],"^W",[["^ ","^1",8,"^2",6330,"^3","fulcro.client.primitives/merge-alternate-unions"]],"^B",[["^ ","^1",56,"^2",6330,"^3","merge-to-state"]],"^E",[["^ ","^1",71,"^2",6330,"^3","root-component"]]],"~i3336",["^ ","~i8",[["^ ","^1",4,"^2",6331,"^3","new-state"]],"^W",[["^ ","^1",32,"^2",6331,"^3","state-map-atom"]]],"~i3337",["^ ","~i4",[["^ ","^1",0,"^2",6332,"^3","new-state"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:shadow.build.classpath/resource","goog/dom/tagname.js"],[1508737613441,"~$goog","~$goog.dom.HtmlElement"],["^2T","cljs/core/async/impl/ioc_helpers.cljs"],[1516100900795,"^2U","~$cljs.core","~$cljs.core.async.impl.protocols"],["^2T","goog/labs/useragent/platform.js"],[1508737613441,"^2U","~$goog.labs.userAgent.util","~$goog.string"],["~:macro","^2W"],[1537260906000],["^2T","cljs/core/async.cljs"],[1516100900795,"^2U","^2W","^2X","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^2T","fulcro/util.cljc"],[1537260907310,"^2U","^2W","~$cljs.spec.alpha","~$clojure.walk","~$fulcro.logging"],["^2T","cljs/spec/gen/alpha.cljs"],[1537260906289,"^2U","^2W","~$goog.Uri"],["^2T","cljs/tools/reader/impl/utils.cljs"],[1537358547920,"^2U","^2W","~$clojure.string","^2Z"],["^2T","goog/math/math.js"],[1508737613441,"^2U","~$goog.array","~$goog.asserts"],["^2T","goog/labs/useragent/browser.js"],[1508737613441,"^2U","^3:","^2Y","~$goog.object","^2Z"],["^2T","goog/html/safeurl.js"],[1508737613441,"^2U","^3;","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","^2Z","~$goog.string.Const","~$goog.string.TypedString"],["^2T","goog/array/array.js"],[1508737613441,"^2U","^3;"],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],[1537358551000,1529422278000,"~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"],["^2T","fulcro/client/primitives.cljc"],[1537260907310,"^2U","^2W","^2Z","~$cljsjs.react","^3<","~$fulcro-css.css-protocols","~$fulcro-css.css-implementation","~$cljs.core.async","~$clojure.set","~$fulcro.history","^37","~$fulcro.tempid","~$fulcro.transit","~$clojure.zip","~$fulcro.client.impl.data-targeting","~$fulcro.client.impl.protocols","~$fulcro.client.impl.parser","~$fulcro.util","^36","^39","^35","~$cognitect.transit"],["^2T","goog/useragent/useragent.js"],[1508737613441,"^2U","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2Y","~$goog.reflect","^2Z"],["^2[","~$cljs.tools.reader.reader-types"],[1537358547000],["^2[","~$fulcro.client.primitives"],[1537260907000],["^2T","com/cognitect/transit/impl/reader.js"],[1482686437866,"^2U","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"],["^2T","goog/debug/error.js"],[1508737613441,"^2U"],["^2T","cljs/tools/reader/edn.cljs"],[1537358547920,"^2U","^2W","~$cljs.tools.reader.impl.errors","^3X","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2Z","~$goog.string.StringBuffer"],["^2T","goog/dom/nodetype.js"],[1508737613441,"^2U"],["^2T","cljs/tools/reader/impl/inspect.cljs"],[1537358547920,"^2U","^2W"],["^2T","com/cognitect/transit/util.js"],[1482686437866,"^2U","^3<"],["^2[","~$cljs.spec.gen.alpha"],[1537260906000],["^2T","cljs/tools/reader.cljs"],[1537358547920,"^2U","^2W","^3X","^41","^42","^40","^3:","^2Z","^44"],["^2T","goog/string/typedstring.js"],[1508737613441,"^2U"],["^3C","node_modules/react/index.js"],[1537358551000,499162500000,"^3D","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"],["^2T","shadow/js.js"],[1537358551352,"^2U"],["^2T","goog/object/object.js"],[1508737613441,"^2U"],"~:SHADOW-TIMESTAMP",[1537358551000,1537260906000],["^3C","node_modules/react/cjs/react.development.js"],[1537358551000,499162500000,"^3D","~$module$node_modules$object_assign$index","~$module$node_modules$prop_types$checkPropTypes"],["^2T","cljs/stacktrace.cljc"],[1537260906289,"^2U","^2W","^2Z","^39"],["^2T","goog/math/long.js"],[1508737613441,"^2U","^3;","^3W"],["^2T","fulcro/transit.cljc"],[1537260907310,"^2U","^2W","^3S","~$com.cognitect.transit","^3L"],["^2T","goog/html/trustedresourceurl.js"],[1508737613441,"^2U","^3;","^3?","^3@","^3A","^3B"],["^2T","cljs/core/async/impl/channels.cljs"],[1516100900795,"^2U","^2W","^2X","^33","^31"],["^2T","goog/functions/functions.js"],[1508737613441,"^2U"],["^2T","cljs/core/async/impl/dispatch.cljs"],[1516100900795,"^2U","^2W","^31","~$goog.async.nextTick"],["^2T","goog/html/safestyle.js"],[1508737613441,"^2U","^3:","^3;","~$goog.html.SafeUrl","^2Z","^3A","^3B"],["^2T","clojure/walk.cljs"],[1537260906289,"^2U","^2W"],["^2T","cljs/core/async/impl/protocols.cljs"],[1516100900795,"^2U","^2W"],["^2T","goog/structs/map.js"],[1508737613441,"^2U","~$goog.iter.Iterator","~$goog.iter.StopIteration","^3<"],["^2T","com/cognitect/transit/delimiters.js"],[1482686437866,"^2U"],["^2T","goog/html/safehtml.js"],[1508737613441,"^2U","^3:","^3;","~$goog.dom.TagName","~$goog.dom.tags","~$goog.html.SafeScript","~$goog.html.SafeStyle","~$goog.html.SafeStyleSheet","^4=","^3>","^3?","^3@","^3T","^3<","^2Z","^3A","^3B"],["^2T","goog/dom/tags.js"],[1508737613441,"^2U","^3<"],["^2T","fulcro/client/impl/data_targeting.cljc"],[1537260907310,"^2U","^2W","^3J","^3R"],["^2[","^37"],[1537260907000],["^2T","goog/labs/useragent/engine.js"],[1508737613441,"^2U","^3:","^2Y","^2Z"],["^2T","com/cognitect/transit/impl/decoder.js"],[1482686437866,"^2U","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^3[","~$com.cognitect.transit.types"],["^2T","fulcro_css/css_implementation.cljc"],[1537260907310,"^2U","^2W","~$cljs.tagged-literals","^3G","^39"],["^2T","cljs/reader.cljs"],[1537260906289,"^2U","^2W","^3<","^43","~$cljs.tools.reader.edn","^44"],["^2T","fulcro_css/css_protocols.cljc"],[1537260907310,"^2U","^2W"],["^2[","^35"],[1537260906000],["^2T","goog/asserts/asserts.js"],[1508737613441,"^2U","~$goog.debug.Error","~$goog.dom.NodeType","^2Z"],["^2T","goog/debug/relativetimeprovider.js"],[1508737613441,"^2U"],["^2T","cljs/core/async/impl/buffers.cljs"],[1516100900795,"^2U","^2W","^2X"],["^2T","goog/debug/logbuffer.js"],[1508737613441,"^2U","^3;","~$goog.debug.LogRecord"],["^2T","cljs/tagged_literals.cljc"],[1537260906289,"^2U","^2W","~$cljs.reader"],["^2T","goog/uri/uri.js"],[1508737613441,"^2U","^3:","^3;","^2Z","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^2T","goog/i18n/bidi.js"],[1508737613441,"^2U"],["^3C","node_modules/object-assign/index.js"],[1537358551000,1484580833000,"^3D"],["^2[","^3I"],[1516100900000],["^2T","fulcro/tempid.cljc"],[1537260907310,"^2U","^2W"],["^2T","goog/debug/formatter.js"],[1508737613441,"^2U","~$goog.debug","~$goog.debug.Logger","~$goog.debug.RelativeTimeProvider","~$goog.html.SafeHtml","^4=","~$goog.html.uncheckedconversions","^3A"],["^2T","cljs/core/async/impl/timers.cljs"],[1516100900795,"^2U","^2W","^2X","^30","^33"],["^2T","cljs/spec/alpha.cljs"],[1537260906289,"^2U","^2W","^3<","^36","^45","^39"],["^2T","goog/fs/url.js"],[1508737613441,"^2U"],["^2T","goog/debug/logrecord.js"],[1508737613441,"^2U"],["^2T","goog/base.js"],[1508737613441],["^2T","goog/structs/structs.js"],[1508737613441,"^2U","^3:","^3<"],["^2T","cljs/tools/reader/impl/errors.cljs"],[1537358547920,"^2U","^2W","^3X","^39","~$cljs.tools.reader.impl.inspect"],["^2T","cljsjs/react.cljs"],[1537358551030,"^2U","^2W","~$module$node_modules$react$index"],["^2T","clojure/string.cljs"],[1537260906289,"^2U","^2W","^2Z","^44"],["^2T","fulcro/history.cljc"],[1537260907310,"^2U","^2W","^37","^3R","^3J","^35"],["^3C","node_modules/react/cjs/react.production.min.js"],[1537358551000,499162500000,"^3D","^49"],["^2T","com/cognitect/transit/handlers.js"],[1482686437866,"^2U","^4E","^4G","~$goog.math.Long"],["^2T","fulcro/client/impl/protocols.cljc"],[1537260907310,"^2U","^2W"],["^2T","goog/debug/entrypointregistry.js"],[1508737613441,"^2U","^3;"],["^2T","goog/string/string.js"],[1508737613441,"^2U"],["^2T","com/cognitect/transit/types.js"],[1482686437866,"^2U","^4E","~$com.cognitect.transit.eq","^4Z"],["^2T","goog/reflect/reflect.js"],[1508737613441,"^2U"],["^2T","goog/labs/useragent/util.js"],[1508737613441,"^2U","^2Z"],["^2T","com/cognitect/transit/eq.js"],[1482686437866,"^2U","^4E"],["^2[","~$cljs.core.async.impl.ioc-macros"],[1516100900000],["^2T","goog/debug/debug.js"],[1508737613441,"^2U","^3:","~$goog.debug.errorcontext","~$goog.userAgent"],["^2T","clojure/zip.cljs"],[1537260906289,"^2U","^2W"],["^2T","goog/string/stringbuffer.js"],[1508737613441,"^2U"],["^2T","goog/debug/errorcontext.js"],[1508737613441,"^2U"],["^2T","cljs/tools/reader/reader_types.cljs"],[1537358547920,"^2U","^2W","^41","^2Z","^44"],["^2T","goog/iter/iter.js"],[1508737613441,"^2U","^3:","^3;","~$goog.functions","~$goog.math"],["^2T","goog/async/nexttick.js"],[1508737613441,"^2U","~$goog.debug.entryPointRegistry","^4@","^53","^3T","^3U"],["^2T","goog/html/uncheckedconversions.js"],[1508737613441,"^2U","^3;","^4V","^4B","^4C","^4D","^4=","^3>","^2Z","^3A"],["^2T","goog/debug/logger.js"],[1508737613441,"^2U","^3:","^3;","^4S","~$goog.debug.LogBuffer","^4L"],["^2T","com/cognitect/transit/caching.js"],[1482686437866,"^2U","^4F"],["^3C","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1537358551000,1529417620000,"^3D"],["^2T","cljs/tools/reader/impl/commons.cljs"],[1537358547920,"^2U","^2W","^40","^3X","^41"],["^2T","goog/dom/htmlelement.js"],[1508737613441,"^2U"],["^2T","cljs/core.cljs"],[1537260906289,"^4Z","~$goog.math.Integer","^2Z","^3<","^3:","^38","^44"],["^2T","com/cognitect/transit.js"],[1482686437866,"^2U","^4E","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^4G","^4[","^3Z","^3["],["^2T","goog/html/safescript.js"],[1508737613441,"^2U","^3;","^3A","^3B"],["^2T","goog/log/log.js"],[1508737613441,"^2U","^4S","~$goog.debug.LogManager","^4L","^4T"],["^2T","fulcro/logging.cljc"],[1537260907310,"^2U","^2W","^39","~$cljs.stacktrace","~$goog.log","^3<","~$goog.debug.Logger.Level","~$goog.debug.Console"],["^2T","goog/html/safestylesheet.js"],[1508737613441,"^2U","^3:","^3;","^4C","^3<","^2Z","^3A","^3B"],["^2T","goog/math/integer.js"],[1508737613441,"^2U"],["^2T","goog/debug/console.js"],[1508737613441,"^2U","^5:","^4T","~$goog.debug.TextFormatter"],["^2T","clojure/set.cljs"],[1537260906289,"^2U","^2W"],["^2T","goog/uri/utils.js"],[1508737613441,"^2U","^3:","^3;","^2Z"],["^2T","goog/string/const.js"],[1508737613441,"^2U","^3;","^3B"],["^2T","com/cognitect/transit/impl/writer.js"],[1482686437866,"^2U","^4E","^3[","~$com.cognitect.transit.handlers","^4G","^4F","^4Z"],["^2T","fulcro/client/impl/parser.cljc"],[1537260907310,"^2U","^2W","^3J","^37","^3R"],["^2T","cognitect/transit.cljs"],[1537260903184,"^2U","^2W","^4;","^4G","^4[","^4Z"],["^2[","^4M"],[1537260906000]]],"~:analyzer",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","fulcro/client/primitives.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",29],"~:ns-aliases",["^ ","~$clojure.core.async","^3I","~$clojure.stacktrace","^5;","~$clojure.spec.alpha","^35"],"~:use-macros",null,"~:excludes",["~#set",["~$var?","~$key","~$replace","~$force"]],"~:macros",["^ ","~$defsc",["^ ","~:doc","Define a stateful component. This macro emits a React UI class with a query,\n   optional ident (if :ident is specified in options), optional initial state, optional css, lifecycle methods,\n   and a render method. It can also cause the class to implement additional protocols that you specify. Destructuring is\n   supported in the argument list.\n\n   The template (data-only) versions do not have any arguments in scope\n   The lambda versions have arguments in scope that make sense for those lambdas, as listed below:\n\n   ```\n   (defsc Component [this {:keys [db/id x] :as props} {:keys [onSelect] :as computed} css-classmap]\n     {\n      ;; stateful component options\n      ;; query template is literal. Use the lambda if you have ident-joins or unions.\n      :query [:db/id :x] ; OR (fn [] [:db/id :x]) ; this in scope\n      ;; ident template is table name and ID property name\n      :ident [:table/by-id :id] ; OR (fn [] [:table/by-id id]) ; this and props in scope\n      ;; initial-state template is magic..see dev guide. Lambda version is normal.\n      :initial-state {:x :param/x} ; OR (fn [params] {:x (:x params)}) ; this in scope\n      :css [] ; garden css rules\n      :css-include [] ; list of components that have CSS to compose towards root.\n\n      ; React Lifecycle Methods (this in scope)\n      :initLocalState            (fn [] ...) ; CAN BE used to call things as you might in a constructor. Return value is initial state.\n      :shouldComponentUpdate     (fn [next-props next-state] ...)\n\n      :componentDidUpdate        (fn [prev-props prev-state snapshot] ...) ; snapshot is optional, and is 16+. Is context for 15\n      :componentDidMount         (fn [] ...)\n      :componentWillUnmount      (fn [] ...)\n\n      ;; DEPRECATED IN REACT 16 (to be removed in 17):\n      :componentWillReceiveProps        (fn [next-props] ...)\n      :componentWillUpdate              (fn [next-props next-state] ...)\n      :componentWillMount               (fn [] ...)\n\n      ;; Replacements for deprecated methods in React 16.3+\n      :UNSAFE_componentWillReceiveProps (fn [next-props] ...)\n      :UNSAFE_componentWillUpdate       (fn [next-props next-state] ...)\n      :UNSAFE_componentWillMount        (fn [] ...)\n\n      ;; ADDED for React 16:\n      :componentDidCatch         (fn [error info] ...)\n      :getSnapshotBeforeUpdate   (fn [prevProps prevState] ...)\n      :getDerivedStateFromProps  (fn [props state] ...)\n\n      NOTE: shouldComponentUpdate should generally not be overridden other than to force it false so\n      that other libraries can control the sub-dom. If you do want to implement it, then old props can\n      be obtained from (prim/props this), and old state via (gobj/get (. this -state) \"fulcro$state\").\n\n      ; Custom literal protocols (Object ok, too, to add arbitrary methods. Nothing automatically in scope.)\n      :protocols [YourProtocol\n                  (method [this] ...)]} ; nothing is automatically in scope\n      ; BODY forms. May be omitted IFF there is an options map, in order to generate a component that is used only for queries/normalization.\n      (dom/div #js {:onClick onSelect} x))\n   ```\n\n   See the Developer's Guide at book.fulcrologic.com for more details.\n   ","~:arglists",["~#list",[["~$&","~$args"]]],"^5F",3100,"^5G",4,"^5E","fulcro/client/primitives.cljc","^3","~$fulcro.client.primitives/defsc","~:ns","^3Y","^2[",true],"~$with-parent-context",["^ ","^5X",["^5Y",[["~$outer-parent","~$&","~$body"]]],"^5W","Wraps the given body with the correct internal bindings of the parent so that Fulcro internals\n  will work when that body is embedded in unusual ways (e.g. as the body in a child-as-a-function\n  React pattern).","^5F",3341,"^5G",1,"^5E","fulcro/client/primitives.cljc","^3","~$fulcro.client.primitives/with-parent-context","^60","^3Y","^2[",true],"~$defui",["^ ","^5X",["^5Y",[["~$name","~$&","~$forms"]]],"^5F",553,"^5G",1,"^5E","fulcro/client/primitives.cljc","^3","~$fulcro.client.primitives/defui","^60","^3Y","^2[",true],"~$ui",["^ ","^5X",["^5Y",[["~$&","^67"]]],"^5W","Declare an anonymous UI component.  If the first argument is a keyword, then it is treated\n  as the React version (defaults to :v15).","^5F",558,"^5G",1,"^5E","fulcro/client/primitives.cljc","^3","~$fulcro.client.primitives/ui","^60","^3Y","^2[",true],"~$sc",["^ ","^5X",["^5Y",[["~$&","^5Z"]]],"^5W","Just like defsc, but returns the component instead. The arguments are the same, except do not supply a symbol:\n\n  ```\n  (let [C (prim/sc [this props] ...)] ...)\n  ```\n  ","^5F",3167,"^5G",1,"^5E","fulcro/client/primitives.cljc","^3","~$fulcro.client.primitives/sc","^60","^3Y","^2[",true]],"~:shadow/js-access-properties",["^5P",["fulcro$isComponent","createElement","Fragment","render","unmountComponentAtNode"]],"^3","^3Y","~:imports",null,"~:requires",["^ ","~$t","^3S","~$set","^3J","^5M","^35","~$gstring","^2Z","~$log","^37","~$targeting","^3O","^3M","^3M","^3N","^3N","~$p","^3P","^3Q","^3Q","^37","^37","^2Z","^2Z","~$async","^3I","^2W","^2W","~$gobj","^3<","^2U","^2U","^3<","^3<","^3L","^3L","^3F","^3F","^3I","^3I","^3H","^3H","^3R","^3R","^3S","^3S","~$hist","^3K","^3J","^3J","^5K","^3I","~$util","^3R","~$s","^35","~$parser","^3Q","^3G","^3G","~$transit","^3M","~$str","^39","~$zip","^3N","^39","^39","^35","^35","^36","^36","~$tempid","^3L","^3O","^3O","^3K","^3K","^3P","^3P"],"~:seen",["^5P",["~:require","~:require-macros"]],"~:shadow/js-access-global",["^5P",["requestAnimationFrame","Date","React","ReactDOM","undefined","Error","setTimeout"]],"~:uses",["^ ","~$prewalk","^36"],"~:defs",["^ ","~$merge*",["^ ","~:protocol-inline",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1758,"^5G",7,"^5H",1758,"^5I",13,"^5X",["^5Y",["~$quote",["^5Y",[["~$reconciler","~$state","~$res","~$query"]]]]],"^5W","Internal implementation of merge. Given a reconciler, state (map), result, and query returns a map of the:\n\n  `:keys` to refresh\n  `:next` state\n  and `::tempids` that need to be migrated"],"^3","~$fulcro.client.primitives/merge*","~:variadic",false,"^5E","fulcro/client/primitives.cljc","^5I",13,"~:method-params",["^5Y",[["^6W","^6X","^6Y","^6Z"]]],"~:protocol-impl",null,"~:arglists-meta",["^5Y",[null,null]],"^5G",1,"^5F",1758,"^5H",1758,"~:max-fixed-arity",4,"~:fn-var",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W","^6X","^6Y","^6Z"]]]]],"^5W","Internal implementation of merge. Given a reconciler, state (map), result, and query returns a map of the:\n\n  `:keys` to refresh\n  `:next` state\n  and `::tempids` that need to be migrated"],"~$db->tree",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1443,"^5G",7,"^5H",1443,"^5I",15,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","~$data","~$refs"],["^6Z","^77","^78","~$map-ident"]]]]],"^5W","Given a query, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values.","~:top-fn",["^ ","^70",false,"^74",4,"^71",["^5Y",[["^6Z","^77","^78"],["^6Z","^77","^78","^79"]]],"^5X",["^5Y",[["^6Z","^77","^78"],["^6Z","^77","^78","^79"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/db->tree","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^7:",["^ ","^70",false,"^74",4,"^71",["^5Y",[["^6Z","^77","^78"],["^6Z","^77","^78","^79"]]],"^5X",["^5Y",[["^6Z","^77","^78"],["^6Z","^77","^78","^79"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^6Z","^77","^78"],["^6Z","^77","^78","^79"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1443,"^5H",1443,"^74",4,"^75",true,"^5X",["^5Y",[["^6Z","^77","^78"],["^6Z","^77","^78","^79"]]],"^5W","Given a query, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values."],"~$force-root-render!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2493,"^5G",7,"^5H",2493,"^5I",25,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","Force a re-render of the root. Runs a root query, disables shouldComponentUpdate, and renders the root component.\n   This effectively forces React to do a full VDOM diff. Useful for things like changing locales where there are no\n   real data changes, but the UI still needs to refresh.\n   recomputing :shared."],"^3","~$fulcro.client.primitives/force-root-render!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",25,"^71",["^5Y",[["^6W"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2493,"^5H",2493,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","Force a re-render of the root. Runs a root query, disables shouldComponentUpdate, and renders the root component.\n   This effectively forces React to do a full VDOM diff. Useful for things like changing locales where there are no\n   real data changes, but the UI still needs to refresh.\n   recomputing :shared."],"~$denormalize-query",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",891,"^5G",7,"^5H",891,"^5I",24,"^5X",["^5Y",["^6V",["^5Y",[["~$state-map","~$ID"]]]]],"^5W","Takes a state map that may contain normalized queries and a query ID. Returns the stored query or nil."],"^3","~$fulcro.client.primitives/denormalize-query","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",24,"^71",["^5Y",[["^7?","^7@"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",891,"^5H",891,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^7@"]]]]],"^5W","Takes a state map that may contain normalized queries and a query ID. Returns the stored query or nil."],"~$tempid?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2509,"^5G",7,"^5H",2509,"^5I",14,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Return true if x is a tempid, false otherwise","~:tag","~$boolean"],"^3","~$fulcro.client.primitives/tempid?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",14,"^71",["^5Y",[["~$x"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2509,"~:ret-tag","^7D","^5H",2509,"^74",1,"^7C","^7D","^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Return true if x is a tempid, false otherwise"],"~$merge-alternate-union-elements!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",3321,"^5G",7,"^5H",3321,"^5I",38,"^5X",["^5Y",["^6V",["^5Y",[["~$app","~$root-component"]]]]],"^5W","Walks the query and initial state of root-component and merges the alternate sides of unions with initial state into\n  the application state database. See also `merge-alternate-union-elements`, which can be used on a state map and\n  is handy for server-side rendering. This function side-effects on your app, and returns nothing."],"^3","~$fulcro.client.primitives/merge-alternate-union-elements!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",38,"^71",["^5Y",[["^7H","^7I"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",3321,"^5H",3321,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7H","^7I"]]]]],"^5W","Walks the query and initial state of root-component and merges the alternate sides of unions with initial state into\n  the application state database. See also `merge-alternate-union-elements`, which can be used on a state map and\n  is handy for server-side rendering. This function side-effects on your app, and returns nothing."],"~$initial-state",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",45,"^5G",4,"^5H",45,"^5I",17,"~:protocol","~$fulcro.client.primitives/InitialAppState","^5W","Get the initial state to be used for this component in app state. You are responsible for composing these together.","^5X",["^5Y",["^6V",["^5Y",[["~$clz","~$params"]]]]]],"^7L","^7M","^3","~$fulcro.client.primitives/initial-state","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["^7N","^7O"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",44,"^5H",45,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7N","^7O"]]]]],"^5W","Get the initial state to be used for this component in app state. You are responsible for composing these together."],"^6Z",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",42,"^5G",4,"^5H",42,"^5I",9,"^7L","~$fulcro.client.primitives/IQuery","^5W","Return the component's unbound static query","^5X",["^5Y",["^6V",["^5Y",[["~$this"]]]]]],"^7L","^7Q","^3","~$fulcro.client.primitives/query","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",9,"^71",["^5Y",[["^7R"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",41,"^5H",42,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7R"]]]]],"^5W","Return the component's unbound static query"],"~$query-template",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1262,"^5G",8,"^5H",1262,"^5I",22,"~:private",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","~$path"]]]]],"^5W","Given a query and a path into a query return a zipper focused at the location\n   specified by the path. This location can be replaced to customize / alter\n   the query."],"^7U",true,"^3","~$fulcro.client.primitives/query-template","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["^6Z","^7V"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1262,"^5H",1262,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","^7V"]]]]],"^5W","Given a query and a path into a query return a zipper focused at the location\n   specified by the path. This location can be replaced to customize / alter\n   the query."],"~$annotate-mutations",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2339,"^5G",7,"^5H",2339,"^5I",25,"^5X",["^5Y",["^6V",["^5Y",[["~$tx","~$ident"]]]]],"^5W","Given a query expression annotate all mutations by adding a :mutator -> ident\n   entry to the metadata of each mutation expression in the query."],"^3","~$fulcro.client.primitives/annotate-mutations","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",25,"^71",["^5Y",[["^7Y","^7Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2339,"^5H",2339,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7Y","^7Z"]]]]],"^5W","Given a query expression annotate all mutations by adding a :mutator -> ident\n   entry to the metadata of each mutation expression in the query."],"~$move-to-key",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1252,"^5G",8,"^5H",1252,"^5I",19,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$loc","~$k"]]]]],"^5W","Move from the current zipper location to the specified key. loc must be a\n   hash map node."],"^7U",true,"^3","~$fulcro.client.primitives/move-to-key","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",19,"^71",["^5Y",[["^81","~$k"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1252,"^5H",1252,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^81","~$k"]]]]],"^5W","Move from the current zipper location to the specified key. loc must be a\n   hash map node."],"~$sweep-merge",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1660,"^5G",7,"^5H",1660,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["~$target","~$source"]]]]],"^5W","Do a recursive merge of source into target, but remove any target data that is marked as missing in the response. The\n  missing marker is generated in the source when something has been asked for in the query, but had no value in the\n  response. This allows us to correctly remove 'empty' data from the database without accidentally removing something\n  that may still exist on the server (in truth we don't know its status, since it wasn't asked for, but we leave\n  it as our 'best guess')"],"^3","~$fulcro.client.primitives/sweep-merge","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["^84","^85"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1660,"^5H",1660,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^84","^85"]]]]],"^5W","Do a recursive merge of source into target, but remove any target data that is marked as missing in the response. The\n  missing marker is generated in the source when something has been asked for in the query, but had no value in the\n  response. This allows us to correctly remove 'empty' data from the database without accidentally removing something\n  that may still exist on the server (in truth we don't know its status, since it wasn't asked for, but we leave\n  it as our 'best guess')"],"~$is-factory?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",906,"^5G",7,"^5H",906,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["~$class-or-factory"]]]]]],"^3","~$fulcro.client.primitives/is-factory?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["^88"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",906,"^5H",906,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^88"]]]]]],"~$normalize-query",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",978,"^5G",7,"^5H",978,"^5I",22,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^6Z"]]]]],"^5W","Given a state map and a query, returns a state map with the query normalized into the database. Query fragments\n  that already appear in the state will not be added. "],"^3","~$fulcro.client.primitives/normalize-query","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["^7?","^6Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",978,"^5H",978,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^6Z"]]]]],"^5W","Given a state map and a query, returns a state map with the query normalized into the database. Query fragments\n  that already appear in the state will not be added. "],"~$collect-statics",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",153,"^5G",7,"^5H",153,"^5I",22,"^5X",["^5Y",["^6V",["^5Y",[["~$dt"]]]]],"^5W","Collect the static declarations from the defui."],"^3","~$fulcro.client.primitives/collect-statics","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["^8="]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",153,"^5H",153,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8="]]]]],"^5W","Collect the static declarations from the defui."],"~$Ident",["^ ","^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",38,"^5G",14,"^5H",38,"^5I",19,"^5W",null,"~:protocol-symbol",true,"~:jsdoc",["^5Y",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","^7Z",[["^7R","~$props"]]]]],"^8@",true,"^3","~$fulcro.client.primitives/Ident","^5E","fulcro/client/primitives.cljc","^5I",19,"^5G",1,"^5F",38,"^8B",["^ ","^8C",["^ ","^7Z",[["^7R","^8D"]]]],"~:info",null,"^5H",38,"^7C","~$any","~:impls",["^5P",[]],"^5W",null,"^8A",["^5Y",["@interface"]]],"~$get-rendered-state",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2623,"^5G",7,"^5H",2623,"^5I",25,"^5X",["^5Y",["^6V",["^5Y",[["~$component"],["^8J","~$k-or-ks"]]]]],"^5W","Get the rendered state of component. fulcro.client.primitives/get-state always returns the\n   up-to-date state.","^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^8J"],["^8J","^8K"]]],"^5X",["^5Y",[["^8J"],["^8J","^8K"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/get-rendered-state","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",25,"^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^8J"],["^8J","^8K"]]],"^5X",["^5Y",[["^8J"],["^8J","^8K"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^8J"],["^8J","^8K"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2623,"^5H",2623,"^74",2,"^75",true,"^5X",["^5Y",[["^8J"],["^8J","^8K"]]],"^5W","Get the rendered state of component. fulcro.client.primitives/get-state always returns the\n   up-to-date state."],"~$get-basis-time",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",145,"^5G",7,"^5H",145,"^5I",21,"^5X",["^5Y",["^6V",["^5Y",[["^8D"]]]]],"^5W","Returns the basis time from the given props, or ::unset if not available."],"^3","~$fulcro.client.primitives/get-basis-time","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",21,"^71",["^5Y",[["^8D"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",145,"^5H",145,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8D"]]]]],"^5W","Returns the basis time from the given props, or ::unset if not available."],"~$react-type",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",622,"^5G",10,"^5H",622,"^5I",20,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Returns the component type, regardless of whether the component has been\n      mounted"],"^3","~$fulcro.client.primitives/react-type","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",20,"^71",["^5Y",[["~$x"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",4,"^5F",622,"^5H",622,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Returns the component type, regardless of whether the component has been\n      mounted"],"~$merge!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1772,"^5G",7,"^5H",1772,"^5I",13,"^5X",["^5Y",["^6V",["^5Y",[["^6W","~$data-tree"],["^6W","^8R","^6Z"],["^6W","^8R","^6Z","~$remote"]]]]],"^5W","Merge an arbitrary data-tree that conforms to the shape of the given query.\n\n  query - A query, derived from defui components, that can be used to normalized a tree of data.\n  data-tree - A tree of data that matches the nested shape of query\n  remote - No longer used. May be passed, but is ignored.","^7:",["^ ","^70",false,"^74",4,"^71",["^5Y",[["^6W","^8R"],["^6W","^8R","^6Z"],["^6W","^8R","^6Z","^8S"]]],"^5X",["^5Y",[["^6W","^8R"],["^6W","^8R","^6Z"],["^6W","^8R","^6Z","^8S"]]],"^73",["^5Y",[null,null,null]]]],"^3","~$fulcro.client.primitives/merge!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",13,"^7:",["^ ","^70",false,"^74",4,"^71",["^5Y",[["^6W","^8R"],["^6W","^8R","^6Z"],["^6W","^8R","^6Z","^8S"]]],"^5X",["^5Y",[["^6W","^8R"],["^6W","^8R","^6Z"],["^6W","^8R","^6Z","^8S"]]],"^73",["^5Y",[null,null,null]]],"^71",["^5Y",[["^6W","^8R"],["^6W","^8R","^6Z"],["^6W","^8R","^6Z","^8S"]]],"^72",null,"^73",["^5Y",[null,null,null]],"^5G",1,"^5F",1772,"^5H",1772,"^74",4,"^75",true,"^5X",["^5Y",[["^6W","^8R"],["^6W","^8R","^6Z"],["^6W","^8R","^6Z","^8S"]]],"^5W","Merge an arbitrary data-tree that conforms to the shape of the given query.\n\n  query - A query, derived from defui components, that can be used to normalized a tree of data.\n  data-tree - A tree of data that matches the nested shape of query\n  remote - No longer used. May be passed, but is ignored."],"~$compressible-transact!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2393,"^5G",7,"^5H",2393,"^5I",29,"^5X",["^5Y",["^6V",["^5Y",[["~$comp-or-reconciler","^7Y"]]]]],"^5W","Identical to `transact!`, but marks the history edge as compressible. This means that if more than one\n  adjacent history transition edge is compressible, only the more recent of the sequence of them is kept. This\n  is useful for things like form input fields, where storing every keystoke in history is undesirable.\n\n  NOTE: history events that trigger remote interactions are not compressible, since they may be needed for\n  automatic network error recovery handling.."],"^3","~$fulcro.client.primitives/compressible-transact!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",29,"^71",["^5Y",[["^8V","^7Y"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2393,"^5H",2393,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8V","^7Y"]]]]],"^5W","Identical to `transact!`, but marks the history edge as compressible. This means that if more than one\n  adjacent history transition edge is compressible, only the more recent of the sequence of them is kept. This\n  is useful for things like form input fields, where storing every keystoke in history is undesirable.\n\n  NOTE: history events that trigger remote interactions are not compressible, since they may be needed for\n  automatic network error recovery handling.."],"~$gather-sends",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1864,"^5G",7,"^5H",1864,"^5I",19,"^5X",["^5Y",["^6V",["^5Y",[[["^ ","~:keys",["^6H"],"~:as","~$env"],"~$q","~$remotes","~$tx-time"]]]]],"^5W","Given an environment, a query and a set of remotes return a hash map of remotes\n   mapped to the query specific to that remote."],"^3","~$fulcro.client.primitives/gather-sends","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",19,"^71",["^5Y",[["~$p__39543","~$q","^90","^91"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1864,"^5H",1864,"^74",4,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[[["^ ","^8Y",["^6H"],"^8Z","^8["],"~$q","^90","^91"]]]]],"^5W","Given an environment, a query and a set of remotes return a hash map of remotes\n   mapped to the query specific to that remote."],"~$set-query!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2645,"^5G",7,"^5H",2645,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["~$component-or-reconciler","~$ui-factory-or-queryid",["^ ","^8Y",["^6Z","^7O","~$follow-on-reads"],"^8Z","~$opts"]]]]]],"^5W","Set a dynamic query. ALters the query, and then rebuilds internal indexes."],"^3","~$fulcro.client.primitives/set-query!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["^95","^96","~$p__39968"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2645,"^5H",2645,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^95","^96",["^ ","^8Y",["^6Z","^7O","^97"],"^8Z","^98"]]]]]],"^5W","Set a dynamic query. ALters the query, and then rebuilds internal indexes."],"~$rewrite-tempids-in-request-queue",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1468,"^5G",7,"^5H",1468,"^5I",39,"^5X",["^5Y",["^6V",["^5Y",[["~$queue","~$tempid-map"]]]]],"^5W","Rewrite any pending requests in the request queue to account for the fact that a response might have\n  changed ids that are expressed in the mutations of that queue. tempid-map MUST be a map from om\n  tempid to real ids, not idents."],"^3","~$fulcro.client.primitives/rewrite-tempids-in-request-queue","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",39,"^71",["^5Y",[["^9<","^9="]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1468,"^5H",1468,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^9<","^9="]]]]],"^5W","Rewrite any pending requests in the request queue to account for the fact that a response might have\n  changed ids that are expressed in the mutations of that queue. tempid-map MUST be a map from om\n  tempid to real ids, not idents."],"~$ref->any",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1455,"^5G",7,"^5H",1455,"^5I",15,"^5X",["^5Y",["^6V",["^5Y",[["~$x","~$ref"]]]]],"^5W","Get any component from the indexer that matches the ref."],"^3","~$fulcro.client.primitives/ref->any","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^71",["^5Y",[["~$x","^9@"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1455,"^5H",1455,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x","^9@"]]]]],"^5W","Get any component from the indexer that matches the ref."],"~$focus-subquery-union*",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1174,"^5G",8,"^5H",1174,"^5I",29,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$query-ast","~$sub-ast"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/focus-subquery-union*","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",29,"^71",["^5Y",[["^9C","^9D"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1174,"^5H",1174,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^9C","^9D"]]]]]],"~$reshape-map",["^ ","^3","~$fulcro.client.primitives/reshape-map","^5E","fulcro/client/primitives.cljc","^5F",266,"^5G",3,"^5H",266,"^5I",19,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",266,"^5G",8,"^5H",266,"^5I",19],"^7C","~$cljs.core/IMap"],"^8D",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",688,"^5G",10,"^5H",688,"^5I",15,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Return a components props."],"^3","~$fulcro.client.primitives/props","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^71",["^5Y",[["^8J"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",4,"^5F",688,"^5H",688,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Return a components props."],"~$nf",["^ ","^3","~$fulcro.client.primitives/nf","^5E","fulcro/client/primitives.cljc","^5F",1530,"^5G",1,"^5H",1530,"^5I",8,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1530,"^5G",6,"^5H",1530,"^5I",8],"^7C","~$cljs.core/Keyword"],"~$has-ident?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",56,"^5G",7,"^5H",56,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^7C","^7D"],"^3","~$fulcro.client.primitives/has-ident?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["^8J"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",56,"^7F","^7D","^5H",56,"^74",1,"^7C","^7D","^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]]],"~$expr->key",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1222,"^5G",8,"^5H",1222,"^5I",17,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$expr"]]]]],"^5W","Given a query expression return its key."],"^7U",true,"^3","~$fulcro.client.primitives/expr->key","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["^9P"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1222,"^5H",1222,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^9P"]]]]],"^5W","Given a query expression return its key."],"~$get-history",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",97,"^5G",7,"^5H",97,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","pass-through function for getting history, that enables testing (cannot mock protocols easily)"],"^3","~$fulcro.client.primitives/get-history","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["^6W"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",97,"^5H",97,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","pass-through function for getting history, that enables testing (cannot mock protocols easily)"],"~$union->query",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1548,"^5G",7,"^5H",1548,"^5I",19,"^5X",["^5Y",["^6V",["^5Y",[["~$union-query"]]]]],"^5W","Turn a union query into a query that attempts to encompass all possible things that might be queried"],"^3","~$fulcro.client.primitives/union->query","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",19,"^71",["^5Y",[["^9U"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1548,"^5H",1548,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^9U"]]]]],"^5W","Turn a union query into a query that attempts to encompass all possible things that might be queried"],"~$focus-subquery*",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1187,"^5G",8,"^5H",1187,"^5I",23,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^9C","^9D"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/focus-subquery*","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",23,"^71",["^5Y",[["^9C","^9D"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1187,"^5H",1187,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^9C","^9D"]]]]]],"~$children",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1945,"^5G",7,"^5H",1945,"^5I",15,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Returns the component's children."],"^3","~$fulcro.client.primitives/children","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^71",["^5Y",[["^8J"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1945,"^5H",1945,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Returns the component's children."],"~$fulcro-ui->props",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1902,"^5G",7,"^5H",1902,"^5I",23,"^5X",["^5Y",["^6V",["^5Y",[[["^ ","^8Y",["^6H","^6X"],"^8Z","^8["],"~$c"]]]]],"^5W","Finds props for a given component. Returns ::no-ident if the component has\n  no ident (which prevents localized update). This eliminates the need for\n  path data."],"^3","~$fulcro.client.primitives/fulcro-ui->props","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",23,"^71",["^5Y",[["~$p__39563","~$c"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1902,"^5H",1902,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[[["^ ","^8Y",["^6H","^6X"],"^8Z","^8["],"~$c"]]]]],"^5W","Finds props for a given component. Returns ::no-ident if the component has\n  no ident (which prevents localized update). This eliminates the need for\n  path data."],"~$merge-mutation-joins",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1697,"^5G",7,"^5H",1697,"^5I",27,"^5X",["^5Y",["^6V",["^5Y",[["^6X","^6Z","^8R"]]]]],"^5W","Merge all of the mutations that were joined with a query"],"^3","~$fulcro.client.primitives/merge-mutation-joins","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",27,"^71",["^5Y",[["^6X","^6Z","^8R"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1697,"^5H",1697,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6X","^6Z","^8R"]]]]],"^5W","Merge all of the mutations that were joined with a query"],"~$ptransact!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2710,"^5G",7,"^5H",2710,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["^8V","^7Y"],["^8V","^9@","^7Y"]]]]],"^5W","Like `transact!`, but ensures each call completes (in a full-stack, pessimistic manner) before the next call starts\n  in any way. Note that two calls of this function have no guaranteed relationship to each other. They could end up\n  intermingled at runtime. The only guarantee is that for *a single call* to `ptransact!`, the calls in the given tx will run\n  pessimistically (one at a time) in the order given. Follow-on reads in the given transaction will be repeated after each remote\n  interaction.\n\n  `comp-or-reconciler` a mounted component or reconciler\n  `tx` the tx to run\n  `ref` the ident (ref context) in which to run the transaction (including all deferrals)\n\n  NOTE: `ptransact!` *is* safe to use from within mutations (e.g. for retry behavior).\n  WARNINGS: Mutations that interact with more than one remote *at the same time* will only wait for one of the remotes to finish.\n  Also, mutations that just issue loads should *not* be used. This function defers pessimistic *writes*, not reads.","^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["^8V","^7Y"],["^8V","^9@","^7Y"]]],"^5X",["^5Y",[["^8V","^7Y"],["^8V","^9@","^7Y"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/ptransact!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["^8V","^7Y"],["^8V","^9@","^7Y"]]],"^5X",["^5Y",[["^8V","^7Y"],["^8V","^9@","^7Y"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^8V","^7Y"],["^8V","^9@","^7Y"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2710,"^5H",2710,"^74",3,"^75",true,"^5X",["^5Y",[["^8V","^7Y"],["^8V","^9@","^7Y"]]],"^5W","Like `transact!`, but ensures each call completes (in a full-stack, pessimistic manner) before the next call starts\n  in any way. Note that two calls of this function have no guaranteed relationship to each other. They could end up\n  intermingled at runtime. The only guarantee is that for *a single call* to `ptransact!`, the calls in the given tx will run\n  pessimistically (one at a time) in the order given. Follow-on reads in the given transaction will be repeated after each remote\n  interaction.\n\n  `comp-or-reconciler` a mounted component or reconciler\n  `tx` the tx to run\n  `ref` the ident (ref context) in which to run the transaction (including all deferrals)\n\n  NOTE: `ptransact!` *is* safe to use from within mutations (e.g. for retry behavior).\n  WARNINGS: Mutations that interact with more than one remote *at the same time* will only wait for one of the remotes to finish.\n  Also, mutations that just issue loads should *not* be used. This function defers pessimistic *writes*, not reads."],"~$dedup-components-by-path",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1965,"^5G",7,"^5H",1965,"^5I",31,"^5X",["^5Y",["^6V",["^5Y",[["~$components"]]]]],"^5W","Remove components from the given list by removing those whose paths are encompassed by others. In other words,\n   remove components from the list when there is a parent of that component also in the list."],"^3","~$fulcro.client.primitives/dedup-components-by-path","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",31,"^71",["^5Y",[["^:7"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1965,"^5H",1965,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^:7"]]]]],"^5W","Remove components from the given list by removing those whose paths are encompassed by others. In other words,\n   remove components from the list when there is a parent of that component also in the list."],"~$app-root",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2473,"^5G",7,"^5H",2473,"^5I",15,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","Return the application's root component."],"^3","~$fulcro.client.primitives/app-root","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^71",["^5Y",[["^6W"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2473,"^5H",2473,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","Return the application's root component."],"~$mark-missing",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1553,"^5G",7,"^5H",1553,"^5I",19,"^5X",["^5Y",["^6V",["^5Y",[["~$result","^6Z"]]]]],"^5W","Recursively walk the query and response marking anything that was *asked for* in the query but is *not* in the response as missing.\n  The merge process (which happens later in the plumbing) looks for these markers as indicators to remove any existing\n  data in the database (which has provably disappeared).\n\n  The naive approach to data merging (even recursive) would fail to remove such data.\n\n  Returns the result with missing markers in place (which are then used/removed in a later stage)."],"^3","~$fulcro.client.primitives/mark-missing","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",19,"^71",["^5Y",[["^:<","^6Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1553,"^5H",1553,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^:<","^6Z"]]]]],"^5W","Recursively walk the query and response marking anything that was *asked for* in the query but is *not* in the response as missing.\n  The merge process (which happens later in the plumbing) looks for these markers as indicators to remove any existing\n  data in the database (which has provably disappeared).\n\n  The naive approach to data merging (even recursive) would fail to remove such data.\n\n  Returns the result with missing markers in place (which are then used/removed in a later stage)."],"~$reduce-query-depth",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1295,"^5G",7,"^5H",1295,"^5I",25,"^5X",["^5Y",["^6V",["^5Y",[["~$q","~$k"]]]]],"^5W","Changes a join on key k with depth limit from [:a {:k n}] to [:a {:k (dec n)}]"],"^3","~$fulcro.client.primitives/reduce-query-depth","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",25,"^71",["^5Y",[["~$q","~$k"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1295,"^5H",1295,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$q","~$k"]]]]],"^5W","Changes a join on key k with depth limit from [:a {:k n}] to [:a {:k (dec n)}]"],"~$get-ident",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",724,"^5G",7,"^5H",724,"^5I",16,"^5X",["^5Y",["^6V",["^5Y",[["~$x"],["~$class","^8D"]]]]],"^5W","Get the ident for a mounted component OR using a component class.\n\n  That arity-2 will return the ident using the supplied props map.\n\n  The single-arity version should only be used with a mounted component (e.g. `this` from `render`), and will derive the\n  props that were sent to it most recently.","^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["~$x"],["^:A","^8D"]]],"^5X",["^5Y",[["~$x"],["^:A","^8D"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/get-ident","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["~$x"],["^:A","^8D"]]],"^5X",["^5Y",[["~$x"],["^:A","^8D"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["~$x"],["^:A","^8D"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",724,"^5H",724,"^74",2,"^75",true,"^5X",["^5Y",[["~$x"],["^:A","^8D"]]],"^5W","Get the ident for a mounted component OR using a component class.\n\n  That arity-2 will return the ident using the supplied props map.\n\n  The single-arity version should only be used with a mounted component (e.g. `this` from `render`), and will derive the\n  props that were sent to it most recently."],"~$lifecycle-sigs",["^ ","^3","~$fulcro.client.primitives/lifecycle-sigs","^5E","fulcro/client/primitives.cljc","^5F",190,"^5G",1,"^5H",190,"^5I",20,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",190,"^5G",6,"^5H",190,"^5I",20],"^7C","^9H"],"~$focus-subquery",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1208,"^5G",7,"^5H",1208,"^5I",21,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","~$sub-query"]]]]],"^5W","Given a query, focus it along the specified query expression.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n    => [{:foo [:bar]} :woz]"],"^3","~$fulcro.client.primitives/focus-subquery","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",21,"^71",["^5Y",[["^6Z","^:F"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1208,"^5H",1208,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","^:F"]]]]],"^5W","Given a query, focus it along the specified query expression.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [{:foo [:bar]} :woz])\n    => [{:foo [:bar]} :woz]"],"~$ast->query",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2489,"^5G",7,"^5H",2489,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["^9C"]]]]]],"^3","~$fulcro.client.primitives/ast->query","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["^9C"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2489,"^5H",2489,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^9C"]]]]]],"~$mappable-ident?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1313,"^5G",8,"^5H",1313,"^5I",23,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^78","^7Z"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/mappable-ident?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",23,"^71",["^5Y",[["^78","^7Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1313,"^5H",1313,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^78","^7Z"]]]]]],"~$*blindly-render*",["^ ","^3","~$fulcro.client.primitives/*blindly-render*","^5E","fulcro/client/primitives.cljc","^5F",572,"^5G",1,"^5H",572,"^5I",39,"~:dynamic",true,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",572,"^5G",23,"^5H",572,"^5I",39,"^:N",true],"^7C","^7D"],"~$query->ast1",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2484,"^5G",7,"^5H",2484,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["~$query-expr"]]]]],"^5W","Call query->ast and return the first children."],"^3","~$fulcro.client.primitives/query->ast1","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["^:P"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2484,"^5H",2484,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^:P"]]]]],"^5W","Call query->ast and return the first children."],"~$instrument",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2590,"^5G",7,"^5H",2590,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]]],"^3","~$fulcro.client.primitives/instrument","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["^8J"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2590,"^5H",2590,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]]],"~$map->Reconciler",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2039,"^5G",12,"^5H",2039,"^5I",22,"~:internal-ctor",true,"~:factory","~:map","^5X",["^5Y",["^6V",["^5Y",[["~$G__39639"]]]]],"^5W","Factory function for fulcro.client.primitives/Reconciler, taking a map of keywords to field values."],"^3","~$fulcro.client.primitives/map->Reconciler","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["^:X"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^:U",true,"^:V","^:W","^5F",2039,"^5H",2039,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^:X"]]]]],"^5W","Factory function for fulcro.client.primitives/Reconciler, taking a map of keywords to field values."],"~$resolve-tempids",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1461,"^5G",7,"^5H",1461,"^5I",22,"^5X",["^5Y",["^6V",["^5Y",[["^6X","~$tid->rid"]]]]],"^5W","Replaces all tempids in app-state with the ids returned by the server."],"^3","~$fulcro.client.primitives/resolve-tempids","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["^6X","^:["]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1461,"^5H",1461,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6X","^:["]]]]],"^5W","Replaces all tempids in app-state with the ids returned by the server."],"~$react-key",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",676,"^5G",7,"^5H",676,"^5I",16,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Returns the components React key."],"^3","~$fulcro.client.primitives/react-key","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^71",["^5Y",[["^8J"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",676,"^5H",676,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Returns the components React key."],"~$set-state!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2412,"^5G",10,"^5H",2412,"^5I",20,"^5X",["^5Y",["^6V",["^5Y",[["^8J","~$new-state","~$callback"],["^8J","^;4"]]]]],"^5W","Shallow merge new-state into the state of this component. This is asynchronous and will NOT be reflected by\n     `get-state` immediately, since the underlying React setState and will trigger an refresh\n     according to React rules (see React dos for the version you're using).\n\n     This function manages a cljs map within React props, and does the shallow merge by key, so setting state:\n\n     {:x 1}\n\n     against an existing state of {:y 2} will yield:\n\n     {:x 1 :y 2}\n\n     The callback is as described in the React docs (it is invoked after the state is updated).\n\n     If you want to control the update function itself, use `update-state!`.\n\n     If you're wanting low-level js interop to affect low-level js props: use React's `setState`.","^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["^8J","^;4","^;5"],["^8J","^;4"]]],"^5X",["^5Y",[["^8J","^;4","^;5"],["^8J","^;4"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/set-state!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",20,"^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["^8J","^;4","^;5"],["^8J","^;4"]]],"^5X",["^5Y",[["^8J","^;4","^;5"],["^8J","^;4"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^8J","^;4","^;5"],["^8J","^;4"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",4,"^5F",2412,"^5H",2412,"^74",3,"^75",true,"^5X",["^5Y",[["^8J","^;4","^;5"],["^8J","^;4"]]],"^5W","Shallow merge new-state into the state of this component. This is asynchronous and will NOT be reflected by\n     `get-state` immediately, since the underlying React setState and will trigger an refresh\n     according to React rules (see React dos for the version you're using).\n\n     This function manages a cljs map within React props, and does the shallow merge by key, so setting state:\n\n     {:x 1}\n\n     against an existing state of {:y 2} will yield:\n\n     {:x 1 :y 2}\n\n     The callback is as described in the React docs (it is invoked after the state is updated).\n\n     If you want to control the update function itself, use `update-state!`.\n\n     If you're wanting low-level js interop to affect low-level js props: use React's `setState`."],"~$tree->db",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1112,"^5G",7,"^5H",1112,"^5I",15,"^5X",["^5Y",["^6V",["^5Y",[["~$x","^77"],["~$x","^77","~$merge-idents"]]]]],"^5W","Given a component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-idents\n   option is true, will return these tables in the result instead of as metadata.","^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["~$x","^77"],["~$x","^77","^;8"]]],"^5X",["^5Y",[["~$x","^77"],["~$x","^77","^;8"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/tree->db","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["~$x","^77"],["~$x","^77","^;8"]]],"^5X",["^5Y",[["~$x","^77"],["~$x","^77","^;8"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["~$x","^77"],["~$x","^77","^;8"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1112,"^5H",1112,"^74",3,"^75",true,"^5X",["^5Y",[["~$x","^77"],["~$x","^77","^;8"]]],"^5W","Given a component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-idents\n   option is true, will return these tables in the result instead of as metadata."],"~$some-hasquery?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",715,"^5G",7,"^5H",715,"^5I",21,"^5X",["^5Y",["^6V",["^5Y",[["~$c"]]]]],"^5W","Returns true if the given component or one of its parents has a query."],"^3","~$fulcro.client.primitives/some-hasquery?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",21,"^71",["^5Y",[["~$c"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",715,"^5H",715,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$c"]]]]],"^5W","Returns true if the given component or one of its parents has a query."],"~$queue-render!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1880,"^5G",11,"^5H",1880,"^5I",24,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$f"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/queue-render!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",24,"^71",["^5Y",[["~$f"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",4,"^5F",1880,"^5H",1880,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$f"]]]]]],"~$to-env",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1860,"^5G",8,"^5H",1860,"^5I",14,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/to-env","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",14,"^71",["^5Y",[["~$x"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1860,"^5H",1860,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]]],"~$parent",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",662,"^5G",8,"^5H",662,"^5I",14,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Returns the parent component."],"^7U",true,"^3","~$fulcro.client.primitives/parent","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",14,"^71",["^5Y",[["^8J"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",662,"^5H",662,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Returns the parent component."],"~$replace-and-validate-fn",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2768,"^5G",8,"^5H",2768,"^5I",31,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$sym","~$external-args","~$user-arity","~$fn-form"],["^;C","^;D","^;E","^;F","~$user-known-sym"]]]]],"^5W","Replace the first sym in a list (the function name) with the given symbol.\n\n  sym - The symbol that the lambda should have\n  external-args - A sequence of argmuments that the user should not include, but that you want to be inserted in the external-args by this function.\n  user-arity - The number of external-args the user should supply (resulting user-arity is (count external-args) + user-arity).\n  fn-form - The form to rewrite\n  sym - The symbol to report in the error message (in case the rewrite uses a different target that the user knows).","^7:",["^ ","^70",false,"^74",5,"^71",["^5Y",[["^;C","^;D","^;E","^;F"],["^;C","^;D","^;E","^;F","^;G"]]],"^5X",["^5Y",[["^;C","^;D","^;E","^;F"],["^;C","^;D","^;E","^;F","^;G"]]],"^73",["^5Y",[null,null]]]],"^7U",true,"^3","~$fulcro.client.primitives/replace-and-validate-fn","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",31,"^7:",["^ ","^70",false,"^74",5,"^71",["^5Y",[["^;C","^;D","^;E","^;F"],["^;C","^;D","^;E","^;F","^;G"]]],"^5X",["^5Y",[["^;C","^;D","^;E","^;F"],["^;C","^;D","^;E","^;F","^;G"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^;C","^;D","^;E","^;F"],["^;C","^;D","^;E","^;F","^;G"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2768,"^5H",2768,"^74",5,"^75",true,"^5X",["^5Y",[["^;C","^;D","^;E","^;F"],["^;C","^;D","^;E","^;F","^;G"]]],"^5W","Replace the first sym in a list (the function name) with the given symbol.\n\n  sym - The symbol that the lambda should have\n  external-args - A sequence of argmuments that the user should not include, but that you want to be inserted in the external-args by this function.\n  user-arity - The number of external-args the user should supply (resulting user-arity is (count external-args) + user-arity).\n  fn-form - The form to rewrite\n  sym - The symbol to report in the error message (in case the rewrite uses a different target that the user knows)."],"~$normalize-query-elements",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",951,"^5G",7,"^5H",951,"^5I",31,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^6Z"]]]]],"^5W","Determines if there are query elements in the present query that need to be normalized as well. If so, it does so.\n  Returns the new state map."],"^3","~$fulcro.client.primitives/normalize-query-elements","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",31,"^71",["^5Y",[["^7?","^6Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",951,"^5H",951,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^6Z"]]]]],"^5W","Determines if there are query elements in the present query that need to be normalized as well. If so, it does so.\n  Returns the new state map."],"~$add-basis-time*",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",103,"^5G",7,"^5H",103,"^5I",22,"^5X",["^5Y",["^6V",["^5Y",[[["^ ","^8Y",["^9Y"]],"^8D","~$time"]]]]]],"^3","~$fulcro.client.primitives/add-basis-time*","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["~$p__37713","^8D","^;L"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",103,"^5H",103,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[[["^ ","^8Y",["^9Y"]],"^8D","^;L"]]]]]],"~$deep-merge",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",945,"^5G",7,"^5H",945,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["~$&","~$xs"]]]]],"^7:",["^ ","^70",true,"^74",0,"^71",[["^5Y",["^;P"]]],"^5X",["^5Y",[["~$&","^;P"]]],"^73",["^5Y",[null]]]],"^3","~$fulcro.client.primitives/deep-merge","^70",true,"^5E","fulcro/client/primitives.cljc","^5I",17,"^7:",["^ ","^70",true,"^74",0,"^71",[["^5Y",["^;P"]]],"^5X",["^5Y",[["~$&","^;P"]]],"^73",["^5Y",[null]]],"^71",[["^5Y",["^;P"]]],"^72",null,"^73",["^5Y",[null]],"^5G",1,"^5F",945,"^5H",945,"^74",0,"^75",true,"^5X",["^5Y",[["~$&","^;P"]]]],"^5S",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1292,"^5G",8,"^5H",1292,"^5I",15,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$template","~$new-query"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/replace","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^71",["^5Y",[["^;R","^;S"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1292,"^5H",1292,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^;R","^;S"]]]]]],"~$computed",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1920,"^5G",7,"^5H",1920,"^5I",15,"^5X",["^5Y",["^6V",["^5Y",[["^8D","~$computed-map"]]]]],"^5W","Add computed properties to props. Note will replace any pre-existing\n   computed properties."],"^3","~$fulcro.client.primitives/computed","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^71",["^5Y",[["^8D","^;V"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1920,"^5H",1920,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8D","^;V"]]]]],"^5W","Add computed properties to props. Note will replace any pre-existing\n   computed properties."],"~$integrate-ident",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",3178,"^5G",7,"^5H",3178,"^5I",22,"^5X",["^5Y",["^6V",["^5Y",[["^6X","^7Z","~$&","~$named-parameters"]]]]],"^5W","DEPRECATED: Use fulcro.client.mutations/integrate-ident* in your mutations instead.","^7:",["^ ","^70",true,"^74",2,"^71",[["^5Y",["^6X","^7Z","^;Y"]]],"^5X",["^5Y",[["^6X","^7Z","~$&","^;Y"]]],"^73",["^5Y",[null]]]],"^3","~$fulcro.client.primitives/integrate-ident","^70",true,"^5E","fulcro/client/primitives.cljc","^5I",22,"^7:",["^ ","^70",true,"^74",2,"^71",[["^5Y",["^6X","^7Z","^;Y"]]],"^5X",["^5Y",[["^6X","^7Z","~$&","^;Y"]]],"^73",["^5Y",[null]]],"^71",[["^5Y",["^6X","^7Z","^;Y"]]],"^72",null,"^73",["^5Y",[null]],"^5G",1,"^5F",3178,"^5H",3178,"^74",2,"^75",true,"^5X",["^5Y",[["^6X","^7Z","~$&","^;Y"]]],"^5W","DEPRECATED: Use fulcro.client.mutations/integrate-ident* in your mutations instead."],"~$->Indexer",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1796,"^5G",12,"^5H",1796,"^5I",19,"^:U",true,"^:V","~:positional","^5X",["^5Y",["^6V",["^5Y",[["~$indexes"]]]]],"^5W","Positional factory function for fulcro.client.primitives/Indexer."],"^3","~$fulcro.client.primitives/->Indexer","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",19,"^71",["^5Y",[["^<1"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^:U",true,"^:V","^<0","^5F",1796,"^5H",1796,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^<1"]]]]],"^5W","Positional factory function for fulcro.client.primitives/Indexer."],"~$focused-join",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1129,"^5G",8,"^5H",1129,"^5I",20,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^9P","~$ks","~$full-expr","~$union-expr"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/focused-join","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",20,"^71",["^5Y",[["^9P","^<4","^<5","^<6"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1129,"^5H",1129,"^74",4,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^9P","^<4","^<5","^<6"]]]]]],"~$is-ui-query-fragment?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1509,"^5G",8,"^5H",1509,"^5I",29,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$kw"]]]]],"^5W","Check the given keyword to see if it is in the :ui namespace."],"^7U",true,"^3","~$fulcro.client.primitives/is-ui-query-fragment?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",29,"^71",["^5Y",[["^<9"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1509,"^5H",1509,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^<9"]]]]],"^5W","Check the given keyword to see if it is in the :ui namespace."],"~$gather-keys",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1009,"^5G",7,"^5H",1009,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["^6Z"]]]]],"^5W","Gather the keys that would be considered part of the refresh set for the given query.\n\n  E.g. [:a {:j [:b]} {:u {:x [:l] :y [:k]}}] ==> #{:a :j :u}"],"^3","~$fulcro.client.primitives/gather-keys","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["^6Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1009,"^5H",1009,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z"]]]]],"^5W","Gather the keys that would be considered part of the refresh set for the given query.\n\n  E.g. [:a {:j [:b]} {:u {:x [:l] :y [:k]}}] ==> #{:a :j :u}"],"~$normalize*",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1027,"^5G",8,"^5H",1027,"^5I",18,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","^77","^78","~$union-seen"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/normalize*","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["^6Z","^77","^78","^<>"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1027,"^5H",1027,"^74",4,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","^77","^78","^<>"]]]]]],"~$integrate-ident!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",3217,"^5G",7,"^5H",3217,"^5I",23,"^5X",["^5Y",["^6V",["^5Y",[["^6X","^7Z","~$&","^;Y"]]]]],"^5W","DEPRECATED: Use fulcro.client.mutations/integrate-ident* in your mutations instead.","^7:",["^ ","^70",true,"^74",2,"^71",[["^5Y",["^6X","^7Z","^;Y"]]],"^5X",["^5Y",[["^6X","^7Z","~$&","^;Y"]]],"^73",["^5Y",[null]]]],"^3","~$fulcro.client.primitives/integrate-ident!","^70",true,"^5E","fulcro/client/primitives.cljc","^5I",23,"^7:",["^ ","^70",true,"^74",2,"^71",[["^5Y",["^6X","^7Z","^;Y"]]],"^5X",["^5Y",[["^6X","^7Z","~$&","^;Y"]]],"^73",["^5Y",[null]]],"^71",[["^5Y",["^6X","^7Z","^;Y"]]],"^72",null,"^73",["^5Y",[null]],"^5G",1,"^5F",3217,"^5H",3217,"^74",2,"^75",true,"^5X",["^5Y",[["^6X","^7Z","~$&","^;Y"]]],"^5W","DEPRECATED: Use fulcro.client.mutations/integrate-ident* in your mutations instead."],"~$class->any",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2604,"^5G",7,"^5H",2604,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["~$x","^:A"]]]]],"^5W","Get any component from the indexer that matches the component class."],"^3","~$fulcro.client.primitives/class->any","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["~$x","^:A"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2604,"^5H",2604,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x","^:A"]]]]],"^5W","Get any component from the indexer that matches the component class."],"~$mounted?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1895,"^5G",7,"^5H",1895,"^5I",15,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Returns true if the component is mounted.","^7C","^7D"],"^3","~$fulcro.client.primitives/mounted?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^71",["^5Y",[["~$x"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1895,"^7F","^7D","^5H",1895,"^74",1,"^7C","^7D","^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Returns true if the component is mounted."],"~$focus-query",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1160,"^5G",7,"^5H",1160,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","^7V"]]]]],"^5W","Given a query, focus it along the specified path.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [:foo :bar])\n    => [{:foo [:bar]}]"],"^3","~$fulcro.client.primitives/focus-query","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["^6Z","^7V"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1160,"^5H",1160,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","^7V"]]]]],"^5W","Given a query, focus it along the specified path.\n\n  Examples:\n    (focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (fulcro.client.primitives/focus-query [{:foo [:bar :baz]} :woz] [:foo :bar])\n    => [{:foo [:bar]}]"],"~$component-merge-query",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",3186,"^5G",7,"^5H",3186,"^5I",28,"^5X",["^5Y",["^6V",["^5Y",[["^8J","~$object-data"]]]]],"^5W","Calculates the query that can be used to pull (or merge) a component with an ident\n  to/from a normalized app database. Requires a tree of data that represents the instance of\n  the component in question (e.g. ident will work on it)"],"^3","~$fulcro.client.primitives/component-merge-query","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",28,"^71",["^5Y",[["^8J","^<I"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",3186,"^5H",3186,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J","^<I"]]]]],"^5W","Calculates the query that can be used to pull (or merge) a component with an ident\n  to/from a normalized app database. Requires a tree of data that represents the instance of\n  the component in question (e.g. ident will work on it)"],"~$merge-alternate-union-elements",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",3328,"^5G",7,"^5H",3328,"^5I",37,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^7I"]]]]],"^5W","Just like merge-alternate-union-elements!, but usable from within mutations and on server-side rendering. Ensures\n  that when a component has initial state it will end up in the state map, even if it isn't currently in the\n  initial state of the union component (which can only point to one at a time)."],"^3","~$fulcro.client.primitives/merge-alternate-union-elements","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",37,"^71",["^5Y",[["^7?","^7I"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",3328,"^5H",3328,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^7I"]]]]],"^5W","Just like merge-alternate-union-elements!, but usable from within mutations and on server-side rendering. Ensures\n  that when a component has initial state it will end up in the state map, even if it isn't currently in the\n  initial state of the union component (which can only point to one at a time)."],"~$fragment",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",780,"^5G",10,"^5H",780,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["~$&","^5Z"]]]]],"^5W","Wraps children in a React.Fragment. Props are optional, like normal DOM elements.","^7:",["^ ","^70",true,"^74",0,"^71",[["^5Y",["^5Z"]]],"^5X",["^5Y",[["~$&","^5Z"]]],"^73",["^5Y",[null]]]],"^3","~$fulcro.client.primitives/fragment","^70",true,"^5E","fulcro/client/primitives.cljc","^5I",18,"^7:",["^ ","^70",true,"^74",0,"^71",[["^5Y",["^5Z"]]],"^5X",["^5Y",[["~$&","^5Z"]]],"^73",["^5Y",[null]]],"^71",[["^5Y",["^5Z"]]],"^72",null,"^73",["^5Y",[null]],"^5G",4,"^5F",780,"^5H",780,"^74",0,"^75",true,"^5X",["^5Y",[["~$&","^5Z"]]],"^5W","Wraps children in a React.Fragment. Props are optional, like normal DOM elements."],"~$*reconciler*",["^ ","^3","~$fulcro.client.primitives/*reconciler*","^5E","fulcro/client/primitives.cljc","^5F",570,"^5G",1,"^5H",570,"^5I",35,"^:N",true,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",570,"^5G",23,"^5H",570,"^5I",35,"^:N",true],"^7C","~$clj-nil"],"~$denormalize*",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1317,"^5G",8,"^5H",1317,"^5I",20,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","^77","^78","^79","~$idents-seen","^<6","~$recurse-key"]]]]],"^5W","Denormalize a data based on query. refs is a data structure which maps idents\n   to their values. map-ident is a function taking a ident to another ident,\n   used during tempid transition. idents-seen is the set of idents encountered,\n   used to limit recursion. union-expr is the current union expression being\n   evaluated. recurse-key is key representing the current recursive query being\n   evaluted."],"^7U",true,"^3","~$fulcro.client.primitives/denormalize*","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",20,"^71",["^5Y",[["^6Z","^77","^78","^79","^<S","^<6","^<T"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1317,"^5H",1317,"^74",7,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","^77","^78","^79","^<S","^<6","^<T"]]]]],"^5W","Denormalize a data based on query. refs is a data structure which maps idents\n   to their values. map-ident is a function taking a ident to another ident,\n   used during tempid transition. idents-seen is the set of idents encountered,\n   used to limit recursion. union-expr is the current union expression being\n   evaluated. recurse-key is key representing the current recursive query being\n   evaluted."],"~$component-name",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",752,"^5G",7,"^5H",752,"^5I",21,"^5X",["^5Y",["^6V",["^5Y",[["^:A"]]]]],"^5W","Returns a string version of the given react component's name."],"^3","~$fulcro.client.primitives/component-name","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",21,"^71",["^5Y",[["^:A"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",752,"^5H",752,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^:A"]]]]],"^5W","Returns a string version of the given react component's name."],"~$IQuery",["^ ","^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",41,"^5G",14,"^5H",41,"^5I",20,"^5W",null,"^8@",true,"^8A",["^5Y",["@interface"]],"^8B",["^ ","^8C",["^ ","^6Z",[["^7R"]]]]],"^8@",true,"^3","^7Q","^5E","fulcro/client/primitives.cljc","^5I",20,"^5G",1,"^5F",41,"^8B",["^ ","^8C",["^ ","^6Z",[["^7R"]]]],"^8F",null,"^5H",41,"^7C","^8G","^8H",["^5P",[]],"^5W",null,"^8A",["^5Y",["@interface"]]],"~$get-computed",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1931,"^5G",7,"^5H",1931,"^5I",19,"^5X",["^5Y",["^6V",["^5Y",[["~$x"],["~$x","^8K"]]]]],"^5W","Return the computed properties on a component or its props.","^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["~$x"],["~$x","^8K"]]],"^5X",["^5Y",[["~$x"],["~$x","^8K"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/get-computed","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",19,"^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["~$x"],["~$x","^8K"]]],"^5X",["^5Y",[["~$x"],["~$x","^8K"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["~$x"],["~$x","^8K"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1931,"^5H",1931,"^74",2,"^75",true,"^5X",["^5Y",[["~$x"],["~$x","^8K"]]],"^5W","Return the computed properties on a component or its props."],"~$get-state",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",698,"^5G",7,"^5H",698,"^5I",16,"^5X",["^5Y",["^6V",["^5Y",[["^8J"],["^8J","^8K"]]]]],"^5W","Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state.","^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^8J"],["^8J","^8K"]]],"^5X",["^5Y",[["^8J"],["^8J","^8K"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/get-state","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^8J"],["^8J","^8K"]]],"^5X",["^5Y",[["^8J"],["^8J","^8K"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^8J"],["^8J","^8K"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",698,"^5H",698,"^74",2,"^75",true,"^5X",["^5Y",[["^8J"],["^8J","^8K"]]],"^5W","Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state."],"~$*parent*",["^ ","^3","~$fulcro.client.primitives/*parent*","^5E","fulcro/client/primitives.cljc","^5F",571,"^5G",1,"^5H",571,"^5I",31,"^:N",true,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",571,"^5G",23,"^5H",571,"^5I",31,"^:N",true],"^7C","^<Q"],"~$has-query?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",65,"^5G",7,"^5H",65,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^7C","^7D"],"^3","~$fulcro.client.primitives/has-query?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["^8J"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",65,"^7F","^7D","^5H",65,"^74",1,"^7C","^7D","^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]]],"~$add-basis-time",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",133,"^5G",7,"^5H",133,"^5I",21,"^5X",["^5Y",["^6V",["^5Y",[["^8D","^;L"],["~$q","^8D","^;L"]]]]],"^5W","Recursively add the given basis time to all of the maps in the props. This is part of the UI refresh optimization\n  algorithm. Children that refresh in isolation could be mis-drawn if a parent subsequently does a re-render without\n  a query (e.g. local state change). The basis times allow us to detect and avoid that.","^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["^8D","^;L"],["~$q","^8D","^;L"]]],"^5X",["^5Y",[["^8D","^;L"],["~$q","^8D","^;L"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/add-basis-time","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",21,"^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["^8D","^;L"],["~$q","^8D","^;L"]]],"^5X",["^5Y",[["^8D","^;L"],["~$q","^8D","^;L"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^8D","^;L"],["~$q","^8D","^;L"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",133,"^5H",133,"^74",3,"^75",true,"^5X",["^5Y",[["^8D","^;L"],["~$q","^8D","^;L"]]],"^5W","Recursively add the given basis time to all of the maps in the props. This is part of the UI refresh optimization\n  algorithm. Children that refresh in isolation could be mis-drawn if a parent subsequently does a re-render without\n  a query (e.g. local state change). The basis times allow us to detect and avoid that."],"~$update-state!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2451,"^5G",9,"^5H",2451,"^5I",22,"^5X",["^5Y",["^6V",["^5Y",[["^8J","~$f"],["^8J","~$f","~$&","^5Z"]]]]],"^5W","Update a component's local state. Similar to Clojure(Script)'s swap!\n\n    This function affects a managed cljs map maintained in React state.  If you want to affect the low-level\n    js state itself use React's own `.setState` on the component.","^7:",["^ ","^70",true,"^74",2,"^71",["^5Y",[["^8J","~$f"]]],"^5X",["^5Y",[["^8J","~$f"],["^8J","~$f","~$&","^5Z"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/update-state!","^70",true,"^5E","fulcro/client/primitives.cljc","^5I",22,"^7:",["^ ","^70",true,"^74",2,"^71",["^5Y",[["^8J","~$f"]]],"^5X",["^5Y",[["^8J","~$f"],["^8J","~$f","~$&","^5Z"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^8J","~$f"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",3,"^5F",2451,"^5H",2451,"^74",2,"^75",true,"^5X",["^5Y",[["^8J","~$f"],["^8J","~$f","~$&","^5Z"]]],"^5W","Update a component's local state. Similar to Clojure(Script)'s swap!\n\n    This function affects a managed cljs map maintained in React state.  If you want to affect the low-level\n    js state itself use React's own `.setState` on the component."],"~$Indexer",["^ ","^3","~$fulcro.client.primitives/Indexer","~:type",true,"^7C","^=:","~:num-fields",1,"~:record",true,"^5E","fulcro/client/primitives.cljc","^5F",1796,"^5G",12],"~$reduce-union-recursion-depth",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1305,"^5G",8,"^5H",1305,"^5I",36,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^<6","~$recursion-key"]]]]],"^5W","Given a union expression decrement each of the query roots by one if it\n   is recursive."],"^7U",true,"^3","~$fulcro.client.primitives/reduce-union-recursion-depth","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",36,"^71",["^5Y",[["^<6","^=?"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1305,"^5H",1305,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^<6","^=?"]]]]],"^5W","Given a union expression decrement each of the query roots by one if it\n   is recursive."],"~$query-zip",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1238,"^5G",8,"^5H",1238,"^5I",17,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$root"]]]]],"^5W","Return a zipper on a query expression."],"^7U",true,"^3","~$fulcro.client.primitives/query-zip","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["^=B"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1238,"^5H",1238,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^=B"]]]]],"^5W","Return a zipper on a query expression."],"^6W",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2199,"^5G",7,"^5H",2199,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[[["^ ","^8Y",["~$id","^6X","~$shared","~$shared-fn","^6H","~$normalize","~$send","~$merge-sends","^90","~$merge-tree","~$merge-ident","~$lifecycle","~$root-render","~$root-unmount","~$migrate","~$render-mode","^:R","~$tx-listen","~$history"],"~:or",["^ ","^=I",["^5Y",["~$fn*",["~$p1__39731#","~$p2__39732#"],["^5Y",["~$merge-with","~$into","^=U","^=V"]]]],"^90",["~:remote"],"^=P","~:normal","^=R",200,"^=L",null,"^=M",["^5Y",["^=T",["~$p1__39733#","~$p2__39734#"],["^5Y",["~$js/ReactDOM.render","^=[","^>0"]]]],"^=N",["^5Y",["^=T",["~$p1__39735#"],["^5Y",["~$js/ReactDOM.unmountComponentAtNode","^>2"]]]]],"^8Z","~$config"]]]]]],"^5W","Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :id           - a unique ID that this reconciler will be known as. Used to resolve global variable usage when more than one app is on a page. If\n                     left unspecified it will default to a random UUID.\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired. The callback should take the response as the\n                     first argument and the the query that was sent as the second\n                     argument.\n     :history      - A positive integer. The number of history steps to keep in memory.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :render-mode  - :normal - fastest, and the default. Components with idents can refresh in isolation.\n                               shouldComponentUpdate returns false if state/data are unchanged. Follow-on reads are\n                               required to refresh non-local concerns.\n                     :keyframe - Every data change runs a root-level query and re-renders from root.\n                                 shouldComponentUpdate is the same as :default. Follow-on reads are *not* needed for\n                                 non-local UI refresh.\n                     :brutal - Every data change runs a root-level query, and re-renders from root. shouldComponentUpdate\n                               always returns true, forcing full React diff. Not really useful for anything but benchmarking.\n     :lifecycle    - A function (fn [component event]) that is called when react components either :mount or :unmount. Useful for debugging tools.\n     :tx-listen    - a function of 2 arguments that will listen to transactions.\n                     The first argument is the parser's env map also containing\n                     the old and new state. The second argument is a history-step (see history). It also contains\n                     a couple of legacy fields for bw compatibility with 1.0."],"^3","~$fulcro.client.primitives/reconciler","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["~$p__39738"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2199,"^5H",2199,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[[["^ ","^8Y",["^=D","^6X","^=E","^=F","^6H","^=G","^=H","^=I","^90","^=J","^=K","^=L","^=M","^=N","^=O","^=P","^:R","^=Q","^=R"],"^=S",["^ ","^=I",["^5Y",["^=T",["^=U","^=V"],["^5Y",["^=W","^=X","^=U","^=V"]]]],"^90",["^=Y"],"^=P","^=Z","^=R",200,"^=L",null,"^=M",["^5Y",["^=T",["^=[","^>0"],["^5Y",["^>1","^=[","^>0"]]]],"^=N",["^5Y",["^=T",["^>2"],["^5Y",["^>3","^>2"]]]]],"^8Z","^>4"]]]]]],"^5W","Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :id           - a unique ID that this reconciler will be known as. Used to resolve global variable usage when more than one app is on a page. If\n                     left unspecified it will default to a random UUID.\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired. The callback should take the response as the\n                     first argument and the the query that was sent as the second\n                     argument.\n     :history      - A positive integer. The number of history steps to keep in memory.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :render-mode  - :normal - fastest, and the default. Components with idents can refresh in isolation.\n                               shouldComponentUpdate returns false if state/data are unchanged. Follow-on reads are\n                               required to refresh non-local concerns.\n                     :keyframe - Every data change runs a root-level query and re-renders from root.\n                                 shouldComponentUpdate is the same as :default. Follow-on reads are *not* needed for\n                                 non-local UI refresh.\n                     :brutal - Every data change runs a root-level query, and re-renders from root. shouldComponentUpdate\n                               always returns true, forcing full React diff. Not really useful for anything but benchmarking.\n     :lifecycle    - A function (fn [component event]) that is called when react components either :mount or :unmount. Useful for debugging tools.\n     :tx-listen    - a function of 2 arguments that will listen to transactions.\n                     The first argument is the parser's env map also containing\n                     the old and new state. The second argument is a history-step (see history). It also contains\n                     a couple of legacy fields for bw compatibility with 1.0."],"~$query-id",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",758,"^5G",7,"^5H",758,"^5I",15,"^5X",["^5Y",["^6V",["^5Y",[["^:A","~$qualifier"]]]]],"^5W","Returns a string ID for the query of the given class with qualifier"],"^3","~$fulcro.client.primitives/query-id","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^71",["^5Y",[["^:A","^>8"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",758,"^5H",758,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^:A","^>8"]]]]],"^5W","Returns a string ID for the query of the given class with qualifier"],"~$strip-ui",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1515,"^5G",7,"^5H",1515,"^5I",15,"^5X",["^5Y",["^6V",["^5Y",[["^6Z"]]]]],"^5W","Returns a new query with fragments that are in the `ui` namespace removed."],"^3","~$fulcro.client.primitives/strip-ui","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^71",["^5Y",[["^6Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1515,"^5H",1515,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z"]]]]],"^5W","Returns a new query with fragments that are in the `ui` namespace removed."],"~$*instrument*",["^ ","^3","~$fulcro.client.primitives/*instrument*","^5E","fulcro/client/primitives.cljc","^5F",574,"^5G",1,"^5H",574,"^5I",35,"^:N",true,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",574,"^5G",23,"^5H",574,"^5I",35,"^:N",true],"^7C","^<Q"],"~$get-initial-state",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",74,"^5G",7,"^5H",74,"^5I",24,"^5X",["^5Y",["^6V",["^5Y",[["^:A","^7O"]]]]],"^5W","Get the initial state of a component. Needed because calling the protocol method from a defui component in clj will not work as expected."],"^3","~$fulcro.client.primitives/get-initial-state","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",24,"^71",["^5Y",[["^:A","^7O"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",74,"^5H",74,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^:A","^7O"]]]]],"^5W","Get the initial state of a component. Needed because calling the protocol method from a defui component in clj will not work as expected."],"~$*shared*",["^ ","^3","~$fulcro.client.primitives/*shared*","^5E","fulcro/client/primitives.cljc","^5F",573,"^5G",1,"^5H",573,"^5I",31,"^:N",true,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",573,"^5G",23,"^5H",573,"^5I",31,"^:N",true],"^7C","^<Q"],"~$defui*",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",498,"^5G",7,"^5H",498,"^5I",13,"^5X",["^5Y",["^6V",["^5Y",[["^66","~$form"],["^66","^67","^8["]]]]],"^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["^66","^>C"],["^66","^67","^8["]]],"^5X",["^5Y",[["^66","^>C"],["^66","^67","^8["]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/defui*","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",13,"^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["^66","^>C"],["^66","^67","^8["]]],"^5X",["^5Y",[["^66","^>C"],["^66","^67","^8["]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^66","^>C"],["^66","^67","^8["]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",498,"^5H",498,"^74",3,"^75",true,"^5X",["^5Y",[["^66","^>C"],["^66","^67","^8["]]]],"~$computed-initial-state?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",84,"^5G",7,"^5H",84,"^5I",30,"^5X",["^5Y",["^6V",["^5Y",[["~$s"]]]]],"^5W","Returns true if the given initial state was computed from a call to get-initial-state."],"^3","~$fulcro.client.primitives/computed-initial-state?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",30,"^71",["^5Y",[["~$s"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",84,"^5H",84,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$s"]]]]],"^5W","Returns true if the given initial state was computed from a call to get-initial-state."],"~$get-raw-react-prop",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",632,"^5G",8,"^5H",632,"^5I",26,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$c","~$k"]]]]],"^5W","PRIVATE: Do not use. GET a RAW react prop"],"^7U",true,"^3","~$fulcro.client.primitives/get-raw-react-prop","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",26,"^71",["^5Y",[["~$c","~$k"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",632,"^5H",632,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$c","~$k"]]]]],"^5W","PRIVATE: Do not use. GET a RAW react prop"],"~$get-indexer",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",646,"^5G",7,"^5H",646,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","PRIVATE: Get the indexer associated with the reconciler."],"^3","~$fulcro.client.primitives/get-indexer","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["^6W"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",646,"^5H",646,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","PRIVATE: Get the indexer associated with the reconciler."],"~$set-query*",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",991,"^5G",7,"^5H",991,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["^7?","~$ui-factory-class-or-queryid",["^ ","^8Y",["^6Z"],"^8Z","^5Z"]]]]]],"^5W","Put a query in app state.\n  NOTE: Indexes must be rebuilt after setting a query, so this function should primarily be used to build\n  up an initial app state."],"^3","~$fulcro.client.primitives/set-query*","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["^7?","^>L","~$p__38931"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",991,"^5H",991,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^>L",["^ ","^8Y",["^6Z"],"^8Z","^5Z"]]]]]],"^5W","Put a query in app state.\n  NOTE: Indexes must be rebuilt after setting a query, so this function should primarily be used to build\n  up an initial app state."],"~$compute-react-key",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",590,"^5G",11,"^5H",590,"^5I",28,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$cl","^8D"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/compute-react-key","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",28,"^71",["^5Y",[["^>P","^8D"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",4,"^5F",590,"^5H",590,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^>P","^8D"]]]]]],"~$*raf*",["^ ","^3","~$fulcro.client.primitives/*raf*","^5E","fulcro/client/primitives.cljc","^5F",569,"^5G",1,"^5H",569,"^5I",28,"^:N",true,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",569,"^5G",23,"^5H",569,"^5I",28,"^:N",true],"^7C","^<Q"],"~$optimal-render",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1983,"^5G",8,"^5H",1983,"^5I",22,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W","~$refresh-queue","~$render-root"]]]]],"^5W","Run an optimal render of the given `refresh-queue` (a list of idents and data query keywords). This function attempts\n   to refresh the minimum number of components according to the UI depth and state. If it cannot do targeted updates then\n   it will call `render-root` to render the entire UI. Other optimizations may apply in render-root."],"^7U",true,"^3","~$fulcro.client.primitives/optimal-render","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["^6W","^>U","^>V"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1983,"^5H",1983,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W","^>U","^>V"]]]]],"^5W","Run an optimal render of the given `refresh-queue` (a list of idents and data query keywords). This function attempts\n   to refresh the minimum number of components according to the UI depth and state. If it cannot do targeted updates then\n   it will call `render-root` to render the entire UI. Other optimizations may apply in render-root."],"~$link-element",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",940,"^5G",7,"^5H",940,"^5I",19,"^5X",["^5Y",["^6V",["^5Y",[["~$element"]]]]]],"^3","~$fulcro.client.primitives/link-element","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",19,"^71",["^5Y",[["^>Y"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",940,"^5H",940,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^>Y"]]]]]],"^6X",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",628,"^5G",8,"^5H",628,"^5I",13,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$c"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/state","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",13,"^71",["^5Y",[["~$c"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",628,"^5H",628,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$c"]]]]]],"~$schedule-render!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1891,"^5G",10,"^5H",1891,"^5I",26,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]]],"^3","~$fulcro.client.primitives/schedule-render!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",26,"^71",["^5Y",[["^6W"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",4,"^5F",1891,"^5H",1891,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]]],"~$react-set-state!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2440,"^5G",7,"^5H",2440,"^5I",23,"^5X",["^5Y",["^6V",["^5Y",[["^8J","^;4"],["^8J","^;4","~$cb"]]]]],"^5W","DEPRECATED: Use set-state! which *is* a React-level primitive now.","^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["^8J","^;4"],["^8J","^;4","^?3"]]],"^5X",["^5Y",[["^8J","^;4"],["^8J","^;4","^?3"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/react-set-state!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",23,"^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["^8J","^;4"],["^8J","^;4","^?3"]]],"^5X",["^5Y",[["^8J","^;4"],["^8J","^;4","^?3"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^8J","^;4"],["^8J","^;4","^?3"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2440,"^5H",2440,"^74",3,"^75",true,"^5X",["^5Y",[["^8J","^;4"],["^8J","^;4","^?3"]]],"^5W","DEPRECATED: Use set-state! which *is* a React-level primitive now."],"~$transact!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2350,"^5G",7,"^5H",2350,"^5I",16,"^5X",["^5Y",["^6V",["^5Y",[["~$x","^7Y"],["~$r","^9@","^7Y"]]]]],"^5W","Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering.\n\n   Example:\n\n     (transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])\n\n    NOTE: transact! is not safe to call from within mutations unless you defer it inside of a setTimeout. This is\n    because otherwise you could potentially nest calls of swap! that will cause unexpected results. In general it\n    the model of Fulcro is such that a call transact! within a mutation is technically just bad design. If you\n    need pessimistic UI control, see ptransact! instead.","^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["~$x","^7Y"],["~$r","^9@","^7Y"]]],"^5X",["^5Y",[["~$x","^7Y"],["~$r","^9@","^7Y"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/transact!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^7:",["^ ","^70",false,"^74",3,"^71",["^5Y",[["~$x","^7Y"],["~$r","^9@","^7Y"]]],"^5X",["^5Y",[["~$x","^7Y"],["~$r","^9@","^7Y"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["~$x","^7Y"],["~$r","^9@","^7Y"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2350,"^5H",2350,"^74",3,"^75",true,"^5X",["^5Y",[["~$x","^7Y"],["~$r","^9@","^7Y"]]],"^5W","Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering.\n\n   Example:\n\n     (transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])\n\n    NOTE: transact! is not safe to call from within mutations unless you defer it inside of a setTimeout. This is\n    because otherwise you could potentially nest calls of swap! that will cause unexpected results. In general it\n    the model of Fulcro is such that a call transact! within a mutation is technically just bad design. If you\n    need pessimistic UI control, see ptransact! instead."],"~$query->ast",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2479,"^5G",7,"^5H",2479,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["^:P"]]]]],"^5W","Given a query expression convert it into an AST."],"^3","~$fulcro.client.primitives/query->ast","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["^:P"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2479,"^5H",2479,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^:P"]]]]],"^5W","Given a query expression convert it into an AST."],"~$schedule-sends!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1874,"^5G",7,"^5H",1874,"^5I",22,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]]],"^3","~$fulcro.client.primitives/schedule-sends!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["^6W"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1874,"^5H",1874,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]]],"~$focus-query*",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1147,"^5G",8,"^5H",1147,"^5I",20,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","^7V","^<6"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/focus-query*","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",20,"^71",["^5Y",[["^6Z","^7V","^<6"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1147,"^5H",1147,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z","^7V","^<6"]]]]]],"~$roots",["^ ","^3","~$fulcro.client.primitives/roots","^5E","fulcro/client/primitives.cljc","^5F",568,"^5G",1,"^5H",568,"^5I",11,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",568,"^5G",6,"^5H",568,"^5I",11],"^7C","^8G"],"~$*depth*",["^ ","^3","~$fulcro.client.primitives/*depth*","^5E","fulcro/client/primitives.cljc","^5F",575,"^5G",1,"^5H",575,"^5I",30,"^:N",true,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",575,"^5G",23,"^5H",575,"^5I",30,"^:N",true],"^7C","~$number"],"~$add-root!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2555,"^5G",7,"^5H",2555,"^5I",16,"^5X",["^5Y",["^6V",["^5Y",[["^6W","~$root-class","^84"],["^6W","^?C","^84","~$options"]]]]],"^5W","Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one.","^7:",["^ ","^70",false,"^74",4,"^71",["^5Y",[["^6W","^?C","^84"],["^6W","^?C","^84","^?D"]]],"^5X",["^5Y",[["^6W","^?C","^84"],["^6W","^?C","^84","^?D"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/add-root!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^7:",["^ ","^70",false,"^74",4,"^71",["^5Y",[["^6W","^?C","^84"],["^6W","^?C","^84","^?D"]]],"^5X",["^5Y",[["^6W","^?C","^84"],["^6W","^?C","^84","^?D"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^6W","^?C","^84"],["^6W","^?C","^84","^?D"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2555,"^5H",2555,"^74",4,"^75",true,"^5X",["^5Y",[["^6W","^?C","^84"],["^6W","^?C","^84","^?D"]]],"^5W","Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one."],"~$reconciler?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",638,"^5G",7,"^5H",638,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Returns true if x is a reconciler.","^7C","^7D"],"^3","~$fulcro.client.primitives/reconciler?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["~$x"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",638,"^7F","^7D","^5H",638,"^74",1,"^7C","^7D","^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Returns true if x is a reconciler."],"~$get-query",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",920,"^5G",7,"^5H",920,"^5I",16,"^5X",["^5Y",["^6V",["^5Y",[["^88"],["^88","^7?"]]]]],"^5W","Get the query for the given class or factory. If called without a state map, then you'll get the declared static\n  query of the class. If a state map is supplied, then the dynamically set queries in that state will result in\n  the current dynamically-set query according to that state.","^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^88"],["^88","^7?"]]],"^5X",["^5Y",[["^88"],["^88","^7?"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/get-query","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^88"],["^88","^7?"]]],"^5X",["^5Y",[["^88"],["^88","^7?"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^88"],["^88","^7?"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",920,"^5H",920,"^74",2,"^75",true,"^5X",["^5Y",[["^88"],["^88","^7?"]]],"^5W","Get the query for the given class or factory. If called without a state map, then you'll get the declared static\n  query of the class. If a state map is supplied, then the dynamically set queries in that state will result in\n  the current dynamically-set query according to that state."],"~$ref->components",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2616,"^5G",7,"^5H",2616,"^5I",22,"^5X",["^5Y",["^6V",["^5Y",[["~$x","^9@"]]]]],"^5W","Return all components for a given ref."],"^3","~$fulcro.client.primitives/ref->components","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["~$x","^9@"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2616,"^5H",2616,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x","^9@"]]]]],"^5W","Return all components for a given ref."],"~$sweep-one",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1636,"^5G",7,"^5H",1636,"^5I",16,"^5X",["^5Y",["^6V",["^5Y",[["~$m"]]]]],"^5W","Remove not-found keys from m (non-recursive)"],"^3","~$fulcro.client.primitives/sweep-one","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^71",["^5Y",[["~$m"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1636,"^5H",1636,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$m"]]]]],"^5W","Remove not-found keys from m (non-recursive)"],"~$->Reconciler",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2039,"^5G",12,"^5H",2039,"^5I",22,"^:U",true,"^:V","^<0","^5X",["^5Y",["^6V",["^5Y",[["^>4","^6X","^=R"]]]]],"^5W","Positional factory function for fulcro.client.primitives/Reconciler."],"^3","~$fulcro.client.primitives/->Reconciler","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["^>4","^6X","^=R"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^:U",true,"^:V","^<0","^5F",2039,"^5H",2039,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^>4","^6X","^=R"]]]]],"^5W","Positional factory function for fulcro.client.primitives/Reconciler."],"~$validate-sig",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",208,"^5G",8,"^5H",208,"^5I",20,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[[["^66","~$sig","^8Z","~$method"]]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/validate-sig","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",20,"^71",["^5Y",[["~$p__37835"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",208,"^5H",208,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[[["^66","^?Q","^8Z","^?R"]]]]]]],"~$get-tempids",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1756,"^5G",7,"^5H",1756,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["~$m"]]]]]],"^3","~$fulcro.client.primitives/get-tempids","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["~$m"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1756,"^5H",1756,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$m"]]]]]],"~$fallback-tx",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1490,"^5G",7,"^5H",1490,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["^7Y","~$resp"]]]]]],"^3","~$fulcro.client.primitives/fallback-tx","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["^7Y","^?X"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1490,"^5H",1490,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7Y","^?X"]]]]]],"~$link-query",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",972,"^5G",7,"^5H",972,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["^6Z"]]]]],"^5W","Find all of the elements (only at the top level) of the given query and replace them\n  with their query ID"],"^3","~$fulcro.client.primitives/link-query","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["^6Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",972,"^5H",972,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z"]]]]],"^5W","Find all of the elements (only at the top level) of the given query and replace them\n  with their query ID"],"~$build-prop->class-index!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1786,"^5G",7,"^5H",1786,"^5I",31,"^5X",["^5Y",["^6V",["^5Y",[["~$prop->classes","^6Z"]]]]],"^5W","Build an index from property to class using the (annotated) query."],"^3","~$fulcro.client.primitives/build-prop->class-index!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",31,"^71",["^5Y",[["^@1","^6Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1786,"^5H",1786,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^@1","^6Z"]]]]],"^5W","Build an index from property to class using the (annotated) query."],"~$Reconciler",["^ ","^3","~$fulcro.client.primitives/Reconciler","^=;",true,"^7C","^@4","^=<",3,"^==",true,"^5E","fulcro/client/primitives.cljc","^5F",2039,"^5G",12],"~$validate-statics",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",180,"^5G",7,"^5H",180,"^5I",23,"^5X",["^5Y",["^6V",["^5Y",[["^8="]]]]]],"^3","~$fulcro.client.primitives/validate-statics","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",23,"^71",["^5Y",[["^8="]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",180,"^5H",180,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8="]]]]]],"~$pessimistic-transaction->transaction",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2662,"^5G",7,"^5H",2662,"^5I",43,"^5X",["^5Y",["^6V",["^5Y",[["^7Y"],["^7Y",["^ ","^8Y",["~$valid-remotes","^8[","^7?"],"^=S",["^ ","^@8",["^5P",["^=Y"]],"^8[",["^ "],"^7?",["^ "]],"^8Z","^?D"]]]]]],"^5W","Converts a sequence of calls as if each call should run in sequence (deferring even the optimistic side until\n  the prior calls have completed in a full-stack manner), and returns a tx that can be submitted via the normal\n  `transact!`.\n\n  The options map can contain:\n  `valid-remotes` is a set of remote names in your application. Defaults to `#{:remote}`\n  `env` is a map that is merged into the deferred transaction's `env`\n\n  WARNING: If a mutation tries to interact with more than one simultaneous remote, the current implementation will wait\n  until the *first* one of them completes (selected in a non-deterministic fashion), not all.","^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^7Y"],["^7Y",["^ ","^8Y",["^@8","^8[","^7?"],"^=S",["^ ","^@8",["^5P",["^=Y"]],"^8[",["^ "],"^7?",["^ "]],"^8Z","^?D"]]]],"^5X",["^5Y",[["^7Y"],["^7Y",["^ ","^8Y",["^@8","^8[","^7?"],"^=S",["^ ","^@8",["^5P",["^=Y"]],"^8[",["^ "],"^7?",["^ "]],"^8Z","^?D"]]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/pessimistic-transaction->transaction","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",43,"^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^7Y"],["^7Y",["^ ","^8Y",["^@8","^8[","^7?"],"^=S",["^ ","^@8",["^5P",["^=Y"]],"^8[",["^ "],"^7?",["^ "]],"^8Z","^?D"]]]],"^5X",["^5Y",[["^7Y"],["^7Y",["^ ","^8Y",["^@8","^8[","^7?"],"^=S",["^ ","^@8",["^5P",["^=Y"]],"^8[",["^ "],"^7?",["^ "]],"^8Z","^?D"]]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^7Y"],["^7Y",["^ ","^8Y",["^@8","^8[","^7?"],"^=S",["^ ","^@8",["^5P",["^=Y"]],"^8[",["^ "],"^7?",["^ "]],"^8Z","^?D"]]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2662,"^5H",2662,"^74",2,"^75",true,"^5X",["^5Y",[["^7Y"],["^7Y",["^ ","^8Y",["^@8","^8[","^7?"],"^=S",["^ ","^@8",["^5P",["^=Y"]],"^8[",["^ "],"^7?",["^ "]],"^8Z","^?D"]]]],"^5W","Converts a sequence of calls as if each call should run in sequence (deferring even the optimistic side until\n  the prior calls have completed in a full-stack manner), and returns a tx that can be submitted via the normal\n  `transact!`.\n\n  The options map can contain:\n  `valid-remotes` is a set of remote names in your application. Defaults to `#{:remote}`\n  `env` is a map that is merged into the deferred transaction's `env`\n\n  WARNING: If a mutation tries to interact with more than one simultaneous remote, the current implementation will wait\n  until the *first* one of them completes (selected in a non-deterministic fashion), not all."],"~$get-query-by-id",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",901,"^5G",7,"^5H",901,"^5I",22,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^:A","~$queryid"]]]]]],"^3","~$fulcro.client.primitives/get-query-by-id","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["^7?","^:A","^@;"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",901,"^5H",901,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^:A","^@;"]]]]]],"~$computed-factory",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",879,"^5G",7,"^5H",879,"^5I",23,"^5X",["^5Y",["^6V",["^5Y",[["^:A"],["^:A","^?D"]]]]],"^5W","Similar to factory, but returns a function with the signature\n  [props computed] instead of default [props & children]. This makes easier to send\n  computed but will not accept children params.","^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^:A"],["^:A","^?D"]]],"^5X",["^5Y",[["^:A"],["^:A","^?D"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/computed-factory","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",23,"^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^:A"],["^:A","^?D"]]],"^5X",["^5Y",[["^:A"],["^:A","^?D"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^:A"],["^:A","^?D"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",879,"^5H",879,"^74",2,"^75",true,"^5X",["^5Y",[["^:A"],["^:A","^?D"]]],"^5W","Similar to factory, but returns a function with the signature\n  [props computed] instead of default [props & children]. This makes easier to send\n  computed but will not accept children params."],"~$transact*",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2292,"^5G",7,"^5H",2292,"^5I",16,"^5X",["^5Y",["^6V",["^5Y",[["^6W","~$c","^9@","^7Y"]]]]],"^5W","Internal implementation detail of transact!. Call that function instead."],"^3","~$fulcro.client.primitives/transact*","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^71",["^5Y",[["^6W","~$c","^9@","^7Y"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2292,"^5H",2292,"^74",4,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W","~$c","^9@","^7Y"]]]]],"^5W","Internal implementation detail of transact!. Call that function instead."],"~$dispatch",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2534,"^5G",7,"^5H",2534,"^5I",15,"^5X",["^5Y",["^6V",["^5Y",[["~$_","^5R","~$_"]]]]],"^5W","Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."],"^3","~$fulcro.client.primitives/dispatch","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",15,"^71",["^5Y",[["~$_","^5R","~$_"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2534,"^5H",2534,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$_","^5R","~$_"]]]]],"^5W","Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."],"~$merge-component!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",3246,"^5G",7,"^5H",3246,"^5I",23,"^5X",["^5Y",["^6V",["^5Y",[["^6W","^8J","^<I","~$&","^;Y"]]]]],"^5W","Normalize and merge a (sub)tree of application state into the application using a known UI component's query and ident.\n\n  This utility function obtains the ident of the incoming object-data using the UI component's ident function. Once obtained,\n  it uses the component's query and ident to normalize the data and place the resulting objects in the correct tables.\n  It is also quite common to want those new objects to be linked into lists in other spot in app state, so this function\n  supports optional named parameters for doing this. These named parameters can be repeated as many times as you like in order\n  to place the ident of the new object into other data structures of app state.\n\n  This function honors the data merge story for Fulcro: attributes that are queried for but do not appear in the\n  data will be removed from the application. This function also uses the initial state for the component as a base\n  for merge if there was no state for the object already in the database.\n\n  This function will also trigger re-renders of components that directly render object merged, as well as any components\n  into which you integrate that data via the named-parameters.\n\n  This function is primarily meant to be used from things like server push and setTimeout/setInterval, where you're outside\n  of the normal mutation story. Do not use this function within abstract mutations.\n\n  - reconciler: A reconciler\n  - component: The class of the component that corresponsds to the data. Must have an ident.\n  - object-data: A map (tree) of data to merge. Will be normalized for you.\n  - named-parameter: Post-processing ident integration steps. see integrate-ident!\n\n  Any keywords that appear in ident integration steps will be added to the re-render queue.\n\n  See also `fulcro.client.primitives/merge!`.\n  ","^7:",["^ ","^70",true,"^74",3,"^71",[["^5Y",["^6W","^8J","^<I","^;Y"]]],"^5X",["^5Y",[["^6W","^8J","^<I","~$&","^;Y"]]],"^73",["^5Y",[null]]]],"^3","~$fulcro.client.primitives/merge-component!","^70",true,"^5E","fulcro/client/primitives.cljc","^5I",23,"^7:",["^ ","^70",true,"^74",3,"^71",[["^5Y",["^6W","^8J","^<I","^;Y"]]],"^5X",["^5Y",[["^6W","^8J","^<I","~$&","^;Y"]]],"^73",["^5Y",[null]]],"^71",[["^5Y",["^6W","^8J","^<I","^;Y"]]],"^72",null,"^73",["^5Y",[null]],"^5G",1,"^5F",3246,"^5H",3246,"^74",3,"^75",true,"^5X",["^5Y",[["^6W","^8J","^<I","~$&","^;Y"]]],"^5W","Normalize and merge a (sub)tree of application state into the application using a known UI component's query and ident.\n\n  This utility function obtains the ident of the incoming object-data using the UI component's ident function. Once obtained,\n  it uses the component's query and ident to normalize the data and place the resulting objects in the correct tables.\n  It is also quite common to want those new objects to be linked into lists in other spot in app state, so this function\n  supports optional named parameters for doing this. These named parameters can be repeated as many times as you like in order\n  to place the ident of the new object into other data structures of app state.\n\n  This function honors the data merge story for Fulcro: attributes that are queried for but do not appear in the\n  data will be removed from the application. This function also uses the initial state for the component as a base\n  for merge if there was no state for the object already in the database.\n\n  This function will also trigger re-renders of components that directly render object merged, as well as any components\n  into which you integrate that data via the named-parameters.\n\n  This function is primarily meant to be used from things like server push and setTimeout/setInterval, where you're outside\n  of the normal mutation story. Do not use this function within abstract mutations.\n\n  - reconciler: A reconciler\n  - component: The class of the component that corresponsds to the data. Must have an ident.\n  - object-data: A map (tree) of data to merge. Will be normalized for you.\n  - named-parameter: Post-processing ident integration steps. see integrate-ident!\n\n  Any keywords that appear in ident integration steps will be added to the re-render queue.\n\n  See also `fulcro.client.primitives/merge!`.\n  "],"~$get-query-id",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",913,"^5G",8,"^5H",913,"^5I",20,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Get the query id that is cached in the component's props."],"^7U",true,"^3","~$fulcro.client.primitives/get-query-id","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",20,"^71",["^5Y",[["^8J"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",913,"^5H",913,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Get the query id that is cached in the component's props."],"~$app-state",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2461,"^5G",7,"^5H",2461,"^5I",16,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."],"^3","~$fulcro.client.primitives/app-state","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^71",["^5Y",[["^6W"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2461,"^5H",2461,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."],"~$sweep",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1646,"^5G",7,"^5H",1646,"^5I",12,"^5X",["^5Y",["^6V",["^5Y",[["~$m"]]]]],"^5W","Remove all of the not-found keys (recursively) from v, stopping at marked leaves (if present)"],"^3","~$fulcro.client.primitives/sweep","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",12,"^71",["^5Y",[["~$m"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1646,"^5H",1646,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$m"]]]]],"^5W","Remove all of the not-found keys (recursively) from v, stopping at marked leaves (if present)"],"~$factory",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",841,"^5G",10,"^5H",841,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["^:A"],["^:A",["^ ","^8Y",["~$validator","~$keyfn","~$instrument?","^>8"],"^=S",["^ ","^@N",true],"^8Z","^98"]]]]]],"^5W","Create a factory constructor from a component class created with\n      defui.","^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^:A"],["^:A",["^ ","^8Y",["^@L","^@M","^@N","^>8"],"^=S",["^ ","^@N",true],"^8Z","^98"]]]],"^5X",["^5Y",[["^:A"],["^:A",["^ ","^8Y",["^@L","^@M","^@N","^>8"],"^=S",["^ ","^@N",true],"^8Z","^98"]]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/factory","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^:A"],["^:A",["^ ","^8Y",["^@L","^@M","^@N","^>8"],"^=S",["^ ","^@N",true],"^8Z","^98"]]]],"^5X",["^5Y",[["^:A"],["^:A",["^ ","^8Y",["^@L","^@M","^@N","^>8"],"^=S",["^ ","^@N",true],"^8Z","^98"]]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^:A"],["^:A",["^ ","^8Y",["^@L","^@M","^@N","^>8"],"^=S",["^ ","^@N",true],"^8Z","^98"]]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",4,"^5F",841,"^5H",841,"^74",2,"^75",true,"^5X",["^5Y",[["^:A"],["^:A",["^ ","^8Y",["^@L","^@M","^@N","^>8"],"^=S",["^ ","^@N",true],"^8Z","^98"]]]],"^5W","Create a factory constructor from a component class created with\n      defui."],"^6H",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2539,"^5G",7,"^5H",2539,"^5I",13,"^5X",["^5Y",["^6V",["^5Y",[[["^ ","^8Y",["~$read","~$mutate"],"^8Z","^98"]]]]]],"^5W","Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult).\n\n   The mutation functions return a map keyed by:\n\n   `:action` - The lambda to run to do the local optimistic version of that mutation\n   any-keyword-matching-a-remote - A boolean true or AST expression of the thing to run on the named remote.\n   :refresh - A vector of namespaced keywords of data that was/will be changed by this mutation\n\n   When the parser runs on mutations it collects the `:refresh` list into the metadata of the results\n   under the :fulcro.client.primitives/refresh key."],"^3","~$fulcro.client.primitives/parser","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",13,"^71",["^5Y",[["~$p__39917"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2539,"^5H",2539,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[[["^ ","^8Y",["^@P","^@Q"],"^8Z","^98"]]]]]],"^5W","Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult).\n\n   The mutation functions return a map keyed by:\n\n   `:action` - The lambda to run to do the local optimistic version of that mutation\n   any-keyword-matching-a-remote - A boolean true or AST expression of the thing to run on the named remote.\n   :refresh - A vector of namespaced keywords of data that was/will be changed by this mutation\n\n   When the parser runs on mutations it collects the `:refresh` list into the metadata of the results\n   under the :fulcro.client.primitives/refresh key."],"~$merge-pending-state!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2596,"^5G",11,"^5H",2596,"^5I",31,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$c"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/merge-pending-state!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",31,"^71",["^5Y",[["~$c"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",4,"^5F",2596,"^5H",2596,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$c"]]]]]],"~$InitialAppState",["^ ","^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",44,"^5G",14,"^5H",44,"^5I",29,"^5W",null,"^8@",true,"^8A",["^5Y",["@interface"]],"^8B",["^ ","^8C",["^ ","^7K",[["^7N","^7O"]]]]],"^8@",true,"^3","^7M","^5E","fulcro/client/primitives.cljc","^5I",29,"^5G",1,"^5F",44,"^8B",["^ ","^8C",["^ ","^7K",[["^7N","^7O"]]]],"^8F",null,"^5H",44,"^7C","^8G","^8H",["^5P",[]],"^5W",null,"^8A",["^5Y",["@interface"]]],"~$force-update",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1953,"^5G",10,"^5H",1953,"^5I",22,"^5X",["^5Y",["^6V",["^5Y",[["~$c","^?3"],["~$c"]]]]],"^5W","An exception-protected React .forceUpdate","^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["~$c","^?3"],["~$c"]]],"^5X",["^5Y",[["~$c","^?3"],["~$c"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/force-update","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["~$c","^?3"],["~$c"]]],"^5X",["^5Y",[["~$c","^?3"],["~$c"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["~$c","^?3"],["~$c"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",4,"^5F",1953,"^5H",1953,"^74",2,"^75",true,"^5X",["^5Y",[["~$c","^?3"],["~$c"]]],"^5W","An exception-protected React .forceUpdate"],"~$class->all",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2610,"^5G",7,"^5H",2610,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["~$x","^:A"]]]]],"^5W","Get any component from the indexer that matches the component class."],"^3","~$fulcro.client.primitives/class->all","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["~$x","^:A"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2610,"^5H",2610,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x","^:A"]]]]],"^5W","Get any component from the indexer that matches the component class."],"~$merge-component",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",3226,"^5G",7,"^5H",3226,"^5I",22,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^8J","~$component-data"]]]]],"^5W","Given a state map of the application database, a component, and a tree of component-data: normalizes\n   the tree of data and merges the component table entries into the state, returning a new state map.\n   Since there is not an implied root, the component itself won't be linked into your graph (though it will\n   remain correctly linked for its own consistency).\n   Therefore, this function is just for dropping normalized things into tables\n   when they themselves have a recursive nature. This function is useful when you want to create a new component instance\n   and put it in the database, but the component instance has recursive normalized state. This is a basically a\n   thin wrapper around `prim/tree->db`.\n\n   See also integrate-ident, integrate-ident!, and merge-component!"],"^3","~$fulcro.client.primitives/merge-component","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",22,"^71",["^5Y",[["^7?","^8J","^A0"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",3226,"^5H",3226,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7?","^8J","^A0"]]]]],"^5W","Given a state map of the application database, a component, and a tree of component-data: normalizes\n   the tree of data and merges the component table entries into the state, returning a new state map.\n   Since there is not an implied root, the component itself won't be linked into your graph (though it will\n   remain correctly linked for its own consistency).\n   Therefore, this function is just for dropping normalized things into tables\n   when they themselves have a recursive nature. This function is useful when you want to create a new component instance\n   and put it in the database, but the component instance has recursive normalized state. This is a basically a\n   thin wrapper around `prim/tree->db`.\n\n   See also integrate-ident, integrate-ident!, and merge-component!"],"~$make-state-map",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2863,"^5G",7,"^5H",2863,"^5I",21,"^5X",["^5Y",["^6V",["^5Y",[["^7K","~$children-by-query-key","^7O"]]]]],"^5W","Build a component's initial state using the defsc initial-state-data from\n  options, the children from options, and the params from the invocation of get-initial-state."],"^3","~$fulcro.client.primitives/make-state-map","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",21,"^71",["^5Y",[["^7K","^A3","^7O"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2863,"^5H",2863,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7K","^A3","^7O"]]]]],"^5W","Build a component's initial state using the defsc initial-state-data from\n  options, the children from options, and the params from the invocation of get-initial-state."],"~$sift-idents",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",652,"^5G",8,"^5H",652,"^5I",19,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Y"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/sift-idents","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",19,"^71",["^5Y",[["^6Y"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",652,"^5H",652,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Y"]]]]]],"~$remove-loads-and-fallbacks",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1480,"^5G",7,"^5H",1480,"^5I",33,"^5X",["^5Y",["^6V",["^5Y",[["^6Z"]]]]],"^5W","Removes all fulcro/load and tx/fallback mutations from the query"],"^3","~$fulcro.client.primitives/remove-loads-and-fallbacks","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",33,"^71",["^5Y",[["^6Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1480,"^5H",1480,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6Z"]]]]],"^5W","Removes all fulcro/load and tx/fallback mutations from the query"],"~$nil-or-map?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2634,"^5G",7,"^5H",2634,"^5I",18,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^7C","^7D"],"^3","~$fulcro.client.primitives/nil-or-map?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",18,"^71",["^5Y",[["~$x"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2634,"^7F","^7D","^5H",2634,"^74",1,"^7C","^7D","^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]]],"~$preprocess-merge",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",3195,"^5G",8,"^5H",3195,"^5I",24,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$state-atom","^8J","^<I"]]]]],"^5W","Does the steps necessary to honor the data merge technique defined by Fulcro with respect\n  to data overwrites in the app database."],"^7U",true,"^3","~$fulcro.client.primitives/preprocess-merge","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",24,"^71",["^5Y",[["^A<","^8J","^<I"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",3195,"^5H",3195,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^A<","^8J","^<I"]]]]],"^5W","Does the steps necessary to honor the data merge technique defined by Fulcro with respect\n  to data overwrites in the app database."],"~$writer",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2528,"^5G",7,"^5H",2528,"^5I",13,"^5X",["^5Y",["^6V",["^5Y",[[],["^98"]]]]],"^5W","Create a transit writer. This writer can handler the tempid type.\n   Can pass transit writer customization opts map.","^7:",["^ ","^70",false,"^74",1,"^71",["^5Y",[[],["^98"]]],"^5X",["^5Y",[[],["^98"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/writer","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",13,"^7:",["^ ","^70",false,"^74",1,"^71",["^5Y",[[],["^98"]]],"^5X",["^5Y",[[],["^98"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[[],["^98"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2528,"^5H",2528,"^74",1,"^75",true,"^5X",["^5Y",[[],["^98"]]],"^5W","Create a transit writer. This writer can handler the tempid type.\n   Can pass transit writer customization opts map."],"~$merge-handler",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1680,"^5G",7,"^5H",1680,"^5I",20,"^5X",["^5Y",["^6V",["^5Y",[["~$mutation-merge","^84","^85"]]]]],"^5W","Handle merging incoming data, but be sure to sweep it of values that are marked missing. Also triggers the given mutation-merge\n  if available."],"^3","~$fulcro.client.primitives/merge-handler","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",20,"^71",["^5Y",[["^AA","^84","^85"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1680,"^5H",1680,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^AA","^84","^85"]]]]],"^5W","Handle merging incoming data, but be sure to sweep it of values that are marked missing. Also triggers the given mutation-merge\n  if available."],"~$merge-novelty",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1735,"^5G",8,"^5H",1735,"^5I",21,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W","^7?","~$result-tree","^6Z","~$tempids"],["^6W","^7?","^AD","^6Z"]]]]],"^7:",["^ ","^70",false,"^74",5,"^71",["^5Y",[["^6W","^7?","^AD","^6Z","^AE"],["^6W","^7?","^AD","^6Z"]]],"^5X",["^5Y",[["^6W","^7?","^AD","^6Z","^AE"],["^6W","^7?","^AD","^6Z"]]],"^73",["^5Y",[null,null]]]],"^7U",true,"^3","~$fulcro.client.primitives/merge-novelty","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",21,"^7:",["^ ","^70",false,"^74",5,"^71",["^5Y",[["^6W","^7?","^AD","^6Z","^AE"],["^6W","^7?","^AD","^6Z"]]],"^5X",["^5Y",[["^6W","^7?","^AD","^6Z","^AE"],["^6W","^7?","^AD","^6Z"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^6W","^7?","^AD","^6Z","^AE"],["^6W","^7?","^AD","^6Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1735,"^5H",1735,"^74",5,"^75",true,"^5X",["^5Y",[["^6W","^7?","^AD","^6Z","^AE"],["^6W","^7?","^AD","^6Z"]]]],"~$get-current-time",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",149,"^5G",7,"^5H",149,"^5I",23,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","get the current basis time from the reconciler. Used instead of calling the protocol method `basis-t` to facilitate testing."],"^3","~$fulcro.client.primitives/get-current-time","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",23,"^71",["^5Y",[["^6W"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",149,"^5H",149,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W"]]]]],"^5W","get the current basis time from the reconciler. Used instead of calling the protocol method `basis-t` to facilitate testing."],"~$leaf?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1539,"^5G",7,"^5H",1539,"^5I",12,"^5X",["^5Y",["^6V",["^5Y",[["^77"]]]]],"^5W","Returns true iff the given data is marked as a leaf in the result (according to the query). Requires pre-marking."],"^3","~$fulcro.client.primitives/leaf?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",12,"^71",["^5Y",[["^77"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1539,"^5H",1539,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^77"]]]]],"^5W","Returns true iff the given data is marked as a leaf in the result (according to the query). Requires pre-marking."],"~$*query-state*",["^ ","^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",911,"^5G",37,"^5H",911,"^5I",50,"^:N",true,"^7U",true],"^7U",true,"^3","~$fulcro.client.primitives/*query-state*","^5E","fulcro/client/primitives.cljc","^5I",50,"^5G",1,"^:N",true,"^5F",911,"^5H",911,"^7C","^9H"],"^;8",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1718,"^5G",8,"^5H",1718,"^5I",20,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$tree","^>4","^78","^6Z"]]]]]],"^7U",true,"^3","~$fulcro.client.primitives/merge-idents","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",20,"^71",["^5Y",[["^AM","^>4","^78","^6Z"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1718,"^5H",1718,"^74",4,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^AM","^>4","^78","^6Z"]]]]]],"~$reader",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2516,"^5G",10,"^5H",2516,"^5I",16,"^5X",["^5Y",["^6V",["^5Y",[[],["^98"]]]]],"^5W","Create a transit reader. This reader can handler the tempid type.\n      Can pass transit reader customization opts map.","^7:",["^ ","^70",false,"^74",1,"^71",["^5Y",[[],["^98"]]],"^5X",["^5Y",[[],["^98"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/reader","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^7:",["^ ","^70",false,"^74",1,"^71",["^5Y",[[],["^98"]]],"^5X",["^5Y",[[],["^98"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[[],["^98"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",4,"^5F",2516,"^5H",2516,"^74",1,"^75",true,"^5X",["^5Y",[[],["^98"]]],"^5W","Create a transit reader. This reader can handler the tempid type.\n      Can pass transit reader customization opts map."],"~$component?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",598,"^5G",7,"^5H",598,"^5I",17,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Returns true if the argument is a component.","^7C","^7D"],"^3","~$fulcro.client.primitives/component?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",17,"^71",["^5Y",[["~$x"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",598,"^7F","^7D","^5H",598,"^74",1,"^7C","^7D","^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Returns true if the argument is a component."],"~$component->state-map",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2468,"^5G",7,"^5H",2468,"^5I",27,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Get the normalized database state as a map. Requires a mounted component instance."],"^3","~$fulcro.client.primitives/component->state-map","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",27,"^71",["^5Y",[["^8J"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2468,"^5H",2468,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","Get the normalized database state as a map. Requires a mounted component instance."],"~$remove-root!",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2570,"^5G",7,"^5H",2570,"^5I",19,"^5X",["^5Y",["^6V",["^5Y",[["^6W","^84"]]]]],"^5W","Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."],"^3","~$fulcro.client.primitives/remove-root!","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",19,"^71",["^5Y",[["^6W","^84"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2570,"^5H",2570,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^6W","^84"]]]]],"^5W","Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."],"^7Z",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",39,"^5G",4,"^5H",39,"^5I",9,"^7L","^8E","^5W","Return the ident for this component","^5X",["^5Y",["^6V",["^5Y",[["^7R","^8D"]]]]]],"^7L","^8E","^3","~$fulcro.client.primitives/ident","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",9,"^71",["^5Y",[["^7R","^8D"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",38,"^5H",39,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^7R","^8D"]]]]],"^5W","Return the ident for this component"],"~$reshape",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",401,"^5G",7,"^5H",401,"^5I",14,"^5X",["^5Y",["^6V",["^5Y",[["^8=",["^ ","^8Y",["^AX","~$defaults"]]]]]]]],"^3","~$fulcro.client.primitives/reshape","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",14,"^71",["^5Y",[["^8=","~$p__38579"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",401,"^5H",401,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8=",["^ ","^8Y",["^AX","^AY"]]]]]]]],"~$react-ref",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2639,"^5G",7,"^5H",2639,"^5I",16,"^5X",["^5Y",["^6V",["^5Y",[["^8J","^66"]]]]],"^5W","Returns the component associated with a component's React ref."],"^3","~$fulcro.client.primitives/react-ref","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^71",["^5Y",[["^8J","^66"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2639,"^5H",2639,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J","^66"]]]]],"^5W","Returns the component associated with a component's React ref."],"~$merge-alternate-unions",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",3292,"^5G",7,"^5H",3292,"^5I",29,"^5X",["^5Y",["^6V",["^5Y",[["~$merge-fn","^7I"]]]]],"^5W","Walks the given query and calls (merge-fn parent-union-component union-child-initial-state) for each non-default element of a union that has initial app state.\n  You probably want to use merge-alternate-union-elements[!] on a state map or app."],"^3","~$fulcro.client.primitives/merge-alternate-unions","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",29,"^71",["^5Y",[["^B3","^7I"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",3292,"^5H",3292,"^74",2,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^B3","^7I"]]]]],"^5W","Walks the given query and calls (merge-fn parent-union-component union-child-initial-state) for each non-default element of a union that has initial app state.\n  You probably want to use merge-alternate-union-elements[!] on a state map or app."],"^6L",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2504,"^5G",7,"^5H",2504,"^5I",13,"^5X",["^5Y",["^6V",["^5Y",[[],["^=D"]]]]],"^5W","Return a temporary id.","^7:",["^ ","^70",false,"^74",1,"^71",["^5Y",[[],["^=D"]]],"^5X",["^5Y",[[],["^=D"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/tempid","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",13,"^7:",["^ ","^70",false,"^74",1,"^71",["^5Y",[[],["^=D"]]],"^5X",["^5Y",[[],["^=D"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[[],["^=D"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2504,"^5H",2504,"^74",1,"^75",true,"^5X",["^5Y",[[],["^=D"]]],"^5W","Return a temporary id."],"~$get-reconciler",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",656,"^5G",7,"^5H",656,"^5I",21,"^5X",["^5Y",["^6V",["^5Y",[["~$c"]]]]]],"^3","~$fulcro.client.primitives/get-reconciler","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",21,"^71",["^5Y",[["~$c"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",656,"^5H",656,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$c"]]]]]],"~$map->Indexer",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1796,"^5G",12,"^5H",1796,"^5I",19,"^:U",true,"^:V","^:W","^5X",["^5Y",["^6V",["^5Y",[["~$G__39477"]]]]],"^5W","Factory function for fulcro.client.primitives/Indexer, taking a map of keywords to field values."],"^3","~$fulcro.client.primitives/map->Indexer","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",19,"^71",["^5Y",[["^B9"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^:U",true,"^:V","^:W","^5F",1796,"^5H",1796,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^B9"]]]]],"^5W","Factory function for fulcro.client.primitives/Indexer, taking a map of keywords to field values."],"~$is-atom?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",3211,"^5G",8,"^5H",3211,"^5I",16,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Returns TRUE when x is an atom."],"^7U",true,"^3","~$fulcro.client.primitives/is-atom?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",16,"^71",["^5Y",[["~$x"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",3211,"^5H",3211,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$x"]]]]],"^5W","Returns TRUE when x is an atom."],"^=E",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",2576,"^5G",7,"^5H",2576,"^5I",13,"^5X",["^5Y",["^6V",["^5Y",[["^8J"],["^8J","^8K"]]]]],"^5W","Return the global shared properties of the root. See :shared and\n   :shared-fn reconciler options.","^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^8J"],["^8J","^8K"]]],"^5X",["^5Y",[["^8J"],["^8J","^8K"]]],"^73",["^5Y",[null,null]]]],"^3","~$fulcro.client.primitives/shared","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",13,"^7:",["^ ","^70",false,"^74",2,"^71",["^5Y",[["^8J"],["^8J","^8K"]]],"^5X",["^5Y",[["^8J"],["^8J","^8K"]]],"^73",["^5Y",[null,null]]],"^71",["^5Y",[["^8J"],["^8J","^8K"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",2576,"^5H",2576,"^74",2,"^75",true,"^5X",["^5Y",[["^8J"],["^8J","^8K"]]],"^5W","Return the global shared properties of the root. See :shared and\n   :shared-fn reconciler options."],"~$depth",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",668,"^5G",7,"^5H",668,"^5I",12,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","PRIVATE: Returns the render depth (a integer) of the component relative to\n   the mount root."],"^3","~$fulcro.client.primitives/depth","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",12,"^71",["^5Y",[["^8J"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",668,"^5H",668,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^5W","PRIVATE: Returns the render depth (a integer) of the component relative to\n   the mount root."],"~$create-element",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",837,"^5G",10,"^5H",837,"^5I",24,"^5X",["^5Y",["^6V",["^5Y",[["^:A","^8D","^9Y"]]]]]],"^3","~$fulcro.client.primitives/create-element","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",24,"^71",["^5Y",[["^:A","^8D","^9Y"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",4,"^5F",837,"^5H",837,"^74",3,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^:A","^8D","^9Y"]]]]]],"~$as-leaf",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",1532,"^5G",7,"^5H",1532,"^5I",14,"^5X",["^5Y",["^6V",["^5Y",[["^77"]]]]],"^5W","Returns data with meta-data marking it as a leaf in the result."],"^3","~$fulcro.client.primitives/as-leaf","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",14,"^71",["^5Y",[["^77"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",1532,"^5H",1532,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^77"]]]]],"^5W","Returns data with meta-data marking it as a leaf in the result."],"~$has-initial-app-state?",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",47,"^5G",7,"^5H",47,"^5I",29,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]],"^7C","^7D"],"^3","~$fulcro.client.primitives/has-initial-app-state?","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",29,"^71",["^5Y",[["^8J"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",47,"^7F","^7D","^5H",47,"^74",1,"^7C","^7D","^75",true,"^5X",["^5Y",["^6V",["^5Y",[["^8J"]]]]]],"~$get-static-query",["^ ","^6U",null,"^5D",["^ ","^5E","fulcro/client/primitives.cljc","^5F",709,"^5G",8,"^5H",709,"^5I",24,"^7U",true,"^5X",["^5Y",["^6V",["^5Y",[["~$c"]]]]],"^5W","Get the statically-declared query of IQuery from a given class."],"^7U",true,"^3","~$fulcro.client.primitives/get-static-query","^70",false,"^5E","fulcro/client/primitives.cljc","^5I",24,"^71",["^5Y",[["~$c"]]],"^72",null,"^73",["^5Y",[null,null]],"^5G",1,"^5F",709,"^5H",709,"^74",1,"^75",true,"^5X",["^5Y",["^6V",["^5Y",[["~$c"]]]]],"^5W","Get the statically-declared query of IQuery from a given class."]],"^6O",["^ ","^5M","^35","^6B","^37","^37","^37","^6D","^3I","^2W","^2W","^3Y","^3Y","^3I","^3I","^5K","^3I","~$s","^35","^35","^35"],"~:cljs.analyzer/constants",["^ ","^6M",["^5P",["~$fulcro.util/mutation?","~$.-cljs$lang$ctorPrWriter","^<1","~:old-state","~$ident__37926__auto__","~$cljs.core/exists?","~:state-map","~$clojure.core/inc","~$fulcro/load","^=Y","~:tempids","~$next-props__37872__auto__","^7B","~$prev-props__37882__auto__","~:normalized","~$-prototype","~$cljs.core/boolean?","~:fulcro.client.primitives/temporary-key","~$Object","~:ret","^9I","~:children","~:keyframe","~$.initLocalState","~:union-key","~$cljs.core/keyword?","~:remote-queue","~:remove","~$js/undefined","~$cljs.core/implements?","~:into","~:pathopt","^B?","~$fulcro.client.data-fetch/fallback","~$.-state","~$cfg__37932__auto__","~$clojure.core/let","~$initLocalState","~$any?","~$next-props__37916__auto__","~$cljs.core/specify!","~$fulcro.client.data-fetch/deferred-transaction","~:instrument?","~$cljs.core/vector?","~$componentWillMount","~:new-state","~$state-changed?__37922__auto__","~:instrument","~$clojure.core/fn","~$..","~:react-key","~$next-state__37875__auto__","~$clojure.core/and","~:read","~:key","~$cljs.core/-write","~:fulcro.client.primitives/tempids","~:computed","~:merge-ident","~:union-entry","~$prev-state","~$next-props__37906__auto__","~:else","~$this__37915__auto__","~$clojure.core/get-in","~:merge-sends","~$fulcro.client.primitives/js","~:call","~$props-changed?__37921__auto__","~$.apply","~$next-props","~:ref","~$indexer__37902__auto__","^:S","~$next-ident__37886__auto__","~:config","~$writer__38687__auto__","~:ui/fetch-state","~:fulcro.client.primitives/queries","^8E","~:queue","~:cljs.spec.alpha/kind-form","~:statics","~:validator","~:sends-queued","~:fulcro.history/tx-time","~:remotes","~:render-mode","~$cljs.spec.alpha/every","~$indexes__37929__auto__","~:queryid","~$st__37901__auto__","~:protocols","^60","~:warn","^3","~:fulcro.history/tx","~$children-changed?__37923__auto__","~$this__38679__auto__","~:fulcro/leaf","~:migrate","~$this__37881__auto__","~$*","~$cljs.core/js-arguments","~:dt","~$-state","~$fulcro.util/ident?","~$cljs.spec.alpha/or","~:fulcro.client.primitives/transaction","~:mutator","~$next-ident__37927__auto__","~:qualifier","~$componentDidUpdate","~$r__37931__auto__","^5E","~:fields","~$clojure.core/not","~:reconciler","^5I","~:static","~$next-state","~:params","~$next-state__37917__auto__","~:valid-remotes","^<P","~$fulcro.client.primitives/-children","~$this__37905__auto__","~:history","~$componentDidCatch","^=;","~:fulcro.client.impl.data-fetch/target","~$prev-state__37910__auto__","~$clojure.core/update-in","~:follow-on-reads","~:last-ident","~:keyfn","~$cljs.spec.alpha/tuple","~$do","~:execute","~$.-initLocalState","~:state","~:lifecycle","~:queued-sends","~:prop->classes","~$fulcro.client.primitives/-prototype","~$cljs.core/map?","~$keyword?","~$indexer__37930__auto__","~$UNSAFE_componentWillMount","~:env","^>=","~$next-children__37918__auto__","~:fulcro.client.primitives/time","~:cljs.spec.alpha/cpred","^7R","~$reconciler__37898__auto__","~$this__37871__auto__","~$prev-props","~$_","^>A","~$goog.object/clone","^:M","~:component","~:defaults","^=Z","~$fulcro.client.primitives/-props","~:fulcro/merge","~$if","^>4","~$lifecycle__37893__auto__","~$clojure.core/if-not","~$%","~:ref->components","~:fulcro.history/db-after","~$getSnapshotBeforeUpdate","~$indexer__37894__auto__","~$clojure.core/disj","~$this__37873__auto__","~$cljs.core/js-obj","~:otherwise","~:queued","~$clojure.core/or","^5G","~:merge-query","~:class->components","~$this__38686__auto__","~:fulcro.client.primitives/no-ident","~$or","~:error/invalid-expression","~$.-prototype","~:fulcro.client.primitives/tables","~:shared-fn","~$this__37908__auto__","~$clojure.core/binding","~:replacement-root-path","~$clojure.core/->","~$this__37913__auto__","~$prev-state__37883__auto__","~$UNSAFE_componentWillUpdate","~$.-cljs$lang$ctorStr","~$goog.object/set","~:got","~$opt__38688__auto__","~:fulcro.client.primitives/ident","~:fulcro.client.impl.parser/data-path","^:V","~:render","~:parser","^8Y","^B=","~$static","~$reconciler__37892__auto__","~:tx","~$next-state__37907__auto__","~$fulcro.client.mutations/merge!","~:next","^5F","~$lifecycle__37899__auto__","^=R","^=T","~$clojure.core/conj","~$field","~:root","~:not-found","~$idxr__37888__auto__","~$fulcro.client.mutations/set-query!","~$ident__37885__auto__","~:id","~$.-cljs$lang$type","~$fulcro.client.impl.protocols/index-component!","~:class","^6X","~$fulcro.client.data-fetch/load","~$this__37897__auto__","~:fulcro.client.primitives/remote","~$clojure.core/when","~$clojure.core/deref","~:kind","~$util/mutation?","~:indexer","~:fulcro.client.primitives/tag","~:fulcro.history/db-before","~$prev-props__37909__auto__","~$cljs.spec.alpha/map-of","~:once","~:root-unmount","~$clojure.core/defn","~$componentWillUnmount","~:expected","~$cljs.core/nil?","~$componentWillReceiveProps","~$fulcro.client.primitives/-constructor","~:ident","~:reshape","~:fulcro.client.primitives/query","~$.-fulcro$isComponent","~$cljs.core/fn","~:dispatch-key","^8F","~:merge-data","~:fulcro.history/client-time","~$fulcro.client.impl.protocols/drop-component!","~$cfg__37900__auto__","~:send","^5H","~:cljs.analyzer/no-resolve","~$p1__37669#","~:shared","~:merge-tree","~$shouldComponentUpdate","~$fulcro.client.data-fetch/get-remotes","~:render-props","~$idxr__37928__auto__","~:error","~:fulcro.client.primitives/not-found","~:fulcro.client.primitives/refresh","~:t","~$prev-props__37924__auto__","~$set!","~:missing","^?@","~$ret__37878__auto__","^7C","~:fulcro.client.impl.data-fetch/type","^AW","~:cljs.spec.alpha/kfn","~$render","~:indexes","~:target","~$.","~$current-props__37920__auto__","^B7","~$next-props__37874__auto__","~:mount","~$fulcro.client.primitives/-displayName","~:root-render","~:fulcro.client.primitives/computed","~:query","~:fulcro.history/network-sends","~$clojure.core/not=","~$this__37891__auto__","~:union","~$clojure.core/dissoc","~$clojure.core/when-not","~$indexes__37890__auto__","~$js/React.Component.prototype","~$clojure.core/nil?","~$cljs.core/this-as","~$componentWillUpdate","~$...","~:unmount","^5W","~$prev-state__37925__auto__","~$tx/fallback","~:fulcro.client.primitives/pessimistic?","^=2","~:brutal","^8A","~$js/React.Component","~:normalize","~:cljs.spec.alpha/conform-all","~$cljs.core/or","^7E","~$info","~:data-tree","~:mutate","~:none","~:unset","~$cljs.core/any?","~$UNSAFE_componentWillReceiveProps","~:join","~$componentDidMount","~$clojure.core/fnil","~$error","~:tx-listen","~:cljs.spec.alpha/describe","~$goog.object/get","~:props","~$snapshot__37884__auto__","~$clojure.core/swap!","~$st__37933__auto__"]],"~:order",["^CQ","^G9","^C2","^FM","^DR","^H7","^GH","^GK","^DQ","^GM","^CC","^DS","^DB","^=T","^GW","^HY","^BI","^G<","^F=","^EI","^G=","^D;","^EO","^I:","^GO","~~$.","^E5","^H>","^D0","^CF","^CI","^DP","^DI","^EV","^F8","^H5","^HR","^BL","^DU","^H1","^DC","^EJ","^DX","^C;","^I?","^BX","^H6","^3","^60","^GE","^8A","^5W","^HN","^DJ","^D1","^HV","^DN","^EZ","^EB","^5E","^5F","^5G","^5H","^5I","^7C","^CZ","^C:","^C0","^F?","^ES","^HL","^GC","^BM","^C5","^C@","^EG","^GJ","^HA","^GN","^E0","^BU","^G4","^FI","^BJ","^F;","^D7","^FL","^CO","^CJ","^FN","^DG","^H3","^H2","^D=","^E>","^CB","^DV","^I<","^G6","^:V","^D3","^DD","^ET","^G3","^F6","~$_","~$*","^G?","^C1","^I5","^F>","^I1","^E=","^BP","^G7","^HS","^C9","^GP","^E2","^EA","^DK","^D8","^H9","^F[","^BQ","^8F","^E9","^BW","^CR","^HW","^GY","^DL","^FZ","^8Y","^FV","^FU","^H[","^=Y","^EF","^F:","^<1","^GX","^FP","^D?","^FD","^F<","^HC","^H0","^D[","^C3","^D:","^EE","^CY","^D>","^GU","^DA","^B[","^HU","^FO","^F7","~:t","^BT","^FA","^CG","^HB","^H=","^C4","^GD","^E7","^>4","^6X","^=R","^I9","^D@","^=Z","^C8","^H4","^DH","^GR","^HE","^G@","^F0","^BK","^CE","^FS","^BY","^DT","^CM","^I0","^E<","^G1","^E4","^EL","^BN","^C[","^G[","^GV","^CA","^GG","^FK","^EW","^F9","^GQ","^F@","^CS"]],"~:flags",["^ ","^6O",["^5P",[]],"^6N",["^5P",[]]],"~:js-deps",["^ "],"~:deps",["^2U","^2W","^2Z","^3F","^3<","^3G","^3H","^3I","^3J","^3K","^37","^3L","^3M","^3N","^3O","^3P","^3Q","^3R","^36","^39","^35","^3S"]],"^60","^3Y","~:ns-specs",["^ ","^CP",["^5Y",["^GB","^7E","^I3"]],"^DS",["^5Y",["^DB",["^5Y",["^=T",["^GW"],["^5Y",["^HY",["^5Y",["^C2","^GW"]],["^5Y",["^BI","^GW"]]]]]],"^G<","^CC"]],"^FM",["^5Y",["^DR","^H7","^GH","^GK","^DQ"]],"^G9","^C2","^GM","^CC","^HT","^BV"],"~:ns-speced-vars",[],"~:compiler-options",["^2S",[["^IF","~:static-fns"],true,["^IF","~:elide-asserts"],false,["^IF","~:optimize-constants"],null,["^IF","~:external-config"],null,["^IF","~:tooling-config"],null,["^IF","~:emit-constants"],null,["^IF","~:infer-externs"],true,["^IF","~:reader-features"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^IF","~:fn-invoke-direct"],null,["^IF","~:source-map"],"/dev/null"]]]