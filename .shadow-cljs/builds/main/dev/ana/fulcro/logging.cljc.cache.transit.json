["^ ","~:output",["^ ","~:js","goog.provide('fulcro.logging');\r\ngoog.require('cljs.core');\r\ngoog.require('clojure.string');\r\ngoog.require('cljs.stacktrace');\r\ngoog.require('goog.log');\r\ngoog.require('goog.object');\r\ngoog.require('goog.debug.Logger.Level');\r\ngoog.require('goog.debug.Console');\r\nfulcro.logging.logging_priority = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"all\",\"all\",892129742),(100),new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),(6),new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),(5),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),(4),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),(3),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),(2),new cljs.core.Keyword(null,\"fatal\",\"fatal\",1874419888),(1),new cljs.core.Keyword(null,\"none\",\"none\",1333468478),(0)], null);\r\n/**\r\n * Returns true if the current logging level indicates that the message level is of interest.\r\n */\r\nfulcro.logging.should_log_QMARK_ = (function fulcro$logging$should_log_QMARK_(current_logging_level,message_level){\r\nvar c = cljs.core.get.cljs$core$IFn$_invoke$arity$3(fulcro.logging.logging_priority,current_logging_level,(4));\r\nvar m = cljs.core.get.cljs$core$IFn$_invoke$arity$3(fulcro.logging.logging_priority,message_level,(4));\r\nreturn (m <= c);\r\n});\r\nif((typeof fulcro !== 'undefined') && (typeof fulcro.logging !== 'undefined') && (typeof fulcro.logging.current_logging_level !== 'undefined')){\r\n} else {\r\nfulcro.logging.current_logging_level = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\r\n}\r\nfulcro.logging.level_map = (function (){var levels = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"all\",\"all\",892129742),new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),new cljs.core.Keyword(null,\"fatal\",\"fatal\",1874419888)], null);\r\nvar glevels = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"ALL\",\"FINE\",\"FINE\",\"INFO\",\"SEVERE\",\"WARNING\",\"SEVERE\"], null);\r\nreturn cljs.core.zipmap(levels,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (levels,glevels){\r\nreturn (function (p1__31601_SHARP_){\r\nreturn goog.debug.Logger.Level.getPredefinedLevel(p1__31601_SHARP_);\r\n});})(levels,glevels))\r\n,glevels));\r\n})();\r\nif((typeof fulcro !== 'undefined') && (typeof fulcro.logging !== 'undefined') && (typeof fulcro.logging.logger !== 'undefined')){\r\n} else {\r\nfulcro.logging.logger = (function (){\r\nif(goog.DEBUG){\r\n(new goog.debug.Console()).setCapturing(true);\r\n} else {\r\n}\r\n\r\nreturn cljs.core.atom.cljs$core$IFn$_invoke$arity$1((function() { \r\nvar fulcro$logging$built_in_logger__delegate = function (p__31619,level,args){\r\nvar map__31620 = p__31619;\r\nvar map__31620__$1 = ((((!((map__31620 == null)))?(((((map__31620.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31620.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31620):map__31620);\r\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31620__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\r\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31620__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\r\nif(cljs.core.truth_(fulcro.logging.should_log_QMARK_(cljs.core.deref(fulcro.logging.current_logging_level),level))){\r\nvar location = [cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__3949__auto__ = file;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn \"?\";\r\n}\r\n})()),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__3949__auto__ = line;\r\nif(cljs.core.truth_(or__3949__auto__)){\r\nreturn or__3949__auto__;\r\n} else {\r\nreturn \"?\";\r\n}\r\n})())].join('');\r\nvar logger = goog.log.getLogger(file);\r\nvar first_exception = cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (logger,location,map__31620,map__31620__$1,file,line){\r\nreturn (function (p1__31613_SHARP_){\r\nreturn (p1__31613_SHARP_ instanceof Error);\r\n});})(logger,location,map__31620,map__31620__$1,file,line))\r\n,args));\r\nvar message = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",args);\r\nif(cljs.core.truth_(logger)){\r\nreturn logger.log(cljs.core.get.cljs$core$IFn$_invoke$arity$3(fulcro.logging.level_map,level,new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fulcro.logging.level_map)),message,first_exception);\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n};\r\nvar fulcro$logging$built_in_logger = function (p__31619,level,var_args){\r\nvar args = null;\r\nif (arguments.length > 2) {\r\nvar G__31666__i = 0, G__31666__a = new Array(arguments.length -  2);\r\nwhile (G__31666__i < G__31666__a.length) {G__31666__a[G__31666__i] = arguments[G__31666__i + 2]; ++G__31666__i;}\r\n  args = new cljs.core.IndexedSeq(G__31666__a,0,null);\r\n} \r\nreturn fulcro$logging$built_in_logger__delegate.call(this,p__31619,level,args);};\r\nfulcro$logging$built_in_logger.cljs$lang$maxFixedArity = 2;\r\nfulcro$logging$built_in_logger.cljs$lang$applyTo = (function (arglist__31669){\r\nvar p__31619 = cljs.core.first(arglist__31669);\r\narglist__31669 = cljs.core.next(arglist__31669);\r\nvar level = cljs.core.first(arglist__31669);\r\nvar args = cljs.core.rest(arglist__31669);\r\nreturn fulcro$logging$built_in_logger__delegate(p__31619,level,args);\r\n});\r\nfulcro$logging$built_in_logger.cljs$core$IFn$_invoke$arity$variadic = fulcro$logging$built_in_logger__delegate;\r\nreturn fulcro$logging$built_in_logger;\r\n})()\r\n);\r\n})()\r\n;\r\n}\r\n/**\r\n * Private implementation for macro output. Use `log` instead.\r\n */\r\nfulcro.logging._log = (function fulcro$logging$_log(var_args){\r\nvar args__4534__auto__ = [];\r\nvar len__4531__auto___31691 = arguments.length;\r\nvar i__4532__auto___31692 = (0);\r\nwhile(true){\r\nif((i__4532__auto___31692 < len__4531__auto___31691)){\r\nargs__4534__auto__.push((arguments[i__4532__auto___31692]));\r\n\r\nvar G__31695 = (i__4532__auto___31692 + (1));\r\ni__4532__auto___31692 = G__31695;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4535__auto__ = ((((2) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((2)),(0),null)):null);\r\nreturn fulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4535__auto__);\r\n});\r\n\r\nfulcro.logging._log.cljs$core$IFn$_invoke$arity$variadic = (function (location,level,things_to_print){\r\nif(cljs.core.truth_(cljs.core.deref(fulcro.logging.logger))){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(fulcro.logging.logger),location,level,things_to_print);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n\r\nfulcro.logging._log.cljs$lang$maxFixedArity = (2);\r\n\r\n/** @this {Function} */\r\nfulcro.logging._log.cljs$lang$applyTo = (function (seq31676){\r\nvar G__31677 = cljs.core.first(seq31676);\r\nvar seq31676__$1 = cljs.core.next(seq31676);\r\nvar G__31678 = cljs.core.first(seq31676__$1);\r\nvar seq31676__$2 = cljs.core.next(seq31676__$1);\r\nvar self__4518__auto__ = this;\r\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31677,G__31678,seq31676__$2);\r\n});\r\n\r\nfulcro.logging.log_STAR_ = (function fulcro$logging$log_STAR_(){\r\nreturn null;\r\n});\r\nfulcro.logging.fline = (function fulcro$logging$fline(and_form){\r\nvar G__31711 = and_form;\r\nvar G__31711__$1 = (((G__31711 == null))?null:cljs.core.meta(G__31711));\r\nif((G__31711__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(G__31711__$1);\r\n}\r\n});\r\nfulcro.logging.set_level_BANG_ = (function fulcro$logging$set_level_BANG_(log_level){\r\n\r\nreturn cljs.core.reset_BANG_(fulcro.logging.current_logging_level,cljs.core.get.cljs$core$IFn$_invoke$arity$3(fulcro.logging.logging_priority,log_level,(2)));\r\n});\r\n/**\r\n * Set the fulcro logging function.\r\n * \r\n *   log-fn - A (fn [{:keys [file line] :as location} level & args] ...)\r\n */\r\nfulcro.logging.set_logger_BANG_ = (function fulcro$logging$set_logger_BANG_(log_fn){\r\nreturn cljs.core.reset_BANG_(fulcro.logging.logger,log_fn);\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Utilities for logging on the client and server.\n\n  This namespace exists so that fulcro libraries have a mechanism to do logging that can be lightweight without\n  pull in any additional dependencies. You can use this logging support, but it is not designed to be great, just\n  lightweight and efficient.\n\n  It is highly recommended that you use a dedicated logging library in production apps, such as timbre. However, if\n  you're writing an add-on for Fulcro it is probably best to use this logging so you give our users a consistent\n  way to deal with Fulcro logging.","~:file","fulcro/logging.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$clojure.stacktrace","~$cljs.stacktrace","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$log",["^ ","~:arglists",["~#list",[["~$logging-level","~$&","~$things-to-include"]]],"^6","Logs to the current global logging function, which can be set in the top-level logger atom.\n\n     If you set the JVM option to something like -Dfulcro.logging=error then this macro will not output\n     any code for logging below that level.\n\n     level - one of :trace, :debug, :info, :warn, :error, or :fatal.\n     things-to-include - Any number of additional things to log. The logging function may give special treatment\n     to certain types (e.g. exceptions).\n\n     See `set-logger!`.","^8",72,"^9",4,"^7","fulcro/logging.cljc","~:name","~$fulcro.logging/log","~:ns","~$fulcro.logging","~:macro",true],"~$system-log-level",["^ ","^H",["^I",[[]]],"^6","Get the current runtime JVM system logging level from fulcro.logging. Works for clj and cljs.","^8",54,"^9",4,"^7","fulcro/logging.cljc","^L","~$fulcro.logging/system-log-level","^N","^O","^P",true],"~$warn",["^ ","^H",["^I",[["~$&","~$args"]]],"^8",114,"^9",1,"^7","fulcro/logging.cljc","^L","~$fulcro.logging/warn","^N","^O","^P",true],"~$trace",["^ ","^H",["^I",[["~$&","^T"]]],"^8",111,"^9",1,"^7","fulcro/logging.cljc","^L","~$fulcro.logging/trace","^N","^O","^P",true],"~$debug",["^ ","^H",["^I",[["~$&","^T"]]],"^8",112,"^9",1,"^7","fulcro/logging.cljc","^L","~$fulcro.logging/debug","^N","^O","^P",true],"~$fatal",["^ ","^H",["^I",[["~$&","^T"]]],"^8",116,"^9",1,"^7","fulcro/logging.cljc","^L","~$fulcro.logging/fatal","^N","^O","^P",true],"~$info",["^ ","^H",["^I",[["~$&","^T"]]],"^8",113,"^9",1,"^7","fulcro/logging.cljc","^L","~$fulcro.logging/info","^N","^O","^P",true],"~$error",["^ ","^H",["^I",[["~$&","^T"]]],"^8",115,"^9",1,"^7","fulcro/logging.cljc","^L","~$fulcro.logging/error","^N","^O","^P",true]],"^L","^O","~:op","^N","~:imports",["^ ","~$Console","~$goog.debug.Console"],"~:requires",["^ ","~$glog","~$goog.log","^?","^@","^17","^17","^@","^@","~$cljs.core","^1;","~$gobj","~$goog.object","~$goog","^1>","~$strace","^@","^1=","^1=","^1:","^1:","~$level","~$goog.debug.Logger.Level","~$str","~$clojure.string","^1C","^1C","^1A","^1A","^16","^17"],"~:seen",["^E",["~:require","~:require-macros"]],"~:uses",null,"^1F",["^ ","^O","^O","^1;","^1;"],"~:form",["^I",["~$ns","^O","Utilities for logging on the client and server.\n\n  This namespace exists so that fulcro libraries have a mechanism to do logging that can be lightweight without\n  pull in any additional dependencies. You can use this logging support, but it is not designed to be great, just\n  lightweight and efficient.\n\n  It is highly recommended that you use a dedicated logging library in production apps, such as timbre. However, if\n  you're writing an add-on for Fulcro it is probably best to use this logging so you give our users a consistent\n  way to deal with Fulcro logging.",["^I",["^1F","^O"]],["^I",["^1E",["^1C","~:as","^1B"],["^?","^1J","^1?"],["^1:","^1J","^19"],["^1=","^1J","^1<"],["^1A","^1J","^1@"]]],["^I",["~:import",["~$goog.debug","^16"]]]]],"~:flags",["^ ","^1F",["^E",[]],"^1E",["^E",[]]],"~:js-deps",["^ "],"~:deps",["^1>","^1;","^1C","^@","^1:","^1=","^1A","^17"]],"^N","^O","~:resource-id",["~:shadow.build.classpath/resource","fulcro/logging.cljc"],"~:compiled-at",1537360506185,"~:resource-name","fulcro/logging.cljc","~:warnings",[],"~:source","(ns fulcro.logging\n  \"Utilities for logging on the client and server.\n\n  This namespace exists so that fulcro libraries have a mechanism to do logging that can be lightweight without\n  pull in any additional dependencies. You can use this logging support, but it is not designed to be great, just\n  lightweight and efficient.\n\n  It is highly recommended that you use a dedicated logging library in production apps, such as timbre. However, if\n  you're writing an add-on for Fulcro it is probably best to use this logging so you give our users a consistent\n  way to deal with Fulcro logging.\"\n  #?(:cljs (:require-macros fulcro.logging))\n  (:require\n    [clojure.string :as str]\n    [clojure.stacktrace :as strace]\n    #?@(:cljs ([goog.log :as glog]\n                [goog.object :as gobj]\n                [goog.debug.Logger.Level :as level])))\n  #?(:cljs (:import [goog.debug Console])))\n\n(def logging-priority {:all 100 :trace 6 :debug 5 :info 4 :warn 3 :error 2 :fatal 1 :none 0})\n\n(defn should-log?\n  \"Returns true if the current logging level indicates that the message level is of interest.\"\n  [current-logging-level message-level]\n  (let [c (get logging-priority current-logging-level 4)\n        m (get logging-priority message-level 4)]\n    (<= m c)))\n\n(defonce ^:private current-logging-level\n  (atom 0))\n\n#?(:cljs\n   (def level-map\n     (let [levels  [:all :trace :debug :info :error :warn :fatal]\n           glevels [\"ALL\" \"FINE\" \"FINE\" \"INFO\" \"SEVERE\" \"WARNING\" \"SEVERE\"]]\n       (zipmap levels (map #(level/getPredefinedLevel %) glevels)))))\n\n(defonce ^:private logger\n  (do\n    #?(:cljs\n       (when ^boolean goog.DEBUG\n         (.setCapturing (Console.) true)))\n    (atom (fn built-in-logger [{:keys [file line]} level & args]\n            (when (should-log? @current-logging-level level)\n              (let [location (str (or file \"?\") \":\" (or line \"?\"))]\n                #?(:cljs (let [logger          (glog/getLogger file)\n                               first-exception (first (filter #(instance? js/Error %) args))\n                               message         (str/join \" \" args)]\n                           (when logger\n                             (.log logger (get level-map level (:info level-map)) message first-exception)))\n                   :clj  (println (str (-> level name str/upper-case) \" [\" location \"] : \" (str/join \" \" args))))))))))\n\n#?(:clj\n   (defmacro system-log-level\n     \"Get the current runtime JVM system logging level from fulcro.logging. Works for clj and cljs.\"\n     []\n     (some->\n       (System/getProperty \"fulcro.logging\")\n       keyword)))\n\n(defn -log\n  \"Private implementation for macro output. Use `log` instead.\"\n  [location level & things-to-print]\n  (when @logger\n    (apply @logger location level things-to-print)))\n\n(defn- log* [])\n\n(defn fline [and-form] (some-> and-form meta :line))\n\n#?(:clj\n   (defmacro log\n     \"Logs to the current global logging function, which can be set in the top-level logger atom.\n\n     If you set the JVM option to something like -Dfulcro.logging=error then this macro will not output\n     any code for logging below that level.\n\n     level - one of :trace, :debug, :info, :warn, :error, or :fatal.\n     things-to-include - Any number of additional things to log. The logging function may give special treatment\n     to certain types (e.g. exceptions).\n\n     See `set-logger!`.\"\n     [logging-level & things-to-include]\n     (let [l            (system-log-level)\n           has-options? (map? logging-level)\n           level        (if has-options? (:level logging-level) logging-level)\n           elide?       (and l (not (should-log? l level)))]\n       (when-not elide?\n         (let [file     (or (some-> &env :ns :name str) (some-> *ns* ns-name str) \"?\")\n               line     (or (and has-options? (:line logging-level)) (fline &form) \"?\")\n               js?      (some-> &env :ns :name)\n               location {:file file :line line}]\n           `(try\n              (fulcro.logging/-log ~location ~level ~@things-to-include)\n              (catch ~(if js? 'js/Error 'Exception) e#\n                (fulcro.logging/-log ~location ~level \"Log statement failed (arguments did not evaluate).\" e#))))))))\n\n(defn set-level! [log-level]\n  \"Takes a keyword (:all, :trace, :debug, :info, :warn, :error, :fatal, :none) and changes the runtime log level accordingly.\n  Note that the log levels are listed from least restrictive level to most restrictive.\n  The system property fulcro.logging can be set on the JVM to cause elision of logging statements from code.\"\n  (reset! current-logging-level (get logging-priority log-level 2)))\n\n(defn set-logger!\n  \"Set the fulcro logging function.\n\n  log-fn - A (fn [{:keys [file line] :as location} level & args] ...)\"\n  [log-fn]\n  (reset! logger log-fn))\n\n(defmacro trace [& args] `(log {:line ~(fline &form) :level :trace} ~@args))\n(defmacro debug [& args] `(log {:line ~(fline &form) :level :debug} ~@args))\n(defmacro info [& args] `(log {:line ~(fline &form) :level :info} ~@args))\n(defmacro warn [& args] `(log {:line ~(fline &form) :level :warn} ~@args))\n(defmacro error [& args] `(log {:line ~(fline &form) :level :error} ~@args))\n(defmacro fatal [& args] `(log {:line ~(fline &form) :level :fatal} ~@args))\n","~:reader-features",["^E",["~:cljs"]],"~:source-map",["^ ","~i19",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",8],["^ ","^1Z",34,"^1[",8],["^ ","^1Z",77,"^1[",8],["^ ","^1Z",127,"^1[",8],["^ ","^1Z",133,"^1[",8],["^ ","^1Z",189,"^1[",8],["^ ","^1Z",193,"^1[",8],["^ ","^1Z",249,"^1[",8],["^ ","^1Z",253,"^1[",8],["^ ","^1Z",306,"^1[",8],["^ ","^1Z",310,"^1[",8],["^ ","^1Z",363,"^1[",8],["^ ","^1Z",367,"^1[",8],["^ ","^1Z",422,"^1[",8],["^ ","^1Z",426,"^1[",8],["^ ","^1Z",481,"^1[",8],["^ ","^1Z",485,"^1[",8],["^ ","^1Z",538,"^1[",8]],"~i5",[["^ ","^1Z",0,"^1[",8,"^L","fulcro.logging/logging-priority"]]],"~i21",["^ ","~i0",[["^ ","^1Z",0,"^1[",9],["^ ","^1Z",35,"^1[",12],["^ ","^1Z",0,"^1[",13]],"~i6",[["^ ","^1Z",0,"^1[",12,"^L","fulcro.logging/should-log?"]]],"~i23",["^ ","~i3",[["^ ","^1Z",78,"^1[",12,"^L","current-logging-level"]],"~i25",[["^ ","^1Z",100,"^1[",12,"^L","message-level"]]],"~i24",["^ ","~i2",[["^ ","^1Z",0,"^1[",13],["^ ","^1Z",0,"^1[",15]],"~i8",[["^ ","^1Z",4,"^1[",13,"^L","c"]],"~i10",[["^ ","^1Z",8,"^1[",13],["^ ","^1Z",106,"^1[",13]],"~i11",[["^ ","^1Z",8,"^1[",13,"^L","cljs.core.get.cljs$core$IFn$_invoke$arity$3"]],"~i15",[["^ ","^1Z",52,"^1[",13,"^L","fulcro.logging/logging-priority"]],"~i32",[["^ ","^1Z",84,"^1[",13,"^L","current-logging-level"]]],"^22",["^ ","~i8",[["^ ","^1Z",4,"^1[",14,"^L","m"]],"^24",[["^ ","^1Z",8,"^1[",14],["^ ","^1Z",98,"^1[",14]],"^25",[["^ ","^1Z",8,"^1[",14,"^L","cljs.core.get.cljs$core$IFn$_invoke$arity$3"]],"^26",[["^ ","^1Z",52,"^1[",14,"^L","fulcro.logging/logging-priority"]],"^27",[["^ ","^1Z",84,"^1[",14,"^L","message-level"]]],"~i26",["^ ","~i4",[["^ ","^1Z",0,"^1[",15]],"~i8",[["^ ","^1Z",8,"^1[",15,"^L","m"]],"^24",[["^ ","^1Z",13,"^1[",15,"^L","c"]]],"~i28",["^ ","~i0",[["^ ","^1Z",0,"^1[",17],["^ ","^1Z",3,"^1[",17],["^ ","^1Z",11,"^1[",17,"^L","js/fulcro"],["^ ","^1Z",46,"^1[",17,"^L","js/fulcro.logging"],["^ ","^1Z",89,"^1[",17,"^L","js/fulcro.logging.current-logging-level"],["^ ","^1Z",0,"^1[",18],["^ ","^1Z",0,"^1[",19],["^ ","^1Z",0,"^1[",19]],"^1Y",[["^ ","^1Z",0,"^1[",19,"^L","fulcro.logging/current-logging-level"]]],"~i29",["^ ","~i2",[["^ ","^1Z",39,"^1[",19],["^ ","^1Z",84,"^1[",19]],"~i3",[["^ ","^1Z",39,"^1[",19,"^L","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"^27",["^ ","~i3",[["^ ","^1Z",0,"^1[",21]],"~i8",[["^ ","^1Z",0,"^1[",21,"^L","fulcro.logging/level-map"]]],"~i33",["^ ","~i5",[["^ ","^1Z",27,"^1[",21],["^ ","^1Z",53,"^1[",21],["^ ","^1Z",136,"^1[",21],["^ ","^1Z",186,"^1[",21],["^ ","^1Z",242,"^1[",21],["^ ","^1Z",298,"^1[",21],["^ ","^1Z",351,"^1[",21],["^ ","^1Z",406,"^1[",21],["^ ","^1Z",459,"^1[",21],["^ ","^1Z",14,"^1[",22],["^ ","^1Z",97,"^1[",22],["^ ","^1Z",103,"^1[",22],["^ ","^1Z",110,"^1[",22],["^ ","^1Z",117,"^1[",22],["^ ","^1Z",124,"^1[",22],["^ ","^1Z",133,"^1[",22],["^ ","^1Z",143,"^1[",22],["^ ","^1Z",0,"^1[",23]],"^25",[["^ ","^1Z",44,"^1[",21,"^L","levels"]]],"~i34",["^ ","^25",[["^ ","^1Z",4,"^1[",22,"^L","glevels"]]],"~i35",["^ ","~i7",[["^ ","^1Z",0,"^1[",23]],"~i8",[["^ ","^1Z",7,"^1[",23,"^L","cljs.core/zipmap"]],"^26",[["^ ","^1Z",24,"^1[",23,"^L","levels"]],"~i22",[["^ ","^1Z",31,"^1[",23],["^ ","^1Z",75,"^1[",23],["^ ","^1Z",18,"^1[",24,"^L","p1__31601#"],["^ ","^1Z",0,"^1[",25]],"^21",[["^ ","^1Z",31,"^1[",23,"^L","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^29",[["^ ","^1Z",0,"^1[",25],["^ ","^1Z",50,"^1[",25,"^L","p1__31601#"]],"^2:",[["^ ","^1Z",7,"^1[",25,"^L","goog.debug.Logger.Level/getPredefinedLevel"]],"~i57",[["^ ","^1Z",1,"^1[",27,"^L","glevels"]]],"~i37",["^ ","~i0",[["^ ","^1Z",0,"^1[",29],["^ ","^1Z",3,"^1[",29],["^ ","^1Z",11,"^1[",29,"^L","js/fulcro"],["^ ","^1Z",46,"^1[",29,"^L","js/fulcro.logging"],["^ ","^1Z",89,"^1[",29,"^L","js/fulcro.logging.logger"],["^ ","^1Z",0,"^1[",30],["^ ","^1Z",0,"^1[",31],["^ ","^1Z",0,"^1[",31]],"^1Y",[["^ ","^1Z",0,"^1[",31,"^L","fulcro.logging/logger"]]],"~i38",["^ ","~i2",[["^ ","^1Z",24,"^1[",31]]],"~i40",["^ ","~i7",[["^ ","^1Z",0,"^1[",32],["^ ","^1Z",0,"^1[",33],["^ ","^1Z",0,"^1[",35]],"^2>",[["^ ","^1Z",3,"^1[",32,"^L","goog/DEBUG"]]],"~i41",["^ ","~i9",[["^ ","^1Z",0,"^1[",33],["^ ","^1Z",40,"^1[",33]],"^23",[["^ ","^1Z",0,"^1[",33],["^ ","^1Z",5,"^1[",33,"^L","goog/debug.Console"]]],"~i42",["^ ","~i4",[["^ ","^1Z",0,"^1[",37]],"~i5",[["^ ","^1Z",7,"^1[",37,"^L","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]],"^24",[["^ ","^1Z",52,"^1[",37],["^ ","^1Z",57,"^1[",38,"^L","p__31619"],["^ ","^1Z",0,"^1[",39],["^ ","^1Z",0,"^1[",39],["^ ","^1Z",4,"^1[",39,"^L","map__31620"],["^ ","^1Z",17,"^1[",39,"^L","p__31619"],["^ ","^1Z",4,"^1[",40,"^L","map__31620"],["^ ","^1Z",21,"^1[",40],["^ ","^1Z",23,"^1[",40],["^ ","^1Z",25,"^1[",40],["^ ","^1Z",27,"^1[",40],["^ ","^1Z",28,"^1[",40,"^L","map__31620"],["^ ","^1Z",42,"^1[",40],["^ ","^1Z",50,"^1[",40],["^ ","^1Z",52,"^1[",40],["^ ","^1Z",54,"^1[",40],["^ ","^1Z",55,"^1[",40],["^ ","^1Z",55,"^1[",40,"^L","map__31620"],["^ ","^1Z",104,"^1[",40],["^ ","^1Z",115,"^1[",40],["^ ","^1Z",116,"^1[",40,"^L","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1Z",148,"^1[",40],["^ ","^1Z",148,"^1[",40,"^L","map__31620"],["^ ","^1Z",179,"^1[",40],["^ ","^1Z",184,"^1[",40],["^ ","^1Z",191,"^1[",40],["^ ","^1Z",199,"^1[",40],["^ ","^1Z",199,"^1[",40,"^L","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1Z",245,"^1[",40,"^L","cljs.core/hash-map"],["^ ","^1Z",264,"^1[",40,"^L","map__31620"],["^ ","^1Z",276,"^1[",40,"^L","map__31620"],["^ ","^1Z",11,"^1[",41],["^ ","^1Z",11,"^1[",41,"^L","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1Z",55,"^1[",41,"^L","map__31620"],["^ ","^1Z",70,"^1[",41],["^ ","^1Z",11,"^1[",42],["^ ","^1Z",11,"^1[",42,"^L","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1Z",55,"^1[",42,"^L","map__31620"],["^ ","^1Z",70,"^1[",42],["^ ","^1Z",0,"^1[",43],["^ ","^1Z",47,"^1[",73,"^L","p__31619"],["^ ","^1Z",58,"^1[",80,"^L","p__31619"],["^ ","^1Z",4,"^1[",83,"^L","p__31619"],["^ ","^1Z",48,"^1[",87,"^L","p__31619"]],"~i39",[["^ ","^1Z",4,"^1[",41,"^L","file"]],"~i44",[["^ ","^1Z",4,"^1[",42,"^L","line"]],"~i51",[["^ ","^1Z",66,"^1[",38,"^L","level"],["^ ","^1Z",56,"^1[",73,"^L","level"],["^ ","^1Z",67,"^1[",80,"^L","level"],["^ ","^1Z",4,"^1[",85,"^L","level"],["^ ","^1Z",57,"^1[",87,"^L","level"]],"~i59",[["^ ","^1Z",72,"^1[",38,"^L","args"],["^ ","^1Z",4,"^1[",74,"^L","args"],["^ ","^1Z",2,"^1[",78,"^L","args"],["^ ","^1Z",73,"^1[",80,"^L","args"],["^ ","^1Z",4,"^1[",86,"^L","args"],["^ ","^1Z",63,"^1[",87,"^L","args"]]],"~i43",["^ ","~i12",[["^ ","^1Z",0,"^1[",43],["^ ","^1Z",0,"^1[",44],["^ ","^1Z",0,"^1[",70]],"~i18",[["^ ","^1Z",20,"^1[",43],["^ ","^1Z",53,"^1[",43],["^ ","^1Z",53,"^1[",43,"^L","cljs.core/deref"]],"^1Y",[["^ ","^1Z",20,"^1[",43,"^L","fulcro.logging/should-log?"]],"^27",[["^ ","^1Z",69,"^1[",43,"^L","fulcro.logging/current-logging-level"]],"~i54",[["^ ","^1Z",107,"^1[",43,"^L","level"]]],"^2F",["^ ","~i14",[["^ ","^1Z",0,"^1[",44],["^ ","^1Z",0,"^1[",57]],"~i20",[["^ ","^1Z",4,"^1[",44,"^L","location"]],"^2:",[["^ ","^1Z",15,"^1[",44],["^ ","^1Z",6,"^1[",50]],"^2<",[["^ ","^1Z",60,"^1[",44],["^ ","^1Z",77,"^1[",44,"^L","or__3949__auto__"],["^ ","^1Z",0,"^1[",45],["^ ","^1Z",0,"^1[",45],["^ ","^1Z",20,"^1[",45,"^L","or__3949__auto__"],["^ ","^1Z",0,"^1[",46,"^L","or__3949__auto__"],["^ ","^1Z",0,"^1[",48]],"^2A",[["^ ","^1Z",96,"^1[",44,"^L","file"]],"~i52",[["^ ","^1Z",54,"^1[",50],["^ ","^1Z",71,"^1[",50,"^L","or__3949__auto__"],["^ ","^1Z",0,"^1[",51],["^ ","^1Z",0,"^1[",51],["^ ","^1Z",20,"^1[",51,"^L","or__3949__auto__"],["^ ","^1Z",0,"^1[",52,"^L","or__3949__auto__"],["^ ","^1Z",0,"^1[",54]],"~i56",[["^ ","^1Z",90,"^1[",50,"^L","line"]]],"~i45",["^ ","^22",[["^ ","^1Z",0,"^1[",57],["^ ","^1Z",0,"^1[",64]],"~i31",[["^ ","^1Z",4,"^1[",57,"^L","logger"]],"~i47",[["^ ","^1Z",13,"^1[",57]],"~i48",[["^ ","^1Z",13,"^1[",57,"^L","goog.log/getLogger"]],"~i63",[["^ ","^1Z",32,"^1[",57,"^L","file"]]],"~i46",["^ ","^2R",[["^ ","^1Z",4,"^1[",58,"^L","first-exception"]],"^2S",[["^ ","^1Z",22,"^1[",58]],"^2T",[["^ ","^1Z",22,"^1[",58,"^L","cljs.core/first"]],"^2L",[["^ ","^1Z",38,"^1[",58],["^ ","^1Z",85,"^1[",58],["^ ","^1Z",18,"^1[",59,"^L","p1__31613#"],["^ ","^1Z",0,"^1[",60]],"~i55",[["^ ","^1Z",38,"^1[",58,"^L","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^2U",[["^ ","^1Z",0,"^1[",60],["^ ","^1Z",8,"^1[",60,"^L","p1__31613#"]],"~i74",[["^ ","^1Z",36,"^1[",60,"^L","js/Error"]],"~i86",[["^ ","^1Z",1,"^1[",62,"^L","args"]]],"^2S",["^ ","^2R",[["^ ","^1Z",4,"^1[",63,"^L","message"]],"^2S",[["^ ","^1Z",14,"^1[",63],["^ ","^1Z",64,"^1[",63]],"^2T",[["^ ","^1Z",14,"^1[",63,"^L","clojure.string.join.cljs$core$IFn$_invoke$arity$2"]],"~i61",[["^ ","^1Z",68,"^1[",63,"^L","args"]]],"^2T",["^ ","~i27",[["^ ","^1Z",0,"^1[",64],["^ ","^1Z",0,"^1[",65],["^ ","^1Z",0,"^1[",67]],"^2;",[["^ ","^1Z",20,"^1[",64,"^L","logger"]]],"~i49",["^ ","^2:",[["^ ","^1Z",0,"^1[",65]],"^2=",[["^ ","^1Z",7,"^1[",65,"^L","logger"]],"^2D",[["^ ","^1Z",18,"^1[",65]],"^2I",[["^ ","^1Z",18,"^1[",65,"^L","cljs.core.get.cljs$core$IFn$_invoke$arity$3"]],"^2S",[["^ ","^1Z",62,"^1[",65,"^L","fulcro.logging/level-map"]],"^2?",[["^ ","^1Z",87,"^1[",65,"^L","level"]],"^2U",[["^ ","^1Z",93,"^1[",65],["^ ","^1Z",93,"^1[",65]],"~i70",[["^ ","^1Z",176,"^1[",65,"^L","fulcro.logging/level-map"]],"~i82",[["^ ","^1Z",203,"^1[",65,"^L","message"]],"~i90",[["^ ","^1Z",211,"^1[",65,"^L","first-exception"]]],"~i60",["^ ","~i0",[["^ ","^1Z",0,"^1[",96],["^ ","^1Z",0,"^1[",96],["^ ","^1Z",22,"^1[",99],["^ ","^1Z",52,"^1[",99,"^L","var_args"],["^ ","^1Z",0,"^1[",100],["^ ","^1Z",0,"^1[",100],["^ ","^1Z",4,"^1[",100,"^L","args__4534__auto__"],["^ ","^1Z",25,"^1[",100],["^ ","^1Z",0,"^1[",101],["^ ","^1Z",0,"^1[",101],["^ ","^1Z",4,"^1[",101,"^L","len__4531__auto__"],["^ ","^1Z",30,"^1[",101],["^ ","^1Z",30,"^1[",101],["^ ","^1Z",0,"^1[",102],["^ ","^1Z",0,"^1[",102],["^ ","^1Z",4,"^1[",102,"^L","i__4532__auto__"],["^ ","^1Z",28,"^1[",102],["^ ","^1Z",0,"^1[",104],["^ ","^1Z",0,"^1[",104],["^ ","^1Z",3,"^1[",104],["^ ","^1Z",4,"^1[",104,"^L","i__4532__auto__"],["^ ","^1Z",28,"^1[",104,"^L","len__4531__auto__"],["^ ","^1Z",0,"^1[",105],["^ ","^1Z",0,"^1[",105],["^ ","^1Z",0,"^1[",105,"^L","args__4534__auto__"],["^ ","^1Z",24,"^1[",105],["^ ","^1Z",25,"^1[",105],["^ ","^1Z",35,"^1[",105,"^L","i__4532__auto__"],["^ ","^1Z",0,"^1[",107],["^ ","^1Z",15,"^1[",107],["^ ","^1Z",16,"^1[",107,"^L","i__4532__auto__"],["^ ","^1Z",40,"^1[",107],["^ ","^1Z",0,"^1[",111],["^ ","^1Z",0,"^1[",115],["^ ","^1Z",4,"^1[",115,"^L","argseq__4535__auto__"],["^ ","^1Z",27,"^1[",115],["^ ","^1Z",29,"^1[",115],["^ ","^1Z",30,"^1[",115],["^ ","^1Z",36,"^1[",115],["^ ","^1Z",36,"^1[",115,"^L","args__4534__auto__"],["^ ","^1Z",64,"^1[",115],["^ ","^1Z",64,"^1[",115],["^ ","^1Z",69,"^1[",115,"^L","cljs.core/IndexedSeq"],["^ ","^1Z",90,"^1[",115],["^ ","^1Z",90,"^1[",115,"^L","args__4534__auto__"],["^ ","^1Z",115,"^1[",115],["^ ","^1Z",120,"^1[",115],["^ ","^1Z",124,"^1[",115],["^ ","^1Z",131,"^1[",115],["^ ","^1Z",0,"^1[",116],["^ ","^1Z",0,"^1[",116],["^ ","^1Z",7,"^1[",116,"^L","fulcro.logging/-log"],["^ ","^1Z",64,"^1[",116],["^ ","^1Z",65,"^1[",116],["^ ","^1Z",75,"^1[",116],["^ ","^1Z",81,"^1[",116],["^ ","^1Z",82,"^1[",116],["^ ","^1Z",92,"^1[",116],["^ ","^1Z",98,"^1[",116,"^L","argseq__4535__auto__"],["^ ","^1Z",0,"^1[",119],["^ ","^1Z",0,"^1[",119],["^ ","^1Z",0,"^1[",119],["^ ","^1Z",0,"^1[",119,"^L","fulcro.logging/-log"],["^ ","^1Z",59,"^1[",119],["^ ","^1Z",0,"^1[",120],["^ ","^1Z",0,"^1[",127],["^ ","^1Z",0,"^1[",127],["^ ","^1Z",0,"^1[",127,"^L","fulcro.logging/-log"],["^ ","^1Z",46,"^1[",127],["^ ","^1Z",0,"^1[",129],["^ ","^1Z",0,"^1[",130],["^ ","^1Z",0,"^1[",130],["^ ","^1Z",0,"^1[",130,"^L","fulcro.logging/-log"],["^ ","^1Z",40,"^1[",130],["^ ","^1Z",51,"^1[",130,"^L","seq31676"],["^ ","^1Z",0,"^1[",131],["^ ","^1Z",0,"^1[",131],["^ ","^1Z",4,"^1[",131,"^L","G__31677"],["^ ","^1Z",15,"^1[",131],["^ ","^1Z",15,"^1[",131,"^L","cljs.core/first"],["^ ","^1Z",31,"^1[",131,"^L","seq31676"],["^ ","^1Z",4,"^1[",132,"^L","seq31676"],["^ ","^1Z",19,"^1[",132],["^ ","^1Z",19,"^1[",132,"^L","cljs.core/next"],["^ ","^1Z",34,"^1[",132,"^L","seq31676"],["^ ","^1Z",4,"^1[",133,"^L","G__31678"],["^ ","^1Z",15,"^1[",133],["^ ","^1Z",15,"^1[",133,"^L","cljs.core/first"],["^ ","^1Z",31,"^1[",133,"^L","seq31676"],["^ ","^1Z",4,"^1[",134,"^L","seq31676"],["^ ","^1Z",19,"^1[",134],["^ ","^1Z",19,"^1[",134,"^L","cljs.core/next"],["^ ","^1Z",34,"^1[",134,"^L","seq31676"],["^ ","^1Z",0,"^1[",135],["^ ","^1Z",0,"^1[",135],["^ ","^1Z",4,"^1[",135,"^L","self__4518__auto__"],["^ ","^1Z",25,"^1[",135],["^ ","^1Z",0,"^1[",136],["^ ","^1Z",0,"^1[",136],["^ ","^1Z",7,"^1[",136,"^L","self__4518__auto__"],["^ ","^1Z",63,"^1[",136,"^L","G__31677"],["^ ","^1Z",72,"^1[",136,"^L","G__31678"],["^ ","^1Z",81,"^1[",136,"^L","seq31676"],["^ ","^1Z",0,"^1[",139]],"~i6",[["^ ","^1Z",0,"^1[",99,"^L","fulcro.logging/-log"]]],"~i62",["^ ","~i3",[["^ ","^1Z",70,"^1[",119,"^L","location"]],"^2J",[["^ ","^1Z",79,"^1[",119,"^L","level"]],"^2N",[["^ ","^1Z",85,"^1[",119,"^L","things-to-print"]]],"^2U",["^ ","~i2",[["^ ","^1Z",0,"^1[",120],["^ ","^1Z",20,"^1[",120],["^ ","^1Z",20,"^1[",120,"^L","cljs.core/deref"],["^ ","^1Z",0,"^1[",121],["^ ","^1Z",0,"^1[",123]],"~i9",[["^ ","^1Z",36,"^1[",120,"^L","fulcro.logging/logger"]]],"~i64",["^ ","~i4",[["^ ","^1Z",0,"^1[",121],["^ ","^1Z",53,"^1[",121],["^ ","^1Z",53,"^1[",121,"^L","cljs.core/deref"]],"~i5",[["^ ","^1Z",7,"^1[",121,"^L","cljs.core.apply.cljs$core$IFn$_invoke$arity$4"]],"^2J",[["^ ","^1Z",69,"^1[",121,"^L","fulcro.logging/logger"]],"^1Y",[["^ ","^1Z",92,"^1[",121,"^L","location"]],"^29",[["^ ","^1Z",101,"^1[",121,"^L","level"]],"^2<",[["^ ","^1Z",107,"^1[",121,"^L","things-to-print"]]],"~i66",["^ ","~i0",[["^ ","^1Z",0,"^1[",139],["^ ","^1Z",27,"^1[",139],["^ ","^1Z",0,"^1[",140],["^ ","^1Z",0,"^1[",140]],"~i7",[["^ ","^1Z",0,"^1[",139,"^L","fulcro.logging/log*"]]],"~i68",["^ ","~i0",[["^ ","^1Z",0,"^1[",142],["^ ","^1Z",23,"^1[",142],["^ ","^1Z",0,"^1[",143]],"~i6",[["^ ","^1Z",0,"^1[",142,"^L","fulcro.logging/fline"]],"~i13",[["^ ","^1Z",54,"^1[",142,"^L","and-form"]],"^21",[["^ ","^1Z",0,"^1[",143],["^ ","^1Z",4,"^1[",143,"^L","G__31711"],["^ ","^1Z",4,"^1[",144,"^L","G__31711"],["^ ","^1Z",19,"^1[",144],["^ ","^1Z",21,"^1[",144],["^ ","^1Z",22,"^1[",144,"^L","G__31711"],["^ ","^1Z",34,"^1[",144],["^ ","^1Z",41,"^1[",144],["^ ","^1Z",46,"^1[",144],["^ ","^1Z",61,"^1[",144,"^L","G__31711"],["^ ","^1Z",0,"^1[",145],["^ ","^1Z",0,"^1[",145],["^ ","^1Z",3,"^1[",145],["^ ","^1Z",4,"^1[",145,"^L","G__31711"],["^ ","^1Z",20,"^1[",145],["^ ","^1Z",0,"^1[",146],["^ ","^1Z",0,"^1[",148],["^ ","^1Z",7,"^1[",148],["^ ","^1Z",89,"^1[",148,"^L","G__31711"]],"^2R",[["^ ","^1Z",15,"^1[",143,"^L","and-form"]],"^2B",[["^ ","^1Z",46,"^1[",144,"^L","cljs.core/meta"]]],"~i97",["^ ","~i0",[["^ ","^1Z",0,"^1[",151],["^ ","^1Z",33,"^1[",151],["^ ","^1Z",0,"^1[",152],["^ ","^1Z",0,"^1[",152]],"~i6",[["^ ","^1Z",0,"^1[",151,"^L","fulcro.logging/set-level!"]],"^2K",[["^ ","^1Z",74,"^1[",151,"^L","log-level"]]],"~i101",["^ ","~i2",[["^ ","^1Z",0,"^1[",153]],"~i3",[["^ ","^1Z",7,"^1[",153,"^L","cljs.core/reset!"]],"^24",[["^ ","^1Z",29,"^1[",153,"^L","fulcro.logging/current-logging-level"]],"^27",[["^ ","^1Z",66,"^1[",153],["^ ","^1Z",152,"^1[",153]],"^2;",[["^ ","^1Z",66,"^1[",153,"^L","cljs.core.get.cljs$core$IFn$_invoke$arity$3"]],"^2@",[["^ ","^1Z",110,"^1[",153,"^L","fulcro.logging/logging-priority"]],"^2L",[["^ ","^1Z",142,"^1[",153,"^L","log-level"]]],"~i103",["^ ","~i0",[["^ ","^1Z",0,"^1[",155],["^ ","^1Z",34,"^1[",160],["^ ","^1Z",0,"^1[",161]],"~i6",[["^ ","^1Z",0,"^1[",160,"^L","fulcro.logging/set-logger!"]]],"~i107",["^ ","~i3",[["^ ","^1Z",76,"^1[",160,"^L","log-fn"]]],"~i108",["^ ","~i2",[["^ ","^1Z",0,"^1[",161]],"~i3",[["^ ","^1Z",7,"^1[",161,"^L","cljs.core/reset!"]],"^24",[["^ ","^1Z",29,"^1[",161,"^L","fulcro.logging/logger"]],"~i17",[["^ ","^1Z",51,"^1[",161,"^L","log-fn"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["^1Q","goog/dom/tagname.js"],[1508737613441,"^1>","~$goog.dom.HtmlElement"],["^1Q","goog/labs/useragent/platform.js"],[1508737613441,"^1>","~$goog.labs.userAgent.util","~$goog.string"],["^P","^1;"],[1537260906000],["^1Q","goog/math/math.js"],[1508737613441,"^1>","~$goog.array","~$goog.asserts"],["^1Q","goog/labs/useragent/browser.js"],[1508737613441,"^1>","^3F","^3D","^1=","^3E"],["^1Q","goog/html/safeurl.js"],[1508737613441,"^1>","^3G","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","^3E","~$goog.string.Const","~$goog.string.TypedString"],["^1Q","goog/array/array.js"],[1508737613441,"^1>","^3G"],["^1Q","goog/useragent/useragent.js"],[1508737613441,"^1>","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^3D","~$goog.reflect","^3E"],["^1Q","goog/debug/error.js"],[1508737613441,"^1>"],["^1Q","goog/dom/nodetype.js"],[1508737613441,"^1>"],["^1Q","goog/string/typedstring.js"],[1508737613441,"^1>"],["^1Q","goog/object/object.js"],[1508737613441,"^1>"],"~:SHADOW-TIMESTAMP",[1537358551000,1537260906000],["^1Q","cljs/stacktrace.cljc"],[1537260906289,"^1>","^1;","^3E","^1C"],["^1Q","goog/math/long.js"],[1508737613441,"^1>","^3G","^3Q"],["^1Q","goog/html/trustedresourceurl.js"],[1508737613441,"^1>","^3G","^3J","^3K","^3L","^3M"],["^1Q","goog/functions/functions.js"],[1508737613441,"^1>"],["^1Q","goog/html/safestyle.js"],[1508737613441,"^1>","^3F","^3G","~$goog.html.SafeUrl","^3E","^3L","^3M"],["^1Q","goog/structs/map.js"],[1508737613441,"^1>","~$goog.iter.Iterator","~$goog.iter.StopIteration","^1="],["^1Q","goog/html/safehtml.js"],[1508737613441,"^1>","^3F","^3G","~$goog.dom.TagName","~$goog.dom.tags","~$goog.html.SafeScript","~$goog.html.SafeStyle","~$goog.html.SafeStyleSheet","^3S","^3I","^3J","^3K","^3N","^1=","^3E","^3L","^3M"],["^1Q","goog/dom/tags.js"],[1508737613441,"^1>","^1="],["^P","^O"],[1537260907000],["^1Q","goog/labs/useragent/engine.js"],[1508737613441,"^1>","^3F","^3D","^3E"],["^1Q","goog/asserts/asserts.js"],[1508737613441,"^1>","~$goog.debug.Error","~$goog.dom.NodeType","^3E"],["^1Q","goog/debug/relativetimeprovider.js"],[1508737613441,"^1>"],["^1Q","goog/debug/logbuffer.js"],[1508737613441,"^1>","^3G","~$goog.debug.LogRecord"],["^1Q","goog/uri/uri.js"],[1508737613441,"^1>","^3F","^3G","^3E","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1Q","goog/i18n/bidi.js"],[1508737613441,"^1>"],["^1Q","goog/debug/formatter.js"],[1508737613441,"^1>","^1L","~$goog.debug.Logger","~$goog.debug.RelativeTimeProvider","~$goog.html.SafeHtml","^3S","~$goog.html.uncheckedconversions","^3L"],["^1Q","goog/fs/url.js"],[1508737613441,"^1>"],["^1Q","goog/debug/logrecord.js"],[1508737613441,"^1>"],["^1Q","goog/base.js"],[1508737613441],["^1Q","goog/structs/structs.js"],[1508737613441,"^1>","^3F","^1="],["^1Q","clojure/string.cljs"],[1537260906289,"^1>","^1;","^3E","~$goog.string.StringBuffer"],["^1Q","goog/string/string.js"],[1508737613441,"^1>"],["^1Q","goog/reflect/reflect.js"],[1508737613441,"^1>"],["^1Q","goog/labs/useragent/util.js"],[1508737613441,"^1>","^3E"],["^1Q","goog/debug/debug.js"],[1508737613441,"^1>","^3F","~$goog.debug.errorcontext","~$goog.userAgent"],["^1Q","goog/string/stringbuffer.js"],[1508737613441,"^1>"],["^1Q","goog/debug/errorcontext.js"],[1508737613441,"^1>"],["^1Q","goog/iter/iter.js"],[1508737613441,"^1>","^3F","^3G","~$goog.functions","~$goog.math"],["^1Q","goog/html/uncheckedconversions.js"],[1508737613441,"^1>","^3G","^49","^3X","^3Y","^3Z","^3S","^3I","^3E","^3L"],["^1Q","goog/debug/logger.js"],[1508737613441,"^1>","^3F","^3G","^1L","~$goog.debug.LogBuffer","^41"],["^1Q","goog/dom/htmlelement.js"],[1508737613441,"^1>"],["^1Q","cljs/core.cljs"],[1537260906289,"~$goog.math.Long","~$goog.math.Integer","^3E","^1=","^3F","~$goog.Uri","^4;"],["^1Q","goog/html/safescript.js"],[1508737613441,"^1>","^3G","^3L","^3M"],["^1Q","goog/log/log.js"],[1508737613441,"^1>","^1L","~$goog.debug.LogManager","^41","^47"],["^1Q","fulcro/logging.cljc"],[1537260907310,"^1>","^1;","^1C","^@","^1:","^1=","^1A","^17"],["^1Q","goog/html/safestylesheet.js"],[1508737613441,"^1>","^3F","^3G","^3Y","^1=","^3E","^3L","^3M"],["^1Q","goog/math/integer.js"],[1508737613441,"^1>"],["^1Q","goog/debug/console.js"],[1508737613441,"^1>","^4D","^47","~$goog.debug.TextFormatter"],["^1Q","goog/uri/utils.js"],[1508737613441,"^1>","^3F","^3G","^3E"],["^1Q","goog/string/const.js"],[1508737613441,"^1>","^3G","^3M"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Utilities for logging on the client and server.\n\n  This namespace exists so that fulcro libraries have a mechanism to do logging that can be lightweight without\n  pull in any additional dependencies. You can use this logging support, but it is not designed to be great, just\n  lightweight and efficient.\n\n  It is highly recommended that you use a dedicated logging library in production apps, such as timbre. However, if\n  you're writing an add-on for Fulcro it is probably best to use this logging so you give our users a consistent\n  way to deal with Fulcro logging.","^7","fulcro/logging.cljc","^8",1,"^9",5,"^:",1,"^;",19],"^<",["^ ","^=","^>","^?","^@","^A","^B"],"^C",null,"^D",["^E",[]],"^F",["^ ","^G",["^ ","^H",["^I",[["^J","~$&","^K"]]],"^6","Logs to the current global logging function, which can be set in the top-level logger atom.\n\n     If you set the JVM option to something like -Dfulcro.logging=error then this macro will not output\n     any code for logging below that level.\n\n     level - one of :trace, :debug, :info, :warn, :error, or :fatal.\n     things-to-include - Any number of additional things to log. The logging function may give special treatment\n     to certain types (e.g. exceptions).\n\n     See `set-logger!`.","^8",72,"^9",4,"^7","fulcro/logging.cljc","^L","^M","^N","^O","^P",true],"^Q",["^ ","^H",["^I",[[]]],"^6","Get the current runtime JVM system logging level from fulcro.logging. Works for clj and cljs.","^8",54,"^9",4,"^7","fulcro/logging.cljc","^L","^R","^N","^O","^P",true],"^S",["^ ","^H",["^I",[["~$&","^T"]]],"^8",114,"^9",1,"^7","fulcro/logging.cljc","^L","^U","^N","^O","^P",true],"^V",["^ ","^H",["^I",[["~$&","^T"]]],"^8",111,"^9",1,"^7","fulcro/logging.cljc","^L","^W","^N","^O","^P",true],"^X",["^ ","^H",["^I",[["~$&","^T"]]],"^8",112,"^9",1,"^7","fulcro/logging.cljc","^L","^Y","^N","^O","^P",true],"^Z",["^ ","^H",["^I",[["~$&","^T"]]],"^8",116,"^9",1,"^7","fulcro/logging.cljc","^L","^[","^N","^O","^P",true],"^10",["^ ","^H",["^I",[["~$&","^T"]]],"^8",113,"^9",1,"^7","fulcro/logging.cljc","^L","^11","^N","^O","^P",true],"^12",["^ ","^H",["^I",[["~$&","^T"]]],"^8",115,"^9",1,"^7","fulcro/logging.cljc","^L","^13","^N","^O","^P",true]],"^L","^O","^15",["^ ","^16","^17"],"^18",["^ ","^19","^1:","^?","^@","^17","^17","^@","^@","^1;","^1;","^1<","^1=","^1>","^1>","^1?","^@","^1=","^1=","^1:","^1:","^1@","^1A","^1B","^1C","^1C","^1C","^1A","^1A","^16","^17"],"^1D",["^E",["^1E","^1F"]],"~:shadow/js-access-global",["^E",["Error"]],"^1G",null,"~:defs",["^ ","~$fline",["^ ","~:protocol-inline",null,"^5",["^ ","^7","fulcro/logging.cljc","^8",69,"^9",7,"^:",69,"^;",12,"^H",["^I",["~$quote",["^I",[["~$and-form"]]]]]],"^L","~$fulcro.logging/fline","~:variadic",false,"^7","fulcro/logging.cljc","^;",12,"~:method-params",["^I",[["^4L"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^9",1,"^8",69,"^:",69,"~:max-fixed-arity",1,"~:fn-var",true,"^H",["^I",["^4K",["^I",[["^4L"]]]]]],"~$should-log?",["^ ","^4J",null,"^5",["^ ","^7","fulcro/logging.cljc","^8",22,"^9",7,"^:",22,"^;",18,"^H",["^I",["^4K",["^I",[["~$current-logging-level","~$message-level"]]]]],"^6","Returns true if the current logging level indicates that the message level is of interest."],"^L","~$fulcro.logging/should-log?","^4N",false,"^7","fulcro/logging.cljc","^;",18,"^4O",["^I",[["^4U","^4V"]]],"^4P",null,"^4Q",["^I",[null,null]],"^9",1,"^8",22,"^:",22,"^4R",2,"^4S",true,"^H",["^I",["^4K",["^I",[["^4U","^4V"]]]]],"^6","Returns true if the current logging level indicates that the message level is of interest."],"~$level-map",["^ ","^L","~$fulcro.logging/level-map","^7","fulcro/logging.cljc","^8",33,"^9",4,"^:",33,"^;",18,"^5",["^ ","^7","fulcro/logging.cljc","^8",33,"^9",9,"^:",33,"^;",18],"~:tag","~$any"],"~$-log",["^ ","^4J",null,"^5",["^ ","^7","fulcro/logging.cljc","^8",61,"^9",7,"^:",61,"^;",11,"^H",["^I",["^4K",["^I",[["~$location","^1@","~$&","~$things-to-print"]]]]],"^6","Private implementation for macro output. Use `log` instead.","~:top-fn",["^ ","^4N",true,"^4R",2,"^4O",[["^I",["^51","^1@","^52"]]],"^H",["^I",[["^51","^1@","~$&","^52"]]],"^4Q",["^I",[null]]]],"^L","~$fulcro.logging/-log","^4N",true,"^7","fulcro/logging.cljc","^;",11,"^53",["^ ","^4N",true,"^4R",2,"^4O",[["^I",["^51","^1@","^52"]]],"^H",["^I",[["^51","^1@","~$&","^52"]]],"^4Q",["^I",[null]]],"^4O",[["^I",["^51","^1@","^52"]]],"^4P",null,"^4Q",["^I",[null]],"^9",1,"^8",61,"^:",61,"^4R",2,"^4S",true,"^H",["^I",[["^51","^1@","~$&","^52"]]],"^6","Private implementation for macro output. Use `log` instead."],"~$set-level!",["^ ","^4J",null,"^5",["^ ","^7","fulcro/logging.cljc","^8",98,"^9",7,"^:",98,"^;",17,"^H",["^I",["^4K",["^I",[["~$log-level"]]]]]],"^L","~$fulcro.logging/set-level!","^4N",false,"^7","fulcro/logging.cljc","^;",17,"^4O",["^I",[["^56"]]],"^4P",null,"^4Q",["^I",[null,null]],"^9",1,"^8",98,"^:",98,"^4R",1,"^4S",true,"^H",["^I",["^4K",["^I",[["^56"]]]]]],"~$log*",["^ ","^4J",null,"^5",["^ ","^7","fulcro/logging.cljc","^8",67,"^9",8,"^:",67,"^;",12,"~:private",true,"^H",["^I",["^4K",["^I",[[]]]]]],"^59",true,"^L","~$fulcro.logging/log*","^4N",false,"^7","fulcro/logging.cljc","^;",12,"^4O",["^I",[[]]],"^4P",null,"^4Q",["^I",[null,null]],"^9",1,"^8",67,"^:",67,"^4R",0,"^4S",true,"^H",["^I",["^4K",["^I",[[]]]]]],"~$logger",["^ ","^L","~$fulcro.logging/logger","^7","fulcro/logging.cljc","^8",38,"^9",1,"^:",38,"^;",26,"^59",true,"^5",["^ ","^7","fulcro/logging.cljc","^8",38,"^9",20,"^:",38,"^;",26,"^59",true],"^4Z","^4["],"^4U",["^ ","^L","~$fulcro.logging/current-logging-level","^7","fulcro/logging.cljc","^8",29,"^9",1,"^:",29,"^;",41,"^59",true,"^5",["^ ","^7","fulcro/logging.cljc","^8",29,"^9",20,"^:",29,"^;",41,"^59",true],"^4Z","^4["],"~$set-logger!",["^ ","^4J",null,"^5",["^ ","^7","fulcro/logging.cljc","^8",104,"^9",7,"^:",104,"^;",18,"^H",["^I",["^4K",["^I",[["~$log-fn"]]]]],"^6","Set the fulcro logging function.\n\n  log-fn - A (fn [{:keys [file line] :as location} level & args] ...)"],"^L","~$fulcro.logging/set-logger!","^4N",false,"^7","fulcro/logging.cljc","^;",18,"^4O",["^I",[["^5?"]]],"^4P",null,"^4Q",["^I",[null,null]],"^9",1,"^8",104,"^:",104,"^4R",1,"^4S",true,"^H",["^I",["^4K",["^I",[["^5?"]]]]],"^6","Set the fulcro logging function.\n\n  log-fn - A (fn [{:keys [file line] :as location} level & args] ...)"],"~$logging-priority",["^ ","^L","~$fulcro.logging/logging-priority","^7","fulcro/logging.cljc","^8",20,"^9",1,"^:",20,"^;",22,"^5",["^ ","^7","fulcro/logging.cljc","^8",20,"^9",6,"^:",20,"^;",22],"^4Z","~$cljs.core/IMap"]],"^1F",["^ ","^O","^O","^1;","^1;"],"~:cljs.analyzer/constants",["^ ","^1D",["^E",["~:warn","~:trace","^7","~:debug","~:all","~:fatal","^8","~:info","~:error","~:none"]],"~:order",["^5H","^5F","^5G","^5J","^5E","^5K","^5I","^5L","^7","^8"]],"^1M",["^ ","^1F",["^E",[]],"^1E",["^E",[]]],"^1N",["^ "],"^1O",["^1>","^1;","^1C","^@","^1:","^1=","^1A","^17"]],"^N","^O","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^3B",[["^5P","~:static-fns"],true,["^5P","~:elide-asserts"],false,["^5P","~:optimize-constants"],null,["^5P","~:external-config"],null,["^5P","~:tooling-config"],null,["^5P","~:emit-constants"],null,["^5P","~:infer-externs"],true,["^5P","^1V"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5P","~:fn-invoke-direct"],null,["^5P","^1X"],"/dev/null"]]]