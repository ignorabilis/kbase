["^ ","~:output",["^ ","~:js","goog.provide('garden.core');\r\ngoog.require('cljs.core');\r\ngoog.require('garden.compiler');\r\n/**\r\n * Convert a variable number of Clojure data structure to a string of\r\n *   CSS. The first argument may be a list of flags for the compiler.\r\n */\r\ngarden.core.css = (function garden$core$css(var_args){\r\nvar args__4534__auto__ = [];\r\nvar len__4531__auto___31803 = arguments.length;\r\nvar i__4532__auto___31804 = (0);\r\nwhile(true){\r\nif((i__4532__auto___31804 < len__4531__auto___31803)){\r\nargs__4534__auto__.push((arguments[i__4532__auto___31804]));\r\n\r\nvar G__31805 = (i__4532__auto___31804 + (1));\r\ni__4532__auto___31804 = G__31805;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\r\nreturn garden.core.css.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\r\n});\r\n\r\ngarden.core.css.cljs$core$IFn$_invoke$arity$variadic = (function (rules){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(garden.compiler.compile_css,rules);\r\n});\r\n\r\ngarden.core.css.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\ngarden.core.css.cljs$lang$applyTo = (function (seq31799){\r\nvar self__4519__auto__ = this;\r\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq31799));\r\n});\r\n\r\n/**\r\n * Convert a variable number of maps into a string of CSS for use with\r\n *   the HTML `style` attribute.\r\n */\r\ngarden.core.style = (function garden$core$style(var_args){\r\nvar args__4534__auto__ = [];\r\nvar len__4531__auto___31811 = arguments.length;\r\nvar i__4532__auto___31812 = (0);\r\nwhile(true){\r\nif((i__4532__auto___31812 < len__4531__auto___31811)){\r\nargs__4534__auto__.push((arguments[i__4532__auto___31812]));\r\n\r\nvar G__31813 = (i__4532__auto___31812 + (1));\r\ni__4532__auto___31812 = G__31813;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\r\nreturn garden.core.style.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\r\n});\r\n\r\ngarden.core.style.cljs$core$IFn$_invoke$arity$variadic = (function (maps){\r\nreturn garden.compiler.compile_style(maps);\r\n});\r\n\r\ngarden.core.style.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\ngarden.core.style.cljs$lang$applyTo = (function (seq31806){\r\nvar self__4519__auto__ = this;\r\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq31806));\r\n});\r\n\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Convert Clojure data structures to CSS.","~:file","garden/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$clojure.stacktrace","~$cljs.stacktrace","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$garden.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$garden.compiler","^L","~$compiler","^L","~$cljs.core","^N","~$goog","^O"],"~:seen",["^E",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^N","^N","^L","^L","^M","^L"],"~:form",["~#list",["~$ns","^G","Convert Clojure data structures to CSS.",["^U",["^Q",["^L","~:as","^M"]]]]],"~:flags",["^ ","^Q",["^E",[]]],"~:js-deps",["^ "],"~:deps",["^O","^N","^L"]],"^I","^G","~:resource-id",["~:shadow.build.classpath/resource","garden/core.cljc"],"~:compiled-at",1537360506260,"~:resource-name","garden/core.cljc","~:warnings",[],"~:source","(ns garden.core\n  \"Convert Clojure data structures to CSS.\"\n  (:require [garden.compiler :as compiler]))\n\n(defn ^String css\n  \"Convert a variable number of Clojure data structure to a string of\n  CSS. The first argument may be a list of flags for the compiler.\"\n  {:arglists '([rules] [flags? rules])}\n  [& rules]\n  (apply compiler/compile-css rules))\n\n(defn ^String style\n  \"Convert a variable number of maps into a string of CSS for use with\n  the HTML `style` attribute.\"\n  [& maps]\n  (compiler/compile-style maps))\n\n","~:reader-features",["^E",["~:cljs"]],"~:source-map",["^ ","~i4",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",3],["^ ","^18",0,"^19",3],["^ ","^18",18,"^19",7],["^ ","^18",44,"^19",7,"^F","var_args"],["^ ","^18",0,"^19",8],["^ ","^18",0,"^19",8],["^ ","^18",4,"^19",8,"^F","args__4534__auto__"],["^ ","^18",25,"^19",8],["^ ","^18",0,"^19",9],["^ ","^18",0,"^19",9],["^ ","^18",4,"^19",9,"^F","len__4531__auto__"],["^ ","^18",30,"^19",9],["^ ","^18",30,"^19",9],["^ ","^18",0,"^19",10],["^ ","^18",0,"^19",10],["^ ","^18",4,"^19",10,"^F","i__4532__auto__"],["^ ","^18",28,"^19",10],["^ ","^18",0,"^19",12],["^ ","^18",0,"^19",12],["^ ","^18",3,"^19",12],["^ ","^18",4,"^19",12,"^F","i__4532__auto__"],["^ ","^18",28,"^19",12,"^F","len__4531__auto__"],["^ ","^18",0,"^19",13],["^ ","^18",0,"^19",13],["^ ","^18",0,"^19",13,"^F","args__4534__auto__"],["^ ","^18",24,"^19",13],["^ ","^18",25,"^19",13],["^ ","^18",35,"^19",13,"^F","i__4532__auto__"],["^ ","^18",0,"^19",15],["^ ","^18",15,"^19",15],["^ ","^18",16,"^19",15,"^F","i__4532__auto__"],["^ ","^18",40,"^19",15],["^ ","^18",0,"^19",19],["^ ","^18",0,"^19",23],["^ ","^18",4,"^19",23,"^F","argseq__4535__auto__"],["^ ","^18",27,"^19",23],["^ ","^18",29,"^19",23],["^ ","^18",30,"^19",23],["^ ","^18",36,"^19",23],["^ ","^18",36,"^19",23,"^F","args__4534__auto__"],["^ ","^18",64,"^19",23],["^ ","^18",64,"^19",23],["^ ","^18",69,"^19",23,"^F","cljs.core/IndexedSeq"],["^ ","^18",90,"^19",23],["^ ","^18",90,"^19",23,"^F","args__4534__auto__"],["^ ","^18",115,"^19",23],["^ ","^18",120,"^19",23],["^ ","^18",124,"^19",23],["^ ","^18",131,"^19",23],["^ ","^18",0,"^19",24],["^ ","^18",0,"^19",24],["^ ","^18",7,"^19",24,"^F","garden.core/css"],["^ ","^18",60,"^19",24,"^F","argseq__4535__auto__"],["^ ","^18",0,"^19",27],["^ ","^18",0,"^19",27],["^ ","^18",0,"^19",27],["^ ","^18",0,"^19",27,"^F","garden.core/css"],["^ ","^18",55,"^19",27],["^ ","^18",0,"^19",28],["^ ","^18",0,"^19",31],["^ ","^18",0,"^19",31],["^ ","^18",0,"^19",31,"^F","garden.core/css"],["^ ","^18",42,"^19",31],["^ ","^18",0,"^19",33],["^ ","^18",0,"^19",34],["^ ","^18",0,"^19",34],["^ ","^18",0,"^19",34,"^F","garden.core/css"],["^ ","^18",36,"^19",34],["^ ","^18",47,"^19",34,"^F","seq31799"],["^ ","^18",0,"^19",35],["^ ","^18",0,"^19",35],["^ ","^18",4,"^19",35,"^F","self__4519__auto__"],["^ ","^18",25,"^19",35],["^ ","^18",0,"^19",36],["^ ","^18",0,"^19",36],["^ ","^18",7,"^19",36,"^F","self__4519__auto__"],["^ ","^18",63,"^19",36],["^ ","^18",63,"^19",36,"^F","cljs.core/seq"],["^ ","^18",77,"^19",36,"^F","seq31799"],["^ ","^18",0,"^19",39]],"~i14",[["^ ","^18",0,"^19",7,"^F","garden.core/css"]]],"~i8",["^ ","~i5",[["^ ","^18",66,"^19",27,"^F","rules"]]],"~i9",["^ ","~i2",[["^ ","^18",0,"^19",28]],"~i3",[["^ ","^18",7,"^19",28,"^F","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"~i9",[["^ ","^18",53,"^19",28,"^F","garden.compiler/compile-css"]],"~i30",[["^ ","^18",81,"^19",28,"^F","rules"]]],"~i11",["^ ","~i0",[["^ ","^18",0,"^19",39],["^ ","^18",0,"^19",39],["^ ","^18",20,"^19",43],["^ ","^18",48,"^19",43,"^F","var_args"],["^ ","^18",0,"^19",44],["^ ","^18",0,"^19",44],["^ ","^18",4,"^19",44,"^F","args__4534__auto__"],["^ ","^18",25,"^19",44],["^ ","^18",0,"^19",45],["^ ","^18",0,"^19",45],["^ ","^18",4,"^19",45,"^F","len__4531__auto__"],["^ ","^18",30,"^19",45],["^ ","^18",30,"^19",45],["^ ","^18",0,"^19",46],["^ ","^18",0,"^19",46],["^ ","^18",4,"^19",46,"^F","i__4532__auto__"],["^ ","^18",28,"^19",46],["^ ","^18",0,"^19",48],["^ ","^18",0,"^19",48],["^ ","^18",3,"^19",48],["^ ","^18",4,"^19",48,"^F","i__4532__auto__"],["^ ","^18",28,"^19",48,"^F","len__4531__auto__"],["^ ","^18",0,"^19",49],["^ ","^18",0,"^19",49],["^ ","^18",0,"^19",49,"^F","args__4534__auto__"],["^ ","^18",24,"^19",49],["^ ","^18",25,"^19",49],["^ ","^18",35,"^19",49,"^F","i__4532__auto__"],["^ ","^18",0,"^19",51],["^ ","^18",15,"^19",51],["^ ","^18",16,"^19",51,"^F","i__4532__auto__"],["^ ","^18",40,"^19",51],["^ ","^18",0,"^19",55],["^ ","^18",0,"^19",59],["^ ","^18",4,"^19",59,"^F","argseq__4535__auto__"],["^ ","^18",27,"^19",59],["^ ","^18",29,"^19",59],["^ ","^18",30,"^19",59],["^ ","^18",36,"^19",59],["^ ","^18",36,"^19",59,"^F","args__4534__auto__"],["^ ","^18",64,"^19",59],["^ ","^18",64,"^19",59],["^ ","^18",69,"^19",59,"^F","cljs.core/IndexedSeq"],["^ ","^18",90,"^19",59],["^ ","^18",90,"^19",59,"^F","args__4534__auto__"],["^ ","^18",115,"^19",59],["^ ","^18",120,"^19",59],["^ ","^18",124,"^19",59],["^ ","^18",131,"^19",59],["^ ","^18",0,"^19",60],["^ ","^18",0,"^19",60],["^ ","^18",7,"^19",60,"^F","garden.core/style"],["^ ","^18",62,"^19",60,"^F","argseq__4535__auto__"],["^ ","^18",0,"^19",63],["^ ","^18",0,"^19",63],["^ ","^18",0,"^19",63],["^ ","^18",0,"^19",63,"^F","garden.core/style"],["^ ","^18",57,"^19",63],["^ ","^18",0,"^19",64],["^ ","^18",0,"^19",67],["^ ","^18",0,"^19",67],["^ ","^18",0,"^19",67,"^F","garden.core/style"],["^ ","^18",44,"^19",67],["^ ","^18",0,"^19",69],["^ ","^18",0,"^19",70],["^ ","^18",0,"^19",70],["^ ","^18",0,"^19",70,"^F","garden.core/style"],["^ ","^18",38,"^19",70],["^ ","^18",49,"^19",70,"^F","seq31806"],["^ ","^18",0,"^19",71],["^ ","^18",0,"^19",71],["^ ","^18",4,"^19",71,"^F","self__4519__auto__"],["^ ","^18",25,"^19",71],["^ ","^18",0,"^19",72],["^ ","^18",0,"^19",72],["^ ","^18",7,"^19",72,"^F","self__4519__auto__"],["^ ","^18",63,"^19",72],["^ ","^18",63,"^19",72,"^F","cljs.core/seq"],["^ ","^18",77,"^19",72,"^F","seq31806"],["^ ","^18",0,"^19",75]],"^1:",[["^ ","^18",0,"^19",43,"^F","garden.core/style"]]],"^1:",["^ ","~i5",[["^ ","^18",68,"^19",63,"^F","maps"]]],"~i15",["^ ","~i2",[["^ ","^18",0,"^19",64]],"~i3",[["^ ","^18",7,"^19",64,"^F","garden.compiler/compile-style"]],"~i26",[["^ ","^18",37,"^19",64,"^F","maps"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^N"],[1537260906000],["^10","cljs/tools/reader/impl/utils.cljs"],[1537358547920,"^O","^N","~$clojure.string","~$goog.string"],["^10","goog/math/math.js"],[1508737613441,"^O","~$goog.array","~$goog.asserts"],["^10","goog/string/stringformat.js"],[1508737613441,"^O","^1D"],["^10","goog/array/array.js"],[1508737613441,"^O","^1F"],["^10","garden/color.cljc"],[1537260906883,"^O","^N","^1C","~$garden.util"],["^1B","~$cljs.tools.reader.reader-types"],[1537358547000],["^10","goog/debug/error.js"],[1508737613441,"^O"],["^10","garden/units.cljc"],[1537260906883,"^O","^N","~$cljs.reader","~$garden.types","^1G"],["^1B","^L"],[1537260906000],["^10","cljs/tools/reader/edn.cljs"],[1537358547920,"^O","^N","~$cljs.tools.reader.impl.errors","^1H","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^1D","~$goog.string.StringBuffer"],["^10","goog/dom/nodetype.js"],[1508737613441,"^O"],["^10","cljs/tools/reader/impl/inspect.cljs"],[1537358547920,"^O","^N"],["^10","cljs/tools/reader.cljs"],[1537358547920,"^O","^N","^1H","^1L","^1M","^1K","^1E","^1D","^1O"],["^1B","~$garden.color"],[1537260906000],["^10","goog/object/object.js"],[1508737613441,"^O"],"~:SHADOW-TIMESTAMP",[1537358551000,1537260906000],["^10","goog/math/long.js"],[1508737613441,"^O","^1F","~$goog.reflect"],["^1B","~$garden.selectors"],[1537260906000],["^10","goog/functions/functions.js"],[1508737613441,"^O"],["^10","goog/structs/map.js"],[1508737613441,"^O","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^10","garden/core.cljc"],[1537260906883,"^O","^N","^L"],["^10","cljs/reader.cljs"],[1537260906289,"^O","^N","^1V","^1N","~$cljs.tools.reader.edn","^1O"],["^10","goog/asserts/asserts.js"],[1508737613441,"^O","~$goog.debug.Error","~$goog.dom.NodeType","^1D"],["^10","garden/types.cljc"],[1537260906883,"^O","^N"],["^10","goog/uri/uri.js"],[1508737613441,"^O","^1E","^1F","^1D","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^10","garden/selectors.cljc"],[1537260906883,"^O","^N","^1C"],["^10","goog/base.js"],[1508737613441],["^10","garden/util.cljc"],[1537260906883,"^O","^N","^1C","^1J","^1D","~$goog.string.format"],["^10","garden/compression.cljc"],[1537260906883,"^O","^N"],["^10","goog/structs/structs.js"],[1508737613441,"^O","^1E","^1V"],["^10","cljs/tools/reader/impl/errors.cljs"],[1537358547920,"^O","^N","^1H","^1C","~$cljs.tools.reader.impl.inspect"],["^10","clojure/string.cljs"],[1537260906289,"^O","^N","^1D","^1O"],["^10","goog/string/string.js"],[1508737613441,"^O"],["^10","goog/reflect/reflect.js"],[1508737613441,"^O"],["^10","goog/string/stringbuffer.js"],[1508737613441,"^O"],["^10","cljs/tools/reader/reader_types.cljs"],[1537358547920,"^O","^N","^1L","^1D","^1O"],["^10","goog/iter/iter.js"],[1508737613441,"^O","^1E","^1F","~$goog.functions","~$goog.math"],["^10","cljs/tools/reader/impl/commons.cljs"],[1537358547920,"^O","^N","^1K","^1H","^1L"],["^10","cljs/core.cljs"],[1537260906289,"~$goog.math.Long","~$goog.math.Integer","^1D","^1V","^1E","~$goog.Uri","^1O"],["^10","goog/math/integer.js"],[1508737613441,"^O"],["^10","goog/uri/utils.js"],[1508737613441,"^O","^1E","^1F","^1D"],["^10","garden/compiler.cljc"],[1537260906883,"^O","^N","^1C","^1P","~$garden.compression","^1S","~$garden.units","^1G","^1J"],["^1B","^2;"],[1537260906000],["^1B","^1I"],[1537260906000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Convert Clojure data structures to CSS.","^7","garden/core.cljc","^8",1,"^9",5,"^:",1,"^;",16],"^<",["^ ","^=","^>","^?","^@","^A","^B"],"^C",null,"^D",["^E",[]],"^F","^G","^J",null,"^K",["^ ","^L","^L","^M","^L","^N","^N","^O","^O"],"^P",["^E",["^Q"]],"^R",null,"~:defs",["^ ","~$css",["^ ","~:protocol-inline",null,"^5",["^ ","^7","garden/core.cljc","^8",5,"^9",15,"^:",5,"^;",18,"~:tag","~$String","~:arglists",["^U",["~$quote",["^U",[["~$rules"],["~$flags?","^2D"]]]]],"^6","Convert a variable number of Clojure data structure to a string of\n  CSS. The first argument may be a list of flags for the compiler.","~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",0,"~:method-params",[["^U",["^2D"]]],"^2B",["^U",[["~$&","^2D"]]],"~:arglists-meta",["^U",[null]]]],"^F","~$garden.core/css","^2G",true,"^7","garden/core.cljc","^;",18,"^2F",["^ ","^2G",true,"^2H",0,"^2I",[["^U",["^2D"]]],"^2B",["^U",[["~$&","^2D"]]],"^2J",["^U",[null]]],"^2I",[["^U",["^2D"]]],"~:protocol-impl",null,"^2J",["^U",[null]],"^9",1,"^8",5,"~:ret-tag","^2A","^:",5,"^2H",0,"^2@","^2A","~:fn-var",true,"^2B",["^U",[["~$&","^2D"]]],"^6","Convert a variable number of Clojure data structure to a string of\n  CSS. The first argument may be a list of flags for the compiler."],"~$style",["^ ","^2?",null,"^5",["^ ","^7","garden/core.cljc","^8",12,"^9",15,"^:",12,"^;",20,"^2@","^2A","^2B",["^U",["^2C",["^U",[["~$&","~$maps"]]]]],"^6","Convert a variable number of maps into a string of CSS for use with\n  the HTML `style` attribute.","^2F",["^ ","^2G",true,"^2H",0,"^2I",[["^U",["^2P"]]],"^2B",["^U",[["~$&","^2P"]]],"^2J",["^U",[null]]]],"^F","~$garden.core/style","^2G",true,"^7","garden/core.cljc","^;",20,"^2F",["^ ","^2G",true,"^2H",0,"^2I",[["^U",["^2P"]]],"^2B",["^U",[["~$&","^2P"]]],"^2J",["^U",[null]]],"^2I",[["^U",["^2P"]]],"^2L",null,"^2J",["^U",[null]],"^9",1,"^8",12,"^2M","^2A","^:",12,"^2H",0,"^2@","^2A","^2N",true,"^2B",["^U",[["~$&","^2P"]]],"^6","Convert a variable number of maps into a string of CSS for use with\n  the HTML `style` attribute."]],"^S",["^ ","^N","^N","^L","^L","^M","^L"],"^X",["^ ","^Q",["^E",[]]],"^Y",["^ "],"^Z",["^O","^N","^L"]],"^I","^G","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1A",[["^2T","~:static-fns"],true,["^2T","~:elide-asserts"],false,["^2T","~:optimize-constants"],null,["^2T","~:external-config"],null,["^2T","~:tooling-config"],null,["^2T","~:emit-constants"],null,["^2T","~:infer-externs"],true,["^2T","^15"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^2T","~:fn-invoke-direct"],null,["^2T","^17"],"/dev/null"]]]