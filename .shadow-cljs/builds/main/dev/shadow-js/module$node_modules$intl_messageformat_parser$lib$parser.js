["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/intl-messageformat-parser/lib/parser.js"],"~:js","shadow$provide.module$node_modules$intl_messageformat_parser$lib$parser=function(global,process,require,module,exports,shadow$shims){exports[\"default\"]=function(){function peg$SyntaxError(message,expected,found,location){this.message=message;this.expected=expected;this.found=found;this.location=location;this.name=\"SyntaxError\";\"function\"===typeof Error.captureStackTrace&&Error.captureStackTrace(this,peg$SyntaxError)}(function(child,parent){function ctor(){this.constructor=child}ctor.prototype=parent.prototype;\nchild.prototype=new ctor})(peg$SyntaxError,Error);return{SyntaxError:peg$SyntaxError,parse:function(input){function location$jscomp$0(){return peg$computeLocation(peg$savedPos,peg$currPos)}function peg$computePosDetails(pos){var details=peg$posDetailsCache[pos],p;if(!details){for(p=pos-1;!peg$posDetailsCache[p];)p--;details=peg$posDetailsCache[p];for(details={line:details.line,column:details.column,seenCR:details.seenCR};p<pos;){var ch=input.charAt(p);\"\\n\"===ch?(details.seenCR||details.line++,details.column=\n1,details.seenCR=!1):\"\\r\"===ch||\"\\u2028\"===ch||\"\\u2029\"===ch?(details.line++,details.column=1,details.seenCR=!0):(details.column++,details.seenCR=!1);p++}peg$posDetailsCache[pos]=details}return details}function peg$computeLocation(startPos,endPos){var startPosDetails=peg$computePosDetails(startPos),endPosDetails=peg$computePosDetails(endPos);return{start:{offset:startPos,line:startPosDetails.line,column:startPosDetails.column},end:{offset:endPos,line:endPosDetails.line,column:endPosDetails.column}}}\nfunction peg$fail(expected){peg$currPos<peg$maxFailPos||(peg$currPos>peg$maxFailPos&&(peg$maxFailPos=peg$currPos,peg$maxFailExpected=[]),peg$maxFailExpected.push(expected))}function peg$parsestart(){return peg$parsemessageFormatPattern()}function peg$parsemessageFormatPattern(){var s2;var s0=peg$currPos;var s1=[];for(s2=peg$parsemessageFormatElement();s2!==peg$FAILED;)s1.push(s2),s2=peg$parsemessageFormatElement();s1!==peg$FAILED&&(peg$savedPos=s0,s1={type:\"messageFormatPattern\",elements:s1,location:location$jscomp$0()});\nreturn s1}function peg$parsemessageFormatElement(){var s0=peg$currPos;var s0$jscomp$0=peg$currPos;var s1=[];var s2=peg$currPos;var s3=peg$parse_();if(s3!==peg$FAILED){var s4=peg$parsechars();if(s4!==peg$FAILED){var s5=peg$parse_();s5!==peg$FAILED?s2=s3=[s3,s4,s5]:(peg$currPos=s2,s2=peg$FAILED)}else peg$currPos=s2,s2=peg$FAILED}else peg$currPos=s2,s2=peg$FAILED;if(s2!==peg$FAILED)for(;s2!==peg$FAILED;)s1.push(s2),s2=peg$currPos,s3=peg$parse_(),s3!==peg$FAILED?(s4=peg$parsechars(),s4!==peg$FAILED?(s5=\npeg$parse_(),s5!==peg$FAILED?s2=s3=[s3,s4,s5]:(peg$currPos=s2,s2=peg$FAILED)):(peg$currPos=s2,s2=peg$FAILED)):(peg$currPos=s2,s2=peg$FAILED);else s1=peg$FAILED;if(s1!==peg$FAILED){peg$savedPos=s0$jscomp$0;s0$jscomp$0=\"\";var innerLen;s2=0;for(s4=s1.length;s2<s4;s2+=1)for(s5=s1[s2],s3=0,innerLen=s5.length;s3<innerLen;s3+=1)s0$jscomp$0+=s5[s3];s1=s0$jscomp$0}s0$jscomp$0=s1;s0$jscomp$0===peg$FAILED&&(s0$jscomp$0=peg$currPos,s1=peg$parsews(),s0$jscomp$0=s1!==peg$FAILED?input.substring(s0$jscomp$0,peg$currPos):\ns1);s1=s0$jscomp$0;s1!==peg$FAILED&&(peg$savedPos=s0,s1={type:\"messageTextElement\",value:s1,location:location$jscomp$0()});s0=s1;if(s0===peg$FAILED)if(s0=peg$currPos,123===input.charCodeAt(peg$currPos)?(s1=peg$c5,peg$currPos++):(s1=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c6)),s1!==peg$FAILED)if(s1=peg$parse_(),s1!==peg$FAILED){s1=peg$parsenumber();if(s1===peg$FAILED){s1=peg$currPos;s0$jscomp$0=[];peg$c3.test(input.charAt(peg$currPos))?(s2=input.charAt(peg$currPos),peg$currPos++):(s2=peg$FAILED,\n0===peg$silentFails&&peg$fail(peg$c4));if(s2!==peg$FAILED)for(;s2!==peg$FAILED;)s0$jscomp$0.push(s2),peg$c3.test(input.charAt(peg$currPos))?(s2=input.charAt(peg$currPos),peg$currPos++):(s2=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c4));else s0$jscomp$0=peg$FAILED;s1=s0$jscomp$0!==peg$FAILED?input.substring(s1,peg$currPos):s0$jscomp$0}if(s1!==peg$FAILED)if(s0$jscomp$0=peg$parse_(),s0$jscomp$0!==peg$FAILED){s0$jscomp$0=peg$currPos;44===input.charCodeAt(peg$currPos)?(s2=peg$c7,peg$currPos++):(s2=\npeg$FAILED,0===peg$silentFails&&peg$fail(peg$c8));if(s2!==peg$FAILED)if(s3=peg$parse_(),s3!==peg$FAILED){s4=peg$currPos;input.substr(peg$currPos,6)===peg$c12?(s5=peg$c12,peg$currPos+=6):(s5=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c13));s5===peg$FAILED&&(input.substr(peg$currPos,4)===peg$c14?(s5=peg$c14,peg$currPos+=4):(s5=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c15)),s5===peg$FAILED&&(input.substr(peg$currPos,4)===peg$c16?(s5=peg$c16,peg$currPos+=4):(s5=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c17))));\nif(s5!==peg$FAILED)if(innerLen=peg$parse_(),innerLen!==peg$FAILED){innerLen=peg$currPos;if(44===input.charCodeAt(peg$currPos)){var s4$jscomp$0=peg$c7;peg$currPos++}else s4$jscomp$0=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c8);if(s4$jscomp$0!==peg$FAILED){var s5$jscomp$0=peg$parse_();if(s5$jscomp$0!==peg$FAILED){var s6=peg$parsechars();s6!==peg$FAILED?innerLen=s4$jscomp$0=[s4$jscomp$0,s5$jscomp$0,s6]:(peg$currPos=innerLen,innerLen=peg$FAILED)}else peg$currPos=innerLen,innerLen=peg$FAILED}else peg$currPos=\ninnerLen,innerLen=peg$FAILED;innerLen===peg$FAILED&&(innerLen=null);innerLen!==peg$FAILED?(peg$savedPos=s4,s4=s5={type:s5+\"Format\",style:innerLen&&innerLen[2],location:location$jscomp$0()}):(peg$currPos=s4,s4=peg$FAILED)}else peg$currPos=s4,s4=peg$FAILED;else peg$currPos=s4,s4=peg$FAILED;if(s4===peg$FAILED&&(s4=peg$currPos,input.substr(peg$currPos,6)===peg$c19?(s5=peg$c19,peg$currPos+=6):(s5=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c20)),s5!==peg$FAILED?(s5=peg$parse_(),s5!==peg$FAILED?(44===\ninput.charCodeAt(peg$currPos)?(s5=peg$c7,peg$currPos++):(s5=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c8)),s5!==peg$FAILED?(s5=peg$parse_(),s5!==peg$FAILED?(s5=peg$parsepluralStyle(),s5!==peg$FAILED?(peg$savedPos=s4,s4=s5={type:s5.type,ordinal:!1,offset:s5.offset||0,options:s5.options,location:location$jscomp$0()}):(peg$currPos=s4,s4=peg$FAILED)):(peg$currPos=s4,s4=peg$FAILED)):(peg$currPos=s4,s4=peg$FAILED)):(peg$currPos=s4,s4=peg$FAILED)):(peg$currPos=s4,s4=peg$FAILED),s4===peg$FAILED&&(s4=peg$currPos,\ninput.substr(peg$currPos,13)===peg$c22?(s5=peg$c22,peg$currPos+=13):(s5=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c23)),s5!==peg$FAILED?(s5=peg$parse_(),s5!==peg$FAILED?(44===input.charCodeAt(peg$currPos)?(s5=peg$c7,peg$currPos++):(s5=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c8)),s5!==peg$FAILED?(s5=peg$parse_(),s5!==peg$FAILED?(s5=peg$parsepluralStyle(),s5!==peg$FAILED?(peg$savedPos=s4,s4=s5={type:s5.type,ordinal:!0,offset:s5.offset||0,options:s5.options,location:location$jscomp$0()}):(peg$currPos=\ns4,s4=peg$FAILED)):(peg$currPos=s4,s4=peg$FAILED)):(peg$currPos=s4,s4=peg$FAILED)):(peg$currPos=s4,s4=peg$FAILED)):(peg$currPos=s4,s4=peg$FAILED),s4===peg$FAILED)))if(s4=peg$currPos,input.substr(peg$currPos,6)===peg$c25?(s5=peg$c25,peg$currPos+=6):(s5=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c26)),s5!==peg$FAILED)if(s5=peg$parse_(),s5!==peg$FAILED)if(44===input.charCodeAt(peg$currPos)?(s5=peg$c7,peg$currPos++):(s5=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c8)),s5!==peg$FAILED)if(s5=peg$parse_(),\ns5!==peg$FAILED){s5=[];innerLen=peg$parseoptionalFormatPattern();if(innerLen!==peg$FAILED)for(;innerLen!==peg$FAILED;)s5.push(innerLen),innerLen=peg$parseoptionalFormatPattern();else s5=peg$FAILED;s5!==peg$FAILED?(peg$savedPos=s4,s4=s5={type:\"selectFormat\",options:s5,location:location$jscomp$0()}):(peg$currPos=s4,s4=peg$FAILED)}else peg$currPos=s4,s4=peg$FAILED;else peg$currPos=s4,s4=peg$FAILED;else peg$currPos=s4,s4=peg$FAILED;else peg$currPos=s4,s4=peg$FAILED;s4!==peg$FAILED?s0$jscomp$0=s2=[s2,\ns3,s4]:(peg$currPos=s0$jscomp$0,s0$jscomp$0=peg$FAILED)}else peg$currPos=s0$jscomp$0,s0$jscomp$0=peg$FAILED;else peg$currPos=s0$jscomp$0,s0$jscomp$0=peg$FAILED;s0$jscomp$0===peg$FAILED&&(s0$jscomp$0=null);s0$jscomp$0!==peg$FAILED?(s2=peg$parse_(),s2!==peg$FAILED?(125===input.charCodeAt(peg$currPos)?(s3=peg$c9,peg$currPos++):(s3=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c10)),s3!==peg$FAILED?(peg$savedPos=s0,s0=s1={type:\"argumentElement\",id:s1,format:s0$jscomp$0&&s0$jscomp$0[2],location:location$jscomp$0()}):\n(peg$currPos=s0,s0=peg$FAILED)):(peg$currPos=s0,s0=peg$FAILED)):(peg$currPos=s0,s0=peg$FAILED)}else peg$currPos=s0,s0=peg$FAILED;else peg$currPos=s0,s0=peg$FAILED}else peg$currPos=s0,s0=peg$FAILED;else peg$currPos=s0,s0=peg$FAILED;return s0}function peg$parseoptionalFormatPattern(){var s0=peg$currPos;var s1=peg$parse_();if(s1!==peg$FAILED){var s3=s1=peg$currPos;if(61===input.charCodeAt(peg$currPos)){var s7=peg$c28;peg$currPos++}else s7=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c29);if(s7!==peg$FAILED){var s3$jscomp$0=\npeg$parsenumber();s3$jscomp$0!==peg$FAILED?s3=s7=[s7,s3$jscomp$0]:(peg$currPos=s3,s3=peg$FAILED)}else peg$currPos=s3,s3=peg$FAILED;s1=s3!==peg$FAILED?input.substring(s1,peg$currPos):s3;s1===peg$FAILED&&(s1=peg$parsechars());s1!==peg$FAILED?(s3=peg$parse_(),s3!==peg$FAILED?(123===input.charCodeAt(peg$currPos)?(s3=peg$c5,peg$currPos++):(s3=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c6)),s3!==peg$FAILED?(s3=peg$parse_(),s3!==peg$FAILED?(s3=peg$parsemessageFormatPattern(),s3!==peg$FAILED?(s7=peg$parse_(),\ns7!==peg$FAILED?(125===input.charCodeAt(peg$currPos)?(s7=peg$c9,peg$currPos++):(s7=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c10)),s7!==peg$FAILED?(peg$savedPos=s0,s0=s1={type:\"optionalFormatPattern\",selector:s1,value:s3,location:location$jscomp$0()}):(peg$currPos=s0,s0=peg$FAILED)):(peg$currPos=s0,s0=peg$FAILED)):(peg$currPos=s0,s0=peg$FAILED)):(peg$currPos=s0,s0=peg$FAILED)):(peg$currPos=s0,s0=peg$FAILED)):(peg$currPos=s0,s0=peg$FAILED)):(peg$currPos=s0,s0=peg$FAILED)}else peg$currPos=s0,s0=\npeg$FAILED;return s0}function peg$parsepluralStyle(){var s0;var s1=s0=peg$currPos;if(input.substr(peg$currPos,7)===peg$c31){var s2=peg$c31;peg$currPos+=7}else s2=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c32);s2!==peg$FAILED?(s2=peg$parse_(),s2!==peg$FAILED?(s2=peg$parsenumber(),s2!==peg$FAILED?(peg$savedPos=s1,s1=s2):(peg$currPos=s1,s1=peg$FAILED)):(peg$currPos=s1,s1=peg$FAILED)):(peg$currPos=s1,s1=peg$FAILED);s1===peg$FAILED&&(s1=null);if(s1!==peg$FAILED)if(s2=peg$parse_(),s2!==peg$FAILED){s2=\n[];var s4=peg$parseoptionalFormatPattern();if(s4!==peg$FAILED)for(;s4!==peg$FAILED;)s2.push(s4),s4=peg$parseoptionalFormatPattern();else s2=peg$FAILED;s2!==peg$FAILED?(peg$savedPos=s0,s0=s1={type:\"pluralFormat\",offset:s1,options:s2,location:location$jscomp$0()}):(peg$currPos=s0,s0=peg$FAILED)}else peg$currPos=s0,s0=peg$FAILED;else peg$currPos=s0,s0=peg$FAILED;return s0}function peg$parsews(){peg$silentFails++;var s0=[];if(peg$c36.test(input.charAt(peg$currPos))){var s1=input.charAt(peg$currPos);peg$currPos++}else s1=\npeg$FAILED,0===peg$silentFails&&peg$fail(peg$c37);if(s1!==peg$FAILED)for(;s1!==peg$FAILED;)s0.push(s1),peg$c36.test(input.charAt(peg$currPos))?(s1=input.charAt(peg$currPos),peg$currPos++):(s1=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c37));else s0=peg$FAILED;peg$silentFails--;s0===peg$FAILED&&0===peg$silentFails&&peg$fail(peg$c35);return s0}function peg$parse_(){var s2;peg$silentFails++;var s0=peg$currPos;var s1=[];for(s2=peg$parsews();s2!==peg$FAILED;)s1.push(s2),s2=peg$parsews();s0=s1!==peg$FAILED?\ninput.substring(s0,peg$currPos):s1;peg$silentFails--;s0===peg$FAILED&&0===peg$silentFails&&peg$fail(peg$c38);return s0}function peg$parsedigit(){if(peg$c39.test(input.charAt(peg$currPos))){var s0=input.charAt(peg$currPos);peg$currPos++}else s0=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c40);return s0}function peg$parsehexDigit(){if(peg$c41.test(input.charAt(peg$currPos))){var s0=input.charAt(peg$currPos);peg$currPos++}else s0=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c42);return s0}function peg$parsenumber(){var s5;\nvar s0=peg$currPos;if(48===input.charCodeAt(peg$currPos)){var s1=peg$c43;peg$currPos++}else s1=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c44);if(s1===peg$FAILED){var s2=s1=peg$currPos;if(peg$c45.test(input.charAt(peg$currPos))){var s3=input.charAt(peg$currPos);peg$currPos++}else s3=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c46);if(s3!==peg$FAILED){var s4=[];for(s5=peg$parsedigit();s5!==peg$FAILED;)s4.push(s5),s5=peg$parsedigit();s4!==peg$FAILED?s2=s3=[s3,s4]:(peg$currPos=s2,s2=peg$FAILED)}else peg$currPos=\ns2,s2=peg$FAILED;s1=s2!==peg$FAILED?input.substring(s1,peg$currPos):s2}s1!==peg$FAILED&&(peg$savedPos=s0,s1=parseInt(s1,10));return s1}function peg$parsechar(){if(peg$c48.test(input.charAt(peg$currPos))){var s0=input.charAt(peg$currPos);peg$currPos++}else s0=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c49);if(s0===peg$FAILED){s0=peg$currPos;if(input.substr(peg$currPos,2)===peg$c50){var s1=peg$c50;peg$currPos+=2}else s1=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c51);s1!==peg$FAILED&&(peg$savedPos=\ns0,s1=\"\\\\\");s0=s1;if(s0===peg$FAILED&&(s0=peg$currPos,input.substr(peg$currPos,2)===peg$c53?(s1=peg$c53,peg$currPos+=2):(s1=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c54)),s1!==peg$FAILED&&(peg$savedPos=s0,s1=\"\\\\#\"),s0=s1,s0===peg$FAILED&&(s0=peg$currPos,input.substr(peg$currPos,2)===peg$c56?(s1=peg$c56,peg$currPos+=2):(s1=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c57)),s1!==peg$FAILED&&(peg$savedPos=s0,s1=\"{\"),s0=s1,s0===peg$FAILED&&(s0=peg$currPos,input.substr(peg$currPos,2)===peg$c59?(s1=\npeg$c59,peg$currPos+=2):(s1=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c60)),s1!==peg$FAILED&&(peg$savedPos=s0,s1=\"}\"),s0=s1,s0===peg$FAILED))))if(s0=peg$currPos,input.substr(peg$currPos,2)===peg$c62?(s1=peg$c62,peg$currPos+=2):(s1=peg$FAILED,0===peg$silentFails&&peg$fail(peg$c63)),s1!==peg$FAILED){var s3=s1=peg$currPos;var s4=peg$parsehexDigit();if(s4!==peg$FAILED){var s5=peg$parsehexDigit();if(s5!==peg$FAILED){var s6=peg$parsehexDigit();if(s6!==peg$FAILED){var s7=peg$parsehexDigit();s7!==peg$FAILED?\ns3=s4=[s4,s5,s6,s7]:(peg$currPos=s3,s3=peg$FAILED)}else peg$currPos=s3,s3=peg$FAILED}else peg$currPos=s3,s3=peg$FAILED}else peg$currPos=s3,s3=peg$FAILED;s1=s3!==peg$FAILED?input.substring(s1,peg$currPos):s3;s1!==peg$FAILED?(peg$savedPos=s0,s0=s1=String.fromCharCode(parseInt(s1,16))):(peg$currPos=s0,s0=peg$FAILED)}else peg$currPos=s0,s0=peg$FAILED}return s0}function peg$parsechars(){var s0=peg$currPos;var s1=[];var s2=peg$parsechar();if(s2!==peg$FAILED)for(;s2!==peg$FAILED;)s1.push(s2),s2=peg$parsechar();\nelse s1=peg$FAILED;s1!==peg$FAILED&&(peg$savedPos=s0,s1=s1.join(\"\"));return s1}var options=1<arguments.length?arguments[1]:{},peg$FAILED={},peg$startRuleFunctions={start:peg$parsestart},peg$startRuleFunction=peg$parsestart,peg$c3=/^[^ \\t\\n\\r,.+={}#]/,peg$c4={type:\"class\",value:\"[^ \\\\t\\\\n\\\\r,.+\\x3d{}#]\",description:\"[^ \\\\t\\\\n\\\\r,.+\\x3d{}#]\"},peg$c5=\"{\",peg$c6={type:\"literal\",value:\"{\",description:'\"{\"'},peg$c7=\",\",peg$c8={type:\"literal\",value:\",\",description:'\",\"'},peg$c9=\"}\",peg$c10={type:\"literal\",\nvalue:\"}\",description:'\"}\"'},peg$c12=\"number\",peg$c13={type:\"literal\",value:\"number\",description:'\"number\"'},peg$c14=\"date\",peg$c15={type:\"literal\",value:\"date\",description:'\"date\"'},peg$c16=\"time\",peg$c17={type:\"literal\",value:\"time\",description:'\"time\"'},peg$c19=\"plural\",peg$c20={type:\"literal\",value:\"plural\",description:'\"plural\"'},peg$c22=\"selectordinal\",peg$c23={type:\"literal\",value:\"selectordinal\",description:'\"selectordinal\"'},peg$c25=\"select\",peg$c26={type:\"literal\",value:\"select\",description:'\"select\"'},\npeg$c28=\"\\x3d\",peg$c29={type:\"literal\",value:\"\\x3d\",description:'\"\\x3d\"'},peg$c31=\"offset:\",peg$c32={type:\"literal\",value:\"offset:\",description:'\"offset:\"'},peg$c35={type:\"other\",description:\"whitespace\"},peg$c36=/^[ \\t\\n\\r]/,peg$c37={type:\"class\",value:\"[ \\\\t\\\\n\\\\r]\",description:\"[ \\\\t\\\\n\\\\r]\"},peg$c38={type:\"other\",description:\"optionalWhitespace\"},peg$c39=/^[0-9]/,peg$c40={type:\"class\",value:\"[0-9]\",description:\"[0-9]\"},peg$c41=/^[0-9a-f]/i,peg$c42={type:\"class\",value:\"[0-9a-f]i\",description:\"[0-9a-f]i\"},\npeg$c43=\"0\",peg$c44={type:\"literal\",value:\"0\",description:'\"0\"'},peg$c45=/^[1-9]/,peg$c46={type:\"class\",value:\"[1-9]\",description:\"[1-9]\"},peg$c48=/^[^{}\\\\\\0-\\x1F \\t\\n\\r]/,peg$c49={type:\"class\",value:\"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\",description:\"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\"},peg$c50=\"\\\\\\\\\",peg$c51={type:\"literal\",value:\"\\\\\\\\\",description:'\"\\\\\\\\\\\\\\\\\"'},peg$c53=\"\\\\#\",peg$c54={type:\"literal\",value:\"\\\\#\",description:'\"\\\\\\\\#\"'},peg$c56=\"\\\\{\",peg$c57={type:\"literal\",value:\"\\\\{\",description:'\"\\\\\\\\{\"'},\npeg$c59=\"\\\\}\",peg$c60={type:\"literal\",value:\"\\\\}\",description:'\"\\\\\\\\}\"'},peg$c62=\"\\\\u\",peg$c63={type:\"literal\",value:\"\\\\u\",description:'\"\\\\\\\\u\"'},peg$currPos=0,peg$savedPos=0,peg$posDetailsCache=[{line:1,column:1,seenCR:!1}],peg$maxFailPos=0,peg$maxFailExpected=[],peg$silentFails=0;if(\"startRule\"in options){if(!(options.startRule in peg$startRuleFunctions))throw Error(\"Can't start parsing from rule \\\"\"+options.startRule+'\".');peg$startRuleFunction=peg$startRuleFunctions[options.startRule]}options=\npeg$startRuleFunction();if(options!==peg$FAILED&&peg$currPos===input.length)return options;options!==peg$FAILED&&peg$currPos<input.length&&peg$fail({type:\"end\",description:\"end of input\"});throw function(message,expected$jscomp$0,found$jscomp$0,location){function cleanupExpected(expected){var i=1;for(expected.sort(function(a,b){return a.description<b.description?-1:a.description>b.description?1:0});i<expected.length;)expected[i-1]===expected[i]?expected.splice(i,1):i++}function buildMessage(expected,\nfound){function stringEscape(s){function hex(ch){return ch.charCodeAt(0).toString(16).toUpperCase()}return s.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"').replace(/\\x08/g,\"\\\\b\").replace(/\\t/g,\"\\\\t\").replace(/\\n/g,\"\\\\n\").replace(/\\f/g,\"\\\\f\").replace(/\\r/g,\"\\\\r\").replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g,function(ch){return\"\\\\x0\"+hex(ch)}).replace(/[\\x10-\\x1F\\x80-\\xFF]/g,function(ch){return\"\\\\x\"+hex(ch)}).replace(/[\\u0100-\\u0FFF]/g,function(ch){return\"\\\\u0\"+hex(ch)}).replace(/[\\u1000-\\uFFFF]/g,function(ch){return\"\\\\u\"+\nhex(ch)})}var expectedDescs=Array(expected.length),i;for(i=0;i<expected.length;i++)expectedDescs[i]=expected[i].description;expected=1<expected.length?expectedDescs.slice(0,-1).join(\", \")+\" or \"+expectedDescs[expected.length-1]:expectedDescs[0];found=found?'\"'+stringEscape(found)+'\"':\"end of input\";return\"Expected \"+expected+\" but \"+found+\" found.\"}null!==expected$jscomp$0&&cleanupExpected(expected$jscomp$0);return new peg$SyntaxError(null!==message?message:buildMessage(expected$jscomp$0,found$jscomp$0),\nexpected$jscomp$0,found$jscomp$0,location)}(null,peg$maxFailExpected,peg$maxFailPos<input.length?input.charAt(peg$maxFailPos):null,peg$maxFailPos<input.length?peg$computeLocation(peg$maxFailPos,peg$maxFailPos+1):peg$computeLocation(peg$maxFailPos,peg$maxFailPos));}}}()}","~:source","shadow$provide[\"module$node_modules$intl_messageformat_parser$lib$parser\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nexports[\"default\"] = (function() {\n  \"use strict\";\n\n  /*\n   * Generated by PEG.js 0.9.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        parser  = this,\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = function(elements) {\n                return {\n                    type    : 'messageFormatPattern',\n                    elements: elements,\n                    location: location()\n                };\n            },\n        peg$c1 = function(text) {\n                var string = '',\n                    i, j, outerLen, inner, innerLen;\n\n                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {\n                    inner = text[i];\n\n                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {\n                        string += inner[j];\n                    }\n                }\n\n                return string;\n            },\n        peg$c2 = function(messageText) {\n                return {\n                    type : 'messageTextElement',\n                    value: messageText,\n                    location: location()\n                };\n            },\n        peg$c3 = /^[^ \\t\\n\\r,.+={}#]/,\n        peg$c4 = { type: \"class\", value: \"[^ \\\\t\\\\n\\\\r,.+={}#]\", description: \"[^ \\\\t\\\\n\\\\r,.+={}#]\" },\n        peg$c5 = \"{\",\n        peg$c6 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c7 = \",\",\n        peg$c8 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c9 = \"}\",\n        peg$c10 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c11 = function(id, format) {\n                return {\n                    type  : 'argumentElement',\n                    id    : id,\n                    format: format && format[2],\n                    location: location()\n                };\n            },\n        peg$c12 = \"number\",\n        peg$c13 = { type: \"literal\", value: \"number\", description: \"\\\"number\\\"\" },\n        peg$c14 = \"date\",\n        peg$c15 = { type: \"literal\", value: \"date\", description: \"\\\"date\\\"\" },\n        peg$c16 = \"time\",\n        peg$c17 = { type: \"literal\", value: \"time\", description: \"\\\"time\\\"\" },\n        peg$c18 = function(type, style) {\n                return {\n                    type : type + 'Format',\n                    style: style && style[2],\n                    location: location()\n                };\n            },\n        peg$c19 = \"plural\",\n        peg$c20 = { type: \"literal\", value: \"plural\", description: \"\\\"plural\\\"\" },\n        peg$c21 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: false,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options,\n                    location: location()\n                };\n            },\n        peg$c22 = \"selectordinal\",\n        peg$c23 = { type: \"literal\", value: \"selectordinal\", description: \"\\\"selectordinal\\\"\" },\n        peg$c24 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: true,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options,\n                    location: location()\n                }\n            },\n        peg$c25 = \"select\",\n        peg$c26 = { type: \"literal\", value: \"select\", description: \"\\\"select\\\"\" },\n        peg$c27 = function(options) {\n                return {\n                    type   : 'selectFormat',\n                    options: options,\n                    location: location()\n                };\n            },\n        peg$c28 = \"=\",\n        peg$c29 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c30 = function(selector, pattern) {\n                return {\n                    type    : 'optionalFormatPattern',\n                    selector: selector,\n                    value   : pattern,\n                    location: location()\n                };\n            },\n        peg$c31 = \"offset:\",\n        peg$c32 = { type: \"literal\", value: \"offset:\", description: \"\\\"offset:\\\"\" },\n        peg$c33 = function(number) {\n                return number;\n            },\n        peg$c34 = function(offset, options) {\n                return {\n                    type   : 'pluralFormat',\n                    offset : offset,\n                    options: options,\n                    location: location()\n                };\n            },\n        peg$c35 = { type: \"other\", description: \"whitespace\" },\n        peg$c36 = /^[ \\t\\n\\r]/,\n        peg$c37 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n        peg$c38 = { type: \"other\", description: \"optionalWhitespace\" },\n        peg$c39 = /^[0-9]/,\n        peg$c40 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c41 = /^[0-9a-f]/i,\n        peg$c42 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\n        peg$c43 = \"0\",\n        peg$c44 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c45 = /^[1-9]/,\n        peg$c46 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n        peg$c47 = function(digits) {\n            return parseInt(digits, 10);\n        },\n        peg$c48 = /^[^{}\\\\\\0-\\x1F \\t\\n\\r]/,\n        peg$c49 = { type: \"class\", value: \"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\", description: \"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\" },\n        peg$c50 = \"\\\\\\\\\",\n        peg$c51 = { type: \"literal\", value: \"\\\\\\\\\", description: \"\\\"\\\\\\\\\\\\\\\\\\\"\" },\n        peg$c52 = function() { return '\\\\'; },\n        peg$c53 = \"\\\\#\",\n        peg$c54 = { type: \"literal\", value: \"\\\\#\", description: \"\\\"\\\\\\\\#\\\"\" },\n        peg$c55 = function() { return '\\\\#'; },\n        peg$c56 = \"\\\\{\",\n        peg$c57 = { type: \"literal\", value: \"\\\\{\", description: \"\\\"\\\\\\\\{\\\"\" },\n        peg$c58 = function() { return '\\u007B'; },\n        peg$c59 = \"\\\\}\",\n        peg$c60 = { type: \"literal\", value: \"\\\\}\", description: \"\\\"\\\\\\\\}\\\"\" },\n        peg$c61 = function() { return '\\u007D'; },\n        peg$c62 = \"\\\\u\",\n        peg$c63 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n        peg$c64 = function(digits) {\n                return String.fromCharCode(parseInt(digits, 16));\n            },\n        peg$c65 = function(chars) { return chars.join(''); },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(\n        message,\n        null,\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p, ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemessageFormatPattern();\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatPattern() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsemessageFormatElement();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsemessageFormatElement();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatElement() {\n      var s0;\n\n      s0 = peg$parsemessageTextElement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseargumentElement();\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageText() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsechars();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsechars();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsews();\n        if (s1 !== peg$FAILED) {\n          s0 = input.substring(s0, peg$currPos);\n        } else {\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageTextElement() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemessageText();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseargument() {\n      var s0, s1, s2;\n\n      s0 = peg$parsenumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c3.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c3.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n          }\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s0 = input.substring(s0, peg$currPos);\n        } else {\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseargumentElement() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseargument();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c7;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c8); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseelementFormat();\n                  if (s8 !== peg$FAILED) {\n                    s6 = [s6, s7, s8];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = null;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s7 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c11(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseelementFormat() {\n      var s0;\n\n      s0 = peg$parsesimpleFormat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepluralFormat();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseselectOrdinalFormat();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseselectFormat();\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimpleFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c12) {\n        s1 = peg$c12;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c14) {\n          s1 = peg$c14;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c16) {\n            s1 = peg$c16;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c7;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsechars();\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c19) {\n        s1 = peg$c19;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectOrdinalFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 13) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 13;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c25) {\n        s1 = peg$c25;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseoptionalFormatPattern();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseoptionalFormatPattern();\n                }\n              } else {\n                s5 = peg$FAILED;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c27(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s2 = peg$c28;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenumber();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsechars();\n      }\n\n      return s0;\n    }\n\n    function peg$parseoptionalFormatPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselector();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c5;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsemessageFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c9;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c30(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseoffset() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c31) {\n        s1 = peg$c31;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenumber();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c33(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralStyle() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseoffset();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseoptionalFormatPattern();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseoptionalFormatPattern();\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c34(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c36.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c37); }\n          }\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsews();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsews();\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit() {\n      var s0;\n\n      if (peg$c39.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehexDigit() {\n      var s0;\n\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c43;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$currPos;\n        if (peg$c45.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsedigit();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsedigit();\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = input.substring(s1, peg$currPos);\n        } else {\n          s1 = s2;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c47(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      if (peg$c48.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c50) {\n          s1 = peg$c50;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c52();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c53) {\n            s1 = peg$c53;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c54); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c55();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c56) {\n              s1 = peg$c56;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c57); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c58();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c59) {\n                s1 = peg$c59;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c61();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c62) {\n                  s1 = peg$c62;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c63); }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$currPos;\n                  s3 = peg$currPos;\n                  s4 = peg$parsehexDigit();\n                  if (s4 !== peg$FAILED) {\n                    s5 = peg$parsehexDigit();\n                    if (s5 !== peg$FAILED) {\n                      s6 = peg$parsehexDigit();\n                      if (s6 !== peg$FAILED) {\n                        s7 = peg$parsehexDigit();\n                        if (s7 !== peg$FAILED) {\n                          s4 = [s4, s5, s6, s7];\n                          s3 = s4;\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s2 = input.substring(s2, peg$currPos);\n                  } else {\n                    s2 = s3;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c64(s2);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsechars() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c65(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(\n        null,\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();\n\n//# sourceMappingURL=parser.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["message","ordinal","offset","prototype","found","id","expected","name","style","value","location","SyntaxError","start","line","column","type","parse","seenCR","selector","options","end","elements","description","format","constructor"]],"~:compiled-at",1537360491139,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$intl_messageformat_parser$lib$parser.js\",\n\"lineCount\":37,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/intl-messageformat-parser/lib/parser.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$intl_messageformat_parser$lib$parser\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\nexports[\\\"default\\\"] = (function() {\\n  \\\"use strict\\\";\\n\\n  /*\\n   * Generated by PEG.js 0.9.0.\\n   *\\n   * http://pegjs.org/\\n   */\\n\\n  function peg$subclass(child, parent) {\\n    function ctor() { this.constructor = child; }\\n    ctor.prototype = parent.prototype;\\n    child.prototype = new ctor();\\n  }\\n\\n  function peg$SyntaxError(message, expected, found, location) {\\n    this.message  = message;\\n    this.expected = expected;\\n    this.found    = found;\\n    this.location = location;\\n    this.name     = \\\"SyntaxError\\\";\\n\\n    if (typeof Error.captureStackTrace === \\\"function\\\") {\\n      Error.captureStackTrace(this, peg$SyntaxError);\\n    }\\n  }\\n\\n  peg$subclass(peg$SyntaxError, Error);\\n\\n  function peg$parse(input) {\\n    var options = arguments.length > 1 ? arguments[1] : {},\\n        parser  = this,\\n\\n        peg$FAILED = {},\\n\\n        peg$startRuleFunctions = { start: peg$parsestart },\\n        peg$startRuleFunction  = peg$parsestart,\\n\\n        peg$c0 = function(elements) {\\n                return {\\n                    type    : 'messageFormatPattern',\\n                    elements: elements,\\n                    location: location()\\n                };\\n            },\\n        peg$c1 = function(text) {\\n                var string = '',\\n                    i, j, outerLen, inner, innerLen;\\n\\n                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {\\n                    inner = text[i];\\n\\n                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {\\n                        string += inner[j];\\n                    }\\n                }\\n\\n                return string;\\n            },\\n        peg$c2 = function(messageText) {\\n                return {\\n                    type : 'messageTextElement',\\n                    value: messageText,\\n                    location: location()\\n                };\\n            },\\n        peg$c3 = /^[^ \\\\t\\\\n\\\\r,.+={}#]/,\\n        peg$c4 = { type: \\\"class\\\", value: \\\"[^ \\\\\\\\t\\\\\\\\n\\\\\\\\r,.+={}#]\\\", description: \\\"[^ \\\\\\\\t\\\\\\\\n\\\\\\\\r,.+={}#]\\\" },\\n        peg$c5 = \\\"{\\\",\\n        peg$c6 = { type: \\\"literal\\\", value: \\\"{\\\", description: \\\"\\\\\\\"{\\\\\\\"\\\" },\\n        peg$c7 = \\\",\\\",\\n        peg$c8 = { type: \\\"literal\\\", value: \\\",\\\", description: \\\"\\\\\\\",\\\\\\\"\\\" },\\n        peg$c9 = \\\"}\\\",\\n        peg$c10 = { type: \\\"literal\\\", value: \\\"}\\\", description: \\\"\\\\\\\"}\\\\\\\"\\\" },\\n        peg$c11 = function(id, format) {\\n                return {\\n                    type  : 'argumentElement',\\n                    id    : id,\\n                    format: format && format[2],\\n                    location: location()\\n                };\\n            },\\n        peg$c12 = \\\"number\\\",\\n        peg$c13 = { type: \\\"literal\\\", value: \\\"number\\\", description: \\\"\\\\\\\"number\\\\\\\"\\\" },\\n        peg$c14 = \\\"date\\\",\\n        peg$c15 = { type: \\\"literal\\\", value: \\\"date\\\", description: \\\"\\\\\\\"date\\\\\\\"\\\" },\\n        peg$c16 = \\\"time\\\",\\n        peg$c17 = { type: \\\"literal\\\", value: \\\"time\\\", description: \\\"\\\\\\\"time\\\\\\\"\\\" },\\n        peg$c18 = function(type, style) {\\n                return {\\n                    type : type + 'Format',\\n                    style: style && style[2],\\n                    location: location()\\n                };\\n            },\\n        peg$c19 = \\\"plural\\\",\\n        peg$c20 = { type: \\\"literal\\\", value: \\\"plural\\\", description: \\\"\\\\\\\"plural\\\\\\\"\\\" },\\n        peg$c21 = function(pluralStyle) {\\n                return {\\n                    type   : pluralStyle.type,\\n                    ordinal: false,\\n                    offset : pluralStyle.offset || 0,\\n                    options: pluralStyle.options,\\n                    location: location()\\n                };\\n            },\\n        peg$c22 = \\\"selectordinal\\\",\\n        peg$c23 = { type: \\\"literal\\\", value: \\\"selectordinal\\\", description: \\\"\\\\\\\"selectordinal\\\\\\\"\\\" },\\n        peg$c24 = function(pluralStyle) {\\n                return {\\n                    type   : pluralStyle.type,\\n                    ordinal: true,\\n                    offset : pluralStyle.offset || 0,\\n                    options: pluralStyle.options,\\n                    location: location()\\n                }\\n            },\\n        peg$c25 = \\\"select\\\",\\n        peg$c26 = { type: \\\"literal\\\", value: \\\"select\\\", description: \\\"\\\\\\\"select\\\\\\\"\\\" },\\n        peg$c27 = function(options) {\\n                return {\\n                    type   : 'selectFormat',\\n                    options: options,\\n                    location: location()\\n                };\\n            },\\n        peg$c28 = \\\"=\\\",\\n        peg$c29 = { type: \\\"literal\\\", value: \\\"=\\\", description: \\\"\\\\\\\"=\\\\\\\"\\\" },\\n        peg$c30 = function(selector, pattern) {\\n                return {\\n                    type    : 'optionalFormatPattern',\\n                    selector: selector,\\n                    value   : pattern,\\n                    location: location()\\n                };\\n            },\\n        peg$c31 = \\\"offset:\\\",\\n        peg$c32 = { type: \\\"literal\\\", value: \\\"offset:\\\", description: \\\"\\\\\\\"offset:\\\\\\\"\\\" },\\n        peg$c33 = function(number) {\\n                return number;\\n            },\\n        peg$c34 = function(offset, options) {\\n                return {\\n                    type   : 'pluralFormat',\\n                    offset : offset,\\n                    options: options,\\n                    location: location()\\n                };\\n            },\\n        peg$c35 = { type: \\\"other\\\", description: \\\"whitespace\\\" },\\n        peg$c36 = /^[ \\\\t\\\\n\\\\r]/,\\n        peg$c37 = { type: \\\"class\\\", value: \\\"[ \\\\\\\\t\\\\\\\\n\\\\\\\\r]\\\", description: \\\"[ \\\\\\\\t\\\\\\\\n\\\\\\\\r]\\\" },\\n        peg$c38 = { type: \\\"other\\\", description: \\\"optionalWhitespace\\\" },\\n        peg$c39 = /^[0-9]/,\\n        peg$c40 = { type: \\\"class\\\", value: \\\"[0-9]\\\", description: \\\"[0-9]\\\" },\\n        peg$c41 = /^[0-9a-f]/i,\\n        peg$c42 = { type: \\\"class\\\", value: \\\"[0-9a-f]i\\\", description: \\\"[0-9a-f]i\\\" },\\n        peg$c43 = \\\"0\\\",\\n        peg$c44 = { type: \\\"literal\\\", value: \\\"0\\\", description: \\\"\\\\\\\"0\\\\\\\"\\\" },\\n        peg$c45 = /^[1-9]/,\\n        peg$c46 = { type: \\\"class\\\", value: \\\"[1-9]\\\", description: \\\"[1-9]\\\" },\\n        peg$c47 = function(digits) {\\n            return parseInt(digits, 10);\\n        },\\n        peg$c48 = /^[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]/,\\n        peg$c49 = { type: \\\"class\\\", value: \\\"[^{}\\\\\\\\\\\\\\\\\\\\\\\\0-\\\\\\\\x1F\\\\\\\\x7f \\\\\\\\t\\\\\\\\n\\\\\\\\r]\\\", description: \\\"[^{}\\\\\\\\\\\\\\\\\\\\\\\\0-\\\\\\\\x1F\\\\\\\\x7f \\\\\\\\t\\\\\\\\n\\\\\\\\r]\\\" },\\n        peg$c50 = \\\"\\\\\\\\\\\\\\\\\\\",\\n        peg$c51 = { type: \\\"literal\\\", value: \\\"\\\\\\\\\\\\\\\\\\\", description: \\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\" },\\n        peg$c52 = function() { return '\\\\\\\\'; },\\n        peg$c53 = \\\"\\\\\\\\#\\\",\\n        peg$c54 = { type: \\\"literal\\\", value: \\\"\\\\\\\\#\\\", description: \\\"\\\\\\\"\\\\\\\\\\\\\\\\#\\\\\\\"\\\" },\\n        peg$c55 = function() { return '\\\\\\\\#'; },\\n        peg$c56 = \\\"\\\\\\\\{\\\",\\n        peg$c57 = { type: \\\"literal\\\", value: \\\"\\\\\\\\{\\\", description: \\\"\\\\\\\"\\\\\\\\\\\\\\\\{\\\\\\\"\\\" },\\n        peg$c58 = function() { return '\\\\u007B'; },\\n        peg$c59 = \\\"\\\\\\\\}\\\",\\n        peg$c60 = { type: \\\"literal\\\", value: \\\"\\\\\\\\}\\\", description: \\\"\\\\\\\"\\\\\\\\\\\\\\\\}\\\\\\\"\\\" },\\n        peg$c61 = function() { return '\\\\u007D'; },\\n        peg$c62 = \\\"\\\\\\\\u\\\",\\n        peg$c63 = { type: \\\"literal\\\", value: \\\"\\\\\\\\u\\\", description: \\\"\\\\\\\"\\\\\\\\\\\\\\\\u\\\\\\\"\\\" },\\n        peg$c64 = function(digits) {\\n                return String.fromCharCode(parseInt(digits, 16));\\n            },\\n        peg$c65 = function(chars) { return chars.join(''); },\\n\\n        peg$currPos          = 0,\\n        peg$savedPos         = 0,\\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\\n        peg$maxFailPos       = 0,\\n        peg$maxFailExpected  = [],\\n        peg$silentFails      = 0,\\n\\n        peg$result;\\n\\n    if (\\\"startRule\\\" in options) {\\n      if (!(options.startRule in peg$startRuleFunctions)) {\\n        throw new Error(\\\"Can't start parsing from rule \\\\\\\"\\\" + options.startRule + \\\"\\\\\\\".\\\");\\n      }\\n\\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\\n    }\\n\\n    function text() {\\n      return input.substring(peg$savedPos, peg$currPos);\\n    }\\n\\n    function location() {\\n      return peg$computeLocation(peg$savedPos, peg$currPos);\\n    }\\n\\n    function expected(description) {\\n      throw peg$buildException(\\n        null,\\n        [{ type: \\\"other\\\", description: description }],\\n        input.substring(peg$savedPos, peg$currPos),\\n        peg$computeLocation(peg$savedPos, peg$currPos)\\n      );\\n    }\\n\\n    function error(message) {\\n      throw peg$buildException(\\n        message,\\n        null,\\n        input.substring(peg$savedPos, peg$currPos),\\n        peg$computeLocation(peg$savedPos, peg$currPos)\\n      );\\n    }\\n\\n    function peg$computePosDetails(pos) {\\n      var details = peg$posDetailsCache[pos],\\n          p, ch;\\n\\n      if (details) {\\n        return details;\\n      } else {\\n        p = pos - 1;\\n        while (!peg$posDetailsCache[p]) {\\n          p--;\\n        }\\n\\n        details = peg$posDetailsCache[p];\\n        details = {\\n          line:   details.line,\\n          column: details.column,\\n          seenCR: details.seenCR\\n        };\\n\\n        while (p < pos) {\\n          ch = input.charAt(p);\\n          if (ch === \\\"\\\\n\\\") {\\n            if (!details.seenCR) { details.line++; }\\n            details.column = 1;\\n            details.seenCR = false;\\n          } else if (ch === \\\"\\\\r\\\" || ch === \\\"\\\\u2028\\\" || ch === \\\"\\\\u2029\\\") {\\n            details.line++;\\n            details.column = 1;\\n            details.seenCR = true;\\n          } else {\\n            details.column++;\\n            details.seenCR = false;\\n          }\\n\\n          p++;\\n        }\\n\\n        peg$posDetailsCache[pos] = details;\\n        return details;\\n      }\\n    }\\n\\n    function peg$computeLocation(startPos, endPos) {\\n      var startPosDetails = peg$computePosDetails(startPos),\\n          endPosDetails   = peg$computePosDetails(endPos);\\n\\n      return {\\n        start: {\\n          offset: startPos,\\n          line:   startPosDetails.line,\\n          column: startPosDetails.column\\n        },\\n        end: {\\n          offset: endPos,\\n          line:   endPosDetails.line,\\n          column: endPosDetails.column\\n        }\\n      };\\n    }\\n\\n    function peg$fail(expected) {\\n      if (peg$currPos < peg$maxFailPos) { return; }\\n\\n      if (peg$currPos > peg$maxFailPos) {\\n        peg$maxFailPos = peg$currPos;\\n        peg$maxFailExpected = [];\\n      }\\n\\n      peg$maxFailExpected.push(expected);\\n    }\\n\\n    function peg$buildException(message, expected, found, location) {\\n      function cleanupExpected(expected) {\\n        var i = 1;\\n\\n        expected.sort(function(a, b) {\\n          if (a.description < b.description) {\\n            return -1;\\n          } else if (a.description > b.description) {\\n            return 1;\\n          } else {\\n            return 0;\\n          }\\n        });\\n\\n        while (i < expected.length) {\\n          if (expected[i - 1] === expected[i]) {\\n            expected.splice(i, 1);\\n          } else {\\n            i++;\\n          }\\n        }\\n      }\\n\\n      function buildMessage(expected, found) {\\n        function stringEscape(s) {\\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\\n\\n          return s\\n            .replace(/\\\\\\\\/g,   '\\\\\\\\\\\\\\\\')\\n            .replace(/\\\"/g,    '\\\\\\\\\\\"')\\n            .replace(/\\\\x08/g, '\\\\\\\\b')\\n            .replace(/\\\\t/g,   '\\\\\\\\t')\\n            .replace(/\\\\n/g,   '\\\\\\\\n')\\n            .replace(/\\\\f/g,   '\\\\\\\\f')\\n            .replace(/\\\\r/g,   '\\\\\\\\r')\\n            .replace(/[\\\\x00-\\\\x07\\\\x0B\\\\x0E\\\\x0F]/g, function(ch) { return '\\\\\\\\x0' + hex(ch); })\\n            .replace(/[\\\\x10-\\\\x1F\\\\x80-\\\\xFF]/g,    function(ch) { return '\\\\\\\\x'  + hex(ch); })\\n            .replace(/[\\\\u0100-\\\\u0FFF]/g,         function(ch) { return '\\\\\\\\u0' + hex(ch); })\\n            .replace(/[\\\\u1000-\\\\uFFFF]/g,         function(ch) { return '\\\\\\\\u'  + hex(ch); });\\n        }\\n\\n        var expectedDescs = new Array(expected.length),\\n            expectedDesc, foundDesc, i;\\n\\n        for (i = 0; i < expected.length; i++) {\\n          expectedDescs[i] = expected[i].description;\\n        }\\n\\n        expectedDesc = expected.length > 1\\n          ? expectedDescs.slice(0, -1).join(\\\", \\\")\\n              + \\\" or \\\"\\n              + expectedDescs[expected.length - 1]\\n          : expectedDescs[0];\\n\\n        foundDesc = found ? \\\"\\\\\\\"\\\" + stringEscape(found) + \\\"\\\\\\\"\\\" : \\\"end of input\\\";\\n\\n        return \\\"Expected \\\" + expectedDesc + \\\" but \\\" + foundDesc + \\\" found.\\\";\\n      }\\n\\n      if (expected !== null) {\\n        cleanupExpected(expected);\\n      }\\n\\n      return new peg$SyntaxError(\\n        message !== null ? message : buildMessage(expected, found),\\n        expected,\\n        found,\\n        location\\n      );\\n    }\\n\\n    function peg$parsestart() {\\n      var s0;\\n\\n      s0 = peg$parsemessageFormatPattern();\\n\\n      return s0;\\n    }\\n\\n    function peg$parsemessageFormatPattern() {\\n      var s0, s1, s2;\\n\\n      s0 = peg$currPos;\\n      s1 = [];\\n      s2 = peg$parsemessageFormatElement();\\n      while (s2 !== peg$FAILED) {\\n        s1.push(s2);\\n        s2 = peg$parsemessageFormatElement();\\n      }\\n      if (s1 !== peg$FAILED) {\\n        peg$savedPos = s0;\\n        s1 = peg$c0(s1);\\n      }\\n      s0 = s1;\\n\\n      return s0;\\n    }\\n\\n    function peg$parsemessageFormatElement() {\\n      var s0;\\n\\n      s0 = peg$parsemessageTextElement();\\n      if (s0 === peg$FAILED) {\\n        s0 = peg$parseargumentElement();\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parsemessageText() {\\n      var s0, s1, s2, s3, s4, s5;\\n\\n      s0 = peg$currPos;\\n      s1 = [];\\n      s2 = peg$currPos;\\n      s3 = peg$parse_();\\n      if (s3 !== peg$FAILED) {\\n        s4 = peg$parsechars();\\n        if (s4 !== peg$FAILED) {\\n          s5 = peg$parse_();\\n          if (s5 !== peg$FAILED) {\\n            s3 = [s3, s4, s5];\\n            s2 = s3;\\n          } else {\\n            peg$currPos = s2;\\n            s2 = peg$FAILED;\\n          }\\n        } else {\\n          peg$currPos = s2;\\n          s2 = peg$FAILED;\\n        }\\n      } else {\\n        peg$currPos = s2;\\n        s2 = peg$FAILED;\\n      }\\n      if (s2 !== peg$FAILED) {\\n        while (s2 !== peg$FAILED) {\\n          s1.push(s2);\\n          s2 = peg$currPos;\\n          s3 = peg$parse_();\\n          if (s3 !== peg$FAILED) {\\n            s4 = peg$parsechars();\\n            if (s4 !== peg$FAILED) {\\n              s5 = peg$parse_();\\n              if (s5 !== peg$FAILED) {\\n                s3 = [s3, s4, s5];\\n                s2 = s3;\\n              } else {\\n                peg$currPos = s2;\\n                s2 = peg$FAILED;\\n              }\\n            } else {\\n              peg$currPos = s2;\\n              s2 = peg$FAILED;\\n            }\\n          } else {\\n            peg$currPos = s2;\\n            s2 = peg$FAILED;\\n          }\\n        }\\n      } else {\\n        s1 = peg$FAILED;\\n      }\\n      if (s1 !== peg$FAILED) {\\n        peg$savedPos = s0;\\n        s1 = peg$c1(s1);\\n      }\\n      s0 = s1;\\n      if (s0 === peg$FAILED) {\\n        s0 = peg$currPos;\\n        s1 = peg$parsews();\\n        if (s1 !== peg$FAILED) {\\n          s0 = input.substring(s0, peg$currPos);\\n        } else {\\n          s0 = s1;\\n        }\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parsemessageTextElement() {\\n      var s0, s1;\\n\\n      s0 = peg$currPos;\\n      s1 = peg$parsemessageText();\\n      if (s1 !== peg$FAILED) {\\n        peg$savedPos = s0;\\n        s1 = peg$c2(s1);\\n      }\\n      s0 = s1;\\n\\n      return s0;\\n    }\\n\\n    function peg$parseargument() {\\n      var s0, s1, s2;\\n\\n      s0 = peg$parsenumber();\\n      if (s0 === peg$FAILED) {\\n        s0 = peg$currPos;\\n        s1 = [];\\n        if (peg$c3.test(input.charAt(peg$currPos))) {\\n          s2 = input.charAt(peg$currPos);\\n          peg$currPos++;\\n        } else {\\n          s2 = peg$FAILED;\\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\\n        }\\n        if (s2 !== peg$FAILED) {\\n          while (s2 !== peg$FAILED) {\\n            s1.push(s2);\\n            if (peg$c3.test(input.charAt(peg$currPos))) {\\n              s2 = input.charAt(peg$currPos);\\n              peg$currPos++;\\n            } else {\\n              s2 = peg$FAILED;\\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\\n            }\\n          }\\n        } else {\\n          s1 = peg$FAILED;\\n        }\\n        if (s1 !== peg$FAILED) {\\n          s0 = input.substring(s0, peg$currPos);\\n        } else {\\n          s0 = s1;\\n        }\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parseargumentElement() {\\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\\n\\n      s0 = peg$currPos;\\n      if (input.charCodeAt(peg$currPos) === 123) {\\n        s1 = peg$c5;\\n        peg$currPos++;\\n      } else {\\n        s1 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\\n      }\\n      if (s1 !== peg$FAILED) {\\n        s2 = peg$parse_();\\n        if (s2 !== peg$FAILED) {\\n          s3 = peg$parseargument();\\n          if (s3 !== peg$FAILED) {\\n            s4 = peg$parse_();\\n            if (s4 !== peg$FAILED) {\\n              s5 = peg$currPos;\\n              if (input.charCodeAt(peg$currPos) === 44) {\\n                s6 = peg$c7;\\n                peg$currPos++;\\n              } else {\\n                s6 = peg$FAILED;\\n                if (peg$silentFails === 0) { peg$fail(peg$c8); }\\n              }\\n              if (s6 !== peg$FAILED) {\\n                s7 = peg$parse_();\\n                if (s7 !== peg$FAILED) {\\n                  s8 = peg$parseelementFormat();\\n                  if (s8 !== peg$FAILED) {\\n                    s6 = [s6, s7, s8];\\n                    s5 = s6;\\n                  } else {\\n                    peg$currPos = s5;\\n                    s5 = peg$FAILED;\\n                  }\\n                } else {\\n                  peg$currPos = s5;\\n                  s5 = peg$FAILED;\\n                }\\n              } else {\\n                peg$currPos = s5;\\n                s5 = peg$FAILED;\\n              }\\n              if (s5 === peg$FAILED) {\\n                s5 = null;\\n              }\\n              if (s5 !== peg$FAILED) {\\n                s6 = peg$parse_();\\n                if (s6 !== peg$FAILED) {\\n                  if (input.charCodeAt(peg$currPos) === 125) {\\n                    s7 = peg$c9;\\n                    peg$currPos++;\\n                  } else {\\n                    s7 = peg$FAILED;\\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\\n                  }\\n                  if (s7 !== peg$FAILED) {\\n                    peg$savedPos = s0;\\n                    s1 = peg$c11(s3, s5);\\n                    s0 = s1;\\n                  } else {\\n                    peg$currPos = s0;\\n                    s0 = peg$FAILED;\\n                  }\\n                } else {\\n                  peg$currPos = s0;\\n                  s0 = peg$FAILED;\\n                }\\n              } else {\\n                peg$currPos = s0;\\n                s0 = peg$FAILED;\\n              }\\n            } else {\\n              peg$currPos = s0;\\n              s0 = peg$FAILED;\\n            }\\n          } else {\\n            peg$currPos = s0;\\n            s0 = peg$FAILED;\\n          }\\n        } else {\\n          peg$currPos = s0;\\n          s0 = peg$FAILED;\\n        }\\n      } else {\\n        peg$currPos = s0;\\n        s0 = peg$FAILED;\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parseelementFormat() {\\n      var s0;\\n\\n      s0 = peg$parsesimpleFormat();\\n      if (s0 === peg$FAILED) {\\n        s0 = peg$parsepluralFormat();\\n        if (s0 === peg$FAILED) {\\n          s0 = peg$parseselectOrdinalFormat();\\n          if (s0 === peg$FAILED) {\\n            s0 = peg$parseselectFormat();\\n          }\\n        }\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parsesimpleFormat() {\\n      var s0, s1, s2, s3, s4, s5, s6;\\n\\n      s0 = peg$currPos;\\n      if (input.substr(peg$currPos, 6) === peg$c12) {\\n        s1 = peg$c12;\\n        peg$currPos += 6;\\n      } else {\\n        s1 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\\n      }\\n      if (s1 === peg$FAILED) {\\n        if (input.substr(peg$currPos, 4) === peg$c14) {\\n          s1 = peg$c14;\\n          peg$currPos += 4;\\n        } else {\\n          s1 = peg$FAILED;\\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\\n        }\\n        if (s1 === peg$FAILED) {\\n          if (input.substr(peg$currPos, 4) === peg$c16) {\\n            s1 = peg$c16;\\n            peg$currPos += 4;\\n          } else {\\n            s1 = peg$FAILED;\\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\\n          }\\n        }\\n      }\\n      if (s1 !== peg$FAILED) {\\n        s2 = peg$parse_();\\n        if (s2 !== peg$FAILED) {\\n          s3 = peg$currPos;\\n          if (input.charCodeAt(peg$currPos) === 44) {\\n            s4 = peg$c7;\\n            peg$currPos++;\\n          } else {\\n            s4 = peg$FAILED;\\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\\n          }\\n          if (s4 !== peg$FAILED) {\\n            s5 = peg$parse_();\\n            if (s5 !== peg$FAILED) {\\n              s6 = peg$parsechars();\\n              if (s6 !== peg$FAILED) {\\n                s4 = [s4, s5, s6];\\n                s3 = s4;\\n              } else {\\n                peg$currPos = s3;\\n                s3 = peg$FAILED;\\n              }\\n            } else {\\n              peg$currPos = s3;\\n              s3 = peg$FAILED;\\n            }\\n          } else {\\n            peg$currPos = s3;\\n            s3 = peg$FAILED;\\n          }\\n          if (s3 === peg$FAILED) {\\n            s3 = null;\\n          }\\n          if (s3 !== peg$FAILED) {\\n            peg$savedPos = s0;\\n            s1 = peg$c18(s1, s3);\\n            s0 = s1;\\n          } else {\\n            peg$currPos = s0;\\n            s0 = peg$FAILED;\\n          }\\n        } else {\\n          peg$currPos = s0;\\n          s0 = peg$FAILED;\\n        }\\n      } else {\\n        peg$currPos = s0;\\n        s0 = peg$FAILED;\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parsepluralFormat() {\\n      var s0, s1, s2, s3, s4, s5;\\n\\n      s0 = peg$currPos;\\n      if (input.substr(peg$currPos, 6) === peg$c19) {\\n        s1 = peg$c19;\\n        peg$currPos += 6;\\n      } else {\\n        s1 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\\n      }\\n      if (s1 !== peg$FAILED) {\\n        s2 = peg$parse_();\\n        if (s2 !== peg$FAILED) {\\n          if (input.charCodeAt(peg$currPos) === 44) {\\n            s3 = peg$c7;\\n            peg$currPos++;\\n          } else {\\n            s3 = peg$FAILED;\\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\\n          }\\n          if (s3 !== peg$FAILED) {\\n            s4 = peg$parse_();\\n            if (s4 !== peg$FAILED) {\\n              s5 = peg$parsepluralStyle();\\n              if (s5 !== peg$FAILED) {\\n                peg$savedPos = s0;\\n                s1 = peg$c21(s5);\\n                s0 = s1;\\n              } else {\\n                peg$currPos = s0;\\n                s0 = peg$FAILED;\\n              }\\n            } else {\\n              peg$currPos = s0;\\n              s0 = peg$FAILED;\\n            }\\n          } else {\\n            peg$currPos = s0;\\n            s0 = peg$FAILED;\\n          }\\n        } else {\\n          peg$currPos = s0;\\n          s0 = peg$FAILED;\\n        }\\n      } else {\\n        peg$currPos = s0;\\n        s0 = peg$FAILED;\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parseselectOrdinalFormat() {\\n      var s0, s1, s2, s3, s4, s5;\\n\\n      s0 = peg$currPos;\\n      if (input.substr(peg$currPos, 13) === peg$c22) {\\n        s1 = peg$c22;\\n        peg$currPos += 13;\\n      } else {\\n        s1 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\\n      }\\n      if (s1 !== peg$FAILED) {\\n        s2 = peg$parse_();\\n        if (s2 !== peg$FAILED) {\\n          if (input.charCodeAt(peg$currPos) === 44) {\\n            s3 = peg$c7;\\n            peg$currPos++;\\n          } else {\\n            s3 = peg$FAILED;\\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\\n          }\\n          if (s3 !== peg$FAILED) {\\n            s4 = peg$parse_();\\n            if (s4 !== peg$FAILED) {\\n              s5 = peg$parsepluralStyle();\\n              if (s5 !== peg$FAILED) {\\n                peg$savedPos = s0;\\n                s1 = peg$c24(s5);\\n                s0 = s1;\\n              } else {\\n                peg$currPos = s0;\\n                s0 = peg$FAILED;\\n              }\\n            } else {\\n              peg$currPos = s0;\\n              s0 = peg$FAILED;\\n            }\\n          } else {\\n            peg$currPos = s0;\\n            s0 = peg$FAILED;\\n          }\\n        } else {\\n          peg$currPos = s0;\\n          s0 = peg$FAILED;\\n        }\\n      } else {\\n        peg$currPos = s0;\\n        s0 = peg$FAILED;\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parseselectFormat() {\\n      var s0, s1, s2, s3, s4, s5, s6;\\n\\n      s0 = peg$currPos;\\n      if (input.substr(peg$currPos, 6) === peg$c25) {\\n        s1 = peg$c25;\\n        peg$currPos += 6;\\n      } else {\\n        s1 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\\n      }\\n      if (s1 !== peg$FAILED) {\\n        s2 = peg$parse_();\\n        if (s2 !== peg$FAILED) {\\n          if (input.charCodeAt(peg$currPos) === 44) {\\n            s3 = peg$c7;\\n            peg$currPos++;\\n          } else {\\n            s3 = peg$FAILED;\\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\\n          }\\n          if (s3 !== peg$FAILED) {\\n            s4 = peg$parse_();\\n            if (s4 !== peg$FAILED) {\\n              s5 = [];\\n              s6 = peg$parseoptionalFormatPattern();\\n              if (s6 !== peg$FAILED) {\\n                while (s6 !== peg$FAILED) {\\n                  s5.push(s6);\\n                  s6 = peg$parseoptionalFormatPattern();\\n                }\\n              } else {\\n                s5 = peg$FAILED;\\n              }\\n              if (s5 !== peg$FAILED) {\\n                peg$savedPos = s0;\\n                s1 = peg$c27(s5);\\n                s0 = s1;\\n              } else {\\n                peg$currPos = s0;\\n                s0 = peg$FAILED;\\n              }\\n            } else {\\n              peg$currPos = s0;\\n              s0 = peg$FAILED;\\n            }\\n          } else {\\n            peg$currPos = s0;\\n            s0 = peg$FAILED;\\n          }\\n        } else {\\n          peg$currPos = s0;\\n          s0 = peg$FAILED;\\n        }\\n      } else {\\n        peg$currPos = s0;\\n        s0 = peg$FAILED;\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parseselector() {\\n      var s0, s1, s2, s3;\\n\\n      s0 = peg$currPos;\\n      s1 = peg$currPos;\\n      if (input.charCodeAt(peg$currPos) === 61) {\\n        s2 = peg$c28;\\n        peg$currPos++;\\n      } else {\\n        s2 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\\n      }\\n      if (s2 !== peg$FAILED) {\\n        s3 = peg$parsenumber();\\n        if (s3 !== peg$FAILED) {\\n          s2 = [s2, s3];\\n          s1 = s2;\\n        } else {\\n          peg$currPos = s1;\\n          s1 = peg$FAILED;\\n        }\\n      } else {\\n        peg$currPos = s1;\\n        s1 = peg$FAILED;\\n      }\\n      if (s1 !== peg$FAILED) {\\n        s0 = input.substring(s0, peg$currPos);\\n      } else {\\n        s0 = s1;\\n      }\\n      if (s0 === peg$FAILED) {\\n        s0 = peg$parsechars();\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parseoptionalFormatPattern() {\\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\\n\\n      s0 = peg$currPos;\\n      s1 = peg$parse_();\\n      if (s1 !== peg$FAILED) {\\n        s2 = peg$parseselector();\\n        if (s2 !== peg$FAILED) {\\n          s3 = peg$parse_();\\n          if (s3 !== peg$FAILED) {\\n            if (input.charCodeAt(peg$currPos) === 123) {\\n              s4 = peg$c5;\\n              peg$currPos++;\\n            } else {\\n              s4 = peg$FAILED;\\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\\n            }\\n            if (s4 !== peg$FAILED) {\\n              s5 = peg$parse_();\\n              if (s5 !== peg$FAILED) {\\n                s6 = peg$parsemessageFormatPattern();\\n                if (s6 !== peg$FAILED) {\\n                  s7 = peg$parse_();\\n                  if (s7 !== peg$FAILED) {\\n                    if (input.charCodeAt(peg$currPos) === 125) {\\n                      s8 = peg$c9;\\n                      peg$currPos++;\\n                    } else {\\n                      s8 = peg$FAILED;\\n                      if (peg$silentFails === 0) { peg$fail(peg$c10); }\\n                    }\\n                    if (s8 !== peg$FAILED) {\\n                      peg$savedPos = s0;\\n                      s1 = peg$c30(s2, s6);\\n                      s0 = s1;\\n                    } else {\\n                      peg$currPos = s0;\\n                      s0 = peg$FAILED;\\n                    }\\n                  } else {\\n                    peg$currPos = s0;\\n                    s0 = peg$FAILED;\\n                  }\\n                } else {\\n                  peg$currPos = s0;\\n                  s0 = peg$FAILED;\\n                }\\n              } else {\\n                peg$currPos = s0;\\n                s0 = peg$FAILED;\\n              }\\n            } else {\\n              peg$currPos = s0;\\n              s0 = peg$FAILED;\\n            }\\n          } else {\\n            peg$currPos = s0;\\n            s0 = peg$FAILED;\\n          }\\n        } else {\\n          peg$currPos = s0;\\n          s0 = peg$FAILED;\\n        }\\n      } else {\\n        peg$currPos = s0;\\n        s0 = peg$FAILED;\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parseoffset() {\\n      var s0, s1, s2, s3;\\n\\n      s0 = peg$currPos;\\n      if (input.substr(peg$currPos, 7) === peg$c31) {\\n        s1 = peg$c31;\\n        peg$currPos += 7;\\n      } else {\\n        s1 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\\n      }\\n      if (s1 !== peg$FAILED) {\\n        s2 = peg$parse_();\\n        if (s2 !== peg$FAILED) {\\n          s3 = peg$parsenumber();\\n          if (s3 !== peg$FAILED) {\\n            peg$savedPos = s0;\\n            s1 = peg$c33(s3);\\n            s0 = s1;\\n          } else {\\n            peg$currPos = s0;\\n            s0 = peg$FAILED;\\n          }\\n        } else {\\n          peg$currPos = s0;\\n          s0 = peg$FAILED;\\n        }\\n      } else {\\n        peg$currPos = s0;\\n        s0 = peg$FAILED;\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parsepluralStyle() {\\n      var s0, s1, s2, s3, s4;\\n\\n      s0 = peg$currPos;\\n      s1 = peg$parseoffset();\\n      if (s1 === peg$FAILED) {\\n        s1 = null;\\n      }\\n      if (s1 !== peg$FAILED) {\\n        s2 = peg$parse_();\\n        if (s2 !== peg$FAILED) {\\n          s3 = [];\\n          s4 = peg$parseoptionalFormatPattern();\\n          if (s4 !== peg$FAILED) {\\n            while (s4 !== peg$FAILED) {\\n              s3.push(s4);\\n              s4 = peg$parseoptionalFormatPattern();\\n            }\\n          } else {\\n            s3 = peg$FAILED;\\n          }\\n          if (s3 !== peg$FAILED) {\\n            peg$savedPos = s0;\\n            s1 = peg$c34(s1, s3);\\n            s0 = s1;\\n          } else {\\n            peg$currPos = s0;\\n            s0 = peg$FAILED;\\n          }\\n        } else {\\n          peg$currPos = s0;\\n          s0 = peg$FAILED;\\n        }\\n      } else {\\n        peg$currPos = s0;\\n        s0 = peg$FAILED;\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parsews() {\\n      var s0, s1;\\n\\n      peg$silentFails++;\\n      s0 = [];\\n      if (peg$c36.test(input.charAt(peg$currPos))) {\\n        s1 = input.charAt(peg$currPos);\\n        peg$currPos++;\\n      } else {\\n        s1 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\\n      }\\n      if (s1 !== peg$FAILED) {\\n        while (s1 !== peg$FAILED) {\\n          s0.push(s1);\\n          if (peg$c36.test(input.charAt(peg$currPos))) {\\n            s1 = input.charAt(peg$currPos);\\n            peg$currPos++;\\n          } else {\\n            s1 = peg$FAILED;\\n            if (peg$silentFails === 0) { peg$fail(peg$c37); }\\n          }\\n        }\\n      } else {\\n        s0 = peg$FAILED;\\n      }\\n      peg$silentFails--;\\n      if (s0 === peg$FAILED) {\\n        s1 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parse_() {\\n      var s0, s1, s2;\\n\\n      peg$silentFails++;\\n      s0 = peg$currPos;\\n      s1 = [];\\n      s2 = peg$parsews();\\n      while (s2 !== peg$FAILED) {\\n        s1.push(s2);\\n        s2 = peg$parsews();\\n      }\\n      if (s1 !== peg$FAILED) {\\n        s0 = input.substring(s0, peg$currPos);\\n      } else {\\n        s0 = s1;\\n      }\\n      peg$silentFails--;\\n      if (s0 === peg$FAILED) {\\n        s1 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parsedigit() {\\n      var s0;\\n\\n      if (peg$c39.test(input.charAt(peg$currPos))) {\\n        s0 = input.charAt(peg$currPos);\\n        peg$currPos++;\\n      } else {\\n        s0 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parsehexDigit() {\\n      var s0;\\n\\n      if (peg$c41.test(input.charAt(peg$currPos))) {\\n        s0 = input.charAt(peg$currPos);\\n        peg$currPos++;\\n      } else {\\n        s0 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parsenumber() {\\n      var s0, s1, s2, s3, s4, s5;\\n\\n      s0 = peg$currPos;\\n      if (input.charCodeAt(peg$currPos) === 48) {\\n        s1 = peg$c43;\\n        peg$currPos++;\\n      } else {\\n        s1 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\\n      }\\n      if (s1 === peg$FAILED) {\\n        s1 = peg$currPos;\\n        s2 = peg$currPos;\\n        if (peg$c45.test(input.charAt(peg$currPos))) {\\n          s3 = input.charAt(peg$currPos);\\n          peg$currPos++;\\n        } else {\\n          s3 = peg$FAILED;\\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\\n        }\\n        if (s3 !== peg$FAILED) {\\n          s4 = [];\\n          s5 = peg$parsedigit();\\n          while (s5 !== peg$FAILED) {\\n            s4.push(s5);\\n            s5 = peg$parsedigit();\\n          }\\n          if (s4 !== peg$FAILED) {\\n            s3 = [s3, s4];\\n            s2 = s3;\\n          } else {\\n            peg$currPos = s2;\\n            s2 = peg$FAILED;\\n          }\\n        } else {\\n          peg$currPos = s2;\\n          s2 = peg$FAILED;\\n        }\\n        if (s2 !== peg$FAILED) {\\n          s1 = input.substring(s1, peg$currPos);\\n        } else {\\n          s1 = s2;\\n        }\\n      }\\n      if (s1 !== peg$FAILED) {\\n        peg$savedPos = s0;\\n        s1 = peg$c47(s1);\\n      }\\n      s0 = s1;\\n\\n      return s0;\\n    }\\n\\n    function peg$parsechar() {\\n      var s0, s1, s2, s3, s4, s5, s6, s7;\\n\\n      if (peg$c48.test(input.charAt(peg$currPos))) {\\n        s0 = input.charAt(peg$currPos);\\n        peg$currPos++;\\n      } else {\\n        s0 = peg$FAILED;\\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\\n      }\\n      if (s0 === peg$FAILED) {\\n        s0 = peg$currPos;\\n        if (input.substr(peg$currPos, 2) === peg$c50) {\\n          s1 = peg$c50;\\n          peg$currPos += 2;\\n        } else {\\n          s1 = peg$FAILED;\\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\\n        }\\n        if (s1 !== peg$FAILED) {\\n          peg$savedPos = s0;\\n          s1 = peg$c52();\\n        }\\n        s0 = s1;\\n        if (s0 === peg$FAILED) {\\n          s0 = peg$currPos;\\n          if (input.substr(peg$currPos, 2) === peg$c53) {\\n            s1 = peg$c53;\\n            peg$currPos += 2;\\n          } else {\\n            s1 = peg$FAILED;\\n            if (peg$silentFails === 0) { peg$fail(peg$c54); }\\n          }\\n          if (s1 !== peg$FAILED) {\\n            peg$savedPos = s0;\\n            s1 = peg$c55();\\n          }\\n          s0 = s1;\\n          if (s0 === peg$FAILED) {\\n            s0 = peg$currPos;\\n            if (input.substr(peg$currPos, 2) === peg$c56) {\\n              s1 = peg$c56;\\n              peg$currPos += 2;\\n            } else {\\n              s1 = peg$FAILED;\\n              if (peg$silentFails === 0) { peg$fail(peg$c57); }\\n            }\\n            if (s1 !== peg$FAILED) {\\n              peg$savedPos = s0;\\n              s1 = peg$c58();\\n            }\\n            s0 = s1;\\n            if (s0 === peg$FAILED) {\\n              s0 = peg$currPos;\\n              if (input.substr(peg$currPos, 2) === peg$c59) {\\n                s1 = peg$c59;\\n                peg$currPos += 2;\\n              } else {\\n                s1 = peg$FAILED;\\n                if (peg$silentFails === 0) { peg$fail(peg$c60); }\\n              }\\n              if (s1 !== peg$FAILED) {\\n                peg$savedPos = s0;\\n                s1 = peg$c61();\\n              }\\n              s0 = s1;\\n              if (s0 === peg$FAILED) {\\n                s0 = peg$currPos;\\n                if (input.substr(peg$currPos, 2) === peg$c62) {\\n                  s1 = peg$c62;\\n                  peg$currPos += 2;\\n                } else {\\n                  s1 = peg$FAILED;\\n                  if (peg$silentFails === 0) { peg$fail(peg$c63); }\\n                }\\n                if (s1 !== peg$FAILED) {\\n                  s2 = peg$currPos;\\n                  s3 = peg$currPos;\\n                  s4 = peg$parsehexDigit();\\n                  if (s4 !== peg$FAILED) {\\n                    s5 = peg$parsehexDigit();\\n                    if (s5 !== peg$FAILED) {\\n                      s6 = peg$parsehexDigit();\\n                      if (s6 !== peg$FAILED) {\\n                        s7 = peg$parsehexDigit();\\n                        if (s7 !== peg$FAILED) {\\n                          s4 = [s4, s5, s6, s7];\\n                          s3 = s4;\\n                        } else {\\n                          peg$currPos = s3;\\n                          s3 = peg$FAILED;\\n                        }\\n                      } else {\\n                        peg$currPos = s3;\\n                        s3 = peg$FAILED;\\n                      }\\n                    } else {\\n                      peg$currPos = s3;\\n                      s3 = peg$FAILED;\\n                    }\\n                  } else {\\n                    peg$currPos = s3;\\n                    s3 = peg$FAILED;\\n                  }\\n                  if (s3 !== peg$FAILED) {\\n                    s2 = input.substring(s2, peg$currPos);\\n                  } else {\\n                    s2 = s3;\\n                  }\\n                  if (s2 !== peg$FAILED) {\\n                    peg$savedPos = s0;\\n                    s1 = peg$c64(s2);\\n                    s0 = s1;\\n                  } else {\\n                    peg$currPos = s0;\\n                    s0 = peg$FAILED;\\n                  }\\n                } else {\\n                  peg$currPos = s0;\\n                  s0 = peg$FAILED;\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n\\n      return s0;\\n    }\\n\\n    function peg$parsechars() {\\n      var s0, s1, s2;\\n\\n      s0 = peg$currPos;\\n      s1 = [];\\n      s2 = peg$parsechar();\\n      if (s2 !== peg$FAILED) {\\n        while (s2 !== peg$FAILED) {\\n          s1.push(s2);\\n          s2 = peg$parsechar();\\n        }\\n      } else {\\n        s1 = peg$FAILED;\\n      }\\n      if (s1 !== peg$FAILED) {\\n        peg$savedPos = s0;\\n        s1 = peg$c65(s1);\\n      }\\n      s0 = s1;\\n\\n      return s0;\\n    }\\n\\n    peg$result = peg$startRuleFunction();\\n\\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\\n      return peg$result;\\n    } else {\\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\\n        peg$fail({ type: \\\"end\\\", description: \\\"end of input\\\" });\\n      }\\n\\n      throw peg$buildException(\\n        null,\\n        peg$maxFailExpected,\\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\\n        peg$maxFailPos < input.length\\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\\n      );\\n    }\\n  }\\n\\n  return {\\n    SyntaxError: peg$SyntaxError,\\n    parse:       peg$parse\\n  };\\n})();\\n\\n//# sourceMappingURL=parser.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"peg$SyntaxError\",\"message\",\"expected\",\"found\",\"location\",\"name\",\"Error\",\"captureStackTrace\",\"peg$subclass\",\"child\",\"parent\",\"ctor\",\"constructor\",\"prototype\",\"SyntaxError\",\"parse\",\"peg$parse\",\"input\",\"peg$computeLocation\",\"peg$savedPos\",\"peg$currPos\",\"peg$computePosDetails\",\"pos\",\"details\",\"peg$posDetailsCache\",\"p\",\"line\",\"column\",\"seenCR\",\"ch\",\"charAt\",\"startPos\",\"endPos\",\"startPosDetails\",\"endPosDetails\",\"start\",\"offset\",\"end\",\"peg$fail\",\"peg$maxFailPos\",\"peg$maxFailExpected\",\"push\",\"peg$parsestart\",\"peg$parsemessageFormatPattern\",\"s0\",\"s2\",\"s1\",\"peg$parsemessageFormatElement\",\"peg$FAILED\",\"type\",\"elements\",\"s3\",\"peg$parse_\",\"s4\",\"peg$parsechars\",\"s5\",\"string\",\"innerLen\",\"i\",\"outerLen\",\"length\",\"inner\",\"j\",\"peg$parsews\",\"substring\",\"value\",\"charCodeAt\",\"peg$c5\",\"peg$silentFails\",\"peg$c6\",\"peg$parsenumber\",\"peg$c3\",\"test\",\"peg$c4\",\"s6\",\"peg$c7\",\"peg$c8\",\"s7\",\"substr\",\"peg$c12\",\"peg$c13\",\"peg$c14\",\"peg$c15\",\"peg$c16\",\"peg$c17\",\"style\",\"peg$c19\",\"peg$c20\",\"peg$parsepluralStyle\",\"ordinal\",\"options\",\"peg$c22\",\"peg$c23\",\"peg$c25\",\"peg$c26\",\"peg$parseoptionalFormatPattern\",\"s8\",\"peg$c9\",\"peg$c10\",\"id\",\"format\",\"peg$c28\",\"peg$c29\",\"selector\",\"peg$c31\",\"peg$c32\",\"peg$c36\",\"peg$c37\",\"peg$c35\",\"peg$c38\",\"peg$parsedigit\",\"peg$c39\",\"peg$c40\",\"peg$parsehexDigit\",\"peg$c41\",\"peg$c42\",\"peg$c43\",\"peg$c44\",\"peg$c45\",\"peg$c46\",\"parseInt\",\"peg$parsechar\",\"peg$c48\",\"peg$c49\",\"peg$c50\",\"peg$c51\",\"peg$c53\",\"peg$c54\",\"peg$c56\",\"peg$c57\",\"peg$c59\",\"peg$c60\",\"peg$c62\",\"peg$c63\",\"String\",\"fromCharCode\",\"join\",\"arguments\",\"peg$startRuleFunctions\",\"peg$startRuleFunction\",\"description\",\"startRule\",\"peg$result\",\"peg$buildException\",\"cleanupExpected\",\"sort\",\"a\",\"b\",\"splice\",\"buildMessage\",\"stringEscape\",\"s\",\"hex\",\"toString\",\"toUpperCase\",\"replace\",\"expectedDescs\",\"Array\",\"expectedDesc\",\"slice\",\"foundDesc\"]\n}\n"]